WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
#  echo NNN > process_follow_pid

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
#  echo 0 > process_trace_{syscalls,signals,lifecycle}

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
#  echo NNN > process_trace_uid_filter # -1: unrestricted 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
#  echo ls > process_trace_taskcomm_filter # empty: unrestricted

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
#  echo process > current_tracer

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
#  cat trace

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
#  echo nop > current_tracer

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#62: 
Signed-off-By: Frank Ch. Eigler <fche@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#73: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#78: FILE: include/linux/processtrace.h:1:
+#ifndef PROCESSTRACE_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#115: FILE: include/linux/processtrace.h:38:
+extern void enable_process_trace(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#116: FILE: include/linux/processtrace.h:39:
+extern void disable_process_trace(void);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#127: FILE: kernel/trace/Kconfig:152:
+config PROCESS_TRACER
+	bool "Trace process events via utrace"
+	depends on DEBUG_KERNEL
+	select TRACING
+	select UTRACE
+	help
+	  This tracer provides trace records from process events
+	  accessible to utrace: lifecycle, system calls, and signals.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#184: FILE: kernel/trace/trace.h:158:
+	unsigned		line;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#271: FILE: kernel/trace/trace_process.c:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#298: FILE: kernel/trace/trace_process.c:28:
+/* A process must be a direct child of given pid in order to be
+   followed. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#298: FILE: kernel/trace/trace_process.c:28:
+   followed. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#303: FILE: kernel/trace/trace_process.c:33:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#310: FILE: kernel/trace/trace_process.c:40:
+	pr_debug("in %s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#316: FILE: kernel/trace/trace_process.c:46:
+	pr_debug("in %s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#325: FILE: kernel/trace/trace_process.c:55:
+	pr_debug("in %s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#333: FILE: kernel/trace/trace_process.c:63:
+	pr_debug("in %s\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#338: FILE: kernel/trace/trace_process.c:68:
+static void __trace_processtrace(struct trace_array *tr,
+				struct trace_array_cpu *data,

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#353: FILE: kernel/trace/trace_process.c:83:
+	strlcpy(ent->comm, current->comm, TASK_COMM_LEN);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#371: FILE: kernel/trace/trace_process.c:101:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#377: FILE: kernel/trace/trace_process.c:107:
+	struct trace_seq *s = &iter->seq;
+	pr_debug("in %s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#377: FILE: kernel/trace/trace_process.c:107:
+	pr_debug("in %s\n", __func__);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#386: FILE: kernel/trace/trace_process.c:116:
+static ssize_t process_read(struct trace_iterator *iter, struct file *filp,
                                                                       ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#387: FILE: kernel/trace/trace_process.c:117:
+static ssize_t process_read(struct trace_iterator *iter, struct file *filp,
+				char __user *ubuf, size_t cnt, loff_t *ppos)

WARNING:LINE_SPACING: Missing a blank line after declarations
#391: FILE: kernel/trace/trace_process.c:121:
+	struct trace_seq *s = &iter->seq;
+	ret = trace_seq_to_user(s, ubuf, cnt);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#402: FILE: kernel/trace/trace_process.c:132:
+	unsigned secs		= (unsigned long)t;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#408: FILE: kernel/trace/trace_process.c:138:
+	/* XXX: If print_lat_fmt() were not static, we wouldn't have
+	   to duplicate this. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#408: FILE: kernel/trace/trace_process.c:138:
+	   to duplicate this. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#459: FILE: kernel/trace/trace_process.c:189:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#481: FILE: kernel/trace/trace_process.c:211:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#486: FILE: kernel/trace/trace_process.c:216:
+/* Should tracing apply to given task?	Compare against filter
+   values. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#486: FILE: kernel/trace/trace_process.c:216:
+   values. */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#490: FILE: kernel/trace/trace_process.c:220:
+	if (trace_taskcomm_filter[0]
+	    && strncmp(trace_taskcomm_filter, tsk->comm, TASK_COMM_LEN))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#494: FILE: kernel/trace/trace_process.c:224:
+	if (trace_taskuid_filter != (u32)-1
+	    && trace_taskuid_filter != task_uid(tsk))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#500: FILE: kernel/trace/trace_process.c:230:
+
+

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#507: FILE: kernel/trace/trace_process.c:237:
+	pr_debug("in %s\n", __func__);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'engine == NULL'
#512: FILE: kernel/trace/trace_process.c:242:
+	if (IS_ERR(engine) || (engine == NULL)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!engine"
#512: FILE: kernel/trace/trace_process.c:242:
+	if (IS_ERR(engine) || (engine == NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#525: FILE: kernel/trace/trace_process.c:255:
+		/* Penalizing events are individually controlled, so that
+		   utrace doesn't even take the monitored threads off their

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#526: FILE: kernel/trace/trace_process.c:256:
+		   fast paths, nor bother call our callbacks. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#544: FILE: kernel/trace/trace_process.c:274:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#553: FILE: kernel/trace/trace_process.c:283:
+		struct process_trace_entry ent;
+		ent.opcode = _UTRACE_EVENT_CLONE;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#564: FILE: kernel/trace/trace_process.c:294:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#572: FILE: kernel/trace/trace_process.c:302:
+		struct process_trace_entry ent;
+		ent.opcode = _UTRACE_EVENT_SYSCALL_ENTRY;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#582: FILE: kernel/trace/trace_process.c:312:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#584: FILE: kernel/trace/trace_process.c:314:
+u32 process_trace_report_syscall_exit(enum utrace_resume_action action,
+				   struct utrace_attached_engine *engine,

WARNING:LINE_SPACING: Missing a blank line after declarations
#590: FILE: kernel/trace/trace_process.c:320:
+		struct process_trace_entry ent;
+		ent.opcode = _UTRACE_EVENT_SYSCALL_EXIT;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#599: FILE: kernel/trace/trace_process.c:329:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#609: FILE: kernel/trace/trace_process.c:339:
+		struct process_trace_entry ent;
+		ent.opcode = _UTRACE_EVENT_EXEC;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#618: FILE: kernel/trace/trace_process.c:348:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#629: FILE: kernel/trace/trace_process.c:359:
+		struct process_trace_entry ent;
+		ent.opcode = _UTRACE_EVENT_SIGNAL;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#641: FILE: kernel/trace/trace_process.c:371:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#649: FILE: kernel/trace/trace_process.c:379:
+		struct process_trace_entry ent;
+		ent.opcode = _UTRACE_EVENT_EXIT;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#659: FILE: kernel/trace/trace_process.c:389:
+
+

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void enable_process_trace() should probably be void enable_process_trace(void)
#660: FILE: kernel/trace/trace_process.c:390:
+void enable_process_trace()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#664: FILE: kernel/trace/trace_process.c:394:
+	pr_debug("in %s\n", __func__);

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void disable_process_trace() should probably be void disable_process_trace(void)
#682: FILE: kernel/trace/trace_process.c:412:
+void disable_process_trace()

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#688: FILE: kernel/trace/trace_process.c:418:
+	pr_debug("in %s\n", __func__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#692: FILE: kernel/trace/trace_process.c:422:
+		/* Find matching engine, if any.  Returns -ENOENT for
+		   unattached threads. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#692: FILE: kernel/trace/trace_process.c:422:
+		   unattached threads. */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!engine"
#699: FILE: kernel/trace/trace_process.c:429:
+		} else if (engine == NULL) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#725: FILE: kernel/trace/trace_process.c:455:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#735: FILE: kernel/trace/trace_process.c:465:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#739: FILE: kernel/trace/trace_process.c:469:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#741: FILE: kernel/trace/trace_process.c:471:
+trace_taskcomm_filter_read(struct file *filp, char __user *ubuf,
                                         ^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#748: FILE: kernel/trace/trace_process.c:478:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#750: FILE: kernel/trace/trace_process.c:480:
+trace_taskcomm_filter_write(struct file *filp, const char __user *ubuf,
                                          ^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#771: FILE: kernel/trace/trace_process.c:501:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#778: FILE: kernel/trace/trace_process.c:508:
+
+

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#793: FILE: kernel/trace/trace_process.c:523:
+	"#  echo NNN > process_trace_uid_filter # -1: unrestricted \n"

CHECK:LINE_SPACING: Please don't use multiple blank lines
#811: FILE: kernel/trace/trace_process.c:541:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000163816.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 45 warnings, 29 checks, 753 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000163816.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
