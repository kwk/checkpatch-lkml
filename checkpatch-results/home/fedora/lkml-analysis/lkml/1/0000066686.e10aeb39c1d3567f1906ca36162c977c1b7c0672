WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#64: FILE: drivers/staging/comedi/drivers/adl_pci6208.c:150:
+	printk(KERN_INFO "comedi%d: pci6208: ", dev->minor);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#73: FILE: drivers/staging/comedi/drivers/adl_pci6208.c:209:
+	printk(KERN_INFO "comedi%d: pci6208: remove\n", dev->minor);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#135: FILE: drivers/staging/comedi/drivers/adl_pci6208.c:259:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bus != 0'
#144: FILE: drivers/staging/comedi/drivers/adl_pci6208.c:268:
+			if ((bus != 0) || (slot != 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'slot != 0'
#144: FILE: drivers/staging/comedi/drivers/adl_pci6208.c:268:
+			if ((bus != 0) || (slot != 0)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#183: FILE: drivers/staging/comedi/drivers/adl_pci6208.c:291:
+			if (bnum)
[...]
+			else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#185: FILE: drivers/staging/comedi/drivers/adl_pci6208.c:293:
+			else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#186: FILE: drivers/staging/comedi/drivers/adl_pci6208.c:294:
+				printk(KERN_INFO "comedi%d: no supported board found! (req. bus/slot : %d/%d)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#199: FILE: drivers/staging/comedi/drivers/adl_pci6208.c:300:
+	printk(KERN_INFO "comedi%d: found %s (b:s:f=%d:%d:%d) , irq=%d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#212: FILE: drivers/staging/comedi/drivers/adl_pci6208.c:325:
+		printk(KERN_INFO "comedi%d: Failed to enable PCI device and request regions\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#213: FILE: drivers/staging/comedi/drivers/adl_pci6208.c:326:
+		printk(KERN_INFO "comedi%d: Failed to enable PCI device and request regions\n",
 		     dev_minor);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#222: FILE: drivers/staging/comedi/drivers/adl_pci6208.c:333:
+	printk(KERN_INFO "comedi%d: local config registers at address 0x%4lx [0x%4lx]\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#230: FILE: drivers/staging/comedi/drivers/adl_pci6208.c:340:
+	printk(KERN_INFO "comedi%d: 6208 registers at address 0x%4lx [0x%4lx]\n",

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000066686.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 6 checks, 181 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000066686.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
