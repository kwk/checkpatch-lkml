WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#36: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#41: FILE: fs/unionfs/rename.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#86: FILE: fs/unionfs/rename.c:46:
+			printk(KERN_ERR "unionfs: error creating directory "

WARNING:SPLIT_STRING: quoted string split across lines
#87: FILE: fs/unionfs/rename.c:47:
+			printk(KERN_ERR "unionfs: error creating directory "
+			       "tree for rename, bindex=%d err=%d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LIKELY_MISUSE: nested (un)?likely() calls, IS_ERR already uses unlikely() internally
#95: FILE: fs/unionfs/rename.c:55:
+	if (unlikely(IS_ERR(wh_name))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#111: FILE: fs/unionfs/rename.c:71:
+			printk(KERN_ERR "unionfs: both a whiteout and a "

WARNING:SPLIT_STRING: quoted string split across lines
#112: FILE: fs/unionfs/rename.c:72:
+			printk(KERN_ERR "unionfs: both a whiteout and a "
+			       "dentry exist when doing a rename!\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#147: FILE: fs/unionfs/rename.c:107:
+		char *whname;
+		whname = alloc_whname(old_dentry->d_name.name,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LIKELY_MISUSE: nested (un)?likely() calls, IS_ERR already uses unlikely() internally
#150: FILE: fs/unionfs/rename.c:110:
+		if (unlikely(IS_ERR(whname)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'old_bstart != old_bend'
#304: FILE: fs/unionfs/rename.c:264:
+	if ((old_bstart != old_bend) || (do_copyup != -1)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#306: FILE: fs/unionfs/rename.c:266:
+		struct nameidata nd;
 		                 ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#307: FILE: fs/unionfs/rename.c:267:
+		struct nameidata nd;
+		if (!wh_old || wh_old->d_inode || bwh_old < 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#308: FILE: fs/unionfs/rename.c:268:
+			printk(KERN_ERR "unionfs: rename error "

WARNING:SPLIT_STRING: quoted string split across lines
#309: FILE: fs/unionfs/rename.c:269:
+			printk(KERN_ERR "unionfs: rename error "
+			       "(wh_old=%p/%p bwh_old=%d)\n", wh_old,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#314: FILE: fs/unionfs/rename.c:274:
+		err = init_lower_nd(&nd, LOOKUP_CREATE);
 		                     ^^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#318: FILE: fs/unionfs/rename.c:278:
+		local_err = vfs_create(lower_parent->d_inode, wh_old, S_IRUGO,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#319: FILE: fs/unionfs/rename.c:279:
+				       &nd);
 				        ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#328: FILE: fs/unionfs/rename.c:288:
+			printk(KERN_ERR "unionfs: can't create a whiteout for "

WARNING:SPLIT_STRING: quoted string split across lines
#329: FILE: fs/unionfs/rename.c:289:
+			printk(KERN_ERR "unionfs: can't create a whiteout for "
+			       "the source in rename!\n");

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#332: FILE: fs/unionfs/rename.c:292:
+		release_lower_nd(&nd, local_err);
 		                  ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#343: FILE: fs/unionfs/rename.c:303:
+		printk(KERN_ERR "unionfs: revert failed in rename: "

WARNING:SPLIT_STRING: quoted string split across lines
#344: FILE: fs/unionfs/rename.c:304:
+		printk(KERN_ERR "unionfs: revert failed in rename: "
+		       "the new refresh failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#350: FILE: fs/unionfs/rename.c:310:
+		printk(KERN_ERR "unionfs: revert failed in rename: "

WARNING:SPLIT_STRING: quoted string split across lines
#351: FILE: fs/unionfs/rename.c:311:
+		printk(KERN_ERR "unionfs: revert failed in rename: "
+		       "the old refresh failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#358: FILE: fs/unionfs/rename.c:318:
+		printk(KERN_ERR "unionfs: revert failed in rename: "

WARNING:SPLIT_STRING: quoted string split across lines
#359: FILE: fs/unionfs/rename.c:319:
+		printk(KERN_ERR "unionfs: revert failed in rename: "
+		       "the object disappeared from under us!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#366: FILE: fs/unionfs/rename.c:326:
+		printk(KERN_ERR "unionfs: revert failed in rename: "

WARNING:SPLIT_STRING: quoted string split across lines
#367: FILE: fs/unionfs/rename.c:327:
+		printk(KERN_ERR "unionfs: revert failed in rename: "
+		       "the object was created underneath us!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#377: FILE: fs/unionfs/rename.c:337:
+		printk(KERN_ERR "unionfs: revert failed in rename!\n");

WARNING:LIKELY_MISUSE: nested (un)?likely() calls, IS_ERR already uses unlikely() internally
#401: FILE: fs/unionfs/rename.c:361:
+	if (unlikely(IS_ERR(whname)))

WARNING:LINE_SPACING: Missing a blank line after declarations
#547: FILE: fs/unionfs/rename.c:507:
+			struct inode *inode;
+			inode = unionfs_lower_inode(old_dentry->d_inode);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000338335.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 31 warnings, 1 checks, 531 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000338335.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
