WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
      libfc: when rport goes away (re-plogi), clean up exchanges to/from rport

WARNING:TYPO_SPELLING: 'recevied' may be misspelled - perhaps 'received'?
#93: 
      libfc: do not change the fh_rx_id of a recevied frame
                                             ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'tranport' may be misspelled - perhaps 'transport'?
#317: FILE: drivers/scsi/fcoe/fc_transport_fcoe.c:268:
+ * fcoe_transport_unregister() - Remove the tranport fro the fcoe transports list
                                             ^^^^^^^^

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void fcoe_dev_setup() should probably be void fcoe_dev_setup(void)
#971: FILE: drivers/scsi/fcoe/libfcoe.c:799:
+static void fcoe_dev_setup()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#1214: FILE: drivers/scsi/fcoe/libfcoe.c:1172:
+static inline struct Scsi_Host *

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:TYPO_SPELLING: 'Reveive' may be misspelled - perhaps 'Receive'?
#1806: FILE: drivers/scsi/libfc/fc_fcp.c:643:
+ * fc_fcp_recv() - Reveive FCP frames
                    ^^^^^^^

WARNING:TYPO_SPELLING: 'commads' may be misspelled - perhaps 'commands'?
#1827: FILE: drivers/scsi/libfc/fc_fcp.c:902:
+ * fc_fcp_cleanup_each_cmd() - Cleanup active commads
                                               ^^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'fsp->cdb_status == 0'
#1863: FILE: drivers/scsi/libfc/fc_fcp.c:1812:
+		if ((fsp->cdb_status == 0) && !(fsp->req_flags & FC_SRB_READ)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: Unbalanced braces around else statement
#2544: FILE: drivers/scsi/libfc/fc_rport.c:284:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#2995: FILE: drivers/scsi/qla2xxx/qla_attr.c:300:
+		else if (IS_QLA25XX(ha) || IS_QLA81XX(ha))
 		    valid = 1;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 31)
#3064: FILE: drivers/scsi/qla2xxx/qla_init.c:3316:
+			list_for_each_entry_safe(vp, tvp, &ha->vp_list, list)
 			       qla2x00_mark_all_devices_lost(vp, 0);

WARNING:TYPO_SPELLING: 'infomation' may be misspelled - perhaps 'information'?
#3344: FILE: include/scsi/libfc.h:411:
+	 * Send an ELS response using infomation from a previous
 	                              ^^^^^^^^^^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fc_lport *' should also have an identifier name
#3403: FILE: include/scsi/libfc.h:473:
+	void (*exch_mgr_reset)(struct fc_lport *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fc_disc_port *' should also have an identifier name
#3437: FILE: include/scsi/libfc.h:501:
+	struct fc_rport *(*rport_create)(struct fc_disc_port *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct fc_lport *' should also have an identifier name
#3475: FILE: include/scsi/libfc.h:537:
+	struct fc_rport *(*rport_lookup)(const struct fc_lport *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#3475: FILE: include/scsi/libfc.h:537:
+	struct fc_rport *(*rport_lookup)(const struct fc_lport *, u32);

WARNING:TYPO_SPELLING: 'durring' may be misspelled - perhaps 'during'?
#3491: FILE: include/scsi/libfc.h:552:
+	 * Cleanup the FCP layer, used durring link down and reset
 	                               ^^^^^^^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fc_lport *' should also have an identifier name
#3627: FILE: include/scsi/libfc.h:941:
+void fc_exch_mgr_reset(struct fc_lport *, u32 s_id, u32 d_id);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000155154.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 14 warnings, 3 checks, 3201 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000155154.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
