WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
> On Sat, 13 Feb 2010 11:49:09 +0900 FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> wrote:

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ADDR_NAME' may be better as '(ADDR_NAME)' to avoid precedence issues
#178: FILE: include/linux/dma-mapping.h:246:
+#define dma_unmap_addr(PTR, ADDR_NAME)           ((PTR)->ADDR_NAME)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ADDR_NAME' may be better as '(ADDR_NAME)' to avoid precedence issues
#179: FILE: include/linux/dma-mapping.h:247:
+#define dma_unmap_addr_set(PTR, ADDR_NAME, VAL)  (((PTR)->ADDR_NAME) = (VAL))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'LEN_NAME' may be better as '(LEN_NAME)' to avoid precedence issues
#180: FILE: include/linux/dma-mapping.h:248:
+#define dma_unmap_len(PTR, LEN_NAME)             ((PTR)->LEN_NAME)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'LEN_NAME' may be better as '(LEN_NAME)' to avoid precedence issues
#181: FILE: include/linux/dma-mapping.h:249:
+#define dma_unmap_len_set(PTR, LEN_NAME, VAL)    (((PTR)->LEN_NAME) = (VAL))

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#215: FILE: include/linux/pci-dma.h:4:
+#define DECLARE_PCI_UNMAP_ADDR(ADDR_NAME) DEFINE_DMA_UNMAP_ADDR(ADDR_NAME);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#216: FILE: include/linux/pci-dma.h:5:
+#define DECLARE_PCI_UNMAP_LEN(LEN_NAME)   DEFINE_DMA_UNMAP_LEN(LEN_NAME);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000012301.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 4 checks, 110 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000012301.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
