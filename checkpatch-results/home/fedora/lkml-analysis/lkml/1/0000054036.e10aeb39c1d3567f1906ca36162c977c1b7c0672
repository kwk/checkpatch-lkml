CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#124: FILE: arch/x86/include/asm/processor.h:175:
+extern void print_cache_info(struct cpuinfo_x86 *, char *msglvl);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cpuinfo_x86 *' should also have an identifier name
#124: FILE: arch/x86/include/asm/processor.h:175:
+extern void print_cache_info(struct cpuinfo_x86 *, char *msglvl);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#135: FILE: arch/x86/kernel/cpu/addon_cpuid_features.c:131:
+	printk(KERN_DEBUG  "CPU: Physical Processor ID: %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#139: FILE: arch/x86/kernel/cpu/addon_cpuid_features.c:134:
+		printk(KERN_DEBUG  "CPU: Processor Core ID: %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#150: FILE: arch/x86/kernel/cpu/amd.c:379:
+	printk(KERN_DEBUG "CPU %d/0x%x -> Node %d\n", cpu, apicid, node);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#161: FILE: arch/x86/kernel/cpu/common.c:478:
+		printk(KERN_DEBUG  "CPU: Physical Processor ID: %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#164: FILE: arch/x86/kernel/cpu/common.c:480:
+		printk(KERN_DEBUG  "CPU: Processor Core ID: %d\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#175: FILE: arch/x86/kernel/cpu/common.c:973:
+		printk("%sCPU: L1 I cache: %dK", lvl, c->l1i);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#178: FILE: arch/x86/kernel/cpu/common.c:976:
+		printk(KERN_CONT ", L1 D cache: %dK\n", c->l1d);

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#178: FILE: arch/x86/kernel/cpu/common.c:976:
+		printk(KERN_CONT ", L1 D cache: %dK\n", c->l1d);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#180: FILE: arch/x86/kernel/cpu/common.c:978:
+		printk(KERN_CONT "\n");

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#180: FILE: arch/x86/kernel/cpu/common.c:978:
+		printk(KERN_CONT "\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#183: FILE: arch/x86/kernel/cpu/common.c:981:
+		printk("%sCPU: L2 cache: %dK\n", lvl, c->l2);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#186: FILE: arch/x86/kernel/cpu/common.c:984:
+		printk("%sCPU: L3 cache: %dK\n", lvl, c->l3);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#197: FILE: arch/x86/kernel/cpu/common.c:1135:
+	printk(KERN_DEBUG "Initializing CPU#%d\n", cpu);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#208: FILE: arch/x86/kernel/cpu/intel.c:270:
+	printk(KERN_DEBUG "CPU %d/0x%x -> Node %d\n", cpu, apicid, node);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#232: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:492:
+		printk(KERN_DEBUG "CPU: Trace cache: %dK uops", trace);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#241: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:501:
+	print_cache_info(c,
+		system_state == SYSTEM_BOOTING? KERN_DEBUG : KERN_INFO);

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#241: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:501:
+		system_state == SYSTEM_BOOTING? KERN_DEBUG : KERN_INFO);
 		                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#259: FILE: arch/x86/kernel/smpboot.c:452:
+	if (!alloc_cpumask_var(&cpulist, GFP_KERNEL))
[...]
+	else if (!alloc_cpumask_var(&cpusdone, GFP_KERNEL)) {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#268: FILE: arch/x86/kernel/smpboot.c:461:
+		printk(KERN_INFO "Can't print processor summaries\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#309: FILE: arch/x86/kernel/smpboot.c:502:
+^I^I^I    ^Icontinue;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#309: FILE: arch/x86/kernel/smpboot.c:502:
+^I^I^I    ^Icontinue;$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#322: FILE: arch/x86/kernel/smpboot.c:515:
+		printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#325: FILE: arch/x86/kernel/smpboot.c:518:
+		printk(KERN_INFO);

WARNING:UNNECESSARY_KERN_LEVEL: Possible unnecessary KERN_INFO
#327: FILE: arch/x86/kernel/smpboot.c:520:
+		print_cache_info(c, KERN_INFO);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#329: FILE: arch/x86/kernel/smpboot.c:522:
+		printk(KERN_INFO "MIN %lu.%02lu BogoMIPS (lpj=%lu)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#330: FILE: arch/x86/kernel/smpboot.c:523:
+		printk(KERN_INFO "MIN %lu.%02lu BogoMIPS (lpj=%lu)\n",
+			minlpj/(500000/HZ), (minlpj/(5000/HZ)) % 100, minlpj);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#330: FILE: arch/x86/kernel/smpboot.c:523:
+			minlpj/(500000/HZ), (minlpj/(5000/HZ)) % 100, minlpj);
 			      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#330: FILE: arch/x86/kernel/smpboot.c:523:
+			minlpj/(500000/HZ), (minlpj/(5000/HZ)) % 100, minlpj);
 			              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#330: FILE: arch/x86/kernel/smpboot.c:523:
+			minlpj/(500000/HZ), (minlpj/(5000/HZ)) % 100, minlpj);
 			                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#330: FILE: arch/x86/kernel/smpboot.c:523:
+			minlpj/(500000/HZ), (minlpj/(5000/HZ)) % 100, minlpj);
 			                                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#332: FILE: arch/x86/kernel/smpboot.c:525:
+		printk(KERN_INFO "MAX %lu.%02lu BogoMIPS (lpj=%lu)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#333: FILE: arch/x86/kernel/smpboot.c:526:
+		printk(KERN_INFO "MAX %lu.%02lu BogoMIPS (lpj=%lu)\n",
+			maxlpj/(500000/HZ), (maxlpj/(5000/HZ)) % 100, maxlpj);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#333: FILE: arch/x86/kernel/smpboot.c:526:
+			maxlpj/(500000/HZ), (maxlpj/(5000/HZ)) % 100, maxlpj);
 			      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#333: FILE: arch/x86/kernel/smpboot.c:526:
+			maxlpj/(500000/HZ), (maxlpj/(5000/HZ)) % 100, maxlpj);
 			              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#333: FILE: arch/x86/kernel/smpboot.c:526:
+			maxlpj/(500000/HZ), (maxlpj/(5000/HZ)) % 100, maxlpj);
 			                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#333: FILE: arch/x86/kernel/smpboot.c:526:
+			maxlpj/(500000/HZ), (maxlpj/(5000/HZ)) % 100, maxlpj);
 			                                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#378: FILE: arch/x86/kernel/smpboot.c:793:
+				printk(KERN_INFO "Booting Processors %s,", buf);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#381: FILE: arch/x86/kernel/smpboot.c:796:
+					printk(KERN_CONT " Node %d\n", node);

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#381: FILE: arch/x86/kernel/smpboot.c:796:
+					printk(KERN_CONT " Node %d\n", node);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#383: FILE: arch/x86/kernel/smpboot.c:798:
+					printk(KERN_CONT " Nodes %d-%d\n",

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#383: FILE: arch/x86/kernel/smpboot.c:798:
+					printk(KERN_CONT " Nodes %d-%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#384: FILE: arch/x86/kernel/smpboot.c:799:
+					printk(KERN_CONT " Nodes %d-%d\n",
+						node, last_node);

CHECK:BRACES: braces {} should be used on all arms of this statement
#400: FILE: arch/x86/kernel/smpboot.c:872:
+	if (system_state == SYSTEM_BOOTING) {
[...]
+	} else
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#402: FILE: arch/x86/kernel/smpboot.c:874:
+		printk(KERN_DEBUG);

CHECK:BRACES: Unbalanced braces around else statement
#403: FILE: arch/x86/kernel/smpboot.c:875:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#404: FILE: arch/x86/kernel/smpboot.c:876:
+		printk(KERN_INFO);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#406: FILE: arch/x86/kernel/smpboot.c:878:
+	printk(KERN_CONT "Booting processor %d APIC 0x%x ip 0x%lx\n",

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#406: FILE: arch/x86/kernel/smpboot.c:878:
+	printk(KERN_CONT "Booting processor %d APIC 0x%x ip 0x%lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#407: FILE: arch/x86/kernel/smpboot.c:879:
+	printk(KERN_CONT "Booting processor %d APIC 0x%x ip 0x%lx\n",
+		cpu, apicid, start_ip);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#416: FILE: arch/x86/kernel/smpboot.c:931:
+			printk(KERN_DEBUG "CPU%d: ", cpu);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#436: FILE: arch/x86/kernel/smpboot.c:1445:
+				printk(KERN_INFO);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#438: FILE: arch/x86/kernel/smpboot.c:1447:
+				printk(KERN_DEBUG);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#440: FILE: arch/x86/kernel/smpboot.c:1449:
+			printk(KERN_CONT "CPU %d is now offline\n", cpu);

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#440: FILE: arch/x86/kernel/smpboot.c:1449:
+			printk(KERN_CONT "CPU %d is now offline\n", cpu);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#451: FILE: kernel/cpu.c:397:
+			printk(KERN_DEBUG "CPU%d is down\n", cpu);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000054036.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 38 warnings, 17 checks, 315 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000054036.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
