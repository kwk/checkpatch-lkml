WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#50: 
> So I would suspect that if you guys actually write a patch, and make sure=

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#89: FILE: arch/x86/mm/Makefile:2:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#111: FILE: arch/x86/mm/init_32.c:358:
 }
+#ifdef CONFIG_HIGHMEM

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#124: FILE: arch/x86/mm/iomap_32.c:440:
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#129: FILE: arch/x86/mm/iomap_32.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#143: FILE: arch/x86/mm/iomap_32.c:15:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#144: FILE: arch/x86/mm/iomap_32.c:16:
+ * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#160: FILE: arch/x86/mm/iomap_32.c:32:
+	idx =3D type + KM_TYPE_NR*smp_processor_id();
 	    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#160: FILE: arch/x86/mm/iomap_32.c:32:
+	idx =3D type + KM_TYPE_NR*smp_processor_id();
 	                         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#161: FILE: arch/x86/mm/iomap_32.c:33:
+	vaddr =3D __fix_to_virt(FIX_KMAP_BEGIN + idx);
 	      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#162: FILE: arch/x86/mm/iomap_32.c:34:
+	set_pte(kmap_pte-idx, pfn_pte(pfn, prot));
 	                ^

CHECK:SPACING: No space is necessary after a cast
#165: FILE: arch/x86/mm/iomap_32.c:37:
+	return (void*) vaddr;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#165: FILE: arch/x86/mm/iomap_32.c:37:
+	return (void*) vaddr;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#172: FILE: arch/x86/mm/iomap_32.c:44:
+	unsigned long vaddr =3D (unsigned long) kvaddr & PAGE_MASK;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#172: FILE: arch/x86/mm/iomap_32.c:44:
+	unsigned long vaddr =3D (unsigned long) kvaddr & PAGE_MASK;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#172: FILE: arch/x86/mm/iomap_32.c:44:
+	unsigned long vaddr =3D (unsigned long) kvaddr & PAGE_MASK;
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#173: FILE: arch/x86/mm/iomap_32.c:45:
+	enum fixed_addresses idx =3D type + KM_TYPE_NR*smp_processor_id();
 	                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#173: FILE: arch/x86/mm/iomap_32.c:45:
+	enum fixed_addresses idx =3D type + KM_TYPE_NR*smp_processor_id();
 	                                              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#181: FILE: arch/x86/mm/iomap_32.c:53:
+	if (vaddr =3D=3D __fix_to_virt(FIX_KMAP_BEGIN+idx))
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#181: FILE: arch/x86/mm/iomap_32.c:53:
+	if (vaddr =3D=3D __fix_to_virt(FIX_KMAP_BEGIN+idx))
 	             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#181: FILE: arch/x86/mm/iomap_32.c:53:
+	if (vaddr =3D=3D __fix_to_virt(FIX_KMAP_BEGIN+idx))
 	                                             ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#181: FILE: arch/x86/mm/iomap_32.c:53:
+	if (vaddr =3D=3D __fix_to_virt(FIX_KMAP_BEGIN+idx))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#182: FILE: arch/x86/mm/iomap_32.c:54:
+		kpte_clear_flush(kmap_pte-idx, vaddr);
 		                         ^

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#263: FILE: include/asm-x86/iomap.h:37:
+++ b/include/asm-x86/iomap.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#265: FILE: include/asm-x86/iomap.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#279: FILE: include/asm-x86/iomap.h:15:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#280: FILE: include/asm-x86/iomap.h:16:
+ * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#286: FILE: include/asm-x86/iomap.h:22:
+#include <asm/cacheflush.h>

WARNING:INCLUDE_LINUX: Use #include <linux/pgtable.h> instead of <asm/pgtable.h>
#287: FILE: include/asm-x86/iomap.h:23:
+#include <asm/pgtable.h>

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#291: FILE: include/asm-x86/iomap.h:27:
+iomap_atomic_prot_pfn(unsigned long pfn, enum km_type type, pgprot_t prot)=
                                                                           ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000212801.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 14 errors, 8 warnings, 8 checks, 221 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000212801.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
