CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#104: FILE: mm/mmap.c:1129:
+		vma = vma_merge(mm, prev, addr, addr + len, vm_flags,
+					NULL, NULL, pgoff, NULL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#123: FILE: mm/mmap.c:1218:
+		int nr_pages = mlock_vma_pages_range(vma, addr, addr + len);
+		if (nr_pages < 0)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#138: FILE: mm/mmap.c:1696:
+		int nr_pages = mlock_vma_pages_range(prev, addr, prev->vm_end);
+		if (nr_pages < 0)

WARNING:LINE_SPACING: Missing a blank line after declarations
#152: FILE: mm/mmap.c:1726:
+		int nr_pages = mlock_vma_pages_range(vma, addr, start);
+		if (nr_pages < 0)

WARNING:LINE_SPACING: Missing a blank line after declarations
#166: FILE: mm/mmap.c:1917:
+		struct vm_area_struct *tmp = vma;
+		while (tmp && tmp->vm_start < end) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#184: FILE: mm/mmap.c:2037:
+	vma = vma_merge(mm, prev, addr, addr + len, flags,
+					NULL, NULL, pgoff, NULL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#196: FILE: mm/mmap.c:2061:
+		int nr_pages = mlock_vma_pages_range(vma, addr, addr + len);
+		if (nr_pages >= 0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#224: FILE: mm/mmap.c:2091:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#248: FILE: mm/mremap.c:238:
+			mlock_vma_pages_range(new_vma, new_addr + old_len,
+						       new_addr + new_len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#258: FILE: mm/mremap.c:379:
+				mlock_vma_pages_range(vma, addr + old_len,
 						   addr + new_len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#320: FILE: mm/mlock.c:361:
+void munlock_vma_pages_range(struct vm_area_struct *vma,
+			   unsigned long start, unsigned long end)

WARNING:LINE_SPACING: Missing a blank line after declarations
#350: FILE: mm/fremap.c:224:
+		unsigned int saved_flags = vma->vm_flags;
+		munlock_vma_pages_range(vma, start, start + size);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#369: FILE: mm/fremap.c:240:
+			make_pages_present(start, start+size);
 			                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#387: FILE: mm/internal.h:68:
+extern void munlock_vma_pages_range(struct vm_area_struct *vma,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#388: FILE: mm/internal.h:69:
+extern void munlock_vma_pages_range(struct vm_area_struct *vma,
+			       unsigned long start, unsigned long end);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000270434.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 9 checks, 281 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000270434.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
