WARNING:REPEATED_WORD: Possible repeated word: 'fun'
#40: 
glitch, then, gcc has a missing file... it's fun fun fun!

WARNING:REPEATED_WORD: Possible repeated word: 'fun'
#40: 
glitch, then, gcc has a missing file... it's fun fun fun!

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#52: 
	/usr/sfw/lib/gcc/i386-pc-solaris2.11/3.4.3/install-tools/include/stdarg.h \

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#111: FILE: include/linux/input.h:19:
+#ifndef __sun__

Architecture specific defines should be avoided wherever
possible.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#122: FILE: scripts/genksyms/genksyms.c:21:
    along with this program; if not, write to the Free Software Foundation,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#123: FILE: scripts/genksyms/genksyms.c:22:
    Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */$

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#137: FILE: scripts/kallsyms.c:381:
+#ifdef __sun__

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#140: FILE: scripts/kallsyms.c:384:
+memmem (haystack, haystack_len, needle, needle_len)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: scripts/kallsyms.c:385:
+     const void *haystack;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: scripts/kallsyms.c:386:
+     size_t haystack_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: scripts/kallsyms.c:387:
+     const void *needle;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: scripts/kallsyms.c:388:
+     size_t needle_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: scripts/kallsyms.c:390:
+  const char *begin;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#147: FILE: scripts/kallsyms.c:391:
+  const char *begin;
+  const char *const last_possible

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: scripts/kallsyms.c:391:
+  const char *const last_possible$

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#148: FILE: scripts/kallsyms.c:392:
+  const char *const last_possible
+    = (const char *) haystack + haystack_len - needle_len;

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:SPACING: No space is necessary after a cast
#148: FILE: scripts/kallsyms.c:392:
+    = (const char *) haystack + haystack_len - needle_len;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: scripts/kallsyms.c:392:
+    = (const char *) haystack + haystack_len - needle_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: scripts/kallsyms.c:394:
+  if (needle_len == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#150: FILE: scripts/kallsyms.c:394:
+  if (needle_len == 0)
[...]
+    return (void *) haystack;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#152: FILE: scripts/kallsyms.c:396:
+    /* The first occurrence of the empty string is deemed to occur at
+       the beginning of the string.  */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#152: FILE: scripts/kallsyms.c:396:
+       the beginning of the string.  */

CHECK:SPACING: No space is necessary after a cast
#153: FILE: scripts/kallsyms.c:397:
+    return (void *) haystack;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: scripts/kallsyms.c:397:
+    return (void *) haystack;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#156: FILE: scripts/kallsyms.c:400:
+  /* Sanity check, otherwise the loop might search through the whole
+     memory.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#156: FILE: scripts/kallsyms.c:400:
+     memory.  */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: scripts/kallsyms.c:401:
+  if (__builtin_expect (haystack_len < needle_len, 0))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#157: FILE: scripts/kallsyms.c:401:
+  if (__builtin_expect (haystack_len < needle_len, 0))
+    return NULL;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#157: FILE: scripts/kallsyms.c:401:
+  if (__builtin_expect (haystack_len < needle_len, 0))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: scripts/kallsyms.c:402:
+    return NULL;$

CHECK:SPACING: No space is necessary after a cast
#160: FILE: scripts/kallsyms.c:404:
+  for (begin = (const char *) haystack; begin <= last_possible; ++begin)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: scripts/kallsyms.c:404:
+  for (begin = (const char *) haystack; begin <= last_possible; ++begin)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#160: FILE: scripts/kallsyms.c:404:
+  for (begin = (const char *) haystack; begin <= last_possible; ++begin)
+    if (begin[0] == ((const char *) needle)[0] &&

CHECK:SPACING: No space is necessary after a cast
#161: FILE: scripts/kallsyms.c:405:
+    if (begin[0] == ((const char *) needle)[0] &&

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: scripts/kallsyms.c:405:
+    if (begin[0] == ((const char *) needle)[0] &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#161: FILE: scripts/kallsyms.c:405:
+    if (begin[0] == ((const char *) needle)[0] &&
[...]
+      return (void *) begin;

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: scripts/kallsyms.c:406:
+        !memcmp ((const void *) &begin[1],$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: No space is necessary after a cast
#162: FILE: scripts/kallsyms.c:406:
+        !memcmp ((const void *) &begin[1],

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: scripts/kallsyms.c:406:
+        !memcmp ((const void *) &begin[1],$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#162: FILE: scripts/kallsyms.c:406:
+        !memcmp ((const void *) &begin[1],

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: scripts/kallsyms.c:407:
+                 (const void *) ((const char *) needle + 1),$

CHECK:SPACING: No space is necessary after a cast
#163: FILE: scripts/kallsyms.c:407:
+                 (const void *) ((const char *) needle + 1),

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: scripts/kallsyms.c:407:
+                 (const void *) ((const char *) needle + 1),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: scripts/kallsyms.c:408:
+                 needle_len - 1))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: scripts/kallsyms.c:408:
+                 needle_len - 1))$

CHECK:SPACING: No space is necessary after a cast
#165: FILE: scripts/kallsyms.c:409:
+      return (void *) begin;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: scripts/kallsyms.c:409:
+      return (void *) begin;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: scripts/kallsyms.c:411:
+  return NULL;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#207: FILE: scripts/mod/file2alias.c:35:
+typedef int32_t		__s32;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's16' over 'int16_t'
#208: FILE: scripts/mod/file2alias.c:36:
+typedef int16_t		__s16;

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#220: FILE: scripts/mod/modpost.h:44:
+#ifdef __sun__

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Section>
#221: FILE: scripts/mod/modpost.h:45:
+typedef uint16_t Elf32_Section;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#221: FILE: scripts/mod/modpost.h:45:
+typedef uint16_t Elf32_Section;

CHECK:CAMELCASE: Avoid CamelCase: <Elf64_Section>
#222: FILE: scripts/mod/modpost.h:46:
+typedef uint16_t Elf64_Section;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#222: FILE: scripts/mod/modpost.h:46:
+typedef uint16_t Elf64_Section;

ERROR:SPACING: space required before the open parenthesis '('
#245: FILE: scripts/mod/sumversion.c:421:
+	for(fname = strtok(sources, " "); fname != NULL;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "fname"
#245: FILE: scripts/mod/sumversion.c:421:
+	for(fname = strtok(sources, " "); fname != NULL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000458491.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 33 warnings, 18 checks, 107 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000458491.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
