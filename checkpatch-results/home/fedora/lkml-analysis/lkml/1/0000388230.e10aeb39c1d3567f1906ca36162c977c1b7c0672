ERROR:SPACING: exactly one space required after that #elif
#106: FILE: arch/ia64/kernel/machine_kexec.c:145:
+#elif  CONFIG_PGTABLE_4

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#114: FILE: arch/ia64/kernel/machine_kexec.c:153:
+	unsigned long vaddr, paddr;
+	vaddr = (unsigned long)(char *)&vmcoreinfo_note;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'name' may be better as '(name)' to avoid precedence issues
#177: FILE: include/linux/kexec.h:129:
+#define SYMBOL(name) \
+	vmcoreinfo_append_str("SYMBOL(%s)=%lx\n", #name, (unsigned long)&name)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'name' may be better as '(name)' to avoid precedence issues
#181: FILE: include/linux/kexec.h:133:
+#define OFFSET(name, field) \
+	vmcoreinfo_append_str("OFFSET(%s.%s)=%d\n", #name, #field, \
+			      &(((struct name *)0)->field))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'field' may be better as '(field)' to avoid precedence issues
#181: FILE: include/linux/kexec.h:133:
+#define OFFSET(name, field) \
+	vmcoreinfo_append_str("OFFSET(%s.%s)=%d\n", #name, #field, \
+			      &(((struct name *)0)->field))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#199: FILE: include/linux/kexec.h:171:
+#define VMCOREINFO_NOTE_SIZE       (KEXEC_NOTE_HEAD_BYTES*2 + VMCOREINFO_BYTES \
                                                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#207: FILE: include/linux/kexec.h:179:
+extern u32 vmcoreinfo_note[VMCOREINFO_NOTE_SIZE/4];
                                                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#236: FILE: kernel/kexec.c:41:
+u32 vmcoreinfo_note[VMCOREINFO_NOTE_SIZE/4];
                                         ^

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#237: FILE: kernel/kexec.c:42:
+unsigned int vmcoreinfo_size = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#295: FILE: kernel/kexec.c:1189:
+void __attribute__ ((weak)) arch_crash_save_vmcoreinfo(void)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#298: FILE: kernel/kexec.c:1192:
+unsigned long __attribute__ ((weak)) paddr_vmcoreinfo_note(void)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000388230.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 3 warnings, 6 checks, 294 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000388230.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
