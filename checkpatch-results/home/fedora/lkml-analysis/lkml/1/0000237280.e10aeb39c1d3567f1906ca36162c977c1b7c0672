WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#89: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#94: FILE: checkpoint/ckpt_arch.h:1:
+#include "ckpt.h"

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#107: FILE: checkpoint/ckpt_x86.c:1:
+/*

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#151: FILE: checkpoint/ckpt_x86.c:45:
+	if ((ret = cr_write_obj(ctx, &h, hh)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#193: FILE: checkpoint/ckpt_x86.c:87:
+	/* for checkpoint in process context (from within a container)
+	   the GS and FS registers should be saved from the hardware;

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#194: FILE: checkpoint/ckpt_x86.c:88:
+	   otherwise they are already sabed on the thread structure */

WARNING:TYPO_SPELLING: 'subtitute' may be misspelled - perhaps 'substitute'?
#206: FILE: checkpoint/ckpt_x86.c:100:
+	 * we (optimistically) subtitute the future return value (0) of
 	                       ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#211: FILE: checkpoint/ckpt_x86.c:105:
+		BUG_ON(hh->orig_ax < 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#266: FILE: checkpoint/ckpt_x86.c:160:
+		 * except if we are in process context, in which case we do */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#339: FILE: checkpoint/rstr_x86.c:1:
+/*

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#367: FILE: checkpoint/rstr_x86.c:29:
+#if 0	/* activate when containers are used */

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#379: FILE: checkpoint/rstr_x86.c:41:
+	if (hh->ntls > 0) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#381: FILE: checkpoint/rstr_x86.c:43:
+		 * sys_set_thread_entry() will convert it back ? */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#387: FILE: checkpoint/rstr_x86.c:49:
+		BUG_ON(size > CR_TBUF_TOTAL);

WARNING:REPEATED_WORD: Possible repeated word: 'that'
#394: FILE: checkpoint/rstr_x86.c:56:
+		/* FIX: add sanity checks (eg. that values makes sense, that
+		 * that we don't overwrite old values, etc */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#394: FILE: checkpoint/rstr_x86.c:56:
+		 * that we don't overwrite old values, etc */

ERROR:CODE_INDENT: code indent should use tabs where possible
#432: FILE: checkpoint/rstr_x86.c:94:
+        thread->gs = hh->gs;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#432: FILE: checkpoint/rstr_x86.c:94:
+        thread->gs = hh->gs;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#433: FILE: checkpoint/rstr_x86.c:95:
+        thread->fs = hh->fs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: checkpoint/rstr_x86.c:95:
+        thread->fs = hh->fs;$

CHECK:BRACES: braces {} should be used on all arms of this statement
#471: FILE: checkpoint/rstr_x86.c:133:
+	if (!hh->used_math)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#473: FILE: checkpoint/rstr_x86.c:135:
+	else {

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#499: FILE: checkpoint/rstr_x86.c:161:
+#if 0	/* activate when containers are used */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#521: FILE: include/asm-x86/ckpt.h:1:
+#ifndef __ASM_X86_CKPT_H

WARNING:INCLUDE_LINUX: Use #include <linux/processor.h> instead of <asm/processor.h>
#533: FILE: include/asm-x86/ckpt.h:13:
+#include <asm/processor.h>

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#541: FILE: include/asm-x86/ckpt.h:21:
+} __attribute__ ((aligned (8)));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#541: FILE: include/asm-x86/ckpt.h:21:
+} __attribute__ ((aligned (8)));

ERROR:CODE_INDENT: code indent should use tabs where possible
#545: FILE: include/asm-x86/ckpt.h:25:
+        __u64 r15;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#545: FILE: include/asm-x86/ckpt.h:25:
+        __u64 r15;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#546: FILE: include/asm-x86/ckpt.h:26:
+        __u64 r14;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#546: FILE: include/asm-x86/ckpt.h:26:
+        __u64 r14;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#547: FILE: include/asm-x86/ckpt.h:27:
+        __u64 r13;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#547: FILE: include/asm-x86/ckpt.h:27:
+        __u64 r13;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#548: FILE: include/asm-x86/ckpt.h:28:
+        __u64 r12;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#548: FILE: include/asm-x86/ckpt.h:28:
+        __u64 r12;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#549: FILE: include/asm-x86/ckpt.h:29:
+        __u64 bp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#549: FILE: include/asm-x86/ckpt.h:29:
+        __u64 bp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#550: FILE: include/asm-x86/ckpt.h:30:
+        __u64 bx;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#550: FILE: include/asm-x86/ckpt.h:30:
+        __u64 bx;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#551: FILE: include/asm-x86/ckpt.h:31:
+        __u64 r11;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#551: FILE: include/asm-x86/ckpt.h:31:
+        __u64 r11;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#552: FILE: include/asm-x86/ckpt.h:32:
+        __u64 r10;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#552: FILE: include/asm-x86/ckpt.h:32:
+        __u64 r10;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#553: FILE: include/asm-x86/ckpt.h:33:
+        __u64 r9;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#553: FILE: include/asm-x86/ckpt.h:33:
+        __u64 r9;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#554: FILE: include/asm-x86/ckpt.h:34:
+        __u64 r8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#554: FILE: include/asm-x86/ckpt.h:34:
+        __u64 r8;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#555: FILE: include/asm-x86/ckpt.h:35:
+        __u64 ax;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: include/asm-x86/ckpt.h:35:
+        __u64 ax;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#556: FILE: include/asm-x86/ckpt.h:36:
+        __u64 cx;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#556: FILE: include/asm-x86/ckpt.h:36:
+        __u64 cx;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#557: FILE: include/asm-x86/ckpt.h:37:
+        __u64 dx;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#557: FILE: include/asm-x86/ckpt.h:37:
+        __u64 dx;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#558: FILE: include/asm-x86/ckpt.h:38:
+        __u64 si;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#558: FILE: include/asm-x86/ckpt.h:38:
+        __u64 si;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#559: FILE: include/asm-x86/ckpt.h:39:
+        __u64 di;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#559: FILE: include/asm-x86/ckpt.h:39:
+        __u64 di;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#560: FILE: include/asm-x86/ckpt.h:40:
+        __u64 orig_ax;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#560: FILE: include/asm-x86/ckpt.h:40:
+        __u64 orig_ax;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#561: FILE: include/asm-x86/ckpt.h:41:
+        __u64 ip;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#561: FILE: include/asm-x86/ckpt.h:41:
+        __u64 ip;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#562: FILE: include/asm-x86/ckpt.h:42:
+        __u64 cs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#562: FILE: include/asm-x86/ckpt.h:42:
+        __u64 cs;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#563: FILE: include/asm-x86/ckpt.h:43:
+        __u64 flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#563: FILE: include/asm-x86/ckpt.h:43:
+        __u64 flags;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#564: FILE: include/asm-x86/ckpt.h:44:
+        __u64 sp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: include/asm-x86/ckpt.h:44:
+        __u64 sp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#565: FILE: include/asm-x86/ckpt.h:45:
+        __u64 ss;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: include/asm-x86/ckpt.h:45:
+        __u64 ss;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#568: FILE: include/asm-x86/ckpt.h:48:
+        __u64 ds;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#568: FILE: include/asm-x86/ckpt.h:48:
+        __u64 ds;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#569: FILE: include/asm-x86/ckpt.h:49:
+        __u64 es;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#569: FILE: include/asm-x86/ckpt.h:49:
+        __u64 es;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#570: FILE: include/asm-x86/ckpt.h:50:
+        __u64 fs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#570: FILE: include/asm-x86/ckpt.h:50:
+        __u64 fs;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#571: FILE: include/asm-x86/ckpt.h:51:
+        __u64 gs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#571: FILE: include/asm-x86/ckpt.h:51:
+        __u64 gs;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#590: FILE: include/asm-x86/ckpt.h:70:
+} __attribute__ ((aligned (8)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#590: FILE: include/asm-x86/ckpt.h:70:
+} __attribute__ ((aligned (8)));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000237280.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 28 errors, 48 warnings, 3 checks, 497 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000237280.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
