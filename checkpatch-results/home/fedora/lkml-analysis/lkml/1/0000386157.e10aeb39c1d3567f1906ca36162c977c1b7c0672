WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
master.kernel.org:/pub/scm/linux/kernel/git/cooloney/blackfin-2.6.git for-linus

WARNING:TYPO_SPELLING: 'hanlding' may be misspelled - perhaps 'handling'?
#100: 
      Blackfin arch: Fix Anomaly hanlding, as pointed out by Mike
                                 ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1116: FILE: include/asm-blackfin/blackfin.h:23:
+		__asm__ __volatile__(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1125: FILE: include/asm-blackfin/blackfin.h:32:
+		__asm__ __volatile__(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1176: FILE: include/asm-blackfin/blackfin.h:47:
+		__asm__ __volatile__(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1185: FILE: include/asm-blackfin/blackfin.h:56:
+		__asm__ __volatile__(

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#1235: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1240: FILE: include/asm-blackfin/mach-bf527/anomaly.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1241: FILE: include/asm-blackfin/mach-bf527/anomaly.h:2:
+ * File: include/asm-blackfin/mach-bf527/anomaly.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:TYPO_SPELLING: 'shoule' may be misspelled - perhaps 'should'?
#1248: FILE: include/asm-blackfin/mach-bf527/anomaly.h:9:
+/* This file shoule be up to date with:
              ^^^^^^

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1288: FILE: include/asm-blackfin/mach-bf533/anomaly.h:2:
+ * File: include/asm-blackfin/mach-bf533/anomaly.h

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#1636: FILE: include/asm-blackfin/mach-bf533/anomaly.h:190:
+/* Trace Buffers may record discontinuities into emulation mode and/or exception, NMI, reset handlers */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#1666: FILE: include/asm-blackfin/mach-bf533/anomaly.h:220:
+/* When booting from a 16-bit asynchronous memory device, the upper 8-bits of each word must be 0x00 */

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#1674: FILE: include/asm-blackfin/mach-bf533/anomaly.h:228:
+/* A killed 32-bit System MMR write will lead to the next system MMR access thinking it should be 32-bit. */

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1836: FILE: include/asm-blackfin/mach-bf537/anomaly.h:2:
+ * File: include/asm-blackfin/mach-bf537/anomaly.h

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#2009: FILE: include/asm-blackfin/mach-bf537/anomaly.h:72:
+#define ANOMALY_05000258 (((ANOMALY_BF536 || ANOMALY_BF537) && __SILICON_REVISION__ == 1) || __SILICON_REVISION__ == 2)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 136 exceeds 100 columns
#2033: FILE: include/asm-blackfin/mach-bf537/anomaly.h:96:
+#define ANOMALY_05000278 (((ANOMALY_BF536 || ANOMALY_BF537) && __SILICON_REVISION__ < 3) || (ANOMALY_BF534 && __SILICON_REVISION__ < 2))

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#2134: FILE: include/asm-blackfin/mach-bf548/anomaly.h:2:
+ * File: include/asm-blackfin/mach-bf548/anomaly.h

WARNING:TYPO_SPELLING: 'shoule' may be misspelled - perhaps 'should'?
#2155: FILE: include/asm-blackfin/mach-bf548/anomaly.h:9:
+/* This file shoule be up to date with:
              ^^^^^^

WARNING:TYPO_SPELLING: 'Intialized' may be misspelled - perhaps 'Initialized'?
#2247: FILE: include/asm-blackfin/mach-bf548/anomaly.h:62:
+/* USB Calibration Value Is Not Intialized */
                                 ^^^^^^^^^^

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#2309: FILE: include/asm-blackfin/mach-bf561/anomaly.h:2:
+ * File: include/asm-blackfin/mach-bf561/anomaly.h

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#2443: FILE: include/asm-blackfin/mach-bf561/anomaly.h:75:
+/* Data Cache Fill data can be corrupted after/during Instruction DMA if certain core stalls exist */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#2884: FILE: include/asm-blackfin/mach-common/def_LPBlackfin.h:49:
+	uint8_t __v; \

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#2894: FILE: include/asm-blackfin/mach-common/def_LPBlackfin.h:59:
+	uint16_t __v; \

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2904: FILE: include/asm-blackfin/mach-common/def_LPBlackfin.h:69:
+	uint32_t __v; \

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2913: FILE: include/asm-blackfin/mach-common/def_LPBlackfin.h:78:
+#define bfin_write8(addr, val) \
+	__asm__ __volatile__( \
+		NOP_PAD_ANOMALY_05000198 \
+		"b[%0] = %1;" \
+		: \
+		: "a" (addr), "d" (val) \
+		: "memory" \
+	)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2922: FILE: include/asm-blackfin/mach-common/def_LPBlackfin.h:87:
+#define bfin_write16(addr, val) \
+	__asm__ __volatile__( \
+		NOP_PAD_ANOMALY_05000198 \
+		"w[%0] = %1;" \
+		: \
+		: "a" (addr), "d" (val) \
+		: "memory" \
+	)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2931: FILE: include/asm-blackfin/mach-common/def_LPBlackfin.h:96:
+#define bfin_write32(addr, val) \
+	__asm__ __volatile__( \
+		NOP_PAD_ANOMALY_05000198 \
+		"[%0] = %1;" \
+		: \
+		: "a" (addr), "d" (val) \
+		: "memory" \
+	)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2966: FILE: include/asm-blackfin/system.h:47:
+#define local_irq_enable() \
+	__asm__ __volatile__( \
+		"sti %0;" \
+		: \
+		: "d" (irq_flags) \
+	)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3008: FILE: include/asm-blackfin/system.h:69:
+#define idle_with_irq_disabled() \
+	__asm__ __volatile__( \
+		NOP_PAD_ANOMALY_05000244 \
+		".align 8;" \
+		"sti %0;" \
+		"idle;" \
+		: \
+		: "d" (irq_flags) \
+	)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3024: FILE: include/asm-blackfin/system.h:80:
+# define __save_and_cli(x) \
+	__asm__ __volatile__( \
+		"cli %0;" \
+		"sti %1;" \
+		: "=&d" (x) \
+		: "d" (0x3F) \
+	)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3037: FILE: include/asm-blackfin/system.h:88:
+# define __save_and_cli(x) \
+	__asm__ __volatile__( \
+		"cli %0;" \
+		: "=&d" (x) \
+	)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3047: FILE: include/asm-blackfin/system.h:95:
+#define local_save_flags(x) \
+	__asm__ __volatile__( \
+		"cli %0;" \
+		"sti %0;" \
+		: "=d" (x) \
+	)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000386157.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 18 warnings, 7 checks, 2639 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000386157.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
