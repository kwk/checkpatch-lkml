WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#72: FILE: arch/arm/mach-at91/Kconfig:33:
+config ARCH_AT91SAM9G20
+	bool "AT91SAM9G20"
+	select GENERIC_TIME
+	select GENERIC_CLOCKEVENTS
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#173: FILE: arch/arm/mach-at91/at91sam9260.c:57:
+		.virtual	= AT91_IO_VIRT_BASE - AT91SAM9G20_SRAM0_SIZE - AT91SAM9G20_SRAM1_SIZE,

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required before the open brace '{'
#211: FILE: arch/arm/mach-at91/at91sam9260_devices.c:324:
+	if (cpu_is_at91sam9260()){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 143 exceeds 100 columns
#234: FILE: arch/arm/mach-at91/at91sam9260_devices.c:339:
+		at91_sys_write(AT91_SMC_MODE(3), mode | AT91_SMC_READMODE | AT91_SMC_WRITEMODE | AT91_SMC_EXNWMODE_DISABLE | AT91_SMC_TDF_(2));

ERROR:SPACING: space required before the open brace '{'
#237: FILE: arch/arm/mach-at91/at91sam9260_devices.c:342:
+	if (cpu_is_at91sam9g20()){

WARNING:LONG_LINE: line length of 143 exceeds 100 columns
#252: FILE: arch/arm/mach-at91/at91sam9260_devices.c:357:
+		at91_sys_write(AT91_SMC_MODE(3), mode | AT91_SMC_READMODE | AT91_SMC_WRITEMODE | AT91_SMC_EXNWMODE_DISABLE | AT91_SMC_TDF_(3));

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#258: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#263: FILE: arch/arm/mach-at91/board-sam9g20ek.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#264: FILE: arch/arm/mach-at91/board-sam9g20ek.c:2:
+ * linux/arch/arm/mach-at91/board-sam9g20ek.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#280: FILE: arch/arm/mach-at91/board-sam9g20ek.c:18:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#281: FILE: arch/arm/mach-at91/board-sam9g20ek.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#307: FILE: arch/arm/mach-at91/board-sam9g20ek.c:45:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#333: FILE: arch/arm/mach-at91/board-sam9g20ek.c:71:
+
+

WARNING:MISPLACED_INIT: __initdata should be placed after ek_usbh_data
#337: FILE: arch/arm/mach-at91/board-sam9g20ek.c:75:
+static struct at91_usbh_data __initdata ek_usbh_data = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:MISPLACED_INIT: __initdata should be placed after ek_udc_data
#344: FILE: arch/arm/mach-at91/board-sam9g20ek.c:82:
+static struct at91_udc_data __initdata ek_udc_data = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#349: FILE: arch/arm/mach-at91/board-sam9g20ek.c:87:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#372: FILE: arch/arm/mach-at91/board-sam9g20ek.c:110:
+
+

WARNING:MISPLACED_INIT: __initdata should be placed after ek_macb_data
#376: FILE: arch/arm/mach-at91/board-sam9g20ek.c:114:
+static struct at91_eth_data __initdata ek_macb_data = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#381: FILE: arch/arm/mach-at91/board-sam9g20ek.c:119:
+
+

WARNING:MISPLACED_INIT: __initdata should be placed after ek_nand_partition[]
#385: FILE: arch/arm/mach-at91/board-sam9g20ek.c:123:
+static struct mtd_partition __initdata ek_nand_partition[] = {

ERROR:CODE_INDENT: code indent should use tabs where possible
#386: FILE: arch/arm/mach-at91/board-sam9g20ek.c:124:
+        {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: arch/arm/mach-at91/board-sam9g20ek.c:124:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#387: FILE: arch/arm/mach-at91/board-sam9g20ek.c:125:
+                .name   = "Bootstrap",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: arch/arm/mach-at91/board-sam9g20ek.c:125:
+                .name   = "Bootstrap",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#388: FILE: arch/arm/mach-at91/board-sam9g20ek.c:126:
+                .offset = 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: arch/arm/mach-at91/board-sam9g20ek.c:126:
+                .offset = 0,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#389: FILE: arch/arm/mach-at91/board-sam9g20ek.c:127:
+                .size   = 4 * 1024 * 1024,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: arch/arm/mach-at91/board-sam9g20ek.c:127:
+                .size   = 4 * 1024 * 1024,$

WARNING:MISPLACED_INIT: __initdata should be placed after ek_nand_data
#409: FILE: arch/arm/mach-at91/board-sam9g20ek.c:147:
+static struct at91_nand_data __initdata ek_nand_data = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#423: FILE: arch/arm/mach-at91/board-sam9g20ek.c:161:
+
+

WARNING:MISPLACED_INIT: __initdata should be placed after ek_mmc_data
#427: FILE: arch/arm/mach-at91/board-sam9g20ek.c:165:
+static struct at91_mmc_data __initdata ek_mmc_data = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#435: FILE: arch/arm/mach-at91/board-sam9g20ek.c:173:
+
+

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#515: FILE: arch/arm/mach-at91/clock.c:591:
+	if ((!cpu_is_at91sam9g20() && plla.rate_hz > 209000000)
+	   || (cpu_is_at91sam9g20() && plla.rate_hz > 800000000))

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#524: FILE: arch/arm/mach-at91/clock.c:606:
+	} else if (cpu_is_at91sam9260() || cpu_is_at91sam9261() || cpu_is_at91sam9263() || cpu_is_at91sam9g20()) {

WARNING:LONG_LINE_COMMENT: line length of 110 exceeds 100 columns
#536: FILE: arch/arm/mach-at91/clock.c:640:
+			freq / ((mckr & AT91_PMC_MDIV) >> 7) : freq;	/* mdiv ; (x >> 7) = ((x >> 8) * 2) */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '>>' (ctx:WxV)
#540: FILE: arch/arm/mach-at91/clock.c:644:
+	else mck.rate_hz = freq / (1 << ((mckr & AT91_PMC_MDIV) >>8));      /* mdiv */
 	                                                        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#540: FILE: arch/arm/mach-at91/clock.c:644:
+	else mck.rate_hz = freq / (1 << ((mckr & AT91_PMC_MDIV) >>8));      /* mdiv */

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#540: FILE: arch/arm/mach-at91/clock.c:644:
+	}
+	else mck.rate_hz = freq / (1 << ((mckr & AT91_PMC_MDIV) >>8));      /* mdiv */

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#553: FILE: arch/arm/mach-at91/pm.c:205:
+	} else if (cpu_is_at91sam9260() || cpu_is_at91sam9261() || cpu_is_at91sam9263() || cpu_is_at91sam9g20()) {

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#581: FILE: drivers/mmc/host/at91_mci.c:375:
+	if (cpu_is_at91sam9260() || cpu_is_at91sam9263() || cpu_is_at91sam9rl() || cpu_is_at91sam9g20())

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#590: FILE: drivers/mmc/host/at91_mci.c:852:
+		if (cpu_is_at91sam9260() || cpu_is_at91sam9263() || cpu_is_at91sam9rl()  || cpu_is_at91sam9g20())

WARNING:LONG_LINE: line length of 141 exceeds 100 columns
#666: FILE: include/asm-arm/arch-at91/board.h:80:
+#if defined(CONFIG_ARCH_AT91SAM9260) || defined(CONFIG_ARCH_AT91SAM9263) || defined(CONFIG_ARCH_AT91SAM9G20) || defined(CONFIG_ARCH_AT91CAP9)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#719: FILE: include/asm-arm/arch-at91/timex.h:63:
+#define CLOCK_TICK_RATE		(AT91SAM9_MASTER_CLOCK/16)
                        		                      ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000267712.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 23 warnings, 10 checks, 574 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000267712.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
