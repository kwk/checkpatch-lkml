CHECK:SPACING: No space is necessary after a cast
#165: FILE: fs/ocfs2/extent_map.c:303:
+	eb = (struct ocfs2_extent_block *) eb_bh->b_data;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#177: FILE: fs/ocfs2/extent_map.c:315:
+			    "Inode %lu has non zero tree depth in "
+			    "leaf block %llu\n", inode->i_ino,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:FUNCTION_ARGUMENTS: function definition argument 'eb' should also have an identifier name
#217: FILE: fs/ocfs2/extent_map.c:431:
+	struct ocfs2_extent_block *uninitialized_var(eb);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#261: FILE: fs/ocfs2/extent_map.c:468:
+		 * extent, so we return their lengths in a seperate
 		                                           ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#293: FILE: fs/ocfs2/extent_map.c:486:
+	BUG_ON(v_cluster < le32_to_cpu(rec->e_cpos));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPLIT_STRING: quoted string split across lines
#297: FILE: fs/ocfs2/extent_map.c:490:
+		ocfs2_error(inode->i_sb, "Inode %lu has bad extent "
+			    "record (%u, %u, 0)", inode->i_ino,

CHECK:BRACES: braces {} should be used on all arms of this statement
#323: FILE: fs/ocfs2/extent_map.c:516:
+			if (tree_height == 0)
[...]
+			else if (eb->h_blkno == di->i_last_eb_blk)
[...]
+			else if (eb->h_next_leaf_blk == di->i_last_eb_blk) {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#366: FILE: fs/ocfs2/extent_map.c:559:
+	int ret;
+	unsigned int uninitialized_var(hole_len), flags = 0;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#410: FILE: fs/ocfs2/extent_map.c:595:
+		if (num_clusters) {
+			*num_clusters = hole_len;
+		}

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#443: FILE: fs/ocfs2/extent_map.c:662:
+	u32 flags = FIEMAP_EXTENT_DATA_INLINE|FIEMAP_EXTENT_LAST;
 	                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxW)
#529: FILE: fs/ocfs2/extent_map.c:748:
+		cpos = le32_to_cpu(rec.e_cpos)+ le16_to_cpu(rec.e_leaf_clusters);
 		                              ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000219297.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 4 checks, 451 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000219297.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
