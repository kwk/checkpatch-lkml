CHECK:BIT_MACRO: Prefer using the BIT macro
#86: FILE: drivers/net/igb/e1000_82575.h:175:
+#define E1000_DTXSWC_VMDQ_LOOPBACK_EN (1 << 31)  /* global VF LB enable */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#93: FILE: drivers/net/igb/e1000_82575.h:182:
+#define E1000_VT_CTL_DISABLE_DEF_POOL   (1 << 29)

CHECK:BIT_MACRO: Prefer using the BIT macro
#94: FILE: drivers/net/igb/e1000_82575.h:183:
+#define E1000_VT_CTL_VM_REPL_EN         (1 << 30)

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: drivers/net/igb/e1000_82575.h:210:
+                                               * this are the ACK */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#121: FILE: drivers/net/igb/e1000_82575.h:210:
+                                               * this are the ACK */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: drivers/net/igb/e1000_82575.h:212:
+                                               * this are the NACK */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#123: FILE: drivers/net/igb/e1000_82575.h:212:
+                                               * this are the NACK */

WARNING:TYPO_SPELLING: 'exra' may be misspelled - perhaps 'extra'?
#125: FILE: drivers/net/igb/e1000_82575.h:214:
+/* bits 23:16 are used for exra info for certain messages */
                            ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: drivers/net/igb/e1000_82575.h:224:
+                           u32 vf_number, s16 size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: drivers/net/igb/e1000_82575.h:224:
+                           u32 vf_number, s16 size);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: drivers/net/igb/e1000_82575.h:226:
+                                u32 vf_number, s16 size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: drivers/net/igb/e1000_82575.h:226:
+                                u32 vf_number, s16 size);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32*' should also have an identifier name
#143: FILE: drivers/net/igb/e1000_82575.h:232:
+bool e1000_check_for_pf_mail_vf(struct e1000_hw *hw, u32*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#221: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#226: FILE: drivers/net/igb/e1000_vf.c:1:
+/*******************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#227: FILE: drivers/net/igb/e1000_vf.c:2:
+/*******************************************************************************
+

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#241: FILE: drivers/net/igb/e1000_vf.c:16:
+  this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#242: FILE: drivers/net/igb/e1000_vf.c:17:
+  51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#253: FILE: drivers/net/igb/e1000_vf.c:28:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#269: FILE: drivers/net/igb/e1000_vf.c:44:
+                          s16 size)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: drivers/net/igb/e1000_vf.c:44:
+                          s16 size)$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#276: FILE: drivers/net/igb/e1000_vf.c:51:
+	/*
+	 * if the VF owns the mailbox then we can't grab the mailbox buffer

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#290: FILE: drivers/net/igb/e1000_vf.c:65:
+			/*
+			 * oops, VF grabbed ownership while we were attempting

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#299: FILE: drivers/net/igb/e1000_vf.c:74:
+	/*
+	 * At this point we have established ownership of the PF mailbox memory

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#308: FILE: drivers/net/igb/e1000_vf.c:83:
+	/*
+	 * Do this whether success or failure on the wait for ack from

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#320: FILE: drivers/net/igb/e1000_vf.c:95:
+	/*
+	 * copy the caller specified message to the mailbox

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#335: FILE: drivers/net/igb/e1000_vf.c:110:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#345: FILE: drivers/net/igb/e1000_vf.c:120:
+                               u32 *msg, u32 vf_number, s16 size)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: drivers/net/igb/e1000_vf.c:120:
+                               u32 *msg, u32 vf_number, s16 size)$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#351: FILE: drivers/net/igb/e1000_vf.c:126:
+	/*
+	 * Should we be checking if the VF has set the ownership bit?

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#358: FILE: drivers/net/igb/e1000_vf.c:133:
+	/*
+	 * No message ready polling mechanism - the presumption is that

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#364: FILE: drivers/net/igb/e1000_vf.c:139:
+	/*
+	 * copy the caller specified message to the mailbox

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#371: FILE: drivers/net/igb/e1000_vf.c:146:
+	/*
+	 * Acknowledge receipt of the message to the VF and then

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#488: FILE: drivers/net/igb/igb_main.c:132:
+int igb_send_msg_to_vf(struct igb_adapter *, u32 *, u32);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct igb_adapter *' should also have an identifier name
#488: FILE: drivers/net/igb/igb_main.c:132:
+int igb_send_msg_to_vf(struct igb_adapter *, u32 *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32 *' should also have an identifier name
#488: FILE: drivers/net/igb/igb_main.c:132:
+int igb_send_msg_to_vf(struct igb_adapter *, u32 *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#488: FILE: drivers/net/igb/igb_main.c:132:
+int igb_send_msg_to_vf(struct igb_adapter *, u32 *, u32);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#494: FILE: drivers/net/igb/igb_main.c:138:
+void igb_set_mc_list_pools(struct igb_adapter *, struct e1000_hw *, int, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct igb_adapter *' should also have an identifier name
#494: FILE: drivers/net/igb/igb_main.c:138:
+void igb_set_mc_list_pools(struct igb_adapter *, struct e1000_hw *, int, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct e1000_hw *' should also have an identifier name
#494: FILE: drivers/net/igb/igb_main.c:138:
+void igb_set_mc_list_pools(struct igb_adapter *, struct e1000_hw *, int, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#494: FILE: drivers/net/igb/igb_main.c:138:
+void igb_set_mc_list_pools(struct igb_adapter *, struct e1000_hw *, int, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16' should also have an identifier name
#494: FILE: drivers/net/igb/igb_main.c:138:
+void igb_set_mc_list_pools(struct igb_adapter *, struct e1000_hw *, int, u16);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around adapter->tx_ring[i - rbase_offset]
#671: FILE: drivers/net/igb/igb_main.c:1693:
+		struct igb_ring *ring = &(adapter->tx_ring[i - rbase_offset]);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space prohibited before that close parenthesis ')'
#725: FILE: drivers/net/igb/igb_main.c:1925:
+		if ((rctl & E1000_RCTL_LPE) && adapter->vfs_allocated_count > 0 ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around adapter->rx_ring[i - rbase_offset]
#766: FILE: drivers/net/igb/igb_main.c:1979:
+		struct igb_ring *ring = &(adapter->rx_ring[i - rbase_offset]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#777: FILE: drivers/net/igb/igb_main.c:2377:
+		igb_update_mc_addr_list_82575(hw, mta_list, i,
+					  adapter->vfs_allocated_count + 1,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#787: FILE: drivers/net/igb/igb_main.c:2387:
+		igb_update_mc_addr_list_82575(hw, mta_list, i, 1,
+					  mac->rar_entry_count);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#826: FILE: drivers/net/igb/igb_main.c:3425:
+	else
[...]
 	wr32(E1000_IMS, E1000_IMS_LSC);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#877: FILE: drivers/net/igb/igb_main.c:4694:
+	 * addresses */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#880: FILE: drivers/net/igb/igb_main.c:4697:
+		printk("Adding MC Addr: %2.2X:%2.2X:%2.2X:%2.2X:%2.2X:%2.2X\n"

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#889: FILE: drivers/net/igb/igb_main.c:4706:
+		printk("Hash value = 0x%03X\n", hash_value);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#906: FILE: drivers/net/igb/igb_main.c:4723:
+		 * set and enabled */

ERROR:SPACING: space required before the open parenthesis '('
#907: FILE: drivers/net/igb/igb_main.c:4724:
+		for(i = 0; i < E1000_VLVF_ARRAY_SIZE; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#927: FILE: drivers/net/igb/igb_main.c:4744:
+			for(i = 0; i < E1000_VLVF_ARRAY_SIZE; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#950: FILE: drivers/net/igb/igb_main.c:4767:
+		for(i = 0; i < E1000_VLVF_ARRAY_SIZE; i++) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#982: FILE: drivers/net/igb/igb_main.c:4799:
+				 * we can't delete it here. */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1018: FILE: drivers/net/igb/igb_main.c:4835:
+		printk("VFLR Event %2.2X\n", vflre);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1072: FILE: drivers/net/igb/igb_main.c:4889:
+			unsigned char *p;
+			msgbuf[0] |= E1000_VT_MSGTYPE_ACK;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1075: FILE: drivers/net/igb/igb_main.c:4892:
+			if ((err = igb_send_msg_to_vf(adapter, msgbuf, vf)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1077: FILE: drivers/net/igb/igb_main.c:4894:
+				printk(KERN_INFO "Sending MAC Address %2.2x:%2.2x:"

WARNING:SPLIT_STRING: quoted string split across lines
#1078: FILE: drivers/net/igb/igb_main.c:4895:
+				printk(KERN_INFO "Sending MAC Address %2.2x:%2.2x:"
+				       "%2.2x:%2.2x:%2.2x:%2.2x to VF %d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1085: FILE: drivers/net/igb/igb_main.c:4902:
+			}
+			else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1085: FILE: drivers/net/igb/igb_main.c:4902:
+			else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1086: FILE: drivers/net/igb/igb_main.c:4903:
+				printk(KERN_ERR "Error %d Sending MAC Address to VF\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#1094: FILE: drivers/net/igb/igb_main.c:4911:
+			u32 vfe = rd32(E1000_VFTE);
+			vfe |= (1 << vf);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1099: FILE: drivers/net/igb/igb_main.c:4916:
+			printk(KERN_INFO "Enabling VFTE and VFRE for vf %d\n",

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1102: FILE: drivers/net/igb/igb_main.c:4919:
+			if ((err = igb_send_msg_to_vf(adapter, msgbuf, vf)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1104: FILE: drivers/net/igb/igb_main.c:4921:
+				printk(KERN_ERR "Error %d Sending VFLR Ack"

WARNING:SPLIT_STRING: quoted string split across lines
#1105: FILE: drivers/net/igb/igb_main.c:4922:
+				printk(KERN_ERR "Error %d Sending VFLR Ack"
+				       "to VF\n", err);

WARNING:MISSING_SPACE: break quoted strings at a space character
#1105: FILE: drivers/net/igb/igb_main.c:4922:
+				printk(KERN_ERR "Error %d Sending VFLR Ack"
+				       "to VF\n", err);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1121: FILE: drivers/net/igb/igb_main.c:4938:
+		if ((err = igb_send_msg_to_vf(adapter, msgbuf, vf) != 0))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1122: FILE: drivers/net/igb/igb_main.c:4939:
+			printk(KERN_ERR "Error %d Sending set VMOLR LPE Ack"

WARNING:SPLIT_STRING: quoted string split across lines
#1123: FILE: drivers/net/igb/igb_main.c:4940:
+			printk(KERN_ERR "Error %d Sending set VMOLR LPE Ack"
+			       "to VF\n", err);

WARNING:MISSING_SPACE: break quoted strings at a space character
#1123: FILE: drivers/net/igb/igb_main.c:4940:
+			printk(KERN_ERR "Error %d Sending set VMOLR LPE Ack"
+			       "to VF\n", err);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1127: FILE: drivers/net/igb/igb_main.c:4944:
+		if ((err = igb_send_msg_to_vf(adapter, msgbuf, vf) != 0))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1128: FILE: drivers/net/igb/igb_main.c:4945:
+			printk(KERN_ERR "Error %d Sending set VLAN ID Ack"

WARNING:SPLIT_STRING: quoted string split across lines
#1129: FILE: drivers/net/igb/igb_main.c:4946:
+			printk(KERN_ERR "Error %d Sending set VLAN ID Ack"
+			       "to VF\n", err);

WARNING:MISSING_SPACE: break quoted strings at a space character
#1129: FILE: drivers/net/igb/igb_main.c:4946:
+			printk(KERN_ERR "Error %d Sending set VLAN ID Ack"
+			       "to VF\n", err);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1134: FILE: drivers/net/igb/igb_main.c:4951:
+			printk(KERN_ERR "Unhandled Msg %8.8x\n", msgbuf[0]);

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_i' - possible side-effects?
#1146: FILE: drivers/net/igb/igb_main.c:4963:
+#define E1000_RAH(_i)	(((_i) <= 15) ? (0x05404 + ((_i) * 8)) : (0x054E4 + ((_i - 16) * 8)))

ERROR:POINTER_LOCATION: "foo*bar" should be "foo *bar"
#1148: FILE: drivers/net/igb/igb_main.c:4965:
+static int igb_set_pf_mac(struct net_device *netdev, int queue, u8*mac_addr)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1179: FILE: drivers/net/igb/igb_main.c:4996:
+static int igb_set_vf_mac(struct net_device *netdev,
+						 int vf,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1215: FILE: drivers/net/igb/igb_main.c:5032:
+		 * can send/receive mail */

WARNING:LINE_SPACING: Missing a blank line after declarations
#1248: FILE: drivers/net/igb/igb_main.c:5065:
+		struct igb_ring *ring = &adapter->rx_ring[i - rbase_offset];
+		rdba = ring->dma;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1257: FILE: drivers/net/igb/igb_main.c:5074:
+		printk("RXDCTL%d == %8.8x\n", i, rxdctl);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1260: FILE: drivers/net/igb/igb_main.c:5077:
+^I^I                rdba & 0x00000000ffffffffULL);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1260: FILE: drivers/net/igb/igb_main.c:5077:
+		wr32(E1000_RDBAL(i),
+		                rdba & 0x00000000ffffffffULL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1263: FILE: drivers/net/igb/igb_main.c:5080:
+^I^I               ring->count * sizeof(union e1000_adv_rx_desc));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1263: FILE: drivers/net/igb/igb_main.c:5080:
+		wr32(E1000_RDLEN(i),
+		               ring->count * sizeof(union e1000_adv_rx_desc));

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1289: FILE: drivers/net/igb/igb_main.c:5106:
+	 * it can accept packets that match the MTA table */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000199175.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 20 errors, 56 warnings, 14 checks, 1166 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000199175.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
