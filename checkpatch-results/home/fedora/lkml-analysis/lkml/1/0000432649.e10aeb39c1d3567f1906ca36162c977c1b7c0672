WARNING:TYPO_SPELLING: 'wheras' may be misspelled - perhaps 'whereas'?
#35: 
> > quite nicely (wheras they eventually locked up before).
                  ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#91: FILE: include/asm-x86_64/bitops.h:76:
+static __inline__ void clear_bit_unlock(int nr, volatile void * addr)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#91: FILE: include/asm-x86_64/bitops.h:76:
+static __inline__ void clear_bit_unlock(int nr, volatile void * addr)

WARNING:INLINE: plain inline is preferred over __inline__
#91: FILE: include/asm-x86_64/bitops.h:76:
+static __inline__ void clear_bit_unlock(int nr, volatile void * addr)

ERROR:SPACING: space prohibited after that open parenthesis '('
#94: FILE: include/asm-x86_64/bitops.h:79:
+	__asm__ __volatile__( LOCK_PREFIX

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#96: FILE: include/asm-x86_64/bitops.h:81:
+		:ADDR
 		^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#97: FILE: include/asm-x86_64/bitops.h:82:
+		:"dIr" (nr));
 		^

WARNING:INLINE: plain inline is preferred over __inline__
#109: FILE: include/asm-x86_64/bitops.h:94:
+static __inline__ void __clear_bit_unlock_byte(int nr, void *addr)

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: include/asm-x86_64/bitops.h:96:
+        unsigned char mask = 1UL << (nr % BITS_PER_BYTE);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: include/asm-x86_64/bitops.h:96:
+        unsigned char mask = 1UL << (nr % BITS_PER_BYTE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: include/asm-x86_64/bitops.h:97:
+        unsigned char *p = addr + nr / BITS_PER_BYTE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: include/asm-x86_64/bitops.h:97:
+        unsigned char *p = addr + nr / BITS_PER_BYTE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: include/asm-x86_64/bitops.h:99:
+        barrier();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: include/asm-x86_64/bitops.h:99:
+        barrier();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: include/asm-x86_64/bitops.h:100:
+        *p &= ~mask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: include/asm-x86_64/bitops.h:100:
+        *p &= ~mask;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#125: FILE: include/asm-x86_64/bitops.h:167:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#133: FILE: include/asm-x86_64/bitops.h:175:
+static __inline__ int test_and_set_bit_lock(int nr, volatile void * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#133: FILE: include/asm-x86_64/bitops.h:175:
+static __inline__ int test_and_set_bit_lock(int nr, volatile void * addr)

WARNING:INLINE: plain inline is preferred over __inline__
#133: FILE: include/asm-x86_64/bitops.h:175:
+static __inline__ int test_and_set_bit_lock(int nr, volatile void * addr)

ERROR:SPACING: space prohibited after that open parenthesis '('
#137: FILE: include/asm-x86_64/bitops.h:179:
+	__asm__ __volatile__( LOCK_PREFIX

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#139: FILE: include/asm-x86_64/bitops.h:181:
+		:"=r" (oldbit),ADDR
 		^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#139: FILE: include/asm-x86_64/bitops.h:181:
+		:"=r" (oldbit),ADDR
 		              ^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#140: FILE: include/asm-x86_64/bitops.h:182:
+		:"dIr" (nr));
 		^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#240: FILE: mm/page_alloc.c:196:
+			1UL << PG_private|
 			                 ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#244: FILE: mm/page_alloc.c:200:
+			1UL << PG_reclaim|
 			                 ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#246: FILE: mm/page_alloc.c:202:
+			1UL << PG_swapcache|
 			                   ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#247: FILE: mm/page_alloc.c:203:
+			1UL << PG_writeback|
 			                   ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#249: FILE: mm/page_alloc.c:205:
+			1UL << PG_waiters );

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "page->mapping"
#259: FILE: mm/page_alloc.c:430:
+		(page->mapping != NULL)	 |

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#273: FILE: mm/page_alloc.c:434:
+			1UL << PG_private|
 			                 ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#277: FILE: mm/page_alloc.c:438:
+			1UL << PG_swapcache|
 			                   ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#278: FILE: mm/page_alloc.c:439:
+			1UL << PG_writeback|
 			                   ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#279: FILE: mm/page_alloc.c:440:
+			1UL << PG_reserved|
 			                  ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#281: FILE: mm/page_alloc.c:442:
+			1UL << PG_waiters ))))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "page->mapping"
#291: FILE: mm/page_alloc.c:585:
+		(page->mapping != NULL)	 |

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#307: FILE: mm/page_alloc.c:589:
+			1UL << PG_private|
 			                 ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#311: FILE: mm/page_alloc.c:593:
+			1UL << PG_reclaim|
 			                 ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#313: FILE: mm/page_alloc.c:595:
+			1UL << PG_swapcache|
 			                   ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#314: FILE: mm/page_alloc.c:596:
+			1UL << PG_writeback|
 			                   ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#315: FILE: mm/page_alloc.c:597:
+			1UL << PG_reserved|
 			                  ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#317: FILE: mm/page_alloc.c:599:
+			1UL << PG_waiters ))))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000432649.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 16 errors, 10 warnings, 16 checks, 225 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000432649.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
