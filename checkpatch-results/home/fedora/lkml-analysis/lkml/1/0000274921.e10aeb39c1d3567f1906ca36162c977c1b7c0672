WARNING:LINE_SPACING: Missing a blank line after declarations
#66: FILE: arch/x86/oprofile/nmi_int.c:86:
+	struct op_msrs *msrs = &__get_cpu_var(cpu_msrs);
+	model->switch_ctrs(msrs);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: arch/x86/oprofile/op_model_athlon.c:57:
+ ^I^Iif (reserve_perfctr_nmi(MSR_K7_PERFCTR0 + hw_counter))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#168: FILE: arch/x86/oprofile/op_model_athlon.c:57:
+ ^I^Iif (reserve_perfctr_nmi(MSR_K7_PERFCTR0 + hw_counter))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: arch/x86/oprofile/op_model_athlon.c:57:
+ ^I^Iif (reserve_perfctr_nmi(MSR_K7_PERFCTR0 + hw_counter))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: arch/x86/oprofile/op_model_athlon.c:58:
+ ^I^I^Imsrs->counters[i].addr = MSR_K7_PERFCTR0 + hw_counter;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#169: FILE: arch/x86/oprofile/op_model_athlon.c:58:
+ ^I^I^Imsrs->counters[i].addr = MSR_K7_PERFCTR0 + hw_counter;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: arch/x86/oprofile/op_model_athlon.c:58:
+ ^I^I^Imsrs->counters[i].addr = MSR_K7_PERFCTR0 + hw_counter;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#178: FILE: arch/x86/oprofile/op_model_athlon.c:65:
+		int hw_control = i % NUM_HARDWARE_CONTROLS;
+		if (reserve_evntsel_nmi(MSR_K7_EVNTSEL0 + hw_control))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#239: FILE: arch/x86/oprofile/op_model_athlon.c:138:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#243: FILE: arch/x86/oprofile/op_model_athlon.c:142:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#254: FILE: arch/x86/oprofile/op_model_athlon.c:151:
+		int offset = i + __get_cpu_var(switch_index);
+		if (!reset_value[offset])

WARNING:LINE_SPACING: Missing a blank line after declarations
#307: FILE: arch/x86/oprofile/op_model_athlon.c:207:
+		int offset = i + s;
+		if (!reset_value[offset])

CHECK:LINE_SPACING: Please don't use multiple blank lines
#314: FILE: arch/x86/oprofile/op_model_athlon.c:214:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 's > NUM_HARDWARE_COUNTERS'
#317: FILE: arch/x86/oprofile/op_model_athlon.c:217:
+	if ((s > NUM_HARDWARE_COUNTERS) || (counter_config[s].count == 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'counter_config[s].count == 0'
#317: FILE: arch/x86/oprofile/op_model_athlon.c:217:
+	if ((s > NUM_HARDWARE_COUNTERS) || (counter_config[s].count == 0)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#317: FILE: arch/x86/oprofile/op_model_athlon.c:217:
+	if ((s > NUM_HARDWARE_COUNTERS) || (counter_config[s].count == 0)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#320: FILE: arch/x86/oprofile/op_model_athlon.c:220:
+	} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#326: FILE: arch/x86/oprofile/op_model_athlon.c:226:
+		int offset = i + s;
+		if ((counter_config[offset].enabled) && (CTR_IS_RESERVED(msrs,i))) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#326: FILE: arch/x86/oprofile/op_model_athlon.c:226:
+		if ((counter_config[offset].enabled) && (CTR_IS_RESERVED(msrs,i))) {
 		                                                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'counter_config[offset].enabled'
#326: FILE: arch/x86/oprofile/op_model_athlon.c:226:
+		if ((counter_config[offset].enabled) && (CTR_IS_RESERVED(msrs,i))) {

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#328: FILE: arch/x86/oprofile/op_model_athlon.c:228:
+				counter_config[offset].save_count_low = counter_config[offset].count;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:LINE_SPACING: Please don't use multiple blank lines
#347: FILE: arch/x86/oprofile/op_model_athlon.c:247:
+
+

WARNING:SPACING: space prohibited before semicolon
#401: FILE: drivers/oprofile/oprof.c:29:
+unsigned long time_slice = 5 * USEC_PER_SEC	;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#475: FILE: drivers/oprofile/oprof.c:197:
+
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#525: FILE: drivers/oprofile/oprofile_files.c:21:
+static ssize_t time_slice_read(struct file * file, char __user * buf, size_t count, loff_t * offset)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#525: FILE: drivers/oprofile/oprofile_files.c:21:
+static ssize_t time_slice_read(struct file * file, char __user * buf, size_t count, loff_t * offset)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#525: FILE: drivers/oprofile/oprofile_files.c:21:
+static ssize_t time_slice_read(struct file * file, char __user * buf, size_t count, loff_t * offset)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#530: FILE: drivers/oprofile/oprofile_files.c:26:
+
+

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#531: FILE: drivers/oprofile/oprofile_files.c:27:
+static ssize_t time_slice_write(struct file * file, char const __user * buf, size_t count, loff_t * offset)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#531: FILE: drivers/oprofile/oprofile_files.c:27:
+static ssize_t time_slice_write(struct file * file, char const __user * buf, size_t count, loff_t * offset)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#531: FILE: drivers/oprofile/oprofile_files.c:27:
+static ssize_t time_slice_write(struct file * file, char const __user * buf, size_t count, loff_t * offset)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#531: FILE: drivers/oprofile/oprofile_files.c:27:
+static ssize_t time_slice_write(struct file * file, char const __user * buf, size_t count, loff_t * offset)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#555: FILE: drivers/oprofile/oprofile_files.c:51:
+
+

WARNING:TYPO_SPELLING: 'Optioinal' may be misspelled - perhaps 'Optional'?
#589: FILE: include/linux/oprofile.h:69:
+	/* Multiplex between different events. Optioinal. */
 	                                       ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000274921.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 13 warnings, 11 checks, 477 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000274921.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
