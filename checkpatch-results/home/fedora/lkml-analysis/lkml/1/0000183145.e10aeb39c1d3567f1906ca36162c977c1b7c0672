WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#34: 
The workqueue tracer provides some statistical informations
                                               ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#41: 
It only traces statistical informations for now but it will probably later
                           ^^^^^^^^^^^^

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
# CPU  INSERTED  EXECUTED   NAME

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
# |      |         |          |

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#88: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#93: FILE: include/trace/workqueue.h:1:
+#ifndef __TRACE_WORKQUEUE_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#101: FILE: include/trace/workqueue.h:9:
+DECLARE_TRACE(workqueue_insertion,
+	   TPPROTO(struct task_struct *wq_thread, struct work_struct *work),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#105: FILE: include/trace/workqueue.h:13:
+DECLARE_TRACE(workqueue_execution,
+	   TPPROTO(struct task_struct *wq_thread, struct work_struct *work),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#110: FILE: include/trace/workqueue.h:18:
+DECLARE_TRACE(workqueue_creation,
+	   TPPROTO(struct task_struct *wq_thread, int cpu),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: include/trace/workqueue.h:22:
+DECLARE_TRACE(workqueue_destruction,
+	   TPPROTO(struct task_struct *wq_thread),

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#130: FILE: kernel/trace/Kconfig:291:
+	  The workqueue tracer provides some statistical informations
 	                                                 ^^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#136: FILE: kernel/trace/Kconfig:297:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#157: FILE: kernel/trace/trace_workqueue.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#164: FILE: kernel/trace/trace_workqueue.c:8:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#170: FILE: kernel/trace/trace_workqueue.c:14:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#177: FILE: kernel/trace/trace_workqueue.c:21:
+^Ipid_t ^I^I^I    pid;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#179: FILE: kernel/trace/trace_workqueue.c:23:
+^Iatomic_t ^I            inserted;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#184: FILE: kernel/trace/trace_workqueue.c:28:
+^Iunsigned int ^I ^I    executed;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#187: FILE: kernel/trace/trace_workqueue.c:31:
+
+

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#242: FILE: kernel/trace/trace_workqueue.c:86:
+	WARN_ON(cpu < 0 || cpu >= NR_CPUS);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*cws)...) over kzalloc(sizeof(struct cpu_workqueue_stats)...)
#245: FILE: kernel/trace/trace_workqueue.c:89:
+	cws = kzalloc(sizeof(struct cpu_workqueue_stats), GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#247: FILE: kernel/trace/trace_workqueue.c:91:
+	if (!cws) {
+		pr_warning("trace_workqueue: not enough memory\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#285: FILE: kernel/trace/trace_workqueue.c:129:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#292: FILE: kernel/trace/trace_workqueue.c:136:
+
+

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#309: FILE: kernel/trace/trace_workqueue.c:153:
+	for (i = 0; i < NR_CPUS; i++) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#310: FILE: kernel/trace/trace_workqueue.c:154:
+	for (i = 0; i < NR_CPUS; i++) {
+

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#328: FILE: kernel/trace/trace_workqueue.c:172:
+		for (++cpu ; cpu < NR_CPUS; cpu++) {

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#354: FILE: kernel/trace/trace_workqueue.c:198:
+		seq_printf(s, "\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#362: FILE: kernel/trace/trace_workqueue.c:206:
+	seq_printf(s, "# CPU  INSERTED  EXECUTED   NAME\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#363: FILE: kernel/trace/trace_workqueue.c:207:
+	seq_printf(s, "# |      |         |          |\n\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#375: FILE: kernel/trace/trace_workqueue.c:219:
+
+

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#411: FILE: kernel/trace/trace_workqueue.c:255:
+	for (i = 0; i < NR_CPUS; i++) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000183145.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 19 warnings, 12 checks, 390 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000183145.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
