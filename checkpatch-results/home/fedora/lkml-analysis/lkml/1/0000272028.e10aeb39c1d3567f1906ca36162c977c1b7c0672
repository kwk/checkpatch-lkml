WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct chsc_ssd_info *' should also have an identifier name
#108: FILE: drivers/s390/cio/chp.h:64:
+int chp_ssd_get_mask(struct chsc_ssd_info *, struct res_acc_data *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct res_acc_data *' should also have an identifier name
#108: FILE: drivers/s390/cio/chp.h:64:
+int chp_ssd_get_mask(struct chsc_ssd_info *, struct res_acc_data *);

WARNING:SPLIT_STRING: quoted string split across lines
#538: FILE: drivers/s390/cio/css.c:361:
+				"Got subchannel machine check but "
+				"no sch_event handler provided.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct subchannel *' should also have an identifier name
#579: FILE: drivers/s390/cio/css.h:80:
+	int (*chp_event)(struct subchannel *, void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#579: FILE: drivers/s390/cio/css.h:80:
+	int (*chp_event)(struct subchannel *, void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#579: FILE: drivers/s390/cio/css.h:80:
+	int (*chp_event)(struct subchannel *, void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct subchannel *' should also have an identifier name
#580: FILE: drivers/s390/cio/css.h:81:
+	int (*sch_event)(struct subchannel *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#580: FILE: drivers/s390/cio/css.h:81:
+	int (*sch_event)(struct subchannel *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#589: FILE: drivers/s390/cio/css.h:99:
+extern int css_probe_device(struct subchannel_id);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct subchannel_id' should also have an identifier name
#589: FILE: drivers/s390/cio/css.h:99:
+extern int css_probe_device(struct subchannel_id);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#590: FILE: drivers/s390/cio/css.h:100:
+extern struct subchannel *get_subchannel_by_schid(struct subchannel_id);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct subchannel_id' should also have an identifier name
#590: FILE: drivers/s390/cio/css.h:100:
+extern struct subchannel *get_subchannel_by_schid(struct subchannel_id);

CHECK:BRACES: braces {} should be used on all arms of this statement
#727: FILE: drivers/s390/cio/device.c:1318:
+		if (cdev->private->state == DEV_STATE_ONLINE)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#729: FILE: drivers/s390/cio/device.c:1320:
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#734: FILE: drivers/s390/cio/device.c:1325:
+	} else

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#738: FILE: drivers/s390/cio/device.c:1329:
+
+}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'schib.pmcw.dev != sch->schib.pmcw.dev'
#791: FILE: drivers/s390/cio/device.c:1404:
+	if (sch->schib.pmcw.dnv && (schib.pmcw.dev != sch->schib.pmcw.dev))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: braces {} should be used on all arms of this statement
#834: FILE: drivers/s390/cio/device.c:1447:
+	if (redo) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#843: FILE: drivers/s390/cio/device.c:1456:
+	} else

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'recovery_phase != 0'
#864: FILE: drivers/s390/cio/device.c:1477:
+	if (!timer_pending(&recovery_timer) || (recovery_phase != 0)) {

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#919: FILE: drivers/s390/cio/device.c:1532:
+		/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ccw_device *' should also have an identifier name
#1245: FILE: drivers/s390/cio/device.h:120:
+void ccw_device_trigger_reprobe(struct ccw_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ccw_device *' should also have an identifier name
#1246: FILE: drivers/s390/cio/device.h:121:
+void ccw_device_kill_io(struct ccw_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ccw_device *' should also have an identifier name
#1247: FILE: drivers/s390/cio/device.h:122:
+int ccw_device_notify(struct ccw_device *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1247: FILE: drivers/s390/cio/device.h:122:
+int ccw_device_notify(struct ccw_device *, int);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000272028.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 15 warnings, 10 checks, 1136 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000272028.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
