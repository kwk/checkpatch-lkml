WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
master.kernel.org:/pub/scm/linux/kernel/git/cooloney/blackfin-2.6.git for-linus

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#118: FILE: arch/blackfin/kernel/bfin_gpio.c:122:
+#define MAX_RESOURCES ^I^I256$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#119: FILE: arch/blackfin/kernel/bfin_gpio.c:123:
+#define RESOURCE_LABEL_SIZE ^I16$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#134: FILE: arch/blackfin/kernel/bfin_gpio.c:158:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#137: FILE: arch/blackfin/kernel/bfin_gpio.c:161:
+		strncpy(str_ident[ident].name, label,
+			 RESOURCE_LABEL_SIZE);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#147: FILE: arch/blackfin/kernel/bfin_gpio.c:171:
+	return (*str_ident[ident].name ? str_ident[ident].name : "UNKNOWN");

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#171: FILE: arch/blackfin/kernel/bfin_gpio.c:187:
+		if (usage == GPIO_USAGE) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#173: FILE: arch/blackfin/kernel/bfin_gpio.c:189:
+		} else

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#237: FILE: arch/blackfin/kernel/bfin_gpio.c:253:
+		if (port_mux_lut[y].res == per) {
+

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#243: FILE: arch/blackfin/kernel/bfin_gpio.c:259:
+			if (offset != 1) {
[...]
+			} else {
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#269: FILE: arch/blackfin/kernel/bfin_gpio.c:295:
+	str_ident = kcalloc(MAX_RESOURCES,
+				 sizeof(struct str_ident), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!str_ident"
#270: FILE: arch/blackfin/kernel/bfin_gpio.c:296:
+	if (str_ident == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#284: FILE: arch/blackfin/kernel/bfin_gpio.c:301:
+	printk(KERN_INFO "Blackfin GPIO Controller\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#289: FILE: arch/blackfin/kernel/bfin_gpio.c:305:
 
+}

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#298: FILE: arch/blackfin/kernel/bfin_gpio.c:332:
+	BUG_ON(!(reserved_gpio_map[gpio_bank(gpio)] & gpio_bit(gpio))); \

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#307: FILE: arch/blackfin/kernel/bfin_gpio.c:352:
+	BUG_ON(!(reserved_gpio_map[gpio_bank(gpio)] & gpio_bit(gpio))); \

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#316: FILE: arch/blackfin/kernel/bfin_gpio.c:367:
+	BUG_ON(!(reserved_gpio_map[gpio_bank(gpio)] & gpio_bit(gpio)));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#325: FILE: arch/blackfin/kernel/bfin_gpio.c:386:
+	BUG_ON(!(reserved_gpio_map[gpio_bank(gpio)] & gpio_bit(gpio)));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#334: FILE: arch/blackfin/kernel/bfin_gpio.c:395:
+	BUG_ON(!(reserved_gpio_map[gpio_bank(gpio)] & gpio_bit(gpio)));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#343: FILE: arch/blackfin/kernel/bfin_gpio.c:459:
+	BUG_ON(!(reserved_gpio_map[gpio_bank(gpio)] & gpio_bit(gpio)));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#378: FILE: arch/blackfin/kernel/bfin_gpio.c:661:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#380: FILE: arch/blackfin/kernel/bfin_gpio.c:663:
+
+

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#398: FILE: arch/blackfin/kernel/bfin_gpio.c:681:
+	if (!check_gpio(ident)) {
[...]
+	if (unlikely(reserved_gpio_map[gpio_bank(ident)] & gpio_bit(ident))) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#399: FILE: arch/blackfin/kernel/bfin_gpio.c:682:
+	if (!check_gpio(ident)) {
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#401: FILE: arch/blackfin/kernel/bfin_gpio.c:684:
+		printk(KERN_ERR

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#403: FILE: arch/blackfin/kernel/bfin_gpio.c:686:
+		       __FUNCTION__, ident, get_label(ident));

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#409: FILE: arch/blackfin/kernel/bfin_gpio.c:692:
+
+	}

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#411: FILE: arch/blackfin/kernel/bfin_gpio.c:694:
+	if (unlikely(reserved_peri_map[gpio_bank(ident)] & gpio_bit(ident))) {
[...]
+	if (!(per & P_MAYSHARE)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#412: FILE: arch/blackfin/kernel/bfin_gpio.c:695:
+	if (unlikely(reserved_peri_map[gpio_bank(ident)] & gpio_bit(ident))) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#419: FILE: arch/blackfin/kernel/bfin_gpio.c:702:
+	if (!(per & P_MAYSHARE)) {
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#428: FILE: arch/blackfin/kernel/bfin_gpio.c:711:
+			printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#430: FILE: arch/blackfin/kernel/bfin_gpio.c:713:
+			       "%s: Peripheral %d function %d is already"
+			       " reserved by %s !\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#431: FILE: arch/blackfin/kernel/bfin_gpio.c:714:
+			       __FUNCTION__, ident, P_FUNCT2MUX(per),

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#438: FILE: arch/blackfin/kernel/bfin_gpio.c:721:
+
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#442: FILE: arch/blackfin/kernel/bfin_gpio.c:725:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#461: FILE: arch/blackfin/kernel/bfin_gpio.c:744:
+	for (cnt = 0; per[cnt] != 0; cnt++) {
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#465: FILE: arch/blackfin/kernel/bfin_gpio.c:748:
+			for ( ; cnt > 0; cnt--) {
+				peripheral_free(per[cnt - 1]);
+			}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#498: FILE: arch/blackfin/kernel/bfin_gpio.c:781:
+	if (!(per & P_MAYSHARE)) {
+		port_setup(ident, GPIO_USAGE);
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#512: FILE: arch/blackfin/kernel/bfin_gpio.c:795:
+	for (cnt = 0; per[cnt] != 0; cnt++) {
+		peripheral_free(per[cnt]);
+	}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#516: FILE: arch/blackfin/kernel/bfin_gpio.c:799:
+
+}

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#561: FILE: arch/blackfin/kernel/bfin_gpio.c:870:
+	BUG_ON(!(reserved_gpio_map[gpio_bank(gpio)] & gpio_bit(gpio)));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#570: FILE: arch/blackfin/kernel/bfin_gpio.c:883:
+	BUG_ON(!(reserved_gpio_map[gpio_bank(gpio)] & gpio_bit(gpio)));

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/gpio.h> instead of <asm/gpio.h>
#608: FILE: arch/blackfin/mach-bf548/boards/ezkit.c:41:
+#include <asm/gpio.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#643: FILE: arch/blackfin/mach-bf548/boards/ezkit.c:79:
+^I.num_resources ^I= ARRAY_SIZE(bf54x_lq043_resources),$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#644: FILE: arch/blackfin/mach-bf548/boards/ezkit.c:80:
+^I.resource ^I= bf54x_lq043_resources,$

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#651: FILE: arch/blackfin/mach-bf548/boards/ezkit.c:87:
+#if defined(CONFIG_KEYBOARD_BFIN) || defined(CONFIG_KEYBOARD_BFIN_MODULE)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#674: FILE: arch/blackfin/mach-bf548/boards/ezkit.c:110:
+^I.keymap ^I^I= bf548_keymap,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#675: FILE: arch/blackfin/mach-bf548/boards/ezkit.c:111:
+^I.keymapsize ^I^I= ARRAY_SIZE(bf548_keymap),$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#692: FILE: arch/blackfin/mach-bf548/boards/ezkit.c:128:
+^I.num_resources ^I= ARRAY_SIZE(bf54x_kpad_resources),$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#693: FILE: arch/blackfin/mach-bf548/boards/ezkit.c:129:
+^I.resource ^I= bf54x_kpad_resources,$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#721: FILE: arch/blackfin/mach-bf548/boards/ezkit.c:196:
+};
+static struct platform_device smsc911x_device = {

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#815: FILE: arch/blackfin/mach-bf548/boards/ezkit.c:290:
+#if defined(CONFIG_SPI_BFIN) || defined(CONFIG_SPI_BFIN_MODULE)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#818: FILE: arch/blackfin/mach-bf548/boards/ezkit.c:293:
+#if defined(CONFIG_MTD_M25P80) \
+	|| defined(CONFIG_MTD_M25P80_MODULE)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#861: FILE: arch/blackfin/mach-bf548/boards/ezkit.c:336:
+^I.stopacq_polarity ^I= 1,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#863: FILE: arch/blackfin/mach-bf548/boards/ezkit.c:338:
+^I.acquisition_time ^I= 1,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#864: FILE: arch/blackfin/mach-bf548/boards/ezkit.c:339:
+^I.averaging ^I^I= 1,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#865: FILE: arch/blackfin/mach-bf548/boards/ezkit.c:340:
+^I.pen_down_acc_interval ^I= 1,$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#871: FILE: arch/blackfin/mach-bf548/boards/ezkit.c:346:
+#if defined(CONFIG_MTD_M25P80) \
+	|| defined(CONFIG_MTD_M25P80_MODULE)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#890: FILE: arch/blackfin/mach-bf548/boards/ezkit.c:365:
+^I.chip_select  ^I^I= 2,$

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#977: FILE: arch/blackfin/mach-bf548/boards/ezkit.c:453:
+#if defined(CONFIG_SPI_BFIN) || defined(CONFIG_SPI_BFIN_MODULE)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#981: FILE: arch/blackfin/mach-bf548/boards/ezkit.c:457:
+#if defined(CONFIG_KEYBOARD_BFIN) || defined(CONFIG_KEYBOARD_BFIN_MODULE)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#995: FILE: arch/blackfin/mach-bf548/boards/ezkit.c:471:
+#if defined(CONFIG_SPI_BFIN) || defined(CONFIG_SPI_BFIN_MODULE)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#997: FILE: arch/blackfin/mach-bf548/boards/ezkit.c:473:
+	spi_register_board_info(bf54x_spi_board_info,
+			ARRAY_SIZE(bf54x_spi_board_info));

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1011: FILE: arch/blackfin/mach-bf548/gpio.c:53:
+#define MAX_RESOURCES ^I^I256$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1012: FILE: arch/blackfin/mach-bf548/gpio.c:54:
+#define RESOURCE_LABEL_SIZE ^I16$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1050: FILE: arch/blackfin/mach-bf548/gpio.c:102:
 {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1052: FILE: arch/blackfin/mach-bf548/gpio.c:104:
+	str_ident = kcalloc(MAX_RESOURCES,
+				 sizeof(struct str_ident), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!str_ident"
#1053: FILE: arch/blackfin/mach-bf548/gpio.c:105:
+	if (str_ident == NULL)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1067: FILE: arch/blackfin/mach-bf548/gpio.c:119:
+{
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1070: FILE: arch/blackfin/mach-bf548/gpio.c:122:
+		strncpy(str_ident[ident].name, label,
+			 RESOURCE_LABEL_SIZE);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1080: FILE: arch/blackfin/mach-bf548/gpio.c:132:
+	return (*str_ident[ident].name ? str_ident[ident].name : "UNKNOWN");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1114: FILE: arch/blackfin/mach-bf548/gpio.c:167:
+		       __FUNCTION__, ident, get_label(ident));

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#1127: FILE: arch/blackfin/mach-bf548/gpio.c:182:
 		if (!((per & P_MAYSHARE) && (funct == P_FUNCT2MUX(per)))) {
[...]
+		if (cmp_label(ident, label) == 0)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1128: FILE: arch/blackfin/mach-bf548/gpio.c:183:
 		if (!((per & P_MAYSHARE) && (funct == P_FUNCT2MUX(per)))) {
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1141: FILE: arch/blackfin/mach-bf548/gpio.c:194:
+			       __FUNCTION__, ident, P_FUNCT2MUX(per), get_label(ident));

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1168: FILE: arch/blackfin/mach-bf548/gpio.c:220:
 	for (cnt = 0; per[cnt] != 0; cnt++) {
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1174: FILE: arch/blackfin/mach-bf548/gpio.c:224:
+			for ( ; cnt > 0; cnt--) {
+				peripheral_free(per[cnt - 1]);
+			}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1181: FILE: arch/blackfin/mach-bf548/gpio.c:231:
 
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1209: FILE: arch/blackfin/mach-bf548/gpio.c:303:
+		printk(KERN_ERR "bfin-gpio: GPIO %d is already reserved by %s !\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1210: FILE: arch/blackfin/mach-bf548/gpio.c:304:
+		printk(KERN_ERR "bfin-gpio: GPIO %d is already reserved by %s !\n",
+			 gpio, get_label(gpio));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1330: FILE: include/asm-blackfin/gpio.h:445:
+static inline int gpio_to_irq(unsigned gpio)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1335: FILE: include/asm-blackfin/gpio.h:450:
+static inline int irq_to_gpio(unsigned irq)

CHECK:CAMELCASE: Avoid CamelCase: <P_MII0_ETxD0>
#1493: FILE: include/asm-blackfin/mach-bf537/portmux.h:110:
+	P_MII0_ETxD0, \

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <P_MII0_ETxD1>
#1494: FILE: include/asm-blackfin/mach-bf537/portmux.h:111:
+	P_MII0_ETxD1, \

CHECK:CAMELCASE: Avoid CamelCase: <P_MII0_ETxD2>
#1495: FILE: include/asm-blackfin/mach-bf537/portmux.h:112:
+	P_MII0_ETxD2, \

CHECK:CAMELCASE: Avoid CamelCase: <P_MII0_ETxD3>
#1496: FILE: include/asm-blackfin/mach-bf537/portmux.h:113:
+	P_MII0_ETxD3, \

CHECK:CAMELCASE: Avoid CamelCase: <P_MII0_ETxEN>
#1497: FILE: include/asm-blackfin/mach-bf537/portmux.h:114:
+	P_MII0_ETxEN, \

CHECK:CAMELCASE: Avoid CamelCase: <P_MII0_TxCLK>
#1498: FILE: include/asm-blackfin/mach-bf537/portmux.h:115:
+	P_MII0_TxCLK, \

CHECK:CAMELCASE: Avoid CamelCase: <P_MII0_ERxD0>
#1501: FILE: include/asm-blackfin/mach-bf537/portmux.h:118:
+	P_MII0_ERxD0, \

CHECK:CAMELCASE: Avoid CamelCase: <P_MII0_ERxD1>
#1502: FILE: include/asm-blackfin/mach-bf537/portmux.h:119:
+	P_MII0_ERxD1, \

CHECK:CAMELCASE: Avoid CamelCase: <P_MII0_ERxD2>
#1503: FILE: include/asm-blackfin/mach-bf537/portmux.h:120:
+	P_MII0_ERxD2, \

CHECK:CAMELCASE: Avoid CamelCase: <P_MII0_ERxD3>
#1504: FILE: include/asm-blackfin/mach-bf537/portmux.h:121:
+	P_MII0_ERxD3, \

CHECK:CAMELCASE: Avoid CamelCase: <P_MII0_ERxDV>
#1505: FILE: include/asm-blackfin/mach-bf537/portmux.h:122:
+	P_MII0_ERxDV, \

CHECK:CAMELCASE: Avoid CamelCase: <P_MII0_ERxCLK>
#1506: FILE: include/asm-blackfin/mach-bf537/portmux.h:123:
+	P_MII0_ERxCLK, \

CHECK:CAMELCASE: Avoid CamelCase: <P_MII0_ERxER>
#1507: FILE: include/asm-blackfin/mach-bf537/portmux.h:124:
+	P_MII0_ERxER, \

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1512: FILE: include/asm-blackfin/mach-bf537/portmux.h:129:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1525: FILE: include/asm-blackfin/mach-bf537/portmux.h:142:
+#endif^I^I^I        ^I/* _MACH_PORTMUX_H_ */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1717: FILE: include/asm-blackfin/portmux.h:17:
 
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000391720.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 50 warnings, 46 checks, 1501 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000391720.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
