WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#76: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#81: FILE: arch/microblaze/mm/init.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#82: FILE: arch/microblaze/mm/init.c:2:
+ * arch/microblaze/mm/init.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/uaccess.h> instead of <asm/uaccess.h>
#102: FILE: arch/microblaze/mm/init.c:22:
+#include <asm/uaccess.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#104: FILE: arch/microblaze/mm/init.c:24:
+#include <asm/pgtable.h>

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#128: FILE: arch/microblaze/mm/init.c:48:
+		if ((start_pfn <= (((int)_text) >> PAGE_SHIFT)) &&
+			(((int)_text >> PAGE_SHIFT) <= end_pfn)) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#130: FILE: arch/microblaze/mm/init.c:50:
+			PAGE_OFFSET = memory_start = start_pfn << PAGE_SHIFT;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#132: FILE: arch/microblaze/mm/init.c:52:
+			pr_debug("%s: Main mem: 0x%x-0x%x\n", __func__,
+				memory_start, memory_end);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#165: FILE: arch/microblaze/mm/init.c:85:
+	printk(KERN_INFO "%s: max_mapnr: %#lx\n", __func__, max_mapnr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#166: FILE: arch/microblaze/mm/init.c:86:
+	printk(KERN_INFO "%s: min_low_pfn: %#lx\n", __func__, min_low_pfn);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#167: FILE: arch/microblaze/mm/init.c:87:
+	printk(KERN_INFO "%s: max_low_pfn: %#lx\n", __func__, max_low_pfn);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#171: FILE: arch/microblaze/mm/init.c:91:
+	map_size = init_bootmem_node(NODE_DATA(0), PFN_UP(end),
+			min_low_pfn, max_mapnr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#176: FILE: arch/microblaze/mm/init.c:96:
+	free_bootmem(start_pfn << PAGE_SHIFT,
+			((end_pfn - start_pfn) << PAGE_SHIFT) - 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#181: FILE: arch/microblaze/mm/init.c:101:
+		pr_debug("reserved %d - 0x%08x-0x%08x\n", i,
+			(u32) lmb.reserved.region[i].base,

CHECK:SPACING: No space is necessary after a cast
#181: FILE: arch/microblaze/mm/init.c:101:
+			(u32) lmb.reserved.region[i].base,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#182: FILE: arch/microblaze/mm/init.c:102:
+			(u32) lmb_size_bytes(&lmb.reserved, i));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#184: FILE: arch/microblaze/mm/init.c:104:
+		reserve_bootmem(lmb.reserved.region[i].base,
+			lmb_size_bytes(&lmb.reserved, i) - 1, BOOTMEM_DEFAULT);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#194: FILE: arch/microblaze/mm/init.c:114:
+	 * ZONE_DMA. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#202: FILE: arch/microblaze/mm/init.c:122:
+	free_area_init_node(0, NODE_DATA(0), zones_size,
+		NODE_DATA(0)->bdata->node_boot_start >> PAGE_SHIFT, NULL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#216: FILE: arch/microblaze/mm/init.c:136:
+	printk(KERN_INFO "Freeing %s: %ldk freed\n", what, (end - begin) >> 10);

WARNING:LINE_SPACING: Missing a blank line after declarations
#223: FILE: arch/microblaze/mm/init.c:143:
+	int pages = 0;
+	for (; start < end; start += PAGE_SIZE) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#230: FILE: arch/microblaze/mm/init.c:150:
+	printk(KERN_NOTICE "Freeing initrd memory: %dk freed\n", pages);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#244: FILE: arch/microblaze/mm/init.c:164:
+	printk(KERN_NOTICE "%s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#244: FILE: arch/microblaze/mm/init.c:164:
+	printk(KERN_NOTICE "%s\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#254: FILE: arch/microblaze/mm/init.c:174:
+	printk(KERN_INFO "Memory: %luk/%luk available\n",

CHECK:SPACING: No space is necessary after a cast
#255: FILE: arch/microblaze/mm/init.c:175:
+	       (unsigned long) nr_free_pages() << (PAGE_SHIFT-10),

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#255: FILE: arch/microblaze/mm/init.c:175:
+	       (unsigned long) nr_free_pages() << (PAGE_SHIFT-10),
 	                                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#256: FILE: arch/microblaze/mm/init.c:176:
+	       num_physpages << (PAGE_SHIFT-10));
 	                                   ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#271: FILE: include/asm-microblaze/mmu.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#272: FILE: include/asm-microblaze/mmu.h:2:
+ * include/asm-microblaze/mmu.h

WARNING:NEW_TYPEDEFS: do not add new typedefs
#284: FILE: include/asm-microblaze/mmu.h:14:
+typedef struct {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#296: FILE: include/asm-microblaze/mmu_context.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#297: FILE: include/asm-microblaze/mmu_context.h:2:
+ * include/asm-microblaze/mmu_context.h

CHECK:LINE_SPACING: Please don't use multiple blank lines
#318: FILE: include/asm-microblaze/mmu_context.h:23:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#326: FILE: include/asm-microblaze/tlb.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#327: FILE: include/asm-microblaze/tlb.h:2:
+ * include/asm-microblaze/tlb.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#350: FILE: include/asm-microblaze/tlbflush.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#351: FILE: include/asm-microblaze/tlbflush.h:2:
+ * include/asm-microblaze/tlbflush.h

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#363: FILE: include/asm-microblaze/tlbflush.h:14:
+#define flush_tlb()				BUG()

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#364: FILE: include/asm-microblaze/tlbflush.h:15:
+#define flush_tlb_all()				BUG()

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#365: FILE: include/asm-microblaze/tlbflush.h:16:
+#define flush_tlb_mm(mm)			BUG()

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#366: FILE: include/asm-microblaze/tlbflush.h:17:
+#define flush_tlb_page(vma, addr)		BUG()

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#367: FILE: include/asm-microblaze/tlbflush.h:18:
+#define flush_tlb_range(mm, start, end)		BUG()

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#368: FILE: include/asm-microblaze/tlbflush.h:19:
+#define flush_tlb_pgtables(mm, start, end)	BUG()

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#369: FILE: include/asm-microblaze/tlbflush.h:20:
+#define flush_tlb_kernel_range(start, end)	BUG()

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000285442.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 29 warnings, 16 checks, 267 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000285442.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
