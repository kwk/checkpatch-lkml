ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#59: FILE: arch/x86/ia32/ia32_aout.c:44:
*regs, struct file *file, u

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: arch/x86/ia32/ia32_aout.c:50:
+       u32 fs, gs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: arch/x86/ia32/ia32_aout.c:60:
+       dump->u_debugreg[0] = current->thread.debugreg0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: arch/x86/ia32/ia32_aout.c:61:
+       dump->u_debugreg[1] = current->thread.debugreg1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: arch/x86/ia32/ia32_aout.c:62:
+       dump->u_debugreg[2] = current->thread.debugreg2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: arch/x86/ia32/ia32_aout.c:63:
+       dump->u_debugreg[3] = current->thread.debugreg3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: arch/x86/ia32/ia32_aout.c:64:
+       dump->u_debugreg[4] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: arch/x86/ia32/ia32_aout.c:65:
+       dump->u_debugreg[5] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: arch/x86/ia32/ia32_aout.c:66:
+       dump->u_debugreg[6] = current->thread.debugreg6;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: arch/x86/ia32/ia32_aout.c:67:
+       dump->u_debugreg[7] = current->thread.debugreg7;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: arch/x86/ia32/ia32_aout.c:82:
+       asm("movl %%gs,%0" : "=r" (gs)); dump->regs.gs = gs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: arch/x86/ia32/ia32_aout.c:93:
+       dump->u_fpvalid = dump_fpu(regs, &dump->i387);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 7)
#121: FILE: arch/x86/ia32/ia32_aout.c:136:
 if (file->f_op->llseek) { \
+       if (file->f_op->llseek(file, (offset), 0) != (offset)) \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: arch/x86/ia32/ia32_aout.c:137:
+       if (file->f_op->llseek(file, (offset), 0) != (offset)) \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#124: FILE: arch/x86/ia32/ia32_aout.c:137:
+       if (file->f_op->llseek(file, (offset), 0) != (offset)) \
+               goto end_coredump; \

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: arch/x86/ia32/ia32_aout.c:138:
+               goto end_coredump; \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: arch/x86/ia32/ia32_aout.c:138:
+               goto end_coredump; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: arch/x86/ia32/ia32_aout.c:164:
+       strncpy(dump.u_comm, current->comm, sizeof(current->comm));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: arch/x86/ia32/ia32_aout.c:187:
+       DUMP_WRITE(&dump, sizeof(dump));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: arch/x86/ia32/ia32_aout.c:196:
+               DUMP_WRITE(dump_start, dump_size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: arch/x86/ia32/ia32_aout.c:196:
+               DUMP_WRITE(dump_start, dump_size);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: arch/x86/ia32/ia32_aout.c:202:
+               DUMP_WRITE(dump_start, dump_size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: arch/x86/ia32/ia32_aout.c:202:
+               DUMP_WRITE(dump_start, dump_size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: arch/x86/ia32/ia32_aout.c:206:
+       DUMP_WRITE(current, sizeof(*current));$

CHECK:SPACING: No space is necessary after a cast
#180: FILE: arch/x86/ia32/ia32_aout.c:231:
+       put_user((unsigned long) envp, --sp);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: arch/x86/ia32/ia32_aout.c:231:
+       put_user((unsigned long) envp, --sp);$

CHECK:SPACING: No space is necessary after a cast
#181: FILE: arch/x86/ia32/ia32_aout.c:232:
+       put_user((unsigned long) argv, --sp);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: arch/x86/ia32/ia32_aout.c:232:
+       put_user((unsigned long) argv, --sp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: arch/x86/ia32/ia32_aout.c:233:
+       put_user(argc, --sp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: arch/x86/ia32/ia32_aout.c:235:
+       while (argc-- > 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#185: FILE: arch/x86/ia32/ia32_aout.c:235:
+       while (argc-- > 0) {
                char c;

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: arch/x86/ia32/ia32_aout.c:237:
+               put_user((u32)(unsigned long)p, argv++);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: arch/x86/ia32/ia32_aout.c:237:
+               put_user((u32)(unsigned long)p, argv++);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#189: FILE: arch/x86/ia32/ia32_aout.c:238:
                do {
+                       get_user(c, p++);

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: arch/x86/ia32/ia32_aout.c:239:
+                       get_user(c, p++);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: arch/x86/ia32/ia32_aout.c:239:
+                       get_user(c, p++);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: arch/x86/ia32/ia32_aout.c:244:
+       while (envc-- > 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#197: FILE: arch/x86/ia32/ia32_aout.c:244:
+       while (envc-- > 0) {
                char c;

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: arch/x86/ia32/ia32_aout.c:246:
+               put_user((u32)(unsigned long)p, envp++);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: arch/x86/ia32/ia32_aout.c:246:
+               put_user((u32)(unsigned long)p, envp++);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#201: FILE: arch/x86/ia32/ia32_aout.c:247:
                do {
+                       get_user(c, p++);

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: arch/x86/ia32/ia32_aout.c:248:
+                       get_user(c, p++);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: arch/x86/ia32/ia32_aout.c:248:
+                       get_user(c, p++);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: arch/x86/ia32/ia32_aout.c:294:
+       regs->cs = __USER32_CS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: arch/x86/ia32/ia32_aout.c:300:
+       set_thread_flag(TIF_IA32);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: arch/x86/ia32/ia32_aout.c:314:
+       current->flags &= ~PF_FORKNOEXEC;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#258: FILE: arch/x86/ia32/ia32_aout.c:347:
+                   (N_MAGIC(ex) != NMAGIC) && (jiffies-error_time2) > 5*HZ) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: arch/x86/ia32/ia32_aout.c:347:
+                   (N_MAGIC(ex) != NMAGIC) && (jiffies-error_time2) > 5*HZ) {$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#258: FILE: arch/x86/ia32/ia32_aout.c:347:
+                   (N_MAGIC(ex) != NMAGIC) && (jiffies-error_time2) > 5*HZ) {
                                                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#258: FILE: arch/x86/ia32/ia32_aout.c:347:
+                   (N_MAGIC(ex) != NMAGIC) && (jiffies-error_time2) > 5*HZ) {
                                                                        ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#263: FILE: arch/x86/ia32/ia32_aout.c:352:
                if ((fd_offset & ~PAGE_MASK) != 0 &&
[...]
+                       printk(KERN_WARNING

ERROR:CODE_INDENT: code indent should use tabs where possible
#267: FILE: arch/x86/ia32/ia32_aout.c:353:
+                   (jiffies-error_time) > 5*HZ) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: arch/x86/ia32/ia32_aout.c:353:
+                   (jiffies-error_time) > 5*HZ) {$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#267: FILE: arch/x86/ia32/ia32_aout.c:353:
+                   (jiffies-error_time) > 5*HZ) {
                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#267: FILE: arch/x86/ia32/ia32_aout.c:353:
+                   (jiffies-error_time) > 5*HZ) {
                                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: arch/x86/ia32/ia32_aout.c:354:
+                       printk(KERN_WARNING$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: arch/x86/ia32/ia32_aout.c:354:
+                       printk(KERN_WARNING$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#268: FILE: arch/x86/ia32/ia32_aout.c:354:
+                       printk(KERN_WARNING

ERROR:CODE_INDENT: code indent should use tabs where possible
#277: FILE: arch/x86/ia32/ia32_aout.c:361:
+               if (!bprm->file->f_op->mmap || ((fd_offset &$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: arch/x86/ia32/ia32_aout.c:361:
+               if (!bprm->file->f_op->mmap || ((fd_offset &$

ERROR:CODE_INDENT: code indent should use tabs where possible
#288: FILE: arch/x86/ia32/ia32_aout.c:388:
+               error = do_mmap(bprm->file, N_DATADDR(ex), ex.a_data,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: arch/x86/ia32/ia32_aout.c:388:
+               error = do_mmap(bprm->file, N_DATADDR(ex), ex.a_data,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: arch/x86/ia32/ia32_aout.c:404:
+       if (retval < 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#300: FILE: arch/x86/ia32/ia32_aout.c:404:
+       if (retval < 0) {
[...]
+               send_sig(SIGKILL, current, 0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: arch/x86/ia32/ia32_aout.c:405:
+               /* Someone check-me: is this error path enough? */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#302: FILE: arch/x86/ia32/ia32_aout.c:406:
+               send_sig(SIGKILL, current, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: arch/x86/ia32/ia32_aout.c:406:
+               send_sig(SIGKILL, current, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: arch/x86/ia32/ia32_aout.c:415:
+       load_gs_index(0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: arch/x86/ia32/ia32_aout.c:435:
+       struct inode *inode;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#331: FILE: arch/x86/ia32/ia32_aout.c:468:
+               if ((jiffies-error_time) > 5*HZ) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: arch/x86/ia32/ia32_aout.c:468:
+               if ((jiffies-error_time) > 5*HZ) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#331: FILE: arch/x86/ia32/ia32_aout.c:468:
+               if ((jiffies-error_time) > 5*HZ) {
[...]
+                       printk(KERN_WARNING

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#331: FILE: arch/x86/ia32/ia32_aout.c:468:
+               if ((jiffies-error_time) > 5*HZ) {
                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#331: FILE: arch/x86/ia32/ia32_aout.c:468:
+               if ((jiffies-error_time) > 5*HZ) {
                                            ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#332: FILE: arch/x86/ia32/ia32_aout.c:469:
+               if ((jiffies-error_time) > 5*HZ) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#333: FILE: arch/x86/ia32/ia32_aout.c:470:
+                       printk(KERN_WARNING$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: arch/x86/ia32/ia32_aout.c:470:
+                       printk(KERN_WARNING$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#333: FILE: arch/x86/ia32/ia32_aout.c:470:
+                       printk(KERN_WARNING

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000339969.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 17 errors, 52 warnings, 9 checks, 279 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000339969.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
