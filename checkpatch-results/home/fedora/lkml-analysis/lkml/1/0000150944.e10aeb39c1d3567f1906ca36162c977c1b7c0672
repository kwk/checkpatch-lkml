WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#60: FILE: drivers/spi/Kconfig:200:
+config SPI_S6000
+	tristate "S6000 SPI master"
+	depends on SPI_MASTER && XTENSA_VARIANT_S6000
+	help
+	  SPI driver for the Stretch S6000 family SoCs.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#82: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#87: FILE: drivers/spi/spi_s6000.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#107: FILE: drivers/spi/spi_s6000.c:21:
+#include <asm/io.h>

CHECK:BIT_MACRO: Prefer using the BIT macro
#115: FILE: drivers/spi/spi_s6000.c:29:
+#define CHUNK_MAX_BITS	(1 << 7)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#121: FILE: drivers/spi/spi_s6000.c:35:
+	struct mutex mutex;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#122: FILE: drivers/spi/spi_s6000.c:36:
+	spinlock_t lock;

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 's6spi' may be better as '(s6spi)' to avoid precedence issues
#146: FILE: drivers/spi/spi_s6000.c:60:
+#define SPI_READ(s6spi, reg) readl(s6spi->mem + reg)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#146: FILE: drivers/spi/spi_s6000.c:60:
+#define SPI_READ(s6spi, reg) readl(s6spi->mem + reg)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 's6spi' may be better as '(s6spi)' to avoid precedence issues
#147: FILE: drivers/spi/spi_s6000.c:61:
+#define SPI_WRITE(s6spi, reg, val) writel(val, s6spi->mem + reg)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#147: FILE: drivers/spi/spi_s6000.c:61:
+#define SPI_WRITE(s6spi, reg, val) writel(val, s6spi->mem + reg)

WARNING:LINE_SPACING: Missing a blank line after declarations
#152: FILE: drivers/spi/spi_s6000.c:66:
+	u32 val = bs->val;
+	bs->val >>= bits;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#207: FILE: drivers/spi/spi_s6000.c:121:
+	if (bits <= 8) {
[...]
+	} else if (bits <= 16) {
[...]
+	} else if (bits <= 32) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#209: FILE: drivers/spi/spi_s6000.c:123:
+		u8 *buf = rx_buf;
+		if (len > xfer_len)

WARNING:LINE_SPACING: Missing a blank line after declarations
#219: FILE: drivers/spi/spi_s6000.c:133:
+		u16 *buf = rx_buf;
+		xfer_len /= 2;

WARNING:LINE_SPACING: Missing a blank line after declarations
#231: FILE: drivers/spi/spi_s6000.c:145:
+		u32 *buf = rx_buf;
+		xfer_len /= 4;

CHECK:BRACES: Unbalanced braces around else statement
#241: FILE: drivers/spi/spi_s6000.c:155:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#270: FILE: drivers/spi/spi_s6000.c:184:
+	if (bits <= 8) {
[...]
+	} else if (bits <= 16) {
[...]
+	} else if (bits <= 32) {
[...]
+	} else
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#272: FILE: drivers/spi/spi_s6000.c:186:
+		u8 *buf = (u8 *)tx_buf;
+		if (words > xfer_len)

WARNING:LINE_SPACING: Missing a blank line after declarations
#283: FILE: drivers/spi/spi_s6000.c:197:
+		u16 *buf = (u16 *)tx_buf;
+		xfer_len /= 2;

WARNING:LINE_SPACING: Missing a blank line after declarations
#295: FILE: drivers/spi/spi_s6000.c:209:
+		u32 *buf = (u32 *)tx_buf;
+		xfer_len /= 4;

CHECK:BRACES: Unbalanced braces around else statement
#305: FILE: drivers/spi/spi_s6000.c:219:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#329: FILE: drivers/spi/spi_s6000.c:243:
+		printk(KERN_ERR "s6spi: 0Hz bus speed requested\n");

CHECK:CAMELCASE: Avoid CamelCase: <S6_SPI_CTRL_Rx_NEG>
#362: FILE: drivers/spi/spi_s6000.c:276:
+	ctrl |= cpol << S6_SPI_CTRL_Rx_NEG;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <S6_SPI_CTRL_Tx_NEG>
#363: FILE: drivers/spi/spi_s6000.c:277:
+	ctrl |= !cpol << S6_SPI_CTRL_Tx_NEG;

WARNING:LINE_SPACING: Missing a blank line after declarations
#388: FILE: drivers/spi/spi_s6000.c:302:
+	u32 ctrl, divider, bits;
+	divider = SPI_READ(s6spi, S6_SPI_DIVIDER) & S6_SPI_DIVIDER_MAX;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#444: FILE: drivers/spi/spi_s6000.c:358:
+		msg = list_first_entry(&s6spi->messages,
+				struct spi_message, queue);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#446: FILE: drivers/spi/spi_s6000.c:360:
+		xfer = list_first_entry(&msg->transfers,
+				struct spi_transfer, transfer_list);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#467: FILE: drivers/spi/spi_s6000.c:381:
+		xfer = list_entry(xfer->transfer_list.next,
+				struct spi_transfer, transfer_list);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#541: FILE: drivers/spi/spi_s6000.c:455:
+		while (s6spi_is_busy(s6spi));

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#585: FILE: drivers/spi/spi_s6000.c:499:
+static int __devinit s6spi_probe(struct platform_device *pdev)

WARNING:LINE_SPACING: Missing a blank line after declarations
#632: FILE: drivers/spi/spi_s6000.c:546:
+		struct s6_spi_platform_data *pdata = pdev->dev.platform_data;
+		s6spi->cs_deasserted = pdata->cs_polarity;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#669: FILE: drivers/spi/spi_s6000.c:583:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#670: FILE: drivers/spi/spi_s6000.c:584:
+	printk(KERN_INFO "s6spi: S6000 SPI master driver <info@emlix.com>\n");

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#691: FILE: drivers/spi/spi_s6000.c:605:
+static int __devexit s6spi_remove(struct platform_device *pdev)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#741: FILE: drivers/spi/spi_s6000.h:1:
+#ifndef __DRIVERS_SPI_SPI_S6000_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#773: FILE: include/linux/spi/spi_s6000.h:1:
+#ifndef __LINUX_SPI_SPI_S6000_H

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000150944.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 19 warnings, 17 checks, 703 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000150944.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
