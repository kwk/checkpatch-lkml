WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
So I'd like to suggest that separating lock trace events into each types of lock.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#167: FILE: include/linux/lockdep.h:389:
+extern void lock_contended(struct lockdep_map *lock, unsigned long ip, int type);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#168: FILE: include/linux/lockdep.h:390:
+extern void lock_acquired(struct lockdep_map *lock, unsigned long ip, int type);

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_lock' - possible side-effects?
#171: FILE: include/linux/lockdep.h:392:
+#define LOCK_CONTENDED(_lock, try, lock, type)			\
 do {								\
 	if (!try(_lock)) {					\
+		lock_contended(&(_lock)->dep_map, _RET_IP_, type);	\
 		lock(_lock);					\
 	}							\
+	lock_acquired(&(_lock)->dep_map, _RET_IP_, type);	\
 } while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'try' may be better as '(try)' to avoid precedence issues
#171: FILE: include/linux/lockdep.h:392:
+#define LOCK_CONTENDED(_lock, try, lock, type)			\
 do {								\
 	if (!try(_lock)) {					\
+		lock_contended(&(_lock)->dep_map, _RET_IP_, type);	\
 		lock(_lock);					\
 	}							\
+	lock_acquired(&(_lock)->dep_map, _RET_IP_, type);	\
 } while (0)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000008109.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 1 warnings, 4 checks, 479 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000008109.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
