CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "bridge_base"
#91: FILE: arch/powerpc/boot/prpmc2800.c:483:
+	if (bridge_base != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:CAMELCASE: Avoid CamelCase: <dispDeviceBase>
#104: FILE: arch/powerpc/kernel/btext.c:145:
+	if (dispDeviceBase == NULL)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dispDeviceBase"
#104: FILE: arch/powerpc/kernel/btext.c:145:
+	if (dispDeviceBase == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vbase"
#112: FILE: arch/powerpc/kernel/btext.c:152:
+	if (vbase == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!base"
#121: FILE: arch/powerpc/kernel/btext.c:256:
+	if (base == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dispDeviceBase"
#130: FILE: arch/powerpc/kernel/btext.c:267:
+	if (dispDeviceBase == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "legacy_serial_infos[index].np"
#143: FILE: arch/powerpc/kernel/legacy_serial.c:70:
+	if (legacy_serial_infos[index].np != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hose"
#156: FILE: arch/powerpc/kernel/pci-common.c:259:
+	if (hose == NULL)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#169: FILE: arch/powerpc/kernel/pci_32.c:601:
+	for (node=node->child; node != NULL;node = node->sibling) {
 	         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ';' (ctx:VxV)
#169: FILE: arch/powerpc/kernel/pci_32.c:601:
+	for (node=node->child; node != NULL;node = node->sibling) {
 	                                   ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "node"
#169: FILE: arch/powerpc/kernel/pci_32.c:601:
+	for (node=node->child; node != NULL;node = node->sibling) {

ERROR:SPACING: space required after that ';' (ctx:VxV)
#178: FILE: arch/powerpc/kernel/pci_32.c:674:
+	for (; node != NULL;node = node->sibling) {
 	                   ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "node"
#178: FILE: arch/powerpc/kernel/pci_32.c:674:
+	for (; node != NULL;node = node->sibling) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hose"
#187: FILE: arch/powerpc/kernel/pci_32.c:1452:
+	if (hose == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hose"
#190: FILE: arch/powerpc/kernel/pci_32.c:1454:
+		if (hose == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "np"
#203: FILE: arch/powerpc/kernel/prom.c:1098:
+	for (np = allnodes; np != NULL; np = np->allnext)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "np"
#212: FILE: arch/powerpc/kernel/prom.c:1121:
+	for (; np != NULL; np = np->allnext)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sizep"
#225: FILE: arch/powerpc/kernel/setup_64.c:313:
+			if (sizep == NULL || lsizep == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lsizep"
#225: FILE: arch/powerpc/kernel/setup_64.c:313:
+			if (sizep == NULL || lsizep == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sizep"
#234: FILE: arch/powerpc/kernel/setup_64.c:330:
+			if (sizep == NULL || lsizep == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lsizep"
#234: FILE: arch/powerpc/kernel/setup_64.c:330:
+			if (sizep == NULL || lsizep == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "v_regs"
#247: FILE: arch/powerpc/kernel/signal_64.c:187:
+	if (v_regs != NULL && (msr & MSR_VEC) != 0)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "v_regs"
#254: FILE: arch/powerpc/kernel/signal_64.c:193:
+	if (v_regs != NULL)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'Hash != NULL'
#267: FILE: arch/powerpc/mm/mmu_decl.h:86:
+	if ((Hash != NULL) &&
 	    cpu_has_feature(CPU_FTR_HPTE_TABLE))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:CAMELCASE: Avoid CamelCase: <Hash>
#267: FILE: arch/powerpc/mm/mmu_decl.h:86:
+	if ((Hash != NULL) &&

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "Hash"
#267: FILE: arch/powerpc/mm/mmu_decl.h:86:
+	if ((Hash != NULL) &&

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!area"
#280: FILE: arch/powerpc/mm/pgtable_32.c:212:
+		if (area == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pg"
#289: FILE: arch/powerpc/mm/pgtable_32.c:265:
+	if (pg != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!Hash"
#302: FILE: arch/powerpc/mm/ppc_mmu_32.c:185:
+	if (Hash == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "Hash"
#315: FILE: arch/powerpc/mm/tlb_32.c:43:
+	if (Hash != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "Hash"
#324: FILE: arch/powerpc/mm/tlb_32.c:55:
+	if (Hash != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!Hash"
#333: FILE: arch/powerpc/mm/tlb_32.c:66:
+	if (Hash == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!Hash"
#342: FILE: arch/powerpc/mm/tlb_32.c:107:
+	if (Hash == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!Hash"
#351: FILE: arch/powerpc/mm/tlb_32.c:147:
+	if (Hash == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!Hash"
#360: FILE: arch/powerpc/mm/tlb_32.c:168:
+	if (Hash == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "fp"
#373: FILE: arch/powerpc/platforms/52xx/lite5200.c:121:
+		if (fp != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "np"
#386: FILE: arch/powerpc/platforms/83xx/mpc832x_mds.c:68:
+	if (np != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "np"
#399: FILE: arch/powerpc/platforms/83xx/mpc836x_mds.c:74:
+	if (np != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cpu"
#412: FILE: arch/powerpc/platforms/85xx/mpc85xx_ads.c:204:
+	if (cpu != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "fp"
#417: FILE: arch/powerpc/platforms/85xx/mpc85xx_ads.c:208:
+		if (fp != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cpu"
#430: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:278:
+	if (cpu != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "fp"
#435: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:282:
+		if (fp != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "np"
#448: FILE: arch/powerpc/platforms/86xx/mpc86xx_hpcn.c:336:
+	if (np != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "fp"
#453: FILE: arch/powerpc/platforms/86xx/mpc86xx_hpcn.c:340:
+		if (fp != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cpu"
#466: FILE: arch/powerpc/platforms/8xx/mpc86xads_setup.c:260:
+	if (cpu != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "fp"
#471: FILE: arch/powerpc/platforms/8xx/mpc86xads_setup.c:264:
+		if (fp != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cpu"
#484: FILE: arch/powerpc/platforms/8xx/mpc885ads_setup.c:412:
+	if (cpu != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "fp"
#489: FILE: arch/powerpc/platforms/8xx/mpc885ads_setup.c:416:
+		if (fp != NULL)

ERROR:SPACING: space required after that ';' (ctx:VxV)
#502: FILE: arch/powerpc/platforms/maple/pci.c:41:
+	for (; node != NULL;node = node->sibling) {
 	                   ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "node"
#502: FILE: arch/powerpc/platforms/maple/pci.c:41:
+	for (; node != NULL;node = node->sibling) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "opprop"
#515: FILE: arch/powerpc/platforms/maple/setup.c:253:
+	if (opprop != NULL) {

ERROR:SPACING: space required after that ';' (ctx:VxV)
#528: FILE: arch/powerpc/platforms/powermac/pci.c:65:
+	for (; node != NULL;node = node->sibling) {
 	                   ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "node"
#528: FILE: arch/powerpc/platforms/powermac/pci.c:65:
+	for (; node != NULL;node = node->sibling) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pp"
#541: FILE: arch/powerpc/platforms/powermac/pfunc_core.c:688:
+	for (pp = dev->node->properties; pp != NULL; pp = pp->next) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!np"
#554: FILE: arch/powerpc/platforms/powermac/setup.c:264:
+		if (np == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "np"
#557: FILE: arch/powerpc/platforms/powermac/setup.c:266:
+		if (np != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "l2cr"
#561: FILE: arch/powerpc/platforms/powermac/setup.c:269:
+			if (l2cr != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vias"
#574: FILE: arch/powerpc/platforms/powermac/time.c:263:
+	if (vias == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vias"
#577: FILE: arch/powerpc/platforms/powermac/time.c:265:
+	if (vias == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vias"
#580: FILE: arch/powerpc/platforms/powermac/time.c:267:
+	if (vias == NULL || of_address_to_resource(vias, 0, &rsrc))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "opprop"
#593: FILE: arch/powerpc/platforms/pseries/setup.c:144:
+	if (opprop != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ph"
#606: FILE: arch/powerpc/sysdev/qe_lib/qe_io.c:165:
+	if (ph == NULL) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#619: FILE: arch/powerpc/xmon/spu-dis.c:48:
+      if (spu_disassemble_table[o] == NULL)$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!spu_disassemble_table[o]"
#619: FILE: arch/powerpc/xmon/spu-dis.c:48:
+      if (spu_disassemble_table[o] == NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#628: FILE: arch/powerpc/xmon/spu-dis.c:62:
+  if (spu_disassemble_table[0] == NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#628: FILE: arch/powerpc/xmon/spu-dis.c:62:
+  if (spu_disassemble_table[0] == NULL)
     init_spu_disassemble ();

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!spu_disassemble_table[0]"
#628: FILE: arch/powerpc/xmon/spu-dis.c:62:
+  if (spu_disassemble_table[0] == NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#632: FILE: arch/powerpc/xmon/spu-dis.c:65:
+  if ((index = spu_disassemble_table[opcode & 0x780]) != NULL$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#632: FILE: arch/powerpc/xmon/spu-dis.c:65:
+  if ((index = spu_disassemble_table[opcode & 0x780]) != NULL
[...]
     return index;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#632: FILE: arch/powerpc/xmon/spu-dis.c:65:
+  if ((index = spu_disassemble_table[opcode & 0x780]) != NULL

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#637: FILE: arch/powerpc/xmon/spu-dis.c:69:
+  if ((index = spu_disassemble_table[opcode & 0x7f0]) != NULL$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#637: FILE: arch/powerpc/xmon/spu-dis.c:69:
+  if ((index = spu_disassemble_table[opcode & 0x7f0]) != NULL
[...]
     return index;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#637: FILE: arch/powerpc/xmon/spu-dis.c:69:
+  if ((index = spu_disassemble_table[opcode & 0x7f0]) != NULL

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#642: FILE: arch/powerpc/xmon/spu-dis.c:73:
+  if ((index = spu_disassemble_table[opcode & 0x7f8]) != NULL$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#642: FILE: arch/powerpc/xmon/spu-dis.c:73:
+  if ((index = spu_disassemble_table[opcode & 0x7f8]) != NULL
[...]
     return index;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#642: FILE: arch/powerpc/xmon/spu-dis.c:73:
+  if ((index = spu_disassemble_table[opcode & 0x7f8]) != NULL

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#647: FILE: arch/powerpc/xmon/spu-dis.c:77:
+  if ((index = spu_disassemble_table[opcode & 0x7fc]) != NULL$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#647: FILE: arch/powerpc/xmon/spu-dis.c:77:
+  if ((index = spu_disassemble_table[opcode & 0x7fc]) != NULL
[...]
     return index;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'index->insn_type == RI16'
#647: FILE: arch/powerpc/xmon/spu-dis.c:77:
+  if ((index = spu_disassemble_table[opcode & 0x7fc]) != NULL
       && (index->insn_type == RI16))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#647: FILE: arch/powerpc/xmon/spu-dis.c:77:
+  if ((index = spu_disassemble_table[opcode & 0x7fc]) != NULL

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#652: FILE: arch/powerpc/xmon/spu-dis.c:81:
+  if ((index = spu_disassemble_table[opcode & 0x7fe]) != NULL$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#652: FILE: arch/powerpc/xmon/spu-dis.c:81:
+  if ((index = spu_disassemble_table[opcode & 0x7fe]) != NULL
[...]
     return index;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'index->insn_type == RI8'
#652: FILE: arch/powerpc/xmon/spu-dis.c:81:
+  if ((index = spu_disassemble_table[opcode & 0x7fe]) != NULL
       && (index->insn_type == RI8))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#652: FILE: arch/powerpc/xmon/spu-dis.c:81:
+  if ((index = spu_disassemble_table[opcode & 0x7fe]) != NULL

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#657: FILE: arch/powerpc/xmon/spu-dis.c:85:
+  if ((index = spu_disassemble_table[opcode & 0x7ff]) != NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#657: FILE: arch/powerpc/xmon/spu-dis.c:85:
+  if ((index = spu_disassemble_table[opcode & 0x7ff]) != NULL)
     return index;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#657: FILE: arch/powerpc/xmon/spu-dis.c:85:
+  if ((index = spu_disassemble_table[opcode & 0x7ff]) != NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#666: FILE: arch/powerpc/xmon/spu-dis.c:103:
+  if (index == NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#666: FILE: arch/powerpc/xmon/spu-dis.c:103:
+  if (index == NULL)
     {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#666: FILE: arch/powerpc/xmon/spu-dis.c:103:
+  if (index == NULL)
     {
       printf(".long 0x%x", insn);
     }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!index"
#666: FILE: arch/powerpc/xmon/spu-dis.c:103:
+  if (index == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!iabr"
#679: FILE: arch/powerpc/xmon/xmon.c:594:
+	if (iabr == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bp"
#688: FILE: arch/powerpc/xmon/xmon.c:1138:
+			if (bp == NULL) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000399819.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 11 errors, 18 warnings, 64 checks, 445 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000399819.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
