WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: include/asm-cris/arch-v32/io.h:17:
+  volatile unsigned long *oe;$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#60: FILE: include/asm-cris/arch-v32/io.h:17:
+  volatile unsigned long *oe;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: include/asm-cris/arch-v32/io.h:18:
+  volatile unsigned long *data;$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#61: FILE: include/asm-cris/arch-v32/io.h:18:
+  volatile unsigned long *data;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#62: FILE: include/asm-cris/arch-v32/io.h:19:
+  volatile unsigned long *data_in;$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#62: FILE: include/asm-cris/arch-v32/io.h:19:
+  volatile unsigned long *data_in;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#64: FILE: include/asm-cris/arch-v32/io.h:21:
+  spinlock_t lock;$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#64: FILE: include/asm-cris/arch-v32/io.h:21:
+  spinlock_t lock;

WARNING:LINE_SPACING: Missing a blank line after declarations
#81: FILE: include/asm-cris/arch-v32/io.h:48:
+	long flags;
+	spin_lock_irqsave(&iopin->port->lock, flags);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#95: FILE: include/asm-cris/arch-v32/io.h:62:
+	long flags;
+	spin_lock_irqsave(&iopin->port->lock, flags);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#123: FILE: include/asm-cris/arch-v32/io.h:88:
+#define LED_NETWORK_GRP0_SET(x)                          \
+	do {                                             \
+		LED_NETWORK_GRP0_SET_G((x) & LED_GREEN); \
+		LED_NETWORK_GRP0_SET_R((x) & LED_RED);   \
 	} while (0)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#129: FILE: include/asm-cris/arch-v32/io.h:94:
+#define LED_NETWORK_GRP0_SET(x) while (0) {}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#132: FILE: include/asm-cris/arch-v32/io.h:97:
+#define LED_NETWORK_GRP0_SET_G(x) \
+	crisv32_io_set(&crisv32_led_net0_green, !(x));

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#135: FILE: include/asm-cris/arch-v32/io.h:100:
+#define LED_NETWORK_GRP0_SET_R(x) \
+	crisv32_io_set(&crisv32_led_net0_red, !(x));

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#139: FILE: include/asm-cris/arch-v32/io.h:104:
+#define LED_NETWORK_GRP1_SET(x)                          \
+	do {                                             \
+		LED_NETWORK_GRP1_SET_G((x) & LED_GREEN); \
+		LED_NETWORK_GRP1_SET_R((x) & LED_RED);   \
+	} while (0)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#145: FILE: include/asm-cris/arch-v32/io.h:110:
+#define LED_NETWORK_GRP1_SET(x) while (0) {}

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#148: FILE: include/asm-cris/arch-v32/io.h:113:
+#define LED_NETWORK_GRP1_SET_G(x) \
+	crisv32_io_set(&crisv32_led_net1_green, !(x));

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#151: FILE: include/asm-cris/arch-v32/io.h:116:
+#define LED_NETWORK_GRP1_SET_R(x) \
+	crisv32_io_set(&crisv32_led_net1_red, !(x));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000350268.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 15 warnings, 3 checks, 124 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000350268.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
