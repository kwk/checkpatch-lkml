CHECK:CAMELCASE: Avoid CamelCase: <Controller>
#397: FILE: drivers/block/DAC960.c:1375:
+	if (!pci_set_dma_mask(Controller->PCIDevice, DMA_BIT_MASK(64)))

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <PCIDevice>
#397: FILE: drivers/block/DAC960.c:1375:
+	if (!pci_set_dma_mask(Controller->PCIDevice, DMA_BIT_MASK(64)))

CHECK:CAMELCASE: Avoid CamelCase: <BounceBufferLimit>
#398: FILE: drivers/block/DAC960.c:1376:
+		Controller->BounceBufferLimit = DMA_BIT_MASK(64);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#564: FILE: drivers/message/fusion/mptbase.c:1538:
+	if (!pci_set_dma_mask(pdev, DMA_BIT_MASK(64))
+	    && !pci_set_consistent_dma_mask(pdev, DMA_BIT_MASK(64))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pdev->dma_mask == DMA_BIT_MASK(64)'
#577: FILE: drivers/message/i2o/memory.c:188:
+	if ((sizeof(dma_addr_t) > 4) && (pdev->dma_mask == DMA_BIT_MASK(64))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#640: FILE: drivers/net/bnx2.c:7466:
+		persist_dma_mask = dma_mask = DMA_BIT_MASK(64);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#784: FILE: drivers/net/ixgb/ixgb_main.c:368:
+	if (!(err = pci_set_dma_mask(pdev, DMA_BIT_MASK(64))) &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#870: FILE: drivers/net/ns83820.c:1977:
+^I ^I!pci_set_dma_mask(pci_dev, DMA_BIT_MASK(64))) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#870: FILE: drivers/net/ns83820.c:1977:
+^I ^I!pci_set_dma_mask(pci_dev, DMA_BIT_MASK(64))) {$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#992: FILE: drivers/net/tehuti.c:1939:
+	if (!(err = pci_set_dma_mask(pdev, DMA_BIT_MASK(64))) &&

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1033: FILE: drivers/net/tg3.c:13112:
+		persist_dma_mask = dma_mask = DMA_BIT_MASK(64);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1046: FILE: drivers/net/usb/usbnet.c:1178:
+	if (dma_supported (&udev->dev, DMA_BIT_MASK(64)))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1136: FILE: drivers/scsi/3w-9xxx.c:2019:
+	if (pci_set_dma_mask(pdev, DMA_BIT_MASK(64))
+	    || pci_set_consistent_dma_mask(pdev, DMA_BIT_MASK(64)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1151: FILE: drivers/scsi/aacraid/aachba.c:1387:
+		if (!pci_set_dma_mask(dev->pdev, DMA_BIT_MASK(64)) &&
+			!pci_set_consistent_dma_mask(dev->pdev, DMA_BIT_MASK(64))) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1179: FILE: drivers/scsi/aic94xx/aic94xx_init.c:794:
+	if (!pci_set_dma_mask(dev, DMA_BIT_MASK(64))
+	    && !pci_set_consistent_dma_mask(dev, DMA_BIT_MASK(64)))

CHECK:CAMELCASE: Avoid CamelCase: <pDev>
#1205: FILE: drivers/scsi/dpt_i2o.c:1017:
+	    pci_set_dma_mask(pDev, DMA_BIT_MASK(64)) == 0) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1371: FILE: drivers/scsi/stex.c:1071:
+	if (!pci_set_dma_mask(pdev, DMA_BIT_MASK(64))
+		&& !pci_set_consistent_dma_mask(pdev, DMA_BIT_MASK(64)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#1397: FILE: drivers/sn/ioc3.c:620:
+        ret = pci_set_dma_mask(pdev, DMA_BIT_MASK(64));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1397: FILE: drivers/sn/ioc3.c:620:
+        ret = pci_set_dma_mask(pdev, DMA_BIT_MASK(64));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1400: FILE: drivers/sn/ioc3.c:622:
+                ret = pci_set_consistent_dma_mask(pdev, DMA_BIT_MASK(64));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1400: FILE: drivers/sn/ioc3.c:622:
+                ret = pci_set_consistent_dma_mask(pdev, DMA_BIT_MASK(64));$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1458: FILE: drivers/staging/sxg/sxg.c:660:
+	if (!(err = pci_set_dma_mask(pcidev, DMA_BIT_MASK(64)))) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000165066.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 4 warnings, 12 checks, 954 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000165066.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
