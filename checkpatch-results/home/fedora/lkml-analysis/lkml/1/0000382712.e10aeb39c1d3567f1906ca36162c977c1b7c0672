WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
This patch marks a number of allocations that are either short-lived such as

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#105: FILE: fs/jbd/revoke.c:174:
+					   SLAB_HWCACHE_ALIGN|SLAB_TEMPORARY,
 					                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#126: FILE: fs/proc/base.c:495:
+	if (!(page = __get_free_page(GFP_TEMPORARY)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#153: FILE: fs/proc/base.c:791:
+	page = (char*)__get_free_page(GFP_TEMPORARY);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#162: FILE: fs/proc/base.c:957:
+	char *tmp = (char*)__get_free_page(GFP_TEMPORARY);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#172: FILE: fs/proc/base.c:1730:
+	page = (char*)__get_free_page(GFP_TEMPORARY);

CHECK:SPACING: No space is necessary after a cast
#185: FILE: fs/proc/generic.c:77:
+	if (!(page = (char*) __get_free_page(GFP_TEMPORARY)))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#185: FILE: fs/proc/generic.c:77:
+	if (!(page = (char*) __get_free_page(GFP_TEMPORARY)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#185: FILE: fs/proc/generic.c:77:
+	if (!(page = (char*) __get_free_page(GFP_TEMPORARY)))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#220: FILE: include/linux/gfp.h:86:
+#define GFP_MOVABLE_MASK (__GFP_RECLAIMABLE|__GFP_MOVABLE)
                                            ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#230: FILE: include/linux/gfp.h:137:
+	BUG_ON((gfp & GFP_MOVABLE_MASK) == GFP_MOVABLE_MASK);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#295: FILE: kernel/cpuset.c:1466:
+	if (!(page = (char *)__get_free_page(GFP_TEMPORARY)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#309: FILE: lib/radix-tree.c:102:
+	ret = kmem_cache_alloc(radix_tree_node_cachep,
+				set_migrateflags(gfp_mask, __GFP_RECLAIMABLE));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#319: FILE: lib/radix-tree.c:147:
+		node = kmem_cache_alloc(radix_tree_node_cachep,
+				set_migrateflags(gfp_mask, __GFP_RECLAIMABLE));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000382712.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 2 warnings, 5 checks, 249 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000382712.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
