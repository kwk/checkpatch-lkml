CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#248: FILE: drivers/pci/hotplug/cpqphp_core.c:647:
+static int ctrl_slot_setup(struct controller *ctrl,
+			void __iomem *smbios_start,

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#260: FILE: drivers/pci/hotplug/cpqphp_core.c:659:
+	void __iomem *slot_entry= NULL;
 	                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#263: FILE: drivers/pci/hotplug/cpqphp_core.c:662:
+	dbg("%s\n", __func__);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around slot->hotplug_slot
#276: FILE: drivers/pci/hotplug/cpqphp_core.c:675:
+		slot->hotplug_slot = kzalloc(sizeof(*(slot->hotplug_slot)),

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#277: FILE: drivers/pci/hotplug/cpqphp_core.c:676:
+		slot->hotplug_slot = kzalloc(sizeof(*(slot->hotplug_slot)),
+						GFP_KERNEL);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hotplug_slot->info
#283: FILE: drivers/pci/hotplug/cpqphp_core.c:682:
+				kzalloc(sizeof(*(hotplug_slot->info)),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#284: FILE: drivers/pci/hotplug/cpqphp_core.c:683:
+				kzalloc(sizeof(*(hotplug_slot->info)),
+							GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#296: FILE: drivers/pci/hotplug/cpqphp_core.c:695:
+		slot_entry = get_SMBIOS_entry(smbios_start, smbios_table, 9,
+					slot_entry);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#301: FILE: drivers/pci/hotplug/cpqphp_core.c:700:
+			slot_entry = get_SMBIOS_entry(smbios_start,
+						smbios_table, 9, slot_entry);

CHECK:CAMELCASE: Avoid CamelCase: <PCI_SPEED_66MHz>
#320: FILE: drivers/pci/hotplug/cpqphp_core.c:719:
+		if (ctrl->speed == PCI_SPEED_66MHz)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SPLIT_STRING: quoted string split across lines
#352: FILE: drivers/pci/hotplug/cpqphp_core.c:751:
+		dbg("registering bus %d, dev %d, number %d, "
+				"ctrl->slot_device_offset %d, slot %d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#398: FILE: drivers/pci/hotplug/cpqphp_core.c:797:
+	dbg("Initialize + Start the notification mechanism \n");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#405: FILE: drivers/pci/hotplug/cpqphp_core.c:804:
+	for (loop = 0; loop < 256; loop++) {
+		cpqhp_slot_list[loop] = NULL;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#416: FILE: drivers/pci/hotplug/cpqphp_core.c:815:
+		err ("Could not ioremap memory region for ROM\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#428: FILE: drivers/pci/hotplug/cpqphp_core.c:827:
+	smbios_table = detect_SMBIOS_pointer(cpqhp_rom_start,
+					cpqhp_rom_start + ROM_PHY_LEN);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#430: FILE: drivers/pci/hotplug/cpqphp_core.c:829:
+		err ("Could not find the SMBIOS pointer in memory\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#436: FILE: drivers/pci/hotplug/cpqphp_core.c:835:
+	smbios_start = ioremap(readl(smbios_table + ST_ADDRESS),
+					readw(smbios_table + ST_LENGTH));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#438: FILE: drivers/pci/hotplug/cpqphp_core.c:837:
+		err ("Could not ioremap memory region taken from SMBIOS values\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000146730.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 7 warnings, 10 checks, 485 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000146730.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
