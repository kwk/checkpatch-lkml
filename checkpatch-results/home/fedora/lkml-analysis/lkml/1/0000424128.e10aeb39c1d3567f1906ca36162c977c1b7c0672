WARNING:TYPO_SPELLING: 'untill' may be misspelled - perhaps 'until'?
#29: 
so that interrupts are not enabled untill after the interrupt handler has 
                                   ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'sould' may be misspelled - perhaps 'could'?
#36: 
is that it sould be OK.
           ^^^^^

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#38: 
###

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:TYPO_SPELLING: 'relevent' may be misspelled - perhaps 'relevant'?
#44: 
relevent to this driver patch that I have tested, prevent a serial BREAK 
^^^^^^^^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#80: FILE: drivers/serial/sunzilog.c:187:
+static int __load_zsregs(struct zilog_channel __iomem *channel, unsigned char *regs)
  {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <WR7pEN>
#93: FILE: drivers/serial/sunzilog.c:244:
+	write_zsreg(channel, R15, (regs[R15] | WR7pEN) & ~FIFOEN);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Rx5>
#147: FILE: drivers/serial/sunzilog.c:896:
+		up->curregs[R3] |= Rx5;

CHECK:CAMELCASE: Avoid CamelCase: <Tx5>
#148: FILE: drivers/serial/sunzilog.c:897:
+		up->curregs[R5] |= Tx5;

CHECK:CAMELCASE: Avoid CamelCase: <Rx6>
#154: FILE: drivers/serial/sunzilog.c:901:
+		up->curregs[R3] |= Rx6;

CHECK:CAMELCASE: Avoid CamelCase: <Tx6>
#155: FILE: drivers/serial/sunzilog.c:902:
+		up->curregs[R5] |= Tx6;

CHECK:CAMELCASE: Avoid CamelCase: <Rx7>
#161: FILE: drivers/serial/sunzilog.c:906:
+		up->curregs[R3] |= Rx7;

CHECK:CAMELCASE: Avoid CamelCase: <Tx7>
#162: FILE: drivers/serial/sunzilog.c:907:
+		up->curregs[R5] |= Tx7;

CHECK:CAMELCASE: Avoid CamelCase: <Rx8>
#169: FILE: drivers/serial/sunzilog.c:912:
+		up->curregs[R3] |= Rx8;

CHECK:CAMELCASE: Avoid CamelCase: <Tx8>
#170: FILE: drivers/serial/sunzilog.c:913:
+		up->curregs[R5] |= Tx8;

CHECK:CAMELCASE: Avoid CamelCase: <TxINT_ENAB>
#230: FILE: drivers/serial/sunzilog.c:1316:
+		up->curregs[R1] = EXT_INT_ENAB | INT_ALL_Rx | TxINT_ENAB;

CHECK:CAMELCASE: Avoid CamelCase: <RxENAB>
#232: FILE: drivers/serial/sunzilog.c:1318:
+		up->curregs[R3] = RxENAB | Rx8;

CHECK:CAMELCASE: Avoid CamelCase: <TxENAB>
#233: FILE: drivers/serial/sunzilog.c:1319:
+		up->curregs[R5] = TxENAB | Tx8;

CHECK:CAMELCASE: Avoid CamelCase: <TxFIFO_LVL>
#263: FILE: drivers/serial/sunzilog.c:1347:
+		up->curregs[R7p] = TxFIFO_LVL | RxFIFO_LVL;

CHECK:CAMELCASE: Avoid CamelCase: <RxFIFO_LVL>
#263: FILE: drivers/serial/sunzilog.c:1347:
+		up->curregs[R7p] = TxFIFO_LVL | RxFIFO_LVL;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#264: FILE: drivers/serial/sunzilog.c:1348:
+		if (__load_zsregs(channel, up->curregs)) {
+			up->flags |= SUNZILOG_FLAG_ESCC;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#283: FILE: drivers/serial/sunzilog.c:1442:
+		printk(KERN_INFO "%s: Keyboard at MMIO 0x%lx (irq = %d) "

WARNING:SPLIT_STRING: quoted string split across lines
#284: FILE: drivers/serial/sunzilog.c:1443:
+		printk(KERN_INFO "%s: Keyboard at MMIO 0x%lx (irq = %d) "
+		       "is a %s\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#286: FILE: drivers/serial/sunzilog.c:1445:
+		       sunzilog_type (&up[0].port));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#287: FILE: drivers/serial/sunzilog.c:1446:
+		printk(KERN_INFO "%s: Mouse at MMIO 0x%lx (irq = %d) "

WARNING:SPLIT_STRING: quoted string split across lines
#288: FILE: drivers/serial/sunzilog.c:1447:
+		printk(KERN_INFO "%s: Mouse at MMIO 0x%lx (irq = %d) "
+		       "is a %s\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#290: FILE: drivers/serial/sunzilog.c:1449:
+		       sunzilog_type (&up[1].port));

CHECK:CAMELCASE: Avoid CamelCase: <AUTOnRTS>
#359: FILE: drivers/serial/sunzilog.h:134:
+#define	AUTOnRTS	4	/* Automatic /RTS pin deactivation */

CHECK:CAMELCASE: Avoid CamelCase: <nDTRnREQ>
#361: FILE: drivers/serial/sunzilog.h:136:
+#define	nDTRnREQ	0x10	/* /DTR/REQ timing */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000424128.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 11 warnings, 16 checks, 321 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000424128.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
