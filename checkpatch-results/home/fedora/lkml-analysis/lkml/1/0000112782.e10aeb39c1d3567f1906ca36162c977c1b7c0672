WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
> > > > Use of the RPM_UNKNOWN state isn't good.  A bus may have valid reasons 

WARNING:TYPO_SPELLING: 'responsibile' may be misspelled - perhaps 'responsible'?
#174: FILE: kernel/power/Kconfig:223:
+	  responsibile for the actual handling of the autosuspend requests and
 	  ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#208: FILE: kernel/power/main.c:237:
+	int error = pm_start_workqueue();
+	if (error)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#324: FILE: include/linux/pm.h:398:
+	spinlock_t		lock;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#345: FILE: drivers/base/power/runtime.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#346: FILE: drivers/base/power/runtime.c:2:
+ * drivers/base/power/runtime.c - Helper functions for device run-time PM

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#515: FILE: drivers/base/power/runtime.c:171:
+	} else if (dev->parent
+	    && dev->parent->power.runtime_status != RPM_ACTIVE) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#579: FILE: drivers/base/power/runtime.c:235:
+	} else if (dev->power.runtime_status != RPM_SUSPENDING
+	    && dev->power.runtime_status != RPM_SUSPENDED) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#582: FILE: drivers/base/power/runtime.c:238:
+	} else if (dev->parent
+	    && (dev->parent->power.runtime_status == RPM_IDLE

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#583: FILE: drivers/base/power/runtime.c:239:
+	    && (dev->parent->power.runtime_status == RPM_IDLE
+	      || dev->parent->power.runtime_status == RPM_SUSPENDING

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#584: FILE: drivers/base/power/runtime.c:240:
+	      || dev->parent->power.runtime_status == RPM_SUSPENDING
+	      || dev->parent->power.runtime_status == RPM_SUSPENDED)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#618: FILE: drivers/base/power/runtime.c:274:
+	if (dev->power.runtime_status == RPM_ACTIVE) {
+		goto out;
+	} if (dev->power.runtime_status == RPM_IDLE) {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line (or did you mean 'else if'?)
#620: FILE: drivers/base/power/runtime.c:276:
+	} if (dev->power.runtime_status == RPM_IDLE) {

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#743: FILE: include/linux/pm_runtime.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#760: FILE: include/linux/pm_runtime.h:18:
+extern void pm_runtime_init(struct device *dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#761: FILE: include/linux/pm_runtime.h:19:
+extern void pm_request_suspend(struct device *dev, unsigned long delay);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#762: FILE: include/linux/pm_runtime.h:20:
+extern void pm_request_resume(struct device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#763: FILE: include/linux/pm_runtime.h:21:
+extern int pm_resume_sync(struct device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#764: FILE: include/linux/pm_runtime.h:22:
+extern void pm_cancel_autosuspend(struct device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#765: FILE: include/linux/pm_runtime.h:23:
+extern void pm_cancel_autoresume(struct device *dev);

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#787: FILE: include/linux/pm_runtime.h:45:
+static inline int pm_resume_sync(struct device *dev) { return -ENOSYS; }

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000112782.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 8 warnings, 12 checks, 619 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000112782.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
