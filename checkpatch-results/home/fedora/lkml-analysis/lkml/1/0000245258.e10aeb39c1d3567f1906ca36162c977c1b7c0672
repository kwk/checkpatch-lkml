ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#30: 
--- a/debug/mdb-base.h	1969-12-31 17:00:00.000000000 -0700

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#33: FILE: debug/mdb-base.h:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#35: FILE: debug/mdb-base.h:3:
+/***************************************************************************
+*

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:CAMELCASE: Avoid CamelCase: <enterKeyACC>
#72: FILE: debug/mdb-base.h:40:
+extern ULONG enterKeyACC(ULONG key, void *stackFrame,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <stackFrame>
#72: FILE: debug/mdb-base.h:40:
+extern ULONG enterKeyACC(ULONG key, void *stackFrame,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#72: FILE: debug/mdb-base.h:40:
+extern ULONG enterKeyACC(ULONG key, void *stackFrame,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#73: FILE: debug/mdb-base.h:41:
+extern ULONG enterKeyACC(ULONG key, void *stackFrame,
+		     ACCELERATOR *accel);

CHECK:CAMELCASE: Avoid CamelCase: <activateRegisterDisplayACC>
#74: FILE: debug/mdb-base.h:42:
+extern ULONG activateRegisterDisplayACC(ULONG key, void *stackFrame,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#74: FILE: debug/mdb-base.h:42:
+extern ULONG activateRegisterDisplayACC(ULONG key, void *stackFrame,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#75: FILE: debug/mdb-base.h:43:
+extern ULONG activateRegisterDisplayACC(ULONG key, void *stackFrame,
+		     ACCELERATOR *accel);

CHECK:CAMELCASE: Avoid CamelCase: <displayDebuggerHelpHelp>
#77: FILE: debug/mdb-base.h:45:
+extern ULONG displayDebuggerHelpHelp(BYTE *commandLine, DEBUGGER_PARSER

CHECK:CAMELCASE: Avoid CamelCase: <commandLine>
#77: FILE: debug/mdb-base.h:45:
+extern ULONG displayDebuggerHelpHelp(BYTE *commandLine, DEBUGGER_PARSER

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#77: FILE: debug/mdb-base.h:45:
+extern ULONG displayDebuggerHelpHelp(BYTE *commandLine, DEBUGGER_PARSER

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#78: FILE: debug/mdb-base.h:45:
*parser);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:CAMELCASE: Avoid CamelCase: <displayDebuggerHelp>
#79: FILE: debug/mdb-base.h:46:
+extern ULONG displayDebuggerHelp(BYTE *commandLine,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#79: FILE: debug/mdb-base.h:46:
+extern ULONG displayDebuggerHelp(BYTE *commandLine,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#80: FILE: debug/mdb-base.h:47:
+extern ULONG displayDebuggerHelp(BYTE *commandLine,
+			 StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <StackFrame>
#80: FILE: debug/mdb-base.h:47:
+			 StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <Exception>
#80: FILE: debug/mdb-base.h:47:
+			 StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <ascTableHelp>
#83: FILE: debug/mdb-base.h:50:
+extern ULONG ascTableHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#83: FILE: debug/mdb-base.h:50:
+extern ULONG ascTableHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <displayASCTable>
#84: FILE: debug/mdb-base.h:51:
+extern ULONG displayASCTable(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#84: FILE: debug/mdb-base.h:51:
+extern ULONG displayASCTable(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#85: FILE: debug/mdb-base.h:52:
+extern ULONG displayASCTable(BYTE *cmd,
+		     StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayToggleHelp>
#88: FILE: debug/mdb-base.h:55:
+extern ULONG displayToggleHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#88: FILE: debug/mdb-base.h:55:
+extern ULONG displayToggleHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ProcessTUToggle>
#89: FILE: debug/mdb-base.h:56:
+extern ULONG ProcessTUToggle(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#89: FILE: debug/mdb-base.h:56:
+extern ULONG ProcessTUToggle(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#90: FILE: debug/mdb-base.h:57:
+extern ULONG ProcessTUToggle(BYTE *cmd,
+		   StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <ProcessTDToggle>
#92: FILE: debug/mdb-base.h:59:
+extern ULONG ProcessTDToggle(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#92: FILE: debug/mdb-base.h:59:
+extern ULONG ProcessTDToggle(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#93: FILE: debug/mdb-base.h:60:
+extern ULONG ProcessTDToggle(BYTE *cmd,
+		   StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <ProcessTLToggle>
#95: FILE: debug/mdb-base.h:62:
+extern ULONG ProcessTLToggle(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#95: FILE: debug/mdb-base.h:62:
+extern ULONG ProcessTLToggle(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#96: FILE: debug/mdb-base.h:63:
+extern ULONG ProcessTLToggle(BYTE *cmd,
+		   StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <ProcessTGToggle>
#98: FILE: debug/mdb-base.h:65:
+extern ULONG ProcessTGToggle(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#98: FILE: debug/mdb-base.h:65:
+extern ULONG ProcessTGToggle(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#99: FILE: debug/mdb-base.h:66:
+extern ULONG ProcessTGToggle(BYTE *cmd,
+		   StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <ProcessTCToggle>
#101: FILE: debug/mdb-base.h:68:
+extern ULONG ProcessTCToggle(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#101: FILE: debug/mdb-base.h:68:
+extern ULONG ProcessTCToggle(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#102: FILE: debug/mdb-base.h:69:
+extern ULONG ProcessTCToggle(BYTE *cmd,
+		   StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <ProcessTNToggle>
#104: FILE: debug/mdb-base.h:71:
+extern ULONG ProcessTNToggle(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#104: FILE: debug/mdb-base.h:71:
+extern ULONG ProcessTNToggle(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#105: FILE: debug/mdb-base.h:72:
+extern ULONG ProcessTNToggle(BYTE *cmd,
+		   StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <ProcessTRToggle>
#107: FILE: debug/mdb-base.h:74:
+extern ULONG ProcessTRToggle(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#107: FILE: debug/mdb-base.h:74:
+extern ULONG ProcessTRToggle(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#108: FILE: debug/mdb-base.h:75:
+extern ULONG ProcessTRToggle(BYTE *cmd,
+		   StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <ProcessTSToggle>
#110: FILE: debug/mdb-base.h:77:
+extern ULONG ProcessTSToggle(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#110: FILE: debug/mdb-base.h:77:
+extern ULONG ProcessTSToggle(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#111: FILE: debug/mdb-base.h:78:
+extern ULONG ProcessTSToggle(BYTE *cmd,
+		   StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <ProcessTAToggle>
#113: FILE: debug/mdb-base.h:80:
+extern ULONG ProcessTAToggle(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#113: FILE: debug/mdb-base.h:80:
+extern ULONG ProcessTAToggle(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: debug/mdb-base.h:81:
+extern ULONG ProcessTAToggle(BYTE *cmd,
+		   StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayDebuggerVersionHelp>
#117: FILE: debug/mdb-base.h:84:
+extern ULONG displayDebuggerVersionHelp(BYTE *commandLine,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#117: FILE: debug/mdb-base.h:84:
+extern ULONG displayDebuggerVersionHelp(BYTE *commandLine,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#119: FILE: debug/mdb-base.h:85:
+extern ULONG displayDebuggerVersionHelp(BYTE *commandLine,
+extern ULONG DisplayDebuggerVersion(BYTE *cmd,

CHECK:CAMELCASE: Avoid CamelCase: <DisplayDebuggerVersion>
#119: FILE: debug/mdb-base.h:85:
+extern ULONG DisplayDebuggerVersion(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#119: FILE: debug/mdb-base.h:85:
+extern ULONG DisplayDebuggerVersion(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#120: FILE: debug/mdb-base.h:86:
+extern ULONG DisplayDebuggerVersion(BYTE *cmd,
+		   StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayKernelProcessHelp>
#123: FILE: debug/mdb-base.h:89:
+extern ULONG displayKernelProcessHelp(BYTE *commandLine, DEBUGGER_PARSER

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#123: FILE: debug/mdb-base.h:89:
+extern ULONG displayKernelProcessHelp(BYTE *commandLine, DEBUGGER_PARSER

CHECK:CAMELCASE: Avoid CamelCase: <displayKernelProcess>
#125: FILE: debug/mdb-base.h:90:
+extern ULONG displayKernelProcess(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#125: FILE: debug/mdb-base.h:90:
+extern ULONG displayKernelProcess(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#126: FILE: debug/mdb-base.h:91:
+extern ULONG displayKernelProcess(BYTE *cmd,
+			  StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayKernelQueueHelp>
#129: FILE: debug/mdb-base.h:94:
+extern ULONG displayKernelQueueHelp(BYTE *commandLine, DEBUGGER_PARSER

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#129: FILE: debug/mdb-base.h:94:
+extern ULONG displayKernelQueueHelp(BYTE *commandLine, DEBUGGER_PARSER

CHECK:CAMELCASE: Avoid CamelCase: <displayKernelQueue>
#131: FILE: debug/mdb-base.h:95:
+extern ULONG displayKernelQueue(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#131: FILE: debug/mdb-base.h:95:
+extern ULONG displayKernelQueue(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#132: FILE: debug/mdb-base.h:96:
+extern ULONG displayKernelQueue(BYTE *cmd,
+			StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displaySymbolsHelp>
#135: FILE: debug/mdb-base.h:99:
+extern ULONG displaySymbolsHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#135: FILE: debug/mdb-base.h:99:
+extern ULONG displaySymbolsHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <displaySymbols>
#136: FILE: debug/mdb-base.h:100:
+extern ULONG displaySymbols(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#136: FILE: debug/mdb-base.h:100:
+extern ULONG displaySymbols(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#137: FILE: debug/mdb-base.h:101:
+extern ULONG displaySymbols(BYTE *cmd,
+		    StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayLoaderMapHelp>
#140: FILE: debug/mdb-base.h:104:
+extern ULONG displayLoaderMapHelp(BYTE *commandLine, DEBUGGER_PARSER

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#140: FILE: debug/mdb-base.h:104:
+extern ULONG displayLoaderMapHelp(BYTE *commandLine, DEBUGGER_PARSER

CHECK:CAMELCASE: Avoid CamelCase: <displayLoaderMap>
#142: FILE: debug/mdb-base.h:105:
+extern ULONG displayLoaderMap(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#142: FILE: debug/mdb-base.h:105:
+extern ULONG displayLoaderMap(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#143: FILE: debug/mdb-base.h:106:
+extern ULONG displayLoaderMap(BYTE *cmd,
+		      StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayModuleHelp>
#146: FILE: debug/mdb-base.h:109:
+extern ULONG displayModuleHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#146: FILE: debug/mdb-base.h:109:
+extern ULONG displayModuleHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <displayModuleInfo>
#147: FILE: debug/mdb-base.h:110:
+extern ULONG displayModuleInfo(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#147: FILE: debug/mdb-base.h:110:
+extern ULONG displayModuleInfo(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#148: FILE: debug/mdb-base.h:111:
+extern ULONG displayModuleInfo(BYTE *cmd,
+		       StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayProcessesHelp>
#151: FILE: debug/mdb-base.h:114:
+extern ULONG displayProcessesHelp(BYTE *commandLine, DEBUGGER_PARSER

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#151: FILE: debug/mdb-base.h:114:
+extern ULONG displayProcessesHelp(BYTE *commandLine, DEBUGGER_PARSER

CHECK:CAMELCASE: Avoid CamelCase: <displayProcesses>
#153: FILE: debug/mdb-base.h:115:
+extern ULONG displayProcesses(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#153: FILE: debug/mdb-base.h:115:
+extern ULONG displayProcesses(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#154: FILE: debug/mdb-base.h:116:
+extern ULONG displayProcesses(BYTE *cmd,
+		      StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayRegistersHelp>
#157: FILE: debug/mdb-base.h:119:
+extern ULONG displayRegistersHelp(BYTE *commandLine, DEBUGGER_PARSER

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#157: FILE: debug/mdb-base.h:119:
+extern ULONG displayRegistersHelp(BYTE *commandLine, DEBUGGER_PARSER

CHECK:CAMELCASE: Avoid CamelCase: <displayControlRegisters>
#159: FILE: debug/mdb-base.h:120:
+extern ULONG displayControlRegisters(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#159: FILE: debug/mdb-base.h:120:
+extern ULONG displayControlRegisters(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#160: FILE: debug/mdb-base.h:121:
+extern ULONG displayControlRegisters(BYTE *cmd,
+			     StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayAllRegisters>
#162: FILE: debug/mdb-base.h:123:
+extern ULONG displayAllRegisters(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#162: FILE: debug/mdb-base.h:123:
+extern ULONG displayAllRegisters(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#163: FILE: debug/mdb-base.h:124:
+extern ULONG displayAllRegisters(BYTE *cmd,
+			     StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displaySegmentRegisters>
#165: FILE: debug/mdb-base.h:126:
+extern ULONG displaySegmentRegisters(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#165: FILE: debug/mdb-base.h:126:
+extern ULONG displaySegmentRegisters(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#166: FILE: debug/mdb-base.h:127:
+extern ULONG displaySegmentRegisters(BYTE *cmd,
+			     StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayNumericRegisters>
#168: FILE: debug/mdb-base.h:129:
+extern ULONG displayNumericRegisters(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#168: FILE: debug/mdb-base.h:129:
+extern ULONG displayNumericRegisters(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#169: FILE: debug/mdb-base.h:130:
+extern ULONG displayNumericRegisters(BYTE *cmd,
+			     StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayGeneralRegisters>
#171: FILE: debug/mdb-base.h:132:
+extern ULONG displayGeneralRegisters(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#171: FILE: debug/mdb-base.h:132:
+extern ULONG displayGeneralRegisters(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#172: FILE: debug/mdb-base.h:133:
+extern ULONG displayGeneralRegisters(BYTE *cmd,
+			     StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayDefaultRegisters>
#174: FILE: debug/mdb-base.h:135:
+extern ULONG displayDefaultRegisters(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#174: FILE: debug/mdb-base.h:135:
+extern ULONG displayDefaultRegisters(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#175: FILE: debug/mdb-base.h:136:
+extern ULONG displayDefaultRegisters(BYTE *cmd,
+			     StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayAPICHelp>
#178: FILE: debug/mdb-base.h:139:
+extern ULONG displayAPICHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#178: FILE: debug/mdb-base.h:139:
+extern ULONG displayAPICHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <displayAPICInfo>
#179: FILE: debug/mdb-base.h:140:
+extern ULONG displayAPICInfo(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#179: FILE: debug/mdb-base.h:140:
+extern ULONG displayAPICInfo(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#180: FILE: debug/mdb-base.h:141:
+extern ULONG displayAPICInfo(BYTE *cmd,
+		     StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <listProcessors>
#183: FILE: debug/mdb-base.h:144:
+extern ULONG listProcessors(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#183: FILE: debug/mdb-base.h:144:
+extern ULONG listProcessors(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#184: FILE: debug/mdb-base.h:145:
+extern ULONG listProcessors(BYTE *cmd,
+		    StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <listProcessorFrame>
#186: FILE: debug/mdb-base.h:147:
+extern ULONG listProcessorFrame(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#186: FILE: debug/mdb-base.h:147:
+extern ULONG listProcessorFrame(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#187: FILE: debug/mdb-base.h:148:
+extern ULONG listProcessorFrame(BYTE *cmd,
+			StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <ReasonHelp>
#190: FILE: debug/mdb-base.h:151:
+extern ULONG ReasonHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#190: FILE: debug/mdb-base.h:151:
+extern ULONG ReasonHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ReasonDisplay>
#191: FILE: debug/mdb-base.h:152:
+extern ULONG ReasonDisplay(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#191: FILE: debug/mdb-base.h:152:
+extern ULONG ReasonDisplay(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#192: FILE: debug/mdb-base.h:153:
+extern ULONG ReasonDisplay(BYTE *cmd,
+	       StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayMPSHelp>
#195: FILE: debug/mdb-base.h:156:
+extern ULONG displayMPSHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#195: FILE: debug/mdb-base.h:156:
+extern ULONG displayMPSHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <displayMPS>
#196: FILE: debug/mdb-base.h:157:
+extern ULONG displayMPS(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#196: FILE: debug/mdb-base.h:157:
+extern ULONG displayMPS(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#197: FILE: debug/mdb-base.h:158:
+extern ULONG displayMPS(BYTE *cmd,
+	       StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <clearScreenHelp>
#200: FILE: debug/mdb-base.h:161:
+extern ULONG clearScreenHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#200: FILE: debug/mdb-base.h:161:
+extern ULONG clearScreenHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <clearDebuggerScreen>
#201: FILE: debug/mdb-base.h:162:
+extern ULONG clearDebuggerScreen(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#201: FILE: debug/mdb-base.h:162:
+extern ULONG clearDebuggerScreen(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#202: FILE: debug/mdb-base.h:163:
+extern ULONG clearDebuggerScreen(BYTE *cmd,
+			 StackFrame *stackFrame, ULONG Exception,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#205: FILE: debug/mdb-base.h:166:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <SearchMemoryHelp>
#206: FILE: debug/mdb-base.h:167:
+extern ULONG SearchMemoryHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#206: FILE: debug/mdb-base.h:167:
+extern ULONG SearchMemoryHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <SearchMemory>
#207: FILE: debug/mdb-base.h:168:
+extern ULONG SearchMemory(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#207: FILE: debug/mdb-base.h:168:
+extern ULONG SearchMemory(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#208: FILE: debug/mdb-base.h:169:
+extern ULONG SearchMemory(BYTE *cmd,
+	       StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <SearchMemoryB>
#210: FILE: debug/mdb-base.h:171:
+extern ULONG SearchMemoryB(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#210: FILE: debug/mdb-base.h:171:
+extern ULONG SearchMemoryB(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: debug/mdb-base.h:172:
+extern ULONG SearchMemoryB(BYTE *cmd,
+	       StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <SearchMemoryW>
#213: FILE: debug/mdb-base.h:174:
+extern ULONG SearchMemoryW(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#213: FILE: debug/mdb-base.h:174:
+extern ULONG SearchMemoryW(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#214: FILE: debug/mdb-base.h:175:
+extern ULONG SearchMemoryW(BYTE *cmd,
+	       StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <SearchMemoryD>
#216: FILE: debug/mdb-base.h:177:
+extern ULONG SearchMemoryD(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#216: FILE: debug/mdb-base.h:177:
+extern ULONG SearchMemoryD(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#217: FILE: debug/mdb-base.h:178:
+extern ULONG SearchMemoryD(BYTE *cmd,
+	       StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <changeMemoryHelp>
#220: FILE: debug/mdb-base.h:181:
+extern ULONG changeMemoryHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#220: FILE: debug/mdb-base.h:181:
+extern ULONG changeMemoryHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <changeWordValue>
#221: FILE: debug/mdb-base.h:182:
+extern ULONG changeWordValue(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#221: FILE: debug/mdb-base.h:182:
+extern ULONG changeWordValue(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#222: FILE: debug/mdb-base.h:183:
+extern ULONG changeWordValue(BYTE *cmd,
+	       StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <changeDoubleValue>
#224: FILE: debug/mdb-base.h:185:
+extern ULONG changeDoubleValue(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#224: FILE: debug/mdb-base.h:185:
+extern ULONG changeDoubleValue(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#225: FILE: debug/mdb-base.h:186:
+extern ULONG changeDoubleValue(BYTE *cmd,
+	       StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <changeByteValue>
#227: FILE: debug/mdb-base.h:188:
+extern ULONG changeByteValue(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#227: FILE: debug/mdb-base.h:188:
+extern ULONG changeByteValue(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#228: FILE: debug/mdb-base.h:189:
+extern ULONG changeByteValue(BYTE *cmd,
+	       StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <changeDefaultValue>
#230: FILE: debug/mdb-base.h:191:
+extern ULONG changeDefaultValue(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#230: FILE: debug/mdb-base.h:191:
+extern ULONG changeDefaultValue(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#231: FILE: debug/mdb-base.h:192:
+extern ULONG changeDefaultValue(BYTE *cmd,
+			StackFrame *stackFrame, ULONG Exception,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#234: FILE: debug/mdb-base.h:195:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <displayCloseHelp>
#235: FILE: debug/mdb-base.h:196:
+extern ULONG displayCloseHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#235: FILE: debug/mdb-base.h:196:
+extern ULONG displayCloseHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <displayCloseSymbols>
#236: FILE: debug/mdb-base.h:197:
+extern ULONG displayCloseSymbols(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#236: FILE: debug/mdb-base.h:197:
+extern ULONG displayCloseSymbols(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: debug/mdb-base.h:198:
+extern ULONG displayCloseSymbols(BYTE *cmd,
+			 StackFrame *stackFrame, ULONG Exception,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#240: FILE: debug/mdb-base.h:201:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <displayINTRHelp>
#241: FILE: debug/mdb-base.h:202:
+extern ULONG displayINTRHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#241: FILE: debug/mdb-base.h:202:
+extern ULONG displayINTRHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <displayInterruptTable>
#242: FILE: debug/mdb-base.h:203:
+extern ULONG displayInterruptTable(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#242: FILE: debug/mdb-base.h:203:
+extern ULONG displayInterruptTable(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#243: FILE: debug/mdb-base.h:204:
+extern ULONG displayInterruptTable(BYTE *cmd,
+			   StackFrame *stackFrame, ULONG Exception,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#246: FILE: debug/mdb-base.h:207:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <viewScreensHelp>
#247: FILE: debug/mdb-base.h:208:
+extern ULONG viewScreensHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#247: FILE: debug/mdb-base.h:208:
+extern ULONG viewScreensHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <displayScreenList>
#248: FILE: debug/mdb-base.h:209:
+extern ULONG displayScreenList(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#248: FILE: debug/mdb-base.h:209:
+extern ULONG displayScreenList(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#249: FILE: debug/mdb-base.h:210:
+extern ULONG displayScreenList(BYTE *cmd,
+		       StackFrame *stackFrame, ULONG Exception,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#252: FILE: debug/mdb-base.h:213:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <displayIOAPICHelp>
#253: FILE: debug/mdb-base.h:214:
+extern ULONG displayIOAPICHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#253: FILE: debug/mdb-base.h:214:
+extern ULONG displayIOAPICHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <displayIOAPICInfo>
#254: FILE: debug/mdb-base.h:215:
+extern ULONG displayIOAPICInfo(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#254: FILE: debug/mdb-base.h:215:
+extern ULONG displayIOAPICInfo(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#255: FILE: debug/mdb-base.h:216:
+extern ULONG displayIOAPICInfo(BYTE *cmd,
+		       StackFrame *stackFrame, ULONG Exception,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#258: FILE: debug/mdb-base.h:219:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <displayDumpHelp>
#260: FILE: debug/mdb-base.h:221:
+extern ULONG displayDumpHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#260: FILE: debug/mdb-base.h:221:
+extern ULONG displayDumpHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <debuggerWalkStack>
#261: FILE: debug/mdb-base.h:222:
+extern ULONG debuggerWalkStack(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#261: FILE: debug/mdb-base.h:222:
+extern ULONG debuggerWalkStack(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#262: FILE: debug/mdb-base.h:223:
+extern ULONG debuggerWalkStack(BYTE *cmd,
+		       StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <debuggerDumpLinkedList>
#264: FILE: debug/mdb-base.h:225:
+extern ULONG debuggerDumpLinkedList(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#264: FILE: debug/mdb-base.h:225:
+extern ULONG debuggerDumpLinkedList(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#265: FILE: debug/mdb-base.h:226:
+extern ULONG debuggerDumpLinkedList(BYTE *cmd,
+			    StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <debuggerDumpWord>
#267: FILE: debug/mdb-base.h:228:
+extern ULONG debuggerDumpWord(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#267: FILE: debug/mdb-base.h:228:
+extern ULONG debuggerDumpWord(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#268: FILE: debug/mdb-base.h:229:
+extern ULONG debuggerDumpWord(BYTE *cmd,
+		      StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <debuggerDumpStack>
#270: FILE: debug/mdb-base.h:231:
+extern ULONG debuggerDumpStack(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#270: FILE: debug/mdb-base.h:231:
+extern ULONG debuggerDumpStack(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#271: FILE: debug/mdb-base.h:232:
+extern ULONG debuggerDumpStack(BYTE *cmd,
+		       StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <debuggerDumpDoubleStack>
#273: FILE: debug/mdb-base.h:234:
+extern ULONG debuggerDumpDoubleStack(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#273: FILE: debug/mdb-base.h:234:
+extern ULONG debuggerDumpDoubleStack(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: debug/mdb-base.h:235:
+extern ULONG debuggerDumpDoubleStack(BYTE *cmd,
+			     StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <debuggerDumpDouble>
#276: FILE: debug/mdb-base.h:237:
+extern ULONG debuggerDumpDouble(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#276: FILE: debug/mdb-base.h:237:
+extern ULONG debuggerDumpDouble(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#277: FILE: debug/mdb-base.h:238:
+extern ULONG debuggerDumpDouble(BYTE *cmd,
+			StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <debuggerDumpByte>
#279: FILE: debug/mdb-base.h:240:
+extern ULONG debuggerDumpByte(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#279: FILE: debug/mdb-base.h:240:
+extern ULONG debuggerDumpByte(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#280: FILE: debug/mdb-base.h:241:
+extern ULONG debuggerDumpByte(BYTE *cmd,
+		      StackFrame *stackFrame, ULONG Exception,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#283: FILE: debug/mdb-base.h:244:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <displayDisassembleHelp>
#284: FILE: debug/mdb-base.h:245:
+extern ULONG displayDisassembleHelp(BYTE *commandLine, DEBUGGER_PARSER

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#284: FILE: debug/mdb-base.h:245:
+extern ULONG displayDisassembleHelp(BYTE *commandLine, DEBUGGER_PARSER

CHECK:CAMELCASE: Avoid CamelCase: <processDisassemble16>
#286: FILE: debug/mdb-base.h:246:
+extern ULONG processDisassemble16(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#286: FILE: debug/mdb-base.h:246:
+extern ULONG processDisassemble16(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#287: FILE: debug/mdb-base.h:247:
+extern ULONG processDisassemble16(BYTE *cmd,
+			  StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <processDisassemble32>
#289: FILE: debug/mdb-base.h:249:
+extern ULONG processDisassemble32(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#289: FILE: debug/mdb-base.h:249:
+extern ULONG processDisassemble32(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#290: FILE: debug/mdb-base.h:250:
+extern ULONG processDisassemble32(BYTE *cmd,
+			  StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <rebootSystemHelp>
#293: FILE: debug/mdb-base.h:253:
+extern ULONG rebootSystemHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#293: FILE: debug/mdb-base.h:253:
+extern ULONG rebootSystemHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <rebootSystem>
#294: FILE: debug/mdb-base.h:254:
+extern ULONG rebootSystem(BYTE *cmd, StackFrame *stackFrame, ULONG

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#294: FILE: debug/mdb-base.h:254:
+extern ULONG rebootSystem(BYTE *cmd, StackFrame *stackFrame, ULONG

ERROR:CODE_INDENT: code indent should use tabs where possible
#296: FILE: debug/mdb-base.h:255:
+^I                  DEBUGGER_PARSER *parser);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:CAMELCASE: Avoid CamelCase: <displaySectionsHelp>
#298: FILE: debug/mdb-base.h:257:
+extern ULONG displaySectionsHelp(BYTE *commandLine, DEBUGGER_PARSER

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#298: FILE: debug/mdb-base.h:257:
+extern ULONG displaySectionsHelp(BYTE *commandLine, DEBUGGER_PARSER

CHECK:CAMELCASE: Avoid CamelCase: <displaySections>
#300: FILE: debug/mdb-base.h:258:
+extern ULONG displaySections(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#300: FILE: debug/mdb-base.h:258:
+extern ULONG displaySections(BYTE *cmd,

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: debug/mdb-base.h:259:
+^I^I             StackFrame *stackFrame, ULONG Exception,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#301: FILE: debug/mdb-base.h:259:
+extern ULONG displaySections(BYTE *cmd,
+		             StackFrame *stackFrame, ULONG Exception,

ERROR:CODE_INDENT: code indent should use tabs where possible
#302: FILE: debug/mdb-base.h:260:
+^I^I             DEBUGGER_PARSER *parser);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#303: FILE: debug/mdb-base.h:261:
+extern ULONG displayKernelProcessHelp(BYTE *commandLine,

ERROR:CODE_INDENT: code indent should use tabs where possible
#304: FILE: debug/mdb-base.h:262:
+                                      DEBUGGER_PARSER *parser);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: debug/mdb-base.h:262:
+                                      DEBUGGER_PARSER *parser);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#305: FILE: debug/mdb-base.h:263:
+extern ULONG displayKernelProcess(BYTE *cmd,

ERROR:CODE_INDENT: code indent should use tabs where possible
#306: FILE: debug/mdb-base.h:264:
+^I^I                  StackFrame *stackFrame, ULONG Exception,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: debug/mdb-base.h:264:
+extern ULONG displayKernelProcess(BYTE *cmd,
+		                  StackFrame *stackFrame, ULONG Exception,

ERROR:CODE_INDENT: code indent should use tabs where possible
#307: FILE: debug/mdb-base.h:265:
+^I^I                  DEBUGGER_PARSER *parser);$

CHECK:CAMELCASE: Avoid CamelCase: <displayProcessorStatusHelp>
#308: FILE: debug/mdb-base.h:266:
+extern ULONG displayProcessorStatusHelp(BYTE *commandLine,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#308: FILE: debug/mdb-base.h:266:
+extern ULONG displayProcessorStatusHelp(BYTE *commandLine,

ERROR:CODE_INDENT: code indent should use tabs where possible
#309: FILE: debug/mdb-base.h:267:
+                                        DEBUGGER_PARSER *parser);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: debug/mdb-base.h:267:
+                                        DEBUGGER_PARSER *parser);$

CHECK:CAMELCASE: Avoid CamelCase: <displayProcessorStatus>
#310: FILE: debug/mdb-base.h:268:
+extern ULONG displayProcessorStatus(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#310: FILE: debug/mdb-base.h:268:
+extern ULONG displayProcessorStatus(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#311: FILE: debug/mdb-base.h:269:
+extern ULONG displayProcessorStatus(BYTE *cmd,
+		       StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <backTraceHelp>
#314: FILE: debug/mdb-base.h:272:
+extern ULONG backTraceHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#314: FILE: debug/mdb-base.h:272:
+extern ULONG backTraceHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <backTraceAllPID>
#315: FILE: debug/mdb-base.h:273:
+extern ULONG backTraceAllPID(BYTE *cmd, StackFrame *stackFrame,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#315: FILE: debug/mdb-base.h:273:
+extern ULONG backTraceAllPID(BYTE *cmd, StackFrame *stackFrame,

ERROR:CODE_INDENT: code indent should use tabs where possible
#316: FILE: debug/mdb-base.h:274:
+                             ULONG Exception, DEBUGGER_PARSER *parser);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: debug/mdb-base.h:274:
+                             ULONG Exception, DEBUGGER_PARSER *parser);$

CHECK:CAMELCASE: Avoid CamelCase: <backTracePID>
#317: FILE: debug/mdb-base.h:275:
+extern ULONG backTracePID(BYTE *cmd, StackFrame *stackFrame,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#317: FILE: debug/mdb-base.h:275:
+extern ULONG backTracePID(BYTE *cmd, StackFrame *stackFrame,

ERROR:CODE_INDENT: code indent should use tabs where possible
#318: FILE: debug/mdb-base.h:276:
+                             ULONG Exception, DEBUGGER_PARSER *parser);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#318: FILE: debug/mdb-base.h:276:
+extern ULONG backTracePID(BYTE *cmd, StackFrame *stackFrame,
+                             ULONG Exception, DEBUGGER_PARSER *parser);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: debug/mdb-base.h:276:
+                             ULONG Exception, DEBUGGER_PARSER *parser);$

CHECK:CAMELCASE: Avoid CamelCase: <backTraceStack>
#319: FILE: debug/mdb-base.h:277:
+extern ULONG backTraceStack(BYTE *cmd, StackFrame *stackFrame,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#319: FILE: debug/mdb-base.h:277:
+extern ULONG backTraceStack(BYTE *cmd, StackFrame *stackFrame,

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: debug/mdb-base.h:278:
+                             ULONG Exception, DEBUGGER_PARSER *parser);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#320: FILE: debug/mdb-base.h:278:
+extern ULONG backTraceStack(BYTE *cmd, StackFrame *stackFrame,
+                             ULONG Exception, DEBUGGER_PARSER *parser);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: debug/mdb-base.h:278:
+                             ULONG Exception, DEBUGGER_PARSER *parser);$

CHECK:CAMELCASE: Avoid CamelCase: <listModulesHelp>
#323: FILE: debug/mdb-base.h:281:
+extern ULONG listModulesHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#323: FILE: debug/mdb-base.h:281:
+extern ULONG listModulesHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <listModules>
#324: FILE: debug/mdb-base.h:282:
+extern ULONG listModules(BYTE *cmd, StackFrame *stackFrame, ULONG Exception,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#324: FILE: debug/mdb-base.h:282:
+extern ULONG listModules(BYTE *cmd, StackFrame *stackFrame, ULONG Exception,

ERROR:CODE_INDENT: code indent should use tabs where possible
#325: FILE: debug/mdb-base.h:283:
+^I                 DEBUGGER_PARSER *parser);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#325: FILE: debug/mdb-base.h:283:
+extern ULONG listModules(BYTE *cmd, StackFrame *stackFrame, ULONG Exception,
+	                 DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <unloadModule>
#326: FILE: debug/mdb-base.h:284:
+extern ULONG unloadModule(BYTE *cmd, StackFrame *stackFrame, ULONG

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#326: FILE: debug/mdb-base.h:284:
+extern ULONG unloadModule(BYTE *cmd, StackFrame *stackFrame, ULONG

ERROR:CODE_INDENT: code indent should use tabs where possible
#328: FILE: debug/mdb-base.h:285:
+^I                 DEBUGGER_PARSER *parser);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000245258.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 14 errors, 7 warnings, 251 checks, 300 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000245258.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
