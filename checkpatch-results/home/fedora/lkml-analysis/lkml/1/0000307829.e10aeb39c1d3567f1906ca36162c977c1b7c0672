WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#33: 
off on remount RO but we are able to automatically reenable them again
                                                   ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#36: 
these references to reenable quotas when remounting RW.
                    ^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#87: FILE: fs/dquot.c:1482:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#104: FILE: fs/dquot.c:1499:
+		 * is called, drop kept inodes. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#106: FILE: fs/dquot.c:1501:
+			iput(dqopt->files[cnt]);
 			^^^^

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#135: FILE: fs/dquot.c:1557:
+			 * can reenable quota on the subsequent remount RW.
 			       ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#137: FILE: fs/dquot.c:1559:
+			 * is pending delete on the quota file... */

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#139: FILE: fs/dquot.c:1561:
+				iput(toputinode[cnt]);
 				^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#156: FILE: fs/dquot.c:1606:
+	if (sb_has_quota_enabled(sb, type) ||
+			sb_has_quota_suspended(sb, type)) {

WARNING:TYPO_SPELLING: 'Reenable' may be misspelled - perhaps 'Re-enable'?
#172: FILE: fs/dquot.c:1665:
+/* Reenable quotas on remount RW */
    ^^^^^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#184: FILE: fs/dquot.c:1677:
+	BUG_ON(sb_has_quota_enabled(sb, type));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#192: FILE: fs/dquot.c:1685:
+	iput(inode);
 	^^^^

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#265: FILE: fs/super.c:609:
+		if (retval < 0 && retval != -ENOSYS)

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#290: FILE: include/linux/quota.h:202:
+				 * quotas on after remount RW */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#300: FILE: include/linux/quota.h:299:
+	int (*quota_on)(struct super_block *, int, int, char *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#300: FILE: include/linux/quota.h:299:
+	int (*quota_on)(struct super_block *, int, int, char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#300: FILE: include/linux/quota.h:299:
+	int (*quota_on)(struct super_block *, int, int, char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#300: FILE: include/linux/quota.h:299:
+	int (*quota_on)(struct super_block *, int, int, char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#300: FILE: include/linux/quota.h:299:
+	int (*quota_on)(struct super_block *, int, int, char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#301: FILE: include/linux/quota.h:300:
+	int (*quota_off)(struct super_block *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#301: FILE: include/linux/quota.h:300:
+	int (*quota_off)(struct super_block *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#301: FILE: include/linux/quota.h:300:
+	int (*quota_off)(struct super_block *, int, int);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#311: FILE: include/linux/quota.h:323:
+						 * memory to turn them on */

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'sb' - possible side-effects?
#320: FILE: include/linux/quota.h:342:
+#define sb_has_quota_suspended(sb, type) \
+	((type) == USRQUOTA ? (sb_dqopt(sb)->flags & DQUOT_USR_SUSPENDED) : \
+			      (sb_dqopt(sb)->flags & DQUOT_GRP_SUSPENDED))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#336: FILE: include/linux/quotaops.h:40:
+extern int vfs_quota_on(struct super_block *sb, int type, int format_id,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#337: FILE: include/linux/quotaops.h:41:
+extern int vfs_quota_on(struct super_block *sb, int type, int format_id,
+		char *path, int remount);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#341: FILE: include/linux/quotaops.h:44:
+extern int vfs_quota_off(struct super_block *sb, int type, int remount);

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#367: FILE: include/linux/quotaops.h:194:
+		return -ENOSYS;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#375: FILE: include/linux/quotaops.h:202:
+  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: include/linux/quotaops.h:202:
+  $

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000307829.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 23 warnings, 6 checks, 301 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000307829.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
