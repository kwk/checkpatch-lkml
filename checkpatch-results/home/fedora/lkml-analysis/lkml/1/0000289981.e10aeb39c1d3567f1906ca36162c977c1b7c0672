WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#64: 
 drivers/ide/ide-cd.c                      |  585 +++++++++++++++--------------

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#418: FILE: drivers/ide/arm/ide_arm.c:37:
+		printk(KERN_ERR "%s: I/O resource 0x%lX-0x%lX not free.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#419: FILE: drivers/ide/arm/ide_arm.c:38:
+		printk(KERN_ERR "%s: I/O resource 0x%lX-0x%lX not free.\n",
+				DRV_NAME, base, base + 7);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#424: FILE: drivers/ide/arm/ide_arm.c:43:
+		printk(KERN_ERR "%s: I/O resource 0x%lX not free.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#425: FILE: drivers/ide/arm/ide_arm.c:44:
+		printk(KERN_ERR "%s: I/O resource 0x%lX not free.\n",
+				DRV_NAME, ctl);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#445: FILE: drivers/ide/arm/palm_bk3710.c:320:
+static int __devinit palm_bk3710_init_dma(ide_hwif_t *hwif,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#454: FILE: drivers/ide/arm/palm_bk3710.c:326:
+	printk(KERN_INFO "    %s: MMIO-DMA\n", hwif->name);

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#470: FILE: drivers/ide/arm/palm_bk3710.c:342:
 static const struct ide_port_info __devinitdata palm_bk3710_port_info = {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#591: FILE: drivers/ide/ide-acpi.c:58:
+		printk(KERN_DEBUG "%s: " fmt, __func__, ## args)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#720: FILE: drivers/ide/ide-cd.c:140:
+static void cdrom_analyze_sense_data(ide_drive_t *drive,
 			      struct request *failed_command,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#835: FILE: drivers/ide/ide-cd.c:312:
+		printk(KERN_ERR "%s: missing rq in %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#836: FILE: drivers/ide/ide-cd.c:313:
+		printk(KERN_ERR "%s: missing rq in %s\n",
+				drive->name, __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#897: FILE: drivers/ide/ide-cd.c:382:
+				printk(KERN_ERR "%s: tray open\n", drive->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#929: FILE: drivers/ide/ide-cd.c:408:
+					spin_unlock_irqrestore(&ide_lock,
+								flags);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1037: FILE: drivers/ide/ide-cd.c:512:
+			printk(KERN_INFO "ide-cd: cmd 0x%x timed out\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1038: FILE: drivers/ide/ide-cd.c:513:
+			printk(KERN_INFO "ide-cd: cmd 0x%x timed out\n",
+					 rq->cmd[0]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1530: FILE: drivers/ide/ide-cd.c:1219:
+static ide_startstop_t ide_do_rw_cdrom(ide_drive_t *drive, struct request *rq,
+					sector_t block)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1544: FILE: drivers/ide/ide-cd.c:1235:
+				printk(KERN_ERR "%s: DSC timeout\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1545: FILE: drivers/ide/ide-cd.c:1236:
+				printk(KERN_ERR "%s: DSC timeout\n",
+						drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1614: FILE: drivers/ide/ide-cd.c:1374:
+			printk(KERN_ERR "%s: No cdrom TOC buffer!\n",

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1614: FILE: drivers/ide/ide-cd.c:1374:
 		if (toc == NULL) {
+			printk(KERN_ERR "%s: No cdrom TOC buffer!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1615: FILE: drivers/ide/ide-cd.c:1375:
+			printk(KERN_ERR "%s: No cdrom TOC buffer!\n",
+					drive->name);

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#1684: FILE: drivers/ide/ide-cd.c:1438:
+		 * Heiko Eißfeldt.
 		           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1750: FILE: drivers/ide/ide-cd.c:1618:
+		printk(KERN_ERR "%s: ATAPI magneto-optical drive\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1751: FILE: drivers/ide/ide-cd.c:1619:
+		printk(KERN_ERR "%s: ATAPI magneto-optical drive\n",
+				drive->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1818: FILE: drivers/ide/ide-cd.c:1795:
+static int proc_idecd_read_capacity(char *page, char **start, off_t off,
+					int count, int *eof, void *data)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1828: FILE: drivers/ide/ide-cd.c:1805:
+	{ "capacity", S_IFREG|S_IRUGO, proc_idecd_read_capacity, NULL },
 	                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1828: FILE: drivers/ide/ide-cd.c:1805:
+	{ "capacity", S_IFREG|S_IRUGO, proc_idecd_read_capacity, NULL },

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1876: FILE: drivers/ide/ide-cd.c:1917:
+		printk(KERN_ERR "%s: %s failed to register device with the"

WARNING:SPLIT_STRING: quoted string split across lines
#1877: FILE: drivers/ide/ide-cd.c:1918:
+		printk(KERN_ERR "%s: %s failed to register device with the"
+				" cdrom driver.\n", drive->name, __func__);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1929: FILE: drivers/ide/ide-cd.c:2115:
+			printk(KERN_INFO "ide-cd: ignoring drive %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1930: FILE: drivers/ide/ide-cd.c:2116:
+			printk(KERN_INFO "ide-cd: ignoring drive %s\n",
+					 drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1936: FILE: drivers/ide/ide-cd.c:2121:
+		printk(KERN_INFO "ide-cd: passing drive %s to ide-scsi "

WARNING:SPLIT_STRING: quoted string split across lines
#1937: FILE: drivers/ide/ide-cd.c:2122:
+		printk(KERN_INFO "ide-cd: passing drive %s to ide-scsi "
+				 "emulation.\n", drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1943: FILE: drivers/ide/ide-cd.c:2127:
+		printk(KERN_ERR "%s: Can't allocate a cdrom structure\n",

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1943: FILE: drivers/ide/ide-cd.c:2127:
 	if (info == NULL) {
+		printk(KERN_ERR "%s: Can't allocate a cdrom structure\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1944: FILE: drivers/ide/ide-cd.c:2128:
+		printk(KERN_ERR "%s: Can't allocate a cdrom structure\n",
+				drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2244: FILE: drivers/ide/ide-generic.c:101:
+				printk(KERN_ERR "%s: I/O resource 0x%lX-0x%lX "

WARNING:SPLIT_STRING: quoted string split across lines
#2245: FILE: drivers/ide/ide-generic.c:102:
+				printk(KERN_ERR "%s: I/O resource 0x%lX-0x%lX "
+						"not free.\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2251: FILE: drivers/ide/ide-generic.c:108:
+				printk(KERN_ERR "%s: I/O resource 0x%lX "

WARNING:SPLIT_STRING: quoted string split across lines
#2252: FILE: drivers/ide/ide-generic.c:109:
+				printk(KERN_ERR "%s: I/O resource 0x%lX "
+						"not free.\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!drive->hwif->dma_ops"
#2280: FILE: drivers/ide/ide-io.c:221:
+		if (drive->hwif->dma_ops == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_ops"
#2464: FILE: drivers/ide/ide-lib.c:294:
+	if (port_ops == NULL || port_ops->set_pio_mode == NULL ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_ops->set_pio_mode"
#2464: FILE: drivers/ide/ide-lib.c:294:
+	if (port_ops == NULL || port_ops->set_pio_mode == NULL ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_ops"
#2478: FILE: drivers/ide/ide-lib.c:352:
+	if (port_ops == NULL || port_ops->set_pio_mode == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_ops->set_pio_mode"
#2478: FILE: drivers/ide/ide-lib.c:352:
+	if (port_ops == NULL || port_ops->set_pio_mode == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_ops->set_dma_mode"
#2487: FILE: drivers/ide/ide-lib.c:359:
+	if (port_ops->set_dma_mode == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_ops"
#2514: FILE: drivers/ide/ide-lib.c:383:
+	if (port_ops == NULL || port_ops->set_dma_mode == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_ops->set_dma_mode"
#2514: FILE: drivers/ide/ide-lib.c:383:
+	if (port_ops == NULL || port_ops->set_dma_mode == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_ops"
#2536: FILE: drivers/ide/ide-lib.c:414:
+	if (port_ops == NULL || port_ops->set_dma_mode == NULL ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_ops->set_dma_mode"
#2536: FILE: drivers/ide/ide-lib.c:414:
+	if (port_ops == NULL || port_ops->set_dma_mode == NULL ||

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2566: FILE: drivers/ide/ide-pnp.c:43:
+		printk(KERN_ERR "%s: I/O resource 0x%lX-0x%lX not free.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2567: FILE: drivers/ide/ide-pnp.c:44:
+		printk(KERN_ERR "%s: I/O resource 0x%lX-0x%lX not free.\n",
+				DRV_NAME, base, base + 7);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2572: FILE: drivers/ide/ide-pnp.c:49:
+		printk(KERN_ERR "%s: I/O resource 0x%lX not free.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2573: FILE: drivers/ide/ide-pnp.c:50:
+		printk(KERN_ERR "%s: I/O resource 0x%lX not free.\n",
+				DRV_NAME, ctl);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2696: FILE: drivers/ide/ide-probe.c:1373:
+			hwif->mate->serialized = hwif->serialized = 1;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: braces {} should be used on all arms of this statement
#2714: FILE: drivers/ide/ide-probe.c:1388:
+		if (rc < 0) {
[...]
+		} else if (d->dma_ops)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2715: FILE: drivers/ide/ide-probe.c:1389:
+			printk(KERN_INFO "%s: DMA disabled\n", hwif->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2851: FILE: drivers/ide/ide-probe.c:1659:
+		printk(KERN_ERR "%s: I/O resource 0x%lX-0x%lX not free.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2852: FILE: drivers/ide/ide-probe.c:1660:
+		printk(KERN_ERR "%s: I/O resource 0x%lX-0x%lX not free.\n",
+				d->name, base, base + 7);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2857: FILE: drivers/ide/ide-probe.c:1665:
+		printk(KERN_ERR "%s: I/O resource 0x%lX not free.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2858: FILE: drivers/ide/ide-probe.c:1666:
+		printk(KERN_ERR "%s: I/O resource 0x%lX not free.\n",
+				d->name, ctl);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3025: FILE: drivers/ide/ide-tape.c:2243:
+			if (test_bit(IDETAPE_FLAG_PIPELINE_ACTIVE,
+					&tape->flags))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3044: FILE: drivers/ide/ide-tape.c:2300:
+	while (tape->next_stage || test_bit(IDETAPE_FLAG_PIPELINE_ACTIVE,
+						&tape->flags)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hwif->dma_ops"
#3245: FILE: drivers/ide/ide.c:472:
+	if (hwif->dma_ops == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_ops"
#3259: FILE: drivers/ide/ide.c:517:
+	if (port_ops == NULL || port_ops->set_pio_mode == NULL ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_ops->set_pio_mode"
#3259: FILE: drivers/ide/ide.c:517:
+	if (port_ops == NULL || port_ops->set_pio_mode == NULL ||

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#3506: FILE: drivers/ide/legacy/ht6560b.c:360:
+		printk(KERN_NOTICE "%s: HBA not found\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3568: FILE: drivers/ide/legacy/ide-4drives.c:25:
+		printk(KERN_ERR "%s: I/O resource 0x%lX-0x%lX not free.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3569: FILE: drivers/ide/legacy/ide-4drives.c:26:
+		printk(KERN_ERR "%s: I/O resource 0x%lX-0x%lX not free.\n",
+				DRV_NAME, base, base + 7);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3574: FILE: drivers/ide/legacy/ide-4drives.c:31:
+		printk(KERN_ERR "%s: I/O resource 0x%lX not free.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3575: FILE: drivers/ide/legacy/ide-4drives.c:32:
+		printk(KERN_ERR "%s: I/O resource 0x%lX not free.\n",
+				DRV_NAME, ctl);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3622: FILE: drivers/ide/legacy/ide-cs.c:136:
+    ide_info_t *info = link->priv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3623: FILE: drivers/ide/legacy/ide-cs.c:137:
+    ide_hwif_t *hwif = info->hwif;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3630: FILE: drivers/ide/legacy/ide-cs.c:143:
+    release_region(hwif->io_ports[IDE_CONTROL_OFFSET], 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3631: FILE: drivers/ide/legacy/ide-cs.c:144:
+    release_region(hwif->io_ports[IDE_DATA_OFFSET], 8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3633: FILE: drivers/ide/legacy/ide-cs.c:146:
+    kfree(info);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3642: FILE: drivers/ide/legacy/ide-cs.c:154:
+static ide_hwif_t *idecs_register(unsigned long io, unsigned long ctl,
+				unsigned long irq, struct pcmcia_device *handle)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3649: FILE: drivers/ide/legacy/ide-cs.c:161:
+    if (!request_region(io, 8, DRV_NAME)) {$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3650: FILE: drivers/ide/legacy/ide-cs.c:162:
+	printk(KERN_ERR "%s: I/O resource 0x%lX-0x%lX not free.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3651: FILE: drivers/ide/legacy/ide-cs.c:163:
+	printk(KERN_ERR "%s: I/O resource 0x%lX-0x%lX not free.\n",
+			DRV_NAME, io, io + 7);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3653: FILE: drivers/ide/legacy/ide-cs.c:165:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3655: FILE: drivers/ide/legacy/ide-cs.c:167:
+    if (!request_region(ctl, 1, DRV_NAME)) {$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3656: FILE: drivers/ide/legacy/ide-cs.c:168:
+	printk(KERN_ERR "%s: I/O resource 0x%lX not free.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3657: FILE: drivers/ide/legacy/ide-cs.c:169:
+	printk(KERN_ERR "%s: I/O resource 0x%lX not free.\n",
+			DRV_NAME, ctl);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3660: FILE: drivers/ide/legacy/ide-cs.c:172:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3679: FILE: drivers/ide/legacy/ide-cs.c:192:
+    hwif->port_ops = &idecs_port_ops;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3686: FILE: drivers/ide/legacy/ide-cs.c:198:
+    if (hwif->present)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3690: FILE: drivers/ide/legacy/ide-cs.c:202:
+    release_region(ctl, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3691: FILE: drivers/ide/legacy/ide-cs.c:203:
+    release_region(io, 8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3692: FILE: drivers/ide/legacy/ide-cs.c:204:
+    return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3701: FILE: drivers/ide/legacy/ide-cs.c:229:
+    int i, pass, last_ret = 0, last_fn = 0, is_kme = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3703: FILE: drivers/ide/legacy/ide-cs.c:231:
+    ide_hwif_t *hwif;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3714: FILE: drivers/ide/legacy/ide-cs.c:327:
+    for (i = 0; i < 10; i++) {$

CHECK:CAMELCASE: Avoid CamelCase: <AssignedIRQ>
#3715: FILE: drivers/ide/legacy/ide-cs.c:328:
+	hwif = idecs_register(io_base, ctl_base, link->irq.AssignedIRQ, link);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#3716: FILE: drivers/ide/legacy/ide-cs.c:329:
+	if (hwif)
+	    break;

WARNING:TABSTOP: Statements should start on a tabstop
#3717: FILE: drivers/ide/legacy/ide-cs.c:330:
+	    break;

WARNING:TABSTOP: Statements should start on a tabstop
#3725: FILE: drivers/ide/legacy/ide-cs.c:335:
+	    if (hwif) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3734: FILE: drivers/ide/legacy/ide-cs.c:344:
+    if (hwif == NULL) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hwif"
#3734: FILE: drivers/ide/legacy/ide-cs.c:344:
+    if (hwif == NULL) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3744: FILE: drivers/ide/legacy/ide-cs.c:352:
+    sprintf(info->node.dev_name, "hd%c", 'a' + hwif->index * 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3745: FILE: drivers/ide/legacy/ide-cs.c:353:
+    info->node.major = hwif->major;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3748: FILE: drivers/ide/legacy/ide-cs.c:355:
+    info->hwif = hwif;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3756: FILE: drivers/ide/legacy/ide-cs.c:386:
+    ide_hwif_t *hwif = info->hwif;$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3942: FILE: drivers/ide/legacy/qd65xx.c:387:
+		printk(KERN_INFO "qd6580: %s IDE board\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3943: FILE: drivers/ide/legacy/qd65xx.c:388:
+		printk(KERN_INFO "qd6580: %s IDE board\n",
+			(control & QD_CONTR_SEC_DISABLED) ? "single" : "dual");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4082: FILE: drivers/ide/mips/au1xxx-ide.c:63:
+		printk(KERN_ERR "%s failed %d\n", __func__, __LINE__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4091: FILE: drivers/ide/mips/au1xxx-ide.c:81:
+		printk(KERN_ERR "%s failed %d\n", __func__, __LINE__);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#4314: FILE: drivers/ide/pci/aec62xx.c:141:
 static unsigned int __devinit init_chipset_aec62xx(struct pci_dev *dev, const char *name)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#4343: FILE: drivers/ide/pci/aec62xx.c:189:
 static const struct ide_port_info aec62xx_chipsets[] __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#4409: FILE: drivers/ide/pci/alim15x3.c:623:
+static u8 __devinit ali_cable_detect(ide_hwif_t *hwif)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#4464: FILE: drivers/ide/pci/alim15x3.c:716:
+static int __devinit init_dma_ali15x3(ide_hwif_t *hwif,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#4480: FILE: drivers/ide/pci/alim15x3.c:728:
+	printk(KERN_INFO "    %s: BM-DMA at 0x%04lx-0x%04lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4481: FILE: drivers/ide/pci/alim15x3.c:729:
+	printk(KERN_INFO "    %s: BM-DMA at 0x%04lx-0x%04lx\n",
+			 hwif->name, base, base + 7);

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#4509: FILE: drivers/ide/pci/alim15x3.c:757:
 static const struct ide_port_info ali15x3_chipset __devinitdata = {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#4529: FILE: drivers/ide/pci/alim15x3.c:812:
+		d.mwdma_mask = d.swdma_mask = 0;

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#4610: FILE: drivers/ide/pci/atiixp.c:139:
 static const struct ide_port_info atiixp_pci_info[] __devinitdata = {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4663: FILE: drivers/ide/pci/cmd640.c:694:
+		printk(KERN_ERR "%s: I/O resource 0x%lX-0x%lX not free.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4664: FILE: drivers/ide/pci/cmd640.c:695:
+		printk(KERN_ERR "%s: I/O resource 0x%lX-0x%lX not free.\n",
+				DRV_NAME, base, base + 7);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4669: FILE: drivers/ide/pci/cmd640.c:700:
+		printk(KERN_ERR "%s: I/O resource 0x%lX not free.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4670: FILE: drivers/ide/pci/cmd640.c:701:
+		printk(KERN_ERR "%s: I/O resource 0x%lX not free.\n",
+				DRV_NAME, ctl);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#4784: FILE: drivers/ide/pci/cmd64x.c:373:
+static u8 __devinit cmd64x_cable_detect(ide_hwif_t *hwif)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#4875: FILE: drivers/ide/pci/cmd64x.c:427:
 static const struct ide_port_info cmd64x_chipsets[] __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#5034: FILE: drivers/ide/pci/cs5530.c:245:
 static const struct ide_port_info cs5530_chipset __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#5071: FILE: drivers/ide/pci/cs5535.c:175:
 static const struct ide_port_info cs5535_chipset __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#5095: FILE: drivers/ide/pci/cy82c693.c:385:
 static void __devinit init_iops_cy82c693(ide_hwif_t *hwif)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#5107: FILE: drivers/ide/pci/cy82c693.c:403:
 static const struct ide_port_info cy82c693_chipset __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#5128: FILE: drivers/ide/pci/delkin_cb.c:50:
 static int __devinit

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#5272: FILE: drivers/ide/pci/hpt366.c:1317:
+static int __devinit init_dma_hpt366(ide_hwif_t *hwif,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#5300: FILE: drivers/ide/pci/hpt366.c:1342:
+	printk(KERN_INFO "    %s: BM-DMA at 0x%04lx-0x%04lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5301: FILE: drivers/ide/pci/hpt366.c:1343:
+	printk(KERN_INFO "    %s: BM-DMA at 0x%04lx-0x%04lx\n",
+			 hwif->name, base, base + 7);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#5313: FILE: drivers/ide/pci/hpt366.c:1355:
 static void __devinit hpt374_init(struct pci_dev *dev, struct pci_dev *dev2)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#5361: FILE: drivers/ide/pci/hpt366.c:1451:
 static const struct ide_port_info hpt366_chipsets[] __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#5491: FILE: drivers/ide/pci/it821x.c:429:
+static u8 __devinit it821x_cable_detect(ide_hwif_t *hwif)

WARNING:CONST_STRUCT: struct ide_dma_ops should normally be const
#5499: FILE: drivers/ide/pci/it821x.c:514:
+static struct ide_dma_ops it821x_pass_through_dma_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#5572: FILE: drivers/ide/pci/jmicron.c:28:
+static u8 __devinit jmicron_cable_detect(ide_hwif_t *hwif)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#5600: FILE: drivers/ide/pci/jmicron.c:104:
 static const struct ide_port_info jmicron_chipset __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#5662: FILE: drivers/ide/pci/ns87415.c:272:
 static const struct ide_port_info ns87415_chipset __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#5694: FILE: drivers/ide/pci/opti621.c:334:
 static const struct ide_port_info opti621_chipsets[] __devinitdata = {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#5721: FILE: drivers/ide/pci/pdc202xx_new.c:37:
+#define DBG(fmt, args...) printk("%s: " fmt, __func__, ## args)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#5740: FILE: drivers/ide/pci/pdc202xx_new.c:445:
 static struct pci_dev * __devinit pdc20270_get_dev2(struct pci_dev *dev)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#5773: FILE: drivers/ide/pci/pdc202xx_old.c:118:
+static u8 __devinit pdc2026x_cable_detect(ide_hwif_t *hwif)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#5876: FILE: drivers/ide/pci/pdc202xx_old.c:266:
+static unsigned int __devinit init_chipset_pdc202xx(struct pci_dev *dev,

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#5914: FILE: drivers/ide/pci/pdc202xx_old.c:296:
 static void __devinit pdc202ata4_fixup_irq(struct pci_dev *dev,

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#5985: FILE: drivers/ide/pci/piix.c:286:
 static void __devinit init_hwif_piix(ide_hwif_t *hwif)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#6081: FILE: drivers/ide/pci/sc1200.c:306:
 static const struct ide_port_info sc1200_chipset __devinitdata = {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#6142: FILE: drivers/ide/pci/scc_pata.c:497:
+		printk(KERN_ERR "%s: can't reserve resources\n", name);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#6220: FILE: drivers/ide/pci/scc_pata.c:724:
+      .port_ops^I^I= &scc_port_ops,^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#6221: FILE: drivers/ide/pci/scc_pata.c:725:
+      .dma_ops^I^I= &scc_dma_ops,^I^I^I\$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#6255: FILE: drivers/ide/pci/serverworks.c:315:
+static u8 __devinit svwks_cable_detect(ide_hwif_t *hwif)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#6383: FILE: drivers/ide/pci/sgiioc4.c:253:
+		printk(KERN_ERR "%s(%s) : DMA incomplete\n", __func__,

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#6418: FILE: drivers/ide/pci/sgiioc4.c:329:
 static int __devinit

CHECK:SPACING: No space is necessary after a cast
#6439: FILE: drivers/ide/pci/sgiioc4.c:348:
+		       __func__, hwif->name, (void *) dma_base,

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#6552: FILE: drivers/ide/pci/sgiioc4.c:571:
 static const struct ide_port_info sgiioc4_port_info __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#6563: FILE: drivers/ide/pci/sgiioc4.c:580:
 static int __devinit

CHECK:SPACING: No space is necessary after a cast
#6584: FILE: drivers/ide/pci/sgiioc4.c:616:
+		       __func__, hwif->name, (void *) cmd_phys_base,

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#6671: FILE: drivers/ide/pci/siimage.c:753:
+static u8 __devinit sil_cable_detect(ide_hwif_t *hwif)

WARNING:CONST_STRUCT: struct ide_dma_ops should normally be const
#6740: FILE: drivers/ide/pci/siimage.c:785:
+static struct ide_dma_ops sil_dma_ops = {

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#6758: FILE: drivers/ide/pci/siimage.c:801:
 static const struct ide_port_info siimage_chipsets[] __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#6770: FILE: drivers/ide/pci/siimage.c:816:
 static int __devinit siimage_init_one(struct pci_dev *dev, const struct pci_device_id *id)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6782: FILE: drivers/ide/pci/siimage.c:827:
+			printk(KERN_INFO "siimage: For full SATA support you "

WARNING:SPLIT_STRING: quoted string split across lines
#6783: FILE: drivers/ide/pci/siimage.c:828:
+			printk(KERN_INFO "siimage: For full SATA support you "
+				"should use the libata sata_sil module.\n");

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#6812: FILE: drivers/ide/pci/sis5513.c:517:
+static u8 __devinit sis_cable_detect(ide_hwif_t *hwif)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#6842: FILE: drivers/ide/pci/sis5513.c:559:
 static const struct ide_port_info sis5513_chipset __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#6950: FILE: drivers/ide/pci/sl82c105.c:302:
 static const struct ide_port_info sl82c105_chipset __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#6969: FILE: drivers/ide/pci/sl82c105.c:320:
 static int __devinit sl82c105_init_one(struct pci_dev *dev, const struct pci_device_id *id)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6980: FILE: drivers/ide/pci/sl82c105.c:330:
+		printk(KERN_INFO "W82C105_IDE: Winbond W83C553 bridge "

WARNING:SPLIT_STRING: quoted string split across lines
#6981: FILE: drivers/ide/pci/sl82c105.c:331:
+		printk(KERN_INFO "W82C105_IDE: Winbond W83C553 bridge "
+				 "revision %d, BM-DMA disabled\n", rev);

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#7012: FILE: drivers/ide/pci/slc90e66.c:134:
 static const struct ide_port_info slc90e66_chipset __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#7044: FILE: drivers/ide/pci/tc86c001.c:173:
 static unsigned int __devinit init_chipset_tc86c001(struct pci_dev *dev,

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#7066: FILE: drivers/ide/pci/tc86c001.c:200:
 static const struct ide_port_info tc86c001_chipset __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#7093: FILE: drivers/ide/pci/triflex.c:95:
 static const struct ide_port_info triflex_device __devinitdata = {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#7128: FILE: drivers/ide/pci/trm290.c:257:
+	printk(KERN_INFO "    %s: BM-DMA at 0x%04lx-0x%04lx\n",

WARNING:CONST_STRUCT: struct ide_dma_ops should normally be const
#7171: FILE: drivers/ide/pci/trm290.c:316:
+static struct ide_dma_ops trm290_dma_ops = {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#7173: FILE: drivers/ide/pci/trm290.c:318:
+^I.dma_setup ^I^I= trm290_dma_setup,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#7175: FILE: drivers/ide/pci/trm290.c:320:
+^I.dma_start ^I^I= trm290_dma_start,$

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#7182: FILE: drivers/ide/pci/trm290.c:327:
 static const struct ide_port_info trm290_chipset __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#7212: FILE: drivers/ide/pci/via82cxxx.c:424:
 static const struct ide_port_info via82cxxx_chipset __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#7391: FILE: drivers/ide/ppc/pmac.c:1693:
+static int __devinit pmac_ide_init_dma(ide_hwif_t *hwif,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#7401: FILE: drivers/ide/ppc/pmac.c:1702:
+	if (dev == NULL || pmif->dma_regs == 0)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#7422: FILE: drivers/ide/ppc/pmac.c:1724:
+static int __devinit pmac_ide_init_dma(ide_hwif_t *hwif,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#7474: FILE: drivers/ide/setup-pci.c:151:
+			printk(KERN_ERR "%s: error updating PCICMD on %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7475: FILE: drivers/ide/setup-pci.c:152:
+			printk(KERN_ERR "%s: error updating PCICMD on %s\n",
+					name, pci_name(dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#7519: FILE: drivers/ide/setup-pci.c:223:
+		printk(KERN_ERR "%s: can't reserve resources\n", d->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#7575: FILE: drivers/ide/setup-pci.c:378:
+			printk(KERN_INFO "    %s: MMIO-DMA\n", hwif->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#7577: FILE: drivers/ide/setup-pci.c:380:
+			printk(KERN_INFO "    %s: BM-DMA at 0x%04lx-0x%04lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7578: FILE: drivers/ide/setup-pci.c:381:
+			printk(KERN_INFO "    %s: BM-DMA at 0x%04lx-0x%04lx\n",
+					 hwif->name, base, base + 7);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hwif_s *' should also have an identifier name
#7693: FILE: include/linux/ide.h:392:
+	void	(*port_init_devs)(struct hwif_s *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#7695: FILE: include/linux/ide.h:394:
+	void	(*set_pio_mode)(ide_drive_t *, const u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const u8' should also have an identifier name
#7695: FILE: include/linux/ide.h:394:
+	void	(*set_pio_mode)(ide_drive_t *, const u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#7697: FILE: include/linux/ide.h:396:
+	void	(*set_dma_mode)(ide_drive_t *, const u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const u8' should also have an identifier name
#7697: FILE: include/linux/ide.h:396:
+	void	(*set_dma_mode)(ide_drive_t *, const u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#7699: FILE: include/linux/ide.h:398:
+	void	(*selectproc)(ide_drive_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#7701: FILE: include/linux/ide.h:400:
+	int	(*reset_poll)(ide_drive_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#7703: FILE: include/linux/ide.h:402:
+	void	(*pre_reset)(ide_drive_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#7705: FILE: include/linux/ide.h:404:
+	void	(*resetproc)(ide_drive_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#7707: FILE: include/linux/ide.h:406:
+	void	(*maskproc)(ide_drive_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#7707: FILE: include/linux/ide.h:406:
+	void	(*maskproc)(ide_drive_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#7709: FILE: include/linux/ide.h:408:
+	void	(*quirkproc)(ide_drive_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#7711: FILE: include/linux/ide.h:410:
+	u8	(*mdma_filter)(ide_drive_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#7712: FILE: include/linux/ide.h:411:
+	u8	(*udma_filter)(ide_drive_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hwif_s *' should also have an identifier name
#7714: FILE: include/linux/ide.h:413:
+	u8	(*cable_detect)(struct hwif_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_drive_s *' should also have an identifier name
#7718: FILE: include/linux/ide.h:417:
+	void	(*dma_host_set)(struct ide_drive_s *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#7718: FILE: include/linux/ide.h:417:
+	void	(*dma_host_set)(struct ide_drive_s *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_drive_s *' should also have an identifier name
#7719: FILE: include/linux/ide.h:418:
+	int	(*dma_setup)(struct ide_drive_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_drive_s *' should also have an identifier name
#7720: FILE: include/linux/ide.h:419:
+	void	(*dma_exec_cmd)(struct ide_drive_s *, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#7720: FILE: include/linux/ide.h:419:
+	void	(*dma_exec_cmd)(struct ide_drive_s *, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_drive_s *' should also have an identifier name
#7721: FILE: include/linux/ide.h:420:
+	void	(*dma_start)(struct ide_drive_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_drive_s *' should also have an identifier name
#7722: FILE: include/linux/ide.h:421:
+	int	(*dma_end)(struct ide_drive_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_drive_s *' should also have an identifier name
#7723: FILE: include/linux/ide.h:422:
+	int	(*dma_test_irq)(struct ide_drive_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_drive_s *' should also have an identifier name
#7724: FILE: include/linux/ide.h:423:
+	void	(*dma_lost_irq)(struct ide_drive_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_drive_s *' should also have an identifier name
#7725: FILE: include/linux/ide.h:424:
+	void	(*dma_timeout)(struct ide_drive_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_hwif_t *' should also have an identifier name
#7802: FILE: include/linux/ide.h:1015:
+unsigned long ide_pci_dma_base(ide_hwif_t *, const struct ide_port_info *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct ide_port_info *' should also have an identifier name
#7802: FILE: include/linux/ide.h:1015:
+unsigned long ide_pci_dma_base(ide_hwif_t *, const struct ide_port_info *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_hwif_t *' should also have an identifier name
#7803: FILE: include/linux/ide.h:1016:
+int ide_hwif_setup_dma(ide_hwif_t *, const struct ide_port_info *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct ide_port_info *' should also have an identifier name
#7803: FILE: include/linux/ide.h:1016:
+int ide_hwif_setup_dma(ide_hwif_t *, const struct ide_port_info *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_hwif_t *' should also have an identifier name
#7829: FILE: include/linux/ide.h:1117:
+	int			(*init_dma)(ide_hwif_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct ide_port_info *' should also have an identifier name
#7829: FILE: include/linux/ide.h:1117:
+	int			(*init_dma)(ide_hwif_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_hwif_t *' should also have an identifier name
#7847: FILE: include/linux/ide.h:1171:
+int ide_allocate_dma_engine(ide_hwif_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_hwif_t *' should also have an identifier name
#7848: FILE: include/linux/ide.h:1172:
+void ide_release_dma_engine(ide_hwif_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_hwif_t *' should also have an identifier name
#7849: FILE: include/linux/ide.h:1173:
+void ide_setup_dma(ide_hwif_t *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#7849: FILE: include/linux/ide.h:1173:
+void ide_setup_dma(ide_hwif_t *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#7853: FILE: include/linux/ide.h:1177:
+void ide_dma_exec_cmd(ide_drive_t *, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#7853: FILE: include/linux/ide.h:1177:
+void ide_dma_exec_cmd(ide_drive_t *, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#7856: FILE: include/linux/ide.h:1180:
+int ide_dma_test_irq(ide_drive_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct ide_port_info *' should also have an identifier name
#7882: FILE: include/linux/ide.h:1227:
+int ide_legacy_device_add(const struct ide_port_info *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#7882: FILE: include/linux/ide.h:1227:
+int ide_legacy_device_add(const struct ide_port_info *, unsigned long);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000289981.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 173 warnings, 54 checks, 6980 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000289981.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
