CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#71: FILE: drivers/cdrom/cdrom.c:2787:
+static noinline int mmc_ioctl_cdrom_read_data(struct cdrom_device_info *cdi,
+					void __user *arg,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cgc->buffer"
#150: FILE: drivers/cdrom/cdrom.c:2815:
+	if (cgc->buffer == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#158: FILE: drivers/cdrom/cdrom.c:2823:
+	if (ret && sense.sense_key == 0x05 &&
+		   sense.asc == 0x20 &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#180: FILE: drivers/cdrom/cdrom.c:2845:
+static noinline int mmc_ioctl_cdrom_read_audio(struct cdrom_device_info *cdi,
+					void __user *arg)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#204: FILE: drivers/cdrom/cdrom.c:2869:
+static noinline int mmc_ioctl_cdrom_subchannel(struct cdrom_device_info *cdi,
+					void __user *arg)

WARNING:LINE_SPACING: Missing a blank line after declarations
#209: FILE: drivers/cdrom/cdrom.c:2874:
+	u_char requested, back;
+	IOCTL_IN(arg, struct cdrom_subchnl, q);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'requested == CDROM_MSF'
#211: FILE: drivers/cdrom/cdrom.c:2876:
+	if (!((requested == CDROM_MSF) ||
+	      (requested == CDROM_LBA)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'requested == CDROM_LBA'
#211: FILE: drivers/cdrom/cdrom.c:2876:
+	if (!((requested == CDROM_MSF) ||
+	      (requested == CDROM_LBA)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: drivers/cdrom/cdrom.c:2892:
+static noinline int mmc_ioctl_cdrom_play_msf(struct cdrom_device_info *cdi,
+					void __user *arg,

WARNING:LINE_SPACING: Missing a blank line after declarations
#250: FILE: drivers/cdrom/cdrom.c:2897:
+	struct cdrom_msf msf;
+	cdinfo(CD_DO_IOCTL, "entering CDROMPLAYMSF\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#317: FILE: drivers/cdrom/cdrom.c:2911:
+static noinline int mmc_ioctl_cdrom_play_blk(struct cdrom_device_info *cdi,
+					void __user *arg,

WARNING:LINE_SPACING: Missing a blank line after declarations
#322: FILE: drivers/cdrom/cdrom.c:2916:
+	struct cdrom_blk blk;
+	cdinfo(CD_DO_IOCTL, "entering CDROMPLAYBLK\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#337: FILE: drivers/cdrom/cdrom.c:2930:
+static noinline int mmc_ioctl_cdrom_volume(struct cdrom_device_info *cdi,
+					void __user *arg,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#379: FILE: drivers/cdrom/cdrom.c:2951:
+	/* originally the code depended on buffer[1] to determine
+	   how much data is available for transfer. buffer[1] is

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'ambigious' may be misspelled - perhaps 'ambiguous'?
#380: FILE: drivers/cdrom/cdrom.c:2952:
+	   unfortunately ambigious and the only reliable way seem
 	                 ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#381: FILE: drivers/cdrom/cdrom.c:2953:
+	   to be to simply skip over the block descriptor... */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#390: FILE: drivers/cdrom/cdrom.c:2962:
+		ret = cdrom_mode_sense(cdi, cgc,
+					GPMODE_AUDIO_CTL_PAGE, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#401: FILE: drivers/cdrom/cdrom.c:2969:
+	if ((buffer[offset] & 0x3f) != GPMODE_AUDIO_CTL_PAGE ||
+			buffer[offset + 1] < 14)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#415: FILE: drivers/cdrom/cdrom.c:2973:
+	/* now we have the current volume settings. if it was only
+	   a CDROMVOLREAD, return these values */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#415: FILE: drivers/cdrom/cdrom.c:2973:
+	   a CDROMVOLREAD, return these values */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#417: FILE: drivers/cdrom/cdrom.c:2975:
+		volctrl.channel0 = buffer[offset+9];
 		                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#418: FILE: drivers/cdrom/cdrom.c:2976:
+		volctrl.channel1 = buffer[offset+11];
 		                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#419: FILE: drivers/cdrom/cdrom.c:2977:
+		volctrl.channel2 = buffer[offset+13];
 		                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#420: FILE: drivers/cdrom/cdrom.c:2978:
+		volctrl.channel3 = buffer[offset+15];
 		                                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#466: FILE: drivers/cdrom/cdrom.c:3001:
+static noinline int mmc_ioctl_cdrom_start_stop(struct cdrom_device_info *cdi,
+					struct packet_command *cgc,

WARNING:LINE_SPACING: Missing a blank line after declarations
#470: FILE: drivers/cdrom/cdrom.c:3005:
+	struct cdrom_device_ops *cdo = cdi->ops;
+	cdinfo(CD_DO_IOCTL, "entering CDROMSTART/CDROMSTOP\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#487: FILE: drivers/cdrom/cdrom.c:3014:
+static noinline int mmc_ioctl_cdrom_pause_resume(struct cdrom_device_info *cdi,
+					struct packet_command *cgc,

WARNING:LINE_SPACING: Missing a blank line after declarations
#491: FILE: drivers/cdrom/cdrom.c:3018:
+	struct cdrom_device_ops *cdo = cdi->ops;
+	cdinfo(CD_DO_IOCTL, "entering CDROMPAUSE/CDROMRESUME\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#517: FILE: drivers/cdrom/cdrom.c:3026:
+static noinline int mmc_ioctl_dvd_read_struct(struct cdrom_device_info *cdi,
+						void __user *arg)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#524: FILE: drivers/cdrom/cdrom.c:3033:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#548: FILE: drivers/cdrom/cdrom.c:3057:
+static noinline int mmc_ioctl_dvd_auth(struct cdrom_device_info *cdi,
+					void __user *arg)

WARNING:LINE_SPACING: Missing a blank line after declarations
#552: FILE: drivers/cdrom/cdrom.c:3061:
+	dvd_authinfo ai;
+	if (!CDROM_CAN(CDC_DVD))

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#553: FILE: drivers/cdrom/cdrom.c:3062:
+		return -ENOSYS;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#576: FILE: drivers/cdrom/cdrom.c:3073:
+static noinline int mmc_ioctl_cdrom_next_writable(struct cdrom_device_info *cdi,
+						void __user *arg)

WARNING:LINE_SPACING: Missing a blank line after declarations
#580: FILE: drivers/cdrom/cdrom.c:3077:
+	long next = 0;
+	cdinfo(CD_DO_IOCTL, "entering CDROM_NEXT_WRITABLE\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#606: FILE: drivers/cdrom/cdrom.c:3086:
+static noinline int mmc_ioctl_cdrom_last_written(struct cdrom_device_info *cdi,
+						void __user *arg)

WARNING:LINE_SPACING: Missing a blank line after declarations
#610: FILE: drivers/cdrom/cdrom.c:3090:
+	long last = 0;
+	cdinfo(CD_DO_IOCTL, "entering CDROM_LAST_WRITTEN\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#627: FILE: drivers/cdrom/cdrom.c:3107:
+	/* build a unified command and queue it through
+	   cdo->generic_packet() */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#627: FILE: drivers/cdrom/cdrom.c:3107:
+	   cdo->generic_packet() */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000203438.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 17 warnings, 22 checks, 600 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000203438.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
