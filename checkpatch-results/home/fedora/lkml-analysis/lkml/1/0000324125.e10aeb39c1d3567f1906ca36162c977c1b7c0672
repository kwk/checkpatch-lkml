WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#163: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#168: FILE: drivers/serial/8250_kgdb.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CONST_STRUCT: struct kgdb_io should normally be const
#223: FILE: drivers/serial/8250_kgdb.c:56:
+static struct kgdb_io kgdb8250_io_ops;	/* initialized later */

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:TYPO_SPELLING: 'existance' may be misspelled - perhaps 'existence'?
#313: FILE: drivers/serial/8250_kgdb.c:146:
+	/* Test UART existance. */
 	             ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: braces {} should be used on all arms of this statement
#323: FILE: drivers/serial/8250_kgdb.c:156:
+		if (kgdb8250_baud == 115200) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#327: FILE: drivers/serial/8250_kgdb.c:160:
+		} else

CHECK:SPACING: No space is necessary after a cast
#345: FILE: drivers/serial/8250_kgdb.c:178:
+	(void) kgdb8250_ioread(UART_IIR);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#346: FILE: drivers/serial/8250_kgdb.c:179:
+	(void) kgdb8250_ioread(UART_RX);

CHECK:SPACING: No space is necessary after a cast
#347: FILE: drivers/serial/8250_kgdb.c:180:
+	(void) kgdb8250_ioread(UART_LSR);

CHECK:SPACING: No space is necessary after a cast
#348: FILE: drivers/serial/8250_kgdb.c:181:
+	(void) kgdb8250_ioread(UART_MSR);

WARNING:REPEATED_WORD: Possible repeated word: 'start'
#357: FILE: drivers/serial/8250_kgdb.c:190:
+	 * already a 1 and maybe locked there before we even start start.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#386: FILE: drivers/serial/8250_kgdb.c:219:
+	strncpy(config, str, KGD8250_MAX_CONFIG_STR-1);
 	                                           ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#392: FILE: drivers/serial/8250_kgdb.c:225:
+	if (!strncmp(str, "io", 2)) {
[...]
+	} else if (!strncmp(str, "mmio", 4)) {
[...]
+	} else if (!strncmp(str, "ttyS", 4)) {
[...]
+	} else
[...]

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#403: FILE: drivers/serial/8250_kgdb.c:236:
+		line = simple_strtoul(str, &str, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#411: FILE: drivers/serial/8250_kgdb.c:244:
+			printk(KERN_WARNING "kgdb8250: ttyS%d init delayed, "

WARNING:SPLIT_STRING: quoted string split across lines
#412: FILE: drivers/serial/8250_kgdb.c:245:
+			printk(KERN_WARNING "kgdb8250: ttyS%d init delayed, "
+			       "use io/mmio syntax for early init.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#421: FILE: drivers/serial/8250_kgdb.c:254:
+		kgdb8250_baud = simple_strtoul(str, &str, 10);

CHECK:BRACES: Unbalanced braces around else statement
#429: FILE: drivers/serial/8250_kgdb.c:262:
+	} else

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#437: FILE: drivers/serial/8250_kgdb.c:270:
+		kgdb8250_port.iobase = simple_strtoul(str, &str, 16);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#440: FILE: drivers/serial/8250_kgdb.c:273:
+			(unsigned long)simple_strtoul(str, &str, 16);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#444: FILE: drivers/serial/8250_kgdb.c:277:
+		kgdb8250_port.regshift = simple_strtoul(str, &str, 10);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#451: FILE: drivers/serial/8250_kgdb.c:284:
+	kgdb8250_baud = simple_strtoul(str, &str, 10);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#459: FILE: drivers/serial/8250_kgdb.c:292:
+	kgdb8250_port.irq = simple_strtoul(str, &str, 10);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#476: FILE: drivers/serial/8250_kgdb.c:309:
+			kgdb8250_port.membase = ioremap(kgdb8250_port.mapbase,
+						8 << kgdb8250_port.regshift);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#488: FILE: drivers/serial/8250_kgdb.c:321:
+		printk(KERN_ERR "kgdb8250: UART initialization failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#544: FILE: drivers/serial/8250_kgdb.c:377:
+		printk(KERN_ERR "kgdb8250: failed to request the IRQ (%d)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#556: FILE: drivers/serial/8250_kgdb.c:389:
+	printk(KERN_CRIT "kgdb: Unable to reserve mandatory hardware "

WARNING:SPLIT_STRING: quoted string split across lines
#557: FILE: drivers/serial/8250_kgdb.c:390:
+	printk(KERN_CRIT "kgdb: Unable to reserve mandatory hardware "
+			 "resources.\n");

CHECK:SPACING: No space is necessary after a cast
#570: FILE: drivers/serial/8250_kgdb.c:403:
+	(void) kgdb8250_ioread(UART_RX);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#605: FILE: drivers/serial/8250_kgdb.c:438:
+		printk(KERN_ERR "%s: config string too long.\n", kp->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#610: FILE: drivers/serial/8250_kgdb.c:443:
+		printk(KERN_ERR "kgd8250: Cannot reconfigure while KGDB is "

WARNING:SPLIT_STRING: quoted string split across lines
#611: FILE: drivers/serial/8250_kgdb.c:444:
+		printk(KERN_ERR "kgd8250: Cannot reconfigure while KGDB is "
+				"connected.\n");

WARNING:CONST_STRUCT: struct kgdb_io should normally be const
#639: FILE: drivers/serial/8250_kgdb.c:472:
+static struct kgdb_io kgdb8250_io_ops = {

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'port' - possible side-effects?
#697: FILE: drivers/serial/serial_core.c:63:
+#define uart_kgdb(port) (port->cons && !strcmp(port->cons->name, "kgdb"))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'port' may be better as '(port)' to avoid precedence issues
#697: FILE: drivers/serial/serial_core.c:63:
+#define uart_kgdb(port) (port->cons && !strcmp(port->cons->name, "kgdb"))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#710: FILE: drivers/serial/serial_core.c:1689:
+		ret += sprintf(buf+ret, " membase 0x%08lX",
 		                  ^

CHECK:SPACING: No space is necessary after a cast
#711: FILE: drivers/serial/serial_core.c:1690:
+					   (unsigned long) port->membase);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000324125.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 22 warnings, 15 checks, 677 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000324125.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
