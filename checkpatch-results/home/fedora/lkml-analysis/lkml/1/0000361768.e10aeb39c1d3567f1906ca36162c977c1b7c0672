WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
allows the in-kernel servers to listen on a TCP port for client connections.

CHECK:CAMELCASE: Avoid CamelCase: <Destroy>
#51: FILE: net/9p/mux.c:94:
+	Destroy = 9,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sock *' should also have an identifier name
#64: FILE: net/9p/mux.c:122:
+	void				(*dr_save)(struct sock *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#64: FILE: net/9p/mux.c:122:
+	void				(*dr_save)(struct sock *, int);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: net/9p/mux.c:862:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: net/9p/mux.c:862:
+ $

CHECK:CAMELCASE: Avoid CamelCase: <Wpending>
#182: FILE: net/9p/mux.c:870:
+	if (test_and_clear_bit(Wpending, &ts->wsched))

CHECK:CAMELCASE: Avoid CamelCase: <Wworksched>
#187: FILE: net/9p/mux.c:875:
+	if (n & POLLOUT && !test_and_set_bit(Wworksched, &ts->wsched)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#192: FILE: net/9p/mux.c:880:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: net/9p/mux.c:880:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#238: FILE: net/9p/mux.c:926:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: net/9p/mux.c:926:
+ $

CHECK:SPACING: No space is necessary after a cast
#299: FILE: net/9p/mux.c:1275:
+	err = ls->sock->ops->bind(ls->sock, (struct sockaddr *) &ls->saddr,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#308: FILE: net/9p/mux.c:1284:
+	err = kernel_setsockopt(ls->sock, SOL_SOCKET, SO_REUSEADDR,
+		(char *) &n, sizeof(n));

CHECK:SPACING: No space is necessary after a cast
#308: FILE: net/9p/mux.c:1284:
+		(char *) &n, sizeof(n));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#353: FILE: net/9p/mux.c:1329:
+	BUG_ON(ls == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ls"
#353: FILE: net/9p/mux.c:1329:
+	BUG_ON(ls == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000361768.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 7 warnings, 7 checks, 360 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000361768.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
