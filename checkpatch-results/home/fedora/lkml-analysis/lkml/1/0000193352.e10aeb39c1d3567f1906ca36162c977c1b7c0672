WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
http://softwarecommunity.intel.com/isn/downloads/intelavx/AES-Instructions-=

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#73: FILE: drivers/crypto/intel-aes_glue.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#100: FILE: drivers/crypto/intel-aes_glue.c:28:
+asmlinkage int intel_aes_set_key(struct aes_ctx *ctx, const u8 *in_key,
+				unsigned int key_len);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#106: FILE: drivers/crypto/intel-aes_glue.c:34:
+	unsigned long addr =3D (unsigned long)crypto_tfm_ctx(tfm);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#106: FILE: drivers/crypto/intel-aes_glue.c:34:
+	unsigned long addr =3D (unsigned long)crypto_tfm_ctx(tfm);
 	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#107: FILE: drivers/crypto/intel-aes_glue.c:35:
+	unsigned long align =3D INTEL_AES_ALIGN;
 	                    ^

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#109: FILE: drivers/crypto/intel-aes_glue.c:37:
+	if (align <=3D crypto_tfm_ctx_alignment())
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#110: FILE: drivers/crypto/intel-aes_glue.c:38:
+		align =3D 1;
 		      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#117: FILE: drivers/crypto/intel-aes_glue.c:45:
+	struct aes_ctx *ctx =3D aes_ctx(tfm);
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#118: FILE: drivers/crypto/intel-aes_glue.c:46:
+	u32 *tfm_flags =3D &tfm->crt_flags;
 	               ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#118: FILE: drivers/crypto/intel-aes_glue.c:46:
+	u32 *tfm_flags =3D &tfm->crt_flags;
 	                   ^

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#122: FILE: drivers/crypto/intel-aes_glue.c:50:
+		*tfm_flags |=3D CRYPTO_TFM_RES_BAD_KEY_LEN;
 		           ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#126: FILE: drivers/crypto/intel-aes_glue.c:54:
+	if (in_interrupt())
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#127: FILE: drivers/crypto/intel-aes_glue.c:55:
+		ret =3D crypto_aes_set_key(tfm, in_key, key_len);
 		    ^

CHECK:BRACES: Unbalanced braces around else statement
#128: FILE: drivers/crypto/intel-aes_glue.c:56:
+	else {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#130: FILE: drivers/crypto/intel-aes_glue.c:58:
+		ret =3D intel_aes_set_key(ctx, in_key, key_len);
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#139: FILE: drivers/crypto/intel-aes_glue.c:67:
+	struct aes_ctx *ctx =3D aes_ctx(tfm);
 	                    ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#141: FILE: drivers/crypto/intel-aes_glue.c:69:
+	if (in_interrupt())
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#143: FILE: drivers/crypto/intel-aes_glue.c:71:
+	else {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#152: FILE: drivers/crypto/intel-aes_glue.c:80:
+	struct aes_ctx *ctx =3D aes_ctx(tfm);
 	                    ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#154: FILE: drivers/crypto/intel-aes_glue.c:82:
+	if (in_interrupt())
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#156: FILE: drivers/crypto/intel-aes_glue.c:84:
+	else {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#163: FILE: drivers/crypto/intel-aes_glue.c:91:
+static struct crypto_alg intel_aes_alg =3D {
                                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#164: FILE: drivers/crypto/intel-aes_glue.c:92:
+	.cra_name		=3D "aes",
 	         		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#165: FILE: drivers/crypto/intel-aes_glue.c:93:
+	.cra_driver_name	=3D "aes-intel",
 	                	^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#166: FILE: drivers/crypto/intel-aes_glue.c:94:
+	.cra_priority		=3D 300,
 	             		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#167: FILE: drivers/crypto/intel-aes_glue.c:95:
+	.cra_flags		=3D CRYPTO_ALG_TYPE_CIPHER,
 	          		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#168: FILE: drivers/crypto/intel-aes_glue.c:96:
+	.cra_blocksize		=3D AES_BLOCK_SIZE,
 	              		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#169: FILE: drivers/crypto/intel-aes_glue.c:97:
+	.cra_ctxsize		=3D sizeof(struct aes_ctx),
 	            		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#170: FILE: drivers/crypto/intel-aes_glue.c:98:
+	.cra_alignmask		=3D INTEL_AES_ALIGN - 1,
 	              		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#171: FILE: drivers/crypto/intel-aes_glue.c:99:
+	.cra_module		=3D THIS_MODULE,
 	           		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#172: FILE: drivers/crypto/intel-aes_glue.c:100:
+	.cra_list		=3D LIST_HEAD_INIT(intel_aes_alg.cra_list),
 	         		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#173: FILE: drivers/crypto/intel-aes_glue.c:101:
+	.cra_u	=3D {
 	      	^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#174: FILE: drivers/crypto/intel-aes_glue.c:102:
+		.cipher	=3D {
 		       	^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#175: FILE: drivers/crypto/intel-aes_glue.c:103:
+			.cia_min_keysize	=3D AES_MIN_KEY_SIZE,
 			                	^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#176: FILE: drivers/crypto/intel-aes_glue.c:104:
+			.cia_max_keysize	=3D AES_MAX_KEY_SIZE,
 			                	^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#177: FILE: drivers/crypto/intel-aes_glue.c:105:
+			.cia_setkey		=3D aes_set_key,
 			           		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#178: FILE: drivers/crypto/intel-aes_glue.c:106:
+			.cia_encrypt		=3D aes_encrypt,
 			            		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#179: FILE: drivers/crypto/intel-aes_glue.c:107:
+			.cia_decrypt		=3D aes_decrypt
 			            		^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#187: FILE: drivers/crypto/intel-aes_glue.c:115:
+		printk(KERN_ERR "Intel AES instructions are not detected.\n");

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#202: FILE: drivers/crypto/intel-aes_glue.c:129:
ions optimized");

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#205: FILE: drivers/crypto/intel-aes_glue.c:132:
+MODULE_ALIAS("aes-intel");
                  ^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#212: FILE: drivers/crypto/Kconfig:202:
+config CRYPTO_DEV_INTEL_AES
+	tristate "Support for Intel AES-NI instructions"
+	depends on X86_64 && !UML
+	select CRYPTO_AES_X86_64
+	select CRYPTO_ALGAPI
+	help
+	  Use Intel AES-NI instructions for AES algorithm.
+
+	  The instructions are used only when the CPU supports them.
+	  Otherwise software encryption is used.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#246: FILE: drivers/crypto/intel-aes_asm.S:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#591: FILE: arch/x86/include/asm/aes.h:1:
+#ifndef ASM_X86_AES_H

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#596: FILE: arch/x86/include/asm/aes.h:6:
+void crypto_aes_encrypt_x86(struct crypto_tfm *tfm, u8 *dst, const u8 *src=
                                                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#598: FILE: arch/x86/include/asm/aes.h:7:
+void crypto_aes_decrypt_x86(struct crypto_tfm *tfm, u8 *dst, const u8 *src=
                                                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#611: FILE: arch/x86/crypto/aes_glue.c:10:
+void crypto_aes_encrypt_x86(struct crypto_tfm *tfm, u8 *dst, const u8 *src=
                                                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#619: FILE: arch/x86/crypto/aes_glue.c:15:
+void crypto_aes_decrypt_x86(struct crypto_tfm *tfm, u8 *dst, const u8 *src=
                                                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#634: FILE: arch/x86/crypto/aes_glue.c:37:
+			.cia_encrypt		=3D crypto_aes_encrypt_x86,
 			            		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#635: FILE: arch/x86/crypto/aes_glue.c:38:
+			.cia_decrypt		=3D crypto_aes_decrypt_x86
 			            		^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000193352.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 35 errors, 7 warnings, 9 checks, 548 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000193352.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
