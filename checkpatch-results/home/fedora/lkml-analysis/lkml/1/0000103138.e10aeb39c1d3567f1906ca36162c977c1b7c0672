WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#31: 
logo code. I had to remove earlysuspend support, because neccessary
                                                         ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#79: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#109: FILE: drivers/video/msm/mddi.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#161: FILE: drivers/video/msm/mddi.c:53:
+	uint32_t reg;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#162: FILE: drivers/video/msm/mddi.c:54:
+	uint32_t status;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#163: FILE: drivers/video/msm/mddi.c:55:
+	uint32_t result;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#167: FILE: drivers/video/msm/mddi.c:59:
+	uint16_t flags;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#168: FILE: drivers/video/msm/mddi.c:60:
+	uint16_t version;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#183: FILE: drivers/video/msm/mddi.c:75:
+	spinlock_t int_lock;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#184: FILE: drivers/video/msm/mddi.c:76:
+	uint32_t int_enable;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#185: FILE: drivers/video/msm/mddi.c:77:
+	uint32_t got_int;

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#188: FILE: drivers/video/msm/mddi.c:80:
+	struct mutex reg_write_lock;

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#189: FILE: drivers/video/msm/mddi.c:81:
+	struct mutex reg_read_lock;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct msm_mddi_client_data *' should also have an identifier name
#195: FILE: drivers/video/msm/mddi.c:87:
+	void (*power_client)(struct msm_mddi_client_data *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#195: FILE: drivers/video/msm/mddi.c:87:
+	void (*power_client)(struct msm_mddi_client_data *, int);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#224: FILE: drivers/video/msm/mddi.c:116:
+	printk(KERN_INFO "mddi: resetting rev ptr\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: drivers/video/msm/mddi.c:129:
+	if ((rev->hdr.length <= MDDI_REV_BUFFER_SIZE - 2) &&
+	   (rev->hdr.length >= sizeof(struct mddi_rev_packet) - 2)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#238: FILE: drivers/video/msm/mddi.c:130:
+	   (rev->hdr.length >= sizeof(struct mddi_rev_packet) - 2)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#255: FILE: drivers/video/msm/mddi.c:147:
+				printk(KERN_INFO "rev: got reg %x = %x without "

WARNING:SPLIT_STRING: quoted string split across lines
#256: FILE: drivers/video/msm/mddi.c:148:
+				printk(KERN_INFO "rev: got reg %x = %x without "
+						 " pending read\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#262: FILE: drivers/video/msm/mddi.c:154:
+				printk(KERN_INFO "rev: got reg %x = %x for "

WARNING:SPLIT_STRING: quoted string split across lines
#263: FILE: drivers/video/msm/mddi.c:155:
+				printk(KERN_INFO "rev: got reg %x = %x for "
+						 "wrong register, expected "

WARNING:SPLIT_STRING: quoted string split across lines
#264: FILE: drivers/video/msm/mddi.c:156:
+						 "wrong register, expected "
+						 "%x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#275: FILE: drivers/video/msm/mddi.c:167:
+			printk(KERN_INFO "rev: unknown reverse packet: "

WARNING:SPLIT_STRING: quoted string split across lines
#276: FILE: drivers/video/msm/mddi.c:168:
+			printk(KERN_INFO "rev: unknown reverse packet: "
+					 "len=%04x type=%04x CURR_REV_PTR=%x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#281: FILE: drivers/video/msm/mddi.c:173:
+					printk(KERN_INFO "\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#282: FILE: drivers/video/msm/mddi.c:174:
+				printk(KERN_INFO " %02x", rev->raw[i]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#284: FILE: drivers/video/msm/mddi.c:176:
+			printk(KERN_INFO "\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#288: FILE: drivers/video/msm/mddi.c:180:
+		printk(KERN_INFO "bad rev length, %d, CURR_REV_PTR %x\n",

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#299: FILE: drivers/video/msm/mddi.c:191:
+	uint32_t rev_data_count;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#300: FILE: drivers/video/msm/mddi.c:192:
+	uint32_t rev_crc_err_count;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#304: FILE: drivers/video/msm/mddi.c:196:
+	uint16_t length;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#313: FILE: drivers/video/msm/mddi.c:205:
+		printk(KERN_INFO "rev_data_count %d\n", rev_data_count);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#316: FILE: drivers/video/msm/mddi.c:208:
+		printk(KERN_INFO "rev_crc_err_count %d, INT %x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#320: FILE: drivers/video/msm/mddi.c:212:
+			printk(KERN_INFO "rev: got crc error without pending "

WARNING:SPLIT_STRING: quoted string split across lines
#321: FILE: drivers/video/msm/mddi.c:213:
+			printk(KERN_INFO "rev: got crc error without pending "
+			       "read\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#346: FILE: drivers/video/msm/mddi.c:238:
+		printk(KERN_INFO "mddi: rev data length greater than buffer"

WARNING:SPLIT_STRING: quoted string split across lines
#347: FILE: drivers/video/msm/mddi.c:239:
+		printk(KERN_INFO "mddi: rev data length greater than buffer"
+			"size\n");

WARNING:MISSING_SPACE: break quoted strings at a space character
#347: FILE: drivers/video/msm/mddi.c:239:
+		printk(KERN_INFO "mddi: rev data length greater than buffer"
+			"size\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#355: FILE: drivers/video/msm/mddi.c:247:
+		size_t rem = MDDI_REV_BUFFER_SIZE - prev_offset;
+		memcpy(&tmprev.raw[0], mddi->rev_data + prev_offset, rem);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#373: FILE: drivers/video/msm/mddi.c:265:
+	uint32_t active, status;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#415: FILE: drivers/video/msm/mddi.c:307:
+					uint32_t intmask, int timeout)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#430: FILE: drivers/video/msm/mddi.c:322:
+	if (mddi_wait_interrupt_timeout(mddi, intmask, HZ/10) == 0)
 	                                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#431: FILE: drivers/video/msm/mddi.c:323:
+		printk(KERN_INFO KERN_ERR "mddi_wait_interrupt %d, timeout "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mddi_wait_interrupt', this function's name, in a string
#431: FILE: drivers/video/msm/mddi.c:323:
+		printk(KERN_INFO KERN_ERR "mddi_wait_interrupt %d, timeout "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#432: FILE: drivers/video/msm/mddi.c:324:
+		printk(KERN_INFO KERN_ERR "mddi_wait_interrupt %d, timeout "
+		       "waiting for %x, INT = %x, STAT = %x gotint = %x\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#455: FILE: drivers/video/msm/mddi.c:347:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#478: FILE: drivers/video/msm/mddi.c:370:
+		 * turning on the rest of the PAD */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#486: FILE: drivers/video/msm/mddi.c:378:
+
+

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#558: FILE: drivers/video/msm/mddi.c:450:
+			uint32_t stat;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#563: FILE: drivers/video/msm/mddi.c:455:
+			printk(KERN_INFO "mddi cmd send rtd: int %x, stat %x, "

WARNING:SPLIT_STRING: quoted string split across lines
#564: FILE: drivers/video/msm/mddi.c:456:
+			printk(KERN_INFO "mddi cmd send rtd: int %x, stat %x, "
+					"rtd val %x\n", mddi_readl(INT), stat,

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#568: FILE: drivers/video/msm/mddi.c:460:
+			msleep(1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#578: FILE: drivers/video/msm/mddi.c:470:
+		printk(KERN_INFO KERN_ERR "mddi_init, timeout waiting for "

WARNING:SPLIT_STRING: quoted string split across lines
#579: FILE: drivers/video/msm/mddi.c:471:
+		printk(KERN_INFO KERN_ERR "mddi_init, timeout waiting for "
+				"caps\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#588: FILE: drivers/video/msm/mddi.c:480:
+	int ret = -1, retry = 3;
+	mutex_lock(&mddi->reg_read_lock);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#602: FILE: drivers/video/msm/mddi.c:494:
+				printk(KERN_INFO "mddi status: crc_error "

WARNING:SPLIT_STRING: quoted string split across lines
#603: FILE: drivers/video/msm/mddi.c:495:
+				printk(KERN_INFO "mddi status: crc_error "
+					"count: %d\n",

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#608: FILE: drivers/video/msm/mddi.c:500:
+			break;
+		} else

CHECK:BRACES: Unbalanced braces around else statement
#608: FILE: drivers/video/msm/mddi.c:500:
+		} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#609: FILE: drivers/video/msm/mddi.c:501:
+			printk(KERN_INFO "mddi status: failed to get client "

WARNING:SPLIT_STRING: quoted string split across lines
#610: FILE: drivers/video/msm/mddi.c:502:
+			printk(KERN_INFO "mddi status: failed to get client "
+				"status\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#621: FILE: drivers/video/msm/mddi.c:513:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ll->u.r
#634: FILE: drivers/video/msm/mddi.c:526:
+	ra = &(ll->u.r);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#665: FILE: drivers/video/msm/mddi.c:557:
+	unsigned s;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ll->u.r
#673: FILE: drivers/video/msm/mddi.c:565:
+	ra = &(ll->u.r);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#704: FILE: drivers/video/msm/mddi.c:596:
+		if (wait_for_completion_timeout(&ri.done, HZ/10) == 0 &&
 		                                            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#706: FILE: drivers/video/msm/mddi.c:598:
+			printk(KERN_INFO "mddi_remote_read(%x) timeout "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mddi_remote_read', this function's name, in a string
#706: FILE: drivers/video/msm/mddi.c:598:
+			printk(KERN_INFO "mddi_remote_read(%x) timeout "

WARNING:SPLIT_STRING: quoted string split across lines
#707: FILE: drivers/video/msm/mddi.c:599:
+			printk(KERN_INFO "mddi_remote_read(%x) timeout "
+					 "(%d %d %d)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#721: FILE: drivers/video/msm/mddi.c:613:
+		printk(KERN_INFO "mddi_remote_read: failed, sent "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mddi_remote_read', this function's name, in a string
#721: FILE: drivers/video/msm/mddi.c:613:
+		printk(KERN_INFO "mddi_remote_read: failed, sent "

WARNING:SPLIT_STRING: quoted string split across lines
#722: FILE: drivers/video/msm/mddi.c:614:
+		printk(KERN_INFO "mddi_remote_read: failed, sent "
+		       "MDDI_CMD_SEND_RTD: int %x, stat %x, rtd val %x "

WARNING:SPLIT_STRING: quoted string split across lines
#723: FILE: drivers/video/msm/mddi.c:615:
+		       "MDDI_CMD_SEND_RTD: int %x, stat %x, rtd val %x "
+		       "curr_rev_ptr %x\n", mddi_readl(INT), mddi_readl(STAT),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#745: FILE: drivers/video/msm/mddi.c:637:
+		printk(KERN_INFO "mddi: failed to get clock\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#790: FILE: drivers/video/msm/mddi.c:682:
+		printk(KERN_ERR "mddi: no associated mem resource!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#795: FILE: drivers/video/msm/mddi.c:687:
+		printk(KERN_ERR "mddi: failed to remap base!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#801: FILE: drivers/video/msm/mddi.c:693:
+		printk(KERN_ERR "mddi: no associated irq resource!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#806: FILE: drivers/video/msm/mddi.c:698:
+	printk(KERN_INFO "mddi: init() base=0x%p irq=%d\n", mddi->base,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#817: FILE: drivers/video/msm/mddi.c:709:
+		printk(KERN_ERR "mddi: failed to setup clock!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#823: FILE: drivers/video/msm/mddi.c:715:
+		printk(KERN_ERR "mddi: failed to setup rev data!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#832: FILE: drivers/video/msm/mddi.c:724:
+		printk(KERN_ERR "mddi: failed to request enable irq!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#846: FILE: drivers/video/msm/mddi.c:738:
+		printk(KERN_ERR "mddi: unsupported version 0x%x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#854: FILE: drivers/video/msm/mddi.c:746:
+		printk(KERN_INFO "mddi: no client found\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#857: FILE: drivers/video/msm/mddi.c:749:
+		printk(KERN_INFO "mddi powerdown: stat %x\n", mddi_readl(STAT));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#859: FILE: drivers/video/msm/mddi.c:751:
+		printk(KERN_INFO "mddi powerdown: stat %x\n", mddi_readl(STAT));

CHECK:CAMELCASE: Avoid CamelCase: <Mfr_Name>
#864: FILE: drivers/video/msm/mddi.c:756:
+	if (mddi->caps.Mfr_Name == 0 && mddi->caps.Product_Code == 0)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Product_Code>
#864: FILE: drivers/video/msm/mddi.c:756:
+	if (mddi->caps.Mfr_Name == 0 && mddi->caps.Product_Code == 0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#884: FILE: drivers/video/msm/mddi.c:776:
+	printk(KERN_INFO "mddi: registering panel %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#885: FILE: drivers/video/msm/mddi.c:777:
+	printk(KERN_INFO "mddi: registering panel %s\n",
+		mddi->client_pdev.name);

CHECK:BRACES: braces {} should be used on all arms of this statement
#894: FILE: drivers/video/msm/mddi.c:786:
+	if (pdev->id == 0)
[...]
+	else if (pdev->id == 1)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#898: FILE: drivers/video/msm/mddi.c:790:
+	else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#899: FILE: drivers/video/msm/mddi.c:791:
+		printk(KERN_ERR "mddi: can not determine interface %d!\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#906: FILE: drivers/video/msm/mddi.c:798:
+	printk(KERN_INFO "mddi: publish: %s\n", mddi->client_name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#921: FILE: drivers/video/msm/mddi.c:813:
+	printk(KERN_INFO "mddi: mddi_init() failed (%d)\n", ret);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#925: FILE: drivers/video/msm/mddi.c:817:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#943: FILE: drivers/video/msm/mddi_client_dummy.c:1:
+/* drivers/video/msm_fb/mddi_client_dummy.c

WARNING:LINE_SPACING: Missing a blank line after declarations
#997: FILE: drivers/video/msm/mddi_client_dummy.c:55:
+	int ret;
+	if (!panel)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1022: FILE: drivers/video/msm/mddi_client_dummy.c:80:
+	struct panel_info *panel = platform_get_drvdata(pdev);
+	kfree(panel);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1046: FILE: drivers/video/msm/mddi_client_nt35399.c:1:
+/* drivers/video/msm_fb/mddi_client_nt35399.c

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1109: FILE: drivers/video/msm/mddi_client_nt35399.c:64:
+	if (wait_event_timeout(nt35399_vsync_wait, panel->nt35399_got_int,
+				HZ/2) == 0)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1109: FILE: drivers/video/msm/mddi_client_nt35399.c:64:
+				HZ/2) == 0)
 				  ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1110: FILE: drivers/video/msm/mddi_client_nt35399.c:65:
+		printk(KERN_ERR "timeout waiting for VSYNC\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1128: FILE: drivers/video/msm/mddi_client_nt35399.c:83:
+		printk(KERN_INFO "mddi nt35399 client: non zero return from "

WARNING:SPLIT_STRING: quoted string split across lines
#1129: FILE: drivers/video/msm/mddi_client_nt35399.c:84:
+		printk(KERN_INFO "mddi nt35399 client: non zero return from "
+			"uninit\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1209: FILE: drivers/video/msm/mddi_client_nt35399.c:164:
+	ret = irq = gpio_to_irq(gpio);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1218: FILE: drivers/video/msm/mddi_client_nt35399.c:173:
+	printk(KERN_INFO "vsync on gpio %d now %d\n",

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*panel)...) over kzalloc(sizeof(struct panel_info)...)
#1240: FILE: drivers/video/msm/mddi_client_nt35399.c:195:
+	struct panel_info *panel = kzalloc(sizeof(struct panel_info),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1243: FILE: drivers/video/msm/mddi_client_nt35399.c:198:
+	printk(KERN_DEBUG "%s: enter.\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1243: FILE: drivers/video/msm/mddi_client_nt35399.c:198:
+	printk(KERN_DEBUG "%s: enter.\n", __func__);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1307: FILE: drivers/video/msm/mddi_client_toshiba.c:1:
+/* drivers/video/msm_fb/mddi_client_toshiba.c

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1331: FILE: drivers/video/msm/mddi_client_toshiba.c:25:
+
+

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1333: FILE: drivers/video/msm/mddi_client_toshiba.c:27:
+#define CMN         (LCD_CONTROL_BLOCK_BASE|0x10)
                                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1334: FILE: drivers/video/msm/mddi_client_toshiba.c:28:
+#define INTFLG      (LCD_CONTROL_BLOCK_BASE|0x18)
                                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1335: FILE: drivers/video/msm/mddi_client_toshiba.c:29:
+#define HCYCLE      (LCD_CONTROL_BLOCK_BASE|0x34)
                                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1336: FILE: drivers/video/msm/mddi_client_toshiba.c:30:
+#define HDE_START   (LCD_CONTROL_BLOCK_BASE|0x3C)
                                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1337: FILE: drivers/video/msm/mddi_client_toshiba.c:31:
+#define VPOS        (LCD_CONTROL_BLOCK_BASE|0xC0)
                                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1338: FILE: drivers/video/msm/mddi_client_toshiba.c:32:
+#define MPLFBUF     (LCD_CONTROL_BLOCK_BASE|0x20)
                                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1339: FILE: drivers/video/msm/mddi_client_toshiba.c:33:
+#define WAKEUP      (LCD_CONTROL_BLOCK_BASE|0x54)
                                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1340: FILE: drivers/video/msm/mddi_client_toshiba.c:34:
+#define WSYN_DLY    (LCD_CONTROL_BLOCK_BASE|0x58)
                                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1341: FILE: drivers/video/msm/mddi_client_toshiba.c:35:
+#define REGENB      (LCD_CONTROL_BLOCK_BASE|0x5C)
                                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1354: FILE: drivers/video/msm/mddi_client_toshiba.c:48:
+#define INTMASK_VWAKEOUT (1U << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#1355: FILE: drivers/video/msm/mddi_client_toshiba.c:49:
+#define INTMASK_VWAKEOUT_ACTIVE_LOW (1U << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1357: FILE: drivers/video/msm/mddi_client_toshiba.c:51:
+#define GPIOSEL_VWAKEINT (1U << 0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1369: FILE: drivers/video/msm/mddi_client_toshiba.c:63:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1404: FILE: drivers/video/msm/mddi_client_toshiba.c:98:
+	if (wait_event_timeout(toshiba_vsync_wait, panel->toshiba_got_int,
+				HZ/2) == 0)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1404: FILE: drivers/video/msm/mddi_client_toshiba.c:98:
+				HZ/2) == 0)
 				  ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1405: FILE: drivers/video/msm/mddi_client_toshiba.c:99:
+		printk(KERN_ERR "timeout waiting for VSYNC\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1422: FILE: drivers/video/msm/mddi_client_toshiba.c:116:
+		printk(KERN_INFO "mddi toshiba client: non zero return from "

WARNING:SPLIT_STRING: quoted string split across lines
#1423: FILE: drivers/video/msm/mddi_client_toshiba.c:117:
+		printk(KERN_INFO "mddi toshiba client: non zero return from "
+			"uninit\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1501: FILE: drivers/video/msm/mddi_client_toshiba.c:195:
+	ret = irq = gpio_to_irq(gpio);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1509: FILE: drivers/video/msm/mddi_client_toshiba.c:203:
+	printk(KERN_INFO "vsync on gpio %d now %d\n",

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1596: FILE: drivers/video/msm/mddi_hw.h:1:
+/* drivers/video/msm_fb/mddi_hw.h

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1682: FILE: drivers/video/msm/mddi_hw.h:87:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1696: FILE: drivers/video/msm/mddi_hw.h:101:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1711: FILE: drivers/video/msm/mddi_hw.h:116:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1721: FILE: drivers/video/msm/mddi_hw.h:126:
+ * significantly increasing latency of waiting for next subframe */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1726: FILE: drivers/video/msm/mddi_hw.h:131:
+
+

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1727: FILE: drivers/video/msm/mddi_hw.h:132:
+struct __attribute__((packed)) mddi_rev_packet {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1728: FILE: drivers/video/msm/mddi_hw.h:133:
+	uint16_t length;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1729: FILE: drivers/video/msm/mddi_hw.h:134:
+	uint16_t type;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1730: FILE: drivers/video/msm/mddi_hw.h:135:
+	uint16_t client_id;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1733: FILE: drivers/video/msm/mddi_hw.h:138:
+struct __attribute__((packed)) mddi_client_status {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1734: FILE: drivers/video/msm/mddi_hw.h:139:
+	uint16_t length;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1735: FILE: drivers/video/msm/mddi_hw.h:140:
+	uint16_t type;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1736: FILE: drivers/video/msm/mddi_hw.h:141:
+	uint16_t client_id;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1737: FILE: drivers/video/msm/mddi_hw.h:142:
+	uint16_t reverse_link_request;  /* bytes needed in rev encap message */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1738: FILE: drivers/video/msm/mddi_hw.h:143:
+	uint8_t  crc_error_count;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1739: FILE: drivers/video/msm/mddi_hw.h:144:
+	uint8_t  capability_change;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1740: FILE: drivers/video/msm/mddi_hw.h:145:
+	uint16_t graphics_busy_flags;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1741: FILE: drivers/video/msm/mddi_hw.h:146:
+	uint16_t crc16;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1744: FILE: drivers/video/msm/mddi_hw.h:149:
+struct __attribute__((packed)) mddi_client_caps {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1745: FILE: drivers/video/msm/mddi_hw.h:150:
+	uint16_t length; /* length, exclusive of this field */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1746: FILE: drivers/video/msm/mddi_hw.h:151:
+	uint16_t type; /* 66 */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1747: FILE: drivers/video/msm/mddi_hw.h:152:
+	uint16_t client_id;

CHECK:CAMELCASE: Avoid CamelCase: <Protocol_Version>
#1749: FILE: drivers/video/msm/mddi_hw.h:154:
+	uint16_t Protocol_Version;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1749: FILE: drivers/video/msm/mddi_hw.h:154:
+	uint16_t Protocol_Version;

CHECK:CAMELCASE: Avoid CamelCase: <Minimum_Protocol_Version>
#1750: FILE: drivers/video/msm/mddi_hw.h:155:
+	uint16_t Minimum_Protocol_Version;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1750: FILE: drivers/video/msm/mddi_hw.h:155:
+	uint16_t Minimum_Protocol_Version;

CHECK:CAMELCASE: Avoid CamelCase: <Data_Rate_Capability>
#1751: FILE: drivers/video/msm/mddi_hw.h:156:
+	uint16_t Data_Rate_Capability;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1751: FILE: drivers/video/msm/mddi_hw.h:156:
+	uint16_t Data_Rate_Capability;

CHECK:CAMELCASE: Avoid CamelCase: <Interface_Type_Capability>
#1752: FILE: drivers/video/msm/mddi_hw.h:157:
+	uint8_t  Interface_Type_Capability;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1752: FILE: drivers/video/msm/mddi_hw.h:157:
+	uint8_t  Interface_Type_Capability;

CHECK:CAMELCASE: Avoid CamelCase: <Number_of_Alt_Displays>
#1753: FILE: drivers/video/msm/mddi_hw.h:158:
+	uint8_t  Number_of_Alt_Displays;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1753: FILE: drivers/video/msm/mddi_hw.h:158:
+	uint8_t  Number_of_Alt_Displays;

CHECK:CAMELCASE: Avoid CamelCase: <PostCal_Data_Rate>
#1754: FILE: drivers/video/msm/mddi_hw.h:159:
+	uint16_t PostCal_Data_Rate;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1754: FILE: drivers/video/msm/mddi_hw.h:159:
+	uint16_t PostCal_Data_Rate;

CHECK:CAMELCASE: Avoid CamelCase: <Bitmap_Width>
#1755: FILE: drivers/video/msm/mddi_hw.h:160:
+	uint16_t Bitmap_Width;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1755: FILE: drivers/video/msm/mddi_hw.h:160:
+	uint16_t Bitmap_Width;

CHECK:CAMELCASE: Avoid CamelCase: <Bitmap_Height>
#1756: FILE: drivers/video/msm/mddi_hw.h:161:
+	uint16_t Bitmap_Height;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1756: FILE: drivers/video/msm/mddi_hw.h:161:
+	uint16_t Bitmap_Height;

CHECK:CAMELCASE: Avoid CamelCase: <Display_Window_Width>
#1757: FILE: drivers/video/msm/mddi_hw.h:162:
+	uint16_t Display_Window_Width;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1757: FILE: drivers/video/msm/mddi_hw.h:162:
+	uint16_t Display_Window_Width;

CHECK:CAMELCASE: Avoid CamelCase: <Display_Window_Height>
#1758: FILE: drivers/video/msm/mddi_hw.h:163:
+	uint16_t Display_Window_Height;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1758: FILE: drivers/video/msm/mddi_hw.h:163:
+	uint16_t Display_Window_Height;

CHECK:CAMELCASE: Avoid CamelCase: <Color_Map_Size>
#1759: FILE: drivers/video/msm/mddi_hw.h:164:
+	uint32_t Color_Map_Size;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1759: FILE: drivers/video/msm/mddi_hw.h:164:
+	uint32_t Color_Map_Size;

CHECK:CAMELCASE: Avoid CamelCase: <Color_Map_RGB_Width>
#1760: FILE: drivers/video/msm/mddi_hw.h:165:
+	uint16_t Color_Map_RGB_Width;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1760: FILE: drivers/video/msm/mddi_hw.h:165:
+	uint16_t Color_Map_RGB_Width;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1761: FILE: drivers/video/msm/mddi_hw.h:166:
+	uint16_t RGB_Capability;

CHECK:CAMELCASE: Avoid CamelCase: <Monochrome_Capability>
#1762: FILE: drivers/video/msm/mddi_hw.h:167:
+	uint8_t  Monochrome_Capability;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1762: FILE: drivers/video/msm/mddi_hw.h:167:
+	uint8_t  Monochrome_Capability;

CHECK:CAMELCASE: Avoid CamelCase: <Reserved_1>
#1763: FILE: drivers/video/msm/mddi_hw.h:168:
+	uint8_t  Reserved_1;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1763: FILE: drivers/video/msm/mddi_hw.h:168:
+	uint8_t  Reserved_1;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1764: FILE: drivers/video/msm/mddi_hw.h:169:
+	uint16_t Y_Cb_Cr_Capability;

CHECK:CAMELCASE: Avoid CamelCase: <Bayer_Capability>
#1765: FILE: drivers/video/msm/mddi_hw.h:170:
+	uint16_t Bayer_Capability;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1765: FILE: drivers/video/msm/mddi_hw.h:170:
+	uint16_t Bayer_Capability;

CHECK:CAMELCASE: Avoid CamelCase: <Alpha_Cursor_Image_Planes>
#1766: FILE: drivers/video/msm/mddi_hw.h:171:
+	uint16_t Alpha_Cursor_Image_Planes;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1766: FILE: drivers/video/msm/mddi_hw.h:171:
+	uint16_t Alpha_Cursor_Image_Planes;

CHECK:CAMELCASE: Avoid CamelCase: <Client_Feature_Capability_Indicators>
#1767: FILE: drivers/video/msm/mddi_hw.h:172:
+	uint32_t Client_Feature_Capability_Indicators;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1767: FILE: drivers/video/msm/mddi_hw.h:172:
+	uint32_t Client_Feature_Capability_Indicators;

CHECK:CAMELCASE: Avoid CamelCase: <Maximum_Video_Frame_Rate_Capability>
#1768: FILE: drivers/video/msm/mddi_hw.h:173:
+	uint8_t  Maximum_Video_Frame_Rate_Capability;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1768: FILE: drivers/video/msm/mddi_hw.h:173:
+	uint8_t  Maximum_Video_Frame_Rate_Capability;

CHECK:CAMELCASE: Avoid CamelCase: <Minimum_Video_Frame_Rate_Capability>
#1769: FILE: drivers/video/msm/mddi_hw.h:174:
+	uint8_t  Minimum_Video_Frame_Rate_Capability;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1769: FILE: drivers/video/msm/mddi_hw.h:174:
+	uint8_t  Minimum_Video_Frame_Rate_Capability;

CHECK:CAMELCASE: Avoid CamelCase: <Minimum_Sub_frame_Rate>
#1770: FILE: drivers/video/msm/mddi_hw.h:175:
+	uint16_t Minimum_Sub_frame_Rate;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1770: FILE: drivers/video/msm/mddi_hw.h:175:
+	uint16_t Minimum_Sub_frame_Rate;

CHECK:CAMELCASE: Avoid CamelCase: <Audio_Buffer_Depth>
#1771: FILE: drivers/video/msm/mddi_hw.h:176:
+	uint16_t Audio_Buffer_Depth;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1771: FILE: drivers/video/msm/mddi_hw.h:176:
+	uint16_t Audio_Buffer_Depth;

CHECK:CAMELCASE: Avoid CamelCase: <Audio_Channel_Capability>
#1772: FILE: drivers/video/msm/mddi_hw.h:177:
+	uint16_t Audio_Channel_Capability;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1772: FILE: drivers/video/msm/mddi_hw.h:177:
+	uint16_t Audio_Channel_Capability;

CHECK:CAMELCASE: Avoid CamelCase: <Audio_Sample_Rate_Capability>
#1773: FILE: drivers/video/msm/mddi_hw.h:178:
+	uint16_t Audio_Sample_Rate_Capability;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1773: FILE: drivers/video/msm/mddi_hw.h:178:
+	uint16_t Audio_Sample_Rate_Capability;

CHECK:CAMELCASE: Avoid CamelCase: <Audio_Sample_Resolution>
#1774: FILE: drivers/video/msm/mddi_hw.h:179:
+	uint8_t  Audio_Sample_Resolution;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1774: FILE: drivers/video/msm/mddi_hw.h:179:
+	uint8_t  Audio_Sample_Resolution;

CHECK:CAMELCASE: Avoid CamelCase: <Mic_Audio_Sample_Resolution>
#1775: FILE: drivers/video/msm/mddi_hw.h:180:
+	uint8_t  Mic_Audio_Sample_Resolution;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1775: FILE: drivers/video/msm/mddi_hw.h:180:
+	uint8_t  Mic_Audio_Sample_Resolution;

CHECK:CAMELCASE: Avoid CamelCase: <Mic_Sample_Rate_Capability>
#1776: FILE: drivers/video/msm/mddi_hw.h:181:
+	uint16_t Mic_Sample_Rate_Capability;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1776: FILE: drivers/video/msm/mddi_hw.h:181:
+	uint16_t Mic_Sample_Rate_Capability;

CHECK:CAMELCASE: Avoid CamelCase: <Keyboard_Data_Format>
#1777: FILE: drivers/video/msm/mddi_hw.h:182:
+	uint8_t  Keyboard_Data_Format;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1777: FILE: drivers/video/msm/mddi_hw.h:182:
+	uint8_t  Keyboard_Data_Format;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1778: FILE: drivers/video/msm/mddi_hw.h:183:
+	uint8_t  pointing_device_data_format;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1779: FILE: drivers/video/msm/mddi_hw.h:184:
+	uint16_t content_protection_type;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1780: FILE: drivers/video/msm/mddi_hw.h:185:
+	uint16_t Mfr_Name;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1781: FILE: drivers/video/msm/mddi_hw.h:186:
+	uint16_t Product_Code;

CHECK:CAMELCASE: Avoid CamelCase: <Reserved_3>
#1782: FILE: drivers/video/msm/mddi_hw.h:187:
+	uint16_t Reserved_3;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1782: FILE: drivers/video/msm/mddi_hw.h:187:
+	uint16_t Reserved_3;

CHECK:CAMELCASE: Avoid CamelCase: <Serial_Number>
#1783: FILE: drivers/video/msm/mddi_hw.h:188:
+	uint32_t Serial_Number;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1783: FILE: drivers/video/msm/mddi_hw.h:188:
+	uint32_t Serial_Number;

CHECK:CAMELCASE: Avoid CamelCase: <Week_of_Manufacture>
#1784: FILE: drivers/video/msm/mddi_hw.h:189:
+	uint8_t  Week_of_Manufacture;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1784: FILE: drivers/video/msm/mddi_hw.h:189:
+	uint8_t  Week_of_Manufacture;

CHECK:CAMELCASE: Avoid CamelCase: <Year_of_Manufacture>
#1785: FILE: drivers/video/msm/mddi_hw.h:190:
+	uint8_t  Year_of_Manufacture;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1785: FILE: drivers/video/msm/mddi_hw.h:190:
+	uint8_t  Year_of_Manufacture;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1787: FILE: drivers/video/msm/mddi_hw.h:192:
+	uint16_t crc16;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1790: FILE: drivers/video/msm/mddi_hw.h:195:
+
+

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1791: FILE: drivers/video/msm/mddi_hw.h:196:
+struct __attribute__((packed)) mddi_video_stream {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1792: FILE: drivers/video/msm/mddi_hw.h:197:
+	uint16_t length;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1793: FILE: drivers/video/msm/mddi_hw.h:198:
+	uint16_t type; /* 16 */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1794: FILE: drivers/video/msm/mddi_hw.h:199:
+	uint16_t client_id; /* 0 */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1796: FILE: drivers/video/msm/mddi_hw.h:201:
+	uint16_t video_data_format_descriptor;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1806: FILE: drivers/video/msm/mddi_hw.h:211:
+	uint16_t pixel_data_attributes;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1831: FILE: drivers/video/msm/mddi_hw.h:236:
+	uint16_t x_left_edge;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1832: FILE: drivers/video/msm/mddi_hw.h:237:
+	uint16_t y_top_edge;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1835: FILE: drivers/video/msm/mddi_hw.h:240:
+	uint16_t x_right_edge;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1836: FILE: drivers/video/msm/mddi_hw.h:241:
+	uint16_t y_bottom_edge;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1839: FILE: drivers/video/msm/mddi_hw.h:244:
+	uint16_t x_start;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1840: FILE: drivers/video/msm/mddi_hw.h:245:
+	uint16_t y_start;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1843: FILE: drivers/video/msm/mddi_hw.h:248:
+	uint16_t pixel_count;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1846: FILE: drivers/video/msm/mddi_hw.h:251:
+	uint16_t parameter_CRC;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1849: FILE: drivers/video/msm/mddi_hw.h:254:
+	uint16_t reserved;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1858: FILE: drivers/video/msm/mddi_hw.h:263:
+struct __attribute__((packed)) mddi_register_access {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1859: FILE: drivers/video/msm/mddi_hw.h:264:
+	uint16_t length;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1860: FILE: drivers/video/msm/mddi_hw.h:265:
+	uint16_t type; /* 146 */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1861: FILE: drivers/video/msm/mddi_hw.h:266:
+	uint16_t client_id;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1863: FILE: drivers/video/msm/mddi_hw.h:268:
+	uint16_t read_write_info;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1870: FILE: drivers/video/msm/mddi_hw.h:275:
+	 * Bits[15:14] = 01  this value is reserved for future use. */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1875: FILE: drivers/video/msm/mddi_hw.h:280:
+	uint32_t register_address;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1878: FILE: drivers/video/msm/mddi_hw.h:283:
+	uint16_t crc16;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1880: FILE: drivers/video/msm/mddi_hw.h:285:
+	uint32_t register_data_list;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1884: FILE: drivers/video/msm/mddi_hw.h:289:
+struct __attribute__((packed)) mddi_llentry {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1885: FILE: drivers/video/msm/mddi_hw.h:290:
+	uint16_t flags;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1886: FILE: drivers/video/msm/mddi_hw.h:291:
+	uint16_t header_count;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1887: FILE: drivers/video/msm/mddi_hw.h:292:
+	uint16_t data_count;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1890: FILE: drivers/video/msm/mddi_hw.h:295:
+	uint16_t reserved;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1894: FILE: drivers/video/msm/mddi_hw.h:299:
+		uint32_t _[12];

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1905: FILE: drivers/video/msm/mdp.c:1:
+/* drivers/video/msm_fb/mdp.c

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1944: FILE: drivers/video/msm/mdp.c:40:
+static uint16_t mdp_default_ccs[] = {

CHECK:UNCOMMENTED_DEFINITION: DEFINE_MUTEX definition without comment
#1955: FILE: drivers/video/msm/mdp.c:51:
+DEFINE_MUTEX(mdp_mutex);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1962: FILE: drivers/video/msm/mdp.c:58:
+	BUG_ON(!mask);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1966: FILE: drivers/video/msm/mdp.c:62:
+	 * is already enabled */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1968: FILE: drivers/video/msm/mdp.c:64:
+		printk(KERN_ERR "mdp irq already on already on %x %x\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1980: FILE: drivers/video/msm/mdp.c:76:
+	 * enabled */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1990: FILE: drivers/video/msm/mdp.c:86:
+		printk(KERN_ERR "mdp irq already off %x %x\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1995: FILE: drivers/video/msm/mdp.c:91:
+	 * disabled */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2019: FILE: drivers/video/msm/mdp.c:115:
+	uint32_t status;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2049: FILE: drivers/video/msm/mdp.c:145:
+	uint32_t ret;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2068: FILE: drivers/video/msm/mdp.c:164:
+		printk(KERN_WARNING "timeout waiting for mdp to complete %x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2089: FILE: drivers/video/msm/mdp.c:185:
+		printk(KERN_ERR "mdp: dma failed %d times, somethings wrong!\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2091: FILE: drivers/video/msm/mdp.c:187:
+		BUG();

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2101: FILE: drivers/video/msm/mdp.c:197:
+		     uint32_t width, uint32_t height, uint32_t x, uint32_t y,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2104: FILE: drivers/video/msm/mdp.c:200:
+	uint32_t dma2_cfg;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#2105: FILE: drivers/video/msm/mdp.c:201:
+	uint16_t ld_param = 0; /* 0=PRIM, 1=SECD, 2=EXT */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2108: FILE: drivers/video/msm/mdp.c:204:
+		printk(KERN_ERR "mdp_dma_to_mddi: busy\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mdp_dma_to_mddi', this function's name, in a string
#2108: FILE: drivers/video/msm/mdp.c:204:
+		printk(KERN_ERR "mdp_dma_to_mddi: busy\n");

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2150: FILE: drivers/video/msm/mdp.c:246:
+	     uint32_t width, uint32_t height, uint32_t x, uint32_t y,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!file"
#2175: FILE: drivers/video/msm/mdp.c:271:
+	if (file == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: braces {} should be used on all arms of this statement
#2178: FILE: drivers/video/msm/mdp.c:274:
+	if (MAJOR(file->f_dentry->d_inode->i_rdev) == FB_MAJOR) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2181: FILE: drivers/video/msm/mdp.c:277:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2209: FILE: drivers/video/msm/mdp.c:305:
+		printk(KERN_ERR "mpd_ppp: src img of zero size!\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2217: FILE: drivers/video/msm/mdp.c:313:
+	 * safely call put_img */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2219: FILE: drivers/video/msm/mdp.c:315:
+		printk(KERN_ERR "mpd_ppp: could not retrieve src image from "

WARNING:SPLIT_STRING: quoted string split across lines
#2220: FILE: drivers/video/msm/mdp.c:316:
+		printk(KERN_ERR "mpd_ppp: could not retrieve src image from "
+				"memory\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2225: FILE: drivers/video/msm/mdp.c:321:
+		printk(KERN_ERR "mpd_ppp: could not retrieve dst image from "

WARNING:SPLIT_STRING: quoted string split across lines
#2226: FILE: drivers/video/msm/mdp.c:322:
+		printk(KERN_ERR "mpd_ppp: could not retrieve dst image from "
+				"memory\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#2244: FILE: drivers/video/msm/mdp.c:340:
+		unsigned int remainder = req->dst_rect.h % 16;
+		req->src_rect.w = 16*req->src_rect.w / req->dst_rect.h;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2244: FILE: drivers/video/msm/mdp.c:340:
+		req->src_rect.w = 16*req->src_rect.w / req->dst_rect.h;
 		                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2261: FILE: drivers/video/msm/mdp.c:357:
+		req->src_rect.w = remainder*req->src_rect.w / req->dst_rect.h;
 		                           ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2285: FILE: drivers/video/msm/mdp.c:381:
+void mdp_set_grp_disp(struct mdp_device *mdp_dev, unsigned disp_id)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*mdp)...) over kzalloc(sizeof(struct mdp_info)...)
#2319: FILE: drivers/video/msm/mdp.c:415:
+	mdp = kzalloc(sizeof(struct mdp_info), GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2333: FILE: drivers/video/msm/mdp.c:429:
+		printk(KERN_ERR "msmfb: cannot allocate mdp regs!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2345: FILE: drivers/video/msm/mdp.c:441:
+		printk(KERN_INFO "mdp: failed to get mdp clk");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2395: FILE: drivers/video/msm/mdp.c:491:
+		mdp_writel(mdp, mdp_upscale_table[n].val,
+		       mdp_upscale_table[n].reg);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2410: FILE: drivers/video/msm/mdp.c:506:
+	mdp_dev.release = mdp_class; */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2436: FILE: drivers/video/msm/mdp.c:532:
+		printk(KERN_ERR "Error creating mdp class\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2449: FILE: drivers/video/msm/mdp_csc_table.h:1:
+/* drivers/video/msm_fb/mdp_csc_table.h

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2465: FILE: drivers/video/msm/mdp_csc_table.h:17:
+	uint32_t reg;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2466: FILE: drivers/video/msm/mdp_csc_table.h:18:
+	uint32_t val;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3037: FILE: drivers/video/msm/mdp_hw.h:1:
+/* drivers/video/msm_fb/mdp_hw.h

ERROR:POINTER_LOCATION: "foo* __iomem bar" should be "foo * __iomem bar"
#3059: FILE: drivers/video/msm/mdp_hw.h:23:
+	char* __iomem base;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#3062: FILE: drivers/video/msm/mdp_hw.h:26:
+};
+struct mdp_blit_req;

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'mdp' may be better as '(mdp)' to avoid precedence issues
#3068: FILE: drivers/video/msm/mdp_hw.h:32:
+#define mdp_writel(mdp, value, offset) writel(value, mdp->base + offset)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offset' may be better as '(offset)' to avoid precedence issues
#3068: FILE: drivers/video/msm/mdp_hw.h:32:
+#define mdp_writel(mdp, value, offset) writel(value, mdp->base + offset)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'mdp' may be better as '(mdp)' to avoid precedence issues
#3069: FILE: drivers/video/msm/mdp_hw.h:33:
+#define mdp_readl(mdp, offset) readl(mdp->base + offset)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offset' may be better as '(offset)' to avoid precedence issues
#3069: FILE: drivers/video/msm/mdp_hw.h:33:
+#define mdp_readl(mdp, offset) readl(mdp->base + offset)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3071: FILE: drivers/video/msm/mdp_hw.h:35:
+#define MDP_SYNC_CONFIG_0                ( 0x00000)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3072: FILE: drivers/video/msm/mdp_hw.h:36:
+#define MDP_SYNC_CONFIG_1                ( 0x00004)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3073: FILE: drivers/video/msm/mdp_hw.h:37:
+#define MDP_SYNC_CONFIG_2                ( 0x00008)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3074: FILE: drivers/video/msm/mdp_hw.h:38:
+#define MDP_SYNC_STATUS_0                ( 0x0000c)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3075: FILE: drivers/video/msm/mdp_hw.h:39:
+#define MDP_SYNC_STATUS_1                ( 0x00010)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3076: FILE: drivers/video/msm/mdp_hw.h:40:
+#define MDP_SYNC_STATUS_2                ( 0x00014)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3077: FILE: drivers/video/msm/mdp_hw.h:41:
+#define MDP_SYNC_THRESH_0                ( 0x00018)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3078: FILE: drivers/video/msm/mdp_hw.h:42:
+#define MDP_SYNC_THRESH_1                ( 0x0001c)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3079: FILE: drivers/video/msm/mdp_hw.h:43:
+#define MDP_INTR_ENABLE                  ( 0x00020)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3080: FILE: drivers/video/msm/mdp_hw.h:44:
+#define MDP_INTR_STATUS                  ( 0x00024)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3081: FILE: drivers/video/msm/mdp_hw.h:45:
+#define MDP_INTR_CLEAR                   ( 0x00028)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3082: FILE: drivers/video/msm/mdp_hw.h:46:
+#define MDP_DISPLAY0_START               ( 0x00030)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3083: FILE: drivers/video/msm/mdp_hw.h:47:
+#define MDP_DISPLAY1_START               ( 0x00034)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3084: FILE: drivers/video/msm/mdp_hw.h:48:
+#define MDP_DISPLAY_STATUS               ( 0x00038)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3085: FILE: drivers/video/msm/mdp_hw.h:49:
+#define MDP_EBI2_LCD0                    ( 0x0003c)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3086: FILE: drivers/video/msm/mdp_hw.h:50:
+#define MDP_EBI2_LCD1                    ( 0x00040)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3087: FILE: drivers/video/msm/mdp_hw.h:51:
+#define MDP_DISPLAY0_ADDR                ( 0x00054)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3088: FILE: drivers/video/msm/mdp_hw.h:52:
+#define MDP_DISPLAY1_ADDR                ( 0x00058)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3089: FILE: drivers/video/msm/mdp_hw.h:53:
+#define MDP_EBI2_PORTMAP_MODE            ( 0x0005c)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3090: FILE: drivers/video/msm/mdp_hw.h:54:
+#define MDP_MODE                         ( 0x00060)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3091: FILE: drivers/video/msm/mdp_hw.h:55:
+#define MDP_TV_OUT_STATUS                ( 0x00064)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3092: FILE: drivers/video/msm/mdp_hw.h:56:
+#define MDP_HW_VERSION                   ( 0x00070)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3093: FILE: drivers/video/msm/mdp_hw.h:57:
+#define MDP_SW_RESET                     ( 0x00074)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3094: FILE: drivers/video/msm/mdp_hw.h:58:
+#define MDP_AXI_ERROR_MASTER_STOP        ( 0x00078)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3095: FILE: drivers/video/msm/mdp_hw.h:59:
+#define MDP_SEL_CLK_OR_HCLK_TEST_BUS     ( 0x0007c)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3096: FILE: drivers/video/msm/mdp_hw.h:60:
+#define MDP_PRIMARY_VSYNC_OUT_CTRL       ( 0x00080)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3097: FILE: drivers/video/msm/mdp_hw.h:61:
+#define MDP_SECONDARY_VSYNC_OUT_CTRL     ( 0x00084)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3098: FILE: drivers/video/msm/mdp_hw.h:62:
+#define MDP_EXTERNAL_VSYNC_OUT_CTRL      ( 0x00088)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3099: FILE: drivers/video/msm/mdp_hw.h:63:
+#define MDP_VSYNC_CTRL                   ( 0x0008c)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3100: FILE: drivers/video/msm/mdp_hw.h:64:
+#define MDP_CGC_EN                       ( 0x00100)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3101: FILE: drivers/video/msm/mdp_hw.h:65:
+#define MDP_CMD_STATUS                   ( 0x10008)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3102: FILE: drivers/video/msm/mdp_hw.h:66:
+#define MDP_PROFILE_EN                   ( 0x10010)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3103: FILE: drivers/video/msm/mdp_hw.h:67:
+#define MDP_PROFILE_COUNT                ( 0x10014)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3104: FILE: drivers/video/msm/mdp_hw.h:68:
+#define MDP_DMA_START                    ( 0x10044)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3105: FILE: drivers/video/msm/mdp_hw.h:69:
+#define MDP_FULL_BYPASS_WORD0            ( 0x10100)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3106: FILE: drivers/video/msm/mdp_hw.h:70:
+#define MDP_FULL_BYPASS_WORD1            ( 0x10104)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3107: FILE: drivers/video/msm/mdp_hw.h:71:
+#define MDP_COMMAND_CONFIG               ( 0x10104)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3108: FILE: drivers/video/msm/mdp_hw.h:72:
+#define MDP_FULL_BYPASS_WORD2            ( 0x10108)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3109: FILE: drivers/video/msm/mdp_hw.h:73:
+#define MDP_FULL_BYPASS_WORD3            ( 0x1010c)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3110: FILE: drivers/video/msm/mdp_hw.h:74:
+#define MDP_FULL_BYPASS_WORD4            ( 0x10110)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3111: FILE: drivers/video/msm/mdp_hw.h:75:
+#define MDP_FULL_BYPASS_WORD6            ( 0x10118)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3112: FILE: drivers/video/msm/mdp_hw.h:76:
+#define MDP_FULL_BYPASS_WORD7            ( 0x1011c)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3113: FILE: drivers/video/msm/mdp_hw.h:77:
+#define MDP_FULL_BYPASS_WORD8            ( 0x10120)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3114: FILE: drivers/video/msm/mdp_hw.h:78:
+#define MDP_FULL_BYPASS_WORD9            ( 0x10124)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3115: FILE: drivers/video/msm/mdp_hw.h:79:
+#define MDP_PPP_SOURCE_CONFIG            ( 0x10124)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3116: FILE: drivers/video/msm/mdp_hw.h:80:
+#define MDP_FULL_BYPASS_WORD10           ( 0x10128)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3117: FILE: drivers/video/msm/mdp_hw.h:81:
+#define MDP_FULL_BYPASS_WORD11           ( 0x1012c)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3118: FILE: drivers/video/msm/mdp_hw.h:82:
+#define MDP_FULL_BYPASS_WORD12           ( 0x10130)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3119: FILE: drivers/video/msm/mdp_hw.h:83:
+#define MDP_FULL_BYPASS_WORD13           ( 0x10134)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3120: FILE: drivers/video/msm/mdp_hw.h:84:
+#define MDP_FULL_BYPASS_WORD14           ( 0x10138)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3121: FILE: drivers/video/msm/mdp_hw.h:85:
+#define MDP_PPP_OPERATION_CONFIG         ( 0x10138)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3122: FILE: drivers/video/msm/mdp_hw.h:86:
+#define MDP_FULL_BYPASS_WORD15           ( 0x1013c)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3123: FILE: drivers/video/msm/mdp_hw.h:87:
+#define MDP_FULL_BYPASS_WORD16           ( 0x10140)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3124: FILE: drivers/video/msm/mdp_hw.h:88:
+#define MDP_FULL_BYPASS_WORD17           ( 0x10144)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3125: FILE: drivers/video/msm/mdp_hw.h:89:
+#define MDP_FULL_BYPASS_WORD18           ( 0x10148)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3126: FILE: drivers/video/msm/mdp_hw.h:90:
+#define MDP_FULL_BYPASS_WORD19           ( 0x1014c)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3127: FILE: drivers/video/msm/mdp_hw.h:91:
+#define MDP_FULL_BYPASS_WORD20           ( 0x10150)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3128: FILE: drivers/video/msm/mdp_hw.h:92:
+#define MDP_PPP_DESTINATION_CONFIG       ( 0x10150)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3129: FILE: drivers/video/msm/mdp_hw.h:93:
+#define MDP_FULL_BYPASS_WORD21           ( 0x10154)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3130: FILE: drivers/video/msm/mdp_hw.h:94:
+#define MDP_FULL_BYPASS_WORD22           ( 0x10158)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3131: FILE: drivers/video/msm/mdp_hw.h:95:
+#define MDP_FULL_BYPASS_WORD23           ( 0x1015c)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3132: FILE: drivers/video/msm/mdp_hw.h:96:
+#define MDP_FULL_BYPASS_WORD24           ( 0x10160)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3133: FILE: drivers/video/msm/mdp_hw.h:97:
+#define MDP_FULL_BYPASS_WORD25           ( 0x10164)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3134: FILE: drivers/video/msm/mdp_hw.h:98:
+#define MDP_FULL_BYPASS_WORD26           ( 0x10168)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3135: FILE: drivers/video/msm/mdp_hw.h:99:
+#define MDP_FULL_BYPASS_WORD27           ( 0x1016c)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3136: FILE: drivers/video/msm/mdp_hw.h:100:
+#define MDP_FULL_BYPASS_WORD29           ( 0x10174)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3137: FILE: drivers/video/msm/mdp_hw.h:101:
+#define MDP_FULL_BYPASS_WORD30           ( 0x10178)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3138: FILE: drivers/video/msm/mdp_hw.h:102:
+#define MDP_FULL_BYPASS_WORD31           ( 0x1017c)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3139: FILE: drivers/video/msm/mdp_hw.h:103:
+#define MDP_FULL_BYPASS_WORD32           ( 0x10180)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3140: FILE: drivers/video/msm/mdp_hw.h:104:
+#define MDP_DMA_CONFIG                   ( 0x10180)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3141: FILE: drivers/video/msm/mdp_hw.h:105:
+#define MDP_FULL_BYPASS_WORD33           ( 0x10184)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3142: FILE: drivers/video/msm/mdp_hw.h:106:
+#define MDP_FULL_BYPASS_WORD34           ( 0x10188)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3143: FILE: drivers/video/msm/mdp_hw.h:107:
+#define MDP_FULL_BYPASS_WORD35           ( 0x1018c)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3144: FILE: drivers/video/msm/mdp_hw.h:108:
+#define MDP_FULL_BYPASS_WORD37           ( 0x10194)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3145: FILE: drivers/video/msm/mdp_hw.h:109:
+#define MDP_FULL_BYPASS_WORD39           ( 0x1019c)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3146: FILE: drivers/video/msm/mdp_hw.h:110:
+#define MDP_FULL_BYPASS_WORD40           ( 0x101a0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3147: FILE: drivers/video/msm/mdp_hw.h:111:
+#define MDP_FULL_BYPASS_WORD41           ( 0x101a4)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3148: FILE: drivers/video/msm/mdp_hw.h:112:
+#define MDP_FULL_BYPASS_WORD43           ( 0x101ac)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3149: FILE: drivers/video/msm/mdp_hw.h:113:
+#define MDP_FULL_BYPASS_WORD46           ( 0x101b8)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3150: FILE: drivers/video/msm/mdp_hw.h:114:
+#define MDP_FULL_BYPASS_WORD47           ( 0x101bc)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3151: FILE: drivers/video/msm/mdp_hw.h:115:
+#define MDP_FULL_BYPASS_WORD48           ( 0x101c0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3152: FILE: drivers/video/msm/mdp_hw.h:116:
+#define MDP_FULL_BYPASS_WORD49           ( 0x101c4)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3153: FILE: drivers/video/msm/mdp_hw.h:117:
+#define MDP_FULL_BYPASS_WORD50           ( 0x101c8)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3154: FILE: drivers/video/msm/mdp_hw.h:118:
+#define MDP_FULL_BYPASS_WORD51           ( 0x101cc)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3155: FILE: drivers/video/msm/mdp_hw.h:119:
+#define MDP_FULL_BYPASS_WORD52           ( 0x101d0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3156: FILE: drivers/video/msm/mdp_hw.h:120:
+#define MDP_FULL_BYPASS_WORD53           ( 0x101d4)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3157: FILE: drivers/video/msm/mdp_hw.h:121:
+#define MDP_FULL_BYPASS_WORD54           ( 0x101d8)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3158: FILE: drivers/video/msm/mdp_hw.h:122:
+#define MDP_FULL_BYPASS_WORD55           ( 0x101dc)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3159: FILE: drivers/video/msm/mdp_hw.h:123:
+#define MDP_FULL_BYPASS_WORD56           ( 0x101e0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3160: FILE: drivers/video/msm/mdp_hw.h:124:
+#define MDP_FULL_BYPASS_WORD57           ( 0x101e4)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3161: FILE: drivers/video/msm/mdp_hw.h:125:
+#define MDP_FULL_BYPASS_WORD58           ( 0x101e8)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3162: FILE: drivers/video/msm/mdp_hw.h:126:
+#define MDP_FULL_BYPASS_WORD59           ( 0x101ec)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3163: FILE: drivers/video/msm/mdp_hw.h:127:
+#define MDP_FULL_BYPASS_WORD60           ( 0x101f0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3164: FILE: drivers/video/msm/mdp_hw.h:128:
+#define MDP_VSYNC_THRESHOLD              ( 0x101f0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3165: FILE: drivers/video/msm/mdp_hw.h:129:
+#define MDP_FULL_BYPASS_WORD61           ( 0x101f4)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3166: FILE: drivers/video/msm/mdp_hw.h:130:
+#define MDP_FULL_BYPASS_WORD62           ( 0x101f8)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3167: FILE: drivers/video/msm/mdp_hw.h:131:
+#define MDP_FULL_BYPASS_WORD63           ( 0x101fc)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3168: FILE: drivers/video/msm/mdp_hw.h:132:
+#define MDP_TFETCH_TEST_MODE             ( 0x20004)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3169: FILE: drivers/video/msm/mdp_hw.h:133:
+#define MDP_TFETCH_STATUS                ( 0x20008)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3170: FILE: drivers/video/msm/mdp_hw.h:134:
+#define MDP_TFETCH_TILE_COUNT            ( 0x20010)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3171: FILE: drivers/video/msm/mdp_hw.h:135:
+#define MDP_TFETCH_FETCH_COUNT           ( 0x20014)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3172: FILE: drivers/video/msm/mdp_hw.h:136:
+#define MDP_TFETCH_CONSTANT_COLOR        ( 0x20040)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3173: FILE: drivers/video/msm/mdp_hw.h:137:
+#define MDP_CSC_BYPASS                   ( 0x40004)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3174: FILE: drivers/video/msm/mdp_hw.h:138:
+#define MDP_SCALE_COEFF_LSB              ( 0x5fffc)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3175: FILE: drivers/video/msm/mdp_hw.h:139:
+#define MDP_TV_OUT_CTL                   ( 0xc0000)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3176: FILE: drivers/video/msm/mdp_hw.h:140:
+#define MDP_TV_OUT_FIR_COEFF             ( 0xc0004)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3177: FILE: drivers/video/msm/mdp_hw.h:141:
+#define MDP_TV_OUT_BUF_ADDR              ( 0xc0008)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3178: FILE: drivers/video/msm/mdp_hw.h:142:
+#define MDP_TV_OUT_CC_DATA               ( 0xc000c)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3179: FILE: drivers/video/msm/mdp_hw.h:143:
+#define MDP_TV_OUT_SOBEL                 ( 0xc0010)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3180: FILE: drivers/video/msm/mdp_hw.h:144:
+#define MDP_TV_OUT_Y_CLAMP               ( 0xc0018)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3181: FILE: drivers/video/msm/mdp_hw.h:145:
+#define MDP_TV_OUT_CB_CLAMP              ( 0xc001c)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3182: FILE: drivers/video/msm/mdp_hw.h:146:
+#define MDP_TV_OUT_CR_CLAMP              ( 0xc0020)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3183: FILE: drivers/video/msm/mdp_hw.h:147:
+#define MDP_TEST_MODE_CLK                ( 0xd0000)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3184: FILE: drivers/video/msm/mdp_hw.h:148:
+#define MDP_TEST_MISR_RESET_CLK          ( 0xd0004)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3185: FILE: drivers/video/msm/mdp_hw.h:149:
+#define MDP_TEST_EXPORT_MISR_CLK         ( 0xd0008)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3186: FILE: drivers/video/msm/mdp_hw.h:150:
+#define MDP_TEST_MISR_CURR_VAL_CLK       ( 0xd000c)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3187: FILE: drivers/video/msm/mdp_hw.h:151:
+#define MDP_TEST_MODE_HCLK               ( 0xd0100)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3188: FILE: drivers/video/msm/mdp_hw.h:152:
+#define MDP_TEST_MISR_RESET_HCLK         ( 0xd0104)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3189: FILE: drivers/video/msm/mdp_hw.h:153:
+#define MDP_TEST_EXPORT_MISR_HCLK        ( 0xd0108)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3190: FILE: drivers/video/msm/mdp_hw.h:154:
+#define MDP_TEST_MISR_CURR_VAL_HCLK      ( 0xd010c)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3191: FILE: drivers/video/msm/mdp_hw.h:155:
+#define MDP_TEST_MODE_DCLK               ( 0xd0200)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3192: FILE: drivers/video/msm/mdp_hw.h:156:
+#define MDP_TEST_MISR_RESET_DCLK         ( 0xd0204)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3193: FILE: drivers/video/msm/mdp_hw.h:157:
+#define MDP_TEST_EXPORT_MISR_DCLK        ( 0xd0208)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3194: FILE: drivers/video/msm/mdp_hw.h:158:
+#define MDP_TEST_MISR_CURR_VAL_DCLK      ( 0xd020c)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3195: FILE: drivers/video/msm/mdp_hw.h:159:
+#define MDP_TEST_CAPTURED_DCLK           ( 0xd0210)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3196: FILE: drivers/video/msm/mdp_hw.h:160:
+#define MDP_TEST_MISR_CAPT_VAL_DCLK      ( 0xd0214)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3197: FILE: drivers/video/msm/mdp_hw.h:161:
+#define MDP_LCDC_CTL                     ( 0xe0000)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3198: FILE: drivers/video/msm/mdp_hw.h:162:
+#define MDP_LCDC_HSYNC_CTL               ( 0xe0004)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3199: FILE: drivers/video/msm/mdp_hw.h:163:
+#define MDP_LCDC_VSYNC_CTL               ( 0xe0008)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3200: FILE: drivers/video/msm/mdp_hw.h:164:
+#define MDP_LCDC_ACTIVE_HCTL             ( 0xe000c)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3201: FILE: drivers/video/msm/mdp_hw.h:165:
+#define MDP_LCDC_ACTIVE_VCTL             ( 0xe0010)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3202: FILE: drivers/video/msm/mdp_hw.h:166:
+#define MDP_LCDC_BORDER_CLR              ( 0xe0014)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3203: FILE: drivers/video/msm/mdp_hw.h:167:
+#define MDP_LCDC_H_BLANK                 ( 0xe0018)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3204: FILE: drivers/video/msm/mdp_hw.h:168:
+#define MDP_LCDC_V_BLANK                 ( 0xe001c)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3205: FILE: drivers/video/msm/mdp_hw.h:169:
+#define MDP_LCDC_UNDERFLOW_CLR           ( 0xe0020)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3206: FILE: drivers/video/msm/mdp_hw.h:170:
+#define MDP_LCDC_HSYNC_SKEW              ( 0xe0024)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3207: FILE: drivers/video/msm/mdp_hw.h:171:
+#define MDP_LCDC_TEST_CTL                ( 0xe0028)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3208: FILE: drivers/video/msm/mdp_hw.h:172:
+#define MDP_LCDC_LINE_IRQ                ( 0xe002c)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3209: FILE: drivers/video/msm/mdp_hw.h:173:
+#define MDP_LCDC_CTL_POLARITY            ( 0xe0030)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3210: FILE: drivers/video/msm/mdp_hw.h:174:
+#define MDP_LCDC_DMA_CONFIG              ( 0xe1000)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3211: FILE: drivers/video/msm/mdp_hw.h:175:
+#define MDP_LCDC_DMA_SIZE                ( 0xe1004)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3212: FILE: drivers/video/msm/mdp_hw.h:176:
+#define MDP_LCDC_DMA_IBUF_ADDR           ( 0xe1008)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3213: FILE: drivers/video/msm/mdp_hw.h:177:
+#define MDP_LCDC_DMA_IBUF_Y_STRIDE       ( 0xe100c)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3215: FILE: drivers/video/msm/mdp_hw.h:179:
+
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3221: FILE: drivers/video/msm/mdp_hw.h:185:
+#define DL0_ROI_DONE           (1<<0)
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3221: FILE: drivers/video/msm/mdp_hw.h:185:
+#define DL0_ROI_DONE           (1<<0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3222: FILE: drivers/video/msm/mdp_hw.h:186:
+#define DL1_ROI_DONE           (1<<1)
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3222: FILE: drivers/video/msm/mdp_hw.h:186:
+#define DL1_ROI_DONE           (1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3223: FILE: drivers/video/msm/mdp_hw.h:187:
+#define DL0_DMA2_TERM_DONE     (1<<2)
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3223: FILE: drivers/video/msm/mdp_hw.h:187:
+#define DL0_DMA2_TERM_DONE     (1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3224: FILE: drivers/video/msm/mdp_hw.h:188:
+#define DL1_DMA2_TERM_DONE     (1<<3)
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3224: FILE: drivers/video/msm/mdp_hw.h:188:
+#define DL1_DMA2_TERM_DONE     (1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3225: FILE: drivers/video/msm/mdp_hw.h:189:
+#define DL0_PPP_TERM_DONE      (1<<4)
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3225: FILE: drivers/video/msm/mdp_hw.h:189:
+#define DL0_PPP_TERM_DONE      (1<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3226: FILE: drivers/video/msm/mdp_hw.h:190:
+#define DL1_PPP_TERM_DONE      (1<<5)
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3226: FILE: drivers/video/msm/mdp_hw.h:190:
+#define DL1_PPP_TERM_DONE      (1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3227: FILE: drivers/video/msm/mdp_hw.h:191:
+#define TV_OUT_DMA3_DONE       (1<<6)
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3227: FILE: drivers/video/msm/mdp_hw.h:191:
+#define TV_OUT_DMA3_DONE       (1<<6)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3228: FILE: drivers/video/msm/mdp_hw.h:192:
+#define TV_ENC_UNDERRUN        (1<<7)
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3228: FILE: drivers/video/msm/mdp_hw.h:192:
+#define TV_ENC_UNDERRUN        (1<<7)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3229: FILE: drivers/video/msm/mdp_hw.h:193:
+#define DL0_FETCH_DONE         (1<<11)
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3229: FILE: drivers/video/msm/mdp_hw.h:193:
+#define DL0_FETCH_DONE         (1<<11)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3230: FILE: drivers/video/msm/mdp_hw.h:194:
+#define DL1_FETCH_DONE         (1<<12)
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3230: FILE: drivers/video/msm/mdp_hw.h:194:
+#define DL1_FETCH_DONE         (1<<12)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#3232: FILE: drivers/video/msm/mdp_hw.h:196:
+#define MDP_PPP_BUSY_STATUS (DL0_ROI_DONE| \
                                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#3233: FILE: drivers/video/msm/mdp_hw.h:197:
+			   DL1_ROI_DONE| \
 			               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#3234: FILE: drivers/video/msm/mdp_hw.h:198:
+			   DL0_PPP_TERM_DONE| \
 			                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#3237: FILE: drivers/video/msm/mdp_hw.h:201:
+#define MDP_ANY_INTR_MASK (DL0_ROI_DONE| \
                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#3238: FILE: drivers/video/msm/mdp_hw.h:202:
+			   DL1_ROI_DONE| \
 			               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#3239: FILE: drivers/video/msm/mdp_hw.h:203:
+			   DL0_DMA2_TERM_DONE| \
 			                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#3240: FILE: drivers/video/msm/mdp_hw.h:204:
+			   DL1_DMA2_TERM_DONE| \
 			                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#3241: FILE: drivers/video/msm/mdp_hw.h:205:
+			   DL0_PPP_TERM_DONE| \
 			                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#3242: FILE: drivers/video/msm/mdp_hw.h:206:
+			   DL1_PPP_TERM_DONE| \
 			                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#3243: FILE: drivers/video/msm/mdp_hw.h:207:
+			   DL0_FETCH_DONE| \
 			                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#3244: FILE: drivers/video/msm/mdp_hw.h:208:
+			   DL1_FETCH_DONE| \
 			                 ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'bit' - possible side-effects?
#3266: FILE: drivers/video/msm/mdp_hw.h:230:
+#define MDP_GET_PACK_PATTERN(a, x, y, z, bit) \
+	(((a)<<(bit*3))|((x)<<(bit*2))|((y)<<bit)|(z))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'bit' may be better as '(bit)' to avoid precedence issues
#3266: FILE: drivers/video/msm/mdp_hw.h:230:
+#define MDP_GET_PACK_PATTERN(a, x, y, z, bit) \
+	(((a)<<(bit*3))|((x)<<(bit*2))|((y)<<bit)|(z))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3267: FILE: drivers/video/msm/mdp_hw.h:231:
+	(((a)<<(bit*3))|((x)<<(bit*2))|((y)<<bit)|(z))
 	     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3267: FILE: drivers/video/msm/mdp_hw.h:231:
+	(((a)<<(bit*3))|((x)<<(bit*2))|((y)<<bit)|(z))
 	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3267: FILE: drivers/video/msm/mdp_hw.h:231:
+	(((a)<<(bit*3))|((x)<<(bit*2))|((y)<<bit)|(z))
 	               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3267: FILE: drivers/video/msm/mdp_hw.h:231:
+	(((a)<<(bit*3))|((x)<<(bit*2))|((y)<<bit)|(z))
 	                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3267: FILE: drivers/video/msm/mdp_hw.h:231:
+	(((a)<<(bit*3))|((x)<<(bit*2))|((y)<<bit)|(z))
 	                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3267: FILE: drivers/video/msm/mdp_hw.h:231:
+	(((a)<<(bit*3))|((x)<<(bit*2))|((y)<<bit)|(z))
 	                              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3267: FILE: drivers/video/msm/mdp_hw.h:231:
+	(((a)<<(bit*3))|((x)<<(bit*2))|((y)<<bit)|(z))
 	                                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3267: FILE: drivers/video/msm/mdp_hw.h:231:
+	(((a)<<(bit*3))|((x)<<(bit*2))|((y)<<bit)|(z))
 	                                         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3271: FILE: drivers/video/msm/mdp_hw.h:235:
+#define MDP_SYNCFG_VSYNC_EXT_EN (1<<21)
                                   ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3271: FILE: drivers/video/msm/mdp_hw.h:235:
+#define MDP_SYNCFG_VSYNC_EXT_EN (1<<21)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3272: FILE: drivers/video/msm/mdp_hw.h:236:
+#define MDP_SYNCFG_VSYNC_INT_EN (1<<20)
                                   ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3272: FILE: drivers/video/msm/mdp_hw.h:236:
+#define MDP_SYNCFG_VSYNC_INT_EN (1<<20)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3279: FILE: drivers/video/msm/mdp_hw.h:243:
+#define VSYNC_PULSE_EN (1<<31)
                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3279: FILE: drivers/video/msm/mdp_hw.h:243:
+#define VSYNC_PULSE_EN (1<<31)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3280: FILE: drivers/video/msm/mdp_hw.h:244:
+#define VSYNC_PULSE_INV (1<<30)
                           ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3280: FILE: drivers/video/msm/mdp_hw.h:244:
+#define VSYNC_PULSE_INV (1<<30)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3284: FILE: drivers/video/msm/mdp_hw.h:248:
+#define DISP0_VSYNC_MAP_VSYNC1 (1<<0)
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3284: FILE: drivers/video/msm/mdp_hw.h:248:
+#define DISP0_VSYNC_MAP_VSYNC1 (1<<0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3285: FILE: drivers/video/msm/mdp_hw.h:249:
+#define DISP0_VSYNC_MAP_VSYNC2 (1<<0)|(1<<1)
                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3285: FILE: drivers/video/msm/mdp_hw.h:249:
+#define DISP0_VSYNC_MAP_VSYNC2 (1<<0)|(1<<1)
                                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3285: FILE: drivers/video/msm/mdp_hw.h:249:
+#define DISP0_VSYNC_MAP_VSYNC2 (1<<0)|(1<<1)
                                         ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3285: FILE: drivers/video/msm/mdp_hw.h:249:
+#define DISP0_VSYNC_MAP_VSYNC2 (1<<0)|(1<<1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#3285: FILE: drivers/video/msm/mdp_hw.h:249:
+#define DISP0_VSYNC_MAP_VSYNC2 (1<<0)|(1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3288: FILE: drivers/video/msm/mdp_hw.h:252:
+#define DISP1_VSYNC_MAP_VSYNC1 (1<<2)
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3288: FILE: drivers/video/msm/mdp_hw.h:252:
+#define DISP1_VSYNC_MAP_VSYNC1 (1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3289: FILE: drivers/video/msm/mdp_hw.h:253:
+#define DISP1_VSYNC_MAP_VSYNC2 (1<<2)|(1<<3)
                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3289: FILE: drivers/video/msm/mdp_hw.h:253:
+#define DISP1_VSYNC_MAP_VSYNC2 (1<<2)|(1<<3)
                                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3289: FILE: drivers/video/msm/mdp_hw.h:253:
+#define DISP1_VSYNC_MAP_VSYNC2 (1<<2)|(1<<3)
                                         ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3289: FILE: drivers/video/msm/mdp_hw.h:253:
+#define DISP1_VSYNC_MAP_VSYNC2 (1<<2)|(1<<3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#3289: FILE: drivers/video/msm/mdp_hw.h:253:
+#define DISP1_VSYNC_MAP_VSYNC2 (1<<2)|(1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3291: FILE: drivers/video/msm/mdp_hw.h:255:
+#define PRIMARY_LCD_SYNC_EN (1<<4)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3291: FILE: drivers/video/msm/mdp_hw.h:255:
+#define PRIMARY_LCD_SYNC_EN (1<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3294: FILE: drivers/video/msm/mdp_hw.h:258:
+#define SECONDARY_LCD_SYNC_EN (1<<5)
                                 ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3294: FILE: drivers/video/msm/mdp_hw.h:258:
+#define SECONDARY_LCD_SYNC_EN (1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3297: FILE: drivers/video/msm/mdp_hw.h:261:
+#define EXTERNAL_LCD_SYNC_EN (1<<6)
                                ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3297: FILE: drivers/video/msm/mdp_hw.h:261:
+#define EXTERNAL_LCD_SYNC_EN (1<<6)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3303: FILE: drivers/video/msm/mdp_hw.h:267:
+#define VSYNC_ANTI_TEAR_EN (1<<31)
                              ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3303: FILE: drivers/video/msm/mdp_hw.h:267:
+#define VSYNC_ANTI_TEAR_EN (1<<31)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3306: FILE: drivers/video/msm/mdp_hw.h:270:
+#define MDP_CMD_DBGBUS_EN (1<<0)
                             ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3306: FILE: drivers/video/msm/mdp_hw.h:270:
+#define MDP_CMD_DBGBUS_EN (1<<0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3309: FILE: drivers/video/msm/mdp_hw.h:273:
+#define PPP_SRC_C0G_8BIT ((1<<1)|(1<<0))
                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3309: FILE: drivers/video/msm/mdp_hw.h:273:
+#define PPP_SRC_C0G_8BIT ((1<<1)|(1<<0))
                                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3309: FILE: drivers/video/msm/mdp_hw.h:273:
+#define PPP_SRC_C0G_8BIT ((1<<1)|(1<<0))
                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3310: FILE: drivers/video/msm/mdp_hw.h:274:
+#define PPP_SRC_C1B_8BIT ((1<<3)|(1<<2))
                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3310: FILE: drivers/video/msm/mdp_hw.h:274:
+#define PPP_SRC_C1B_8BIT ((1<<3)|(1<<2))
                                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3310: FILE: drivers/video/msm/mdp_hw.h:274:
+#define PPP_SRC_C1B_8BIT ((1<<3)|(1<<2))
                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3311: FILE: drivers/video/msm/mdp_hw.h:275:
+#define PPP_SRC_C2R_8BIT ((1<<5)|(1<<4))
                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3311: FILE: drivers/video/msm/mdp_hw.h:275:
+#define PPP_SRC_C2R_8BIT ((1<<5)|(1<<4))
                                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3311: FILE: drivers/video/msm/mdp_hw.h:275:
+#define PPP_SRC_C2R_8BIT ((1<<5)|(1<<4))
                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3312: FILE: drivers/video/msm/mdp_hw.h:276:
+#define PPP_SRC_C3A_8BIT ((1<<7)|(1<<6))
                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3312: FILE: drivers/video/msm/mdp_hw.h:276:
+#define PPP_SRC_C3A_8BIT ((1<<7)|(1<<6))
                                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3312: FILE: drivers/video/msm/mdp_hw.h:276:
+#define PPP_SRC_C3A_8BIT ((1<<7)|(1<<6))
                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3314: FILE: drivers/video/msm/mdp_hw.h:278:
+#define PPP_SRC_C0G_6BIT (1<<1)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3314: FILE: drivers/video/msm/mdp_hw.h:278:
+#define PPP_SRC_C0G_6BIT (1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3315: FILE: drivers/video/msm/mdp_hw.h:279:
+#define PPP_SRC_C1B_6BIT (1<<3)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3315: FILE: drivers/video/msm/mdp_hw.h:279:
+#define PPP_SRC_C1B_6BIT (1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3316: FILE: drivers/video/msm/mdp_hw.h:280:
+#define PPP_SRC_C2R_6BIT (1<<5)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3316: FILE: drivers/video/msm/mdp_hw.h:280:
+#define PPP_SRC_C2R_6BIT (1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3318: FILE: drivers/video/msm/mdp_hw.h:282:
+#define PPP_SRC_C0G_5BIT (1<<0)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3318: FILE: drivers/video/msm/mdp_hw.h:282:
+#define PPP_SRC_C0G_5BIT (1<<0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3319: FILE: drivers/video/msm/mdp_hw.h:283:
+#define PPP_SRC_C1B_5BIT (1<<2)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3319: FILE: drivers/video/msm/mdp_hw.h:283:
+#define PPP_SRC_C1B_5BIT (1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3320: FILE: drivers/video/msm/mdp_hw.h:284:
+#define PPP_SRC_C2R_5BIT (1<<4)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3320: FILE: drivers/video/msm/mdp_hw.h:284:
+#define PPP_SRC_C2R_5BIT (1<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3322: FILE: drivers/video/msm/mdp_hw.h:286:
+#define PPP_SRC_C3ALPHA_EN (1<<8)
                              ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3322: FILE: drivers/video/msm/mdp_hw.h:286:
+#define PPP_SRC_C3ALPHA_EN (1<<8)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3325: FILE: drivers/video/msm/mdp_hw.h:289:
+#define PPP_SRC_BPP_2BYTES (1<<9)
                              ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3325: FILE: drivers/video/msm/mdp_hw.h:289:
+#define PPP_SRC_BPP_2BYTES (1<<9)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3326: FILE: drivers/video/msm/mdp_hw.h:290:
+#define PPP_SRC_BPP_3BYTES (1<<10)
                              ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3326: FILE: drivers/video/msm/mdp_hw.h:290:
+#define PPP_SRC_BPP_3BYTES (1<<10)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3327: FILE: drivers/video/msm/mdp_hw.h:291:
+#define PPP_SRC_BPP_4BYTES ((1<<10)|(1<<9))
                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3327: FILE: drivers/video/msm/mdp_hw.h:291:
+#define PPP_SRC_BPP_4BYTES ((1<<10)|(1<<9))
                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3327: FILE: drivers/video/msm/mdp_hw.h:291:
+#define PPP_SRC_BPP_4BYTES ((1<<10)|(1<<9))
                                       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3329: FILE: drivers/video/msm/mdp_hw.h:293:
+#define PPP_SRC_BPP_ROI_ODD_X (1<<11)
                                 ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3329: FILE: drivers/video/msm/mdp_hw.h:293:
+#define PPP_SRC_BPP_ROI_ODD_X (1<<11)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3330: FILE: drivers/video/msm/mdp_hw.h:294:
+#define PPP_SRC_BPP_ROI_ODD_Y (1<<12)
                                 ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3330: FILE: drivers/video/msm/mdp_hw.h:294:
+#define PPP_SRC_BPP_ROI_ODD_Y (1<<12)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3331: FILE: drivers/video/msm/mdp_hw.h:295:
+#define PPP_SRC_INTERLVD_2COMPONENTS (1<<13)
                                        ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3331: FILE: drivers/video/msm/mdp_hw.h:295:
+#define PPP_SRC_INTERLVD_2COMPONENTS (1<<13)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3332: FILE: drivers/video/msm/mdp_hw.h:296:
+#define PPP_SRC_INTERLVD_3COMPONENTS (1<<14)
                                        ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3332: FILE: drivers/video/msm/mdp_hw.h:296:
+#define PPP_SRC_INTERLVD_3COMPONENTS (1<<14)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3333: FILE: drivers/video/msm/mdp_hw.h:297:
+#define PPP_SRC_INTERLVD_4COMPONENTS ((1<<14)|(1<<13))
                                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3333: FILE: drivers/video/msm/mdp_hw.h:297:
+#define PPP_SRC_INTERLVD_4COMPONENTS ((1<<14)|(1<<13))
                                              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3333: FILE: drivers/video/msm/mdp_hw.h:297:
+#define PPP_SRC_INTERLVD_4COMPONENTS ((1<<14)|(1<<13))
                                                 ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3335: FILE: drivers/video/msm/mdp_hw.h:299:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#3337: FILE: drivers/video/msm/mdp_hw.h:301:
+/* RGB666 unpack format
+** TIGHT means R6+G6+B6 together

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3341: FILE: drivers/video/msm/mdp_hw.h:305:
+#define PPP_SRC_PACK_TIGHT (1<<17)
                              ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3341: FILE: drivers/video/msm/mdp_hw.h:305:
+#define PPP_SRC_PACK_TIGHT (1<<17)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3344: FILE: drivers/video/msm/mdp_hw.h:308:
+#define PPP_SRC_PACK_ALIGN_MSB (1<<18)
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3344: FILE: drivers/video/msm/mdp_hw.h:308:
+#define PPP_SRC_PACK_ALIGN_MSB (1<<18)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3347: FILE: drivers/video/msm/mdp_hw.h:311:
+#define PPP_SRC_PLANE_PSEUDOPLNR (1<<20)
                                    ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3347: FILE: drivers/video/msm/mdp_hw.h:311:
+#define PPP_SRC_PLANE_PSEUDOPLNR (1<<20)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3349: FILE: drivers/video/msm/mdp_hw.h:313:
+#define PPP_SRC_WMV9_MODE (1<<21)
                             ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3349: FILE: drivers/video/msm/mdp_hw.h:313:
+#define PPP_SRC_WMV9_MODE (1<<21)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3352: FILE: drivers/video/msm/mdp_hw.h:316:
+#define PPP_OP_SCALE_X_ON (1<<0)
                             ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3352: FILE: drivers/video/msm/mdp_hw.h:316:
+#define PPP_OP_SCALE_X_ON (1<<0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3353: FILE: drivers/video/msm/mdp_hw.h:317:
+#define PPP_OP_SCALE_Y_ON (1<<1)
                             ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3353: FILE: drivers/video/msm/mdp_hw.h:317:
+#define PPP_OP_SCALE_Y_ON (1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3356: FILE: drivers/video/msm/mdp_hw.h:320:
+#define PPP_OP_CONVERT_YCBCR2RGB (1<<2)
                                    ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3356: FILE: drivers/video/msm/mdp_hw.h:320:
+#define PPP_OP_CONVERT_YCBCR2RGB (1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3357: FILE: drivers/video/msm/mdp_hw.h:321:
+#define PPP_OP_CONVERT_ON (1<<3)
                             ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3357: FILE: drivers/video/msm/mdp_hw.h:321:
+#define PPP_OP_CONVERT_ON (1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3360: FILE: drivers/video/msm/mdp_hw.h:324:
+#define PPP_OP_CONVERT_MATRIX_SECONDARY (1<<4)
                                           ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3360: FILE: drivers/video/msm/mdp_hw.h:324:
+#define PPP_OP_CONVERT_MATRIX_SECONDARY (1<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3362: FILE: drivers/video/msm/mdp_hw.h:326:
+#define PPP_OP_LUT_C0_ON (1<<5)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3362: FILE: drivers/video/msm/mdp_hw.h:326:
+#define PPP_OP_LUT_C0_ON (1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3363: FILE: drivers/video/msm/mdp_hw.h:327:
+#define PPP_OP_LUT_C1_ON (1<<6)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3363: FILE: drivers/video/msm/mdp_hw.h:327:
+#define PPP_OP_LUT_C1_ON (1<<6)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3364: FILE: drivers/video/msm/mdp_hw.h:328:
+#define PPP_OP_LUT_C2_ON (1<<7)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3364: FILE: drivers/video/msm/mdp_hw.h:328:
+#define PPP_OP_LUT_C2_ON (1<<7)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3367: FILE: drivers/video/msm/mdp_hw.h:331:
+#define PPP_OP_ROT_ON (1<<8)
                         ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3367: FILE: drivers/video/msm/mdp_hw.h:331:
+#define PPP_OP_ROT_ON (1<<8)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3369: FILE: drivers/video/msm/mdp_hw.h:333:
+#define PPP_OP_ROT_90 (1<<9)
                         ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3369: FILE: drivers/video/msm/mdp_hw.h:333:
+#define PPP_OP_ROT_90 (1<<9)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3370: FILE: drivers/video/msm/mdp_hw.h:334:
+#define PPP_OP_FLIP_LR (1<<10)
                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3370: FILE: drivers/video/msm/mdp_hw.h:334:
+#define PPP_OP_FLIP_LR (1<<10)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3371: FILE: drivers/video/msm/mdp_hw.h:335:
+#define PPP_OP_FLIP_UD (1<<11)
                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3371: FILE: drivers/video/msm/mdp_hw.h:335:
+#define PPP_OP_FLIP_UD (1<<11)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3373: FILE: drivers/video/msm/mdp_hw.h:337:
+#define PPP_OP_BLEND_ON (1<<12)
                           ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3373: FILE: drivers/video/msm/mdp_hw.h:337:
+#define PPP_OP_BLEND_ON (1<<12)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3376: FILE: drivers/video/msm/mdp_hw.h:340:
+#define PPP_OP_BLEND_DSTPIXEL_ALPHA (1<<13)
                                       ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3376: FILE: drivers/video/msm/mdp_hw.h:340:
+#define PPP_OP_BLEND_DSTPIXEL_ALPHA (1<<13)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3377: FILE: drivers/video/msm/mdp_hw.h:341:
+#define PPP_OP_BLEND_CONSTANT_ALPHA (1<<14)
                                       ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3377: FILE: drivers/video/msm/mdp_hw.h:341:
+#define PPP_OP_BLEND_CONSTANT_ALPHA (1<<14)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3378: FILE: drivers/video/msm/mdp_hw.h:342:
+#define PPP_OP_BLEND_SRCPIXEL_TRANSP ((1<<13)|(1<<14))
                                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3378: FILE: drivers/video/msm/mdp_hw.h:342:
+#define PPP_OP_BLEND_SRCPIXEL_TRANSP ((1<<13)|(1<<14))
                                              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3378: FILE: drivers/video/msm/mdp_hw.h:342:
+#define PPP_OP_BLEND_SRCPIXEL_TRANSP ((1<<13)|(1<<14))
                                                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3381: FILE: drivers/video/msm/mdp_hw.h:345:
+#define PPP_OP_BLEND_ALPHA_BLEND_REVERSE (1<<15)
                                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3381: FILE: drivers/video/msm/mdp_hw.h:345:
+#define PPP_OP_BLEND_ALPHA_BLEND_REVERSE (1<<15)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3383: FILE: drivers/video/msm/mdp_hw.h:347:
+#define PPP_OP_DITHER_EN (1<<16)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3383: FILE: drivers/video/msm/mdp_hw.h:347:
+#define PPP_OP_DITHER_EN (1<<16)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3386: FILE: drivers/video/msm/mdp_hw.h:350:
+#define PPP_OP_COLOR_SPACE_YCBCR (1<<17)
                                    ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3386: FILE: drivers/video/msm/mdp_hw.h:350:
+#define PPP_OP_COLOR_SPACE_YCBCR (1<<17)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3389: FILE: drivers/video/msm/mdp_hw.h:353:
+#define PPP_OP_SRC_CHROMA_H2V1 (1<<18)
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3389: FILE: drivers/video/msm/mdp_hw.h:353:
+#define PPP_OP_SRC_CHROMA_H2V1 (1<<18)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3390: FILE: drivers/video/msm/mdp_hw.h:354:
+#define PPP_OP_SRC_CHROMA_H1V2 (1<<19)
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3390: FILE: drivers/video/msm/mdp_hw.h:354:
+#define PPP_OP_SRC_CHROMA_H1V2 (1<<19)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3391: FILE: drivers/video/msm/mdp_hw.h:355:
+#define PPP_OP_SRC_CHROMA_420 ((1<<18)|(1<<19))
                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3391: FILE: drivers/video/msm/mdp_hw.h:355:
+#define PPP_OP_SRC_CHROMA_420 ((1<<18)|(1<<19))
                                       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3391: FILE: drivers/video/msm/mdp_hw.h:355:
+#define PPP_OP_SRC_CHROMA_420 ((1<<18)|(1<<19))
                                          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3393: FILE: drivers/video/msm/mdp_hw.h:357:
+#define PPP_OP_SRC_CHROMA_OFFSITE (1<<20)
                                     ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3393: FILE: drivers/video/msm/mdp_hw.h:357:
+#define PPP_OP_SRC_CHROMA_OFFSITE (1<<20)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3396: FILE: drivers/video/msm/mdp_hw.h:360:
+#define PPP_OP_DST_CHROMA_H2V1 (1<<21)
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3396: FILE: drivers/video/msm/mdp_hw.h:360:
+#define PPP_OP_DST_CHROMA_H2V1 (1<<21)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3397: FILE: drivers/video/msm/mdp_hw.h:361:
+#define PPP_OP_DST_CHROMA_H1V2 (1<<22)
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3397: FILE: drivers/video/msm/mdp_hw.h:361:
+#define PPP_OP_DST_CHROMA_H1V2 (1<<22)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3398: FILE: drivers/video/msm/mdp_hw.h:362:
+#define PPP_OP_DST_CHROMA_420 ((1<<21)|(1<<22))
                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3398: FILE: drivers/video/msm/mdp_hw.h:362:
+#define PPP_OP_DST_CHROMA_420 ((1<<21)|(1<<22))
                                       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3398: FILE: drivers/video/msm/mdp_hw.h:362:
+#define PPP_OP_DST_CHROMA_420 ((1<<21)|(1<<22))
                                          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3400: FILE: drivers/video/msm/mdp_hw.h:364:
+#define PPP_OP_DST_CHROMA_OFFSITE (1<<23)
                                     ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3400: FILE: drivers/video/msm/mdp_hw.h:364:
+#define PPP_OP_DST_CHROMA_OFFSITE (1<<23)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3402: FILE: drivers/video/msm/mdp_hw.h:366:
+#define PPP_BLEND_ALPHA_TRANSP (1<<24)
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3402: FILE: drivers/video/msm/mdp_hw.h:366:
+#define PPP_BLEND_ALPHA_TRANSP (1<<24)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3405: FILE: drivers/video/msm/mdp_hw.h:369:
+#define PPP_OP_BG_CHROMA_H2V1 (1<<25)
                                 ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3405: FILE: drivers/video/msm/mdp_hw.h:369:
+#define PPP_OP_BG_CHROMA_H2V1 (1<<25)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3406: FILE: drivers/video/msm/mdp_hw.h:370:
+#define PPP_OP_BG_CHROMA_H1V2 (1<<26)
                                 ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3406: FILE: drivers/video/msm/mdp_hw.h:370:
+#define PPP_OP_BG_CHROMA_H1V2 (1<<26)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3407: FILE: drivers/video/msm/mdp_hw.h:371:
+#define PPP_OP_BG_CHROMA_420 (1<<25)|(1<<26)
                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3407: FILE: drivers/video/msm/mdp_hw.h:371:
+#define PPP_OP_BG_CHROMA_420 (1<<25)|(1<<26)
                                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3407: FILE: drivers/video/msm/mdp_hw.h:371:
+#define PPP_OP_BG_CHROMA_420 (1<<25)|(1<<26)
                                        ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3407: FILE: drivers/video/msm/mdp_hw.h:371:
+#define PPP_OP_BG_CHROMA_420 (1<<25)|(1<<26)

CHECK:BIT_MACRO: Prefer using the BIT macro
#3407: FILE: drivers/video/msm/mdp_hw.h:371:
+#define PPP_OP_BG_CHROMA_420 (1<<25)|(1<<26)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3409: FILE: drivers/video/msm/mdp_hw.h:373:
+#define PPP_OP_BG_CHROMA_SITE_OFFSITE (1<<27)
                                         ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3409: FILE: drivers/video/msm/mdp_hw.h:373:
+#define PPP_OP_BG_CHROMA_SITE_OFFSITE (1<<27)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3412: FILE: drivers/video/msm/mdp_hw.h:376:
+#define PPP_DST_C0G_8BIT ((1<<0)|(1<<1))
                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3412: FILE: drivers/video/msm/mdp_hw.h:376:
+#define PPP_DST_C0G_8BIT ((1<<0)|(1<<1))
                                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3412: FILE: drivers/video/msm/mdp_hw.h:376:
+#define PPP_DST_C0G_8BIT ((1<<0)|(1<<1))
                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3413: FILE: drivers/video/msm/mdp_hw.h:377:
+#define PPP_DST_C1B_8BIT ((1<<3)|(1<<2))
                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3413: FILE: drivers/video/msm/mdp_hw.h:377:
+#define PPP_DST_C1B_8BIT ((1<<3)|(1<<2))
                                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3413: FILE: drivers/video/msm/mdp_hw.h:377:
+#define PPP_DST_C1B_8BIT ((1<<3)|(1<<2))
                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3414: FILE: drivers/video/msm/mdp_hw.h:378:
+#define PPP_DST_C2R_8BIT ((1<<5)|(1<<4))
                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3414: FILE: drivers/video/msm/mdp_hw.h:378:
+#define PPP_DST_C2R_8BIT ((1<<5)|(1<<4))
                                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3414: FILE: drivers/video/msm/mdp_hw.h:378:
+#define PPP_DST_C2R_8BIT ((1<<5)|(1<<4))
                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3415: FILE: drivers/video/msm/mdp_hw.h:379:
+#define PPP_DST_C3A_8BIT ((1<<7)|(1<<6))
                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3415: FILE: drivers/video/msm/mdp_hw.h:379:
+#define PPP_DST_C3A_8BIT ((1<<7)|(1<<6))
                                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3415: FILE: drivers/video/msm/mdp_hw.h:379:
+#define PPP_DST_C3A_8BIT ((1<<7)|(1<<6))
                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3417: FILE: drivers/video/msm/mdp_hw.h:381:
+#define PPP_DST_C0G_6BIT (1<<1)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3417: FILE: drivers/video/msm/mdp_hw.h:381:
+#define PPP_DST_C0G_6BIT (1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3418: FILE: drivers/video/msm/mdp_hw.h:382:
+#define PPP_DST_C1B_6BIT (1<<3)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3418: FILE: drivers/video/msm/mdp_hw.h:382:
+#define PPP_DST_C1B_6BIT (1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3419: FILE: drivers/video/msm/mdp_hw.h:383:
+#define PPP_DST_C2R_6BIT (1<<5)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3419: FILE: drivers/video/msm/mdp_hw.h:383:
+#define PPP_DST_C2R_6BIT (1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3421: FILE: drivers/video/msm/mdp_hw.h:385:
+#define PPP_DST_C0G_5BIT (1<<0)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3421: FILE: drivers/video/msm/mdp_hw.h:385:
+#define PPP_DST_C0G_5BIT (1<<0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3422: FILE: drivers/video/msm/mdp_hw.h:386:
+#define PPP_DST_C1B_5BIT (1<<2)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3422: FILE: drivers/video/msm/mdp_hw.h:386:
+#define PPP_DST_C1B_5BIT (1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3423: FILE: drivers/video/msm/mdp_hw.h:387:
+#define PPP_DST_C2R_5BIT (1<<4)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3423: FILE: drivers/video/msm/mdp_hw.h:387:
+#define PPP_DST_C2R_5BIT (1<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3425: FILE: drivers/video/msm/mdp_hw.h:389:
+#define PPP_DST_C3A_8BIT ((1<<7)|(1<<6))
                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3425: FILE: drivers/video/msm/mdp_hw.h:389:
+#define PPP_DST_C3A_8BIT ((1<<7)|(1<<6))
                                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3425: FILE: drivers/video/msm/mdp_hw.h:389:
+#define PPP_DST_C3A_8BIT ((1<<7)|(1<<6))
                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3426: FILE: drivers/video/msm/mdp_hw.h:390:
+#define PPP_DST_C3ALPHA_EN (1<<8)
                              ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3426: FILE: drivers/video/msm/mdp_hw.h:390:
+#define PPP_DST_C3ALPHA_EN (1<<8)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3428: FILE: drivers/video/msm/mdp_hw.h:392:
+#define PPP_DST_INTERLVD_2COMPONENTS (1<<9)
                                        ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3428: FILE: drivers/video/msm/mdp_hw.h:392:
+#define PPP_DST_INTERLVD_2COMPONENTS (1<<9)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3429: FILE: drivers/video/msm/mdp_hw.h:393:
+#define PPP_DST_INTERLVD_3COMPONENTS (1<<10)
                                        ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3429: FILE: drivers/video/msm/mdp_hw.h:393:
+#define PPP_DST_INTERLVD_3COMPONENTS (1<<10)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3430: FILE: drivers/video/msm/mdp_hw.h:394:
+#define PPP_DST_INTERLVD_4COMPONENTS ((1<<10)|(1<<9))
                                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3430: FILE: drivers/video/msm/mdp_hw.h:394:
+#define PPP_DST_INTERLVD_4COMPONENTS ((1<<10)|(1<<9))
                                              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3430: FILE: drivers/video/msm/mdp_hw.h:394:
+#define PPP_DST_INTERLVD_4COMPONENTS ((1<<10)|(1<<9))
                                                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3431: FILE: drivers/video/msm/mdp_hw.h:395:
+#define PPP_DST_INTERLVD_6COMPONENTS ((1<<11)|(1<<9))
                                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3431: FILE: drivers/video/msm/mdp_hw.h:395:
+#define PPP_DST_INTERLVD_6COMPONENTS ((1<<11)|(1<<9))
                                              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3431: FILE: drivers/video/msm/mdp_hw.h:395:
+#define PPP_DST_INTERLVD_6COMPONENTS ((1<<11)|(1<<9))
                                                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3434: FILE: drivers/video/msm/mdp_hw.h:398:
+#define PPP_DST_PACK_TIGHT (1<<13)
                              ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3434: FILE: drivers/video/msm/mdp_hw.h:398:
+#define PPP_DST_PACK_TIGHT (1<<13)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3436: FILE: drivers/video/msm/mdp_hw.h:400:
+#define PPP_DST_PACK_ALIGN_MSB (1<<14)
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3436: FILE: drivers/video/msm/mdp_hw.h:400:
+#define PPP_DST_PACK_ALIGN_MSB (1<<14)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3439: FILE: drivers/video/msm/mdp_hw.h:403:
+#define PPP_DST_OUT_SEL_MDDI (1<<15)
                                ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3439: FILE: drivers/video/msm/mdp_hw.h:403:
+#define PPP_DST_OUT_SEL_MDDI (1<<15)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3441: FILE: drivers/video/msm/mdp_hw.h:405:
+#define PPP_DST_BPP_2BYTES (1<<16)
                              ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3441: FILE: drivers/video/msm/mdp_hw.h:405:
+#define PPP_DST_BPP_2BYTES (1<<16)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3442: FILE: drivers/video/msm/mdp_hw.h:406:
+#define PPP_DST_BPP_3BYTES (1<<17)
                              ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3442: FILE: drivers/video/msm/mdp_hw.h:406:
+#define PPP_DST_BPP_3BYTES (1<<17)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3443: FILE: drivers/video/msm/mdp_hw.h:407:
+#define PPP_DST_BPP_4BYTES ((1<<17)|(1<<16))
                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3443: FILE: drivers/video/msm/mdp_hw.h:407:
+#define PPP_DST_BPP_4BYTES ((1<<17)|(1<<16))
                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3443: FILE: drivers/video/msm/mdp_hw.h:407:
+#define PPP_DST_BPP_4BYTES ((1<<17)|(1<<16))
                                       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3446: FILE: drivers/video/msm/mdp_hw.h:410:
+#define PPP_DST_PLANE_PLANAR (1<<18)
                                ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3446: FILE: drivers/video/msm/mdp_hw.h:410:
+#define PPP_DST_PLANE_PLANAR (1<<18)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3447: FILE: drivers/video/msm/mdp_hw.h:411:
+#define PPP_DST_PLANE_PSEUDOPLNR (1<<19)
                                    ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3447: FILE: drivers/video/msm/mdp_hw.h:411:
+#define PPP_DST_PLANE_PSEUDOPLNR (1<<19)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3449: FILE: drivers/video/msm/mdp_hw.h:413:
+#define PPP_DST_TO_TV (1<<20)
                         ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3449: FILE: drivers/video/msm/mdp_hw.h:413:
+#define PPP_DST_TO_TV (1<<20)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3452: FILE: drivers/video/msm/mdp_hw.h:416:
+#define PPP_DST_MDDI_SECONDARY (1<<21)
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3452: FILE: drivers/video/msm/mdp_hw.h:416:
+#define PPP_DST_MDDI_SECONDARY (1<<21)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3453: FILE: drivers/video/msm/mdp_hw.h:417:
+#define PPP_DST_MDDI_EXTERNAL (1<<22)
                                 ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3453: FILE: drivers/video/msm/mdp_hw.h:417:
+#define PPP_DST_MDDI_EXTERNAL (1<<22)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3456: FILE: drivers/video/msm/mdp_hw.h:420:
+#define PPP_CFG_MDP_RGB_565(dir)	PPP_##dir##_C2R_5BIT | \
+					PPP_##dir##_C0G_6BIT | \
+					PPP_##dir##_C1B_5BIT | \
+					PPP_##dir##_BPP_2BYTES | \
+					PPP_##dir##_INTERLVD_3COMPONENTS | \
+					PPP_##dir##_PACK_TIGHT | \
+					PPP_##dir##_PACK_ALIGN_LSB | \
+					PPP_##dir##_PLANE_INTERLVD

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3465: FILE: drivers/video/msm/mdp_hw.h:429:
+#define PPP_CFG_MDP_RGB_888(dir)	PPP_##dir##_C2R_8BIT | \
+					PPP_##dir##_C0G_8BIT | \
+					PPP_##dir##_C1B_8BIT | \
+					PPP_##dir##_BPP_3BYTES | \
+					PPP_##dir##_INTERLVD_3COMPONENTS | \
+					PPP_##dir##_PACK_TIGHT | \
+					PPP_##dir##_PACK_ALIGN_LSB | \
+					PPP_##dir##_PLANE_INTERLVD

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3474: FILE: drivers/video/msm/mdp_hw.h:438:
+#define PPP_CFG_MDP_ARGB_8888(dir)	PPP_##dir##_C2R_8BIT | \
+					PPP_##dir##_C0G_8BIT | \
+					PPP_##dir##_C1B_8BIT | \
+					PPP_##dir##_C3A_8BIT | \
+					PPP_##dir##_C3ALPHA_EN | \
+					PPP_##dir##_BPP_4BYTES | \
+					PPP_##dir##_INTERLVD_4COMPONENTS | \
+					PPP_##dir##_PACK_TIGHT | \
+					PPP_##dir##_PACK_ALIGN_LSB | \
+					PPP_##dir##_PLANE_INTERLVD

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3489: FILE: drivers/video/msm/mdp_hw.h:453:
+#define PPP_CFG_MDP_Y_CBCR_H2V2(dir)	PPP_##dir##_C2R_8BIT | \
+					PPP_##dir##_C0G_8BIT | \
+					PPP_##dir##_C1B_8BIT | \
+					PPP_##dir##_C3A_8BIT | \
+					PPP_##dir##_BPP_2BYTES | \
+					PPP_##dir##_INTERLVD_2COMPONENTS | \
+					PPP_##dir##_PACK_TIGHT | \
+					PPP_##dir##_PACK_ALIGN_LSB | \
+					PPP_##dir##_PLANE_PSEUDOPLNR

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3501: FILE: drivers/video/msm/mdp_hw.h:465:
+#define PPP_CFG_MDP_YCRYCB_H2V1(dir)	PPP_##dir##_C2R_8BIT | \
+					PPP_##dir##_C0G_8BIT | \
+					PPP_##dir##_C1B_8BIT | \
+					PPP_##dir##_C3A_8BIT | \
+					PPP_##dir##_BPP_2BYTES | \
+					PPP_##dir##_INTERLVD_4COMPONENTS | \
+					PPP_##dir##_PACK_TIGHT | \
+					PPP_##dir##_PACK_ALIGN_LSB |\
+					PPP_##dir##_PLANE_INTERLVD

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3511: FILE: drivers/video/msm/mdp_hw.h:475:
+#define PPP_CFG_MDP_Y_CBCR_H2V1(dir)	PPP_##dir##_C2R_8BIT | \
+					PPP_##dir##_C0G_8BIT | \
+					PPP_##dir##_C1B_8BIT | \
+					PPP_##dir##_C3A_8BIT | \
+					PPP_##dir##_BPP_2BYTES |   \
+					PPP_##dir##_INTERLVD_2COMPONENTS |  \
+					PPP_##dir##_PACK_TIGHT | \
+					PPP_##dir##_PACK_ALIGN_LSB | \
+					PPP_##dir##_PLANE_PSEUDOPLNR

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dir' - possible side-effects?
#3568: FILE: drivers/video/msm/mdp_hw.h:532:
+#define PPP_ARRAY1(name, dir) \
+	[MDP_RGB_565] = PPP_##name##_MDP_RGB_565(dir),\
+	[MDP_RGB_888] = PPP_##name##_MDP_RGB_888(dir),\
+	[MDP_XRGB_8888] = PPP_##name##_MDP_XRGB_8888(dir),\
+	[MDP_ARGB_8888] = PPP_##name##_MDP_ARGB_8888(dir),\
+	[MDP_RGBA_8888] = PPP_##name##_MDP_RGBA_8888(dir),\
+	[MDP_BGRA_8888] = PPP_##name##_MDP_BGRA_8888(dir),\
+	[MDP_Y_CBCR_H2V1] = PPP_##name##_MDP_Y_CBCR_H2V1(dir),\
+	[MDP_Y_CBCR_H2V2] = PPP_##name##_MDP_Y_CBCR_H2V2(dir),\
+	[MDP_Y_CRCB_H2V1] = PPP_##name##_MDP_Y_CRCB_H2V1(dir),\
+	[MDP_Y_CRCB_H2V2] = PPP_##name##_MDP_Y_CRCB_H2V2(dir),\
+	[MDP_YCRYCB_H2V1] = PPP_##name##_MDP_YCRYCB_H2V1(dir)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'img' - possible side-effects?
#3581: FILE: drivers/video/msm/mdp_hw.h:545:
+#define IS_YCRCB(img) ((img == MDP_Y_CRCB_H2V2) | (img == MDP_Y_CBCR_H2V2) | \
+		       (img == MDP_Y_CRCB_H2V1) | (img == MDP_Y_CBCR_H2V1) | \
+		       (img == MDP_YCRYCB_H2V1))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'img' may be better as '(img)' to avoid precedence issues
#3581: FILE: drivers/video/msm/mdp_hw.h:545:
+#define IS_YCRCB(img) ((img == MDP_Y_CRCB_H2V2) | (img == MDP_Y_CBCR_H2V2) | \
+		       (img == MDP_Y_CRCB_H2V1) | (img == MDP_Y_CBCR_H2V1) | \
+		       (img == MDP_YCRYCB_H2V1))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'img' - possible side-effects?
#3584: FILE: drivers/video/msm/mdp_hw.h:548:
+#define IS_RGB(img) ((img == MDP_RGB_565) | (img == MDP_RGB_888) | \
+		     (img == MDP_ARGB_8888) | (img == MDP_RGBA_8888) | \
+		     (img == MDP_XRGB_8888) | (img == MDP_BGRA_8888))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'img' may be better as '(img)' to avoid precedence issues
#3584: FILE: drivers/video/msm/mdp_hw.h:548:
+#define IS_RGB(img) ((img == MDP_RGB_565) | (img == MDP_RGB_888) | \
+		     (img == MDP_ARGB_8888) | (img == MDP_RGBA_8888) | \
+		     (img == MDP_XRGB_8888) | (img == MDP_BGRA_8888))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'img' - possible side-effects?
#3587: FILE: drivers/video/msm/mdp_hw.h:551:
+#define HAS_ALPHA(img) ((img == MDP_ARGB_8888) | (img == MDP_RGBA_8888) | \
+		        (img == MDP_BGRA_8888))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'img' may be better as '(img)' to avoid precedence issues
#3587: FILE: drivers/video/msm/mdp_hw.h:551:
+#define HAS_ALPHA(img) ((img == MDP_ARGB_8888) | (img == MDP_RGBA_8888) | \
+		        (img == MDP_BGRA_8888))

ERROR:CODE_INDENT: code indent should use tabs where possible
#3588: FILE: drivers/video/msm/mdp_hw.h:552:
+^I^I        (img == MDP_BGRA_8888))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'img' - possible side-effects?
#3590: FILE: drivers/video/msm/mdp_hw.h:554:
+#define IS_PSEUDOPLNR(img) ((img == MDP_Y_CRCB_H2V2) | \
+			    (img == MDP_Y_CBCR_H2V2) | \
+			    (img == MDP_Y_CRCB_H2V1) | \
+			    (img == MDP_Y_CBCR_H2V1))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'img' may be better as '(img)' to avoid precedence issues
#3590: FILE: drivers/video/msm/mdp_hw.h:554:
+#define IS_PSEUDOPLNR(img) ((img == MDP_Y_CRCB_H2V2) | \
+			    (img == MDP_Y_CBCR_H2V2) | \
+			    (img == MDP_Y_CRCB_H2V1) | \
+			    (img == MDP_Y_CBCR_H2V1))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3622: FILE: drivers/video/msm/mdp_hw.h:586:
+#define DMA_DSTC0G_6BITS (1<<1)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3622: FILE: drivers/video/msm/mdp_hw.h:586:
+#define DMA_DSTC0G_6BITS (1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3623: FILE: drivers/video/msm/mdp_hw.h:587:
+#define DMA_DSTC1B_6BITS (1<<3)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3623: FILE: drivers/video/msm/mdp_hw.h:587:
+#define DMA_DSTC1B_6BITS (1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3624: FILE: drivers/video/msm/mdp_hw.h:588:
+#define DMA_DSTC2R_6BITS (1<<5)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3624: FILE: drivers/video/msm/mdp_hw.h:588:
+#define DMA_DSTC2R_6BITS (1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3625: FILE: drivers/video/msm/mdp_hw.h:589:
+#define DMA_DSTC0G_5BITS (1<<0)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3625: FILE: drivers/video/msm/mdp_hw.h:589:
+#define DMA_DSTC0G_5BITS (1<<0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3626: FILE: drivers/video/msm/mdp_hw.h:590:
+#define DMA_DSTC1B_5BITS (1<<2)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3626: FILE: drivers/video/msm/mdp_hw.h:590:
+#define DMA_DSTC1B_5BITS (1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3627: FILE: drivers/video/msm/mdp_hw.h:591:
+#define DMA_DSTC2R_5BITS (1<<4)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3627: FILE: drivers/video/msm/mdp_hw.h:591:
+#define DMA_DSTC2R_5BITS (1<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3629: FILE: drivers/video/msm/mdp_hw.h:593:
+#define DMA_PACK_TIGHT (1<<6)
                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3629: FILE: drivers/video/msm/mdp_hw.h:593:
+#define DMA_PACK_TIGHT (1<<6)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3632: FILE: drivers/video/msm/mdp_hw.h:596:
+#define DMA_PACK_ALIGN_MSB (1<<7)
                              ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3632: FILE: drivers/video/msm/mdp_hw.h:596:
+#define DMA_PACK_ALIGN_MSB (1<<7)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3634: FILE: drivers/video/msm/mdp_hw.h:598:
+	(MDP_GET_PACK_PATTERN(0, CLR_R, CLR_G, CLR_B, 2)<<8)
 	                                                ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3637: FILE: drivers/video/msm/mdp_hw.h:601:
+#define DMA_OUT_SEL_MDDI (1<<14)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3637: FILE: drivers/video/msm/mdp_hw.h:601:
+#define DMA_OUT_SEL_MDDI (1<<14)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3639: FILE: drivers/video/msm/mdp_hw.h:603:
+#define DMA_AHBM_LCD_SEL_SECONDARY (1<<15)
                                      ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3639: FILE: drivers/video/msm/mdp_hw.h:603:
+#define DMA_AHBM_LCD_SEL_SECONDARY (1<<15)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3640: FILE: drivers/video/msm/mdp_hw.h:604:
+#define DMA_IBUF_C3ALPHA_EN (1<<16)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3640: FILE: drivers/video/msm/mdp_hw.h:604:
+#define DMA_IBUF_C3ALPHA_EN (1<<16)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3641: FILE: drivers/video/msm/mdp_hw.h:605:
+#define DMA_DITHER_EN (1<<17)
                         ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3641: FILE: drivers/video/msm/mdp_hw.h:605:
+#define DMA_DITHER_EN (1<<17)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3644: FILE: drivers/video/msm/mdp_hw.h:608:
+#define DMA_MDDI_DMAOUT_LCD_SEL_SECONDARY (1<<18)
                                             ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3644: FILE: drivers/video/msm/mdp_hw.h:608:
+#define DMA_MDDI_DMAOUT_LCD_SEL_SECONDARY (1<<18)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3645: FILE: drivers/video/msm/mdp_hw.h:609:
+#define DMA_MDDI_DMAOUT_LCD_SEL_EXTERNAL (1<<19)
                                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3645: FILE: drivers/video/msm/mdp_hw.h:609:
+#define DMA_MDDI_DMAOUT_LCD_SEL_EXTERNAL (1<<19)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3647: FILE: drivers/video/msm/mdp_hw.h:611:
+#define DMA_IBUF_FORMAT_RGB565 (1<<20)
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3647: FILE: drivers/video/msm/mdp_hw.h:611:
+#define DMA_IBUF_FORMAT_RGB565 (1<<20)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3650: FILE: drivers/video/msm/mdp_hw.h:614:
+#define DMA_IBUF_NONCONTIGUOUS (1<<21)
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3650: FILE: drivers/video/msm/mdp_hw.h:614:
+#define DMA_IBUF_NONCONTIGUOUS (1<<21)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3664: FILE: drivers/video/msm/mdp_ppp.c:1:
+/* drivers/video/msm/mdp_ppp.c

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#3664: FILE: drivers/video/msm/mdp_ppp.c:1:
+/* drivers/video/msm/mdp_ppp.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3695: FILE: drivers/video/msm/mdp_ppp.c:32:
+	uint32_t src0;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3696: FILE: drivers/video/msm/mdp_ppp.c:33:
+	uint32_t src1;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3697: FILE: drivers/video/msm/mdp_ppp.c:34:
+	uint32_t dst0;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3698: FILE: drivers/video/msm/mdp_ppp.c:35:
+	uint32_t dst1;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3699: FILE: drivers/video/msm/mdp_ppp.c:36:
+	uint32_t src_cfg;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3700: FILE: drivers/video/msm/mdp_ppp.c:37:
+	uint32_t dst_cfg;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3701: FILE: drivers/video/msm/mdp_ppp.c:38:
+	uint32_t src_pack;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3702: FILE: drivers/video/msm/mdp_ppp.c:39:
+	uint32_t dst_pack;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3703: FILE: drivers/video/msm/mdp_ppp.c:40:
+	uint32_t src_rect;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3704: FILE: drivers/video/msm/mdp_ppp.c:41:
+	uint32_t dst_rect;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3705: FILE: drivers/video/msm/mdp_ppp.c:42:
+	uint32_t src_ystride;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3706: FILE: drivers/video/msm/mdp_ppp.c:43:
+	uint32_t dst_ystride;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3707: FILE: drivers/video/msm/mdp_ppp.c:44:
+	uint32_t op;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3708: FILE: drivers/video/msm/mdp_ppp.c:45:
+	uint32_t src_bpp;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3709: FILE: drivers/video/msm/mdp_ppp.c:46:
+	uint32_t dst_bpp;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3710: FILE: drivers/video/msm/mdp_ppp.c:47:
+	uint32_t edge;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3711: FILE: drivers/video/msm/mdp_ppp.c:48:
+	uint32_t phasex_init;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3712: FILE: drivers/video/msm/mdp_ppp.c:49:
+	uint32_t phasey_init;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3713: FILE: drivers/video/msm/mdp_ppp.c:50:
+	uint32_t phasex_step;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3714: FILE: drivers/video/msm/mdp_ppp.c:51:
+	uint32_t phasey_step;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3717: FILE: drivers/video/msm/mdp_ppp.c:54:
+static uint32_t pack_pattern[] = {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3721: FILE: drivers/video/msm/mdp_ppp.c:58:
+static uint32_t src_img_cfg[] = {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3725: FILE: drivers/video/msm/mdp_ppp.c:62:
+static uint32_t dst_img_cfg[] = {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3729: FILE: drivers/video/msm/mdp_ppp.c:66:
+static uint32_t bytes_per_pixel[] = {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3743: FILE: drivers/video/msm/mdp_ppp.c:80:
+static uint32_t dst_op_chroma[] = {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3747: FILE: drivers/video/msm/mdp_ppp.c:84:
+static uint32_t src_op_chroma[] = {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3751: FILE: drivers/video/msm/mdp_ppp.c:88:
+static uint32_t bg_op_chroma[] = {

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'value' may be better as '(value)' to avoid precedence issues
#3806: FILE: drivers/video/msm/mdp_ppp.c:143:
+#define GET_BIT_RANGE(value, high, low) \
+	(((1 << (high - low + 1)) - 1) & (value >> low))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'high' may be better as '(high)' to avoid precedence issues
#3806: FILE: drivers/video/msm/mdp_ppp.c:143:
+#define GET_BIT_RANGE(value, high, low) \
+	(((1 << (high - low + 1)) - 1) & (value >> low))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'low' - possible side-effects?
#3806: FILE: drivers/video/msm/mdp_ppp.c:143:
+#define GET_BIT_RANGE(value, high, low) \
+	(((1 << (high - low + 1)) - 1) & (value >> low))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'low' may be better as '(low)' to avoid precedence issues
#3806: FILE: drivers/video/msm/mdp_ppp.c:143:
+#define GET_BIT_RANGE(value, high, low) \
+	(((1 << (high - low + 1)) - 1) & (value >> low))

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3810: FILE: drivers/video/msm/mdp_ppp.c:147:
+	uint32_t transp = 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#3811: FILE: drivers/video/msm/mdp_ppp.c:148:
+	uint32_t transp = 0;
+	if (req->src.format == MDP_RGB_565) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3813: FILE: drivers/video/msm/mdp_ppp.c:150:
+		 * low end, convert RGB to RBG by switching low 2 components */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#3830: FILE: drivers/video/msm/mdp_ppp.c:167:
+}
+#undef GET_BIT_RANGE

WARNING:TYPO_SPELLING: 'transparancy' may be misspelled - perhaps 'transparency'?
#3838: FILE: drivers/video/msm/mdp_ppp.c:175:
+			/* use blended transparancy mode
 			               ^^^^^^^^^^^^

WARNING:REPEATED_WORD: Possible repeated word: 'blend'
#3840: FILE: drivers/video/msm/mdp_ppp.c:177:
+			 * pixel = (src == transp) ? dst : blend
+			 * blend is combo of blend_eq_sel and

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3841: FILE: drivers/video/msm/mdp_ppp.c:178:
+			 * blend_alpha_sel */

WARNING:TYPO_SPELLING: 'transparancy' may be misspelled - perhaps 'transparency'?
#3847: FILE: drivers/video/msm/mdp_ppp.c:184:
+			/* simple transparancy mode
 			          ^^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3848: FILE: drivers/video/msm/mdp_ppp.c:185:
+			 * pixel = (src == transp) ? dst : src */

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#3869: FILE: drivers/video/msm/mdp_ppp.c:206:
+#define ONE_HALF	(1LL << 32)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#3870: FILE: drivers/video/msm/mdp_ppp.c:207:
+#define ONE		(1LL << 33)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3876: FILE: drivers/video/msm/mdp_ppp.c:213:
+static int scale_params(uint32_t dim_in, uint32_t dim_out, uint32_t origin,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3877: FILE: drivers/video/msm/mdp_ppp.c:214:
+			uint32_t *phase_init, uint32_t *phase_step)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3880: FILE: drivers/video/msm/mdp_ppp.c:217:
+	 * to U3.29 at the end */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's64' over 'int64_t'
#3881: FILE: drivers/video/msm/mdp_ppp.c:218:
+	int64_t k1, k2, k3, k4, tmp;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#3882: FILE: drivers/video/msm/mdp_ppp.c:219:
+	uint64_t n, d, os, os_p, od, od_p, oreq;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3883: FILE: drivers/video/msm/mdp_ppp.c:220:
+	unsigned rpa = 0;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's64' over 'int64_t'
#3884: FILE: drivers/video/msm/mdp_ppp.c:221:
+	int64_t ip64, delta;

WARNING:LINE_SPACING: Missing a blank line after declarations
#3955: FILE: drivers/video/msm/mdp_ppp.c:292:
+	int i;
+	for (i = 0; i < len; i++)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3966: FILE: drivers/video/msm/mdp_ppp.c:303:
+static void get_edge_info(uint32_t src, uint32_t src_coord, uint32_t dst,

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#3966: FILE: drivers/video/msm/mdp_ppp.c:303:
+static void get_edge_info(uint32_t src, uint32_t src_coord, uint32_t dst,
+			  uint32_t *interp1, uint32_t *interp2,
+			  uint32_t *repeat1, uint32_t *repeat2) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3967: FILE: drivers/video/msm/mdp_ppp.c:304:
+			  uint32_t *interp1, uint32_t *interp2,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3968: FILE: drivers/video/msm/mdp_ppp.c:305:
+			  uint32_t *repeat1, uint32_t *repeat2) {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#4001: FILE: drivers/video/msm/mdp_ppp.c:338:
+	int32_t luma_interp[4];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#4002: FILE: drivers/video/msm/mdp_ppp.c:339:
+	int32_t luma_repeat[4];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#4003: FILE: drivers/video/msm/mdp_ppp.c:340:
+	int32_t chroma_interp[4];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#4004: FILE: drivers/video/msm/mdp_ppp.c:341:
+	int32_t chroma_bound[4];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#4005: FILE: drivers/video/msm/mdp_ppp.c:342:
+	int32_t chroma_repeat[4];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4006: FILE: drivers/video/msm/mdp_ppp.c:343:
+	uint32_t dst_w, dst_h;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4101: FILE: drivers/video/msm/mdp_ppp.c:438:
+	uint32_t phase_init_x, phase_init_y, phase_step_x, phase_step_y;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4102: FILE: drivers/video/msm/mdp_ppp.c:439:
+	uint32_t scale_factor_x, scale_factor_y;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4103: FILE: drivers/video/msm/mdp_ppp.c:440:
+	uint32_t downscale;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4104: FILE: drivers/video/msm/mdp_ppp.c:441:
+	uint32_t dst_w, dst_h;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'req->src_rect.w == dst_w'
#4113: FILE: drivers/video/msm/mdp_ppp.c:450:
+	if ((req->src_rect.w == dst_w)  && (req->src_rect.h == dst_h) &&
+	    !(req->flags & MDP_BLUR)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'req->src_rect.h == dst_h'
#4113: FILE: drivers/video/msm/mdp_ppp.c:450:
+	if ((req->src_rect.w == dst_w)  && (req->src_rect.h == dst_h) &&
+	    !(req->flags & MDP_BLUR)) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#4164: FILE: drivers/video/msm/mdp_ppp.c:501:
+
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4182: FILE: drivers/video/msm/mdp_ppp.c:519:
+
+

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'w' may be better as '(w)' to avoid precedence issues
#4183: FILE: drivers/video/msm/mdp_ppp.c:520:
+#define IMG_LEN(rect_h, w, rect_w, bpp) (((rect_h) * w) * bpp)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'bpp' may be better as '(bpp)' to avoid precedence issues
#4183: FILE: drivers/video/msm/mdp_ppp.c:520:
+#define IMG_LEN(rect_h, w, rect_w, bpp) (((rect_h) * w) * bpp)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'format' - possible side-effects?
#4185: FILE: drivers/video/msm/mdp_ppp.c:522:
+#define Y_TO_CRCB_RATIO(format) \
+	((format == MDP_Y_CBCR_H2V2 || format == MDP_Y_CRCB_H2V2) ?  2 :\
+	 (format == MDP_Y_CBCR_H2V1 || format == MDP_Y_CRCB_H2V1) ?  1 : 1)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'format' may be better as '(format)' to avoid precedence issues
#4185: FILE: drivers/video/msm/mdp_ppp.c:522:
+#define Y_TO_CRCB_RATIO(format) \
+	((format == MDP_Y_CBCR_H2V2 || format == MDP_Y_CRCB_H2V2) ?  2 :\
+	 (format == MDP_Y_CBCR_H2V1 || format == MDP_Y_CRCB_H2V1) ?  1 : 1)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4190: FILE: drivers/video/msm/mdp_ppp.c:527:
+		    uint32_t *len0, uint32_t *len1)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4194: FILE: drivers/video/msm/mdp_ppp.c:531:
+		*len1 = *len0/Y_TO_CRCB_RATIO(img->format);
 		             ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4207: FILE: drivers/video/msm/mdp_ppp.c:544:
+	uint32_t src0_len, src1_len, dst0_len, dst1_len;

WARNING:LINE_SPACING: Missing a blank line after declarations
#4208: FILE: drivers/video/msm/mdp_ppp.c:545:
+	uint32_t src0_len, src1_len, dst0_len, dst1_len;
+	get_len(&req->src, &req->src_rect, regs->src_bpp, &src0_len,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4209: FILE: drivers/video/msm/mdp_ppp.c:546:
+	get_len(&req->src, &req->src_rect, regs->src_bpp, &src0_len,
+		 &src1_len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4211: FILE: drivers/video/msm/mdp_ppp.c:548:
+	get_len(&req->dst, &req->dst_rect, regs->dst_bpp, &dst0_len,
+		 &dst1_len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4216: FILE: drivers/video/msm/mdp_ppp.c:553:
+		DLOG("invalid_src %x %x %lx %lx\n", regs->src0,
+		      src0_len, src_min_ok, src_max_ok);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4241: FILE: drivers/video/msm/mdp_ppp.c:578:
+
+

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4246: FILE: drivers/video/msm/mdp_ppp.c:583:
+	uint32_t src0_len, src1_len, dst0_len, dst1_len;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4267: FILE: drivers/video/msm/mdp_ppp.c:604:
+			    uint32_t base, uint32_t bpp, uint32_t cfg,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4268: FILE: drivers/video/msm/mdp_ppp.c:605:
+			    uint32_t *addr, uint32_t *ystride)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4270: FILE: drivers/video/msm/mdp_ppp.c:607:
+	uint32_t compress_v = Y_TO_CRCB_RATIO(img->format);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4271: FILE: drivers/video/msm/mdp_ppp.c:608:
+	uint32_t compress_h = 2;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4272: FILE: drivers/video/msm/mdp_ppp.c:609:
+	uint32_t  offset;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4305: FILE: drivers/video/msm/mdp_ppp.c:642:
+	mdp_writel(mdp, (req->alpha << 24) | (req->transp_mask & 0xffffff),
+	       PPP_ADDR_ALPHA_TRANSP);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4336: FILE: drivers/video/msm/mdp_ppp.c:673:
+		printk(KERN_ERR "mpd_ppp: img is of wrong format\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4344: FILE: drivers/video/msm/mdp_ppp.c:681:
+		printk(KERN_ERR "mpd_ppp: img rect is outside of img!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4380: FILE: drivers/video/msm/mdp_ppp.c:717:
+		printk(KERN_ERR "mpd_ppp: final src or dst location is "

WARNING:SPLIT_STRING: quoted string split across lines
#4381: FILE: drivers/video/msm/mdp_ppp.c:718:
+		printk(KERN_ERR "mpd_ppp: final src or dst location is "
+			"invalid, are you trying to make an image too large "

WARNING:SPLIT_STRING: quoted string split across lines
#4382: FILE: drivers/video/msm/mdp_ppp.c:719:
+			"invalid, are you trying to make an image too large "
+			"or to place it outside the screen?\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4394: FILE: drivers/video/msm/mdp_ppp.c:731:
+		printk(KERN_ERR "mpd_ppp: error computing scale for img.\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4420: FILE: drivers/video/msm/mdp_scale_tables.c:1:
+/* drivers/video/msm_fb/mdp_scale_tables.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#5192: FILE: drivers/video/msm/mdp_scale_tables.h:1:
+/* drivers/video/msm_fb/mdp_scale_tables.h

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5211: FILE: drivers/video/msm/mdp_scale_tables.h:20:
+	uint32_t reg;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5212: FILE: drivers/video/msm/mdp_scale_tables.h:21:
+	uint32_t val;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#5225: FILE: drivers/video/msm/mdp_scale_tables.h:34:
+extern struct mdp_table_entry* mdp_downscale_x_table[MDP_DOWNSCALE_MAX];

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#5226: FILE: drivers/video/msm/mdp_scale_tables.h:35:
+extern struct mdp_table_entry* mdp_downscale_y_table[MDP_DOWNSCALE_MAX];

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#5236: FILE: drivers/video/msm/msm_fb.c:1:
+/* drivers/video/msm/msm_fb.c

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#5236: FILE: drivers/video/msm/msm_fb.c:1:
+/* drivers/video/msm/msm_fb.c

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'mask' may be better as '(mask)' to avoid precedence issues
#5284: FILE: drivers/video/msm/msm_fb.c:49:
+#define DLOG(mask, fmt, args...) \
+do { \
+	if (msmfb_debug_mask & mask) \
+		printk(KERN_INFO "msmfb: "fmt, ##args); \
+} while (0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#5287: FILE: drivers/video/msm/msm_fb.c:52:
+		printk(KERN_INFO "msmfb: "fmt, ##args); \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR | S_IWGRP' are not preferred. Consider using octal permissions '0664'.
#5292: FILE: drivers/video/msm/msm_fb.c:57:
+		   S_IRUGO | S_IWUSR | S_IWGRP);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#5301: FILE: drivers/video/msm/msm_fb.c:66:
+	unsigned output_format;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#5302: FILE: drivers/video/msm/msm_fb.c:67:
+	unsigned yoffset;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#5303: FILE: drivers/video/msm/msm_fb.c:68:
+	unsigned frame_requested;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#5304: FILE: drivers/video/msm/msm_fb.c:69:
+	unsigned frame_done;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#5306: FILE: drivers/video/msm/msm_fb.c:71:
+	unsigned update_frame;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#5315: FILE: drivers/video/msm/msm_fb.c:80:
+	spinlock_t update_lock;

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#5316: FILE: drivers/video/msm/msm_fb.c:81:
+	struct mutex panel_init_lock;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5356: FILE: drivers/video/msm/msm_fb.c:121:
+	uint32_t x, y, w, h;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#5357: FILE: drivers/video/msm/msm_fb.c:122:
+	unsigned addr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5359: FILE: drivers/video/msm/msm_fb.c:124:
+	uint32_t yoffset;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5365: FILE: drivers/video/msm/msm_fb.c:130:
+	time_since_request = ktime_to_ns(ktime_sub(ktime_get(),
+			     msmfb->vsync_request_time));

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5367: FILE: drivers/video/msm/msm_fb.c:132:
+		uint32_t us;

WARNING:LINE_SPACING: Missing a blank line after declarations
#5368: FILE: drivers/video/msm/msm_fb.c:133:
+		uint32_t us;
+		us = do_div(time_since_request, NSEC_PER_MSEC) / NSEC_PER_USEC;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5369: FILE: drivers/video/msm/msm_fb.c:134:
+		printk(KERN_WARNING "msmfb_start_dma %lld.%03u ms after vsync "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'msmfb_start_dma', this function's name, in a string
#5369: FILE: drivers/video/msm/msm_fb.c:134:
+		printk(KERN_WARNING "msmfb_start_dma %lld.%03u ms after vsync "

WARNING:SPLIT_STRING: quoted string split across lines
#5370: FILE: drivers/video/msm/msm_fb.c:135:
+		printk(KERN_WARNING "msmfb_start_dma %lld.%03u ms after vsync "
+			"request\n", time_since_request, us);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#5392: FILE: drivers/video/msm/msm_fb.c:157:
+		printk(KERN_INFO "invalid update: %d %d %d "

WARNING:SPLIT_STRING: quoted string split across lines
#5393: FILE: drivers/video/msm/msm_fb.c:158:
+		printk(KERN_INFO "invalid update: %d %d %d "
+				"%d\n", x, y, w, h);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5430: FILE: drivers/video/msm/msm_fb.c:195:
+			     uint32_t eright, uint32_t ebottom,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5431: FILE: drivers/video/msm/msm_fb.c:196:
+			     uint32_t yoffset, int pan_display)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5440: FILE: drivers/video/msm/msm_fb.c:205:
+	DLOG(SHOW_UPDATES, "update %d %d %d %d %d %d\n",
+		left, top, eright, ebottom, yoffset, pan_display);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5445: FILE: drivers/video/msm/msm_fb.c:210:
+	 * drawing otherwise return */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5451: FILE: drivers/video/msm/msm_fb.c:216:
+			wait_event_interruptible_timeout(msmfb->frame_wq,
+				msmfb->sleeping != SLEEPING, HZ/10);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#5451: FILE: drivers/video/msm/msm_fb.c:216:
+				msmfb->sleeping != SLEEPING, HZ/10);
 				                               ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#5460: FILE: drivers/video/msm/msm_fb.c:225:
+		int ret;
+		spin_unlock_irqrestore(&msmfb->update_lock, irq_flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5462: FILE: drivers/video/msm/msm_fb.c:227:
+		ret = wait_event_interruptible_timeout(msmfb->frame_wq,
+			msmfb->frame_done == msmfb->frame_requested &&

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sleeping == AWAKE'
#5466: FILE: drivers/video/msm/msm_fb.c:231:
+			if (retry && panel->request_vsync &&
+			    (sleeping == AWAKE)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5471: FILE: drivers/video/msm/msm_fb.c:236:
+				printk(KERN_WARNING "msmfb_pan_display timeout "

WARNING:SPLIT_STRING: quoted string split across lines
#5472: FILE: drivers/video/msm/msm_fb.c:237:
+				printk(KERN_WARNING "msmfb_pan_display timeout "
+					"rerequest vsync\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5474: FILE: drivers/video/msm/msm_fb.c:239:
+				printk(KERN_WARNING "msmfb_pan_display timeout "

WARNING:SPLIT_STRING: quoted string split across lines
#5475: FILE: drivers/video/msm/msm_fb.c:240:
+				printk(KERN_WARNING "msmfb_pan_display timeout "
+					"waiting for frame start, %d %d\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5484: FILE: drivers/video/msm/msm_fb.c:249:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5487: FILE: drivers/video/msm/msm_fb.c:252:
+	 * first full update on resume, set the sleeping state */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5510: FILE: drivers/video/msm/msm_fb.c:275:
+	DLOG(SHOW_UPDATES, "update queued %d %d %d %d %d\n",
+		msmfb->update_info.left, msmfb->update_info.top,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5516: FILE: drivers/video/msm/msm_fb.c:281:
+	 * for 16 ms (long enough for the dma to panel) and then begin dma */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sleeping == AWAKE'
#5518: FILE: drivers/video/msm/msm_fb.c:283:
+	if (panel->request_vsync && (sleeping == AWAKE)) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#5523: FILE: drivers/video/msm/msm_fb.c:288:
+				      ktime_set(0, NSEC_PER_SEC/60),
 				                               ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5530: FILE: drivers/video/msm/msm_fb.c:295:
+			 uint32_t eright, uint32_t ebottom)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#5546: FILE: drivers/video/msm/msm_fb.c:311:
+			printk(KERN_INFO "msmfb: panel unblank failed,"

WARNING:SPLIT_STRING: quoted string split across lines
#5547: FILE: drivers/video/msm/msm_fb.c:312:
+			printk(KERN_INFO "msmfb: panel unblank failed,"
+			       "not starting drawing\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5559: FILE: drivers/video/msm/msm_fb.c:324:
+
+

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#5562: FILE: drivers/video/msm/msm_fb.c:327:
+	if ((var->xres != info->var.xres) ||
[...]
+		 return -EINVAL;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'var->xres != info->var.xres'
#5562: FILE: drivers/video/msm/msm_fb.c:327:
+	if ((var->xres != info->var.xres) ||
+	    (var->yres != info->var.yres) ||
+	    (var->xres_virtual != info->var.xres_virtual) ||
+	    (var->yres_virtual != info->var.yres_virtual) ||
+	    (var->xoffset != info->var.xoffset) ||
+	    (var->bits_per_pixel != info->var.bits_per_pixel) ||
+	    (var->grayscale != info->var.grayscale))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'var->yres != info->var.yres'
#5562: FILE: drivers/video/msm/msm_fb.c:327:
+	if ((var->xres != info->var.xres) ||
+	    (var->yres != info->var.yres) ||
+	    (var->xres_virtual != info->var.xres_virtual) ||
+	    (var->yres_virtual != info->var.yres_virtual) ||
+	    (var->xoffset != info->var.xoffset) ||
+	    (var->bits_per_pixel != info->var.bits_per_pixel) ||
+	    (var->grayscale != info->var.grayscale))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'var->xres_virtual != info->var.xres_virtual'
#5562: FILE: drivers/video/msm/msm_fb.c:327:
+	if ((var->xres != info->var.xres) ||
+	    (var->yres != info->var.yres) ||
+	    (var->xres_virtual != info->var.xres_virtual) ||
+	    (var->yres_virtual != info->var.yres_virtual) ||
+	    (var->xoffset != info->var.xoffset) ||
+	    (var->bits_per_pixel != info->var.bits_per_pixel) ||
+	    (var->grayscale != info->var.grayscale))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'var->yres_virtual != info->var.yres_virtual'
#5562: FILE: drivers/video/msm/msm_fb.c:327:
+	if ((var->xres != info->var.xres) ||
+	    (var->yres != info->var.yres) ||
+	    (var->xres_virtual != info->var.xres_virtual) ||
+	    (var->yres_virtual != info->var.yres_virtual) ||
+	    (var->xoffset != info->var.xoffset) ||
+	    (var->bits_per_pixel != info->var.bits_per_pixel) ||
+	    (var->grayscale != info->var.grayscale))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'var->xoffset != info->var.xoffset'
#5562: FILE: drivers/video/msm/msm_fb.c:327:
+	if ((var->xres != info->var.xres) ||
+	    (var->yres != info->var.yres) ||
+	    (var->xres_virtual != info->var.xres_virtual) ||
+	    (var->yres_virtual != info->var.yres_virtual) ||
+	    (var->xoffset != info->var.xoffset) ||
+	    (var->bits_per_pixel != info->var.bits_per_pixel) ||
+	    (var->grayscale != info->var.grayscale))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'var->bits_per_pixel != info->var.bits_per_pixel'
#5562: FILE: drivers/video/msm/msm_fb.c:327:
+	if ((var->xres != info->var.xres) ||
+	    (var->yres != info->var.yres) ||
+	    (var->xres_virtual != info->var.xres_virtual) ||
+	    (var->yres_virtual != info->var.yres_virtual) ||
+	    (var->xoffset != info->var.xoffset) ||
+	    (var->bits_per_pixel != info->var.bits_per_pixel) ||
+	    (var->grayscale != info->var.grayscale))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'var->grayscale != info->var.grayscale'
#5562: FILE: drivers/video/msm/msm_fb.c:327:
+	if ((var->xres != info->var.xres) ||
+	    (var->yres != info->var.yres) ||
+	    (var->xres_virtual != info->var.xres_virtual) ||
+	    (var->yres_virtual != info->var.yres_virtual) ||
+	    (var->xoffset != info->var.xoffset) ||
+	    (var->bits_per_pixel != info->var.bits_per_pixel) ||
+	    (var->grayscale != info->var.grayscale))

WARNING:TABSTOP: Statements should start on a tabstop
#5569: FILE: drivers/video/msm/msm_fb.c:334:
+		 return -EINVAL;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'var->reserved[0] == 0x54445055'
#5579: FILE: drivers/video/msm/msm_fb.c:344:
+	if ((panel->caps & MSMFB_CAP_PARTIAL_UPDATES) &&
+	    (var->reserved[0] == 0x54445055)) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5613: FILE: drivers/video/msm/msm_fb.c:378:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5637: FILE: drivers/video/msm/msm_fb.c:402:
+
+

CHECK:UNCOMMENTED_DEFINITION: DEFINE_MUTEX definition without comment
#5638: FILE: drivers/video/msm/msm_fb.c:403:
+DEFINE_MUTEX(mdp_ppp_lock);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#5655: FILE: drivers/video/msm/msm_fb.c:420:
+			printk(KERN_INFO "msmfb unknown ioctl: %d\n", cmd);

WARNING:CONST_STRUCT: struct fb_ops should normally be const
#5661: FILE: drivers/video/msm/msm_fb.c:426:
+static struct fb_ops msmfb_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#5673: FILE: drivers/video/msm/msm_fb.c:438:
+static unsigned PP[16];

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5675: FILE: drivers/video/msm/msm_fb.c:440:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5746: FILE: drivers/video/msm/msm_fb.c:511:
+		printk(KERN_ERR "allocated resource is too small for "

WARNING:SPLIT_STRING: quoted string split across lines
#5747: FILE: drivers/video/msm/msm_fb.c:512:
+		printk(KERN_ERR "allocated resource is too small for "
+				"fb\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5755: FILE: drivers/video/msm/msm_fb.c:520:
+		printk(KERN_ERR "msmfb: cannot allocate fbram!\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'msmfb_probe', this function's name, in a string
#5770: FILE: drivers/video/msm/msm_fb.c:535:
+		pr_err("msmfb_probe: no platform data\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'msmfb_probe', this function's name, in a string
#5774: FILE: drivers/video/msm/msm_fb.c:539:
+		pr_err("msmfb_probe: no fb_data\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!msmfb->resume_workqueue"
#5797: FILE: drivers/video/msm/msm_fb.c:562:
+	if (msmfb->resume_workqueue == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5798: FILE: drivers/video/msm/msm_fb.c:563:
+		printk(KERN_ERR "failed to create panel_on workqueue\n");

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#5803: FILE: drivers/video/msm/msm_fb.c:568:
+	msmfb->black = kzalloc(msmfb->fb->var.bits_per_pixel*msmfb->xres,
 	                                                    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#5806: FILE: drivers/video/msm/msm_fb.c:571:
+	printk(KERN_INFO "msmfb_probe() installing %d x %d panel\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'msmfb_probe', this function's name, in a string
#5806: FILE: drivers/video/msm/msm_fb.c:571:
+	printk(KERN_INFO "msmfb_probe() installing %d x %d panel\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5814: FILE: drivers/video/msm/msm_fb.c:579:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5840: FILE: drivers/video/msm/msm_fb.c:605:
+
+

WARNING:TYPO_SPELLING: 'mulitple' may be misspelled - perhaps 'multiple'?
#5844: FILE: drivers/video/msm/msm_fb.c:609:
+	/* might need locking if mulitple mdp devices */
 	                         ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5852: FILE: drivers/video/msm/msm_fb.c:617:
+static void msmfb_remove_mdp_device(struct device *dev,
+				struct class_interface *class_intf)

WARNING:TYPO_SPELLING: 'mulitple' may be misspelled - perhaps 'multiple'?
#5854: FILE: drivers/video/msm/msm_fb.c:619:
+	/* might need locking if mulitple mdp devices */
 	                         ^^^^^^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000103138.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 157 errors, 177 warnings, 601 checks, 5737 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000103138.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
