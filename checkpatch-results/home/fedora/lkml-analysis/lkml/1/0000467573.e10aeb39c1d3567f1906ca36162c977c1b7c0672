WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
Do preliminary verification of the ELF structure of a module.  This is used to

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#35: 
Signed-Off-By: David Howells <dhowells@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#54: FILE: init/Kconfig:556:
+config MODULE_VERIFY_ELF
+	bool "Module ELF structure verification"
+	depends on MODULES
+	help
+	  Check ELF structure of modules upon load
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#82: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#87: FILE: kernel/module-verify-elf.c:1:
+/* module-verify-elf.c: module ELF verifier

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#103: FILE: kernel/module-verify-elf.c:17:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#104: FILE: kernel/module-verify-elf.c:18:
+#define _debug(FMT, ...) printk(FMT, ##__VA_ARGS__)

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Ehdr>
#114: FILE: kernel/module-verify-elf.c:28:
+	const Elf_Ehdr *hdr = mvdata->hdr;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Shdr>
#115: FILE: kernel/module-verify-elf.c:29:
+	const Elf_Shdr *section, *section2, *secstop;

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Rela>
#116: FILE: kernel/module-verify-elf.c:30:
+	const Elf_Rela *relas, *rela, *relastop;

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Rel>
#117: FILE: kernel/module-verify-elf.c:31:
+	const Elf_Rel *rels, *rel, *relstop;

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Sym>
#118: FILE: kernel/module-verify-elf.c:32:
+	const Elf_Sym *symbol, *symstop;

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#126: FILE: kernel/module-verify-elf.c:40:
+#define elfcheck(X)							\
+do { if (unlikely(!(X))) { line = __LINE__; goto elfcheck_error; } } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#127: FILE: kernel/module-verify-elf.c:41:
+do { if (unlikely(!(X))) { line = __LINE__; goto elfcheck_error; } } while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#129: FILE: kernel/module-verify-elf.c:43:
+#define seccheck(X)							\
+do { if (unlikely(!(X))) { line = __LINE__; goto seccheck_error; } } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#130: FILE: kernel/module-verify-elf.c:44:
+do { if (unlikely(!(X))) { line = __LINE__; goto seccheck_error; } } while(0)

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#132: FILE: kernel/module-verify-elf.c:46:
+#define symcheck(X)							\
+do { if (unlikely(!(X))) { line = __LINE__; goto symcheck_error; } } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#133: FILE: kernel/module-verify-elf.c:47:
+do { if (unlikely(!(X))) { line = __LINE__; goto symcheck_error; } } while(0)

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#135: FILE: kernel/module-verify-elf.c:49:
+#define relcheck(X)							\
+do { if (unlikely(!(X))) { line = __LINE__; goto relcheck_error; } } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#136: FILE: kernel/module-verify-elf.c:50:
+do { if (unlikely(!(X))) { line = __LINE__; goto relcheck_error; } } while(0)

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#138: FILE: kernel/module-verify-elf.c:52:
+#define relacheck(X)							\
+do { if (unlikely(!(X))) { line = __LINE__; goto relacheck_error; } } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#139: FILE: kernel/module-verify-elf.c:53:
+do { if (unlikely(!(X))) { line = __LINE__; goto relacheck_error; } } while(0)

CHECK:SPACING: No space is necessary after a cast
#155: FILE: kernel/module-verify-elf.c:69:
+	tmp = (size_t) hdr->e_shentsize * (size_t) hdr->e_shnum;

CHECK:SPACING: No space is necessary after a cast
#206: FILE: kernel/module-verify-elf.c:120:
+		       (unsigned long) section->sh_offset);

WARNING:INDENTED_LABEL: labels should not be indented
#219: FILE: kernel/module-verify-elf.c:133:
+		more_rel_checks:

WARNING:INDENTED_LABEL: labels should not be indented
#229: FILE: kernel/module-verify-elf.c:143:
+		more_sec_checks:

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#231: FILE: kernel/module-verify-elf.c:145:
+			 * within the file */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LINE_SPACING: Missing a blank line after declarations
#247: FILE: kernel/module-verify-elf.c:161:
+		const char *secname;
+		tmp = sssize - section->sh_name;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "memchr"
#256: FILE: kernel/module-verify-elf.c:170:
+		elfcheck(memchr(mvdata->secstrings + last, 0, tmp) != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mvdata->symbols"
#266: FILE: kernel/module-verify-elf.c:180:
+				seccheck(mvdata->symbols == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mvdata->strings"
#279: FILE: kernel/module-verify-elf.c:193:
+				seccheck(mvdata->strings == NULL);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#282: FILE: kernel/module-verify-elf.c:196:
+				sssize = mvdata->nstrings = section->sh_size;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#290: FILE: kernel/module-verify-elf.c:204:
+		printk("Couldn't locate module symbol table\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#295: FILE: kernel/module-verify-elf.c:209:
+		printk("Couldn't locate module strings table\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "memchr"
#319: FILE: kernel/module-verify-elf.c:233:
+		elfcheck(memchr(mvdata->strings + last, 0, tmp) != NULL);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#358: FILE: kernel/module-verify-elf.c:272:
+
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#363: FILE: kernel/module-verify-elf.c:277:
+	printk("Verify ELF error (assertion %d)\n", line);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#367: FILE: kernel/module-verify-elf.c:281:
+	printk("Verify ELF error [sec %ld] (assertion %d)\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#372: FILE: kernel/module-verify-elf.c:286:
+	printk("Verify ELF error [sym %ld] (assertion %d)\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#377: FILE: kernel/module-verify-elf.c:291:
+	printk("Verify ELF error [sec %ld rel %ld] (assertion %d)\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#383: FILE: kernel/module-verify-elf.c:297:
+	printk("Verify ELF error [sec %ld rela %ld] (assertion %d)\n",

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#397: FILE: kernel/module-verify.c:1:
+/* module-verify.c: module verifier

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#429: FILE: kernel/module-verify.c:33:
+			printk("Module failed ELF checks\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#444: FILE: kernel/module-verify.h:1:
+/* module-verify.h: module verification definitions

WARNING:INCLUDE_LINUX: Use #include <linux/module.h> instead of <asm/module.h>
#456: FILE: kernel/module-verify.h:13:
+#include <asm/module.h>

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#476: FILE: kernel/module-verify.h:33:
+	uint8_t			xcsum;		/* checksum of bytes contributed to digest */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#477: FILE: kernel/module-verify.h:34:
+	uint8_t			csum;		/* checksum of bytes representing a section */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#483: FILE: kernel/module-verify.h:40:
+extern int module_verify(const Elf_Ehdr *hdr, size_t size);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#489: FILE: kernel/module-verify.h:46:
+extern int module_verify_elf(struct module_verify_data *mvdata);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000467573.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 27 warnings, 17 checks, 442 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000467573.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
