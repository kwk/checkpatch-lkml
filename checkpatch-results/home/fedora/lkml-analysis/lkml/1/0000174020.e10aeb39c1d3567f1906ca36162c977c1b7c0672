WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
Subject: [PATCH 1/4] [Target_Core_Mod/PERSISTENT_RESERVATION]: Change logic for all_tg_pt=[1,0]

WARNING:TYPO_SPELLING: 'recevied' may be misspelled - perhaps 'received'?
#55: 
        * For a given ALL_TG_PT=0 PR registration, a recevied PR reserve must
                                                     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: drivers/lio-core/target_core_pr.c:334:
+^Ipr_reg->pr_reg_tg_pt_lun = deve->se_lun; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#120: FILE: drivers/lio-core/target_core_pr.c:370:
+		if (!(strcmp(pr_reg->pr_reg_nacl->initiatorname,
+				nacl->initiatorname))) {

WARNING:TYPO_SPELLING: 'recevied' may be misspelled - perhaps 'received'?
#128: FILE: drivers/lio-core/target_core_pr.c:590:
+	 * For a given ALL_TG_PT=0 PR registration, a recevied PR reserve must
 	                                              ^^^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pr_reg->pr_reg_tg_pt_lun != se_lun'
#131: FILE: drivers/lio-core/target_core_pr.c:593:
+	if (!(pr_reg->pr_reg_all_tg_pt) &&
+	     (pr_reg->pr_reg_tg_pt_lun != se_lun)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#132: FILE: drivers/lio-core/target_core_pr.c:594:
+	if (!(pr_reg->pr_reg_all_tg_pt) &&
+	     (pr_reg->pr_reg_tg_pt_lun != se_lun)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#133: FILE: drivers/lio-core/target_core_pr.c:595:
+		printk(KERN_ERR "SPC-3 PR: Unable to handle RESERVE because"

WARNING:SPLIT_STRING: quoted string split across lines
#134: FILE: drivers/lio-core/target_core_pr.c:596:
+		printk(KERN_ERR "SPC-3 PR: Unable to handle RESERVE because"
+			" ALL_TG_PT=0 and RESERVE was not received on same "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#135: FILE: drivers/lio-core/target_core_pr.c:597:
+			" ALL_TG_PT=0 and RESERVE was not received on same "
+			" target port as REGISTER\n");

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#136: FILE: drivers/lio-core/target_core_pr.c:598:
+		return(PYX_TRANSPORT_RESERVATION_CONFLICT);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000174020.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 6 warnings, 3 checks, 82 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000174020.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
