ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#58: FILE: linux-core/Makefile.kernel:12:
drm_dma.o drm_drawable.o \

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#212: FILE: linux-core/drm_bufs.c:60:
+		     ((map->type == _DRM_SHM) && (map->flags&_DRM_CONTAINS_LOCK)))) {
 		                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#221: FILE: linux-core/drm_bufs.c:420:
+		dev->sigdata.lock = dev->lock.hw_lock = NULL;   /* SHM removed */

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:NEW_TYPEDEFS: do not add new typedefs
#234: FILE: linux-core/drm_compat.h:64:
+typedef _Bool bool;

CHECK:CAMELCASE: Avoid CamelCase: <_Bool>
#234: FILE: linux-core/drm_compat.h:64:
+typedef _Bool bool;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: linux-core/drm_compat.h:66:
+        false   = 0,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: linux-core/drm_compat.h:66:
+        false   = 0,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: linux-core/drm_compat.h:67:
+        true    = 1$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: linux-core/drm_compat.h:67:
+        true    = 1$

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#244: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#249: FILE: linux-core/drm_crtc.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#255: FILE: linux-core/drm_crtc.c:7:
+ * Permission to use, copy, modify, distribute, and sell this software $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#257: FILE: linux-core/drm_crtc.c:8:
+ * documentation for any purpose is hereby granted without fee, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#259: FILE: linux-core/drm_crtc.c:9:
+ * the above copyright notice appear in all copies and that both that $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#261: FILE: linux-core/drm_crtc.c:10:
+ * notice and this permission notice appear in supporting $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#264: FILE: linux-core/drm_crtc.c:12:
+ * publicity pertaining to distribution of the software without $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#266: FILE: linux-core/drm_crtc.c:13:
+ * written prior permission.  The copyright holders make no $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#268: FILE: linux-core/drm_crtc.c:14:
+ * about the suitability of this software for any purpose.  It is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#272: FILE: linux-core/drm_crtc.c:17:
+ * THE COPYRIGHT HOLDERS DISCLAIM ALL WARRANTIES WITH REGARD TO THIS $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#274: FILE: linux-core/drm_crtc.c:18:
+ * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#276: FILE: linux-core/drm_crtc.c:19:
+ * EVENT SHALL THE COPYRIGHT HOLDERS BE LIABLE FOR ANY SPECIAL, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#278: FILE: linux-core/drm_crtc.c:20:
+ * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#280: FILE: linux-core/drm_crtc.c:21:
+ * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#282: FILE: linux-core/drm_crtc.c:22:
+ * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#303: FILE: linux-core/drm_crtc.c:42:
+ * Process context (either init or calling process).  Must take DRM $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#307: FILE: linux-core/drm_crtc.c:45:
+ * Create a unique identifier based on @ptr in @dev's identifier space.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#312: FILE: linux-core/drm_crtc.c:49:
+ * New unique (relative to other objects in @dev) integer identifier $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#332: FILE: linux-core/drm_crtc.c:68:
+^I}^I$

WARNING:TYPO_SPELLING: 'identifer' may be misspelled - perhaps 'identifier'?
#339: FILE: linux-core/drm_crtc.c:75:
+ * drm_idr_put - free an identifer
                          ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#358: FILE: linux-core/drm_crtc.c:94:
+ * Process context (either init or calling process).  Must take DRM $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#362: FILE: linux-core/drm_crtc.c:97:
+ * Creates a new framebuffer objects and adds it to @dev's DRM $

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*fb)...) over kzalloc(sizeof(struct drm_framebuffer)...)
#381: FILE: linux-core/drm_crtc.c:115:
+	fb = kzalloc(sizeof(struct drm_framebuffer), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:BRACES: braces {} are not necessary for single statement blocks
#382: FILE: linux-core/drm_crtc.c:116:
+	if (!fb) {
+
+		return NULL;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#383: FILE: linux-core/drm_crtc.c:117:
+	if (!fb) {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#386: FILE: linux-core/drm_crtc.c:120:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#403: FILE: linux-core/drm_crtc.c:137:
+ * Process context (either init or calling process).  Must take DRM $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#407: FILE: linux-core/drm_crtc.c:140:
+ * Scans all the CRTCs in @dev's mode_config.  If they're using @fb, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#437: FILE: linux-core/drm_crtc.c:169:
+ * Process context (either init or calling process).  Must take DRM $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#441: FILE: linux-core/drm_crtc.c:172:
+ * Creates a new CRTC object and adds it to @dev's mode_config $

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*crtc)...) over kzalloc(sizeof(struct drm_crtc)...)
#452: FILE: linux-core/drm_crtc.c:182:
+	crtc = kzalloc(sizeof(struct drm_crtc), GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#475: FILE: linux-core/drm_crtc.c:205:
+ * Process context (either init or calling process).  Must take DRM $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#479: FILE: linux-core/drm_crtc.c:208:
+ * Cleanup @crtc.  Calls @crtc's cleanup function, then removes @crtc $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#541: FILE: linux-core/drm_crtc.c:269:
+ * Based on @dev's mode_config layout, scan all the outputs and try to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#543: FILE: linux-core/drm_crtc.c:270:
+ * modes on them.  Modes will first be added to the output's $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#545: FILE: linux-core/drm_crtc.c:271:
+ * list, then culled (based on validity and the @maxX, @maxY $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#549: FILE: linux-core/drm_crtc.c:274:
+ * Intended to be used either at bootup time or when major $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#555: FILE: linux-core/drm_crtc.c:279:
+void drm_crtc_probe_output_modes(struct drm_device *dev, int maxX, int $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#561: FILE: linux-core/drm_crtc.c:284:
+^I//if (maxX == 0 || maxY == 0) $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#565: FILE: linux-core/drm_crtc.c:288:
+	list_for_each_entry(output, &dev->mode_config.output_list, head) {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#569: FILE: linux-core/drm_crtc.c:292:
+^I^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#580: FILE: linux-core/drm_crtc.c:303:
+		if (ret) {
+			drm_mode_output_list_update(output);
+		}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#589: FILE: linux-core/drm_crtc.c:312:
+				mode->status = (*output->funcs->mode_valid)(output,mode);
 				                                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#591: FILE: linux-core/drm_crtc.c:314:
+^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#592: FILE: linux-core/drm_crtc.c:315:
+		
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#611: FILE: linux-core/drm_crtc.c:334:
+			DRM_DEBUG("Adding standard 640x480 @ 60Hz to %s\n",
+								output->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#636: FILE: linux-core/drm_crtc.c:359:
+ * Try to set @mode on @crtc.  Give @crtc and its associated outputs a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#643: FILE: linux-core/drm_crtc.c:365:
+bool drm_crtc_set_mode(struct drm_crtc *crtc, struct drm_display_mode $

CHECK:CAMELCASE: Avoid CamelCase: <didLock>
#650: FILE: linux-core/drm_crtc.c:371:
+	bool didLock = false;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#658: FILE: linux-core/drm_crtc.c:379:
+	if (!crtc->enabled) {
+		return true;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#667: FILE: linux-core/drm_crtc.c:388:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#676: FILE: linux-core/drm_crtc.c:397:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#682: FILE: linux-core/drm_crtc.c:403:
+^I^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#682: FILE: linux-core/drm_crtc.c:403:
+	list_for_each_entry(output, &dev->mode_config.output_list, head) {
+		

ERROR:TRAILING_WHITESPACE: trailing whitespace
#685: FILE: linux-core/drm_crtc.c:406:
+^I^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#686: FILE: linux-core/drm_crtc.c:407:
+		if (!output->funcs->mode_fixup(output, mode, adjusted_mode)) {
+			goto done;
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#690: FILE: linux-core/drm_crtc.c:411:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#691: FILE: linux-core/drm_crtc.c:412:
+	if (!crtc->funcs->mode_fixup(crtc, mode, adjusted_mode)) {
+		goto done;
+	}

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#697: FILE: linux-core/drm_crtc.c:418:
+	list_for_each_entry(output, &dev->mode_config.output_list, head) {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#700: FILE: linux-core/drm_crtc.c:421:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#704: FILE: linux-core/drm_crtc.c:425:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#706: FILE: linux-core/drm_crtc.c:427:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#715: FILE: linux-core/drm_crtc.c:436:
+^I$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#721: FILE: linux-core/drm_crtc.c:442:
+#if 0 // TODO def RANDR_12_INTERFACE

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#723: FILE: linux-core/drm_crtc.c:444:
+				RRPostPendingProperties (output->randr_output);

CHECK:CAMELCASE: Avoid CamelCase: <RRPostPendingProperties>
#723: FILE: linux-core/drm_crtc.c:444:
+				RRPostPendingProperties (output->randr_output);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#727: FILE: linux-core/drm_crtc.c:448:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#741: FILE: linux-core/drm_crtc.c:462:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#743: FILE: linux-core/drm_crtc.c:464:
+		crtc->funcs->unlock (crtc);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#744: FILE: linux-core/drm_crtc.c:465:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#755: FILE: linux-core/drm_crtc.c:476:
+ * Each CRTC may have a desired mode associated with it.  This routine $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#757: FILE: linux-core/drm_crtc.c:477:
+ * walks @dev's mode_config and sets the desired mode on every CRTC.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#802: FILE: linux-core/drm_crtc.c:521:
+ * If an output or CRTC isn't part of @dev's mode_config, it can be $

CHECK:CAMELCASE: Avoid CamelCase: <DPMSModeOff>
#813: FILE: linux-core/drm_crtc.c:531:
+			(*output->funcs->dpms)(output, DPMSModeOff);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#821: FILE: linux-core/drm_crtc.c:539:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#823: FILE: linux-core/drm_crtc.c:541:
+ * drm_mode_probed_add - add a mode to the specified output's probed $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#829: FILE: linux-core/drm_crtc.c:546:
+ * Process context (either init or calling process).  Must take $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#832: FILE: linux-core/drm_crtc.c:548:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#850: FILE: linux-core/drm_crtc.c:566:
+ * Process context (either init or calling process).  Must take $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#853: FILE: linux-core/drm_crtc.c:568:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#856: FILE: linux-core/drm_crtc.c:571:
+void drm_mode_remove(struct drm_output *output, struct drm_display_mode $

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*output)...) over kzalloc(sizeof(struct drm_output)...)
#888: FILE: linux-core/drm_crtc.c:602:
+	output = kzalloc(sizeof(struct drm_output), GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#891: FILE: linux-core/drm_crtc.c:605:
+^I^I$

CHECK:CAMELCASE: Avoid CamelCase: <SubPixelUnknown>
#898: FILE: linux-core/drm_crtc.c:612:
+	output->subpixel_order = SubPixelUnknown;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#914: FILE: linux-core/drm_crtc.c:628:
+
+}

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*nmode)...) over kzalloc(sizeof(struct drm_display_mode)...)
#997: FILE: linux-core/drm_crtc.c:711:
+	nmode = kzalloc(sizeof(struct drm_display_mode), GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1015: FILE: linux-core/drm_crtc.c:729:
+void drm_mode_destroy(struct drm_device *dev, struct drm_display_mode $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1030: FILE: linux-core/drm_crtc.c:743:
+ * Initialize @dev's mode_config structure, used for tracking the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1053: FILE: linux-core/drm_crtc.c:765:
+ * Given @handle, lookup the buffer object in @dev and put it in the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1060: FILE: linux-core/drm_crtc.c:771:
+static int drm_get_buffer_object(drm_device_t *dev, struct $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1082: FILE: linux-core/drm_crtc.c:792:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1099: FILE: linux-core/drm_crtc.c:809:
+ * Setup @output with the parameters given, with its initial $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1103: FILE: linux-core/drm_crtc.c:812:
+static void drm_setup_output(struct drm_output *output, struct drm_crtc $

CHECK:BRACES: braces {} should be used on all arms of this statement
#1191: FILE: linux-core/drm_crtc.c:899:
+		if (!strncmp(output->name, "VGA", 3)) {
[...]
+		} else if (!strncmp(output->name, "TMDS", 4)) {
[...]
+		} else 	if (!strncmp(output->name, "LVDS", 3)) {
[...]
+		} else
[...]

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1197: FILE: linux-core/drm_crtc.c:905:
+^I^I} else ^Iif (!strncmp(output->name, "LVDS", 3)) {$

CHECK:BRACES: Unbalanced braces around else statement
#1200: FILE: linux-core/drm_crtc.c:908:
+		} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1240: FILE: linux-core/drm_crtc.c:948:
+ * Free up all the outputs and CRTCs associated with this DRM device, $

WARNING:TYPO_SPELLING: 'ot' may be misspelled - perhaps 'to'?
#1248: FILE: linux-core/drm_crtc.c:955:
+	struct drm_output *output, *ot;
 	                            ^^

WARNING:TYPO_SPELLING: 'ot' may be misspelled - perhaps 'to'?
#1251: FILE: linux-core/drm_crtc.c:958:
+	list_for_each_entry_safe(output, ot, &dev->mode_config.output_list, 
 	                                 ^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1251: FILE: linux-core/drm_crtc.c:958:
+^Ilist_for_each_entry_safe(output, ot, &dev->mode_config.output_list, $

WARNING:LINE_SPACING: Missing a blank line after declarations
#1251: FILE: linux-core/drm_crtc.c:958:
+	struct drm_framebuffer *fb, *fbt;
+	list_for_each_entry_safe(output, ot, &dev->mode_config.output_list, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1253: FILE: linux-core/drm_crtc.c:959:
+	list_for_each_entry_safe(output, ot, &dev->mode_config.output_list, 
+		drm_output_destroy(output);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1256: FILE: linux-core/drm_crtc.c:962:
+^Ilist_for_each_entry_safe(crtc, ct, &dev->mode_config.crtc_list, head) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1285: FILE: linux-core/drm_crtc.c:990:
+ * Setup a new configuration, provided by the user in @crtc_info, and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1292: FILE: linux-core/drm_crtc.c:996:
+int drm_crtc_set_config(struct drm_crtc *crtc, struct drm_mode_crtc $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1303: FILE: linux-core/drm_crtc.c:1005:
+^Isave_crtcs = kzalloc(dev->mode_config.num_crtc * sizeof(struct $

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#1303: FILE: linux-core/drm_crtc.c:1005:
+	save_crtcs = kzalloc(dev->mode_config.num_crtc * sizeof(struct 
drm_crtc *), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'crtc->mode.mode_id != new_mode->mode_id'
#1314: FILE: linux-core/drm_crtc.c:1015:
+	if (new_mode && (crtc->mode.mode_id != new_mode->mode_id))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "new_mode"
#1337: FILE: linux-core/drm_crtc.c:1038:
+		crtc->enabled = (new_mode != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "new_mode"
#1338: FILE: linux-core/drm_crtc.c:1039:
+		if (new_mode != NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1361: FILE: linux-core/drm_crtc.c:1062:
+ * drm_crtc_convert_to_umode - convert a drm_display_mode into a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1369: FILE: linux-core/drm_crtc.c:1069:
+ * Convert a drm_display_mode into a drm_mode_modeinfo structure to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1373: FILE: linux-core/drm_crtc.c:1072:
+void drm_crtc_convert_to_umode(struct drm_mode_modeinfo *out, struct $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1376: FILE: linux-core/drm_crtc.c:1074:
+{
+

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1392: FILE: linux-core/drm_crtc.c:1090:
+	out->name[DRM_DISPLAY_MODE_LEN-1] = 0;
 	                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1395: FILE: linux-core/drm_crtc.c:1093:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1395: FILE: linux-core/drm_crtc.c:1093:
+
+	

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1399: FILE: linux-core/drm_crtc.c:1097:
+ * @filp: file * from the ioctl
     ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1407: FILE: linux-core/drm_crtc.c:1105:
+ * them to the user, including CRTC, output and framebuffer $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1415: FILE: linux-core/drm_crtc.c:1112:
+int drm_mode_getresources(struct inode *inode, struct file *filp,
                                                             ^^^^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#1429: FILE: linux-core/drm_crtc.c:1126:
+	int mode_count= 0;
 	              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1434: FILE: linux-core/drm_crtc.c:1131:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1454: FILE: linux-core/drm_crtc.c:1151:
+^I^IDRM_DEBUG("probing modes %dx%d\n", dev->mode_config.max_width, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1456: FILE: linux-core/drm_crtc.c:1152:
+^I^Idrm_crtc_probe_output_modes(dev, dev->mode_config.max_width, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1456: FILE: linux-core/drm_crtc.c:1152:
+		DRM_DEBUG("probing modes %dx%d\n", dev->mode_config.max_width, 
+		drm_crtc_probe_output_modes(dev, dev->mode_config.max_width, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1457: FILE: linux-core/drm_crtc.c:1152:
+		DRM_DEBUG("probing modes %dx%d\n", dev->mode_config.max_width, 
dev->mode_config.max_height);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1458: FILE: linux-core/drm_crtc.c:1153:
+		drm_crtc_probe_output_modes(dev, dev->mode_config.max_width, 
+		mode_count = 0;

ERROR:SPACING: space required before the open brace '{'
#1481: FILE: linux-core/drm_crtc.c:1176:
+		list_for_each_entry(crtc, &dev->mode_config.crtc_list, head){

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1491: FILE: linux-core/drm_crtc.c:1186:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1497: FILE: linux-core/drm_crtc.c:1192:
+ ^I^I^IDRM_DEBUG("OUTPUT ID is %d\n", output->id);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1497: FILE: linux-core/drm_crtc.c:1192:
+ ^I^I^IDRM_DEBUG("OUTPUT ID is %d\n", output->id);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1497: FILE: linux-core/drm_crtc.c:1192:
+ ^I^I^IDRM_DEBUG("OUTPUT ID is %d\n", output->id);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1505: FILE: linux-core/drm_crtc.c:1200:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1513: FILE: linux-core/drm_crtc.c:1208:
+^I^I^I^Iif (copy_to_user(&card_res.modes[copied++], &u_mode, sizeof(struct $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1527: FILE: linux-core/drm_crtc.c:1221:
+^I$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1537: FILE: linux-core/drm_crtc.c:1231:
+ * @filp: file * from the ioctl
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1551: FILE: linux-core/drm_crtc.c:1245:
+int drm_mode_getcrtc(struct inode *inode, struct file *filp,
                                                        ^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'crtc->id != crtc_resp.crtc_id'
#1567: FILE: linux-core/drm_crtc.c:1261:
+	if (!crtc || (crtc->id != crtc_resp.crtc_id))

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1575: FILE: linux-core/drm_crtc.c:1269:
+	if (crtc->enabled) {
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1595: FILE: linux-core/drm_crtc.c:1289:
+ * @filp: file * from the ioctl
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1609: FILE: linux-core/drm_crtc.c:1303:
+int drm_mode_getoutput(struct inode *inode, struct file *filp,
                                                          ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1623: FILE: linux-core/drm_crtc.c:1317:
+^I^Ireturn -EFAULT;^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#1626: FILE: linux-core/drm_crtc.c:1320:
+	output= idr_find(&dev->mode_config.crtc_idr, out_resp.output);
 	      ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'output->id != out_resp.output'
#1627: FILE: linux-core/drm_crtc.c:1321:
+	if (!output || (output->id != out_resp.output))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1634: FILE: linux-core/drm_crtc.c:1328:
+	out_resp.name[DRM_OUTPUT_NAME_LEN-1] = 0;
 	                                 ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'out_resp.count_modes >= mode_count'
#1645: FILE: linux-core/drm_crtc.c:1339:
+	if ((out_resp.count_modes >= mode_count) && mode_count) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1666: FILE: linux-core/drm_crtc.c:1360:
+ * @filp: file * from the ioctl
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1680: FILE: linux-core/drm_crtc.c:1374:
+int drm_mode_setcrtc(struct inode *inode, struct file *filp,
                                                        ^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'crtc->id != crtc_req.crtc_id'
#1698: FILE: linux-core/drm_crtc.c:1392:
+	if (!crtc || (crtc->id != crtc_req.crtc_id)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1703: FILE: linux-core/drm_crtc.c:1397:
+	if (crtc_req.mode) {
[...]
+	} else
[...]

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1704: FILE: linux-core/drm_crtc.c:1398:
+	if (crtc_req.mode) {
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'fb->id != crtc_req.fb_id'
#1708: FILE: linux-core/drm_crtc.c:1402:
+			if (!fb || (fb->id != crtc_req.fb_id)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mode->mode_id != crtc_req.mode'
#1714: FILE: linux-core/drm_crtc.c:1408:
+		if (!mode || (mode->mode_id != crtc_req.mode)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1716: FILE: linux-core/drm_crtc.c:1410:
+^I^I^I$

CHECK:BRACES: Unbalanced braces around else statement
#1726: FILE: linux-core/drm_crtc.c:1420:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1735: FILE: linux-core/drm_crtc.c:1429:
+^I^IDRM_DEBUG("Count outputs is %d but no mode or fb set\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1737: FILE: linux-core/drm_crtc.c:1430:
+		DRM_DEBUG("Count outputs is %d but no mode or fb set\n", 
+		return -EINVAL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1742: FILE: linux-core/drm_crtc.c:1435:
+^I^Ioutput_set = kmalloc(crtc_req.count_outputs * sizeof(struct $

WARNING:LINE_SPACING: Missing a blank line after declarations
#1742: FILE: linux-core/drm_crtc.c:1435:
+		u32 out_id;
+		output_set = kmalloc(crtc_req.count_outputs * sizeof(struct 

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#1742: FILE: linux-core/drm_crtc.c:1435:
+		output_set = kmalloc(crtc_req.count_outputs * sizeof(struct 
drm_output *), GFP_KERNEL);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'out_id != output->id'
#1752: FILE: linux-core/drm_crtc.c:1444:
+			if (!output || (out_id != output->id)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1760: FILE: linux-core/drm_crtc.c:1452:
+^I^I$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1768: FILE: linux-core/drm_crtc.c:1460:
+ * @filp: file * from the ioctl
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1782: FILE: linux-core/drm_crtc.c:1474:
+int drm_mode_addfb(struct inode *inode, struct file *filp,
                                                      ^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'config->min_width > r.width'
#1797: FILE: linux-core/drm_crtc.c:1489:
+	if ((config->min_width > r.width) || (r.width > config->max_width)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'r.width > config->max_width'
#1797: FILE: linux-core/drm_crtc.c:1489:
+	if ((config->min_width > r.width) || (r.width > config->max_width)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1801: FILE: linux-core/drm_crtc.c:1493:
+^Iif ((config->min_height > r.height) || (r.height > $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'config->min_height > r.height'
#1801: FILE: linux-core/drm_crtc.c:1493:
+	if ((config->min_height > r.height) || (r.height > 
config->max_height)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'r.height > 
 onfig->max_height'
#1801: FILE: linux-core/drm_crtc.c:1493:
+	if ((config->min_height > r.height) || (r.height > 
config->max_height)) {

WARNING:TYPO_SPELLING: 'sufficently' may be misspelled - perhaps 'sufficiently'?
#1812: FILE: linux-core/drm_crtc.c:1503:
+	/* TODO check buffer is sufficently large */
 	                        ^^^^^^^^^^^

ERROR:SPACING: space required before the open parenthesis '('
#1816: FILE: linux-core/drm_crtc.c:1507:
+	if(!fb)

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#1817: FILE: linux-core/drm_crtc.c:1508:
+		return -EINVAL;;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1833: FILE: linux-core/drm_crtc.c:1524:
+		struct drm_crtc *crtc;
+		list_for_each_entry(crtc, &dev->mode_config.crtc_list, head) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1847: FILE: linux-core/drm_crtc.c:1538:
+ * @filp: file * from the ioctl
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1861: FILE: linux-core/drm_crtc.c:1552:
+int drm_mode_rmfb(struct inode *inode, struct file *filp,
                                                     ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1862: FILE: linux-core/drm_crtc.c:1553:
+int drm_mode_rmfb(struct inode *inode, struct file *filp,
+		   unsigned int cmd, unsigned long arg)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1867: FILE: linux-core/drm_crtc.c:1558:
+	uint32_t id = arg;

WARNING:TYPO_SPELLING: 'realy' may be misspelled - perhaps 'really'?
#1870: FILE: linux-core/drm_crtc.c:1561:
+	/* TODO check that we realy get a framebuffer back. */
 	                      ^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id != fb->id'
#1871: FILE: linux-core/drm_crtc.c:1562:
+	if (!fb || (id != fb->id)) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1890: FILE: linux-core/drm_crtc.c:1581:
+ * @filp: file * from the ioctl
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1904: FILE: linux-core/drm_crtc.c:1595:
+int drm_mode_getfb(struct inode *inode, struct file *filp,
                                                      ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1908: FILE: linux-core/drm_crtc.c:1599:
+^Idrm_device_t *dev = priv->head->dev;^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'r.buffer_id != fb->id'
#1917: FILE: linux-core/drm_crtc.c:1608:
+	if (!fb || (r.buffer_id != fb->id)) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1937: FILE: linux-core/drm_crtc.c:1628:
+ * @filp: file * from the ioctl
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1942: FILE: linux-core/drm_crtc.c:1633:
+ * Destroy all the FBs associated with @filp.
                                         ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1949: FILE: linux-core/drm_crtc.c:1640:
+void drm_fb_release(struct file *filp)
                                  ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1959: FILE: linux-core/drm_crtc.c:1650:
+^I^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1960: FILE: linux-core/drm_crtc.c:1651:
+		
+	}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1968: FILE: linux-core/drm_crtc.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1986: FILE: linux-core/drm_crtc.h:19:
+ * Note on terminology:  here, for brevity and convenience, we refer to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1988: FILE: linux-core/drm_crtc.h:20:
+ * control chips as 'CRTCs'.  They can control any type of output, VGA, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1990: FILE: linux-core/drm_crtc.h:21:
+ * DVI, etc.  And 'screen' refers to the whole of the visible display, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1997: FILE: linux-core/drm_crtc.h:27:
+    MODE_OK^I= 0,^I/* Mode OK */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1998: FILE: linux-core/drm_crtc.h:28:
+    MODE_HSYNC,^I^I/* hsync out of range */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1999: FILE: linux-core/drm_crtc.h:29:
+    MODE_VSYNC,^I^I/* vsync out of range */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2000: FILE: linux-core/drm_crtc.h:30:
+    MODE_H_ILLEGAL,^I/* mode has illegal horizontal timings */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2001: FILE: linux-core/drm_crtc.h:31:
+    MODE_V_ILLEGAL,^I/* mode has illegal horizontal timings */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2002: FILE: linux-core/drm_crtc.h:32:
+    MODE_BAD_WIDTH,^I/* requires an unsupported linepitch */$

WARNING:TYPO_SPELLING: 'maching' may be misspelled - perhaps 'machine'?
#2003: FILE: linux-core/drm_crtc.h:33:
+    MODE_NOMODE,	/* no mode with a maching name */
                 	                  ^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2003: FILE: linux-core/drm_crtc.h:33:
+    MODE_NOMODE,^I/* no mode with a maching name */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2004: FILE: linux-core/drm_crtc.h:34:
+    MODE_NO_INTERLACE,^I/* interlaced mode not supported */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2005: FILE: linux-core/drm_crtc.h:35:
+    MODE_NO_DBLESCAN,^I/* doublescan mode not supported */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2006: FILE: linux-core/drm_crtc.h:36:
+    MODE_NO_VSCAN,^I/* multiscan mode not supported */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2007: FILE: linux-core/drm_crtc.h:37:
+    MODE_MEM,^I^I/* insufficient video memory */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2008: FILE: linux-core/drm_crtc.h:38:
+    MODE_VIRTUAL_X,^I/* mode width too large for specified virtual size $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2008: FILE: linux-core/drm_crtc.h:38:
+    MODE_VIRTUAL_X,^I/* mode width too large for specified virtual size $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2010: FILE: linux-core/drm_crtc.h:39:
+    MODE_VIRTUAL_Y,^I/* mode height too large for specified virtual size $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2010: FILE: linux-core/drm_crtc.h:39:
+    MODE_VIRTUAL_X,	/* mode width too large for specified virtual size 
+    MODE_VIRTUAL_Y,	/* mode height too large for specified virtual size 

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2012: FILE: linux-core/drm_crtc.h:40:
+    MODE_VIRTUAL_Y,	/* mode height too large for specified virtual size 
+    MODE_MEM_VIRT,	/* insufficient video memory given virtual size */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2013: FILE: linux-core/drm_crtc.h:41:
+    MODE_NOCLOCK,^I/* no fixed clock available */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2014: FILE: linux-core/drm_crtc.h:42:
+    MODE_CLOCK_HIGH,^I/* clock required is too high */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2015: FILE: linux-core/drm_crtc.h:43:
+    MODE_CLOCK_LOW,^I/* clock required is too low */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2016: FILE: linux-core/drm_crtc.h:44:
+    MODE_CLOCK_RANGE,^I/* clock/mode isn't in a ClockRange */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2017: FILE: linux-core/drm_crtc.h:45:
+    MODE_BAD_HVALUE,^I/* horizontal timing was out of range */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2018: FILE: linux-core/drm_crtc.h:46:
+    MODE_BAD_VVALUE,^I/* vertical timing was out of range */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2019: FILE: linux-core/drm_crtc.h:47:
+    MODE_BAD_VSCAN,^I/* VScan value out of range */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2020: FILE: linux-core/drm_crtc.h:48:
+    MODE_HSYNC_NARROW,^I/* horizontal sync too narrow */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2021: FILE: linux-core/drm_crtc.h:49:
+    MODE_HSYNC_WIDE,^I/* horizontal sync too wide */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2022: FILE: linux-core/drm_crtc.h:50:
+    MODE_HBLANK_NARROW,^I/* horizontal blanking too narrow */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2023: FILE: linux-core/drm_crtc.h:51:
+    MODE_HBLANK_WIDE,^I/* horizontal blanking too wide */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2024: FILE: linux-core/drm_crtc.h:52:
+    MODE_VSYNC_NARROW,^I/* vertical sync too narrow */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2025: FILE: linux-core/drm_crtc.h:53:
+    MODE_VSYNC_WIDE,^I/* vertical sync too wide */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2026: FILE: linux-core/drm_crtc.h:54:
+    MODE_VBLANK_NARROW,^I/* vertical blanking too narrow */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2027: FILE: linux-core/drm_crtc.h:55:
+    MODE_VBLANK_WIDE,^I/* vertical blanking too wide */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2028: FILE: linux-core/drm_crtc.h:56:
+    MODE_PANEL,         /* exceeds panel dimensions */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2029: FILE: linux-core/drm_crtc.h:57:
+    MODE_INTERLACE_WIDTH, /* width too large for interlaced mode */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2030: FILE: linux-core/drm_crtc.h:58:
+    MODE_ONE_WIDTH,     /* only one width is supported */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2031: FILE: linux-core/drm_crtc.h:59:
+    MODE_ONE_HEIGHT,    /* only one height is supported */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2032: FILE: linux-core/drm_crtc.h:60:
+    MODE_ONE_SIZE,      /* only one resolution is supported */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2033: FILE: linux-core/drm_crtc.h:61:
+    MODE_NO_REDUCED,    /* monitor doesn't accept reduced blanking */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2034: FILE: linux-core/drm_crtc.h:62:
+    MODE_UNVERIFIED = -3, /* mode needs to reverified */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2035: FILE: linux-core/drm_crtc.h:63:
+    MODE_BAD = -2,^I/* unspecified reason */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2036: FILE: linux-core/drm_crtc.h:64:
+    MODE_ERROR^I= -1^I/* error condition */$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2039: FILE: linux-core/drm_crtc.h:67:
+#define DRM_MODE_TYPE_BUILTIN	(1<<0)
                              	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#2039: FILE: linux-core/drm_crtc.h:67:
+#define DRM_MODE_TYPE_BUILTIN	(1<<0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2040: FILE: linux-core/drm_crtc.h:68:
+#define DRM_MODE_TYPE_CLOCK_C	((1<<1) | DRM_MODE_TYPE_BUILTIN)
                              	   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2041: FILE: linux-core/drm_crtc.h:69:
+#define DRM_MODE_TYPE_CRTC_C	((1<<2) | DRM_MODE_TYPE_BUILTIN)
                             	   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2042: FILE: linux-core/drm_crtc.h:70:
+#define DRM_MODE_TYPE_PREFERRED	(1<<3)
                                	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#2042: FILE: linux-core/drm_crtc.h:70:
+#define DRM_MODE_TYPE_PREFERRED	(1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2043: FILE: linux-core/drm_crtc.h:71:
+#define DRM_MODE_TYPE_DEFAULT	(1<<4)
                              	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#2043: FILE: linux-core/drm_crtc.h:71:
+#define DRM_MODE_TYPE_DEFAULT	(1<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2044: FILE: linux-core/drm_crtc.h:72:
+#define DRM_MODE_TYPE_USERDEF	(1<<5)
                              	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#2044: FILE: linux-core/drm_crtc.h:72:
+#define DRM_MODE_TYPE_USERDEF	(1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2045: FILE: linux-core/drm_crtc.h:73:
+#define DRM_MODE_TYPE_DRIVER	(1<<6)
                             	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#2045: FILE: linux-core/drm_crtc.h:73:
+#define DRM_MODE_TYPE_DRIVER	(1<<6)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2050: FILE: linux-core/drm_crtc.h:78:
+#define DRM_MODE(nm, t, c, hd, hss, hse, ht, hsk, vd, vss, vse, vt, vs, $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2050: FILE: linux-core/drm_crtc.h:78:
+#define DRM_MODE(nm, t, c, hd, hss, hse, ht, hsk, vd, vss, vse, vt, vs, 

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2052: FILE: linux-core/drm_crtc.h:79:
+	.name = nm, .status = 0, .type = (t), .clock = (c), \

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2109: FILE: linux-core/drm_crtc.h:136:
+#define V_PHSYNC	(1<<0)
                 	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#2109: FILE: linux-core/drm_crtc.h:136:
+#define V_PHSYNC	(1<<0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2110: FILE: linux-core/drm_crtc.h:137:
+#define V_NHSYNC	(1<<1)
                 	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#2110: FILE: linux-core/drm_crtc.h:137:
+#define V_NHSYNC	(1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2111: FILE: linux-core/drm_crtc.h:138:
+#define V_PVSYNC	(1<<2)
                 	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#2111: FILE: linux-core/drm_crtc.h:138:
+#define V_PVSYNC	(1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2112: FILE: linux-core/drm_crtc.h:139:
+#define V_NVSYNC	(1<<3)
                 	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#2112: FILE: linux-core/drm_crtc.h:139:
+#define V_NVSYNC	(1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2113: FILE: linux-core/drm_crtc.h:140:
+#define V_INTERLACE	(1<<4)
                    	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#2113: FILE: linux-core/drm_crtc.h:140:
+#define V_INTERLACE	(1<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2114: FILE: linux-core/drm_crtc.h:141:
+#define V_DBLSCAN	(1<<5)
                  	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#2114: FILE: linux-core/drm_crtc.h:141:
+#define V_DBLSCAN	(1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2115: FILE: linux-core/drm_crtc.h:142:
+#define V_CSYNC		(1<<6)
                		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#2115: FILE: linux-core/drm_crtc.h:142:
+#define V_CSYNC		(1<<6)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2116: FILE: linux-core/drm_crtc.h:143:
+#define V_PCSYNC	(1<<7)
                 	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#2116: FILE: linux-core/drm_crtc.h:143:
+#define V_PCSYNC	(1<<7)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2117: FILE: linux-core/drm_crtc.h:144:
+#define V_NCSYNC	(1<<8)
                 	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#2117: FILE: linux-core/drm_crtc.h:144:
+#define V_NCSYNC	(1<<8)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2118: FILE: linux-core/drm_crtc.h:145:
+#define V_HSKEW		(1<<9) /* hskew provided */
                		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#2118: FILE: linux-core/drm_crtc.h:145:
+#define V_HSKEW		(1<<9) /* hskew provided */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2119: FILE: linux-core/drm_crtc.h:146:
+#define V_BCAST		(1<<10)
                		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#2119: FILE: linux-core/drm_crtc.h:146:
+#define V_BCAST		(1<<10)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2120: FILE: linux-core/drm_crtc.h:147:
+#define V_PIXMUX	(1<<11)
                 	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#2120: FILE: linux-core/drm_crtc.h:147:
+#define V_PIXMUX	(1<<11)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2121: FILE: linux-core/drm_crtc.h:148:
+#define V_DBLCLK	(1<<12)
                 	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#2121: FILE: linux-core/drm_crtc.h:148:
+#define V_DBLCLK	(1<<12)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2122: FILE: linux-core/drm_crtc.h:149:
+#define V_CLKDIV2	(1<<13)
                  	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#2122: FILE: linux-core/drm_crtc.h:149:
+#define V_CLKDIV2	(1<<13)

CHECK:CAMELCASE: Avoid CamelCase: <DPMSModeOn>
#2125: FILE: linux-core/drm_crtc.h:152:
+#define DPMSModeOn 0

CHECK:CAMELCASE: Avoid CamelCase: <DPMSModeStandby>
#2126: FILE: linux-core/drm_crtc.h:153:
+#define DPMSModeStandby 1

CHECK:CAMELCASE: Avoid CamelCase: <DPMSModeSuspend>
#2127: FILE: linux-core/drm_crtc.h:154:
+#define DPMSModeSuspend 2

CHECK:CAMELCASE: Avoid CamelCase: <SubPixelHorizontalRGB>
#2138: FILE: linux-core/drm_crtc.h:165:
+	SubPixelHorizontalRGB,

CHECK:CAMELCASE: Avoid CamelCase: <SubPixelHorizontalBGR>
#2139: FILE: linux-core/drm_crtc.h:166:
+	SubPixelHorizontalBGR,

CHECK:CAMELCASE: Avoid CamelCase: <SubPixelVerticalRGB>
#2140: FILE: linux-core/drm_crtc.h:167:
+	SubPixelVerticalRGB,

CHECK:CAMELCASE: Avoid CamelCase: <SubPixelVerticalBGR>
#2141: FILE: linux-core/drm_crtc.h:168:
+	SubPixelVerticalBGR,

CHECK:CAMELCASE: Avoid CamelCase: <SubPixelNone>
#2142: FILE: linux-core/drm_crtc.h:169:
+	SubPixelNone,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2146: FILE: linux-core/drm_crtc.h:173:
+ * Describes a given display (e.g. CRT or flat panel) and its $

ERROR:CODE_INDENT: code indent should use tabs where possible
#2160: FILE: linux-core/drm_crtc.h:186:
+        unsigned int width_mm;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2160: FILE: linux-core/drm_crtc.h:186:
+        unsigned int width_mm;$

WARNING:TYPO_SPELLING: 'redy' may be misspelled - perhaps 'ready'?
#2178: FILE: linux-core/drm_crtc.h:204:
+	unsigned short redx, redy;
 	                     ^^^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2217: FILE: linux-core/drm_crtc.h:243:
+};
+struct drm_crtc;

WARNING:TYPO_SPELLING: 'resore' may be misspelled - perhaps 'restore'?
#2224: FILE: linux-core/drm_crtc.h:250:
+ * @resore: restore CRTC state
     ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2235: FILE: linux-core/drm_crtc.h:261:
+ * The drm_crtc_funcs structure is the central CRTC management $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2237: FILE: linux-core/drm_crtc.h:262:
+ * in the DRM.  Each CRTC controls one or more outputs (note that the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2239: FILE: linux-core/drm_crtc.h:263:
+ * CRTC is simply historical, a CRTC may control LVDS, VGA, DVI, TV $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2243: FILE: linux-core/drm_crtc.h:266:
+ * Each driver is responsible for filling out this structure at startup $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2245: FILE: linux-core/drm_crtc.h:267:
+ * in addition to providing other modesetting features, like i2c and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2292: FILE: linux-core/drm_crtc.h:313:
+ * Each CRTC may have one or more outputs associated with it.  This $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2322: FILE: linux-core/drm_crtc.h:342:
+extern struct drm_crtc *drm_crtc_create(struct drm_device *dev,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2339: FILE: linux-core/drm_crtc.h:359:
+ * Each CRTC may have one or more outputs attached to it.  The $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2341: FILE: linux-core/drm_crtc.h:360:
+ * below allow the core DRM code to control outputs, enumerate $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2375: FILE: linux-core/drm_crtc.h:393:
+ * @available_modes: modes available on this output (from get_modes() + $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2387: FILE: linux-core/drm_crtc.h:404:
+ * Each output may be connected to one or more CRTCs, or may be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2389: FILE: linux-core/drm_crtc.h:405:
+ * another output if they can share a CRTC.  Each output also has a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2391: FILE: linux-core/drm_crtc.h:406:
+ * position in the broader display (referred to as a 'screen' though it $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2407: FILE: linux-core/drm_crtc.h:421:
+	/*
+	  OptionInfoPtr options;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2415: FILE: linux-core/drm_crtc.h:429:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2427: FILE: linux-core/drm_crtc.h:441:
+ * struct drm_mode_config_funcs - configure CRTCs for a given screen $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2431: FILE: linux-core/drm_crtc.h:444:
+ * Currently only a resize hook is available.  DRM will call back into $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2433: FILE: linux-core/drm_crtc.h:445:
+ * driver with a new screen width and height.  If the driver can't $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2436: FILE: linux-core/drm_crtc.h:447:
+ * the CRTC<->output mappings as needed and update its view of the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2449: FILE: linux-core/drm_crtc.h:459:
+^Istruct idr crtc_idr; /* use this idr for all IDs, fb, crtc, output, $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2451: FILE: linux-core/drm_crtc.h:460:
+	struct idr crtc_idr; /* use this idr for all IDs, fb, crtc, output, 
+	/* this is limited to one for now */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2472: FILE: linux-core/drm_crtc.h:481:
+extern void drm_output_destroy(struct drm_output *output);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2473: FILE: linux-core/drm_crtc.h:482:
+extern bool drm_output_rename(struct drm_output *output, const char $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2473: FILE: linux-core/drm_crtc.h:482:
+extern bool drm_output_rename(struct drm_output *output, const char 

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2476: FILE: linux-core/drm_crtc.h:484:
+extern int drm_add_edid_modes(struct drm_output *output,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2477: FILE: linux-core/drm_crtc.h:485:
+extern int drm_add_edid_modes(struct drm_output *output,
+			struct i2c_adapter *adapter);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2478: FILE: linux-core/drm_crtc.h:486:
+extern void drm_mode_probed_add(struct drm_output *output, struct $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2478: FILE: linux-core/drm_crtc.h:486:
+extern void drm_mode_probed_add(struct drm_output *output, struct 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2480: FILE: linux-core/drm_crtc.h:487:
+extern void drm_mode_remove(struct drm_output *output, struct $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2480: FILE: linux-core/drm_crtc.h:487:
+extern void drm_mode_remove(struct drm_output *output, struct 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2482: FILE: linux-core/drm_crtc.h:488:
+extern struct drm_display_mode *drm_mode_duplicate(struct drm_device $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2482: FILE: linux-core/drm_crtc.h:488:
+extern struct drm_display_mode *drm_mode_duplicate(struct drm_device 

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2485: FILE: linux-core/drm_crtc.h:490:
+extern void drm_mode_debug_printmodeline(struct drm_device *dev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2487: FILE: linux-core/drm_crtc.h:492:
+extern void drm_mode_config_init(struct drm_device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2488: FILE: linux-core/drm_crtc.h:493:
+extern void drm_mode_config_cleanup(struct drm_device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2489: FILE: linux-core/drm_crtc.h:494:
+extern void drm_mode_set_name(struct drm_display_mode *mode);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2490: FILE: linux-core/drm_crtc.h:495:
+extern void drm_disable_unused_functions(struct drm_device *dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2492: FILE: linux-core/drm_crtc.h:497:
+extern struct drm_display_mode *drm_mode_create(struct drm_device $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2492: FILE: linux-core/drm_crtc.h:497:
+extern struct drm_display_mode *drm_mode_create(struct drm_device 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2494: FILE: linux-core/drm_crtc.h:498:
+extern void drm_mode_destroy(struct drm_device *dev, struct $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2494: FILE: linux-core/drm_crtc.h:498:
+extern void drm_mode_destroy(struct drm_device *dev, struct 

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2496: FILE: linux-core/drm_crtc.h:499:
+extern void drm_mode_list_concat(struct list_head *head,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2498: FILE: linux-core/drm_crtc.h:501:
+extern void drm_mode_validate_size(struct drm_device *dev,

CHECK:CAMELCASE: Avoid CamelCase: <maxPitch>
#2500: FILE: linux-core/drm_crtc.h:503:
+				   int maxX, int maxY, int maxPitch);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2501: FILE: linux-core/drm_crtc.h:504:
+extern void drm_mode_prune_invalid(struct drm_device *dev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2503: FILE: linux-core/drm_crtc.h:506:
+extern void drm_mode_sort(struct list_head *mode_list);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2504: FILE: linux-core/drm_crtc.h:507:
+extern int drm_mode_vrefresh(struct drm_display_mode *mode);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2505: FILE: linux-core/drm_crtc.h:508:
+extern void drm_mode_set_crtcinfo(struct drm_display_mode *p,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2507: FILE: linux-core/drm_crtc.h:510:
+extern struct drm_display_mode *drm_crtc_mode_create(struct drm_device $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2507: FILE: linux-core/drm_crtc.h:510:
+extern struct drm_display_mode *drm_crtc_mode_create(struct drm_device 

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2509: FILE: linux-core/drm_crtc.h:511:
+extern bool drm_initial_config(struct drm_device *dev, bool cangrow);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2510: FILE: linux-core/drm_crtc.h:512:
+extern void drm_framebuffer_set_object(struct drm_device *dev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2512: FILE: linux-core/drm_crtc.h:514:
+extern bool drm_set_desired_modes(struct drm_device *dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2513: FILE: linux-core/drm_crtc.h:515:
+extern int drmfb_probe(struct drm_device *dev, struct drm_framebuffer $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2513: FILE: linux-core/drm_crtc.h:515:
+extern int drmfb_probe(struct drm_device *dev, struct drm_framebuffer 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2515: FILE: linux-core/drm_crtc.h:516:
+extern int drmfb_remove(struct drm_device *dev, struct drm_framebuffer $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2515: FILE: linux-core/drm_crtc.h:516:
+extern int drmfb_remove(struct drm_device *dev, struct drm_framebuffer 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2519: FILE: linux-core/drm_crtc.h:519:
+extern int drm_mode_getresources(struct inode *inode, struct file $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2519: FILE: linux-core/drm_crtc.h:519:
+extern int drm_mode_getresources(struct inode *inode, struct file 

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2523: FILE: linux-core/drm_crtc.h:522:
+extern int drm_mode_getcrtc(struct inode *inode, struct file *filp,
                                                               ^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2523: FILE: linux-core/drm_crtc.h:522:
+extern int drm_mode_getcrtc(struct inode *inode, struct file *filp,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2525: FILE: linux-core/drm_crtc.h:524:
+extern int drm_mode_getoutput(struct inode *inode, struct file *filp,
                                                                 ^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2525: FILE: linux-core/drm_crtc.h:524:
+extern int drm_mode_getoutput(struct inode *inode, struct file *filp,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2527: FILE: linux-core/drm_crtc.h:526:
+extern int drm_mode_setcrtc(struct inode *inode, struct file *filp,
                                                               ^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2527: FILE: linux-core/drm_crtc.h:526:
+extern int drm_mode_setcrtc(struct inode *inode, struct file *filp,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2529: FILE: linux-core/drm_crtc.h:528:
+extern int drm_mode_addfb(struct inode *inode, struct file *filp,
                                                             ^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2529: FILE: linux-core/drm_crtc.h:528:
+extern int drm_mode_addfb(struct inode *inode, struct file *filp,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2531: FILE: linux-core/drm_crtc.h:530:
+extern int drm_mode_rmfb(struct inode *inode, struct file *filp,
                                                            ^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2531: FILE: linux-core/drm_crtc.h:530:
+extern int drm_mode_rmfb(struct inode *inode, struct file *filp,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2533: FILE: linux-core/drm_crtc.h:532:
+extern int drm_mode_getfb(struct inode *inode, struct file *filp,
                                                             ^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2533: FILE: linux-core/drm_crtc.h:532:
+extern int drm_mode_getfb(struct inode *inode, struct file *filp,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2546: FILE: linux-core/drm_drv.c:126:
+^I[DRM_IOCTL_NR(DRM_IOCTL_MODE_GETRESOURCES)] = {drm_mode_getresources, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2548: FILE: linux-core/drm_drv.c:127:
+^I[DRM_IOCTL_NR(DRM_IOCTL_MODE_GETCRTC)] = {drm_mode_getcrtc, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2550: FILE: linux-core/drm_drv.c:128:
+^I[DRM_IOCTL_NR(DRM_IOCTL_MODE_GETOUTPUT)] = {drm_mode_getoutput, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2552: FILE: linux-core/drm_drv.c:129:
+^I[DRM_IOCTL_NR(DRM_IOCTL_MODE_SETCRTC)] = {drm_mode_setcrtc, $

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#2554: FILE: linux-core/drm_drv.c:130:
+	[DRM_IOCTL_NR(DRM_IOCTL_MODE_ADDFB)] = {drm_mode_addfb, DRM_MASTER|
 	                                                                  ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#2556: FILE: linux-core/drm_drv.c:131:
+	[DRM_IOCTL_NR(DRM_IOCTL_MODE_RMFB)] = {drm_mode_rmfb, DRM_MASTER|
 	                                                                ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#2558: FILE: linux-core/drm_drv.c:132:
+	[DRM_IOCTL_NR(DRM_IOCTL_MODE_GETFB)] = {drm_mode_getfb, DRM_MASTER|
 	                                                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2589: FILE: linux-core/drm_drv.c:241:
+                list_for_each_entry_safe(r_list, r_list_tmp, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#2589: FILE: linux-core/drm_drv.c:241:
+                list_for_each_entry_safe(r_list, r_list_tmp, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2589: FILE: linux-core/drm_drv.c:241:
+                list_for_each_entry_safe(r_list, r_list_tmp, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#2591: FILE: linux-core/drm_drv.c:242:
+                        if (!(r_list->map->flags & _DRM_DRIVER))$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2591: FILE: linux-core/drm_drv.c:242:
+                list_for_each_entry_safe(r_list, r_list_tmp, 
+                        if (!(r_list->map->flags & _DRM_DRIVER))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2591: FILE: linux-core/drm_drv.c:242:
+                        if (!(r_list->map->flags & _DRM_DRIVER))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2592: FILE: linux-core/drm_drv.c:243:
+                                drm_rmmap_locked(dev, r_list->map);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2592: FILE: linux-core/drm_drv.c:243:
+                                drm_rmmap_locked(dev, r_list->map);$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2602: FILE: linux-core/drm_drv.c:267:
+	if (dev->lock.filp) {
 	              ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2630: FILE: linux-core/drm_drv.c:391:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#2630: FILE: linux-core/drm_drv.c:391:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2630: FILE: linux-core/drm_drv.c:391:
+        $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2638: FILE: linux-core/drm_drv.c:397:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#2639: FILE: linux-core/drm_drv.c:398:
+        //^Idrm_bo_driver_finish(dev);$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2706: FILE: linux-core/drm_edid.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2710: FILE: linux-core/drm_edid.c:5:
+ * DDC probing routines (drm_ddc_read & drm_do_probe_ddc_edid) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2721: FILE: linux-core/drm_edid.c:15:
+static u8 edid_header[] = { 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2728: FILE: linux-core/drm_edid.c:21:
+ * Sanity check the EDID block by looking at the header, the version $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2730: FILE: linux-core/drm_edid.c:22:
+ * and the checksum.  Return 0 if the EDID doesn't check out, or 1 if $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2759: FILE: linux-core/drm_edid.c:50:
+ * drm_mode_std - convert standard mode info (width, height, refresh) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2763: FILE: linux-core/drm_edid.c:53:
+ * Take the standard timing params (in this case width, aspect, and $

WARNING:REPEATED_WORD: Possible repeated word: 'and'
#2765: FILE: linux-core/drm_edid.c:54:
+ * Take the standard timing params (in this case width, aspect, and 
+ * and convert them into a real mode using CVT.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2767: FILE: linux-core/drm_edid.c:56:
+ * Punts for now, but should eventually use the FB layer's CVT based $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2800: FILE: linux-core/drm_edid.c:88:
+ * drm_mode_detailed - create a new mode from an EDID detailed timing $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2805: FILE: linux-core/drm_edid.c:92:
+ * An EDID detailed timing block contains enough info for us to create $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2807: FILE: linux-core/drm_edid.c:93:
+ * return a new struct drm_display_mode.  The @preferred flag will be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2809: FILE: linux-core/drm_edid.c:94:
+ * if this is the display's preferred timing, and we'll use it to $

WARNING:REPEATED_WORD: Possible repeated word: 'to'
#2811: FILE: linux-core/drm_edid.c:95:
+ * if this is the display's preferred timing, and we'll use it to 
+ * to the other layers that this mode is desired.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2820: FILE: linux-core/drm_edid.c:104:
+		printk(KERN_WARNING "stereo mode not supported\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2824: FILE: linux-core/drm_edid.c:108:
+		printk(KERN_WARNING "integrated sync not supported\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2841: FILE: linux-core/drm_edid.c:125:
+^Imode->htotal = mode->hdisplay + ((pt->hblank_hi << 8) | $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2850: FILE: linux-core/drm_edid.c:133:
+^Imode->vtotal = mode->vdisplay + ((pt->vblank_hi << 8) | $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2904: FILE: linux-core/drm_edid.c:186:
+	{ DRM_MODE("1024x768", DRM_MODE_TYPE_DRIVER,44900, 1024, 1032,
 	                                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2929: FILE: linux-core/drm_edid.c:211:
+ * Each EDID block contains a bitmap of the supported "established $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2931: FILE: linux-core/drm_edid.c:212:
+ * (defined above).  Tease them out and add them to the global modes $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2934: FILE: linux-core/drm_edid.c:214:
+static int add_established_modes(struct drm_output *output, struct edid $

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2944: FILE: linux-core/drm_edid.c:223:
+		if (est_bits & (1<<i)) {
 		                 ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2946: FILE: linux-core/drm_edid.c:225:
+			struct drm_display_mode *newmode;
+			newmode = drm_mode_duplicate(dev, &edid_est_modes[i]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2958: FILE: linux-core/drm_edid.c:237:
+ * Standard modes can be calculated using the CVT standard.  Grab them $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2962: FILE: linux-core/drm_edid.c:240:
+static int add_standard_modes(struct drm_output *output, struct edid $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2988: FILE: linux-core/drm_edid.c:265:
+ * Some of the detailed timing sections may contain mode information.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2992: FILE: linux-core/drm_edid.c:268:
+static int add_detailed_info(struct drm_output *output, struct edid $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3014: FILE: linux-core/drm_edid.c:289:
+^I^I^I^I     $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3054: FILE: linux-core/drm_edid.c:329:
+static unsigned char *drm_do_probe_ddc_edid(struct i2c_adapter $

WARNING:SPLIT_STRING: quoted string split across lines
#3075: FILE: linux-core/drm_edid.c:349:
+		dev_warn(&adapter->dev, "unable to allocate memory for EDID "
+			 "block.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#3099: FILE: linux-core/drm_edid.c:373:
+	udelay(550); /* startup delay */

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#3108: FILE: linux-core/drm_edid.c:382:
+		msleep(13);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#3112: FILE: linux-core/drm_edid.c:386:
+			msleep(10);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#3120: FILE: linux-core/drm_edid.c:394:
+		msleep(15);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#3122: FILE: linux-core/drm_edid.c:396:
+		msleep(15);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#3124: FILE: linux-core/drm_edid.c:398:
+		msleep(15);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#3130: FILE: linux-core/drm_edid.c:404:
+		msleep(15);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#3134: FILE: linux-core/drm_edid.c:408:
+			msleep(10);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#3140: FILE: linux-core/drm_edid.c:414:
+		msleep(15);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3160: FILE: linux-core/drm_edid.c:434:
+ * Poke the given output's i2c channel to grab EDID data if possible.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3166: FILE: linux-core/drm_edid.c:439:
+int drm_add_edid_modes(struct drm_output *output, struct i2c_adapter $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3202: FILE: linux-core/drm_edid.h:1:
+#ifndef __DRM_EDID_H__

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#3218: FILE: linux-core/drm_edid.h:17:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#3224: FILE: linux-core/drm_edid.h:23:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#3257: FILE: linux-core/drm_edid.h:56:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#3262: FILE: linux-core/drm_edid.h:61:
+} __attribute__((packed));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3270: FILE: linux-core/drm_edid.h:69:
+^Iu16 sec_gtf_toggle; /* A000=use above, 20=use below */ /* FIXME: byte $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3272: FILE: linux-core/drm_edid.h:70:
+	u16 sec_gtf_toggle; /* A000=use above, 20=use below */ /* FIXME: byte 
+	u8 hfreq_start_khz; /* need to multiply by 2 */

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#3277: FILE: linux-core/drm_edid.h:75:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#3286: FILE: linux-core/drm_edid.h:84:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#3293: FILE: linux-core/drm_edid.h:91:
+} __attribute__((packed));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3298: FILE: linux-core/drm_edid.h:96:
+	u8 type; /* ff=serial, fe=string, fd=monitor range, fc=monitor name
+		    fb=color point data, fa=standard timing data,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3299: FILE: linux-core/drm_edid.h:97:
+		    f9=undefined, f8=mfg. reserved */

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#3307: FILE: linux-core/drm_edid.h:105:
+} __attribute__((packed));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3317: FILE: linux-core/drm_edid.h:115:
+^Iu16 pixel_clock; /* need to multiply by 10 KHz */ /* FIXME: byte order $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3319: FILE: linux-core/drm_edid.h:116:
+	u16 pixel_clock; /* need to multiply by 10 KHz */ /* FIXME: byte order 
+	union {

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#3323: FILE: linux-core/drm_edid.h:120:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#3377: FILE: linux-core/drm_edid.h:174:
+} __attribute__((packed));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3386: FILE: linux-core/drm_fb.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3389: FILE: linux-core/drm_fb.c:4:
+ * Permission is hereby granted, free of charge, to any person $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3391: FILE: linux-core/drm_fb.c:5:
+ * copy of this software and associated documentation files $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3393: FILE: linux-core/drm_fb.c:6:
+ * to deal in the Software without restriction, including without $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3395: FILE: linux-core/drm_fb.c:7:
+ * the rights to use, copy, modify, merge, publish, distribute, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3397: FILE: linux-core/drm_fb.c:8:
+ * and/or sell copies of the Software, and to permit persons to whom $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3401: FILE: linux-core/drm_fb.c:11:
+ * The above copyright notice and this permission notice (including the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3403: FILE: linux-core/drm_fb.c:12:
+ * paragraph) shall be included in all copies or substantial portions $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3407: FILE: linux-core/drm_fb.c:15:
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3409: FILE: linux-core/drm_fb.c:16:
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3411: FILE: linux-core/drm_fb.c:17:
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3413: FILE: linux-core/drm_fb.c:18:
+ * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3415: FILE: linux-core/drm_fb.c:19:
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3444: FILE: linux-core/drm_fb.c:47:
+static int drmfb_setcolreg(unsigned regno, unsigned red, unsigned $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3444: FILE: linux-core/drm_fb.c:47:
+static int drmfb_setcolreg(unsigned regno, unsigned red, unsigned 

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3444: FILE: linux-core/drm_fb.c:47:
+static int drmfb_setcolreg(unsigned regno, unsigned red, unsigned 

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3446: FILE: linux-core/drm_fb.c:48:
+			   unsigned blue, unsigned transp,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3446: FILE: linux-core/drm_fb.c:48:
+			   unsigned blue, unsigned transp,

WARNING:LINE_SPACING: Missing a blank line after declarations
#3451: FILE: linux-core/drm_fb.c:53:
+	struct drm_framebuffer *fb = par->fb;
+	if (regno > 17)

WARNING:CONST_STRUCT: struct fb_ops should normally be const
#3488: FILE: linux-core/drm_fb.c:90:
+static struct fb_ops drmfb_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3506: FILE: linux-core/drm_fb.c:108:
+^Istruct device *device = &dev->pdev->dev; $

ERROR:SPACING: space required before the open brace '{'
#3512: FILE: linux-core/drm_fb.c:114:
+	if (!info){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#3512: FILE: linux-core/drm_fb.c:114:
+	if (!info){
+		return -EINVAL;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3517: FILE: linux-core/drm_fb.c:119:
+^I^I$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3527: FILE: linux-core/drm_fb.c:129:
+	info->fix.smem_len = (8*1024*1024);
 	                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3527: FILE: linux-core/drm_fb.c:129:
+	info->fix.smem_len = (8*1024*1024);
 	                            ^

ERROR:SPACING: space required before the open parenthesis '('
#3558: FILE: linux-core/drm_fb.c:160:
+	switch(fb->depth) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#3569: FILE: linux-core/drm_fb.c:171:
+		info->var.red.length = info->var.green.length =

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3581: FILE: linux-core/drm_fb.c:183:
+	printk(KERN_INFO "fb%d: %s frame buffer device\n", info->node,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3590: FILE: linux-core/drm_fb.c:192:
+^I$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#3627: FILE: linux-core/drm_fops.c:505:
+	drm_fb_release(filp);
 	               ^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3637: FILE: linux-core/drm_modes.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3640: FILE: linux-core/drm_modes.c:4:
+ * Permission is hereby granted, free of charge, to any person $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3642: FILE: linux-core/drm_modes.c:5:
+ * copy of this software and associated documentation files $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3644: FILE: linux-core/drm_modes.c:6:
+ * to deal in the Software without restriction, including without $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3646: FILE: linux-core/drm_modes.c:7:
+ * the rights to use, copy, modify, merge, publish, distribute, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3648: FILE: linux-core/drm_modes.c:8:
+ * and/or sell copies of the Software, and to permit persons to whom $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3652: FILE: linux-core/drm_modes.c:11:
+ * The above copyright notice and this permission notice shall be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3656: FILE: linux-core/drm_modes.c:14:
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3658: FILE: linux-core/drm_modes.c:15:
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3660: FILE: linux-core/drm_modes.c:16:
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3662: FILE: linux-core/drm_modes.c:17:
+ * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3664: FILE: linux-core/drm_modes.c:18:
+ * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3666: FILE: linux-core/drm_modes.c:19:
+ * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3670: FILE: linux-core/drm_modes.c:22:
+ * Except as contained in this notice, the name of the copyright $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3672: FILE: linux-core/drm_modes.c:23:
+ * and author(s) shall not be used in advertising or otherwise to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3674: FILE: linux-core/drm_modes.c:24:
+ * the sale, use or other dealings in this Software without prior $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3735: FILE: linux-core/drm_modes.c:84:
+void drm_mode_list_concat(struct list_head *head, struct list_head $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#3738: FILE: linux-core/drm_modes.c:86:
+{
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#3764: FILE: linux-core/drm_modes.c:112:
+
+}

CHECK:BRACES: braces {} should be used on all arms of this statement
#3806: FILE: linux-core/drm_modes.c:154:
+	if (mode->vrefresh > 0)
[...]
+	else if (mode->htotal > 0 && mode->vtotal > 0) {
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3827: FILE: linux-core/drm_modes.c:175:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3836: FILE: linux-core/drm_modes.c:184:
+ * Setup the CRTC modesetting parameters for @p, adjusting if $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3839: FILE: linux-core/drm_modes.c:186:
+void drm_mode_set_crtcinfo(struct drm_display_mode *p, int $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3842: FILE: linux-core/drm_modes.c:188:
+^Iif ((p == NULL) || ((p->type & DRM_MODE_TYPE_CRTC_C) == $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p == NULL'
#3842: FILE: linux-core/drm_modes.c:188:
+	if ((p == NULL) || ((p->type & DRM_MODE_TYPE_CRTC_C) == 
DRM_MODE_TYPE_BUILTIN))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p"
#3842: FILE: linux-core/drm_modes.c:188:
+	if ((p == NULL) || ((p->type & DRM_MODE_TYPE_CRTC_C) == 

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3891: FILE: linux-core/drm_modes.c:236:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3933: FILE: linux-core/drm_modes.c:278:
+bool drm_mode_equal(struct drm_display_mode *mode1, struct $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3949: FILE: linux-core/drm_modes.c:293:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3965: FILE: linux-core/drm_modes.c:309:
+ * The DRM device (@dev) has size and pitch limits.  Here we validate $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3967: FILE: linux-core/drm_modes.c:310:
+ * modes we probed for @dev against those limits and set their status $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3980: FILE: linux-core/drm_modes.c:322:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4001: FILE: linux-core/drm_modes.c:343:
+ * Some code may need to check a mode list against the clock limits of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4003: FILE: linux-core/drm_modes.c:344:
+ * device in question.  This function walks the mode list, testing to $

WARNING:LINE_SPACING: Missing a blank line after declarations
#4017: FILE: linux-core/drm_modes.c:357:
+		bool good = false;
+		for (i = 0; i < n_ranges; i++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4038: FILE: linux-core/drm_modes.c:378:
+ * Once mode list generation is complete, a caller can use this routine $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4041: FILE: linux-core/drm_modes.c:380:
+ * status other than %MODE_OK, they are removed from @mode_list and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4067: FILE: linux-core/drm_modes.c:405:
+ * Compare two modes, given by @lh_a and @lh_b, returning a value $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4072: FILE: linux-core/drm_modes.c:409:
+ * Negative if @lh_a is better than @lh_b, zero if they're equivalent, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4076: FILE: linux-core/drm_modes.c:412:
+static int drm_mode_compare(struct list_head *lh_a, struct list_head $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4079: FILE: linux-core/drm_modes.c:414:
+^Istruct drm_display_mode *a = list_entry(lh_a, struct drm_display_mode, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4081: FILE: linux-core/drm_modes.c:415:
+^Istruct drm_display_mode *b = list_entry(lh_b, struct drm_display_mode, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4098: FILE: linux-core/drm_modes.c:431:
+void list_sort(struct list_head *head, int (*cmp)(struct list_head *a, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4100: FILE: linux-core/drm_modes.c:432:
+void list_sort(struct list_head *head, int (*cmp)(struct list_head *a, 
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4103: FILE: linux-core/drm_modes.c:435:
+^I$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#4108: FILE: linux-core/drm_modes.c:440:
+		p = oldhead = list;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#4109: FILE: linux-core/drm_modes.c:441:
+		list = tail = NULL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4111: FILE: linux-core/drm_modes.c:443:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4122: FILE: linux-core/drm_modes.c:454:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4159: FILE: linux-core/drm_modes.c:491:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4162: FILE: linux-core/drm_modes.c:494:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4165: FILE: linux-core/drm_modes.c:497:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4168: FILE: linux-core/drm_modes.c:500:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4189: FILE: linux-core/drm_modes.c:521:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4198: FILE: linux-core/drm_modes.c:530:
+ * to the actual mode list. It compares the probed mode against the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4200: FILE: linux-core/drm_modes.c:531:
+ * list and only adds different modes. All modes unverified after this $

WARNING:LINE_SPACING: Missing a blank line after declarations
#4209: FILE: linux-core/drm_modes.c:539:
+	int found_it;
+	list_for_each_entry_safe(pmode, pt, &output->probed_modes,

WARNING:BRACES: braces {} are not necessary for single statement blocks
#4224: FILE: linux-core/drm_modes.c:554:
+		if (!found_it) {
+			list_move_tail(&pmode->head, &output->modes);
+		}

ERROR:CODE_INDENT: code indent should use tabs where possible
#4250: FILE: linux-core/drm_objects.h:251:
+        uint32_t flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4250: FILE: linux-core/drm_objects.h:251:
+        uint32_t flags;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4250: FILE: linux-core/drm_objects.h:251:
+        uint32_t flags;

ERROR:CODE_INDENT: code indent should use tabs where possible
#4251: FILE: linux-core/drm_objects.h:252:
+        int mem_type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4251: FILE: linux-core/drm_objects.h:252:
+        int mem_type;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4252: FILE: linux-core/drm_objects.h:253:
+        drm_ttm_backend_func_t *func;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4252: FILE: linux-core/drm_objects.h:253:
+        drm_ttm_backend_func_t *func;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4261: FILE: linux-core/drm_objects.h:431:
+extern int drm_bo_init_mm(struct drm_device * dev, unsigned type,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4261: FILE: linux-core/drm_objects.h:431:
+extern int drm_bo_init_mm(struct drm_device * dev, unsigned type,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4261: FILE: linux-core/drm_objects.h:431:
+extern int drm_bo_init_mm(struct drm_device * dev, unsigned type,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4263: FILE: linux-core/drm_objects.h:433:
+extern int drm_buffer_object_create(struct drm_device *dev, unsigned $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4263: FILE: linux-core/drm_objects.h:433:
+extern int drm_buffer_object_create(struct drm_device *dev, unsigned 

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4266: FILE: linux-core/drm_objects.h:435:
+				    uint32_t hint, uint32_t page_alignment,

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#4268: FILE: linux-core/drm_objects.h:437:
+				    drm_buffer_object_t ** buf_obj);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4277: FILE: linux-core/drm_objects.h:481:
+extern int drm_mem_reg_ioremap(struct drm_device *dev, drm_bo_mem_reg_t $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4277: FILE: linux-core/drm_objects.h:481:
+extern int drm_mem_reg_ioremap(struct drm_device *dev, drm_bo_mem_reg_t 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4280: FILE: linux-core/drm_objects.h:483:
+extern void drm_mem_reg_iounmap(struct drm_device *dev, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4280: FILE: linux-core/drm_objects.h:483:
+extern void drm_mem_reg_iounmap(struct drm_device *dev, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4298: FILE: linux-core/drm_os_linux.h:125:
+ * Searches the SAREA on the mapping lists and points drm_device::sarea $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4302: FILE: linux-core/drm_os_linux.h:128:
+do { ^I^I^I^I^I^I^I^I^I \$

ERROR:SPACING: space prohibited after that open parenthesis '('
#4304: FILE: linux-core/drm_os_linux.h:130:
+	list_for_each_entry( entry, &dev->maplist->head, head ) {	 \

ERROR:SPACING: space prohibited before that close parenthesis ')'
#4304: FILE: linux-core/drm_os_linux.h:130:
+	list_for_each_entry( entry, &dev->maplist->head, head ) {	 \

ERROR:SPACING: space prohibited after that open parenthesis '('
#4305: FILE: linux-core/drm_os_linux.h:131:
+		if ( entry->map &&					 \

ERROR:SPACING: space prohibited before that close parenthesis ')'
#4307: FILE: linux-core/drm_os_linux.h:133:
+		     (entry->map->flags & _DRM_CONTAINS_LOCK) ) {	 \

ERROR:CODE_INDENT: code indent should use tabs where possible
#4309: FILE: linux-core/drm_os_linux.h:135:
+ ^I^I^Ibreak;^I^I^I^I^I^I \$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4309: FILE: linux-core/drm_os_linux.h:135:
+ ^I^I^Ibreak;^I^I^I^I^I^I \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4309: FILE: linux-core/drm_os_linux.h:135:
+ ^I^I^Ibreak;^I^I^I^I^I^I \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4310: FILE: linux-core/drm_os_linux.h:136:
+ ^I^I}^I^I^I^I^I^I^I \$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4310: FILE: linux-core/drm_os_linux.h:136:
+ ^I^I}^I^I^I^I^I^I^I \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4310: FILE: linux-core/drm_os_linux.h:136:
+ ^I^I}^I^I^I^I^I^I^I \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4311: FILE: linux-core/drm_os_linux.h:137:
+ ^I}^I^I^I^I^I^I^I^I \$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4311: FILE: linux-core/drm_os_linux.h:137:
+ ^I}^I^I^I^I^I^I^I^I \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4311: FILE: linux-core/drm_os_linux.h:137:
+ ^I}^I^I^I^I^I^I^I^I \$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->maplist"
#4349: FILE: linux-core/drm_stub.c:98:
+	if (dev->maplist == NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#4376: FILE: linux-core/drm_stub.c:137:
+		if ((retcode = dev->driver->load(dev, ent->driver_data)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000429925.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 254 errors, 156 warnings, 164 checks, 4190 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000429925.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
