WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
This patch marks a number of allocations that are either short-lived such as

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#67: FILE: fs/buffer.c:993:
+	page = find_or_create_page(inode->i_mapping, index,
+					GFP_NOFS|__GFP_RECLAIMABLE);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#67: FILE: fs/buffer.c:993:
+					GFP_NOFS|__GFP_RECLAIMABLE);
 					        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#89: FILE: fs/dcache.c:903:
+	dentry = kmem_cache_alloc(dentry_cache, GFP_KERNEL|__GFP_RECLAIMABLE);
 	                                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#102: FILE: fs/ext2/super.c:144:
+						GFP_KERNEL|__GFP_RECLAIMABLE);
 						          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#114: FILE: fs/ext3/super.c:448:
+	ei = kmem_cache_alloc(ext3_inode_cachep, GFP_NOFS|__GFP_RECLAIMABLE);
 	                                                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#127: FILE: fs/jbd/journal.c:1739:
+	ret = kmem_cache_alloc(journal_head_cache,
+			set_migrateflags(GFP_NOFS, __GFP_RECLAIMABLE));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#137: FILE: fs/jbd/journal.c:1750:
+			ret = kmem_cache_alloc(journal_head_cache,
+					GFP_NOFS|__GFP_RECLAIMABLE);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#137: FILE: fs/jbd/journal.c:1750:
+					GFP_NOFS|__GFP_RECLAIMABLE);
 					        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: fs/jbd/revoke.c:210:
+	journal->j_revoke_table[0] = kmem_cache_alloc(revoke_table_cache,
+					GFP_KERNEL|__GFP_RECLAIMABLE);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#150: FILE: fs/jbd/revoke.c:210:
+					GFP_KERNEL|__GFP_RECLAIMABLE);
 					          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#160: FILE: fs/jbd/revoke.c:234:
+	journal->j_revoke_table[1] = kmem_cache_alloc(revoke_table_cache,
+					GFP_KERNEL|__GFP_RECLAIMABLE);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#160: FILE: fs/jbd/revoke.c:234:
+					GFP_KERNEL|__GFP_RECLAIMABLE);
 					          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#172: FILE: fs/ntfs/inode.c:327:
+	ni = kmem_cache_alloc(ntfs_big_inode_cache, GFP_NOFS|__GFP_RECLAIMABLE);
 	                                                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#181: FILE: fs/ntfs/inode.c:352:
+	ni = kmem_cache_alloc(ntfs_inode_cache, GFP_NOFS|__GFP_RECLAIMABLE);
 	                                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#193: FILE: fs/proc/base.c:524:
+	if (!(page = __get_free_page(GFP_KERNEL|__GFP_RECLAIMABLE)))
 	                                       ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#193: FILE: fs/proc/base.c:524:
+	if (!(page = __get_free_page(GFP_KERNEL|__GFP_RECLAIMABLE)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#202: FILE: fs/proc/base.c:637:
+	page = (char *)__get_free_page(GFP_USER|__GFP_RECLAIMABLE);
 	                                       ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#211: FILE: fs/proc/base.c:828:
+	page = (char*)__get_free_page(GFP_USER|__GFP_RECLAIMABLE);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#211: FILE: fs/proc/base.c:828:
+	page = (char*)__get_free_page(GFP_USER|__GFP_RECLAIMABLE);
 	                                      ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#220: FILE: fs/proc/base.c:1010:
+	char *tmp = (char*)__get_free_page(GFP_KERNEL|__GFP_RECLAIMABLE);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#220: FILE: fs/proc/base.c:1010:
+	char *tmp = (char*)__get_free_page(GFP_KERNEL|__GFP_RECLAIMABLE);
 	                                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#230: FILE: fs/proc/base.c:1662:
+	if (!(page = __get_free_page(GFP_KERNEL|__GFP_RECLAIMABLE)))
 	                                       ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#230: FILE: fs/proc/base.c:1662:
+	if (!(page = __get_free_page(GFP_KERNEL|__GFP_RECLAIMABLE)))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#239: FILE: fs/proc/base.c:1697:
+	page = (char*)__get_free_page(GFP_USER|__GFP_RECLAIMABLE);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#239: FILE: fs/proc/base.c:1697:
+	page = (char*)__get_free_page(GFP_USER|__GFP_RECLAIMABLE);
 	                                      ^

CHECK:SPACING: No space is necessary after a cast
#251: FILE: fs/proc/generic.c:77:
+	if (!(page = (char*) __get_free_page(GFP_KERNEL|__GFP_RECLAIMABLE)))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#251: FILE: fs/proc/generic.c:77:
+	if (!(page = (char*) __get_free_page(GFP_KERNEL|__GFP_RECLAIMABLE)))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#251: FILE: fs/proc/generic.c:77:
+	if (!(page = (char*) __get_free_page(GFP_KERNEL|__GFP_RECLAIMABLE)))
 	                                               ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#251: FILE: fs/proc/generic.c:77:
+	if (!(page = (char*) __get_free_page(GFP_KERNEL|__GFP_RECLAIMABLE)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#264: FILE: fs/reiserfs/super.c:500:
+	    kmem_cache_alloc(reiserfs_inode_cachep,
+						GFP_KERNEL|__GFP_RECLAIMABLE);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#264: FILE: fs/reiserfs/super.c:500:
+						GFP_KERNEL|__GFP_RECLAIMABLE);
 						          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#289: FILE: include/linux/gfp.h:63:
+			__GFP_RECLAIMABLE|__GFP_MOVABLE)
 			                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#292: FILE: include/linux/gfp.h:66:
+#define GFP_MOVABLE_MASK (__GFP_RECLAIMABLE|__GFP_MOVABLE)
                                            ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#302: FILE: include/linux/gfp.h:117:
+	BUG_ON((gfp & GFP_MOVABLE_MASK) == GFP_MOVABLE_MASK);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#348: FILE: lib/radix-tree.c:97:
+	ret = kmem_cache_alloc(radix_tree_node_cachep,
+				set_migrateflags(gfp_mask, __GFP_RECLAIMABLE));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#358: FILE: lib/radix-tree.c:142:
+		node = kmem_cache_alloc(radix_tree_node_cachep,
+				set_migrateflags(gfp_mask, __GFP_RECLAIMABLE));

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#397: FILE: mm/shmem.c:986:
+	page = alloc_page_vma(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#408: FILE: mm/shmem.c:1008:
+	return alloc_page(

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000462073.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 2 warnings, 30 checks, 284 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000462073.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
