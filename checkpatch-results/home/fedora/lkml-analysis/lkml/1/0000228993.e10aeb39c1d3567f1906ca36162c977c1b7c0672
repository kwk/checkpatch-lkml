WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#119: FILE: arch/x86/kernel/io_apic.c:1333:
+		BUG_ON(desc == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!desc"
#119: FILE: arch/x86/kernel/io_apic.c:1333:
+		BUG_ON(desc == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!desc"
#127: FILE: arch/x86/kernel/io_apic.c:1339:
+		if (desc == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!desc"
#150: FILE: arch/x86/kernel/io_apic.c:2383:
+		if (desc == NULL)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#176: FILE: include/asm-x86/hw_irq.h:116:
+typedef struct irq_desc *vector_irq_t[NR_VECTORS];

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!desc"
#202: FILE: arch/x86/kernel/irq_32.c:237:
+	if (unlikely(desc == NULL)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#203: FILE: arch/x86/kernel/irq_32.c:238:
+		printk(KERN_EMERG "%s: cannot handle IRQ vector %#x cpu %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#204: FILE: arch/x86/kernel/irq_32.c:239:
+		printk(KERN_EMERG "%s: cannot handle IRQ vector %#x cpu %d\n",
+					__func__, vector, smp_processor_id());

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "desc"
#240: FILE: arch/x86/kernel/irq_64.c:225:
+	if (likely(desc != NULL)) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#293: FILE: arch/x86/kernel/irqinit_32.c:83:
+			BUG_ON(per_cpu(vector_irq, cpu)[vector] != NULL);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#356: FILE: arch/x86/kernel/irqinit_64.c:117:
 };
+DEFINE_PER_CPU(vector_irq_t, vector_irq);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#372: FILE: arch/x86/kernel/irqinit_64.c:138:
+			BUG_ON(per_cpu(vector_irq, cpu)[vector] != NULL);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000228993.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 7 checks, 271 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000228993.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
