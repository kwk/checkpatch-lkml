WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
--- linux-2.6.20-rc4-mm1/drivers/char/agp/Makefile	27 Jan 2007 22:03:38 -0000	1.1.1.1

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#76: FILE: drivers/char/agp/compat_ioctl.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#107: FILE: drivers/char/agp/compat_ioctl.c:32:
+#include <asm/uaccess.h>

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#125: FILE: drivers/char/agp/compat_ioctl.c:50:
+	userinfo.pg_total = userinfo.pg_system = kerninfo.max_memory;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: No space is necessary after a cast
#145: FILE: drivers/char/agp/compat_ioctl.c:70:
+	if ((unsigned) ureserve.seg_count >= ~0U/sizeof(struct agp_segment32))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#145: FILE: drivers/char/agp/compat_ioctl.c:70:
+	if ((unsigned) ureserve.seg_count >= ~0U/sizeof(struct agp_segment32))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#145: FILE: drivers/char/agp/compat_ioctl.c:70:
+	if ((unsigned) ureserve.seg_count >= ~0U/sizeof(struct agp_segment32))
 	                                        ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "client_priv"
#157: FILE: drivers/char/agp/compat_ioctl.c:82:
+		if (client_priv != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!client"
#161: FILE: drivers/char/agp/compat_ioctl.c:86:
+		if (client == NULL) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#166: FILE: drivers/char/agp/compat_ioctl.c:91:
+		return agp_remove_client(kreserve.pid);
+	} else {

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#174: FILE: drivers/char/agp/compat_ioctl.c:99:
+		usegment = kmalloc(sizeof(*usegment) * ureserve.seg_count, GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#178: FILE: drivers/char/agp/compat_ioctl.c:103:
+		ksegment = kmalloc(sizeof(*ksegment) * kreserve.seg_count, GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#184: FILE: drivers/char/agp/compat_ioctl.c:109:
+		if (copy_from_user(usegment, (void __user *) ureserve.seg_list,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!client"
#200: FILE: drivers/char/agp/compat_ioctl.c:125:
+		if (client == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!client"
#204: FILE: drivers/char/agp/compat_ioctl.c:129:
+			if (client == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "client_priv"
#210: FILE: drivers/char/agp/compat_ioctl.c:135:
+			if (client_priv != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!memory"
#232: FILE: drivers/char/agp/compat_ioctl.c:157:
+	if (memory == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!memory"
#256: FILE: drivers/char/agp/compat_ioctl.c:181:
+	if (memory == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!memory"
#273: FILE: drivers/char/agp/compat_ioctl.c:198:
+	if (memory == NULL)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around agp_fe.agp_mutex
#284: FILE: drivers/char/agp/compat_ioctl.c:209:
+	mutex_lock(&(agp_fe.agp_mutex));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'agp_fe.current_controller == NULL'
#286: FILE: drivers/char/agp/compat_ioctl.c:211:
+	if ((agp_fe.current_controller == NULL) &&
+	    (cmd != AGPIOC_ACQUIRE32)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd != AGPIOC_ACQUIRE32'
#286: FILE: drivers/char/agp/compat_ioctl.c:211:
+	if ((agp_fe.current_controller == NULL) &&
+	    (cmd != AGPIOC_ACQUIRE32)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!agp_fe.current_controller"
#286: FILE: drivers/char/agp/compat_ioctl.c:211:
+	if ((agp_fe.current_controller == NULL) &&

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'agp_fe.backend_acquired != TRUE'
#291: FILE: drivers/char/agp/compat_ioctl.c:216:
+	if ((agp_fe.backend_acquired != TRUE) &&
+	    (cmd != AGPIOC_ACQUIRE32)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd != AGPIOC_ACQUIRE32'
#291: FILE: drivers/char/agp/compat_ioctl.c:216:
+	if ((agp_fe.backend_acquired != TRUE) &&
+	    (cmd != AGPIOC_ACQUIRE32)) {

CHECK:BOOL_COMPARISON: Using comparison to TRUE is error prone
#291: FILE: drivers/char/agp/compat_ioctl.c:216:
+	if ((agp_fe.backend_acquired != TRUE) &&

Comparisons of A to true and false are better written
as A and !A.

See: https://lore.kernel.org/lkml/1365563834.27174.12.camel@joe-AO722/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#302: FILE: drivers/char/agp/compat_ioctl.c:227:
+		 * in case it's threaded */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: No space is necessary after a cast
#312: FILE: drivers/char/agp/compat_ioctl.c:237:
+		ret_val = compat_agpioc_info_wrap(curr_priv, (void __user *) arg);

CHECK:SPACING: No space is necessary after a cast
#324: FILE: drivers/char/agp/compat_ioctl.c:249:
+		ret_val = agpioc_setup_wrap(curr_priv, (void __user *) arg);

CHECK:SPACING: No space is necessary after a cast
#328: FILE: drivers/char/agp/compat_ioctl.c:253:
+		ret_val = compat_agpioc_reserve_wrap(curr_priv, (void __user *) arg);

CHECK:SPACING: No space is necessary after a cast
#336: FILE: drivers/char/agp/compat_ioctl.c:261:
+		ret_val = compat_agpioc_allocate_wrap(curr_priv, (void __user *) arg);

CHECK:SPACING: No space is necessary after a cast
#340: FILE: drivers/char/agp/compat_ioctl.c:265:
+		ret_val = agpioc_deallocate_wrap(curr_priv, (int) arg);

CHECK:SPACING: No space is necessary after a cast
#344: FILE: drivers/char/agp/compat_ioctl.c:269:
+		ret_val = compat_agpioc_bind_wrap(curr_priv, (void __user *) arg);

CHECK:SPACING: No space is necessary after a cast
#348: FILE: drivers/char/agp/compat_ioctl.c:273:
+		ret_val = compat_agpioc_unbind_wrap(curr_priv, (void __user *) arg);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around agp_fe.agp_mutex
#354: FILE: drivers/char/agp/compat_ioctl.c:279:
+	mutex_unlock(&(agp_fe.agp_mutex));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#365: FILE: drivers/char/agp/compat_ioctl.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#383: FILE: drivers/char/agp/compat_ioctl.h:19:
+ * JEFF HARTMANN, OR ANY OTHER CONTRIBUTORS BE LIABLE FOR ANY CLAIM, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#384: FILE: drivers/char/agp/compat_ioctl.h:20:
+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#385: FILE: drivers/char/agp/compat_ioctl.h:21:
+ * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#396: FILE: drivers/char/agp/compat_ioctl.h:32:
+#define AGPIOC_INFO32       _IOR (AGPIOC_BASE, 0, compat_uptr_t)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#396: FILE: drivers/char/agp/compat_ioctl.h:32:
+#define AGPIOC_INFO32       _IOR (AGPIOC_BASE, 0, compat_uptr_t)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#397: FILE: drivers/char/agp/compat_ioctl.h:33:
+#define AGPIOC_ACQUIRE32    _IO  (AGPIOC_BASE, 1)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#397: FILE: drivers/char/agp/compat_ioctl.h:33:
+#define AGPIOC_ACQUIRE32    _IO  (AGPIOC_BASE, 1)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#398: FILE: drivers/char/agp/compat_ioctl.h:34:
+#define AGPIOC_RELEASE32    _IO  (AGPIOC_BASE, 2)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#398: FILE: drivers/char/agp/compat_ioctl.h:34:
+#define AGPIOC_RELEASE32    _IO  (AGPIOC_BASE, 2)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#399: FILE: drivers/char/agp/compat_ioctl.h:35:
+#define AGPIOC_SETUP32      _IOW (AGPIOC_BASE, 3, compat_uptr_t)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#399: FILE: drivers/char/agp/compat_ioctl.h:35:
+#define AGPIOC_SETUP32      _IOW (AGPIOC_BASE, 3, compat_uptr_t)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#400: FILE: drivers/char/agp/compat_ioctl.h:36:
+#define AGPIOC_RESERVE32    _IOW (AGPIOC_BASE, 4, compat_uptr_t)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#400: FILE: drivers/char/agp/compat_ioctl.h:36:
+#define AGPIOC_RESERVE32    _IOW (AGPIOC_BASE, 4, compat_uptr_t)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#401: FILE: drivers/char/agp/compat_ioctl.h:37:
+#define AGPIOC_PROTECT32    _IOW (AGPIOC_BASE, 5, compat_uptr_t)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#401: FILE: drivers/char/agp/compat_ioctl.h:37:
+#define AGPIOC_PROTECT32    _IOW (AGPIOC_BASE, 5, compat_uptr_t)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#403: FILE: drivers/char/agp/compat_ioctl.h:39:
+#define AGPIOC_DEALLOCATE32 _IOW (AGPIOC_BASE, 7, compat_int_t)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#403: FILE: drivers/char/agp/compat_ioctl.h:39:
+#define AGPIOC_DEALLOCATE32 _IOW (AGPIOC_BASE, 7, compat_int_t)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#404: FILE: drivers/char/agp/compat_ioctl.h:40:
+#define AGPIOC_BIND32       _IOW (AGPIOC_BASE, 8, compat_uptr_t)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#404: FILE: drivers/char/agp/compat_ioctl.h:40:
+#define AGPIOC_BIND32       _IOW (AGPIOC_BASE, 8, compat_uptr_t)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#405: FILE: drivers/char/agp/compat_ioctl.h:41:
+#define AGPIOC_UNBIND32     _IOW (AGPIOC_BASE, 9, compat_uptr_t)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#405: FILE: drivers/char/agp/compat_ioctl.h:41:
+#define AGPIOC_UNBIND32     _IOW (AGPIOC_BASE, 9, compat_uptr_t)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#437: FILE: drivers/char/agp/compat_ioctl.h:73:
+^Iu32 physical;           /* device specific (some devices  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#438: FILE: drivers/char/agp/compat_ioctl.h:74:
+^I^I^I^I * need a phys address of the     $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#439: FILE: drivers/char/agp/compat_ioctl.h:75:
+^I^I^I^I * actual page behind the gatt    $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#440: FILE: drivers/char/agp/compat_ioctl.h:76:
+				 * table)                        */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000473299.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 15 errors, 19 warnings, 27 checks, 517 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000473299.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
