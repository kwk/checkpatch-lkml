ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#74: FILE: fs/sysfs/dir.c:35:
+static struct sysfs_dirent * __sysfs_new_dirent(void * element)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#74: FILE: fs/sysfs/dir.c:35:
+static struct sysfs_dirent * __sysfs_new_dirent(void * element)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#90: FILE: fs/sysfs/dir.c:54:
+static void __sysfs_list_dirent(struct sysfs_dirent *parent_sd,
+			      struct sysfs_dirent *sd)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#96: FILE: fs/sysfs/dir.c:60:
+static struct sysfs_dirent * sysfs_new_dirent(struct sysfs_dirent *parent_sd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#97: FILE: fs/sysfs/dir.c:61:
+static struct sysfs_dirent * sysfs_new_dirent(struct sysfs_dirent *parent_sd,
+						void * element)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#97: FILE: fs/sysfs/dir.c:61:
+						void * element)

WARNING:LINE_SPACING: Missing a blank line after declarations
#100: FILE: fs/sysfs/dir.c:64:
+	struct sysfs_dirent *sd;
+	sd = __sysfs_new_dirent(element);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#136: FILE: fs/sysfs/dir.c:116:
+int sysfs_make_dirent(struct sysfs_dirent * parent_sd, struct dentry * dentry,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#136: FILE: fs/sysfs/dir.c:116:
+int sysfs_make_dirent(struct sysfs_dirent * parent_sd, struct dentry * dentry,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#137: FILE: fs/sysfs/dir.c:117:
+int sysfs_make_dirent(struct sysfs_dirent * parent_sd, struct dentry * dentry,
+			void * element, umode_t mode, int type)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#137: FILE: fs/sysfs/dir.c:117:
+			void * element, umode_t mode, int type)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#140: FILE: fs/sysfs/dir.c:120:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:REPEATED_WORD: Possible repeated word: 'parent'
#154: FILE: fs/sysfs/dir.c:196:
+ *	@shadow_parent:	parent parent object.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#158: FILE: fs/sysfs/dir.c:199:
+int sysfs_create_dir(struct kobject * kobj, struct dentry *shadow_parent)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#205: FILE: fs/sysfs/dir.c:360:
+ *^I@kobj:^Iobject. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#207: FILE: fs/sysfs/dir.c:362:
+ *^IThe only thing special about this is that we remove any files in $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#212: FILE: fs/sysfs/dir.c:367:
+void sysfs_remove_dir(struct kobject * kobj)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#219: FILE: fs/sysfs/dir.c:373:
+int sysfs_rename_dir(struct kobject * kobj, struct dentry *new_parent,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#227: FILE: fs/sysfs/dir.c:377:
+	struct dentry * new_dentry;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#283: FILE: fs/sysfs/dir.c:598:
 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#286: FILE: fs/sysfs/dir.c:601:
+ *^I@kobj:^Iobject we're creating shadow of. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#289: FILE: fs/sysfs/dir.c:604:
+int sysfs_make_shadowed_dir(struct kobject *kobj, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#290: FILE: fs/sysfs/dir.c:605:
+int sysfs_make_shadowed_dir(struct kobject *kobj, 
+	void * (*follow_link)(struct dentry *, struct nameidata *))

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#293: FILE: fs/sysfs/dir.c:608:
+	struct inode_operations *i_op;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#316: FILE: fs/sysfs/dir.c:631:
+ *^I@kobj:^Iobject we're creating directory for. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#362: FILE: fs/sysfs/dir.c:677:
+ *^IThe only thing special about this is that we remove any files in $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#429: FILE: fs/sysfs/sysfs.h:5:
+extern void sysfs_delete_inode(struct inode *inode);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#449: FILE: include/linux/kobject.h:77:
+extern int __must_check kobject_shadow_add(struct kobject *, struct dentry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kobject *' should also have an identifier name
#449: FILE: include/linux/kobject.h:77:
+extern int __must_check kobject_shadow_add(struct kobject *, struct dentry *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#449: FILE: include/linux/kobject.h:77:
+extern int __must_check kobject_shadow_add(struct kobject *, struct dentry *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#453: FILE: include/linux/kobject.h:81:
+extern int __must_check kobject_shadow_rename(struct kobject *kobj,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#454: FILE: include/linux/kobject.h:82:
+extern int __must_check kobject_shadow_rename(struct kobject *kobj,
+						struct dentry *new_parent,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#491: FILE: include/linux/sysfs.h:130:
 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#492: FILE: include/linux/sysfs.h:131:
+extern int sysfs_make_shadowed_dir(struct kobject *kobj, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#492: FILE: include/linux/sysfs.h:131:
+extern int sysfs_make_shadowed_dir(struct kobject *kobj, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#493: FILE: include/linux/sysfs.h:132:
+extern int sysfs_make_shadowed_dir(struct kobject *kobj, 
+	void * (*follow_link)(struct dentry *, struct nameidata *));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#494: FILE: include/linux/sysfs.h:133:
+extern struct dentry *sysfs_create_shadow_dir(struct kobject *kobj);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#495: FILE: include/linux/sysfs.h:134:
+extern void sysfs_remove_shadow_dir(struct dentry *dir);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#502: FILE: include/linux/sysfs.h:140:
+static inline int sysfs_create_dir(struct kobject * k, struct dentry *shadow)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#511: FILE: include/linux/sysfs.h:150:
+static inline int sysfs_rename_dir(struct kobject * k,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#512: FILE: include/linux/sysfs.h:151:
+static inline int sysfs_rename_dir(struct kobject * k,
+					struct dentry *new_parent,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#521: FILE: include/linux/sysfs.h:216:
+static inline int sysfs_make_shadowed_dir(struct kobject *kobj, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#522: FILE: include/linux/sysfs.h:217:
+static inline int sysfs_make_shadowed_dir(struct kobject *kobj, 
+	void * (*follow_link)(struct dentry *, struct nameidata *))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#539: FILE: lib/kobject.c:47:
+static int create_dir(struct kobject * kobj, struct dentry *shadow_parent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#556: FILE: lib/kobject.c:162:
+int kobject_shadow_add(struct kobject * kobj, struct dentry *shadow_parent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#577: FILE: lib/kobject.c:219:
+int kobject_add(struct kobject * kobj)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#604: FILE: lib/kobject.c:330:
+int kobject_shadow_rename(struct kobject * kobj, struct dentry *new_parent,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000474960.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 26 errors, 5 warnings, 16 checks, 494 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000474960.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
