WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#67: 
> I'll happily commit this as basic infrastructure as soon as somebody ack's

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#104: FILE: arch/x86/kernel/e820.c:1321:
        for (i = 0; i < e820.nr_map; i++) {
[...]
+               if (!res->parent && res->end) {

WARNING:IF_1: Consider removing the #if 1 and its #endif
#107: FILE: arch/x86/kernel/e820.c:1322:
+#if 1

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: arch/x86/kernel/e820.c:1323:
+               /* test for shrink_with fit */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: arch/x86/kernel/e820.c:1324:
+               if (!res->parent && res->end) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: arch/x86/kernel/e820.c:1324:
+               if (!res->parent && res->end) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#109: FILE: arch/x86/kernel/e820.c:1324:
+               if (!res->parent && res->end) {
+                       if (res->start == 0xe0000000)

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: arch/x86/kernel/e820.c:1325:
+                       if (res->start == 0xe0000000)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: arch/x86/kernel/e820.c:1325:
+                       if (res->start == 0xe0000000)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#110: FILE: arch/x86/kernel/e820.c:1325:
+                       if (res->start == 0xe0000000)
+                               res->start = 0xde000000;

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: arch/x86/kernel/e820.c:1326:
+                               res->start = 0xde000000;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: arch/x86/kernel/e820.c:1326:
+                               res->start = 0xde000000;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: arch/x86/kernel/e820.c:1327:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: arch/x86/kernel/e820.c:1327:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: arch/x86/kernel/e820.c:1330:
+               if (!res->parent && res->end &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: arch/x86/kernel/e820.c:1330:
+               if (!res->parent && res->end &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#115: FILE: arch/x86/kernel/e820.c:1330:
+               if (!res->parent && res->end &&
[...]
+                       printk(KERN_WARNING "found conflict for %s

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#116: FILE: arch/x86/kernel/e820.c:1330:
insert_resource(&iomem_resource, res)) {

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#117: FILE: arch/x86/kernel/e820.c:1331:
+               if (!res->parent && res->end &&
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: arch/x86/kernel/e820.c:1332:
+                       printk(KERN_WARNING "found conflict for %s$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: arch/x86/kernel/e820.c:1332:
+                       printk(KERN_WARNING "found conflict for %s$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#118: FILE: arch/x86/kernel/e820.c:1332:
+                       printk(KERN_WARNING "found conflict for %s

ERROR:CODE_INDENT: code indent should use tabs where possible
#120: FILE: arch/x86/kernel/e820.c:1333:
+                               res->name, res->start, res->end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: arch/x86/kernel/e820.c:1333:
+                               res->name, res->start, res->end);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: arch/x86/kernel/e820.c:1335:
+                       insert_resource_shrink_to_fit(&iomem_resource, res);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: arch/x86/kernel/e820.c:1335:
+                       insert_resource_shrink_to_fit(&iomem_resource, res);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: arch/x86/kernel/e820.c:1337:
+                       printk(KERN_WARNING "   shrink to %s [%08llx,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: arch/x86/kernel/e820.c:1337:
+                       printk(KERN_WARNING "   shrink to %s [%08llx,$

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#124: FILE: arch/x86/kernel/e820.c:1337:
+                       printk(KERN_WARNING "   shrink to %s [%08llx,

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#124: FILE: arch/x86/kernel/e820.c:1337:
+                       printk(KERN_WARNING "   shrink to %s [%08llx,
                                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#124: FILE: arch/x86/kernel/e820.c:1337:
+                       printk(KERN_WARNING "   shrink to %s [%08llx,
                                                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#126: FILE: arch/x86/kernel/e820.c:1338:
+                               res->name, res->start, res->end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: arch/x86/kernel/e820.c:1338:
+                               res->name, res->start, res->end);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: arch/x86/kernel/e820.c:1339:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: arch/x86/kernel/e820.c:1339:
+               }$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#139: FILE: include/linux/ioport.h:111:
+extern void insert_resource_shrink_to_fit(struct resource *root,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: include/linux/ioport.h:112:
+                                         struct resource *new);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: include/linux/ioport.h:112:
+extern void insert_resource_shrink_to_fit(struct resource *root,
+                                         struct resource *new);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: include/linux/ioport.h:112:
+                                         struct resource *new);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#170: FILE: kernel/resource.c:379:
+static struct resource *__insert_resource(struct resource *parent,
 {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: kernel/resource.c:380:
+       struct resource *ret_res;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#177: FILE: kernel/resource.c:383:
        for (;; parent = first) {
+               ret_res = NULL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: kernel/resource.c:384:
+               ret_res = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: kernel/resource.c:384:
+               ret_res = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: kernel/resource.c:389:
+               ret_res = first;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: kernel/resource.c:389:
+               ret_res = first;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#191: FILE: kernel/resource.c:399:
        for (next = first; ; next = next->sibling) {
[...]
+               if (next->start < new->start || next->end > new->end) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: kernel/resource.c:401:
+               if (next->start < new->start || next->end > new->end) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: kernel/resource.c:401:
+               if (next->start < new->start || next->end > new->end) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#194: FILE: kernel/resource.c:401:
+               if (next->start < new->start || next->end > new->end) {
+                       ret_res = next;

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: kernel/resource.c:402:
+                       ret_res = next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: kernel/resource.c:402:
+                       ret_res = next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: kernel/resource.c:404:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: kernel/resource.c:404:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: kernel/resource.c:411:
+       ret_res = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: kernel/resource.c:431:
+       return ret_res;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: kernel/resource.c:441:
+       write_lock(&resource_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: kernel/resource.c:442:
+       while (new->start && !new->parent) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#224: FILE: kernel/resource.c:442:
+       while (new->start && !new->parent) {
+               struct resource *conflict;

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: kernel/resource.c:443:
+               struct resource *conflict;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: kernel/resource.c:443:
+               struct resource *conflict;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: kernel/resource.c:445:
+               conflict = __insert_resource(root, new);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: kernel/resource.c:445:
+               conflict = __insert_resource(root, new);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#228: FILE: kernel/resource.c:446:
+               if (!conflict)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: kernel/resource.c:446:
+               if (!conflict)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#228: FILE: kernel/resource.c:446:
+               if (!conflict)
+                       break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: kernel/resource.c:447:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: kernel/resource.c:447:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: kernel/resource.c:448:
+               if (conflict->start < new->start) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: kernel/resource.c:448:
+               if (conflict->start < new->start) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#230: FILE: kernel/resource.c:448:
+               if (conflict->start < new->start) {
+                       new->start = conflict->end;

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: kernel/resource.c:449:
+                       new->start = conflict->end;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: kernel/resource.c:449:
+                       new->start = conflict->end;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: kernel/resource.c:450:
+                       continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: kernel/resource.c:450:
+                       continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: kernel/resource.c:451:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: kernel/resource.c:451:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: kernel/resource.c:452:
+               if (conflict->end > new->end) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: kernel/resource.c:452:
+               if (conflict->end > new->end) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#234: FILE: kernel/resource.c:452:
+               if (conflict->end > new->end) {
+                       new->end = conflict->start;

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: kernel/resource.c:453:
+                       new->end = conflict->start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: kernel/resource.c:453:
+                       new->end = conflict->start;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: kernel/resource.c:454:
+                       continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: kernel/resource.c:454:
+                       continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: kernel/resource.c:455:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: kernel/resource.c:455:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: kernel/resource.c:456:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: kernel/resource.c:469:
+       struct resource *res_conflict;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: kernel/resource.c:471:
+       write_lock(&resource_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: kernel/resource.c:472:
+       res_conflict = __insert_resource(parent, new);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: kernel/resource.c:473:
+       write_unlock(&resource_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: kernel/resource.c:475:
+       return res_conflict ? -EBUSY : 0;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#260: FILE: kernel/resource.c:477:
+}
+/**

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000233583.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 32 errors, 54 warnings, 7 checks, 150 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000233583.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
