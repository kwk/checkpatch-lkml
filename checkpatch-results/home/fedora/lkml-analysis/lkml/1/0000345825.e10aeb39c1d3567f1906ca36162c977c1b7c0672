WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
Temporarily copy the mpc-i2c driver to continue support for the ppc architecture until it is removed in mid-2008. This file should be deleted as part of ppc's final removal.

WARNING:BAD_SIGN_OFF: Duplicate signature
#33: 
Signed-off-by: Jon Smirl <jonsmirl@gmail.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Duplicate signature
#35: 
Signed-off-by: Jon Smirl <jonsmirl@gmail.com>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#196: FILE: drivers/i2c/busses/Kconfig:322:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#218: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#223: FILE: drivers/i2c/busses/i2c-mpc-ppc.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#244: FILE: drivers/i2c/busses/i2c-mpc-ppc.c:22:
+#include <asm/io.h>

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#251: FILE: drivers/i2c/busses/i2c-mpc-ppc.c:29:
+#define MPC_I2C_FDR ^I0x04$

WARNING:INLINE: plain inline is preferred over __inline__
#282: FILE: drivers/i2c/busses/i2c-mpc-ppc.c:60:
+static __inline__ void writeccr(struct mpc_i2c *i2c, u32 x)

WARNING:LINE_SPACING: Missing a blank line after declarations
#290: FILE: drivers/i2c/busses/i2c-mpc-ppc.c:68:
+	struct mpc_i2c *i2c = dev_id;
+	if (readb(i2c->base + MPC_I2C_SR) & CSR_MIF) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#307: FILE: drivers/i2c/busses/i2c-mpc-ppc.c:85:
+	udelay(30);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#309: FILE: drivers/i2c/busses/i2c-mpc-ppc.c:87:
+	udelay(30);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#311: FILE: drivers/i2c/busses/i2c-mpc-ppc.c:89:
+	udelay(30);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#313: FILE: drivers/i2c/busses/i2c-mpc-ppc.c:91:
+	udelay(30);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#315: FILE: drivers/i2c/busses/i2c-mpc-ppc.c:93:
+	udelay(30);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#318: FILE: drivers/i2c/busses/i2c-mpc-ppc.c:96:
+static int i2c_wait(struct mpc_i2c *i2c, unsigned timeout, int writing)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#324: FILE: drivers/i2c/busses/i2c-mpc-ppc.c:102:
+	if (i2c->irq == 0)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#340: FILE: drivers/i2c/busses/i2c-mpc-ppc.c:118:
+		result = wait_event_interruptible_timeout(i2c->queue,
+			(i2c->interrupt & CSR_MIF), timeout * HZ);

CHECK:BRACES: braces {} should be used on all arms of this statement
#380: FILE: drivers/i2c/busses/i2c-mpc-ppc.c:158:
+	if (i2c->flags & FSL_I2C_DEV_SEPARATE_DFSRR) {
[...]
+	} else if (i2c->flags & FSL_I2C_DEV_CLOCK_5200)
[...]
+	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#403: FILE: drivers/i2c/busses/i2c-mpc-ppc.c:181:
+		     const u8 * data, int length, int restart)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#406: FILE: drivers/i2c/busses/i2c-mpc-ppc.c:184:
+	unsigned timeout = i2c->adap.timeout;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#432: FILE: drivers/i2c/busses/i2c-mpc-ppc.c:210:
+		    u8 * data, int length, int restart)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#434: FILE: drivers/i2c/busses/i2c-mpc-ppc.c:212:
+	unsigned timeout = i2c->adap.timeout;

CHECK:SPACING: No space is necessary after a cast
#544: FILE: drivers/i2c/busses/i2c-mpc-ppc.c:322:
+	pdata = (struct fsl_i2c_platform_data *) pdev->dev.platform_data;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#546: FILE: drivers/i2c/busses/i2c-mpc-ppc.c:324:
+	if (!(i2c = kzalloc(sizeof(*i2c), GFP_KERNEL))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#546: FILE: drivers/i2c/busses/i2c-mpc-ppc.c:324:
+	if (!(i2c = kzalloc(sizeof(*i2c), GFP_KERNEL))) {
+		return -ENOMEM;
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#561: FILE: drivers/i2c/busses/i2c-mpc-ppc.c:339:
+		printk(KERN_ERR "i2c-mpc - failed to map controller\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#567: FILE: drivers/i2c/busses/i2c-mpc-ppc.c:345:
+		if ((result = request_irq(i2c->irq, mpc_i2c_isr,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#569: FILE: drivers/i2c/busses/i2c-mpc-ppc.c:347:
+			printk(KERN_ERR

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#581: FILE: drivers/i2c/busses/i2c-mpc-ppc.c:359:
+	if ((result = i2c_add_numbered_adapter(&i2c->adap)) < 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#582: FILE: drivers/i2c/busses/i2c-mpc-ppc.c:360:
+		printk(KERN_ERR "i2c-mpc - failed to add adapter\n");

WARNING:INDENTED_LABEL: labels should not be indented
#588: FILE: drivers/i2c/busses/i2c-mpc-ppc.c:366:
+      fail_add:

WARNING:INDENTED_LABEL: labels should not be indented
#591: FILE: drivers/i2c/busses/i2c-mpc-ppc.c:369:
+      fail_irq:

WARNING:INDENTED_LABEL: labels should not be indented
#593: FILE: drivers/i2c/busses/i2c-mpc-ppc.c:371:
+      fail_map:

WARNING:INDENTED_LABEL: labels should not be indented
#594: FILE: drivers/i2c/busses/i2c-mpc-ppc.c:372:
+      fail_get_irq:

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#639: FILE: drivers/i2c/busses/i2c-mpc-ppc.c:417:
+    ("I2C-Bus adapter for MPC107 bridge and MPC824x/85xx/52xx processors");$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000345825.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 21 warnings, 8 checks, 525 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000345825.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
