WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
Gitweb:     http://git.kernel.org/tip/d180c5bccec02612256fd8076ff3c1fac3429553

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#96: FILE: include/linux/sched.h:1726:
+extern void task_times(struct task_struct *p, cputime_t *ut, cputime_t *st);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:BRACES: Unbalanced braces around else statement
#170: FILE: kernel/sched.c:5224:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#189: FILE: kernel/sched.c:5242:
+	cputime_t utime;
+	task_times(p, &utime, NULL);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000042583.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 2 checks, 126 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000042583.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
