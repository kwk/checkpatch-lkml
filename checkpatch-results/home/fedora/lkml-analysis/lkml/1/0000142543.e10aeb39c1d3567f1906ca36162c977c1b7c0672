WARNING:TYPO_SPELLING: 'architecure' may be misspelled - perhaps 'architecture'?
#18: 
Subject: [PATCH 4/14] score - New architecure port to SunplusCT S+CORE
                                  ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#53: FILE: arch/score/include/asm/kmap_types.h:1:
+#ifndef __SCORE_KMAP_TYPES_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#57: FILE: arch/score/include/asm/kmap_types.h:5:
+       KM_BOUNCE_READ,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#58: FILE: arch/score/include/asm/kmap_types.h:6:
+       KM_SKB_SUNRPC_DATA,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: arch/score/include/asm/kmap_types.h:7:
+       KM_SKB_DATA_SOFTIRQ,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: arch/score/include/asm/kmap_types.h:8:
+       KM_USER0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: arch/score/include/asm/kmap_types.h:9:
+       KM_USER1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#62: FILE: arch/score/include/asm/kmap_types.h:10:
+       KM_BIO_SRC_IRQ,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#63: FILE: arch/score/include/asm/kmap_types.h:11:
+       KM_BIO_DST_IRQ,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#64: FILE: arch/score/include/asm/kmap_types.h:12:
+       KM_PTE0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: arch/score/include/asm/kmap_types.h:13:
+       KM_PTE1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: arch/score/include/asm/kmap_types.h:14:
+       KM_IRQ0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: arch/score/include/asm/kmap_types.h:15:
+       KM_IRQ1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: arch/score/include/asm/kmap_types.h:16:
+       KM_SOFTIRQ0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: arch/score/include/asm/kmap_types.h:17:
+       KM_SOFTIRQ1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: arch/score/include/asm/kmap_types.h:18:
+       KM_TYPE_NR$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#82: FILE: arch/score/include/asm/linkage.h:1:
+#ifndef __SCORE_LINKAGE_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#94: FILE: arch/score/include/asm/local.h:1:
+#ifndef __SCORE_LOCAL_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#108: FILE: arch/score/include/asm/mman.h:1:
+#ifndef __SCORE_MMAN_H

ERROR:TRAILING_WHITESPACE: trailing whitespace
#115: FILE: arch/score/include/asm/mman.h:8:
+ * allowed without PROT_WRITE and no access will be allowed for $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#116: FILE: arch/score/include/asm/mman.h:8:
PROT_NONE.

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#122: FILE: arch/score/include/asm/mman.h:14:
+#define PROT_SEM       0x10            /* page may be used for atomic ops $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#124: FILE: arch/score/include/asm/mman.h:15:
+#define PROT_GROWSDOWN 0x01000000      /* mprotect flag: extend change to $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#124: FILE: arch/score/include/asm/mman.h:15:
+#define PROT_SEM       0x10            /* page may be used for atomic ops 
+#define PROT_GROWSDOWN 0x01000000      /* mprotect flag: extend change to 

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#126: FILE: arch/score/include/asm/mman.h:16:
+#define PROT_GROWSUP   0x02000000      /* mprotect flag: extend change to $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#126: FILE: arch/score/include/asm/mman.h:16:
+#define PROT_GROWSDOWN 0x01000000      /* mprotect flag: extend change to 
+#define PROT_GROWSUP   0x02000000      /* mprotect flag: extend change to 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#128: FILE: arch/score/include/asm/mman.h:17:
+#define PROT_GROWSUP   0x02000000      /* mprotect flag: extend change to 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#137: FILE: arch/score/include/asm/mman.h:26:
+/* not used by linux, but here to make sure we don't clash with ABI $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#139: FILE: arch/score/include/asm/mman.h:27:
+/* not used by linux, but here to make sure we don't clash with ABI 
+#define MAP_RENAME     0x020           /* Assign page to file */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: arch/score/include/asm/mman.h:30:
+#define MAP_AUTORSRV   0x100           /* Logical swap reserved on demand $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#144: FILE: arch/score/include/asm/mman.h:31:
+#define MAP_AUTORSRV   0x100           /* Logical swap reserved on demand 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#152: FILE: arch/score/include/asm/mman.h:39:
+#define MAP_POPULATE   0x10000         /* populate (prefault) pagetables $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#154: FILE: arch/score/include/asm/mman.h:40:
+#define MAP_POPULATE   0x10000         /* populate (prefault) pagetables 
+#define MAP_NONBLOCK   0x20000         /* do not block on IO */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: arch/score/include/asm/mman.h:47:
+#define MS_SYNC                0x0004          /* synchronous memory sync $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#163: FILE: arch/score/include/asm/mman.h:48:
+#define MS_SYNC                0x0004          /* synchronous memory sync 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#171: FILE: arch/score/include/asm/mman.h:56:
+#define MADV_RANDOM    1               /* expect random page references $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#173: FILE: arch/score/include/asm/mman.h:57:
+#define MADV_SEQUENTIAL        2               /* expect sequential page $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#173: FILE: arch/score/include/asm/mman.h:57:
+#define MADV_RANDOM    1               /* expect random page references 
+#define MADV_SEQUENTIAL        2               /* expect sequential page 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#175: FILE: arch/score/include/asm/mman.h:58:
+#define MADV_SEQUENTIAL        2               /* expect sequential page 
+#define MADV_WILLNEED  3               /* will need these pages */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#178: FILE: arch/score/include/asm/mman.h:61:
+/* common parameters: try to keep these consistent across architectures $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#180: FILE: arch/score/include/asm/mman.h:62:
+#define MADV_REMOVE    9               /* remove these pages & resources $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#180: FILE: arch/score/include/asm/mman.h:62:
+/* common parameters: try to keep these consistent across architectures 
+#define MADV_REMOVE    9               /* remove these pages & resources 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#182: FILE: arch/score/include/asm/mman.h:63:
+#define MADV_REMOVE    9               /* remove these pages & resources 
+#define MADV_DONTFORK  10              /* don't inherit across fork */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#197: FILE: arch/score/include/asm/mmu_context.h:1:
+#ifndef __SCORE_MMU_CONTEXT_H

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#203: FILE: arch/score/include/asm/mmu_context.h:7:
+#include <asm/cacheflush.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: arch/score/include/asm/mmu_context.h:20:
+#define TLBMISS_HANDLER_SETUP_PGD(pgd) (pgd_current = (unsigned $

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#219: FILE: arch/score/include/asm/mmu_context.h:22:
+#define TLBMISS_HANDLER_SETUP()                                \
+do {                                                   \
+       write_c0_context(0);                            \
+       TLBMISS_HANDLER_SETUP_PGD(swapper_pg_dir)       \
+} while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 7)
#220: FILE: arch/score/include/asm/mmu_context.h:23:
+do {                                                   \
+       write_c0_context(0);                            \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: arch/score/include/asm/mmu_context.h:24:
+       write_c0_context(0);                            \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: arch/score/include/asm/mmu_context.h:25:
+       TLBMISS_HANDLER_SETUP_PGD(swapper_pg_dir)       \$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#232: FILE: arch/score/include/asm/mmu_context.h:35:
+                               /* PEVN    --------- VPN ---------- $

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: arch/score/include/asm/mmu_context.h:35:
+                               /* PEVN    --------- VPN ---------- $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: arch/score/include/asm/mmu_context.h:36:
+#define ASID_INC       0x10    /* binary: 0000 0000 0000 0000 0000 0000 $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#234: FILE: arch/score/include/asm/mmu_context.h:36:
+                               /* PEVN    --------- VPN ---------- 
+#define ASID_INC       0x10    /* binary: 0000 0000 0000 0000 0000 0000 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#236: FILE: arch/score/include/asm/mmu_context.h:37:
+#define ASID_MASK      0xff0   /* binary: 0000 0000 0000 0000 0000 1111 $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#236: FILE: arch/score/include/asm/mmu_context.h:37:
+#define ASID_INC       0x10    /* binary: 0000 0000 0000 0000 0000 0000 
+#define ASID_MASK      0xff0   /* binary: 0000 0000 0000 0000 0000 1111 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#238: FILE: arch/score/include/asm/mmu_context.h:38:
+#define ASID_MASK      0xff0   /* binary: 0000 0000 0000 0000 0000 1111 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#243: FILE: arch/score/include/asm/mmu_context.h:43:
+static inline void enter_lazy_tlb(struct mm_struct *mm, struct $

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: arch/score/include/asm/mmu_context.h:52:
+               local_flush_tlb_all();          /* start new asid cycle */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#254: FILE: arch/score/include/asm/mmu_context.h:53:
+               if (!asid)                      /* fix version if needed $

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: arch/score/include/asm/mmu_context.h:53:
+               if (!asid)                      /* fix version if needed $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: arch/score/include/asm/mmu_context.h:53:
+               if (!asid)                      /* fix version if needed $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 0)
#254: FILE: arch/score/include/asm/mmu_context.h:53:
+               if (!asid)                      /* fix version if needed 
*/

ERROR:CODE_INDENT: code indent should use tabs where possible
#256: FILE: arch/score/include/asm/mmu_context.h:54:
+                       asid = ASID_FIRST_VERSION;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#256: FILE: arch/score/include/asm/mmu_context.h:54:
+               if (!asid)                      /* fix version if needed 
+                       asid = ASID_FIRST_VERSION;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: arch/score/include/asm/mmu_context.h:66:
+       cpu_context(0, mm) = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: arch/score/include/asm/mmu_context.h:67:
+       return 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#272: FILE: arch/score/include/asm/mmu_context.h:70:
+static inline void switch_mm(struct mm_struct *prev, struct mm_struct $

ERROR:CODE_INDENT: code indent should use tabs where possible
#274: FILE: arch/score/include/asm/mmu_context.h:71:
+                               struct task_struct *tsk)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: arch/score/include/asm/mmu_context.h:71:
+                               struct task_struct *tsk)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: arch/score/include/asm/mmu_context.h:73:
+       unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: arch/score/include/asm/mmu_context.h:75:
+       local_irq_save(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: arch/score/include/asm/mmu_context.h:76:
+       if ((cpu_context(0, next) ^ asid_cache(0)) & ASID_VERSION_MASK)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#279: FILE: arch/score/include/asm/mmu_context.h:76:
+       if ((cpu_context(0, next) ^ asid_cache(0)) & ASID_VERSION_MASK)
+               get_new_mmu_context(next, 0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#280: FILE: arch/score/include/asm/mmu_context.h:77:
+               get_new_mmu_context(next, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: arch/score/include/asm/mmu_context.h:77:
+               get_new_mmu_context(next, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: arch/score/include/asm/mmu_context.h:78:
+       set_PEVN(cpu_context(0, next));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: arch/score/include/asm/mmu_context.h:79:
+       TLBMISS_HANDLER_SETUP_PGD(next->pgd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: arch/score/include/asm/mmu_context.h:80:
+       local_irq_restore(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: arch/score/include/asm/mmu_context.h:99:
+       unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: arch/score/include/asm/mmu_context.h:101:
+       local_irq_save(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: arch/score/include/asm/mmu_context.h:102:
+       get_new_mmu_context(next, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: arch/score/include/asm/mmu_context.h:103:
+       set_PEVN(cpu_context(0, next));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: arch/score/include/asm/mmu_context.h:104:
+       TLBMISS_HANDLER_SETUP_PGD(next->pgd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: arch/score/include/asm/mmu_context.h:105:
+       local_irq_restore(flags);$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#320: FILE: arch/score/include/asm/mmu.h:1:
+#ifndef __SCORE_MMU_H

WARNING:NEW_TYPEDEFS: do not add new typedefs
#323: FILE: arch/score/include/asm/mmu.h:4:
+typedef unsigned long mm_context_t[NR_CPUS];

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#323: FILE: arch/score/include/asm/mmu.h:4:
+typedef unsigned long mm_context_t[NR_CPUS];

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#334: FILE: arch/score/include/asm/module.h:1:
+#ifndef __SCORE_MODULE_H

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/uaccess.h> instead of <asm/uaccess.h>
#338: FILE: arch/score/include/asm/module.h:5:
+#include <asm/uaccess.h>

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: arch/score/include/asm/module.h:9:
+       struct list_head dbe_list;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: arch/score/include/asm/module.h:10:
+       const struct exception_table_entry *dbe_start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: arch/score/include/asm/module.h:11:
+       const struct exception_table_entry *dbe_end;$

CHECK:CAMELCASE: Avoid CamelCase: <Elf64_Byte>
#347: FILE: arch/score/include/asm/module.h:14:
+typedef uint8_t Elf64_Byte;            /* Type for a 8-bit quantity. */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#347: FILE: arch/score/include/asm/module.h:14:
+typedef uint8_t Elf64_Byte;            /* Type for a 8-bit quantity. */

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Shdr>
#349: FILE: arch/score/include/asm/module.h:16:
+#define Elf_Shdr       Elf32_Shdr

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Shdr>
#349: FILE: arch/score/include/asm/module.h:16:
+#define Elf_Shdr       Elf32_Shdr

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Sym>
#350: FILE: arch/score/include/asm/module.h:17:
+#define Elf_Sym                Elf32_Sym

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Sym>
#350: FILE: arch/score/include/asm/module.h:17:
+#define Elf_Sym                Elf32_Sym

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Ehdr>
#351: FILE: arch/score/include/asm/module.h:18:
+#define Elf_Ehdr       Elf32_Ehdr

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Ehdr>
#351: FILE: arch/score/include/asm/module.h:18:
+#define Elf_Ehdr       Elf32_Ehdr

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Addr>
#352: FILE: arch/score/include/asm/module.h:19:
+#define Elf_Addr       Elf32_Addr

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Addr>
#352: FILE: arch/score/include/asm/module.h:19:
+#define Elf_Addr       Elf32_Addr

ERROR:TRAILING_WHITESPACE: trailing whitespace
#356: FILE: arch/score/include/asm/module.h:23:
+const struct exception_table_entry *search_module_dbetables(unsigned long $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: arch/score/include/asm/module.h:29:
+       return NULL;$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#376: FILE: arch/score/include/asm/module.h:42:
+#define MODULE_ARCH_VERMAGIC \
+       MODULE_PROC_FAMILY MODULE_KERNEL_TYPE MODULE_KERNEL_SMTC

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: arch/score/include/asm/module.h:43:
+       MODULE_PROC_FAMILY MODULE_KERNEL_TYPE MODULE_KERNEL_SMTC$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#388: FILE: arch/score/include/asm/msgbuf.h:1:
+#ifndef __SCORE_SCORE_MSGBUF_H

ERROR:TRAILING_WHITESPACE: trailing whitespace
#399: FILE: arch/score/include/asm/msgbuf.h:12:
+ * - extension of time_t to 64-bit on 32-bitsystem to solve the y2038 $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#405: FILE: arch/score/include/asm/msgbuf.h:17:
+       struct ipc64_perm msg_perm;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#406: FILE: arch/score/include/asm/msgbuf.h:18:
+       __kernel_time_t msg_stime;      /* last msgsnd time */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: arch/score/include/asm/msgbuf.h:19:
+       u32 __unused1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: arch/score/include/asm/msgbuf.h:20:
+       __kernel_time_t msg_rtime;      /* last msgrcv time */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: arch/score/include/asm/msgbuf.h:21:
+       u32 __unused2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: arch/score/include/asm/msgbuf.h:22:
+       __kernel_time_t msg_ctime;      /* last change time */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: arch/score/include/asm/msgbuf.h:23:
+       u32 __unused3;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#412: FILE: arch/score/include/asm/msgbuf.h:24:
+       u32 msg_cbytes;                 /* current number of bytes on $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: arch/score/include/asm/msgbuf.h:24:
+       u32 msg_cbytes;                 /* current number of bytes on $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#414: FILE: arch/score/include/asm/msgbuf.h:25:
+       u32 msg_cbytes;                 /* current number of bytes on 
+       u32 msg_qnum;                   /* number of messages in queue */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#415: FILE: arch/score/include/asm/msgbuf.h:26:
+       u32 msg_qbytes;                 /* max number of bytes on queue */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: arch/score/include/asm/msgbuf.h:27:
+       __kernel_pid_t  msg_lspid;      /* pid of last msgsnd */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: arch/score/include/asm/msgbuf.h:28:
+       __kernel_pid_t  msg_lrpid;      /* last receive pid */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: arch/score/include/asm/msgbuf.h:29:
+       u32 __unused4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: arch/score/include/asm/msgbuf.h:30:
+       u32 __unused5;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#431: FILE: arch/score/include/asm/mutex.h:1:
+#include <asm-generic/mutex-dec.h>

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#440: FILE: arch/score/include/asm/page.h:1:
+#ifndef __SCORE_PAGE_H

CHECK:BIT_MACRO: Prefer using the BIT macro
#450: FILE: arch/score/include/asm/page.h:11:
+#define PAGE_SIZE      (1UL << PAGE_SHIFT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#456: FILE: arch/score/include/asm/page.h:17:
+#include <asm/io.h>

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#458: FILE: arch/score/include/asm/page.h:19:
+extern void build_clear_page(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#459: FILE: arch/score/include/asm/page.h:20:
+extern void build_copy_page(void);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#477: FILE: arch/score/include/asm/page.h:38:
+typedef struct { unsigned long pte; } pte_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#480: FILE: arch/score/include/asm/page.h:41:
+typedef struct page    *pgtable_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#485: FILE: arch/score/include/asm/page.h:46:
+typedef struct { unsigned long pgd; } pgd_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#492: FILE: arch/score/include/asm/page.h:53:
+typedef struct { unsigned long pgprot; } pgprot_t;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#508: FILE: arch/score/include/asm/page.h:69:
+static inline unsigned long virt_to_phys(volatile const void *address)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: arch/score/include/asm/page.h:71:
+       return (unsigned long)address - PAGE_OFFSET + PHYS_OFFSET;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#527: FILE: arch/score/include/asm/page.h:88:
+       return (void *)(address + PAGE_OFFSET - PHYS_OFFSET);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#535: FILE: arch/score/include/asm/page.h:96:
+#define __pa(x)                ((unsigned long) (x) - PAGE_OFFSET + $

CHECK:SPACING: No space is necessary after a cast
#535: FILE: arch/score/include/asm/page.h:96:
+#define __pa(x)                ((unsigned long) (x) - PAGE_OFFSET + 

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#535: FILE: arch/score/include/asm/page.h:96:
+#define __pa(x)                ((unsigned long) (x) - PAGE_OFFSET + 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#537: FILE: arch/score/include/asm/page.h:97:
+#define __va(x)                ((void *)((unsigned long) (x) + $

CHECK:SPACING: No space is necessary after a cast
#537: FILE: arch/score/include/asm/page.h:97:
+#define __va(x)                ((void *)((unsigned long) (x) + 

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#537: FILE: arch/score/include/asm/page.h:97:
+#define __va(x)                ((void *)((unsigned long) (x) + 

CHECK:SPACING: No space is necessary after a cast
#539: FILE: arch/score/include/asm/page.h:98:
+#define __pa_symbol(x) __pa(RELOC_HIDE((unsigned long) (x), 0))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#542: FILE: arch/score/include/asm/page.h:101:
+#define pfn_valid(pfn)         ((pfn) >= ARCH_PFN_OFFSET && (pfn) < $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#542: FILE: arch/score/include/asm/page.h:101:
+#define pfn_valid(pfn)         ((pfn) >= ARCH_PFN_OFFSET && (pfn) < 

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pfn' - possible side-effects?
#542: FILE: arch/score/include/asm/page.h:101:
+#define pfn_valid(pfn)         ((pfn) >= ARCH_PFN_OFFSET && (pfn) < 

ERROR:CODE_INDENT: code indent should use tabs where possible
#549: FILE: arch/score/include/asm/page.h:107:
+                                VM_MAYREAD | VM_MAYWRITE | VM_MAYEXEC)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#549: FILE: arch/score/include/asm/page.h:107:
+                                VM_MAYREAD | VM_MAYWRITE | VM_MAYEXEC)$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#564: FILE: arch/score/include/asm/param.h:1:
+#ifndef __SCORE_PARAM_H

ERROR:TRAILING_WHITESPACE: trailing whitespace
#568: FILE: arch/score/include/asm/param.h:5:
+# define HZ            CONFIG_HZ       /* Internal kernel timer frequency $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#570: FILE: arch/score/include/asm/param.h:6:
+# define USER_HZ       100             /* .. some user interfaces are in $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#570: FILE: arch/score/include/asm/param.h:6:
+# define HZ            CONFIG_HZ       /* Internal kernel timer frequency 
+# define USER_HZ       100             /* .. some user interfaces are in 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#572: FILE: arch/score/include/asm/param.h:7:
+# define USER_HZ       100             /* .. some user interfaces are in 
+# define CLOCKS_PER_SEC        (USER_HZ)       /* like times() */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#596: FILE: arch/score/include/asm/pci.h:1:
+#ifndef __SCORE_PCI_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#610: FILE: arch/score/include/asm/percpu.h:1:
+#ifndef __SCORE_PERCPU_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#624: FILE: arch/score/include/asm/pgalloc.h:1:
+#ifndef __SCORE_PGALLOC_H

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#630: FILE: arch/score/include/asm/pgalloc.h:7:
+extern void pagetable_init(void);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#633: FILE: arch/score/include/asm/pgalloc.h:10:
+static inline void pmd_populate_kernel(struct mm_struct *mm, pmd_t *pmd,
+       pte_t *pte)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#633: FILE: arch/score/include/asm/pgalloc.h:10:
+       pte_t *pte)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#635: FILE: arch/score/include/asm/pgalloc.h:12:
+       set_pmd(pmd, __pmd((unsigned long)pte));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#639: FILE: arch/score/include/asm/pgalloc.h:16:
+static inline void pmd_populate(struct mm_struct *mm, pmd_t *pmd,
+       pgtable_t pte)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#639: FILE: arch/score/include/asm/pgalloc.h:16:
+       pgtable_t pte)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#641: FILE: arch/score/include/asm/pgalloc.h:18:
+       set_pmd(pmd, __pmd((unsigned long)page_address(pte)));$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#649: FILE: arch/score/include/asm/pgalloc.h:26:
+extern void pmd_init(unsigned long page, unsigned long pagetable);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#651: FILE: arch/score/include/asm/pgalloc.h:28:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#655: FILE: arch/score/include/asm/pgalloc.h:32:
+extern void pgd_init(unsigned long page);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#659: FILE: arch/score/include/asm/pgalloc.h:36:
+       pgd_t *ret, *init;$

CHECK:SPACING: No space is necessary after a cast
#661: FILE: arch/score/include/asm/pgalloc.h:38:
+       ret = (pgd_t *) __get_free_pages(GFP_KERNEL, PGD_ORDER);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#661: FILE: arch/score/include/asm/pgalloc.h:38:
+       ret = (pgd_t *) __get_free_pages(GFP_KERNEL, PGD_ORDER);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#662: FILE: arch/score/include/asm/pgalloc.h:39:
+       if (ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#662: FILE: arch/score/include/asm/pgalloc.h:39:
+       if (ret) {
+               init = pgd_offset(&init_mm, 0UL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#663: FILE: arch/score/include/asm/pgalloc.h:40:
+               init = pgd_offset(&init_mm, 0UL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#663: FILE: arch/score/include/asm/pgalloc.h:40:
+               init = pgd_offset(&init_mm, 0UL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#664: FILE: arch/score/include/asm/pgalloc.h:41:
+               pgd_init((unsigned long)ret);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#664: FILE: arch/score/include/asm/pgalloc.h:41:
+               pgd_init((unsigned long)ret);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#665: FILE: arch/score/include/asm/pgalloc.h:42:
+               memcpy(ret + USER_PTRS_PER_PGD, init + USER_PTRS_PER_PGD,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#665: FILE: arch/score/include/asm/pgalloc.h:42:
+               memcpy(ret + USER_PTRS_PER_PGD, init + USER_PTRS_PER_PGD,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#666: FILE: arch/score/include/asm/pgalloc.h:43:
+                      (PTRS_PER_PGD - USER_PTRS_PER_PGD) * $

ERROR:CODE_INDENT: code indent should use tabs where possible
#666: FILE: arch/score/include/asm/pgalloc.h:43:
+                      (PTRS_PER_PGD - USER_PTRS_PER_PGD) * $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#666: FILE: arch/score/include/asm/pgalloc.h:43:
+                      (PTRS_PER_PGD - USER_PTRS_PER_PGD) * $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#667: FILE: arch/score/include/asm/pgalloc.h:43:
+               memcpy(ret + USER_PTRS_PER_PGD, init + USER_PTRS_PER_PGD,
sizeof(pgd_t));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#668: FILE: arch/score/include/asm/pgalloc.h:44:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#670: FILE: arch/score/include/asm/pgalloc.h:46:
+       return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#675: FILE: arch/score/include/asm/pgalloc.h:51:
+       free_pages((unsigned long)pgd, PGD_ORDER);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#679: FILE: arch/score/include/asm/pgalloc.h:55:
+static inline pte_t *pte_alloc_one_kernel(struct mm_struct *mm,
+       unsigned long address)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#679: FILE: arch/score/include/asm/pgalloc.h:55:
+       unsigned long address)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#681: FILE: arch/score/include/asm/pgalloc.h:57:
+       pte_t *pte;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#683: FILE: arch/score/include/asm/pgalloc.h:59:
+       pte = (pte_t *) $

CHECK:SPACING: No space is necessary after a cast
#683: FILE: arch/score/include/asm/pgalloc.h:59:
+       pte = (pte_t *) 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#683: FILE: arch/score/include/asm/pgalloc.h:59:
+       pte = (pte_t *) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#686: FILE: arch/score/include/asm/pgalloc.h:61:
+       return pte;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#690: FILE: arch/score/include/asm/pgalloc.h:65:
+static inline struct page *pte_alloc_one(struct mm_struct *mm,
+       unsigned long address)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#690: FILE: arch/score/include/asm/pgalloc.h:65:
+       unsigned long address)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#692: FILE: arch/score/include/asm/pgalloc.h:67:
+       struct page *pte;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#694: FILE: arch/score/include/asm/pgalloc.h:69:
+       pte = alloc_pages(GFP_KERNEL | __GFP_REPEAT, PTE_ORDER);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#695: FILE: arch/score/include/asm/pgalloc.h:70:
+       if (pte) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#695: FILE: arch/score/include/asm/pgalloc.h:70:
+       if (pte) {
+               clear_highpage(pte);

ERROR:CODE_INDENT: code indent should use tabs where possible
#696: FILE: arch/score/include/asm/pgalloc.h:71:
+               clear_highpage(pte);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#696: FILE: arch/score/include/asm/pgalloc.h:71:
+               clear_highpage(pte);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#697: FILE: arch/score/include/asm/pgalloc.h:72:
+               pgtable_page_ctor(pte);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#697: FILE: arch/score/include/asm/pgalloc.h:72:
+               pgtable_page_ctor(pte);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#698: FILE: arch/score/include/asm/pgalloc.h:73:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#699: FILE: arch/score/include/asm/pgalloc.h:74:
+       return pte;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#704: FILE: arch/score/include/asm/pgalloc.h:79:
+       free_pages((unsigned long)pte, PTE_ORDER);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#709: FILE: arch/score/include/asm/pgalloc.h:84:
+       pgtable_page_dtor(pte);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#710: FILE: arch/score/include/asm/pgalloc.h:85:
+       __free_pages(pte, PTE_ORDER);$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pte' - possible side-effects?
#713: FILE: arch/score/include/asm/pgalloc.h:88:
+#define __pte_free_tlb(tlb, pte)                       \
+do {                                                   \
+       pgtable_page_dtor(pte);                         \
+       tlb_remove_page((tlb), pte);                    \
+} while (0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 7)
#714: FILE: arch/score/include/asm/pgalloc.h:89:
+do {                                                   \
+       pgtable_page_dtor(pte);                         \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#715: FILE: arch/score/include/asm/pgalloc.h:90:
+       pgtable_page_dtor(pte);                         \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#716: FILE: arch/score/include/asm/pgalloc.h:91:
+       tlb_remove_page((tlb), pte);                    \$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#730: FILE: arch/score/include/asm/pgtable-32.h:1:
+#ifndef __SCORE_PGTABLE_32_H

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#752: FILE: arch/score/include/asm/pgtable-32.h:23:
+#define USER_PTRS_PER_PGD      (0x80000000UL/PGDIR_SIZE)
                                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#759: FILE: arch/score/include/asm/pgtable-32.h:30:
+#define VMALLOC_END            (FIXADDR_START - 2*PAGE_SIZE)
                                                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#762: FILE: arch/score/include/asm/pgtable-32.h:33:
+       printk("%s:%d: bad pte %08lx.\n", __FILE__, __LINE__, pte_val(e))$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#762: FILE: arch/score/include/asm/pgtable-32.h:33:
+       printk("%s:%d: bad pte %08lx.\n", __FILE__, __LINE__, pte_val(e))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#764: FILE: arch/score/include/asm/pgtable-32.h:35:
+       printk("%s:%d: bad pgd %08lx.\n", __FILE__, __LINE__, pgd_val(e))$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#764: FILE: arch/score/include/asm/pgtable-32.h:35:
+       printk("%s:%d: bad pgd %08lx.\n", __FILE__, __LINE__, pgd_val(e))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#766: FILE: arch/score/include/asm/pgtable-32.h:37:
+extern void load_pgd(unsigned long pg_dir);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#767: FILE: arch/score/include/asm/pgtable-32.h:38:
+extern pte_t invalid_pte_table[PAGE_SIZE/sizeof(pte_t)];
                                         ^

CHECK:SPACING: No space is necessary after a cast
#774: FILE: arch/score/include/asm/pgtable-32.h:45:
+       return pmd_val(pmd) == (unsigned long) invalid_pte_table;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#774: FILE: arch/score/include/asm/pgtable-32.h:45:
+       return pmd_val(pmd) == (unsigned long) invalid_pte_table;$

CHECK:SPACING: No space is necessary after a cast
#781: FILE: arch/score/include/asm/pgtable-32.h:52:
+       return pmd_val(pmd) != (unsigned long) invalid_pte_table;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#781: FILE: arch/score/include/asm/pgtable-32.h:52:
+       return pmd_val(pmd) != (unsigned long) invalid_pte_table;$

CHECK:SPACING: No space is necessary after a cast
#786: FILE: arch/score/include/asm/pgtable-32.h:57:
+       pmd_val(*pmdp) = ((unsigned long) invalid_pte_table);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#786: FILE: arch/score/include/asm/pgtable-32.h:57:
+       pmd_val(*pmdp) = ((unsigned long) invalid_pte_table);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#791: FILE: arch/score/include/asm/pgtable-32.h:62:
+#define pfn_pte(pfn, prot)     __pte(((unsigned long long)(pfn) << $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#791: FILE: arch/score/include/asm/pgtable-32.h:62:
+#define pfn_pte(pfn, prot)     __pte(((unsigned long long)(pfn) << 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#795: FILE: arch/score/include/asm/pgtable-32.h:65:
+#define __pud_offset(address)  (((address) >> PUD_SHIFT) & $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#795: FILE: arch/score/include/asm/pgtable-32.h:65:
+#define __pud_offset(address)  (((address) >> PUD_SHIFT) & 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#797: FILE: arch/score/include/asm/pgtable-32.h:66:
+#define __pmd_offset(address)  (((address) >> PMD_SHIFT) & $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#797: FILE: arch/score/include/asm/pgtable-32.h:66:
+#define __pmd_offset(address)  (((address) >> PMD_SHIFT) & 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#802: FILE: arch/score/include/asm/pgtable-32.h:70:
+#define pgd_index(address)     (((address) >> PGDIR_SHIFT) & $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#802: FILE: arch/score/include/asm/pgtable-32.h:70:
+#define pgd_index(address)     (((address) >> PGDIR_SHIFT) & 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#810: FILE: arch/score/include/asm/pgtable-32.h:77:
+       (((address) >> PAGE_SHIFT) & (PTRS_PER_PTE - 1))$

CHECK:SPACING: No space is necessary after a cast
#812: FILE: arch/score/include/asm/pgtable-32.h:79:
+       ((pte_t *) pmd_page_vaddr(*(dir)) + __pte_offset(address))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#812: FILE: arch/score/include/asm/pgtable-32.h:79:
+       ((pte_t *) pmd_page_vaddr(*(dir)) + __pte_offset(address))$

CHECK:SPACING: No space is necessary after a cast
#814: FILE: arch/score/include/asm/pgtable-32.h:81:
+       ((pte_t *) pmd_page_vaddr(*(dir)) + __pte_offset(address))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#814: FILE: arch/score/include/asm/pgtable-32.h:81:
+       ((pte_t *) pmd_page_vaddr(*(dir)) + __pte_offset(address))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#817: FILE: arch/score/include/asm/pgtable-32.h:84:
+       ((pte_t *)page_address(pmd_page(*(dir))) + __pte_offset(address))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#819: FILE: arch/score/include/asm/pgtable-32.h:86:
+       ((pte_t *)page_address(pmd_page(*(dir))) + __pte_offset(address))$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#823: FILE: arch/score/include/asm/pgtable-32.h:90:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#832: FILE: arch/score/include/asm/pgtable-32.h:99:
+#define __swp_entry(type, offset) ((swp_entry_t){(type) | ((offset) << $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#832: FILE: arch/score/include/asm/pgtable-32.h:99:
+#define __swp_entry(type, offset) ((swp_entry_t){(type) | ((offset) << 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#836: FILE: arch/score/include/asm/pgtable-32.h:102:
+ * Bits 9(_PAGE_PRESENT) and 10(_PAGE_FILE)are taken, split up 30 bits of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#841: FILE: arch/score/include/asm/pgtable-32.h:106:
+#define pte_to_pgoff(_pte)     (((_pte).pte & 0x1ff) | (((_pte).pte >> $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#841: FILE: arch/score/include/asm/pgtable-32.h:106:
+#define pte_to_pgoff(_pte)     (((_pte).pte & 0x1ff) | (((_pte).pte >> 

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_pte' - possible side-effects?
#841: FILE: arch/score/include/asm/pgtable-32.h:106:
+#define pte_to_pgoff(_pte)     (((_pte).pte & 0x1ff) | (((_pte).pte >> 

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'off' - possible side-effects?
#844: FILE: arch/score/include/asm/pgtable-32.h:108:
+#define pgoff_to_pte(off)      ((pte_t) {((off) & 0x1ff) | \
+                                (((off) >> 9) << 11) | _PAGE_FILE})

ERROR:CODE_INDENT: code indent should use tabs where possible
#845: FILE: arch/score/include/asm/pgtable-32.h:109:
+                                (((off) >> 9) << 11) | _PAGE_FILE})$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#845: FILE: arch/score/include/asm/pgtable-32.h:109:
+                                (((off) >> 9) << 11) | _PAGE_FILE})$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#859: FILE: arch/score/include/asm/pgtable-bits.h:1:
+#ifndef __SCORE_PGTABLE_BITS_H

ERROR:TRAILING_WHITESPACE: trailing whitespace
#862: FILE: arch/score/include/asm/pgtable-bits.h:4:
+#define _PAGE_ACCESSED                 (1<<5)  /* implemented in software $

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#862: FILE: arch/score/include/asm/pgtable-bits.h:4:
+#define _PAGE_ACCESSED                 (1<<5)  /* implemented in software 
                                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#862: FILE: arch/score/include/asm/pgtable-bits.h:4:
+#define _PAGE_ACCESSED                 (1<<5)  /* implemented in software 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#864: FILE: arch/score/include/asm/pgtable-bits.h:5:
+#define _PAGE_READ                     (1<<6)  /* implemented in software $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#864: FILE: arch/score/include/asm/pgtable-bits.h:5:
+#define _PAGE_ACCESSED                 (1<<5)  /* implemented in software 
+#define _PAGE_READ                     (1<<6)  /* implemented in software 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#866: FILE: arch/score/include/asm/pgtable-bits.h:6:
+#define _PAGE_WRITE                    (1<<7)  /* implemented in software $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#866: FILE: arch/score/include/asm/pgtable-bits.h:6:
+#define _PAGE_READ                     (1<<6)  /* implemented in software 
+#define _PAGE_WRITE                    (1<<7)  /* implemented in software 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#868: FILE: arch/score/include/asm/pgtable-bits.h:7:
+#define _PAGE_PRESENT                  (1<<9)  /* implemented in software $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#868: FILE: arch/score/include/asm/pgtable-bits.h:7:
+#define _PAGE_WRITE                    (1<<7)  /* implemented in software 
+#define _PAGE_PRESENT                  (1<<9)  /* implemented in software 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#870: FILE: arch/score/include/asm/pgtable-bits.h:8:
+#define _PAGE_MODIFIED                 (1<<10) /* implemented in software $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#870: FILE: arch/score/include/asm/pgtable-bits.h:8:
+#define _PAGE_PRESENT                  (1<<9)  /* implemented in software 
+#define _PAGE_MODIFIED                 (1<<10) /* implemented in software 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#872: FILE: arch/score/include/asm/pgtable-bits.h:9:
+#define _PAGE_MODIFIED                 (1<<10) /* implemented in software 
+#define _PAGE_FILE                     (1<<10)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#877: FILE: arch/score/include/asm/pgtable-bits.h:14:
+#define _PAGE_DIRTY                    (1<<2)  /* Write bit */
                                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#877: FILE: arch/score/include/asm/pgtable-bits.h:14:
+#define _PAGE_DIRTY                    (1<<2)  /* Write bit */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#878: FILE: arch/score/include/asm/pgtable-bits.h:15:
+#define _PAGE_SILENT_WRITE             (1<<2)
                                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#878: FILE: arch/score/include/asm/pgtable-bits.h:15:
+#define _PAGE_SILENT_WRITE             (1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#879: FILE: arch/score/include/asm/pgtable-bits.h:16:
+#define _PAGE_CACHE                    (1<<3)  /* cache */
                                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#879: FILE: arch/score/include/asm/pgtable-bits.h:16:
+#define _PAGE_CACHE                    (1<<3)  /* cache */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#880: FILE: arch/score/include/asm/pgtable-bits.h:17:
+#define _CACHE_MASK                    (1<<3)
                                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#880: FILE: arch/score/include/asm/pgtable-bits.h:17:
+#define _CACHE_MASK                    (1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#881: FILE: arch/score/include/asm/pgtable-bits.h:18:
+#define _PAGE_BUFFERABLE               (1<<4)  /*Fallow Spec. */
                                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#881: FILE: arch/score/include/asm/pgtable-bits.h:18:
+#define _PAGE_BUFFERABLE               (1<<4)  /*Fallow Spec. */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#882: FILE: arch/score/include/asm/pgtable-bits.h:19:
+#define _PAGE_BIG                      (1<<8)  /* Big page (64KB) */
                                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#882: FILE: arch/score/include/asm/pgtable-bits.h:19:
+#define _PAGE_BIG                      (1<<8)  /* Big page (64KB) */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#884: FILE: arch/score/include/asm/pgtable-bits.h:21:
+#define _CACHE_UNCACHED                        (1<<11) /*implemented in $

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#884: FILE: arch/score/include/asm/pgtable-bits.h:21:
+#define _CACHE_UNCACHED                        (1<<11) /*implemented in 
                                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#884: FILE: arch/score/include/asm/pgtable-bits.h:21:
+#define _CACHE_UNCACHED                        (1<<11) /*implemented in 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#886: FILE: arch/score/include/asm/pgtable-bits.h:22:
+#define _CACHE_UNCACHED                        (1<<11) /*implemented in 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#888: FILE: arch/score/include/asm/pgtable-bits.h:24:
+#define __WRITEABLE    (_PAGE_WRITE | _PAGE_SILENT_WRITE | $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#890: FILE: arch/score/include/asm/pgtable-bits.h:25:
+#define _PAGE_CHG_MASK (PAGE_MASK | _PAGE_ACCESSED | _PAGE_MODIFIED | $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#903: FILE: arch/score/include/asm/pgtable.h:1:
+#ifndef __SCORE_PGTABLE_H

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#908: FILE: arch/score/include/asm/pgtable.h:6:
+#include <asm/io.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#914: FILE: arch/score/include/asm/pgtable.h:12:
+#define PAGE_SHARED    __pgprot(_PAGE_PRESENT | _PAGE_READ | _PAGE_WRITE $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#914: FILE: arch/score/include/asm/pgtable.h:12:
+#define PAGE_SHARED    __pgprot(_PAGE_PRESENT | _PAGE_READ | _PAGE_WRITE 

ERROR:CODE_INDENT: code indent should use tabs where possible
#916: FILE: arch/score/include/asm/pgtable.h:13:
+                               _PAGE_CACHE)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#916: FILE: arch/score/include/asm/pgtable.h:13:
+                               _PAGE_CACHE)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#919: FILE: arch/score/include/asm/pgtable.h:16:
+#define PAGE_KERNEL    __pgprot(_PAGE_PRESENT | __READABLE | __WRITEABLE $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#919: FILE: arch/score/include/asm/pgtable.h:16:
+#define PAGE_KERNEL    __pgprot(_PAGE_PRESENT | __READABLE | __WRITEABLE 

ERROR:CODE_INDENT: code indent should use tabs where possible
#921: FILE: arch/score/include/asm/pgtable.h:17:
+                                _PAGE_GLOBAL | _PAGE_CACHE)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#921: FILE: arch/score/include/asm/pgtable.h:17:
+                                _PAGE_GLOBAL | _PAGE_CACHE)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#923: FILE: arch/score/include/asm/pgtable.h:19:
+                       __WRITEABLE | _PAGE_GLOBAL & ~_PAGE_CACHE)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#923: FILE: arch/score/include/asm/pgtable.h:19:
+                       __WRITEABLE | _PAGE_GLOBAL & ~_PAGE_CACHE)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#957: FILE: arch/score/include/asm/pgtable.h:53:
+       (virt_to_page((void *)(empty_zero_page + \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#958: FILE: arch/score/include/asm/pgtable.h:54:
+        (((unsigned long)(vaddr)) & zero_page_mask))))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#958: FILE: arch/score/include/asm/pgtable.h:54:
+        (((unsigned long)(vaddr)) & zero_page_mask))))$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#960: FILE: arch/score/include/asm/pgtable.h:56:
+extern void paging_init(void);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#980: FILE: arch/score/include/asm/pgtable.h:76:
+       *ptep = pteval;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#985: FILE: arch/score/include/asm/pgtable.h:81:
+static inline void pte_clear(struct mm_struct *mm, unsigned long addr, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#987: FILE: arch/score/include/asm/pgtable.h:82:
+static inline void pte_clear(struct mm_struct *mm, unsigned long addr, 
+{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#988: FILE: arch/score/include/asm/pgtable.h:83:
+       set_pte_at(mm, addr, ptep, __pte(0));$

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#995: FILE: arch/score/include/asm/pgtable.h:90:
+#define set_pmd(pmdptr, pmdval) do { *(pmdptr) = (pmdval); } while (0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1002: FILE: arch/score/include/asm/pgtable.h:97:
+ * We used to declare this array with size but gcc 3.3 and older are not $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1012: FILE: arch/score/include/asm/pgtable.h:106:
+static inline int pte_write(pte_t pte) { return pte_val(pte) & $

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1012: FILE: arch/score/include/asm/pgtable.h:106:
+static inline int pte_write(pte_t pte) { return pte_val(pte) & 

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1014: FILE: arch/score/include/asm/pgtable.h:107:
+static inline int pte_dirty(pte_t pte) { return pte_val(pte) & $

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1014: FILE: arch/score/include/asm/pgtable.h:107:
+static inline int pte_dirty(pte_t pte) { return pte_val(pte) & 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1016: FILE: arch/score/include/asm/pgtable.h:108:
+static inline int pte_young(pte_t pte) { return pte_val(pte) & $

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1016: FILE: arch/score/include/asm/pgtable.h:108:
+static inline int pte_young(pte_t pte) { return pte_val(pte) & 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1018: FILE: arch/score/include/asm/pgtable.h:109:
+static inline int pte_file(pte_t pte)  { return pte_val(pte) & $

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1018: FILE: arch/score/include/asm/pgtable.h:109:
+static inline int pte_file(pte_t pte)  { return pte_val(pte) & 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1023: FILE: arch/score/include/asm/pgtable.h:113:
+       pte_val(pte) &= ~(_PAGE_WRITE | _PAGE_SILENT_WRITE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1024: FILE: arch/score/include/asm/pgtable.h:114:
+       return pte;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1029: FILE: arch/score/include/asm/pgtable.h:119:
+       pte_val(pte) &= ~(_PAGE_MODIFIED|_PAGE_SILENT_WRITE);$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1029: FILE: arch/score/include/asm/pgtable.h:119:
+       pte_val(pte) &= ~(_PAGE_MODIFIED|_PAGE_SILENT_WRITE);
                                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1030: FILE: arch/score/include/asm/pgtable.h:120:
+       return pte;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1035: FILE: arch/score/include/asm/pgtable.h:125:
+       pte_val(pte) &= ~(_PAGE_ACCESSED|_PAGE_SILENT_READ);$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1035: FILE: arch/score/include/asm/pgtable.h:125:
+       pte_val(pte) &= ~(_PAGE_ACCESSED|_PAGE_SILENT_READ);
                                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1036: FILE: arch/score/include/asm/pgtable.h:126:
+       return pte;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1041: FILE: arch/score/include/asm/pgtable.h:131:
+       pte_val(pte) |= _PAGE_WRITE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1042: FILE: arch/score/include/asm/pgtable.h:132:
+       if (pte_val(pte) & _PAGE_MODIFIED)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1042: FILE: arch/score/include/asm/pgtable.h:132:
+       if (pte_val(pte) & _PAGE_MODIFIED)
+               pte_val(pte) |= _PAGE_SILENT_WRITE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1043: FILE: arch/score/include/asm/pgtable.h:133:
+               pte_val(pte) |= _PAGE_SILENT_WRITE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1043: FILE: arch/score/include/asm/pgtable.h:133:
+               pte_val(pte) |= _PAGE_SILENT_WRITE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1044: FILE: arch/score/include/asm/pgtable.h:134:
+       return pte;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1049: FILE: arch/score/include/asm/pgtable.h:139:
+       pte_val(pte) |= _PAGE_MODIFIED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1050: FILE: arch/score/include/asm/pgtable.h:140:
+       if (pte_val(pte) & _PAGE_WRITE)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1050: FILE: arch/score/include/asm/pgtable.h:140:
+       if (pte_val(pte) & _PAGE_WRITE)
+               pte_val(pte) |= _PAGE_SILENT_WRITE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1051: FILE: arch/score/include/asm/pgtable.h:141:
+               pte_val(pte) |= _PAGE_SILENT_WRITE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1051: FILE: arch/score/include/asm/pgtable.h:141:
+               pte_val(pte) |= _PAGE_SILENT_WRITE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1052: FILE: arch/score/include/asm/pgtable.h:142:
+       return pte;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1057: FILE: arch/score/include/asm/pgtable.h:147:
+       pte_val(pte) |= _PAGE_ACCESSED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1058: FILE: arch/score/include/asm/pgtable.h:148:
+       if (pte_val(pte) & _PAGE_READ)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1058: FILE: arch/score/include/asm/pgtable.h:148:
+       if (pte_val(pte) & _PAGE_READ)
+               pte_val(pte) |= _PAGE_SILENT_READ;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1059: FILE: arch/score/include/asm/pgtable.h:149:
+               pte_val(pte) |= _PAGE_SILENT_READ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1059: FILE: arch/score/include/asm/pgtable.h:149:
+               pte_val(pte) |= _PAGE_SILENT_READ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1060: FILE: arch/score/include/asm/pgtable.h:150:
+       return pte;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1076: FILE: arch/score/include/asm/pgtable.h:166:
+       unsigned long prot = pgprot_val(_prot);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1078: FILE: arch/score/include/asm/pgtable.h:168:
+       prot = (prot & ~_CACHE_MASK);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1080: FILE: arch/score/include/asm/pgtable.h:170:
+       return __pgprot(prot);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1091: FILE: arch/score/include/asm/pgtable.h:181:
+       return __pte((pte_val(pte) & _PAGE_CHG_MASK) | $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1091: FILE: arch/score/include/asm/pgtable.h:181:
+       return __pte((pte_val(pte) & _PAGE_CHG_MASK) | $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1095: FILE: arch/score/include/asm/pgtable.h:184:
+extern void __update_tlb(struct vm_area_struct *vma, unsigned long $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1095: FILE: arch/score/include/asm/pgtable.h:184:
+extern void __update_tlb(struct vm_area_struct *vma, unsigned long 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1097: FILE: arch/score/include/asm/pgtable.h:185:
+       pte_t pte);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1098: FILE: arch/score/include/asm/pgtable.h:186:
+extern void __update_cache(struct vm_area_struct *vma, unsigned long $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1098: FILE: arch/score/include/asm/pgtable.h:186:
+extern void __update_cache(struct vm_area_struct *vma, unsigned long 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1100: FILE: arch/score/include/asm/pgtable.h:187:
+       pte_t pte);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1103: FILE: arch/score/include/asm/pgtable.h:190:
+static inline void update_mmu_cache(struct vm_area_struct *vma,
+       unsigned long address, pte_t pte)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1103: FILE: arch/score/include/asm/pgtable.h:190:
+       unsigned long address, pte_t pte)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1105: FILE: arch/score/include/asm/pgtable.h:192:
+       __update_tlb(vma, address, pte);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1106: FILE: arch/score/include/asm/pgtable.h:193:
+       __update_cache(vma, address, pte);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1112: FILE: arch/score/include/asm/pgtable.h:199:
+               remap_pfn_range(vma, vaddr, pfn, size, prot)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1112: FILE: arch/score/include/asm/pgtable.h:199:
+               remap_pfn_range(vma, vaddr, pfn, size, prot)$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1130: FILE: arch/score/include/asm/poll.h:1:
+#ifndef __SCORE_POLL_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1147: FILE: arch/score/include/asm/posix_types.h:1:
+#ifndef __SCORE_POSIX_TYPES_H

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1156: FILE: arch/score/include/asm/posix_types.h:10:
+typedef unsigned long  __kernel_ino_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1157: FILE: arch/score/include/asm/posix_types.h:11:
+typedef unsigned int   __kernel_mode_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1158: FILE: arch/score/include/asm/posix_types.h:12:
+typedef unsigned long  __kernel_nlink_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1159: FILE: arch/score/include/asm/posix_types.h:13:
+typedef long           __kernel_off_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1160: FILE: arch/score/include/asm/posix_types.h:14:
+typedef int            __kernel_pid_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1161: FILE: arch/score/include/asm/posix_types.h:15:
+typedef int            __kernel_ipc_pid_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1162: FILE: arch/score/include/asm/posix_types.h:16:
+typedef unsigned int   __kernel_uid_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1163: FILE: arch/score/include/asm/posix_types.h:17:
+typedef unsigned int   __kernel_gid_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1164: FILE: arch/score/include/asm/posix_types.h:18:
+typedef unsigned int   __kernel_size_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1165: FILE: arch/score/include/asm/posix_types.h:19:
+typedef int            __kernel_ssize_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1166: FILE: arch/score/include/asm/posix_types.h:20:
+typedef int            __kernel_ptrdiff_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1167: FILE: arch/score/include/asm/posix_types.h:21:
+typedef long           __kernel_time_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1168: FILE: arch/score/include/asm/posix_types.h:22:
+typedef long           __kernel_suseconds_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1169: FILE: arch/score/include/asm/posix_types.h:23:
+typedef long           __kernel_clock_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1170: FILE: arch/score/include/asm/posix_types.h:24:
+typedef int            __kernel_timer_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1171: FILE: arch/score/include/asm/posix_types.h:25:
+typedef int            __kernel_clockid_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1172: FILE: arch/score/include/asm/posix_types.h:26:
+typedef long           __kernel_daddr_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1173: FILE: arch/score/include/asm/posix_types.h:27:
+typedef char           *__kernel_caddr_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1175: FILE: arch/score/include/asm/posix_types.h:29:
+typedef unsigned short __kernel_uid16_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1176: FILE: arch/score/include/asm/posix_types.h:30:
+typedef unsigned short __kernel_gid16_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1177: FILE: arch/score/include/asm/posix_types.h:31:
+typedef unsigned int   __kernel_uid32_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1178: FILE: arch/score/include/asm/posix_types.h:32:
+typedef unsigned int   __kernel_gid32_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1179: FILE: arch/score/include/asm/posix_types.h:33:
+typedef __kernel_uid_t __kernel_old_uid_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1180: FILE: arch/score/include/asm/posix_types.h:34:
+typedef __kernel_gid_t __kernel_old_gid_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1181: FILE: arch/score/include/asm/posix_types.h:35:
+typedef unsigned int   __kernel_old_dev_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1184: FILE: arch/score/include/asm/posix_types.h:38:
+typedef long long      __kernel_loff_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1187: FILE: arch/score/include/asm/posix_types.h:41:
+typedef struct {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1188: FILE: arch/score/include/asm/posix_types.h:42:
+       long    val[2];$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1194: FILE: arch/score/include/asm/posix_types.h:48:
+static inline void __FD_SET(unsigned long __fd, __kernel_fd_set $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1197: FILE: arch/score/include/asm/posix_types.h:50:
+       unsigned long __tmp = __fd / __NFDBITS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1198: FILE: arch/score/include/asm/posix_types.h:51:
+       unsigned long __rem = __fd % __NFDBITS;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1199: FILE: arch/score/include/asm/posix_types.h:52:
+       unsigned long __rem = __fd % __NFDBITS;
+       __fdsetp->fds_bits[__tmp] |= (1UL<<__rem);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1199: FILE: arch/score/include/asm/posix_types.h:52:
+       __fdsetp->fds_bits[__tmp] |= (1UL<<__rem);$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1199: FILE: arch/score/include/asm/posix_types.h:52:
+       __fdsetp->fds_bits[__tmp] |= (1UL<<__rem);
                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1203: FILE: arch/score/include/asm/posix_types.h:56:
+static inline void __FD_CLR(unsigned long __fd, __kernel_fd_set $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1206: FILE: arch/score/include/asm/posix_types.h:58:
+       unsigned long __tmp = __fd / __NFDBITS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1207: FILE: arch/score/include/asm/posix_types.h:59:
+       unsigned long __rem = __fd % __NFDBITS;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1208: FILE: arch/score/include/asm/posix_types.h:60:
+       unsigned long __rem = __fd % __NFDBITS;
+       __fdsetp->fds_bits[__tmp] &= ~(1UL<<__rem);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1208: FILE: arch/score/include/asm/posix_types.h:60:
+       __fdsetp->fds_bits[__tmp] &= ~(1UL<<__rem);$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1208: FILE: arch/score/include/asm/posix_types.h:60:
+       __fdsetp->fds_bits[__tmp] &= ~(1UL<<__rem);
                                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1212: FILE: arch/score/include/asm/posix_types.h:64:
+static inline int __FD_ISSET(unsigned long __fd, const __kernel_fd_set $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1215: FILE: arch/score/include/asm/posix_types.h:66:
+       unsigned long __tmp = __fd / __NFDBITS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1216: FILE: arch/score/include/asm/posix_types.h:67:
+       unsigned long __rem = __fd % __NFDBITS;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1217: FILE: arch/score/include/asm/posix_types.h:68:
+       unsigned long __rem = __fd % __NFDBITS;
+       return (__p->fds_bits[__tmp] & (1UL<<__rem)) != 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1217: FILE: arch/score/include/asm/posix_types.h:68:
+       return (__p->fds_bits[__tmp] & (1UL<<__rem)) != 0;$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1217: FILE: arch/score/include/asm/posix_types.h:68:
+       return (__p->fds_bits[__tmp] & (1UL<<__rem)) != 0;
                                           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1227: FILE: arch/score/include/asm/posix_types.h:78:
+       unsigned long *__tmp = __p->fds_bits;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1228: FILE: arch/score/include/asm/posix_types.h:79:
+       int __i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1230: FILE: arch/score/include/asm/posix_types.h:81:
+       if (__builtin_constant_p(__FDSET_LONGS)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1230: FILE: arch/score/include/asm/posix_types.h:81:
+       if (__builtin_constant_p(__FDSET_LONGS)) {
+               switch (__FDSET_LONGS) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1231: FILE: arch/score/include/asm/posix_types.h:82:
+               switch (__FDSET_LONGS) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1231: FILE: arch/score/include/asm/posix_types.h:82:
+               switch (__FDSET_LONGS) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1232: FILE: arch/score/include/asm/posix_types.h:83:
+               case 16:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1232: FILE: arch/score/include/asm/posix_types.h:83:
+               case 16:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1233: FILE: arch/score/include/asm/posix_types.h:84:
+                       __tmp[0] = 0; __tmp[1] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1233: FILE: arch/score/include/asm/posix_types.h:84:
+                       __tmp[0] = 0; __tmp[1] = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1234: FILE: arch/score/include/asm/posix_types.h:85:
+                       __tmp[2] = 0; __tmp[3] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1234: FILE: arch/score/include/asm/posix_types.h:85:
+                       __tmp[2] = 0; __tmp[3] = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1235: FILE: arch/score/include/asm/posix_types.h:86:
+                       __tmp[4] = 0; __tmp[5] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1235: FILE: arch/score/include/asm/posix_types.h:86:
+                       __tmp[4] = 0; __tmp[5] = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1236: FILE: arch/score/include/asm/posix_types.h:87:
+                       __tmp[6] = 0; __tmp[7] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1236: FILE: arch/score/include/asm/posix_types.h:87:
+                       __tmp[6] = 0; __tmp[7] = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1237: FILE: arch/score/include/asm/posix_types.h:88:
+                       __tmp[8] = 0; __tmp[9] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1237: FILE: arch/score/include/asm/posix_types.h:88:
+                       __tmp[8] = 0; __tmp[9] = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1238: FILE: arch/score/include/asm/posix_types.h:89:
+                       __tmp[10] = 0; __tmp[11] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1238: FILE: arch/score/include/asm/posix_types.h:89:
+                       __tmp[10] = 0; __tmp[11] = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1239: FILE: arch/score/include/asm/posix_types.h:90:
+                       __tmp[12] = 0; __tmp[13] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1239: FILE: arch/score/include/asm/posix_types.h:90:
+                       __tmp[12] = 0; __tmp[13] = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1240: FILE: arch/score/include/asm/posix_types.h:91:
+                       __tmp[14] = 0; __tmp[15] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1240: FILE: arch/score/include/asm/posix_types.h:91:
+                       __tmp[14] = 0; __tmp[15] = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1241: FILE: arch/score/include/asm/posix_types.h:92:
+                       return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1241: FILE: arch/score/include/asm/posix_types.h:92:
+                       return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1243: FILE: arch/score/include/asm/posix_types.h:94:
+               case 8:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1243: FILE: arch/score/include/asm/posix_types.h:94:
+               case 8:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1244: FILE: arch/score/include/asm/posix_types.h:95:
+                       __tmp[0] = 0; __tmp[1] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1244: FILE: arch/score/include/asm/posix_types.h:95:
+                       __tmp[0] = 0; __tmp[1] = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1245: FILE: arch/score/include/asm/posix_types.h:96:
+                       __tmp[2] = 0; __tmp[3] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1245: FILE: arch/score/include/asm/posix_types.h:96:
+                       __tmp[2] = 0; __tmp[3] = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1246: FILE: arch/score/include/asm/posix_types.h:97:
+                       __tmp[4] = 0; __tmp[5] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1246: FILE: arch/score/include/asm/posix_types.h:97:
+                       __tmp[4] = 0; __tmp[5] = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1247: FILE: arch/score/include/asm/posix_types.h:98:
+                       __tmp[6] = 0; __tmp[7] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1247: FILE: arch/score/include/asm/posix_types.h:98:
+                       __tmp[6] = 0; __tmp[7] = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1248: FILE: arch/score/include/asm/posix_types.h:99:
+                       return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1248: FILE: arch/score/include/asm/posix_types.h:99:
+                       return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1250: FILE: arch/score/include/asm/posix_types.h:101:
+               case 4:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1250: FILE: arch/score/include/asm/posix_types.h:101:
+               case 4:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1251: FILE: arch/score/include/asm/posix_types.h:102:
+                       __tmp[0] = 0; __tmp[1] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1251: FILE: arch/score/include/asm/posix_types.h:102:
+                       __tmp[0] = 0; __tmp[1] = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1252: FILE: arch/score/include/asm/posix_types.h:103:
+                       __tmp[2] = 0; __tmp[3] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1252: FILE: arch/score/include/asm/posix_types.h:103:
+                       __tmp[2] = 0; __tmp[3] = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1253: FILE: arch/score/include/asm/posix_types.h:104:
+                       return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1253: FILE: arch/score/include/asm/posix_types.h:104:
+                       return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1254: FILE: arch/score/include/asm/posix_types.h:105:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1254: FILE: arch/score/include/asm/posix_types.h:105:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1255: FILE: arch/score/include/asm/posix_types.h:106:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1256: FILE: arch/score/include/asm/posix_types.h:107:
+       __i = __FDSET_LONGS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1257: FILE: arch/score/include/asm/posix_types.h:108:
+       while (__i) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1257: FILE: arch/score/include/asm/posix_types.h:108:
+       while (__i) {
+               __i--;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1258: FILE: arch/score/include/asm/posix_types.h:109:
+               __i--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1258: FILE: arch/score/include/asm/posix_types.h:109:
+               __i--;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1259: FILE: arch/score/include/asm/posix_types.h:110:
+               *__tmp = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1259: FILE: arch/score/include/asm/posix_types.h:110:
+               *__tmp = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1260: FILE: arch/score/include/asm/posix_types.h:111:
+               __tmp++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1260: FILE: arch/score/include/asm/posix_types.h:111:
+               __tmp++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1261: FILE: arch/score/include/asm/posix_types.h:112:
+       }$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1275: FILE: arch/score/include/asm/processor.h:1:
+#ifndef __SCORE_PROCESSOR_H

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1312: FILE: arch/score/include/asm/processor.h:38:
+typedef struct {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1313: FILE: arch/score/include/asm/processor.h:39:
+       unsigned long seg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1322: FILE: arch/score/include/asm/processor.h:48:
+       unsigned long reg0, reg2, reg3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1323: FILE: arch/score/include/asm/processor.h:49:
+       unsigned long reg12, reg13, reg14, reg15, reg16;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1324: FILE: arch/score/include/asm/processor.h:50:
+       unsigned long reg17, reg18, reg19, reg20, reg21;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1326: FILE: arch/score/include/asm/processor.h:52:
+       unsigned long cp0_psr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1328: FILE: arch/score/include/asm/processor.h:54:
+       unsigned long cp0_ema;          /* Last user fault */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1329: FILE: arch/score/include/asm/processor.h:55:
+       unsigned long cp0_badvaddr;     /* Last user fault */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1330: FILE: arch/score/include/asm/processor.h:56:
+       unsigned long cp0_baduaddr;     /* Last kernel fault accessing $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1330: FILE: arch/score/include/asm/processor.h:56:
+       unsigned long cp0_baduaddr;     /* Last kernel fault accessing $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1332: FILE: arch/score/include/asm/processor.h:57:
+       unsigned long cp0_baduaddr;     /* Last kernel fault accessing 
+       unsigned long error_code;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1367: FILE: arch/score/include/asm/processor.h:92:
+        * Saved cp0 stuff                                      \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1368: FILE: arch/score/include/asm/processor.h:93:
+        */                                                     \$

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#1368: FILE: arch/score/include/asm/processor.h:93:
+        */                                                     \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1369: FILE: arch/score/include/asm/processor.h:94:
+       .cp0_psr                = 0,                            \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1370: FILE: arch/score/include/asm/processor.h:95:
+       .error_code             = 0,                            \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1371: FILE: arch/score/include/asm/processor.h:96:
+       .trap_no                = 0,                            \$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1379: FILE: arch/score/include/asm/processor.h:104:
+extern long kernel_thread(int (*fn)(void *), void *arg, unsigned long $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1379: FILE: arch/score/include/asm/processor.h:104:
+extern long kernel_thread(int (*fn)(void *), void *arg, unsigned long 

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1381: FILE: arch/score/include/asm/processor.h:105:
+extern unsigned long thread_saved_pc(struct task_struct *tsk);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1382: FILE: arch/score/include/asm/processor.h:106:
+extern void start_thread(struct pt_regs *regs, unsigned long pc, unsigned $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1382: FILE: arch/score/include/asm/processor.h:106:
+extern void start_thread(struct pt_regs *regs, unsigned long pc, unsigned 

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1384: FILE: arch/score/include/asm/processor.h:107:
+extern unsigned long get_wchan(struct task_struct *p);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1386: FILE: arch/score/include/asm/processor.h:109:
+#define __KSTK_TOS(tsk)                ((unsigned $

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000142543.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 128 errors, 284 warnings, 75 checks, 1193 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000142543.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
