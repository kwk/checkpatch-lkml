WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#48: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#53: FILE: drivers/net/mlx4/cmd.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#93: FILE: drivers/net/mlx4/cmd.c:41:
+#include <asm/io.h>

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#161: FILE: drivers/net/mlx4/cmd.c:109:
+static int mlx4_status_to_errno(u8 status) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#219: FILE: drivers/net/mlx4/cmd.c:167:
+	/*
+	 * We use writel (instead of something like memcpy_toio)

CHECK:SPACING: No space is necessary after a cast
#224: FILE: drivers/net/mlx4/cmd.c:172:
+	__raw_writel((__force u32) cpu_to_be32(in_param >> 32),		  hcr + 0);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#225: FILE: drivers/net/mlx4/cmd.c:173:
+	__raw_writel((__force u32) cpu_to_be32(in_param & 0xfffffffful),  hcr + 1);

CHECK:SPACING: No space is necessary after a cast
#226: FILE: drivers/net/mlx4/cmd.c:174:
+	__raw_writel((__force u32) cpu_to_be32(in_modifier),		  hcr + 2);

CHECK:SPACING: No space is necessary after a cast
#227: FILE: drivers/net/mlx4/cmd.c:175:
+	__raw_writel((__force u32) cpu_to_be32(out_param >> 32),	  hcr + 3);

CHECK:SPACING: No space is necessary after a cast
#228: FILE: drivers/net/mlx4/cmd.c:176:
+	__raw_writel((__force u32) cpu_to_be32(out_param & 0xfffffffful), hcr + 4);

CHECK:SPACING: No space is necessary after a cast
#229: FILE: drivers/net/mlx4/cmd.c:177:
+	__raw_writel((__force u32) cpu_to_be32(token << 16),		  hcr + 5);

CHECK:SPACING: No space is necessary after a cast
#234: FILE: drivers/net/mlx4/cmd.c:182:
+	__raw_writel((__force u32) cpu_to_be32((1 << HCR_GO_BIT)		|

CHECK:SPACING: No space is necessary after a cast
#275: FILE: drivers/net/mlx4/cmd.c:223:
+			(u64) be32_to_cpu((__force __be32)

CHECK:SPACING: No space is necessary after a cast
#277: FILE: drivers/net/mlx4/cmd.c:225:
+			(u64) be32_to_cpu((__force __be32)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#317: FILE: drivers/net/mlx4/cmd.c:265:
+	BUG_ON(cmd->free_head < 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#398: FILE: drivers/net/mlx4/cmd.c:346:
+/*
+ * Switch to using events to issue FW commands (can only be called

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#406: FILE: drivers/net/mlx4/cmd.c:354:
+	priv->cmd.context = kmalloc(priv->cmd.max_cmds *
+				   sizeof (struct mlx4_cmd_context),
+				   GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#407: FILE: drivers/net/mlx4/cmd.c:355:
+				   sizeof (struct mlx4_cmd_context),

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#437: FILE: drivers/net/mlx4/cmd.c:385:
+/*
+ * Switch back to polling (used when shutting down the device)

WARNING:SIZEOF_PARENTHESIS: sizeof *mailbox should be sizeof(*mailbox)
#458: FILE: drivers/net/mlx4/cmd.c:406:
+	mailbox = kmalloc(sizeof *mailbox, GFP_KERNEL);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#488: FILE: drivers/net/mlx4/fw.c:1:
+/*

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#528: FILE: drivers/net/mlx4/fw.c:41:
+extern void __buggy_use_of_MLX4_PUT(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dest' - possible side-effects?
#530: FILE: drivers/net/mlx4/fw.c:43:
+#define MLX4_GET(dest, source, offset)				      \
+	do {							      \
+		void *__p = (char *) (source) + (offset);	      \
+		switch (sizeof (dest)) {			      \
+		case 1: (dest) = *(u8 *) __p;	    break;	      \
+		case 2: (dest) = be16_to_cpup(__p); break;	      \
+		case 4: (dest) = be32_to_cpup(__p); break;	      \
+		case 8: (dest) = be64_to_cpup(__p); break;	      \
+		default: __buggy_use_of_MLX4_GET();		      \
+		}						      \
+	} while (0)

CHECK:SPACING: No space is necessary after a cast
#532: FILE: drivers/net/mlx4/fw.c:45:
+		void *__p = (char *) (source) + (offset);	      \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#533: FILE: drivers/net/mlx4/fw.c:46:
+		switch (sizeof (dest)) {			      \

CHECK:SPACING: No space is necessary after a cast
#534: FILE: drivers/net/mlx4/fw.c:47:
+		case 1: (dest) = *(u8 *) __p;	    break;	      \

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#534: FILE: drivers/net/mlx4/fw.c:47:
+		case 1: (dest) = *(u8 *) __p;	    break;	      \

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#535: FILE: drivers/net/mlx4/fw.c:48:
+		case 2: (dest) = be16_to_cpup(__p); break;	      \

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#536: FILE: drivers/net/mlx4/fw.c:49:
+		case 4: (dest) = be32_to_cpup(__p); break;	      \

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#537: FILE: drivers/net/mlx4/fw.c:50:
+		case 8: (dest) = be64_to_cpup(__p); break;	      \

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#538: FILE: drivers/net/mlx4/fw.c:51:
+		default: __buggy_use_of_MLX4_GET();		      \

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'source' - possible side-effects?
#542: FILE: drivers/net/mlx4/fw.c:55:
+#define MLX4_PUT(dest, source, offset)				      \
+	do {							      \
+		void *__d = ((char *) (dest) + (offset));	      \
+		switch (sizeof(source)) {			      \
+		case 1: *(u8 *) __d = (source);		       break; \
+		case 2:	*(__be16 *) __d = cpu_to_be16(source); break; \
+		case 4:	*(__be32 *) __d = cpu_to_be32(source); break; \
+		case 8:	*(__be64 *) __d = cpu_to_be64(source); break; \
+		default: __buggy_use_of_MLX4_PUT();		      \
+		}						      \
+	} while (0)

CHECK:SPACING: No space is necessary after a cast
#544: FILE: drivers/net/mlx4/fw.c:57:
+		void *__d = ((char *) (dest) + (offset));	      \

CHECK:SPACING: No space is necessary after a cast
#546: FILE: drivers/net/mlx4/fw.c:59:
+		case 1: *(u8 *) __d = (source);		       break; \

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#546: FILE: drivers/net/mlx4/fw.c:59:
+		case 1: *(u8 *) __d = (source);		       break; \

CHECK:SPACING: No space is necessary after a cast
#547: FILE: drivers/net/mlx4/fw.c:60:
+		case 2:	*(__be16 *) __d = cpu_to_be16(source); break; \

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#547: FILE: drivers/net/mlx4/fw.c:60:
+		case 2:	*(__be16 *) __d = cpu_to_be16(source); break; \

CHECK:SPACING: No space is necessary after a cast
#548: FILE: drivers/net/mlx4/fw.c:61:
+		case 4:	*(__be32 *) __d = cpu_to_be32(source); break; \

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#548: FILE: drivers/net/mlx4/fw.c:61:
+		case 4:	*(__be32 *) __d = cpu_to_be32(source); break; \

CHECK:SPACING: No space is necessary after a cast
#549: FILE: drivers/net/mlx4/fw.c:62:
+		case 8:	*(__be64 *) __d = cpu_to_be64(source); break; \

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#549: FILE: drivers/net/mlx4/fw.c:62:
+		case 8:	*(__be64 *) __d = cpu_to_be64(source); break; \

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#550: FILE: drivers/net/mlx4/fw.c:63:
+		default: __buggy_use_of_MLX4_PUT();		      \

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#556: FILE: drivers/net/mlx4/fw.c:69:
+	static const char *fname[] = {

ERROR:SPACING: space prohibited after that open square bracket '['
#557: FILE: drivers/net/mlx4/fw.c:70:
+		[ 0] = "RC transport",

ERROR:SPACING: space prohibited after that open square bracket '['
#558: FILE: drivers/net/mlx4/fw.c:71:
+		[ 1] = "UC transport",

ERROR:SPACING: space prohibited after that open square bracket '['
#559: FILE: drivers/net/mlx4/fw.c:72:
+		[ 2] = "UD transport",

ERROR:SPACING: space prohibited after that open square bracket '['
#560: FILE: drivers/net/mlx4/fw.c:73:
+		[ 3] = "SRC transport",

ERROR:SPACING: space prohibited after that open square bracket '['
#561: FILE: drivers/net/mlx4/fw.c:74:
+		[ 4] = "reliable multicast",

ERROR:SPACING: space prohibited after that open square bracket '['
#562: FILE: drivers/net/mlx4/fw.c:75:
+		[ 5] = "FCoIB support",

ERROR:SPACING: space prohibited after that open square bracket '['
#563: FILE: drivers/net/mlx4/fw.c:76:
+		[ 6] = "SRQ support",

ERROR:SPACING: space prohibited after that open square bracket '['
#564: FILE: drivers/net/mlx4/fw.c:77:
+		[ 7] = "IPoIB checksum offload",

ERROR:SPACING: space prohibited after that open square bracket '['
#565: FILE: drivers/net/mlx4/fw.c:78:
+		[ 8] = "P_Key violation counter",

ERROR:SPACING: space prohibited after that open square bracket '['
#566: FILE: drivers/net/mlx4/fw.c:79:
+		[ 9] = "Q_Key violation counter",

WARNING:SPLIT_STRING: quoted string split across lines
#775: FILE: drivers/net/mlx4/fw.c:288:
+		mlx4_dbg(dev, "Base MM extensions: yes "
+			 "(flags %d, rsvd L_Key %08x)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#781: FILE: drivers/net/mlx4/fw.c:294:
+	/*
+	 * Each UAR has 4 EQ doorbells; so if a UAR is reserved, then

CHECK:SPACING: No space is necessary after a cast
#789: FILE: drivers/net/mlx4/fw.c:302:
+		 (unsigned long long) dev_cap->max_icm_sz >> 20);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#842: FILE: drivers/net/mlx4/fw.c:355:
+		/*
+		 * We have to pass pages that are aligned to their

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#849: FILE: drivers/net/mlx4/fw.c:362:
+			mlx4_warn(dev, "Got FW area not aligned to %d (%llx/%lx).\n",
+				   MLX4_ICM_PAGE_SIZE,

CHECK:SPACING: No space is necessary after a cast
#850: FILE: drivers/net/mlx4/fw.c:363:
+				   (unsigned long long) mlx4_icm_addr(&iter),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#870: FILE: drivers/net/mlx4/fw.c:383:
+				err = mlx4_cmd(dev, mailbox->dma, nent, 0, op,
+						MLX4_CMD_TIME_CLASS_B);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#892: FILE: drivers/net/mlx4/fw.c:405:
+		mlx4_dbg(dev, "Mapped %d chunks/%d KB at %llx for ICM.\n",
+			  tc, ts, (unsigned long long) virt - (ts << 10));

CHECK:SPACING: No space is necessary after a cast
#892: FILE: drivers/net/mlx4/fw.c:405:
+			  tc, ts, (unsigned long long) virt - (ts << 10));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#911: FILE: drivers/net/mlx4/fw.c:424:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#944: FILE: drivers/net/mlx4/fw.c:457:
+	err = mlx4_cmd_box(dev, 0, mailbox->dma, 0, 0, MLX4_CMD_QUERY_FW,
+			    MLX4_CMD_TIME_CLASS_A);

WARNING:TYPO_SPELLING: 'signifant' may be misspelled - perhaps 'significant'?
#950: FILE: drivers/net/mlx4/fw.c:463:
+	 * FW subminor version is at more signifant bits than minor
 	                                  ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#950: FILE: drivers/net/mlx4/fw.c:463:
+	/*
+	 * FW subminor version is at more signifant bits than minor

CHECK:SPACING: No space is necessary after a cast
#961: FILE: drivers/net/mlx4/fw.c:474:
+		 (int) (dev->caps.fw_ver >> 32),

CHECK:SPACING: No space is necessary after a cast
#962: FILE: drivers/net/mlx4/fw.c:475:
+		 (int) (dev->caps.fw_ver >> 16) & 0xffff,

CHECK:SPACING: No space is necessary after a cast
#963: FILE: drivers/net/mlx4/fw.c:476:
+		 (int) dev->caps.fw_ver & 0xffff,

CHECK:SPACING: No space is necessary after a cast
#972: FILE: drivers/net/mlx4/fw.c:485:
+		 (unsigned long long) fw->catas_addr, fw->catas_size, fw->catas_bar);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#982: FILE: drivers/net/mlx4/fw.c:495:
+	/*
+	 * Round up number of system pages needed in case

CHECK:SPACING: No space is necessary after a cast
#990: FILE: drivers/net/mlx4/fw.c:503:
+		 (unsigned long long) fw->clr_int_base, fw->clr_int_bar);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1012: FILE: drivers/net/mlx4/fw.c:525:
+		strlcpy(board_id, vsd + VSD_OFFSET_TS_BOARD_ID, MLX4_BOARD_ID_LEN);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1015: FILE: drivers/net/mlx4/fw.c:528:
+		/*
+		 * The board ID is a string but the firmware byte

CHECK:SPACING: No space is necessary after a cast
#1020: FILE: drivers/net/mlx4/fw.c:533:
+			((u32 *) board_id)[i] =

CHECK:SPACING: No space is necessary after a cast
#1021: FILE: drivers/net/mlx4/fw.c:534:
+				swab32(*(u32 *) (vsd + VSD_OFFSET_MLX_BOARD_ID + i * 4));

CHECK:SPACING: No space is necessary after a cast
#1105: FILE: drivers/net/mlx4/fw.c:618:
+	*((u8 *) mailbox->buf + INIT_HCA_VERSION_OFFSET) = INIT_HCA_VERSION;

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#1115: FILE: drivers/net/mlx4/fw.c:628:
+	*(inbox + INIT_HCA_FLAGS_OFFSET / 4) |= cpu_to_be32(1);
 	^

CHECK:SPACING: No space is necessary after a cast
#1148: FILE: drivers/net/mlx4/fw.c:661:
+	MLX4_PUT(inbox, (u8) (PAGE_SHIFT - 12), INIT_HCA_UAR_PAGE_SZ_OFFSET);

CHECK:BIT_MACRO: Prefer using the BIT macro
#1169: FILE: drivers/net/mlx4/fw.c:682:
+#define INIT_PORT_FLAG_SIG         (1 << 18)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#1170: FILE: drivers/net/mlx4/fw.c:683:
+#define INIT_PORT_FLAG_NG          (1 << 17)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1171: FILE: drivers/net/mlx4/fw.c:684:
+#define INIT_PORT_FLAG_G0          (1 << 16)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1232: FILE: drivers/net/mlx4/fw.c:745:
+	/*
+	 * Round up number of system pages needed in case

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1252: FILE: drivers/net/mlx4/fw.h:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1423: FILE: drivers/net/mlx4/main.c:1:
+/*

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#1478: FILE: drivers/net/mlx4/main.c:56:
+int mlx4_debug_level = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1486: FILE: drivers/net/mlx4/main.c:64:
+static int msi_x = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1496: FILE: drivers/net/mlx4/main.c:74:
+static const char mlx4_version[] __devinitdata =

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#1496: FILE: drivers/net/mlx4/main.c:74:
+static const char mlx4_version[] __devinitdata =

Const init definitions should use __initconst instead of
__initdata.

Similarly init definitions without const require a separate
use of const.

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1510: FILE: drivers/net/mlx4/main.c:88:
+static int __devinit mlx4_dev_cap(struct mlx4_dev *dev, struct mlx4_dev_cap *dev_cap)

WARNING:SPLIT_STRING: quoted string split across lines
#1522: FILE: drivers/net/mlx4/main.c:100:
+		mlx4_err(dev, "HCA minimum page size of %d bigger than "
+			 "kernel PAGE_SIZE of %ld, aborting.\n",

WARNING:SPLIT_STRING: quoted string split across lines
#1528: FILE: drivers/net/mlx4/main.c:106:
+		mlx4_err(dev, "HCA has %d ports, but we only support %d, "
+			 "aborting.\n",

WARNING:SPLIT_STRING: quoted string split across lines
#1535: FILE: drivers/net/mlx4/main.c:113:
+		mlx4_err(dev, "HCA reported UAR size of 0x%x bigger than "
+			 "PCI resource 2 size of 0x%llx, aborting.\n",

CHECK:SPACING: No space is necessary after a cast
#1537: FILE: drivers/net/mlx4/main.c:115:
+			 (unsigned long long) pci_resource_len(dev->pdev, 2));

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1559: FILE: drivers/net/mlx4/main.c:137:
+	/*
+	 * Subtract 1 from the limit because we need to allocate a

CHECK:SPACING: No space is necessary after a cast
#1572: FILE: drivers/net/mlx4/main.c:150:
+	dev->caps.page_size_cap      = ~(u32) (dev_cap->min_page_sz - 1);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1579: FILE: drivers/net/mlx4/main.c:157:
+static int __devinit mlx4_load_fw(struct mlx4_dev *dev)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1613: FILE: drivers/net/mlx4/main.c:191:
+static int __devinit mlx4_init_cmpt_table(struct mlx4_dev *dev, u64 cmpt_base,

CHECK:SPACING: No space is necessary after a cast
#1621: FILE: drivers/net/mlx4/main.c:199:
+				  ((u64) (MLX4_CMPT_TYPE_QP *

CHECK:SPACING: No space is necessary after a cast
#1630: FILE: drivers/net/mlx4/main.c:208:
+				  ((u64) (MLX4_CMPT_TYPE_SRQ *

CHECK:SPACING: No space is necessary after a cast
#1639: FILE: drivers/net/mlx4/main.c:217:
+				  ((u64) (MLX4_CMPT_TYPE_CQ *

CHECK:SPACING: No space is necessary after a cast
#1648: FILE: drivers/net/mlx4/main.c:226:
+				  ((u64) (MLX4_CMPT_TYPE_EQ *

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1672: FILE: drivers/net/mlx4/main.c:250:
+static int __devinit mlx4_init_icm(struct mlx4_dev *dev,

CHECK:SPACING: No space is necessary after a cast
#1688: FILE: drivers/net/mlx4/main.c:266:
+		 (unsigned long long) icm_size >> 10,

CHECK:SPACING: No space is necessary after a cast
#1689: FILE: drivers/net/mlx4/main.c:267:
+		 (unsigned long long) aux_pages << 2);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1797: FILE: drivers/net/mlx4/main.c:375:
+	/*
+	 * It's not strictly required, but for simplicity just map the

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1886: FILE: drivers/net/mlx4/main.c:464:
+static int __devinit mlx4_init_hca(struct mlx4_dev *dev)

CHECK:SPACING: No space is necessary after a cast
#1917: FILE: drivers/net/mlx4/main.c:495:
+	if ((long long) icm_size < 0) {

WARNING:SIZEOF_PARENTHESIS: sizeof priv->board_id should be sizeof(priv->board_id)
#1942: FILE: drivers/net/mlx4/main.c:520:
+	memcpy(priv->board_id, adapter.board_id, sizeof priv->board_id);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1959: FILE: drivers/net/mlx4/main.c:537:
+static int __devinit mlx4_setup_hca(struct mlx4_dev *dev)

WARNING:SPLIT_STRING: quoted string split across lines
#1969: FILE: drivers/net/mlx4/main.c:547:
+		mlx4_err(dev, "Failed to initialize "
+			 "user access region table, aborting.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#1976: FILE: drivers/net/mlx4/main.c:554:
+		mlx4_err(dev, "Failed to allocate driver access region, "
+			 "aborting.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#1983: FILE: drivers/net/mlx4/main.c:561:
+		mlx4_err(dev, "Couldn't map kernel access region, "
+			 "aborting.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#1991: FILE: drivers/net/mlx4/main.c:569:
+		mlx4_err(dev, "Failed to initialize "
+			 "protection domain table, aborting.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#1998: FILE: drivers/net/mlx4/main.c:576:
+		mlx4_err(dev, "Failed to initialize "
+			 "memory region table, aborting.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#2005: FILE: drivers/net/mlx4/main.c:583:
+		mlx4_err(dev, "Failed to create driver PD, "
+			 "aborting.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#2012: FILE: drivers/net/mlx4/main.c:590:
+		mlx4_err(dev, "Failed to initialize "
+			 "event queue table, aborting.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#2019: FILE: drivers/net/mlx4/main.c:597:
+		mlx4_err(dev, "Failed to switch to event-driven "
+			 "firmware commands, aborting.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#2040: FILE: drivers/net/mlx4/main.c:618:
+		mlx4_err(dev, "Failed to initialize "
+			 "completion queue table, aborting.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#2047: FILE: drivers/net/mlx4/main.c:625:
+		mlx4_err(dev, "Failed to initialize "
+			 "shared receive queue table, aborting.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#2054: FILE: drivers/net/mlx4/main.c:632:
+		mlx4_err(dev, "Failed to initialize "
+			 "queue pair table, aborting.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#2061: FILE: drivers/net/mlx4/main.c:639:
+		mlx4_err(dev, "Failed to initialize "
+			 "multicast group table, aborting.\n");

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2102: FILE: drivers/net/mlx4/main.c:680:
+static void __devinit mlx4_enable_msi_x(struct mlx4_dev *dev)

WARNING:SPLIT_STRING: quoted string split across lines
#2117: FILE: drivers/net/mlx4/main.c:695:
+				mlx4_info(dev, "Only %d MSI-X vectors available, "
+					  "not using MSI-X\n", err);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2133: FILE: drivers/net/mlx4/main.c:711:
+static int __devinit mlx4_init_one(struct pci_dev *pdev,

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#2136: FILE: drivers/net/mlx4/main.c:714:
+	static int mlx4_version_printed = 0;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2142: FILE: drivers/net/mlx4/main.c:720:
+		printk(KERN_INFO "%s", mlx4_version);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2146: FILE: drivers/net/mlx4/main.c:724:
+	printk(KERN_INFO PFX "Initializing %s\n",

WARNING:SPLIT_STRING: quoted string split across lines
#2152: FILE: drivers/net/mlx4/main.c:730:
+		dev_err(&pdev->dev, "Cannot enable PCI device, "
+			"aborting.\n");

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2157: FILE: drivers/net/mlx4/main.c:735:
+	/*
+	 * Check for BARs.  We expect 0: 1MB, 2: 8MB, 4: DDR (may not

WARNING:SPLIT_STRING: quoted string split across lines
#2198: FILE: drivers/net/mlx4/main.c:776:
+		dev_warn(&pdev->dev, "Warning: couldn't set 64-bit "
+			 "consistent PCI DMA mask.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#2202: FILE: drivers/net/mlx4/main.c:780:
+			dev_err(&pdev->dev, "Can't set consistent PCI DMA mask, "
+				"aborting.\n");

WARNING:SIZEOF_PARENTHESIS: sizeof *priv should be sizeof(*priv)
#2207: FILE: drivers/net/mlx4/main.c:785:
+	priv = kzalloc(sizeof *priv, GFP_KERNEL);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#2209: FILE: drivers/net/mlx4/main.c:787:
+	if (!priv) {
+		dev_err(&pdev->dev, "Device struct alloc failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#2210: FILE: drivers/net/mlx4/main.c:788:
+		dev_err(&pdev->dev, "Device struct alloc failed, "
+			"aborting.\n");

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2219: FILE: drivers/net/mlx4/main.c:797:
+	/*
+	 * Now reset the HCA before we touch the PCI capabilities or

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#2290: FILE: drivers/net/mlx4/main.c:868:
+static void __devexit mlx4_remove_one(struct pci_dev *pdev)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2368: FILE: drivers/net/mlx4/mlx4.h:1:
+/*

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'mdev' may be better as '(mdev)' to avoid precedence issues
#2460: FILE: drivers/net/mlx4/mlx4.h:93:
+#define mlx4_dbg(mdev, format, arg...)					\
+	do {								\
+		if (mlx4_debug_level)					\
+			dev_printk(KERN_DEBUG, &mdev->pdev->dev, format, ## arg); \
+	} while (0)

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#2463: FILE: drivers/net/mlx4/mlx4.h:96:
+			dev_printk(KERN_DEBUG, &mdev->pdev->dev, format, ## arg); \

CHECK:SPACING: No space is necessary after a cast
#2468: FILE: drivers/net/mlx4/mlx4.h:101:
+#define mlx4_dbg(mdev, format, arg...) do { (void) mdev; } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#2468: FILE: drivers/net/mlx4/mlx4.h:101:
+#define mlx4_dbg(mdev, format, arg...) do { (void) mdev; } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'mdev' may be better as '(mdev)' to avoid precedence issues
#2472: FILE: drivers/net/mlx4/mlx4.h:105:
+#define mlx4_err(mdev, format, arg...) \
+	dev_err(&mdev->pdev->dev, format, ## arg)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'mdev' may be better as '(mdev)' to avoid precedence issues
#2474: FILE: drivers/net/mlx4/mlx4.h:107:
+#define mlx4_info(mdev, format, arg...) \
+	dev_info(&mdev->pdev->dev, format, ## arg)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'mdev' may be better as '(mdev)' to avoid precedence issues
#2476: FILE: drivers/net/mlx4/mlx4.h:109:
+#define mlx4_warn(mdev, format, arg...) \
+	dev_warn(&mdev->pdev->dev, format, ## arg)

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#2484: FILE: drivers/net/mlx4/mlx4.h:117:
+	spinlock_t		lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#2491: FILE: drivers/net/mlx4/mlx4.h:124:
+	spinlock_t		lock;

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#2502: FILE: drivers/net/mlx4/mlx4.h:135:
+	struct mutex		mutex;

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#2542: FILE: drivers/net/mlx4/mlx4.h:175:
+	struct mutex		hcr_mutex;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#2546: FILE: drivers/net/mlx4/mlx4.h:179:
+	spinlock_t		context_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#2569: FILE: drivers/net/mlx4/mlx4.h:202:
+	spinlock_t		lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#2591: FILE: drivers/net/mlx4/mlx4.h:224:
+	spinlock_t		lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#2601: FILE: drivers/net/mlx4/mlx4.h:234:
+	spinlock_t		lock;

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#2610: FILE: drivers/net/mlx4/mlx4.h:243:
+	struct mutex		mutex;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2708: FILE: drivers/net/mlx4/profile.c:1:
+/*

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#2762: FILE: drivers/net/mlx4/profile.c:55:
+static const char *res_name[] = {

WARNING:SIZEOF_PARENTHESIS: sizeof *profile should be sizeof(*profile)
#2795: FILE: drivers/net/mlx4/profile.c:88:
+	profile = kzalloc(MLX4_RES_NUM * sizeof *profile, GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#2828: FILE: drivers/net/mlx4/profile.c:121:
+		profile[i].size     = max(profile[i].size, (u64) PAGE_SIZE);

WARNING:MINMAX: max() should probably be max_t(u64, profile[i].size, PAGE_SIZE)
#2828: FILE: drivers/net/mlx4/profile.c:121:
+		profile[i].size     = max(profile[i].size, (u64) PAGE_SIZE);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2832: FILE: drivers/net/mlx4/profile.c:125:
+	/*
+	 * Sort the resources in decreasing order of size.  Since they

CHECK:SPACING: No space is necessary after a cast
#2855: FILE: drivers/net/mlx4/profile.c:148:
+				  (unsigned long long) total_size,

CHECK:SPACING: No space is necessary after a cast
#2856: FILE: drivers/net/mlx4/profile.c:149:
+				  (unsigned long long) dev_cap->max_icm_sz);

WARNING:SPLIT_STRING: quoted string split across lines
#2863: FILE: drivers/net/mlx4/profile.c:156:
+			mlx4_dbg(dev, "  profile[%2d] (%6s): 2^%02d entries @ 0x%10llx, "
+				  "size 0x%10llx\n",

CHECK:SPACING: No space is necessary after a cast
#2865: FILE: drivers/net/mlx4/profile.c:158:
+				 (unsigned long long) profile[i].start,

CHECK:SPACING: No space is necessary after a cast
#2866: FILE: drivers/net/mlx4/profile.c:159:
+				 (unsigned long long) profile[i].size);

CHECK:SPACING: No space is necessary after a cast
#2870: FILE: drivers/net/mlx4/profile.c:163:
+		 (int) (total_size >> 10));

CHECK:SPACING: No space is necessary after a cast
#2885: FILE: drivers/net/mlx4/profile.c:178:
+			priv->qp_table.rdmarc_base   = (u32) profile[i].start;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2938: FILE: drivers/net/mlx4/profile.c:231:
+	/*
+	 * PDs don't take any HCA memory, but we assign them as part

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2952: FILE: drivers/net/mlx4/reset.c:1:
+/*

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#3006: FILE: drivers/net/mlx4/reset.c:55:
+	/*
+	 * Reset the chip.  This is somewhat ugly because we have to

WARNING:SPLIT_STRING: quoted string split across lines
#3017: FILE: drivers/net/mlx4/reset.c:66:
+		mlx4_err(dev, "Couldn't allocate memory to save HCA "
+			  "PCI header, aborting.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#3029: FILE: drivers/net/mlx4/reset.c:78:
+			mlx4_err(dev, "Couldn't save HCA "
+				  "PCI header, aborting.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#3042: FILE: drivers/net/mlx4/reset.c:91:
+			mlx4_err(dev, "Couldn't map HCA reset register, "
+				  "aborting.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#3062: FILE: drivers/net/mlx4/reset.c:111:
+				mlx4_err(dev, "Couldn't access HCA after reset, "
+					  "aborting.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#3074: FILE: drivers/net/mlx4/reset.c:123:
+		mlx4_err(dev, "PCI device did not come back after reset, "
+			  "aborting.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3083: FILE: drivers/net/mlx4/reset.c:132:
+		if (pci_write_config_word(dev->pdev, pcie_cap + PCI_EXP_DEVCTL,
+					   devctl)) {

WARNING:SPLIT_STRING: quoted string split across lines
#3086: FILE: drivers/net/mlx4/reset.c:135:
+			mlx4_err(dev, "Couldn't restore HCA PCI Express "
+				 "Device Control register, aborting.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3091: FILE: drivers/net/mlx4/reset.c:140:
+		if (pci_write_config_word(dev->pdev, pcie_cap + PCI_EXP_LNKCTL,
+					   linkctl)) {

WARNING:SPLIT_STRING: quoted string split across lines
#3094: FILE: drivers/net/mlx4/reset.c:143:
+			mlx4_err(dev, "Couldn't restore HCA PCI Express "
+				 "Link control register, aborting.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#3106: FILE: drivers/net/mlx4/reset.c:155:
+			mlx4_err(dev, "Couldn't restore HCA reg %x, "
+				  "aborting.\n", i);

WARNING:SPLIT_STRING: quoted string split across lines
#3115: FILE: drivers/net/mlx4/reset.c:164:
+		mlx4_err(dev, "Couldn't restore HCA COMMAND, "
+			  "aborting.\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000442915.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 25 errors, 85 warnings, 71 checks, 3035 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000442915.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
