CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Ehdr>
#115: FILE: arch/i386/kernel/sysenter.c:78:
+	Elf32_Ehdr *hdr;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Shdr>
#116: FILE: arch/i386/kernel/sysenter.c:79:
+	Elf32_Shdr *sechdrs;

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Phdr>
#117: FILE: arch/i386/kernel/sysenter.c:80:
+	Elf32_Phdr *phdr;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#122: FILE: arch/i386/kernel/sysenter.c:85:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#123: FILE: arch/i386/kernel/sysenter.c:86:
+	printk("Remapping vsyscall page to %08x\n", (unsigned int)VDSO_HIGH_BASE);

ERROR:CODE_INDENT: code indent should use tabs where possible
#126: FILE: arch/i386/kernel/sysenter.c:89:
+           weird elf version */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#126: FILE: arch/i386/kernel/sysenter.c:89:
+	/* Sanity checks against insmoding binaries or wrong arch,
+           weird elf version */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#126: FILE: arch/i386/kernel/sysenter.c:89:
+           weird elf version */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#128: FILE: arch/i386/kernel/sysenter.c:91:
+	if (memcmp(hdr->e_ident, ELFMAG, 4) != 0 ||
+		!elf_check_arch(hdr) ||

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#141: FILE: arch/i386/kernel/sysenter.c:104:
+		if (strcmp(secstrings+sechdrs[i].sh_name, ".dynsym") == 0) {
 		                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Sym>
#142: FILE: arch/i386/kernel/sysenter.c:105:
+			Elf32_Sym  *sym =  (void *)hdr + sechdrs[i].sh_offset;

WARNING:LINE_SPACING: Missing a blank line after declarations
#143: FILE: arch/i386/kernel/sysenter.c:106:
+			Elf32_Sym  *sym =  (void *)hdr + sechdrs[i].sh_offset;
+			n = sechdrs[i].sh_size / sizeof(*sym);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#146: FILE: arch/i386/kernel/sysenter.c:109:
+				int ndx = sym[j].st_shndx;
+				if (ndx == SHN_UNDEF || ndx == SHN_ABS)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#150: FILE: arch/i386/kernel/sysenter.c:113:
+		} else if (strcmp(secstrings+sechdrs[i].sh_name, ".dynamic") == 0) {
 		                            ^

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Dyn>
#151: FILE: arch/i386/kernel/sysenter.c:114:
+			Elf32_Dyn *dyn = (void *)hdr + sechdrs[i].sh_offset;

WARNING:LINE_SPACING: Missing a blank line after declarations
#153: FILE: arch/i386/kernel/sysenter.c:116:
+			int tag;
+			while ((tag = (++dyn)->d_tag) != DT_NULL)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#153: FILE: arch/i386/kernel/sysenter.c:116:
+			while ((tag = (++dyn)->d_tag) != DT_NULL)
+			switch(tag) {

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#154: FILE: arch/i386/kernel/sysenter.c:117:
+			switch(tag) {
+				case DT_PLTGOT:
+				case DT_HASH:
+			    	case DT_STRTAB:
+				case DT_SYMTAB:
+				case DT_RELA:
+				case DT_INIT:
+				case DT_FINI:
+				case DT_REL:
+				case DT_JMPREL:
+				case DT_VERSYM:
+				case DT_VERDEF:
+				case DT_VERNEED:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#154: FILE: arch/i386/kernel/sysenter.c:117:
+			switch(tag) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: arch/i386/kernel/sysenter.c:120:
+^I^I^I    ^Icase DT_STRTAB:$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#157: FILE: arch/i386/kernel/sysenter.c:120:
+^I^I^I    ^Icase DT_STRTAB:$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#169: FILE: arch/i386/kernel/sysenter.c:132:
+		} else if (strcmp(secstrings+sechdrs[i].sh_name, ".useless") == 0) {
 		                            ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#171: FILE: arch/i386/kernel/sysenter.c:134:
+			 * .got in a section named .useless */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#172: FILE: arch/i386/kernel/sysenter.c:135:
+			uint32_t *got = (void *)hdr + sechdrs[i].sh_offset;

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#182: FILE: arch/i386/kernel/sysenter.c:145:
+#if 0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#183: FILE: arch/i386/kernel/sysenter.c:146:
+/* $

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#189: FILE: arch/i386/kernel/sysenter.c:152:
+	extern const char vsyscall_orig_start, vsyscall_orig_end;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LINE_SPACING: Missing a blank line after declarations
#192: FILE: arch/i386/kernel/sysenter.c:155:
+	int foo = vsyscall_orig_end - vsyscall_orig_start / 4;
+	for (i = 0; i < foo; i++) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#194: FILE: arch/i386/kernel/sysenter.c:157:
+			printk("vsyscall - delta [%03x] orig %08x new %08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#195: FILE: arch/i386/kernel/sysenter.c:158:
+			printk("vsyscall - delta [%03x] orig %08x new %08x\n",
+				i, l2[i], l1[i]);

CHECK:SPACING: No space is necessary after a cast
#305: FILE: include/asm-i386/elf.h:143:
+#define VDSO_EHDR		((const struct elfhdr *) VDSO_CURRENT_BASE)

ERROR:DEFINE_ARCH_HAS: #define of 'ARCH_HAS_SETUP_ADDITIONAL_PAGES' is wrong - use Kconfig variables or standard guards instead
#315: FILE: include/asm-i386/elf.h:151:
+#define ARCH_HAS_SETUP_ADDITIONAL_PAGES

The ARCH_HAS_xyz and ARCH_HAVE_xyz patterns are wrong.

For big conceptual features use Kconfig symbols instead.  And for
smaller things where we have compatibility fallback functions but
want architectures able to override them with optimized ones, we
should either use weak functions (appropriate for some cases), or
the symbol that protects them should be the same symbol we use.

See: https://lore.kernel.org/lkml/CA+55aFycQ9XJvEOsiM3txHL5bjUc8CeKWJNR_H+MiicaddB42Q@mail.gmail.com/

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000455526.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 13 warnings, 12 checks, 246 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000455526.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
