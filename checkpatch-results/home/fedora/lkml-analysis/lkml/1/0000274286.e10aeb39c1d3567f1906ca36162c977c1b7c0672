WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#74: FILE: fs/gfs2/ops_fstype.c:955:
+	error = path_getattr(&nd.path, &stat);
 	                      ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#288: FILE: fs/stat.c:56:
+EXPORT_SYMBOL(path_getattr);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#297: FILE: fs/stat.c:65:
+		error = path_getattr(&nd.path, stat);
 		                      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#306: FILE: fs/stat.c:85:
+		error = path_getattr(&nd.path, stat);
 		                      ^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#328: FILE: include/linux/fs.h:1980:
+extern int path_getattr(struct path *, struct kstat *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct path *' should also have an identifier name
#328: FILE: include/linux/fs.h:1980:
+extern int path_getattr(struct path *, struct kstat *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kstat *' should also have an identifier name
#328: FILE: include/linux/fs.h:1980:
+extern int path_getattr(struct path *, struct kstat *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct svc_fh *' should also have an identifier name
#340: FILE: include/linux/nfsd/nfsd.h:74:
+void		fh_to_path(struct svc_fh *, struct path *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct path *' should also have an identifier name
#340: FILE: include/linux/nfsd/nfsd.h:74:
+void		fh_to_path(struct svc_fh *, struct path *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#363: FILE: include/linux/security.h:1373:
+	int (*inode_getattr) (struct path *path);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000274286.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 1 checks, 312 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000274286.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
