WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#79: FILE: include/linux/perf_counter.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#94: FILE: include/linux/perf_counter.h:16:
+#include <asm/atomic.h>

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#219: FILE: include/linux/perf_counter.h:141:
+extern void perf_counter_task_sched_in(struct task_struct *task, int cpu);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#220: FILE: include/linux/perf_counter.h:142:
+extern void perf_counter_task_sched_out(struct task_struct *task, int cpu);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#221: FILE: include/linux/perf_counter.h:143:
+extern void perf_counter_init_task(struct task_struct *task);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#258: FILE: include/linux/sched.h:2293:
+extern void task_oncpu_function_call(struct task_struct *p,

WARNING:SPACING: Unnecessary space before function pointer arguments
#259: FILE: include/linux/sched.h:2294:
+				     void (*func) (void *info), void *info);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#261: FILE: include/linux/sched.h:2296:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#349: FILE: kernel/perf_counter.c:1:
+/*

CHECK:SPACING: No space is necessary after a cast
#417: FILE: kernel/perf_counter.c:69:
+	return (u64) atomic64_read(&counter->count);

CHECK:SPACING: No space is necessary after a cast
#438: FILE: kernel/perf_counter.c:90:
+	return cntl | ((u64) cnth) << 32;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#494: FILE: kernel/perf_counter.c:146:
+
+

WARNING:TYPO_SPELLING: 'sucessful' may be misspelled - perhaps 'successful'?
#517: FILE: kernel/perf_counter.c:169:
+		 * the removal is always sucessful.
 		                         ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'preformance' may be misspelled - perhaps 'performance'?
#549: FILE: kernel/perf_counter.c:201:
+ * Cross CPU call to install and enable a preformance counter
                                           ^^^^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#769: FILE: kernel/perf_counter.c:421:
+			(unsigned long) counter->usrdata);

CHECK:SPACING: No space is necessary after a cast
#909: FILE: kernel/perf_counter.c:561:
+	return put_user(cntval, (u64 __user *) buf) ? -EFAULT : sizeof(cntval);

WARNING:MINMAX: min() should probably be min_t(size_t, count, usrdata->len)
#918: FILE: kernel/perf_counter.c:570:
+	count = min(count, (size_t)usrdata->len);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1144: FILE: kernel/perf_counter.c:796:
+	switch (action) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:MISPLACED_INIT: __cpuinitdata should be placed after perf_cpu_nb
#1162: FILE: kernel/perf_counter.c:814:
+static struct notifier_block __cpuinitdata perf_cpu_nb = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#1190: FILE: kernel/perf_counter.c:842:
+	err = strict_strtoul(buf, 10, &val);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#1222: FILE: kernel/perf_counter.c:874:
+	err = strict_strtoul(buf, 10, &val);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1235: FILE: kernel/perf_counter.c:887:
+static SYSDEV_CLASS_ATTR(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1242: FILE: kernel/perf_counter.c:894:
+static SYSDEV_CLASS_ATTR(

WARNING:SPACING: Unnecessary space before function pointer arguments
#1285: FILE: kernel/sched.c:2225:
+			      void (*func) (void *info), void *info)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000195919.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 11 warnings, 13 checks, 1203 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000195919.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
