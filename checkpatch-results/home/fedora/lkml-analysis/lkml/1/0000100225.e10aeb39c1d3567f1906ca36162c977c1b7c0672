WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
Gitweb:     http://git.kernel.org/tip/e3d0e69268dffb9676bf0800a60fb3573a723480

ERROR:POINTER_LOCATION: "foo __initdata		bar" should be "foo __initdata bar"
#97: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:59:
+static struct res_range __initdata		range[RANGE_NUM];

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MISPLACED_INIT: __initdata should be placed after range[RANGE_NUM]
#97: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:59:
+static struct res_range __initdata		range[RANGE_NUM];

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

ERROR:POINTER_LOCATION: "foo __initdata				bar" should be "foo __initdata bar"
#98: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:60:
+static int __initdata				nr_range;

WARNING:MISPLACED_INIT: __initdata should be placed after nr_range
#98: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:60:
+static int __initdata				nr_range;

ERROR:POINTER_LOCATION: "foo __initdata	bar" should be "foo __initdata bar"
#100: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:62:
+static struct var_mtrr_range_state __initdata	range_state[RANGE_NUM];

WARNING:MISPLACED_INIT: __initdata should be placed after range_state[RANGE_NUM]
#100: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:62:
+static struct var_mtrr_range_state __initdata	range_state[RANGE_NUM];

WARNING:MISPLACED_INIT: __initdata should be placed after debug_print
#102: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:64:
+static int __initdata debug_print;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#103: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:65:
+#define Dprintk(x...) do { if (debug_print) printk(KERN_DEBUG x); } while (0)

CHECK:CAMELCASE: Avoid CamelCase: <Dprintk>
#103: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:65:
+#define Dprintk(x...) do { if (debug_print) printk(KERN_DEBUG x); } while (0)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:LINE_SPACING: Please don't use multiple blank lines
#105: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:67:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#135: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:214:
+			printk(BIOS_BUG_MSG, i);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000100225.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 7 warnings, 2 checks, 91 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000100225.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
