Use of uninitialized value $typo_fix in ucfirst at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3363.
WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#49: FILE: drivers/power/Kconfig:52:
+config BATTERY_BQ27x00
+	tristate "BQ27x00 battery driver"
+	help
+	  Say Y here to enable support for batteries with BQ27000 or
+	  BQ27200 chip.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#55: FILE: drivers/power/Kconfig:58:
+config BATTERY_BQ27000
+	bool "BQ27000 battery driver"
+	depends on BATTERY_BQ27x00
+	select W1
+	select W1_SLAVE_BQ27000
+	help
+	  Say Y here to enable support for batteries with BQ27000(HDQ) chip.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#63: FILE: drivers/power/Kconfig:66:
+config BATTERY_BQ27200
+	bool "BQ27200 battery driver"
+	depends on BATTERY_BQ27x00
+	select I2C
+	help
+	  Say Y here to enable support for batteries with BQ27200(I2C) chip.
+

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#81: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#86: FILE: drivers/power/bq27x00_battery.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#87: FILE: drivers/power/bq27x00_battery.c:2:
+ * linux/drivers/power/bq27x00_battery.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:TYPO_SPELLING: 'MERCHANTIBILITY' may be misspelled - perhaps 'MERCHANTABILITY'?
#102: FILE: drivers/power/bq27x00_battery.c:17:
+ * WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
                  ^^^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:UNCOMMENTED_DEFINITION: DEFINE_MUTEX definition without comment
#134: FILE: drivers/power/bq27x00_battery.c:49:
+DEFINE_MUTEX(battery_mutex);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#139: FILE: drivers/power/bq27x00_battery.c:54:
+	int (*read)(u8 reg, int *rt_value, int b_single,
+		struct bq27x00_device_info *di);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#143: FILE: drivers/power/bq27x00_battery.c:58:
+^Istruct device ^I^I*dev;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#169: FILE: drivers/power/bq27x00_battery.c:84:
+static int bq27x00_read(u8 reg, int *rt_value, int b_single,
+	struct bq27x00_device_info *di)

WARNING:TYPO_SPELLING: 'Celcius' may be misspelled - perhaps ''?
#180: FILE: drivers/power/bq27x00_battery.c:95:
+ * Return the battery temperature in Celcius degrees
                                      ^^^^^^^

WARNING:TYPO_SPELLING: 'milivolts' may be misspelled - perhaps 'millivolts'?
#197: FILE: drivers/power/bq27x00_battery.c:112:
+ * Return the battery Voltage in milivolts
                                  ^^^^^^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#232: FILE: drivers/power/bq27x00_battery.c:147:
+	if ((flags & (1 << 7)) != 0) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#235: FILE: drivers/power/bq27x00_battery.c:150:
+	} else

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#256: FILE: drivers/power/bq27x00_battery.c:171:
+#define to_bq27x00_device_info(x) container_of((x), \
+				struct bq27x00_device_info, bat);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#266: FILE: drivers/power/bq27x00_battery.c:181:
+	case POWER_SUPPLY_PROP_VOLTAGE_NOW :
 	                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#267: FILE: drivers/power/bq27x00_battery.c:182:
+	case POWER_SUPPLY_PROP_PRESENT :
 	                               ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#274: FILE: drivers/power/bq27x00_battery.c:189:
+	case POWER_SUPPLY_PROP_CURRENT_NOW :
 	                                   ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#279: FILE: drivers/power/bq27x00_battery.c:194:
+	case POWER_SUPPLY_PROP_CAPACITY :
 	                                ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#284: FILE: drivers/power/bq27x00_battery.c:199:
+	case POWER_SUPPLY_PROP_TEMP :
 	                            ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#305: FILE: drivers/power/bq27x00_battery.c:220:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#316: FILE: drivers/power/bq27x00_battery.c:231:
+static int bq27000_read(u8 reg, int *rt_value, int b_single,
+	struct bq27x00_device_info *di)

CHECK:SPACING: No space is necessary after a cast
#325: FILE: drivers/power/bq27x00_battery.c:240:
+		*rt_value +=  HIGH_BYTE((int) val);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#339: FILE: drivers/power/bq27x00_battery.c:254:
+	if (!di) {
+		dev_err(&pdev->dev, "failed to allocate device info data\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#345: FILE: drivers/power/bq27x00_battery.c:260:
+	if (!bus) {
+		dev_err(&pdev->dev, "failed to allocate access method data\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#396: FILE: drivers/power/bq27x00_battery.c:311:
+static int bq27200_read(u8 reg, int *rt_value, int b_single,
+	struct bq27x00_device_info *di)

CHECK:BRACES: braces {} should be used on all arms of this statement
#414: FILE: drivers/power/bq27x00_battery.c:329:
+	if (err >= 0) {
[...]
+	} else
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#422: FILE: drivers/power/bq27x00_battery.c:337:
+		if (err >= 0) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#429: FILE: drivers/power/bq27x00_battery.c:344:
+		} else

CHECK:BRACES: Unbalanced braces around else statement
#431: FILE: drivers/power/bq27x00_battery.c:346:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#436: FILE: drivers/power/bq27x00_battery.c:351:
+static int bq27200_battery_probe(struct i2c_client *client,
+					const struct i2c_device_id *id)

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#455: FILE: drivers/power/bq27x00_battery.c:370:
+	if (!name) {
+		dev_err(&client->dev, "failed to allocate device name\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#463: FILE: drivers/power/bq27x00_battery.c:378:
+	if (!di) {
+		dev_err(&client->dev, "failed to allocate device info data\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#471: FILE: drivers/power/bq27x00_battery.c:386:
+	if (!bus) {
+		dev_err(&client->dev, "failed to allocate access method "

WARNING:SPLIT_STRING: quoted string split across lines
#472: FILE: drivers/power/bq27x00_battery.c:387:
+		dev_err(&client->dev, "failed to allocate access method "
+					"data\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#571: FILE: drivers/power/bq27x00_battery.c:486:
+		printk(KERN_ERR "Unable to register BQ27000 driver\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#576: FILE: drivers/power/bq27x00_battery.c:491:
+		printk(KERN_ERR "Unable to register BQ27200 driver\n");

WARNING:TYPO_SPELLING: 'moniter' may be misspelled - perhaps 'monitor'?
#595: FILE: drivers/power/bq27x00_battery.c:510:
+MODULE_DESCRIPTION("BQ27x00 battery moniter driver");
                                     ^^^^^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000266130.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 21 warnings, 13 checks, 540 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000266130.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
