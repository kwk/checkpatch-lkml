CHECK:MACRO_ARG_REUSE: Macro argument reuse 'l' - possible side-effects?
#96: FILE: include/linux/mmzone.h:115:
+#define for_each_lru(l) for (l = 0; l < NR_LRU_LISTS; l++)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#284: FILE: mm/vmscan.c:1220:
+static unsigned long shrink_list(enum lru_list l, unsigned long nr_to_scan,
+	struct zone *zone, struct scan_control *sc, int priority)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#344: FILE: mm/vmscan.c:1261:
+		nr[LRU_ACTIVE] = mem_cgroup_calc_reclaim(sc->mem_cgroup,
+					zone, priority, LRU_ACTIVE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#349: FILE: mm/vmscan.c:1264:
+		nr[LRU_INACTIVE] = mem_cgroup_calc_reclaim(sc->mem_cgroup,
+					zone, priority, LRU_INACTIVE);

WARNING:MINMAX: min() should probably be min_t(unsigned long, nr[l], sc->swap_cluster_max)
#359: FILE: mm/vmscan.c:1270:
+				nr_to_scan = min(nr[l],
 					(unsigned long)sc->swap_cluster_max);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#360: FILE: mm/vmscan.c:1271:
+				nr_to_scan = min(nr[l],
 					(unsigned long)sc->swap_cluster_max);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#457: FILE: include/linux/memcontrol.h:70:
+extern long mem_cgroup_calc_reclaim(struct mem_cgroup *mem, struct zone *zone,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#458: FILE: include/linux/memcontrol.h:71:
+extern long mem_cgroup_calc_reclaim(struct mem_cgroup *mem, struct zone *zone,
+					int priority, enum lru_list lru);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#475: FILE: include/linux/memcontrol.h:154:
+static inline long mem_cgroup_calc_reclaim(struct mem_cgroup *mem,
+					struct zone *zone, int priority,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#614: FILE: mm/memcontrol.c:425:
+long mem_cgroup_calc_reclaim(struct mem_cgroup *mem, struct zone *zone,
+					int priority, enum lru_list lru)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000270437.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 1 warnings, 9 checks, 590 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000270437.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
