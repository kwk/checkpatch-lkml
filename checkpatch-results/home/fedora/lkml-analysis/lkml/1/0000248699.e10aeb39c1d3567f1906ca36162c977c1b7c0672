WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#57: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#923: FILE: arch/x86/kernel/microcode_intel.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/uaccess.h> instead of <asm/uaccess.h>
#1016: FILE: arch/x86/kernel/microcode_intel.c:94:
+#include <asm/uaccess.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#1017: FILE: arch/x86/kernel/microcode_intel.c:95:
+#include <asm/processor.h>

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1024: FILE: arch/x86/kernel/microcode_intel.c:102:
+#define MICROCODE_VERSION ^I"1.14a"$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1026: FILE: arch/x86/kernel/microcode_intel.c:104:
+#define DEFAULT_UCODE_DATASIZE ^I(2000) ^I  /* 2000 bytes */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1027: FILE: arch/x86/kernel/microcode_intel.c:105:
+#define MC_HEADER_SIZE^I^I(sizeof (struct microcode_header))  ^I  /* 48 bytes */$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1027: FILE: arch/x86/kernel/microcode_intel.c:105:
+#define MC_HEADER_SIZE		(sizeof (struct microcode_header))  	  /* 48 bytes */

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1029: FILE: arch/x86/kernel/microcode_intel.c:107:
+#define EXT_HEADER_SIZE		(sizeof (struct extended_sigtable)) /* 20 bytes */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1030: FILE: arch/x86/kernel/microcode_intel.c:108:
+#define EXT_SIGNATURE_SIZE	(sizeof (struct extended_signature)) /* 12 bytes */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1031: FILE: arch/x86/kernel/microcode_intel.c:109:
+#define DWSIZE			(sizeof (u32))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'mc' - possible side-effects?
#1032: FILE: arch/x86/kernel/microcode_intel.c:110:
+#define get_totalsize(mc) \
+	(((struct microcode *)mc)->hdr.totalsize ? \
+	 ((struct microcode *)mc)->hdr.totalsize : DEFAULT_UCODE_TOTALSIZE)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'mc' - possible side-effects?
#1035: FILE: arch/x86/kernel/microcode_intel.c:113:
+#define get_datasize(mc) \
+	(((struct microcode *)mc)->hdr.datasize ? \
+	 ((struct microcode *)mc)->hdr.datasize : DEFAULT_UCODE_DATASIZE)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p1' - possible side-effects?
#1039: FILE: arch/x86/kernel/microcode_intel.c:117:
+#define sigmatch(s1, s2, p1, p2) \
+	(((s1) == (s2)) && (((p1) & (p2)) || (((p1) == 0) && ((p2) == 0))))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p2' - possible side-effects?
#1039: FILE: arch/x86/kernel/microcode_intel.c:117:
+#define sigmatch(s1, s2, p1, p2) \
+	(((s1) == (s2)) && (((p1) & (p2)) || (((p1) == 0) && ((p2) == 0))))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1059: FILE: arch/x86/kernel/microcode_intel.c:137:
+	BUG_ON(raw_smp_processor_id() != cpu_num);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1060: FILE: arch/x86/kernel/microcode_intel.c:138:
+	uci->pf = uci->rev = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:CODE_INDENT: code indent should use tabs where possible
#1065: FILE: arch/x86/kernel/microcode_intel.c:143:
+^I    ^Icpu_has(c, X86_FEATURE_IA64)) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1065: FILE: arch/x86/kernel/microcode_intel.c:143:
+^I    ^Icpu_has(c, X86_FEATURE_IA64)) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1065: FILE: arch/x86/kernel/microcode_intel.c:143:
+	if (c->x86_vendor != X86_VENDOR_INTEL || c->x86 < 6 ||
+	    	cpu_has(c, X86_FEATURE_IA64)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1066: FILE: arch/x86/kernel/microcode_intel.c:144:
+		printk(KERN_ERR "microcode: CPU%d not a capable Intel "

WARNING:SPLIT_STRING: quoted string split across lines
#1067: FILE: arch/x86/kernel/microcode_intel.c:145:
+		printk(KERN_ERR "microcode: CPU%d not a capable Intel "
+			"processor\n", cpu_num);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->x86_model >= 5'
#1074: FILE: arch/x86/kernel/microcode_intel.c:152:
+	if ((c->x86_model >= 5) || (c->x86 > 6)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->x86 > 6'
#1074: FILE: arch/x86/kernel/microcode_intel.c:152:
+	if ((c->x86_model >= 5) || (c->x86 > 6)) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'collect_cpu_info', this function's name, in a string
#1085: FILE: arch/x86/kernel/microcode_intel.c:163:
+	pr_debug("microcode: collect_cpu_info : sig=0x%x, pf=0x%x, rev=0x%x\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1086: FILE: arch/x86/kernel/microcode_intel.c:164:
+	pr_debug("microcode: collect_cpu_info : sig=0x%x, pf=0x%x, rev=0x%x\n",
+			uci->sig, uci->pf, uci->rev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1090: FILE: arch/x86/kernel/microcode_intel.c:168:
+static inline int microcode_update_match(int cpu_num,
+	struct microcode_header *mc_header, int sig, int pf)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1095: FILE: arch/x86/kernel/microcode_intel.c:173:
+	if (!sigmatch(sig, uci->sig, pf, uci->pf)
+		|| mc_header->rev <= uci->rev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1111: FILE: arch/x86/kernel/microcode_intel.c:189:
+		printk(KERN_ERR "microcode: error! "

WARNING:SPLIT_STRING: quoted string split across lines
#1112: FILE: arch/x86/kernel/microcode_intel.c:190:
+		printk(KERN_ERR "microcode: error! "
+			"Bad data size in microcode data file\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1117: FILE: arch/x86/kernel/microcode_intel.c:195:
+		printk(KERN_ERR "microcode: error! "

WARNING:SPLIT_STRING: quoted string split across lines
#1118: FILE: arch/x86/kernel/microcode_intel.c:196:
+		printk(KERN_ERR "microcode: error! "
+			"Unknown microcode update format\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ext_table_size < EXT_HEADER_SIZE'
#1123: FILE: arch/x86/kernel/microcode_intel.c:201:
+		if ((ext_table_size < EXT_HEADER_SIZE)
+		 || ((ext_table_size - EXT_HEADER_SIZE) % EXT_SIGNATURE_SIZE)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1124: FILE: arch/x86/kernel/microcode_intel.c:202:
+		if ((ext_table_size < EXT_HEADER_SIZE)
+		 || ((ext_table_size - EXT_HEADER_SIZE) % EXT_SIGNATURE_SIZE)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1125: FILE: arch/x86/kernel/microcode_intel.c:203:
+			printk(KERN_ERR "microcode: error! "

WARNING:SPLIT_STRING: quoted string split across lines
#1126: FILE: arch/x86/kernel/microcode_intel.c:204:
+			printk(KERN_ERR "microcode: error! "
+				"Small exttable size in microcode data file\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1131: FILE: arch/x86/kernel/microcode_intel.c:209:
+			printk(KERN_ERR "microcode: error! "

WARNING:SPLIT_STRING: quoted string split across lines
#1132: FILE: arch/x86/kernel/microcode_intel.c:210:
+			printk(KERN_ERR "microcode: error! "
+				"Bad exttable size in microcode data file\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1147: FILE: arch/x86/kernel/microcode_intel.c:225:
+			printk(KERN_WARNING "microcode: aborting, "

WARNING:SPLIT_STRING: quoted string split across lines
#1148: FILE: arch/x86/kernel/microcode_intel.c:226:
+			printk(KERN_WARNING "microcode: aborting, "
+				"bad extended signature table checksum\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1159: FILE: arch/x86/kernel/microcode_intel.c:237:
+		printk(KERN_ERR "microcode: aborting, bad checksum\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1172: FILE: arch/x86/kernel/microcode_intel.c:250:
+			printk(KERN_ERR "microcode: aborting, bad checksum\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1195: FILE: arch/x86/kernel/microcode_intel.c:273:
+	if (microcode_update_match(cpu, mc_header,
+			mc_header->sig, mc_header->pf))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1206: FILE: arch/x86/kernel/microcode_intel.c:284:
+		if (microcode_update_match(cpu, mc_header,
+				ext_sig->sig, ext_sig->pf))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1213: FILE: arch/x86/kernel/microcode_intel.c:291:
+		" version 0x%x (current=0x%x)\n", cpu, mc_header->rev,uci->rev);
 		                                                     ^

WARNING:SPLIT_STRING: quoted string split across lines
#1213: FILE: arch/x86/kernel/microcode_intel.c:291:
+	pr_debug("microcode: CPU%d found a matching microcode update with"
+		" version 0x%x (current=0x%x)\n", cpu, mc_header->rev,uci->rev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1216: FILE: arch/x86/kernel/microcode_intel.c:294:
+		printk(KERN_ERR "microcode: error! Can not allocate memory\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1236: FILE: arch/x86/kernel/microcode_intel.c:314:
+	BUG_ON(cpu_num != cpu);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!uci->mc"
#1238: FILE: arch/x86/kernel/microcode_intel.c:316:
+	if (uci->mc == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1246: FILE: arch/x86/kernel/microcode_intel.c:324:
+	wrmsr(MSR_IA32_UCODE_WRITE,
+		(unsigned long) uci->mc->bits,

CHECK:SPACING: No space is necessary after a cast
#1246: FILE: arch/x86/kernel/microcode_intel.c:324:
+		(unsigned long) uci->mc->bits,

CHECK:SPACING: No space is necessary after a cast
#1247: FILE: arch/x86/kernel/microcode_intel.c:325:
+		(unsigned long) uci->mc->bits >> 16 >> 16);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1258: FILE: arch/x86/kernel/microcode_intel.c:336:
+		printk(KERN_ERR "microcode: CPU%d update from revision "

WARNING:SPLIT_STRING: quoted string split across lines
#1259: FILE: arch/x86/kernel/microcode_intel.c:337:
+		printk(KERN_ERR "microcode: CPU%d update from revision "
+			"0x%x to 0x%x failed\n", cpu_num, uci->rev, val[1]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1262: FILE: arch/x86/kernel/microcode_intel.c:340:
+	printk(KERN_INFO "microcode: CPU%d updated from revision "

WARNING:SPLIT_STRING: quoted string split across lines
#1263: FILE: arch/x86/kernel/microcode_intel.c:341:
+	printk(KERN_INFO "microcode: CPU%d updated from revision "
+	       "0x%x to 0x%x, date = %08x \n",

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1263: FILE: arch/x86/kernel/microcode_intel.c:341:
+	       "0x%x to 0x%x, date = %08x \n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1281: FILE: arch/x86/kernel/microcode_intel.c:359:
+		printk(KERN_ERR "microcode: error! Can not read user data\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1286: FILE: arch/x86/kernel/microcode_intel.c:364:
+		printk(KERN_ERR "microcode: error! Bad total size in microcode "

WARNING:SPLIT_STRING: quoted string split across lines
#1287: FILE: arch/x86/kernel/microcode_intel.c:365:
+		printk(KERN_ERR "microcode: error! Bad total size in microcode "
+				"data file\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1294: FILE: arch/x86/kernel/microcode_intel.c:372:
+		printk(KERN_ERR "microcode: error! Can not read user data\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1301: FILE: arch/x86/kernel/microcode_intel.c:379:
+static int do_microcode_update (void)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1308: FILE: arch/x86/kernel/microcode_intel.c:386:
+	cpumask_t old;
+	cpumask_of_cpu_ptr_declare(newmask);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1344: FILE: arch/x86/kernel/microcode_intel.c:422:
+static int microcode_open (struct inode *unused1, struct file *unused2)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1350: FILE: arch/x86/kernel/microcode_intel.c:428:
+static ssize_t microcode_write (struct file *file, const char __user *buf, size_t len, loff_t *ppos)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1355: FILE: arch/x86/kernel/microcode_intel.c:433:
+		printk(KERN_ERR "microcode: too much data (max %ld pages)\n", num_physpages);

CHECK:SPACING: No space is necessary after a cast
#1362: FILE: arch/x86/kernel/microcode_intel.c:440:
+	user_buffer = (void __user *) buf;

CHECK:SPACING: No space is necessary after a cast
#1363: FILE: arch/x86/kernel/microcode_intel.c:441:
+	user_buffer_size = (int) len;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1387: FILE: arch/x86/kernel/microcode_intel.c:465:
+static int __init microcode_dev_init (void)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1393: FILE: arch/x86/kernel/microcode_intel.c:471:
+		printk(KERN_ERR

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1402: FILE: arch/x86/kernel/microcode_intel.c:480:
+static void microcode_dev_exit (void)

ERROR:SPACING: space required before the open parenthesis '('
#1410: FILE: arch/x86/kernel/microcode_intel.c:488:
+#define microcode_dev_exit() do { } while(0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1414: FILE: arch/x86/kernel/microcode_intel.c:492:
+static long get_next_ucode_from_buffer(void **mc, const u8 *buf,
+	unsigned long size, long offset)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1426: FILE: arch/x86/kernel/microcode_intel.c:504:
+		printk(KERN_ERR "microcode: error! Bad data in microcode data file\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1432: FILE: arch/x86/kernel/microcode_intel.c:510:
+		printk(KERN_ERR "microcode: error! Can not allocate memory\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1454: FILE: arch/x86/kernel/microcode_intel.c:532:
+	BUG_ON(cpu != raw_smp_processor_id());

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1455: FILE: arch/x86/kernel/microcode_intel.c:533:
+	sprintf(name,"intel-ucode/%02x-%02x-%02x",
 	            ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1496: FILE: arch/x86/kernel/microcode_intel.c:574:
+	cpumask_t old;
+	cpumask_of_cpu_ptr(newmask, cpu);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->x86_model >= 5'
#1512: FILE: arch/x86/kernel/microcode_intel.c:590:
+	if (!err && ((c->x86_model >= 5) || (c->x86 > 6))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->x86 > 6'
#1512: FILE: arch/x86/kernel/microcode_intel.c:590:
+	if (!err && ((c->x86_model >= 5) || (c->x86 > 6))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1532: FILE: arch/x86/kernel/microcode_intel.c:610:
+		printk(KERN_ERR "microcode: Could not apply microcode to CPU%d:"

WARNING:SPLIT_STRING: quoted string split across lines
#1533: FILE: arch/x86/kernel/microcode_intel.c:611:
+		printk(KERN_ERR "microcode: Could not apply microcode to CPU%d:"
+			" sig=0x%x, pf=0x%x, rev=0x%x\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#1543: FILE: arch/x86/kernel/microcode_intel.c:621:
+	cpumask_t old;
+	cpumask_of_cpu_ptr(newmask, cpu);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1574: FILE: arch/x86/kernel/microcode_intel.c:652:
+	unsigned long val = simple_strtoul(buf, &end, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:LINE_SPACING: Missing a blank line after declarations
#1582: FILE: arch/x86/kernel/microcode_intel.c:660:
+		cpumask_t old;
+		cpumask_of_cpu_ptr(newmask, cpu);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1602: FILE: arch/x86/kernel/microcode_intel.c:680:
+static ssize_t version_show(struct sys_device *dev,
+			struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1610: FILE: arch/x86/kernel/microcode_intel.c:688:
+static ssize_t pf_show(struct sys_device *dev,
+			struct sysdev_attribute *attr, char *buf)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1715: FILE: arch/x86/kernel/microcode_intel.c:793:
+			printk(KERN_ERR "microcode: Failed to create the sysfs "

WARNING:SPLIT_STRING: quoted string split across lines
#1716: FILE: arch/x86/kernel/microcode_intel.c:794:
+			printk(KERN_ERR "microcode: Failed to create the sysfs "
+				"group for CPU%d\n", cpu);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1733: FILE: arch/x86/kernel/microcode_intel.c:811:
+static int __init microcode_init (void)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1737: FILE: arch/x86/kernel/microcode_intel.c:815:
+	printk(KERN_INFO

WARNING:LONG_LINE_STRING: line length of 105 exceeds 100 columns
#1738: FILE: arch/x86/kernel/microcode_intel.c:816:
+		"IA-32 Microcode Update Driver: v" MICROCODE_VERSION " <tigran@aivazian.fsnet.co.uk>\n");

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1763: FILE: arch/x86/kernel/microcode_intel.c:841:
+static void __exit microcode_exit (void)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000248699.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 62 warnings, 28 checks, 863 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000248699.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
