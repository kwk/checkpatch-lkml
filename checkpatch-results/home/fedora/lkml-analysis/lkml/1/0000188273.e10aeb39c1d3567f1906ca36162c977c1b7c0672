WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#50: FILE: include/linux/audit.h:452:
+extern void __audit_mq_sendrecv(mqd_t mqdes, size_t msg_len, unsigned int msg_prio, const struct timespec *abs_timeout);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#50: FILE: include/linux/audit.h:452:
+extern void __audit_mq_sendrecv(mqd_t mqdes, size_t msg_len, unsigned int msg_prio, const struct timespec *abs_timeout);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#59: FILE: include/linux/audit.h:478:
+static inline void audit_mq_sendrecv(mqd_t mqdes, size_t msg_len, unsigned int msg_prio, const struct timespec *abs_timeout)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#59: FILE: include/linux/audit.h:478:
 }
+static inline void audit_mq_sendrecv(mqd_t mqdes, size_t msg_len, unsigned int msg_prio, const struct timespec *abs_timeout)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#80: FILE: include/linux/audit.h:521:
+#define audit_mq_sendrecv(d,l,p,t) ((void)0)
                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#80: FILE: include/linux/audit.h:521:
+#define audit_mq_sendrecv(d,l,p,t) ((void)0)
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#80: FILE: include/linux/audit.h:521:
+#define audit_mq_sendrecv(d,l,p,t) ((void)0)
                                ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#106: FILE: ipc/mqueue.c:532:
+	if (p) {
[...]
-		if (ts.tv_sec < 0)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#108: FILE: ipc/mqueue.c:534:
+		if (unlikely(p->tv_nsec < 0 || p->tv_sec < 0
+			|| p->tv_nsec >= NSEC_PER_SEC))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: ipc/mqueue.c:830:
+^I^Iif (copy_from_user(&ts, u_abs_timeout, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#145: FILE: ipc/mqueue.c:831:
+		if (copy_from_user(&ts, u_abs_timeout, 
+					sizeof(struct timespec)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: ipc/mqueue.c:922:
+^I^Iif (copy_from_user(&ts, u_abs_timeout, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#170: FILE: ipc/mqueue.c:923:
+		if (copy_from_user(&ts, u_abs_timeout, 
+					sizeof(struct timespec)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#219: FILE: kernel/auditsc.c:1209:
+		audit_log_format(ab,
+			"mqdes=%d msg_len=%zd msg_prio=%u "

WARNING:SPLIT_STRING: quoted string split across lines
#220: FILE: kernel/auditsc.c:1210:
+			"mqdes=%d msg_len=%zd msg_prio=%u "
+			"abs_timeout_sec=%ld abs_timeout_nsec=%ld",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#307: FILE: kernel/auditsc.c:2067:
+void __audit_mq_sendrecv(mqd_t mqdes, size_t msg_len, unsigned int msg_prio,
+			const struct timespec *abs_timeout)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000188273.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 3 warnings, 8 checks, 294 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000188273.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
