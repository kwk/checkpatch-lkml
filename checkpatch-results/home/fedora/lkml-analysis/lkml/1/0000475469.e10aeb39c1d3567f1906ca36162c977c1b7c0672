WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
Converts the original plain list into a sorted list based on the clock rating.

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#30: 
Signed-Off-By: Daniel Walker <dwalker@mvista.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#86: FILE: include/linux/clocksource.h:189:
+extern struct clocksource *clocksource_get_next(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#87: FILE: include/linux/clocksource.h:190:
+extern int clocksource_register(struct clocksource*);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#87: FILE: include/linux/clocksource.h:190:
+extern int clocksource_register(struct clocksource*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct clocksource*' should also have an identifier name
#87: FILE: include/linux/clocksource.h:190:
+extern int clocksource_register(struct clocksource*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#88: FILE: include/linux/clocksource.h:191:
+extern void clocksource_rating_change(struct clocksource*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#88: FILE: include/linux/clocksource.h:191:
+extern void clocksource_rating_change(struct clocksource*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct clocksource*' should also have an identifier name
#88: FILE: include/linux/clocksource.h:191:
+extern void clocksource_rating_change(struct clocksource*);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#123: FILE: kernel/time/clocksource.c:92:
+static struct clocksource * __is_registered(char * name)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#123: FILE: kernel/time/clocksource.c:92:
+static struct clocksource * __is_registered(char * name)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#166: FILE: kernel/time/clocksource.c:116:
+static inline struct clocksource * __get_clock(char * name)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#166: FILE: kernel/time/clocksource.c:116:
+static inline struct clocksource * __get_clock(char * name)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#168: FILE: kernel/time/clocksource.c:118:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#248: FILE: kernel/time/clocksource.c:190:
+		printk("register_clocksource: Cannot register %s clocksource. "

ERROR:CODE_INDENT: code indent should use tabs where possible
#255: FILE: kernel/time/clocksource.c:195:
+ ^I^I__sorted_list_add(c);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#255: FILE: kernel/time/clocksource.c:195:
+ ^I^I__sorted_list_add(c);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: kernel/time/clocksource.c:195:
+ ^I^I__sorted_list_add(c);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#282: FILE: kernel/time/clocksource.c:218:
+  ^Ispin_lock_irqsave(&clocksource_lock, flags);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#282: FILE: kernel/time/clocksource.c:218:
+  ^Ispin_lock_irqsave(&clocksource_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: kernel/time/clocksource.c:218:
+  ^Ispin_lock_irqsave(&clocksource_lock, flags);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000475469.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 9 warnings, 4 checks, 244 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000475469.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
