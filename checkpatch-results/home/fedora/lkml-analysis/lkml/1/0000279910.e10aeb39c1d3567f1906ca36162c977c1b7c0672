WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#37: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#42: FILE: fs/aufs/module.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#56: FILE: fs/aufs/module.h:15:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#57: FILE: fs/aufs/module.h:16:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#63: FILE: fs/aufs/module.h:22:
+ * $Id: module.h,v 1.2 2008/04/21 01:33:00 sfjro Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

CHECK:CAMELCASE: Avoid CamelCase: <AuCache_DINFO>
#86: FILE: fs/aufs/module.h:45:
+	AuCache_DINFO,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <AuCache_ICNTNR>
#87: FILE: fs/aufs/module.h:46:
+	AuCache_ICNTNR,

CHECK:CAMELCASE: Avoid CamelCase: <AuCache_FINFO>
#88: FILE: fs/aufs/module.h:47:
+	AuCache_FINFO,

CHECK:CAMELCASE: Avoid CamelCase: <AuCache_VDIR>
#89: FILE: fs/aufs/module.h:48:
+	AuCache_VDIR,

CHECK:CAMELCASE: Avoid CamelCase: <AuCache_DEHSTR>
#90: FILE: fs/aufs/module.h:49:
+	AuCache_DEHSTR,

CHECK:CAMELCASE: Avoid CamelCase: <AuCache_HINOTIFY>
#92: FILE: fs/aufs/module.h:51:
+	AuCache_HINOTIFY,

CHECK:CAMELCASE: Avoid CamelCase: <AuCache_Last>
#94: FILE: fs/aufs/module.h:53:
+	AuCache_Last

CHECK:CAMELCASE: Avoid CamelCase: <AuCacheArgs>
#99: FILE: fs/aufs/module.h:58:
+#define AuCacheArgs(type, sz)	(type), (sz), 0, SLAB_RECLAIM_ACCOUNT, NULL

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#99: FILE: fs/aufs/module.h:58:
+#define AuCacheArgs(type, sz)	(type), (sz), 0, SLAB_RECLAIM_ACCOUNT, NULL

CHECK:CAMELCASE: Avoid CamelCase: <AuCacheX>
#100: FILE: fs/aufs/module.h:59:
+#define AuCacheX(type, extra) \

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'extra' may be better as '(extra)' to avoid precedence issues
#100: FILE: fs/aufs/module.h:59:
+#define AuCacheX(type, extra) \
+	kmem_cache_create(AuCacheArgs(#type, sizeof(struct type) + extra))

CHECK:CAMELCASE: Avoid CamelCase: <AuCache>
#102: FILE: fs/aufs/module.h:61:
+#define AuCache(type)		AuCacheX(type, 0)

CHECK:CAMELCASE: Avoid CamelCase: <AuCacheFuncs>
#106: FILE: fs/aufs/module.h:65:
+#define AuCacheFuncs(name, index) \

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'index' - possible side-effects?
#106: FILE: fs/aufs/module.h:65:
+#define AuCacheFuncs(name, index) \
+static inline void *au_cache_alloc_##name(void) \
+{ return kmem_cache_alloc(au_cachep[index], GFP_KERNEL); } \
+static inline void au_cache_free_##name(void *p) \
+{ kmem_cache_free(au_cachep[index], p); }

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000279910.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 3 warnings, 13 checks, 78 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000279910.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
