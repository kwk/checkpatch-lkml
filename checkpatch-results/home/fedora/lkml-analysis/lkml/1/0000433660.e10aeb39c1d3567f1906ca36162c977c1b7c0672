ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#61: FILE: include/linux/synclink.h:299:
+struct MGSL_PARAMS32
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#76: FILE: include/linux/synclink.h:314:
+};
+#define MGSL_IOCSPARAMS32 _IOW(MGSL_MAGIC_IOC,0,struct MGSL_PARAMS32)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#76: FILE: include/linux/synclink.h:314:
+#define MGSL_IOCSPARAMS32 _IOW(MGSL_MAGIC_IOC,0,struct MGSL_PARAMS32)
                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#76: FILE: include/linux/synclink.h:314:
+#define MGSL_IOCSPARAMS32 _IOW(MGSL_MAGIC_IOC,0,struct MGSL_PARAMS32)
                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#77: FILE: include/linux/synclink.h:315:
+#define MGSL_IOCGPARAMS32 _IOR(MGSL_MAGIC_IOC,1,struct MGSL_PARAMS32)
                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#77: FILE: include/linux/synclink.h:315:
+#define MGSL_IOCGPARAMS32 _IOR(MGSL_MAGIC_IOC,1,struct MGSL_PARAMS32)
                                                ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'get_params32', this function's name, in a string
#95: FILE: drivers/char/synclink_gt.c:1181:
+	DBGINFO(("%s get_params32\n", info->device_name));

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_params32', this function's name, in a string
#118: FILE: drivers/char/synclink_gt.c:1204:
+	DBGINFO(("%s set_params32\n", info->device_name));

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: drivers/char/synclink_gt.c:1224:
+ ^Ichange_params(info);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#138: FILE: drivers/char/synclink_gt.c:1224:
+ ^Ichange_params(info);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: drivers/char/synclink_gt.c:1224:
+ ^Ichange_params(info);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#144: FILE: drivers/char/synclink_gt.c:1230:
+static long slgt_compat_ioctl(struct tty_struct *tty, struct file *file,
+			 unsigned int cmd, unsigned long arg)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#154: FILE: drivers/char/synclink_gt.c:1240:
+	switch (cmd) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000433660.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 4 warnings, 3 checks, 162 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000433660.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
