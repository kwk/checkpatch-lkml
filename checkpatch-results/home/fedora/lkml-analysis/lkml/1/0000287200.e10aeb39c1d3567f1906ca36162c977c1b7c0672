WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#58: FILE: fs/exec.c:128:
+	error = security_path_uselib(&nd);
 	                              ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#71: FILE: fs/namei.c:1598:
+	error = security_path_create(dir, dentry, mode, nd);
 	                                                ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#119: FILE: fs/namei.c:2061:
+	int error = pre_vfs_mknod(dir, dentry, mode);
+	if (error)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#128: FILE: fs/namei.c:2126:
+	error = security_path_mknod(&nd.path, dentry, mode, dev);
 	                             ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#161: FILE: fs/namei.c:2174:
+	int error = pre_vfs_mkdir(dir, dentry);
+	if (error)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#170: FILE: fs/namei.c:2214:
+	error = security_path_mkdir(&nd.path, dentry, mode);
 	                             ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#197: FILE: fs/namei.c:2278:
+	int error = pre_vfs_rmdir(dir, dentry);
+	if (error)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#206: FILE: fs/namei.c:2338:
+	error = security_path_rmdir(&nd.path, dentry);
 	                             ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#233: FILE: fs/namei.c:2375:
+	int error = pre_vfs_unlink(dir, dentry);
+	if (error)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#242: FILE: fs/namei.c:2436:
+		error = security_path_unlink(&nd.path, dentry);
 		                              ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#270: FILE: fs/namei.c:2492:
+	int error = pre_vfs_symlink(dir, dentry);
+	if (error)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#279: FILE: fs/namei.c:2534:
+	error = security_path_symlink(&nd.path, dentry, from);
 	                               ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#308: FILE: fs/namei.c:2589:
+	int error = pre_vfs_link(old_dentry, dir, new_dentry);
+	if (error)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#317: FILE: fs/namei.c:2648:
+	error = security_path_link(&old_nd.path, &nd.path, new_dentry);
 	                                          ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#358: FILE: fs/namei.c:2807:
+	const char *old_name;
+	if (error)

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#383: FILE: fs/open.c:271:
+	error = security_path_truncate(&nd.path, length, 0, NULL);
 	                                ^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#394: FILE: fs/open.c:331:
+				       ATTR_MTIME|ATTR_CTIME, file);
 				                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#406: FILE: include/linux/fs.h:1127:
+extern int pre_vfs_mkdir(struct inode *, struct dentry *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#406: FILE: include/linux/fs.h:1127:
+extern int pre_vfs_mkdir(struct inode *, struct dentry *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#406: FILE: include/linux/fs.h:1127:
+extern int pre_vfs_mkdir(struct inode *, struct dentry *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#408: FILE: include/linux/fs.h:1129:
+extern int pre_vfs_mknod(struct inode *, struct dentry *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#408: FILE: include/linux/fs.h:1129:
+extern int pre_vfs_mknod(struct inode *, struct dentry *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#408: FILE: include/linux/fs.h:1129:
+extern int pre_vfs_mknod(struct inode *, struct dentry *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#408: FILE: include/linux/fs.h:1129:
+extern int pre_vfs_mknod(struct inode *, struct dentry *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#410: FILE: include/linux/fs.h:1131:
+extern int pre_vfs_symlink(struct inode *, struct dentry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#410: FILE: include/linux/fs.h:1131:
+extern int pre_vfs_symlink(struct inode *, struct dentry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#410: FILE: include/linux/fs.h:1131:
+extern int pre_vfs_symlink(struct inode *, struct dentry *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#412: FILE: include/linux/fs.h:1133:
+extern int pre_vfs_link(struct dentry *, struct inode *, struct dentry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#412: FILE: include/linux/fs.h:1133:
+extern int pre_vfs_link(struct dentry *, struct inode *, struct dentry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#412: FILE: include/linux/fs.h:1133:
+extern int pre_vfs_link(struct dentry *, struct inode *, struct dentry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#412: FILE: include/linux/fs.h:1133:
+extern int pre_vfs_link(struct dentry *, struct inode *, struct dentry *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#414: FILE: include/linux/fs.h:1135:
+extern int pre_vfs_rmdir(struct inode *, struct dentry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#414: FILE: include/linux/fs.h:1135:
+extern int pre_vfs_rmdir(struct inode *, struct dentry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#414: FILE: include/linux/fs.h:1135:
+extern int pre_vfs_rmdir(struct inode *, struct dentry *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#416: FILE: include/linux/fs.h:1137:
+extern int pre_vfs_unlink(struct inode *, struct dentry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#416: FILE: include/linux/fs.h:1137:
+extern int pre_vfs_unlink(struct inode *, struct dentry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#416: FILE: include/linux/fs.h:1137:
+extern int pre_vfs_unlink(struct inode *, struct dentry *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#418: FILE: include/linux/fs.h:1139:
+extern int pre_vfs_rename(struct inode *, struct dentry *, struct inode *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#418: FILE: include/linux/fs.h:1139:
+extern int pre_vfs_rename(struct inode *, struct dentry *, struct inode *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#418: FILE: include/linux/fs.h:1139:
+extern int pre_vfs_rename(struct inode *, struct dentry *, struct inode *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#418: FILE: include/linux/fs.h:1139:
+extern int pre_vfs_rename(struct inode *, struct dentry *, struct inode *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#418: FILE: include/linux/fs.h:1139:
+extern int pre_vfs_rename(struct inode *, struct dentry *, struct inode *,

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#434: FILE: include/linux/security.h:351:
+ *	@nd contains the nameidata structure (may be NULL).
   	 ^^

WARNING:TYPO_SPELLING: 'strcture' may be misspelled - perhaps 'structure'?
#482: FILE: include/linux/security.h:399:
+ *	associated with path strcture @path.
   	                     ^^^^^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#554: FILE: include/linux/security.h:488:
+ *	@filp is the file structure (may be NULL).
   	 ^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#558: FILE: include/linux/security.h:492:
+ *      @nd contains the nameidata.
          ^^

WARNING:SPACING: Unnecessary space before function pointer arguments
#567: FILE: include/linux/security.h:1428:
+	int (*path_create) (struct inode *dir, struct dentry *dentry, int mode,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#568: FILE: include/linux/security.h:1429:
+			    struct nameidata *nd);
 			                      ^^

WARNING:SPACING: Unnecessary space before function pointer arguments
#569: FILE: include/linux/security.h:1430:
+	int (*path_unlink) (struct path *dir, struct dentry *dentry);

WARNING:SPACING: Unnecessary space before function pointer arguments
#570: FILE: include/linux/security.h:1431:
+	int (*path_mkdir) (struct path *dir, struct dentry *dentry, int mode);

WARNING:SPACING: Unnecessary space before function pointer arguments
#571: FILE: include/linux/security.h:1432:
+	int (*path_rmdir) (struct path *dir, struct dentry *dentry);

WARNING:SPACING: Unnecessary space before function pointer arguments
#572: FILE: include/linux/security.h:1433:
+	int (*path_mknod) (struct path *dir, struct dentry *dentry, int mode,

WARNING:SPACING: Unnecessary space before function pointer arguments
#574: FILE: include/linux/security.h:1435:
+	int (*path_truncate) (struct path *path, loff_t length,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#575: FILE: include/linux/security.h:1436:
+			      unsigned int time_attrs, struct file *filp);
 			                                            ^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#576: FILE: include/linux/security.h:1437:
+	int (*path_uselib) (struct nameidata *nd);
 	                                      ^^

WARNING:SPACING: Unnecessary space before function pointer arguments
#576: FILE: include/linux/security.h:1437:
+	int (*path_uselib) (struct nameidata *nd);

WARNING:SPACING: Unnecessary space before function pointer arguments
#577: FILE: include/linux/security.h:1438:
+	int (*path_symlink) (struct path *dir, struct dentry *dentry,

WARNING:SPACING: Unnecessary space before function pointer arguments
#579: FILE: include/linux/security.h:1440:
+	int (*path_link) (struct path *old_path, struct path *new_dir,

WARNING:SPACING: Unnecessary space before function pointer arguments
#581: FILE: include/linux/security.h:1442:
+	int (*path_rename) (struct path *old_dir, struct dentry *old_dentry,

WARNING:SPACING: Unnecessary space before function pointer arguments
#583: FILE: include/linux/security.h:1444:
+	int (*path_open) (struct dentry *dentry, struct vfsmount *mnt,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#594: FILE: include/linux/security.h:1722:
+			 struct nameidata *nd);
 			                   ^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#601: FILE: include/linux/security.h:1729:
+			   unsigned int time_attrs, struct file *filp);
 			                                         ^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#602: FILE: include/linux/security.h:1730:
+int security_path_uselib(struct nameidata *nd);
                                            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#619: FILE: include/linux/security.h:2065:
+				       int mode, struct nameidata *nd)
 				                                   ^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#623: FILE: include/linux/security.h:2069:
+}
+static inline int security_path_unlink(struct path *dir, struct dentry *dentry)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#647: FILE: include/linux/security.h:2093:
+					 struct file *filp)
 					              ^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#652: FILE: include/linux/security.h:2098:
+static inline int security_path_uselib(struct nameidata *nd)
                                                          ^^

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#694: FILE: net/unix/af_unix.c:825:
+		err = security_path_mknod(&nd.path, dentry, mode, 0);
 		                           ^^

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#709: FILE: security/dummy.c:274:
+			     int mask, struct nameidata *nd)
 			                                 ^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#760: FILE: security/dummy.c:325:
+			       unsigned int time_attrs, struct file *filp)
 			                                             ^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#765: FILE: security/dummy.c:330:
+static int dummy_path_uselib(struct nameidata *nd)
                                                ^^

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#798: FILE: security/security.c:392:
+			 struct nameidata *nd)
 			                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#802: FILE: security/security.c:396:
+	return security_ops->path_create(dir, dentry, mode, nd);
 	                                                    ^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#804: FILE: security/security.c:398:
+}
+int security_path_mknod(struct path *path, struct dentry *dentry, int mode,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#850: FILE: security/security.c:444:
+			   unsigned int time_attrs, struct file *filp)
 			                                         ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#852: FILE: security/security.c:446:
+	return security_ops->path_truncate(path, length, time_attrs, filp);
 	                                                             ^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#855: FILE: security/security.c:449:
+int security_path_uselib(struct nameidata *nd)
                                            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#857: FILE: security/security.c:451:
+	return security_ops->path_uselib(nd);
 	                                 ^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000287200.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 76 warnings, 10 checks, 760 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000287200.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
