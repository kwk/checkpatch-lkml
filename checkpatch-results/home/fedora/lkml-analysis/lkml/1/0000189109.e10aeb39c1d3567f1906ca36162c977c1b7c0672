WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
type_id 0 call_site 18446744071565585597 ptr 18446612134405955584 bytes_req 4096 bytes_alloc 4096 gfp_flags 208 node -1

WARNING:TYPO_SPELLING: 'ouput' may be misspelled - perhaps 'output'?
#62: 
This is the default ouput, but note that I tried something else.
                    ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#124: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#247: FILE: include/trace/kmemtrace.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#269: FILE: include/trace/kmemtrace.h:23:
+extern void kmemtrace_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#271: FILE: include/trace/kmemtrace.h:25:
+extern void kmemtrace_mark_alloc_node(enum kmemtrace_type_id type_id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#272: FILE: include/trace/kmemtrace.h:26:
+extern void kmemtrace_mark_alloc_node(enum kmemtrace_type_id type_id,
+					     unsigned long call_site,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#279: FILE: include/trace/kmemtrace.h:33:
+extern void kmemtrace_mark_free(enum kmemtrace_type_id type_id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#280: FILE: include/trace/kmemtrace.h:34:
+extern void kmemtrace_mark_free(enum kmemtrace_type_id type_id,
+				       unsigned long call_site,

WARNING:TYPO_SPELLING: 'an userspace' may be misspelled - perhaps 'a userspace'?
#354: FILE: kernel/trace/Kconfig:278:
+	  This requires an userspace application to use. See
 	                ^^^^^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#441: FILE: kernel/trace/trace_kmemtrace.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#474: FILE: kernel/trace/trace_kmemtrace.c:34:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#481: FILE: kernel/trace/trace_kmemtrace.c:41:
+	int cpu;
+	kmemtrace_array = tr;

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#502: FILE: kernel/trace/trace_kmemtrace.c:62:
+	seq_printf(s, "#\n");

WARNING:SPLIT_STRING: quoted string split across lines
#504: FILE: kernel/trace/trace_kmemtrace.c:64:
+	seq_printf(s, "# ALLOC  TYPE  REQ   GIVEN  FLAGS     "
+			"      POINTER         NODE    CALLER\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#506: FILE: kernel/trace/trace_kmemtrace.c:66:
+	seq_printf(s, "# FREE   |      |     |       |       "
+			"       |   |            |        |\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#507: FILE: kernel/trace/trace_kmemtrace.c:67:
+	seq_printf(s, "# |\n\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#516: FILE: kernel/trace/trace_kmemtrace.c:76:
+kmemtrace_print_alloc_original(struct trace_iterator *iter,
+				struct kmemtrace_alloc_entry *entry)

WARNING:SPLIT_STRING: quoted string split across lines
#523: FILE: kernel/trace/trace_kmemtrace.c:83:
+	ret = trace_seq_printf(s, "type_id %d call_site %lu ptr %lu "
+	  "bytes_req %lu bytes_alloc %lu gfp_flags %lu node %d\n",

CHECK:SPACING: No space is necessary after a cast
#524: FILE: kernel/trace/trace_kmemtrace.c:84:
+	   entry->type_id, entry->call_site, (unsigned long) entry->ptr,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#525: FILE: kernel/trace/trace_kmemtrace.c:85:
+	   (unsigned long) entry->bytes_req, (unsigned long) entry->bytes_alloc,

CHECK:SPACING: No space is necessary after a cast
#526: FILE: kernel/trace/trace_kmemtrace.c:86:
+	   (unsigned long) entry->gfp_flags, entry->node);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#536: FILE: kernel/trace/trace_kmemtrace.c:96:
+kmemtrace_print_free_original(struct trace_iterator *iter,
+				struct kmemtrace_free_entry *entry)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#543: FILE: kernel/trace/trace_kmemtrace.c:103:
+	ret = trace_seq_printf(s, "type_id %d call_site %lu ptr %lu\n",
+	   entry->type_id, entry->call_site, (unsigned long) entry->ptr);

CHECK:SPACING: No space is necessary after a cast
#543: FILE: kernel/trace/trace_kmemtrace.c:103:
+	   entry->type_id, entry->call_site, (unsigned long) entry->ptr);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#551: FILE: kernel/trace/trace_kmemtrace.c:111:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#555: FILE: kernel/trace/trace_kmemtrace.c:115:
+kmemtrace_print_alloc_compress(struct trace_iterator *iter,
+					struct kmemtrace_alloc_entry *entry)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#623: FILE: kernel/trace/trace_kmemtrace.c:183:
+kmemtrace_print_free_compress(struct trace_iterator *iter,
+				struct kmemtrace_free_entry *entry)

WARNING:LINE_SPACING: Missing a blank line after declarations
#684: FILE: kernel/trace/trace_kmemtrace.c:244:
+		struct kmemtrace_alloc_entry *field;
+		trace_assign_type(field, entry);

WARNING:LINE_SPACING: Missing a blank line after declarations
#693: FILE: kernel/trace/trace_kmemtrace.c:253:
+		struct kmemtrace_free_entry *field;
+		trace_assign_type(field, entry);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#707: FILE: kernel/trace/trace_kmemtrace.c:267:
+void kmemtrace_mark_alloc_node(enum kmemtrace_type_id type_id,
+			     unsigned long call_site,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#743: FILE: kernel/trace/trace_kmemtrace.c:303:
+void kmemtrace_mark_free(enum kmemtrace_type_id type_id,
+		       unsigned long call_site,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000189109.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 14 warnings, 18 checks, 576 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000189109.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
