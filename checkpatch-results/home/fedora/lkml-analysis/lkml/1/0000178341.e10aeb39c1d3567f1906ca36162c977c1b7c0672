WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
   git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip.git x86-fixes-for-linus

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#127: FILE: arch/x86/include/asm/bitops.h:60:
+set_bit(unsigned int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#137: FILE: arch/x86/include/asm/bitops.h:98:
+clear_bit(int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#147: FILE: arch/x86/include/asm/bitops.h:213:
+test_and_set_bit_lock(int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#156: FILE: arch/x86/include/asm/bitops.h:309:
+static __always_inline int constant_test_bit(unsigned int nr, const volatile unsigned long *addr)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#193: FILE: arch/x86/kernel/apic.c:1842:
+		WARN_ONCE(1,
+			"ACPI: apic version mismatch, bootcpu: %x cpu %d: %x\n",

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#364: FILE: arch/x86/mm/init_32.c:155:
+	if (pmd_idx_kmap_begin != pmd_idx_kmap_end
+	    && (vaddr >> PMD_SHIFT) >= pmd_idx_kmap_begin

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#365: FILE: arch/x86/mm/init_32.c:156:
+	    && (vaddr >> PMD_SHIFT) >= pmd_idx_kmap_begin
+	    && (vaddr >> PMD_SHIFT) <= pmd_idx_kmap_end

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#366: FILE: arch/x86/mm/init_32.c:157:
+	    && (vaddr >> PMD_SHIFT) <= pmd_idx_kmap_end
+	    && ((__pa(pte) >> PAGE_SHIFT) < table_start

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#367: FILE: arch/x86/mm/init_32.c:158:
+	    && ((__pa(pte) >> PAGE_SHIFT) < table_start
+		|| (__pa(pte) >> PAGE_SHIFT) >= table_end)) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#371: FILE: arch/x86/mm/init_32.c:162:
+		BUG_ON(after_init_bootmem);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#377: FILE: arch/x86/mm/init_32.c:168:
+		set_pmd(pmd, __pmd(__pa(newpte)|_PAGE_TABLE));
 		                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#378: FILE: arch/x86/mm/init_32.c:169:
+		BUG_ON(newpte != pte_offset_kernel(pmd, 0));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#384: FILE: arch/x86/mm/init_32.c:175:
+	BUG_ON(vaddr < fix_to_virt(FIX_KMAP_BEGIN - 1)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#385: FILE: arch/x86/mm/init_32.c:176:
+	BUG_ON(vaddr < fix_to_virt(FIX_KMAP_BEGIN - 1)
+	       && vaddr > fix_to_virt(FIX_KMAP_END)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#386: FILE: arch/x86/mm/init_32.c:177:
+	       && vaddr > fix_to_virt(FIX_KMAP_END)
+	       && lastpte && lastpte + PTRS_PER_PTE != pte);

ERROR:CODE_INDENT: code indent should use tabs where possible
#408: FILE: arch/x86/mm/init_32.c:211:
+^I^I^I                            pmd, vaddr, pte);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#631: FILE: kernel/workqueue.c:1026:
+	BUG_ON(!work_on_cpu_wq);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000178341.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 9 warnings, 8 checks, 451 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000178341.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
