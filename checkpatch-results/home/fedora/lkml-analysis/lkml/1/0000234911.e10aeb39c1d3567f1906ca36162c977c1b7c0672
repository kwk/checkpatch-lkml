WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#90: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: sound/soc/blackfin/Kconfig:6:
+^I  the Blackfin SPORT (synchronous serial ports) interface in I2S $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: sound/soc/blackfin/Kconfig:7:
+^I  mode (supports single stereo In/Out). $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#104: FILE: sound/soc/blackfin/Kconfig:10:
+config SND_BF5XX_SOC_SSM2602
+	tristate "SoC SSM2602 Audio support for BF52x ezkit"
+	depends on SND_BF5XX_I2S
+	select SND_BF5XX_SOC_I2S
+	select SND_SOC_SSM2602
+	select I2C
+	select I2C_BLACKFIN_TWI
+	help
+	  Say Y if you want to add support for SoC audio on BF527-EZKIT.
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#119: FILE: sound/soc/blackfin/Kconfig:25:
+^I  the Blackfin SPORT (synchronous serial ports) interface in slot 16 $

WARNING:TYPO_SPELLING: 'implment' may be misspelled - perhaps 'implement'?
#124: FILE: sound/soc/blackfin/Kconfig:30:
+	  AC'97 codecs which do not implment the slot-16 mode will not function
 	                            ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#138: FILE: sound/soc/blackfin/Kconfig:44:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#171: FILE: sound/soc/blackfin/Kconfig:77:
+^I$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#212: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#213: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:2:
+ * File:         sound/soc/blackfin/bf5xx-ac97-pcm.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#219: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:8:
+ * Rev:          $Id: bf5xx-ac97-pcm.c 4104 2008-06-06 06:51:48Z cliff $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#239: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:28:
+ * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#262: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:51:
+static void bf5xx_mmap_copy(struct snd_pcm_substream *substream,
+	 snd_pcm_uframes_t count)

WARNING:LINE_SPACING: Missing a blank line after declarations
#266: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:55:
+	struct sport_device *sport = runtime->private_data;
+	if (substream->stream == SNDRV_PCM_STREAM_PLAYBACK) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#267: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:56:
+		bf5xx_pcm_to_ac97(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#274: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:63:
+		bf5xx_ac97_to_pcm(

WARNING:LINE_SPACING: Missing a blank line after declarations
#289: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:78:
+	struct snd_pcm_runtime *runtime = pcm->runtime;
+	bf5xx_mmap_copy(pcm, runtime->period_size);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#313: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:102:
+	.periods_max		= PAGE_SIZE/32,
 	            		           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#319: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:108:
+static int bf5xx_pcm_hw_params(struct snd_pcm_substream *substream,
+	struct snd_pcm_hw_params *params)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#321: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:110:
+	size_t size = bf5xx_pcm_hardware.buffer_bytes_max * sizeof(struct ac97_frame)/4;
 	                                                                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#342: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:131:
+	size_t size = bf5xx_pcm_hardware.buffer_bytes_max * sizeof(struct ac97_frame)/4;
 	                                                                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#349: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:138:
+		sport_config_tx_dma(sport, sport->tx_dma_buf, runtime->periods,
+				runtime->period_size * sizeof(struct ac97_frame));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#353: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:142:
+		sport_config_rx_dma(sport, sport->rx_dma_buf, runtime->periods,
+				runtime->period_size * sizeof(struct ac97_frame));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#359: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:148:
+		sport_config_tx_dma(sport, runtime->dma_area, runtime->periods,
+				runtime->period_size * sizeof(struct ac97_frame));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#363: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:152:
+		sport_config_rx_dma(sport, runtime->dma_area, runtime->periods,
+				runtime->period_size * sizeof(struct ac97_frame));

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#375: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:164:
+	pr_debug("%s %s\n", substream->stream?"Capture":"Playback", \
 	                                     ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#375: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:164:
+	pr_debug("%s %s\n", substream->stream?"Capture":"Playback", \
 	                                               ^

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#375: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:164:
+	pr_debug("%s %s\n", substream->stream?"Capture":"Playback", \

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#376: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:165:
+			cmd?" start":" stop");
 			   ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#376: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:165:
+			cmd?" start":" stop");
 			            ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#418: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:207:
+	if (substream->stream == SNDRV_PCM_STREAM_PLAYBACK)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#420: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:209:
+	else {

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#422: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:211:
+	pr_debug("%s pointer curr:0x%0x\n", substream->stream ? \

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#423: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:212:
+			"Capture":"Playback", curr);
 			         ^

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#434: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:223:
+	pr_debug("%s enter\n", __func__);

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#437: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:226:
+	ret = snd_pcm_hw_constraint_integer(runtime, \

CHECK:BRACES: braces {} should be used on all arms of this statement
#442: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:231:
+	if (sport_handle != NULL)
[...]
+	else {
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sport_handle"
#442: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:231:
+	if (sport_handle != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: Unbalanced braces around else statement
#444: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:233:
+	else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#445: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:234:
+		printk(KERN_ERR "sport_handle is NULL\n");

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#456: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:245:
+	pr_debug("%s enter\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#463: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:252:
+static int bf5xx_pcm_mmap(struct snd_pcm_substream *substream,
+	struct vm_area_struct *vma)

WARNING:LINE_SPACING: Missing a blank line after declarations
#467: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:256:
+	size_t size = vma->vm_end - vma->vm_start;
+	vma->vm_start = (unsigned long)runtime->dma_area;

WARNING:SPACING: space prohibited before semicolon
#470: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:259:
+	return 0 ;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#474: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:263:
+static	int bf5xx_pcm_copy(struct snd_pcm_substream *substream, int channel,
+		    snd_pcm_uframes_t pos,

WARNING:LINE_SPACING: Missing a blank line after declarations
#478: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:267:
+	struct snd_pcm_runtime *runtime = substream->runtime;
+	pr_debug("%s copy pos:0x%lx count:0x%lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#479: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:268:
+	pr_debug("%s copy pos:0x%lx count:0x%lx\n",
+			substream->stream?"Capture":"Playback", pos, count);

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#479: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:268:
+			substream->stream?"Capture":"Playback", pos, count);
 			                 ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#479: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:268:
+			substream->stream?"Capture":"Playback", pos, count);
 			                           ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#481: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:270:
+		bf5xx_pcm_to_ac97(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#485: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:274:
+		bf5xx_ac97_to_pcm(

WARNING:CONST_STRUCT: struct snd_pcm_ops should normally be const
#492: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:281:
+struct snd_pcm_ops bf5xx_pcm_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#512: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:301:
+	size_t size = bf5xx_pcm_hardware.buffer_bytes_max * sizeof(struct ac97_frame)/4;
 	                                                                             ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#519: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:308:
+		printk(KERN_ERR "Failed to allocate dma memory-Please increase uncached DMA memory region\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#532: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:321:
+		if (!sport_handle->tx_dma_buf) {
[...]
+		} else
[...]

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#533: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:322:
+			sport_handle->tx_dma_buf = dma_alloc_coherent(NULL, \

CHECK:BRACES: braces {} should be used on all arms of this statement
#535: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:324:
+			if (!sport_handle->tx_dma_buf) {
[...]
+			} else
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#536: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:325:
+				printk(KERN_ERR "Failed to allocate memory for tx dma buf-Please increase uncached DMA memory region\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#536: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:325:
+			if (!sport_handle->tx_dma_buf) {
+				printk(KERN_ERR "Failed to allocate memory for tx dma buf-Please increase uncached DMA memory region\n");

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#538: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:327:
+				return -ENOMEM;
+			} else

CHECK:BRACES: Unbalanced braces around else statement
#538: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:327:
+			} else

CHECK:BRACES: Unbalanced braces around else statement
#540: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:329:
+		} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#543: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:332:
+		if (!sport_handle->rx_dma_buf) {
[...]
+		} else
[...]

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#544: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:333:
+			sport_handle->rx_dma_buf = dma_alloc_coherent(NULL, \

CHECK:BRACES: braces {} should be used on all arms of this statement
#546: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:335:
+			if (!sport_handle->rx_dma_buf) {
[...]
+			} else
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#547: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:336:
+				printk(KERN_ERR "Failed to allocate memory for rx dma buf-Please increase uncached DMA memory region\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#547: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:336:
+			if (!sport_handle->rx_dma_buf) {
+				printk(KERN_ERR "Failed to allocate memory for rx dma buf-Please increase uncached DMA memory region\n");

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#549: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:338:
+				return -ENOMEM;
+			} else

CHECK:BRACES: Unbalanced braces around else statement
#549: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:338:
+			} else

CHECK:BRACES: Unbalanced braces around else statement
#551: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:340:
+		} else

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#564: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:353:
+	size_t size = bf5xx_pcm_hardware.buffer_bytes_max * sizeof(struct ac97_frame)/4;
 	                                                                             ^

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#579: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:368:
+			dma_free_coherent(NULL, size, \

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#583: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:372:
+	} else {
+

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#585: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:374:
+			dma_free_coherent(NULL, size, \

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#598: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:387:
+int bf5xx_pcm_new(struct snd_card *card, struct snd_soc_codec_dai *dai,
+	struct snd_pcm *pcm)

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#602: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:391:
+	pr_debug("%s enter\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#610: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:399:
+		ret = bf5xx_pcm_preallocate_dma_buffer(pcm,
+			SNDRV_PCM_STREAM_PLAYBACK);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#617: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:406:
+		ret = bf5xx_pcm_preallocate_dma_buffer(pcm,
+			SNDRV_PCM_STREAM_CAPTURE);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#627: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.c:416:
+^I.pcm_ops ^I= &bf5xx_pcm_ops,$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#642: FILE: sound/soc/blackfin/bf5xx-ac97-pcm.h:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#677: FILE: sound/soc/blackfin/bf5xx-ac97.c:1:
+/*

WARNING:INCLUDE_LINUX: Use #include <linux/gpio.h> instead of <asm/gpio.h>
#705: FILE: sound/soc/blackfin/bf5xx-ac97.c:29:
+#include <asm/gpio.h>

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#778: FILE: sound/soc/blackfin/bf5xx-ac97.c:102:
+void bf5xx_pcm_to_ac97(struct ac97_frame *dst, const __u32 *src, \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#788: FILE: sound/soc/blackfin/bf5xx-ac97.c:112:
+void bf5xx_ac97_to_pcm(const struct ac97_frame *src, __u32 *dst, \

WARNING:BRACES: braces {} are not necessary for single statement blocks
#791: FILE: sound/soc/blackfin/bf5xx-ac97.c:115:
+	while (count--) {
+		*(dst++) = (src++)->ac97_pcm;
+	}

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#799: FILE: sound/soc/blackfin/bf5xx-ac97.c:123:
+	return sport->tx_curr_frag = sport_curr_offset_tx(sport) / \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#812: FILE: sound/soc/blackfin/bf5xx-ac97.c:136:
+	nextwrite = (struct ac97_frame *)(sport->tx_buf + \

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#815: FILE: sound/soc/blackfin/bf5xx-ac97.c:139:
+	pr_debug("sport->tx_buf:%p, nextfrag:0x%x nextwrite:%p, cmd_count:%d\n",
+			sport->tx_buf, nextfrag, nextwrite, cmd_count[nextfrag]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#821: FILE: sound/soc/blackfin/bf5xx-ac97.c:145:
+	pr_debug("ac97_sport: Inserting %02x/%04x into fragment %d\n",
+			addr >> 8, data, nextfrag);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#825: FILE: sound/soc/blackfin/bf5xx-ac97.c:149:
+static unsigned short bf5xx_ac97_read(struct snd_ac97 *ac97,
+	unsigned short reg)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#833: FILE: sound/soc/blackfin/bf5xx-ac97.c:157:
+		printk(KERN_ERR "Could you send a mail to author "

WARNING:SPLIT_STRING: quoted string split across lines
#834: FILE: sound/soc/blackfin/bf5xx-ac97.c:158:
+		printk(KERN_ERR "Could you send a mail to author "
+				"to report this?\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#843: FILE: sound/soc/blackfin/bf5xx-ac97.c:167:
+	sport_send_and_recv(sport_handle, (unsigned char *)&out_frame,
+			(unsigned char *)&in_frame,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#849: FILE: sound/soc/blackfin/bf5xx-ac97.c:173:
+void bf5xx_ac97_write(struct snd_ac97 *ac97, unsigned short reg,
+	unsigned short val)

WARNING:LINE_SPACING: Missing a blank line after declarations
#858: FILE: sound/soc/blackfin/bf5xx-ac97.c:182:
+		struct ac97_frame frame;
+		memset(&frame, 0, sizeof(struct ac97_frame));

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#862: FILE: sound/soc/blackfin/bf5xx-ac97.c:186:
+		sport_send_and_recv(sport_handle, (unsigned char *)&frame, \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#870: FILE: sound/soc/blackfin/bf5xx-ac97.c:194:
+ (defined(BF537_FAMILY) && (CONFIG_SND_BF5XX_SPORT_NUM == 1))$

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#878: FILE: sound/soc/blackfin/bf5xx-ac97.c:202:
+	pr_debug("%s enter\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#889: FILE: sound/soc/blackfin/bf5xx-ac97.c:213:
+	printk(KERN_INFO"%s: Not implemented\n", __func__);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#889: FILE: sound/soc/blackfin/bf5xx-ac97.c:213:
+	printk(KERN_INFO"%s: Not implemented\n", __func__);

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#896: FILE: sound/soc/blackfin/bf5xx-ac97.c:220:
+	pr_debug("%s enter\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#918: FILE: sound/soc/blackfin/bf5xx-ac97.c:242:
+static int bf5xx_ac97_suspend(struct platform_device *pdev,
+	struct snd_soc_cpu_dai *dai)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#934: FILE: sound/soc/blackfin/bf5xx-ac97.c:258:
+static int bf5xx_ac97_resume(struct platform_device *pdev,
+	struct snd_soc_cpu_dai *dai)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#946: FILE: sound/soc/blackfin/bf5xx-ac97.c:270:
+		printk(KERN_ERR "SPORT is busy!\n");

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#949: FILE: sound/soc/blackfin/bf5xx-ac97.c:273:
+	ret = sport_config_rx(sport_handle, IRFS, 0xF, 0, (16*16-1));
 	                                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#949: FILE: sound/soc/blackfin/bf5xx-ac97.c:273:
+	ret = sport_config_rx(sport_handle, IRFS, 0xF, 0, (16*16-1));
 	                                                        ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#952: FILE: sound/soc/blackfin/bf5xx-ac97.c:276:
+		printk(KERN_ERR "SPORT is busy!\n");

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#955: FILE: sound/soc/blackfin/bf5xx-ac97.c:279:
+	ret = sport_config_tx(sport_handle, ITFS, 0xF, 0, (16*16-1));
 	                                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#955: FILE: sound/soc/blackfin/bf5xx-ac97.c:279:
+	ret = sport_config_tx(sport_handle, ITFS, 0xF, 0, (16*16-1));
 	                                                        ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#958: FILE: sound/soc/blackfin/bf5xx-ac97.c:282:
+		printk(KERN_ERR "SPORT is busy!\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#978: FILE: sound/soc/blackfin/bf5xx-ac97.c:302:
+static int proc_write(struct file *file, const char __user *buffer,
+		unsigned long count, void *data)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#981: FILE: sound/soc/blackfin/bf5xx-ac97.c:305:
+	unsigned long reg = simple_strtoul(buffer, NULL, 16);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:SPACING: No space is necessary after a cast
#985: FILE: sound/soc/blackfin/bf5xx-ac97.c:309:
+	out_frame[0].ac97_addr = (unsigned short) ((reg << 8) | 0x8000);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#987: FILE: sound/soc/blackfin/bf5xx-ac97.c:311:
+	sport_send_and_recv(sport_handle, (unsigned char *)&out_frame,
+				(unsigned char *)&in_frame,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#989: FILE: sound/soc/blackfin/bf5xx-ac97.c:313:
+	printk(KERN_INFO"0x%x:%04x\n", out_frame[0].ac97_addr, \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#989: FILE: sound/soc/blackfin/bf5xx-ac97.c:313:
+	printk(KERN_INFO"0x%x:%04x\n", out_frame[0].ac97_addr, \

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#989: FILE: sound/soc/blackfin/bf5xx-ac97.c:313:
+	printk(KERN_INFO"0x%x:%04x\n", out_frame[0].ac97_addr, \

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cmd_count"
#1005: FILE: sound/soc/blackfin/bf5xx-ac97.c:329:
+	if (cmd_count == NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1009: FILE: sound/soc/blackfin/bf5xx-ac97.c:333:
+		printk(KERN_ERR "Requesting Peripherals failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1016: FILE: sound/soc/blackfin/bf5xx-ac97.c:340:
+		printk(KERN_ERR "Failed to request GPIO_%d for reset\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1017: FILE: sound/soc/blackfin/bf5xx-ac97.c:341:
+		printk(KERN_ERR "Failed to request GPIO_%d for reset\n",
+				CONFIG_SND_BF5XX_RESET_GPIO_NUM);

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#1023: FILE: sound/soc/blackfin/bf5xx-ac97.c:347:
+	sport_handle = sport_init(&sport_params[sport_num], 2, \

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1036: FILE: sound/soc/blackfin/bf5xx-ac97.c:360:
+		printk(KERN_ERR "SPORT is busy!\n");

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1039: FILE: sound/soc/blackfin/bf5xx-ac97.c:363:
+	ret = sport_config_rx(sport_handle, IRFS, 0xF, 0, (16*16-1));
 	                                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1039: FILE: sound/soc/blackfin/bf5xx-ac97.c:363:
+	ret = sport_config_rx(sport_handle, IRFS, 0xF, 0, (16*16-1));
 	                                                        ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1042: FILE: sound/soc/blackfin/bf5xx-ac97.c:366:
+		printk(KERN_ERR "SPORT is busy!\n");

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1045: FILE: sound/soc/blackfin/bf5xx-ac97.c:369:
+	ret = sport_config_tx(sport_handle, ITFS, 0xF, 0, (16*16-1));
 	                                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1045: FILE: sound/soc/blackfin/bf5xx-ac97.c:369:
+	ret = sport_config_tx(sport_handle, ITFS, 0xF, 0, (16*16-1));
 	                                                        ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1048: FILE: sound/soc/blackfin/bf5xx-ac97.c:372:
+		printk(KERN_ERR "SPORT is busy!\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1100: FILE: sound/soc/blackfin/bf5xx-ac97.h:1:
+/*

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1119: FILE: sound/soc/blackfin/bf5xx-ac97.h:20:
+} __attribute__ ((packed));

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#1129: FILE: sound/soc/blackfin/bf5xx-ac97.h:30:
+void bf5xx_pcm_to_ac97(struct ac97_frame *dst, const __u32 *src, \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#1132: FILE: sound/soc/blackfin/bf5xx-ac97.h:33:
+void bf5xx_ac97_to_pcm(const struct ac97_frame *src, __u32 *dst, \

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1142: FILE: sound/soc/blackfin/bf5xx-ad1980.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1143: FILE: sound/soc/blackfin/bf5xx-ad1980.c:2:
+ * File:         sound/soc/blackfin/bf5xx-ad1980.c

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1149: FILE: sound/soc/blackfin/bf5xx-ad1980.c:8:
+ * Rev:          $Id: bf5xx-ad1980.c 4104 2008-06-06 06:51:48Z cliff $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1169: FILE: sound/soc/blackfin/bf5xx-ad1980.c:28:
+ * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

WARNING:INCLUDE_LINUX: Use #include <linux/gpio.h> instead of <asm/gpio.h>
#1182: FILE: sound/soc/blackfin/bf5xx-ad1980.c:41:
+#include <asm/gpio.h>

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1197: FILE: sound/soc/blackfin/bf5xx-ad1980.c:56:
+	pr_debug("%s enter\n", __func__);

WARNING:CONST_STRUCT: struct snd_soc_ops should normally be const
#1202: FILE: sound/soc/blackfin/bf5xx-ad1980.c:61:
+static struct snd_soc_ops bf5xx_board_ops = {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1264: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1265: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:2:
+ * File:         sound/soc/blackfin/bf5xx-i2s-pcm.c

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1271: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:8:
+ * Rev:          $Id: bf5xx-i2s-pcm.c 4104 2008-06-06 06:51:48Z cliff $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1291: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:28:
+ * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1315: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:52:
+	struct snd_pcm_substream *pcm = data;
+	snd_pcm_period_elapsed(pcm);

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#1323: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:60:
+	.formats		= SNDRV_PCM_FMTBIT_S16_LE | SNDRV_PCM_FMTBIT_S24_LE | SNDRV_PCM_FMTBIT_S32_LE,

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1327: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:64:
+	.periods_max		= PAGE_SIZE/32,
 	            		           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1333: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:70:
+static int bf5xx_pcm_hw_params(struct snd_pcm_substream *substream,
+	struct snd_pcm_hw_params *params)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1336: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:73:
+	size_t size = bf5xx_pcm_hardware.buffer_bytes_max;
+	snd_pcm_lib_malloc_pages(substream, size);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1354: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:91:
+	pr_debug("%s enter\n", __func__);

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1372: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:109:
+	pr_debug("%s %s\n", substream->stream?"Capture":"Playback", \
 	                                     ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1372: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:109:
+	pr_debug("%s %s\n", substream->stream?"Capture":"Playback", \
 	                                               ^

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#1372: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:109:
+	pr_debug("%s %s\n", substream->stream?"Capture":"Playback", \

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1373: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:110:
+			cmd?" start":" stop");
 			   ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1373: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:110:
+			cmd?" start":" stop");
 			            ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1402: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:139:
+	snd_pcm_uframes_t frames;
+	pr_debug("%s enter\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1402: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:139:
+	pr_debug("%s enter\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1418: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:155:
+	pr_debug("%s enter\n", __func__);

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#1421: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:158:
+	ret = snd_pcm_hw_constraint_integer(runtime, \

CHECK:BRACES: braces {} should be used on all arms of this statement
#1426: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:163:
+	if (sport_handle != NULL)
[...]
+	else {
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sport_handle"
#1426: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:163:
+	if (sport_handle != NULL)

CHECK:BRACES: Unbalanced braces around else statement
#1428: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:165:
+	else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1429: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:166:
+		printk(KERN_ERR "sport_handle is NULL\n");

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1440: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:177:
+	pr_debug("%s enter\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1447: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:184:
+static int bf5xx_pcm_mmap(struct snd_pcm_substream *substream,
+	struct vm_area_struct *vma)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1451: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:188:
+	size_t size = vma->vm_end - vma->vm_start;
+	vma->vm_start = (unsigned long)runtime->dma_area;

WARNING:SPACING: space prohibited before semicolon
#1455: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:192:
+	return 0 ;

WARNING:CONST_STRUCT: struct snd_pcm_ops should normally be const
#1458: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:195:
+struct snd_pcm_ops bf5xx_pcm_ops = {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1481: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:218:
+		printk(KERN_ERR "Failed to allocate dma memory-Please increase uncached DMA memory region\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1519: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:256:
+int bf5xx_pcm_new(struct snd_card *card, struct snd_soc_codec_dai *dai,
+	struct snd_pcm *pcm)

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1523: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:260:
+	pr_debug("%s enter\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1531: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:268:
+		ret = bf5xx_pcm_preallocate_dma_buffer(pcm,
+			SNDRV_PCM_STREAM_PLAYBACK);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1538: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:275:
+		ret = bf5xx_pcm_preallocate_dma_buffer(pcm,
+			SNDRV_PCM_STREAM_CAPTURE);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1548: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.c:285:
+^I.pcm_ops ^I= &bf5xx_pcm_ops,$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1563: FILE: sound/soc/blackfin/bf5xx-i2s-pcm.h:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1598: FILE: sound/soc/blackfin/bf5xx-i2s.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1599: FILE: sound/soc/blackfin/bf5xx-i2s.c:2:
+ * File:         sound/soc/blackfin/bf5xx-i2s.c

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1605: FILE: sound/soc/blackfin/bf5xx-i2s.c:8:
+ * Rev:          $Id: bf5xx-i2s.c 4104 2008-06-06 06:51:48Z cliff $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1625: FILE: sound/soc/blackfin/bf5xx-i2s.c:28:
+ * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

WARNING:INCLUDE_LINUX: Use #include <linux/gpio.h> instead of <asm/gpio.h>
#1640: FILE: sound/soc/blackfin/bf5xx-i2s.c:43:
+#include <asm/gpio.h>

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1671: FILE: sound/soc/blackfin/bf5xx-i2s.c:74:
+		printk(KERN_ERR "Requesting Peripherals failed\n");

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1674: FILE: sound/soc/blackfin/bf5xx-i2s.c:77:
+	pr_debug("%s enter\n", __func__);

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#1676: FILE: sound/soc/blackfin/bf5xx-i2s.c:79:
+	sport_handle = sport_init(&sport_params[sport_num], 4, \

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1686: FILE: sound/soc/blackfin/bf5xx-i2s.c:89:
+	ret = sport_config_rx(sport_handle, RFSR | RCKFE, RSFSE|0x1f, 0, 0);
 	                                                       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1688: FILE: sound/soc/blackfin/bf5xx-i2s.c:91:
+		printk(KERN_ERR "SPORT is busy!\n");

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1691: FILE: sound/soc/blackfin/bf5xx-i2s.c:94:
+	ret = sport_config_tx(sport_handle, TFSR | TCKFE, TSFSE|0x1f, 0, 0);
 	                                                       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1693: FILE: sound/soc/blackfin/bf5xx-i2s.c:96:
+		printk(KERN_ERR "SPORT is busy!\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1702: FILE: sound/soc/blackfin/bf5xx-i2s.c:105:
+static int bf5xx_i2s_suspend(struct platform_device *dev,
+	struct snd_soc_cpu_dai *dai)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1718: FILE: sound/soc/blackfin/bf5xx-i2s.c:121:
+static int bf5xx_i2s_resume(struct platform_device *pdev,
+	struct snd_soc_cpu_dai *dai)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1727: FILE: sound/soc/blackfin/bf5xx-i2s.c:130:
+	ret = sport_config_rx(sport_handle, RFSR | RCKFE, RSFSE|0x1f, 0, 0);
 	                                                       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1730: FILE: sound/soc/blackfin/bf5xx-i2s.c:133:
+		printk(KERN_ERR "SPORT is busy!\n");

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1733: FILE: sound/soc/blackfin/bf5xx-i2s.c:136:
+	ret = sport_config_tx(sport_handle, TFSR | TCKFE, TSFSE|0x1f, 0, 0);
 	                                                       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1735: FILE: sound/soc/blackfin/bf5xx-i2s.c:138:
+		printk(KERN_ERR "SPORT is busy!\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1787: FILE: sound/soc/blackfin/bf5xx-i2s.h:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1807: FILE: sound/soc/blackfin/bf5xx-sport.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1831: FILE: sound/soc/blackfin/bf5xx-sport.c:25:
+ * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

WARNING:INCLUDE_LINUX: Use #include <linux/bug.h> instead of <asm/bug.h>
#1838: FILE: sound/soc/blackfin/bf5xx-sport.c:32:
+#include <asm/bug.h>

WARNING:INCLUDE_LINUX: Use #include <linux/gpio.h> instead of <asm/gpio.h>
#1839: FILE: sound/soc/blackfin/bf5xx-sport.c:33:
+#include <asm/gpio.h>

WARNING:INCLUDE_LINUX: Use #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#1843: FILE: sound/soc/blackfin/bf5xx-sport.c:37:
+#include <asm/cacheflush.h>

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1847: FILE: sound/soc/blackfin/bf5xx-sport.c:41:
+#define FRAME_DELAY (1<<12)
                       ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1847: FILE: sound/soc/blackfin/bf5xx-sport.c:41:
+#define FRAME_DELAY (1<<12)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1852: FILE: sound/soc/blackfin/bf5xx-sport.c:46:
+ * tdm_count is # channels NOT / 8 ! */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1854: FILE: sound/soc/blackfin/bf5xx-sport.c:48:
+int sport_set_multichannel(struct sport_device *sport,
+		int tdm_count, u32 mask, int packed)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1857: FILE: sound/soc/blackfin/bf5xx-sport.c:51:
+	pr_debug("%s tdm_count=%d mask:0x%08x packed=%d\n", __func__,
+			tdm_count, mask, packed);

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1869: FILE: sound/soc/blackfin/bf5xx-sport.c:63:
+		sport->regs->mcmc1 = ((tdm_count>>3)-1) << 12;
 		                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1869: FILE: sound/soc/blackfin/bf5xx-sport.c:63:
+		sport->regs->mcmc1 = ((tdm_count>>3)-1) << 12;
 		                                    ^

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#1870: FILE: sound/soc/blackfin/bf5xx-sport.c:64:
+		sport->regs->mcmc2 = FRAME_DELAY | MCMEN | \

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1871: FILE: sound/soc/blackfin/bf5xx-sport.c:65:
+				(packed ? (MCDTXPE|MCDRXPE) : 0);
 				                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1899: FILE: sound/soc/blackfin/bf5xx-sport.c:93:
+int sport_config_rx(struct sport_device *sport, unsigned int rcr1,
+		unsigned int rcr2, unsigned int clkdiv, unsigned int fsdiv)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1916: FILE: sound/soc/blackfin/bf5xx-sport.c:110:
+int sport_config_tx(struct sport_device *sport, unsigned int tcr1,
+		unsigned int tcr2, unsigned int clkdiv, unsigned int fsdiv)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1933: FILE: sound/soc/blackfin/bf5xx-sport.c:127:
+static void setup_desc(struct dmasg *desc, void *buf, int fragcount,
+		size_t fragsize, unsigned int cfg,

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1936: FILE: sound/soc/blackfin/bf5xx-sport.c:130:
+{
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around desc[i + 1]
#1940: FILE: sound/soc/blackfin/bf5xx-sport.c:134:
+		desc[i].next_desc_addr  = (unsigned long)&(desc[i + 1]);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1941: FILE: sound/soc/blackfin/bf5xx-sport.c:135:
+		desc[i].start_addr = (unsigned long)buf + i*fragsize;
 		                                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1950: FILE: sound/soc/blackfin/bf5xx-sport.c:144:
+	desc[fragcount-1].next_desc_addr = (unsigned long)desc;
 	              ^

WARNING:SPLIT_STRING: quoted string split across lines
#1953: FILE: sound/soc/blackfin/bf5xx-sport.c:147:
+	pr_debug("setup desc: desc0=%p, next0=%lx, desc1=%p,"
+		"next1=%lx\nx_count=%x,y_count=%x,addr=0x%lx,cfs=0x%x\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around desc[0]
#1954: FILE: sound/soc/blackfin/bf5xx-sport.c:148:
+		&(desc[0]), desc[0].next_desc_addr,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around desc[1]
#1955: FILE: sound/soc/blackfin/bf5xx-sport.c:149:
+		&(desc[1]), desc[1].next_desc_addr,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1957: FILE: sound/soc/blackfin/bf5xx-sport.c:151:
+		desc[0].start_addr,desc[0].cfg);
 		                  ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1987: FILE: sound/soc/blackfin/bf5xx-sport.c:181:
+	BUG_ON(sport->dummy_rx_desc == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sport->dummy_rx_desc"
#1987: FILE: sound/soc/blackfin/bf5xx-sport.c:181:
+	BUG_ON(sport->dummy_rx_desc == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1988: FILE: sound/soc/blackfin/bf5xx-sport.c:182:
+	BUG_ON(sport->curr_rx_desc == sport->dummy_rx_desc);

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#1991: FILE: sound/soc/blackfin/bf5xx-sport.c:185:
+	sport->dummy_rx_desc->next_desc_addr = \

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1992: FILE: sound/soc/blackfin/bf5xx-sport.c:186:
+			(unsigned long)(sport->dummy_rx_desc+1);
 			                                    ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2003: FILE: sound/soc/blackfin/bf5xx-sport.c:197:
+	while ((get_dma_curr_desc_ptr(sport->dma_rx_chan) - \
[...]
+			(unsigned long)sport->dummy_rx_desc) {}

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2003: FILE: sound/soc/blackfin/bf5xx-sport.c:197:
+	while ((get_dma_curr_desc_ptr(sport->dma_rx_chan) - \

CHECK:BRACES: braces {} should be used on all arms of this statement
#2015: FILE: sound/soc/blackfin/bf5xx-sport.c:209:
+	if (dummy) {
[...]
+	} else
[...]

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2016: FILE: sound/soc/blackfin/bf5xx-sport.c:210:
+		sport->dummy_rx_desc->next_desc_addr = \

CHECK:SPACING: No space is necessary after a cast
#2017: FILE: sound/soc/blackfin/bf5xx-sport.c:211:
+				(unsigned long) sport->dummy_rx_desc;

CHECK:BRACES: Unbalanced braces around else statement
#2019: FILE: sound/soc/blackfin/bf5xx-sport.c:213:
+	} else

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2022: FILE: sound/soc/blackfin/bf5xx-sport.c:216:
+	set_dma_next_desc_addr(sport->dma_rx_chan, \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2026: FILE: sound/soc/blackfin/bf5xx-sport.c:220:
+	set_dma_config(sport->dma_rx_chan, (DMAFLOW_LARGE | NDSIZE_9 | \

CHECK:BRACES: braces {} should be used on all arms of this statement
#2036: FILE: sound/soc/blackfin/bf5xx-sport.c:230:
+	if (dummy) {
[...]
+	} else
[...]

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2037: FILE: sound/soc/blackfin/bf5xx-sport.c:231:
+		sport->dummy_tx_desc->next_desc_addr = \

CHECK:SPACING: No space is necessary after a cast
#2038: FILE: sound/soc/blackfin/bf5xx-sport.c:232:
+				(unsigned long) sport->dummy_tx_desc;

CHECK:BRACES: Unbalanced braces around else statement
#2040: FILE: sound/soc/blackfin/bf5xx-sport.c:234:
+	} else

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2043: FILE: sound/soc/blackfin/bf5xx-sport.c:237:
+	set_dma_next_desc_addr(sport->dma_tx_chan, \

WARNING:LINE_SPACING: Missing a blank line after declarations
#2057: FILE: sound/soc/blackfin/bf5xx-sport.c:251:
+	unsigned long flags;
+	pr_debug("%s enter\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#2057: FILE: sound/soc/blackfin/bf5xx-sport.c:251:
+	pr_debug("%s enter\n", __func__);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2062: FILE: sound/soc/blackfin/bf5xx-sport.c:256:
+		BUG_ON(sport->dma_rx_desc == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sport->dma_rx_desc"
#2062: FILE: sound/soc/blackfin/bf5xx-sport.c:256:
+		BUG_ON(sport->dma_rx_desc == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2063: FILE: sound/soc/blackfin/bf5xx-sport.c:257:
+		BUG_ON(sport->curr_rx_desc != sport->dummy_rx_desc);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2065: FILE: sound/soc/blackfin/bf5xx-sport.c:259:
+		while ((get_dma_curr_desc_ptr(sport->dma_rx_chan) - \
[...]
+			(unsigned long)sport->dummy_rx_desc) {}

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2065: FILE: sound/soc/blackfin/bf5xx-sport.c:259:
+		while ((get_dma_curr_desc_ptr(sport->dma_rx_chan) - \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2068: FILE: sound/soc/blackfin/bf5xx-sport.c:262:
+		sport->dummy_rx_desc->next_desc_addr = \

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#2086: FILE: sound/soc/blackfin/bf5xx-sport.c:280:
+	pr_debug("%s enter\n", __func__);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2111: FILE: sound/soc/blackfin/bf5xx-sport.c:305:
+	BUG_ON(sport->dummy_tx_desc == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sport->dummy_tx_desc"
#2111: FILE: sound/soc/blackfin/bf5xx-sport.c:305:
+	BUG_ON(sport->dummy_tx_desc == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2112: FILE: sound/soc/blackfin/bf5xx-sport.c:306:
+	BUG_ON(sport->curr_tx_desc == sport->dummy_tx_desc);

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2114: FILE: sound/soc/blackfin/bf5xx-sport.c:308:
+	sport->dummy_tx_desc->next_desc_addr = \

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2115: FILE: sound/soc/blackfin/bf5xx-sport.c:309:
+			(unsigned long)(sport->dummy_tx_desc+1);
 			                                    ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2127: FILE: sound/soc/blackfin/bf5xx-sport.c:321:
+	while ((get_dma_curr_desc_ptr(sport->dma_tx_chan) - \
[...]
+			(unsigned long)sport->dummy_tx_desc) {}

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2127: FILE: sound/soc/blackfin/bf5xx-sport.c:321:
+	while ((get_dma_curr_desc_ptr(sport->dma_tx_chan) - \

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2139: FILE: sound/soc/blackfin/bf5xx-sport.c:333:
+	unsigned flags;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2140: FILE: sound/soc/blackfin/bf5xx-sport.c:334:
+	unsigned flags;
+	pr_debug("%s: tx_run:%d, rx_run:%d\n", __func__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2141: FILE: sound/soc/blackfin/bf5xx-sport.c:335:
+	pr_debug("%s: tx_run:%d, rx_run:%d\n", __func__,
+			sport->tx_run, sport->rx_run);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2145: FILE: sound/soc/blackfin/bf5xx-sport.c:339:
+		BUG_ON(sport->dma_tx_desc == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sport->dma_tx_desc"
#2145: FILE: sound/soc/blackfin/bf5xx-sport.c:339:
+		BUG_ON(sport->dma_tx_desc == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2146: FILE: sound/soc/blackfin/bf5xx-sport.c:340:
+		BUG_ON(sport->curr_tx_desc != sport->dummy_tx_desc);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2149: FILE: sound/soc/blackfin/bf5xx-sport.c:343:
+		while ((get_dma_curr_desc_ptr(sport->dma_tx_chan) - \
[...]
+			(unsigned long)sport->dummy_tx_desc) {}

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2149: FILE: sound/soc/blackfin/bf5xx-sport.c:343:
+		while ((get_dma_curr_desc_ptr(sport->dma_tx_chan) - \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2152: FILE: sound/soc/blackfin/bf5xx-sport.c:346:
+		sport->dummy_tx_desc->next_desc_addr = \

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2157: FILE: sound/soc/blackfin/bf5xx-sport.c:351:
+	} else {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2202: FILE: sound/soc/blackfin/bf5xx-sport.c:396:
+int sport_config_rx_dma(struct sport_device *sport, void *buf,
+		int fragcount, size_t fragsize)

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2209: FILE: sound/soc/blackfin/bf5xx-sport.c:403:
+	pr_debug("%s buf:%p, frag:%d, fragsize:0x%lx\n", __func__, \

WARNING:TYPO_SPELLING: 'mutliply' may be misspelled - perhaps 'multiply'?
#2216: FILE: sound/soc/blackfin/bf5xx-sport.c:410:
+	 * denote fragecount as two numbers' mutliply and both of them
 	                                     ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2217: FILE: sound/soc/blackfin/bf5xx-sport.c:411:
+	 * are less than 64k.*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2233: FILE: sound/soc/blackfin/bf5xx-sport.c:427:
+	pr_debug("%s(x_count:0x%x, y_count:0x%x)\n", __func__,
+			x_count, y_count);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2235: FILE: sound/soc/blackfin/bf5xx-sport.c:429:
+	if (sport->dma_rx_desc) {
+		dma_free_coherent(NULL, sport->rx_desc_bytes, sport->dma_rx_desc, 0);
+	}

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2240: FILE: sound/soc/blackfin/bf5xx-sport.c:434:
+	sport->dma_rx_desc = dma_alloc_coherent(NULL, \

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2245: FILE: sound/soc/blackfin/bf5xx-sport.c:439:
+		printk(KERN_ERR "Failed to allocate memory for rx desc\n");

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2253: FILE: sound/soc/blackfin/bf5xx-sport.c:447:
+	cfg     = 0x7000 | DI_EN | compute_wdsize(sport->wdsize) | WNR | \

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2260: FILE: sound/soc/blackfin/bf5xx-sport.c:454:
+	setup_desc(sport->dma_rx_desc, buf, fragcount, fragsize,
+			cfg|DMAEN, x_count, y_count, sport->wdsize);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2260: FILE: sound/soc/blackfin/bf5xx-sport.c:454:
+			cfg|DMAEN, x_count, y_count, sport->wdsize);
 			   ^

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2266: FILE: sound/soc/blackfin/bf5xx-sport.c:460:
+int sport_config_tx_dma(struct sport_device *sport, void *buf, \

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2275: FILE: sound/soc/blackfin/bf5xx-sport.c:469:
+	pr_debug("%s buf:%p, fragcount:%d, fragsize:0x%lx\n",
+			__func__, buf, fragcount, fragsize);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2277: FILE: sound/soc/blackfin/bf5xx-sport.c:471:
+	x_count = fragsize/sport->wdsize;
 	                  ^

WARNING:TYPO_SPELLING: 'mutliply' may be misspelled - perhaps 'multiply'?
#2281: FILE: sound/soc/blackfin/bf5xx-sport.c:475:
+	 * denote fragecount as two numbers' mutliply and both of them
 	                                     ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2282: FILE: sound/soc/blackfin/bf5xx-sport.c:476:
+	 * are less than 64k.*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2298: FILE: sound/soc/blackfin/bf5xx-sport.c:492:
+	pr_debug("%s x_count:0x%x, y_count:0x%x\n", __func__,
+			x_count, y_count);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2300: FILE: sound/soc/blackfin/bf5xx-sport.c:494:
+
+

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2302: FILE: sound/soc/blackfin/bf5xx-sport.c:496:
+		dma_free_coherent(NULL, sport->tx_desc_bytes, \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2306: FILE: sound/soc/blackfin/bf5xx-sport.c:500:
+	sport->dma_tx_desc = dma_alloc_coherent(NULL, \

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2310: FILE: sound/soc/blackfin/bf5xx-sport.c:504:
+		printk(KERN_ERR "Failed to allocate memory for tx desc\n");

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2317: FILE: sound/soc/blackfin/bf5xx-sport.c:511:
+	cfg     = 0x7000 | DI_EN | compute_wdsize(sport->wdsize) | \

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2324: FILE: sound/soc/blackfin/bf5xx-sport.c:518:
+	setup_desc(sport->dma_tx_desc, buf, fragcount, fragsize,
+			cfg|DMAEN, x_count, y_count, sport->wdsize);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2324: FILE: sound/soc/blackfin/bf5xx-sport.c:518:
+			cfg|DMAEN, x_count, y_count, sport->wdsize);
 			   ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2331: FILE: sound/soc/blackfin/bf5xx-sport.c:525:
+ * the x_modify is set to 0 */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2335: FILE: sound/soc/blackfin/bf5xx-sport.c:529:
+	unsigned config;

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#2337: FILE: sound/soc/blackfin/bf5xx-sport.c:531:
+	pr_debug("%s entered\n", __func__);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2339: FILE: sound/soc/blackfin/bf5xx-sport.c:533:
+	desc = (struct dmasg*)l1_data_sram_alloc(2 * sizeof(*desc));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#2343: FILE: sound/soc/blackfin/bf5xx-sport.c:537:
+		dma_addr_t addr;
+		desc = dma_alloc_coherent(NULL, 2 * sizeof(*desc), &addr, 0);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!desc"
#2346: FILE: sound/soc/blackfin/bf5xx-sport.c:540:
+	if (desc == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2347: FILE: sound/soc/blackfin/bf5xx-sport.c:541:
+		printk(KERN_ERR "Failed to allocate memory for dummy rx desc\n");

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2355: FILE: sound/soc/blackfin/bf5xx-sport.c:549:
+	desc->x_count = sport->dummy_count/sport->wdsize;
 	                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2359: FILE: sound/soc/blackfin/bf5xx-sport.c:553:
+	memcpy(desc+1, desc, sizeof(*desc));
 	           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2360: FILE: sound/soc/blackfin/bf5xx-sport.c:554:
+	desc->next_desc_addr = (unsigned long)(desc+1);
 	                                           ^

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#2370: FILE: sound/soc/blackfin/bf5xx-sport.c:564:
+	pr_debug("%s entered\n", __func__);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2373: FILE: sound/soc/blackfin/bf5xx-sport.c:567:
+	desc = (struct dmasg*)l1_data_sram_alloc(2 * sizeof(*desc));

WARNING:LINE_SPACING: Missing a blank line after declarations
#2377: FILE: sound/soc/blackfin/bf5xx-sport.c:571:
+		dma_addr_t addr;
+		desc = dma_alloc_coherent(NULL, 2*sizeof(*desc), &addr, 0);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2377: FILE: sound/soc/blackfin/bf5xx-sport.c:571:
+		desc = dma_alloc_coherent(NULL, 2*sizeof(*desc), &addr, 0);
 		                                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2381: FILE: sound/soc/blackfin/bf5xx-sport.c:575:
+		printk(KERN_ERR "Failed to allocate memory for dummy tx desc\n");

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2386: FILE: sound/soc/blackfin/bf5xx-sport.c:580:
+	desc->start_addr = (unsigned long)sport->dummy_buf + \

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2390: FILE: sound/soc/blackfin/bf5xx-sport.c:584:
+	desc->x_count = sport->dummy_count/sport->wdsize;
 	                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2394: FILE: sound/soc/blackfin/bf5xx-sport.c:588:
+	memcpy(desc+1, desc, sizeof(*desc));
 	           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2395: FILE: sound/soc/blackfin/bf5xx-sport.c:589:
+	desc->next_desc_addr = (unsigned long)(desc+1);
 	                                           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2411: FILE: sound/soc/blackfin/bf5xx-sport.c:605:
+	unsigned long curr = get_dma_curr_addr(sport->dma_tx_chan);
+	return ((unsigned char *)curr - sport->tx_buf);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2438: FILE: sound/soc/blackfin/bf5xx-sport.c:632:
+static int sport_check_status(struct sport_device *sport,
+		unsigned int *sport_stat,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2447: FILE: sound/soc/blackfin/bf5xx-sport.c:641:
+		if (status & (TOVF|TUVF|ROVF|RUVF))
 		                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2447: FILE: sound/soc/blackfin/bf5xx-sport.c:641:
+		if (status & (TOVF|TUVF|ROVF|RUVF))
 		                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2447: FILE: sound/soc/blackfin/bf5xx-sport.c:641:
+		if (status & (TOVF|TUVF|ROVF|RUVF))
 		                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2448: FILE: sound/soc/blackfin/bf5xx-sport.c:642:
+			sport->regs->stat = (status & (TOVF|TUVF|ROVF|RUVF));
 			                                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2448: FILE: sound/soc/blackfin/bf5xx-sport.c:642:
+			sport->regs->stat = (status & (TOVF|TUVF|ROVF|RUVF));
 			                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2448: FILE: sound/soc/blackfin/bf5xx-sport.c:642:
+			sport->regs->stat = (status & (TOVF|TUVF|ROVF|RUVF));
 			                                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2456: FILE: sound/soc/blackfin/bf5xx-sport.c:650:
+		if (status & (DMA_DONE|DMA_ERR))
 		                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2465: FILE: sound/soc/blackfin/bf5xx-sport.c:659:
+		if (status & (DMA_DONE|DMA_ERR))
 		                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2479: FILE: sound/soc/blackfin/bf5xx-sport.c:673:
+	ret = snprintf(buf, len,
+			"sts: 0x%04x\n"

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#2505: FILE: sound/soc/blackfin/bf5xx-sport.c:699:
+	pr_debug("%s enter\n", __func__);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2507: FILE: sound/soc/blackfin/bf5xx-sport.c:701:
+	if (!(rx_stat & DMA_DONE)) {
+		printk(KERN_ERR "rx dma is already stopped\n");
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2508: FILE: sound/soc/blackfin/bf5xx-sport.c:702:
+		printk(KERN_ERR "rx dma is already stopped\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#2522: FILE: sound/soc/blackfin/bf5xx-sport.c:716:
+	struct sport_device *sport = dev_id;
+	pr_debug("%s enter\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#2522: FILE: sound/soc/blackfin/bf5xx-sport.c:716:
+	pr_debug("%s enter\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2525: FILE: sound/soc/blackfin/bf5xx-sport.c:719:
+		printk(KERN_ERR "tx dma is already stopped\n");

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#2541: FILE: sound/soc/blackfin/bf5xx-sport.c:735:
+	pr_debug("%s\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2543: FILE: sound/soc/blackfin/bf5xx-sport.c:737:
+		printk(KERN_ERR "error checking status ??");

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2547: FILE: sound/soc/blackfin/bf5xx-sport.c:741:
+	if (status & (TOVF|TUVF|ROVF|RUVF)) {
 	                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2547: FILE: sound/soc/blackfin/bf5xx-sport.c:741:
+	if (status & (TOVF|TUVF|ROVF|RUVF)) {
 	                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2547: FILE: sound/soc/blackfin/bf5xx-sport.c:741:
+	if (status & (TOVF|TUVF|ROVF|RUVF)) {
 	                            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2548: FILE: sound/soc/blackfin/bf5xx-sport.c:742:
+		printk(KERN_INFO  "sport status error:%s%s%s%s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2549: FILE: sound/soc/blackfin/bf5xx-sport.c:743:
+		printk(KERN_INFO  "sport status error:%s%s%s%s\n",
+				status & TOVF ? " TOVF" : "",

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2570: FILE: sound/soc/blackfin/bf5xx-sport.c:764:
+	if (status & (TOVF|TUVF|ROVF|RUVF))
 	                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2570: FILE: sound/soc/blackfin/bf5xx-sport.c:764:
+	if (status & (TOVF|TUVF|ROVF|RUVF))
 	                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2570: FILE: sound/soc/blackfin/bf5xx-sport.c:764:
+	if (status & (TOVF|TUVF|ROVF|RUVF))
 	                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2571: FILE: sound/soc/blackfin/bf5xx-sport.c:765:
+		sport->regs->stat = (status & (TOVF|TUVF|ROVF|RUVF));
 		                                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2571: FILE: sound/soc/blackfin/bf5xx-sport.c:765:
+		sport->regs->stat = (status & (TOVF|TUVF|ROVF|RUVF));
 		                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2571: FILE: sound/soc/blackfin/bf5xx-sport.c:765:
+		sport->regs->stat = (status & (TOVF|TUVF|ROVF|RUVF));
 		                                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2581: FILE: sound/soc/blackfin/bf5xx-sport.c:775:
+int sport_set_rx_callback(struct sport_device *sport,
+		       void (*rx_callback)(void *), void *rx_data)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2583: FILE: sound/soc/blackfin/bf5xx-sport.c:777:
+	BUG_ON(rx_callback == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rx_callback"
#2583: FILE: sound/soc/blackfin/bf5xx-sport.c:777:
+	BUG_ON(rx_callback == NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2592: FILE: sound/soc/blackfin/bf5xx-sport.c:786:
+int sport_set_tx_callback(struct sport_device *sport,
+		void (*tx_callback)(void *), void *tx_data)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2594: FILE: sound/soc/blackfin/bf5xx-sport.c:788:
+	BUG_ON(tx_callback == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tx_callback"
#2594: FILE: sound/soc/blackfin/bf5xx-sport.c:788:
+	BUG_ON(tx_callback == NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2603: FILE: sound/soc/blackfin/bf5xx-sport.c:797:
+int sport_set_err_callback(struct sport_device *sport,
+		void (*err_callback)(void *), void *err_data)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2605: FILE: sound/soc/blackfin/bf5xx-sport.c:799:
+	BUG_ON(err_callback == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!err_callback"
#2605: FILE: sound/soc/blackfin/bf5xx-sport.c:799:
+	BUG_ON(err_callback == NULL);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2613: FILE: sound/soc/blackfin/bf5xx-sport.c:807:
+struct sport_device *sport_init(struct sport_param *param, unsigned wdsize,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2614: FILE: sound/soc/blackfin/bf5xx-sport.c:808:
+struct sport_device *sport_init(struct sport_param *param, unsigned wdsize,
+		unsigned dummy_count, void *private_data)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2614: FILE: sound/soc/blackfin/bf5xx-sport.c:808:
+		unsigned dummy_count, void *private_data)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2618: FILE: sound/soc/blackfin/bf5xx-sport.c:812:
+	struct sport_device *sport;
+	pr_debug("%s enter\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#2618: FILE: sound/soc/blackfin/bf5xx-sport.c:812:
+	pr_debug("%s enter\n", __func__);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2619: FILE: sound/soc/blackfin/bf5xx-sport.c:813:
+	BUG_ON(param == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!param"
#2619: FILE: sound/soc/blackfin/bf5xx-sport.c:813:
+	BUG_ON(param == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2620: FILE: sound/soc/blackfin/bf5xx-sport.c:814:
+	BUG_ON(wdsize == 0 || dummy_count == 0);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*sport)...) over kmalloc(sizeof(struct sport_device)...)
#2621: FILE: sound/soc/blackfin/bf5xx-sport.c:815:
+	sport = kmalloc(sizeof(struct sport_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2623: FILE: sound/soc/blackfin/bf5xx-sport.c:817:
+		printk(KERN_ERR "Failed to allocate for sport device\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2635: FILE: sound/soc/blackfin/bf5xx-sport.c:829:
+		printk(KERN_ERR "Failed to request RX dma %d\n", \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2635: FILE: sound/soc/blackfin/bf5xx-sport.c:829:
+		printk(KERN_ERR "Failed to request RX dma %d\n", \

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2640: FILE: sound/soc/blackfin/bf5xx-sport.c:834:
+		printk(KERN_ERR "Failed to request RX irq %d\n", \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2640: FILE: sound/soc/blackfin/bf5xx-sport.c:834:
+		printk(KERN_ERR "Failed to request RX irq %d\n", \

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2646: FILE: sound/soc/blackfin/bf5xx-sport.c:840:
+		printk(KERN_ERR "Failed to request TX dma %d\n", \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2646: FILE: sound/soc/blackfin/bf5xx-sport.c:840:
+		printk(KERN_ERR "Failed to request TX dma %d\n", \

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2652: FILE: sound/soc/blackfin/bf5xx-sport.c:846:
+		printk(KERN_ERR "Failed to request TX irq %d\n", \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2652: FILE: sound/soc/blackfin/bf5xx-sport.c:846:
+		printk(KERN_ERR "Failed to request TX irq %d\n", \

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2659: FILE: sound/soc/blackfin/bf5xx-sport.c:853:
+		printk(KERN_ERR "Failed to request err irq:%d\n", \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2659: FILE: sound/soc/blackfin/bf5xx-sport.c:853:
+		printk(KERN_ERR "Failed to request err irq:%d\n", \

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2664: FILE: sound/soc/blackfin/bf5xx-sport.c:858:
+	printk(KERN_ERR "dma rx:%d tx:%d, err irq:%d, regs:%p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2665: FILE: sound/soc/blackfin/bf5xx-sport.c:859:
+	printk(KERN_ERR "dma rx:%d tx:%d, err irq:%d, regs:%p\n",
+			sport->dma_rx_chan, sport->dma_tx_chan,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sport->dummy_buf"
#2676: FILE: sound/soc/blackfin/bf5xx-sport.c:870:
+	if (sport->dummy_buf == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2677: FILE: sound/soc/blackfin/bf5xx-sport.c:871:
+		printk(KERN_ERR "Failed to allocate dummy buffer\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#2677: FILE: sound/soc/blackfin/bf5xx-sport.c:871:
+	if (sport->dummy_buf == NULL) {
+		printk(KERN_ERR "Failed to allocate dummy buffer\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2684: FILE: sound/soc/blackfin/bf5xx-sport.c:878:
+		printk(KERN_ERR "Failed to config rx dummy ring\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2689: FILE: sound/soc/blackfin/bf5xx-sport.c:883:
+		printk(KERN_ERR "Failed to config tx dummy ring\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sport"
#2708: FILE: sound/soc/blackfin/bf5xx-sport.c:902:
+	if (sport == NULL)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2722: FILE: sound/soc/blackfin/bf5xx-sport.c:916:
+	dma_free_coherent(NULL, 2*sizeof(struct dmasg), sport->dummy_rx_desc, 0);
 	                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2723: FILE: sound/soc/blackfin/bf5xx-sport.c:917:
+	dma_free_coherent(NULL, 2*sizeof(struct dmasg), sport->dummy_tx_desc, 0);
 	                         ^

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2735: FILE: sound/soc/blackfin/bf5xx-sport.c:929:
+/*
+* It is only used to send several bytes when dma is not enabled

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2736: FILE: sound/soc/blackfin/bf5xx-sport.c:930:
+* It is only used to send several bytes when dma is not enabled
+ * sport controller is configured but not enabled.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2737: FILE: sound/soc/blackfin/bf5xx-sport.c:931:
+ * Multichannel cannot works with pio mode */

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2739: FILE: sound/soc/blackfin/bf5xx-sport.c:933:
+int sport_send_and_recv(struct sport_device *sport, u8 *out_data, \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2747: FILE: sound/soc/blackfin/bf5xx-sport.c:941:
+	pr_debug("%s enter, out_data:%p, in_data:%p len:%d\n", \

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2754: FILE: sound/soc/blackfin/bf5xx-sport.c:948:
+	flush_dcache_range((unsigned)out_data, (unsigned)(out_data + len));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2754: FILE: sound/soc/blackfin/bf5xx-sport.c:948:
+	flush_dcache_range((unsigned)out_data, (unsigned)(out_data + len));

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2759: FILE: sound/soc/blackfin/bf5xx-sport.c:953:
+	set_dma_x_count(sport->dma_tx_chan, len/2);
 	                                       ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "in_data"
#2764: FILE: sound/soc/blackfin/bf5xx-sport.c:958:
+	if (in_data != NULL) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2765: FILE: sound/soc/blackfin/bf5xx-sport.c:959:
+		invalidate_dcache_range((unsigned)in_data, \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2765: FILE: sound/soc/blackfin/bf5xx-sport.c:959:
+		invalidate_dcache_range((unsigned)in_data, \

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2766: FILE: sound/soc/blackfin/bf5xx-sport.c:960:
+				(unsigned)(in_data + len));

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2770: FILE: sound/soc/blackfin/bf5xx-sport.c:964:
+		set_dma_x_count(sport->dma_rx_chan, len/2);
 		                                       ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2795: FILE: sound/soc/blackfin/bf5xx-sport.c:989:
+		status = *(volatile unsigned short*)&sport->regs->stat;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#2795: FILE: sound/soc/blackfin/bf5xx-sport.c:989:
+		status = *(volatile unsigned short*)&sport->regs->stat;

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#2800: FILE: sound/soc/blackfin/bf5xx-sport.c:994:
+	udelay(20);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "in_data"
#2810: FILE: sound/soc/blackfin/bf5xx-sport.c:1004:
+	if (in_data != NULL) {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2831: FILE: sound/soc/blackfin/bf5xx-sport.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2856: FILE: sound/soc/blackfin/bf5xx-sport.h:26:
+ * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2859: FILE: sound/soc/blackfin/bf5xx-sport.h:29:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2969: FILE: sound/soc/blackfin/bf5xx-sport.h:139:
+struct sport_device *sport_init(struct sport_param *param, unsigned wdsize,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2970: FILE: sound/soc/blackfin/bf5xx-sport.h:140:
+struct sport_device *sport_init(struct sport_param *param, unsigned wdsize,
+		unsigned dummy_count, void *private_data);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2970: FILE: sound/soc/blackfin/bf5xx-sport.h:140:
+		unsigned dummy_count, void *private_data);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2977: FILE: sound/soc/blackfin/bf5xx-sport.h:147:
+ *  NOT / 8 ! all channels are enabled by default */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2979: FILE: sound/soc/blackfin/bf5xx-sport.h:149:
+int sport_set_multichannel(struct sport_device *sport, int tdm_count,
+		u32 mask, int packed);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2982: FILE: sound/soc/blackfin/bf5xx-sport.h:152:
+int sport_config_rx(struct sport_device *sport,
+		unsigned int rcr1, unsigned int rcr2,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2986: FILE: sound/soc/blackfin/bf5xx-sport.h:156:
+int sport_config_tx(struct sport_device *sport,
+		unsigned int tcr1, unsigned int tcr2,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2996: FILE: sound/soc/blackfin/bf5xx-sport.h:166:
+int sport_config_rx_dma(struct sport_device *sport, void *buf,
+		int fragcount, size_t fragsize_bytes);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2999: FILE: sound/soc/blackfin/bf5xx-sport.h:169:
+int sport_config_tx_dma(struct sport_device *sport, void *buf,
+		int fragcount, size_t fragsize_bytes);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3014: FILE: sound/soc/blackfin/bf5xx-sport.h:184:
+int sport_set_rx_callback(struct sport_device *sport,
+		       void (*rx_callback)(void *), void *rx_data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3016: FILE: sound/soc/blackfin/bf5xx-sport.h:186:
+int sport_set_tx_callback(struct sport_device *sport,
+		       void (*tx_callback)(void *), void *tx_data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3018: FILE: sound/soc/blackfin/bf5xx-sport.h:188:
+int sport_set_err_callback(struct sport_device *sport,
+		       void (*err_callback)(void *), void *err_data);

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#3020: FILE: sound/soc/blackfin/bf5xx-sport.h:190:
+int sport_send_and_recv(struct sport_device *sport, u8 *out_data, \

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3029: FILE: sound/soc/blackfin/bf5xx-ssm2602.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#3030: FILE: sound/soc/blackfin/bf5xx-ssm2602.c:2:
+ * File:         sound/soc/blackfin/bf5xx-ssm2602.c

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#3036: FILE: sound/soc/blackfin/bf5xx-ssm2602.c:8:
+ * Rev:          $Id: bf5xx-ssm2602.c 4104 2008-06-06 06:51:48Z cliff $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#3056: FILE: sound/soc/blackfin/bf5xx-ssm2602.c:28:
+ * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

WARNING:INCLUDE_LINUX: Use #include <linux/gpio.h> instead of <asm/gpio.h>
#3071: FILE: sound/soc/blackfin/bf5xx-ssm2602.c:43:
+#include <asm/gpio.h>

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#3085: FILE: sound/soc/blackfin/bf5xx-ssm2602.c:57:
+	pr_debug("%s enter\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3091: FILE: sound/soc/blackfin/bf5xx-ssm2602.c:63:
+static int bf5xx_ssm2602_hw_params(struct snd_pcm_substream *substream,
+	struct snd_pcm_hw_params *params)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3099: FILE: sound/soc/blackfin/bf5xx-ssm2602.c:71:
+	pr_debug("%s rate %d format %x\n", __func__, params_rate(params),
+		params_format(params));

WARNING:CONST_STRUCT: struct snd_soc_ops should normally be const
#3143: FILE: sound/soc/blackfin/bf5xx-ssm2602.c:115:
+static struct snd_soc_ops bf5xx_ssm2602_ops = {

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#3150: FILE: sound/soc/blackfin/bf5xx-ssm2602.c:122:
+	pr_debug("%s enter\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#3195: FILE: sound/soc/blackfin/bf5xx-ssm2602.c:167:
+	pr_debug("%s enter\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#3212: FILE: sound/soc/blackfin/bf5xx-ssm2602.c:184:
+	pr_debug("%s enter\n", __func__);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000234911.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 20 errors, 218 warnings, 182 checks, 3063 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000234911.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
