ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#44: FILE: Makefile:0:
VERSION = 2

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#49: FILE: Makefile:1:
+EXTRAVERSION = inores
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#69: FILE: fs/ext4/bitmap.c:39:
+read_inode_bitmap(struct super_block * sb, unsigned long block_group)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: fs/ext4/bitmap.c:41:
+ struct ext4_group_desc *desc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: fs/ext4/bitmap.c:42:
+ struct buffer_head *bh = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: fs/ext4/bitmap.c:44:
+ desc = ext4_get_group_desc(sb, block_group, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: fs/ext4/bitmap.c:45:
+ if (!desc)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#75: FILE: fs/ext4/bitmap.c:45:
+ if (!desc)
+ goto error_out;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: fs/ext4/bitmap.c:46:
+ goto error_out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: fs/ext4/bitmap.c:48:
+ bh = sb_bread(sb, ext4_inode_bitmap(sb, desc));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: fs/ext4/bitmap.c:49:
+ if (!bh)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#79: FILE: fs/ext4/bitmap.c:49:
+ if (!bh)
+ ext4_error(sb, "read_inode_bitmap",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: fs/ext4/bitmap.c:50:
+ ext4_error(sb, "read_inode_bitmap",$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#81: FILE: fs/ext4/bitmap.c:51:
+ ext4_error(sb, "read_inode_bitmap",
+ "Cannot read inode bitmap - "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: fs/ext4/bitmap.c:51:
+ "Cannot read inode bitmap - "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: fs/ext4/bitmap.c:52:
+ "block_group = %lu, inode_bitmap = %llu",$

WARNING:SPLIT_STRING: quoted string split across lines
#82: FILE: fs/ext4/bitmap.c:52:
+ "Cannot read inode bitmap - "
+ "block_group = %lu, inode_bitmap = %llu",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: fs/ext4/bitmap.c:53:
+ block_group, ext4_inode_bitmap(sb, desc));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: fs/ext4/bitmap.c:55:
+ return bh;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: fs/ext4/ialloc.c:262:
+ if (test_opt(sb, INORES) &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#130: FILE: fs/ext4/ialloc.c:262:
+ if (test_opt(sb, INORES) &&
[...]
+ printk(KERN_DEBUG "no enough reserved inodes in group %d\n", group);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#131: FILE: fs/ext4/ialloc.c:263:
+     (ext4_unreserved_inodes(sb, group) < $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: fs/ext4/ialloc.c:263:
+     (ext4_unreserved_inodes(sb, group) < $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: fs/ext4/ialloc.c:264:
+ EXT4_INIT_RESERVE_INODES)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: fs/ext4/ialloc.c:265:
+ printk(KERN_DEBUG "no enough reserved inodes in group %d\n", group);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#133: FILE: fs/ext4/ialloc.c:265:
+ printk(KERN_DEBUG "no enough reserved inodes in group %d\n", group);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: fs/ext4/ialloc.c:266:
+ continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: fs/ext4/ialloc.c:267:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: fs/ext4/ialloc.c:303:
+ if (test_opt(sb, INORES) &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#144: FILE: fs/ext4/ialloc.c:303:
+ if (test_opt(sb, INORES) &&
[...]
+ printk(KERN_DEBUG "no enough reserved inodes in group %d\n", group);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#145: FILE: fs/ext4/ialloc.c:304:
+     (ext4_unreserved_inodes(sb, group) < $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: fs/ext4/ialloc.c:304:
+     (ext4_unreserved_inodes(sb, group) < $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: fs/ext4/ialloc.c:305:
+ EXT4_INIT_RESERVE_INODES)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: fs/ext4/ialloc.c:306:
+ printk(KERN_DEBUG "no enough reserved inodes in group %d\n", group);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#147: FILE: fs/ext4/ialloc.c:306:
+ printk(KERN_DEBUG "no enough reserved inodes in group %d\n", group);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: fs/ext4/ialloc.c:307:
+ continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: fs/ext4/ialloc.c:308:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: fs/ext4/ialloc.c:322:
+ printk(KERN_DEBUG "reach fallback, disable INORES\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#158: FILE: fs/ext4/ialloc.c:322:
+ printk(KERN_DEBUG "reach fallback, disable INORES\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: fs/ext4/ialloc.c:323:
+ return -1; /* for test */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: fs/ext4/ialloc.c:324:
+ clear_opt(sbi->s_mount_opt, INORES);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#170: FILE: fs/ext4/ialloc.c:405:
+static int ext4_inores_newdir_ino(handle_t * handle,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#171: FILE: fs/ext4/ialloc.c:406:
+   struct inode * dir, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#171: FILE: fs/ext4/ialloc.c:406:
+static int ext4_inores_newdir_ino(handle_t * handle,
+   struct inode * dir, 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: fs/ext4/ialloc.c:406:
+   struct inode * dir, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#171: FILE: fs/ext4/ialloc.c:406:
+   struct inode * dir, 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: fs/ext4/ialloc.c:407:
+   time_t ctime,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: fs/ext4/ialloc.c:408:
+   unsigned long * ino)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#173: FILE: fs/ext4/ialloc.c:408:
+   unsigned long * ino)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: fs/ext4/ialloc.c:410:
+ struct super_block * sb;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#175: FILE: fs/ext4/ialloc.c:410:
+ struct super_block * sb;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: fs/ext4/ialloc.c:411:
+ struct ext4_sb_info * sbi;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#176: FILE: fs/ext4/ialloc.c:411:
+ struct ext4_sb_info * sbi;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: fs/ext4/ialloc.c:412:
+ int group;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: fs/ext4/ialloc.c:413:
+ struct buffer_head * bitmap_bh = NULL, * bh2;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#178: FILE: fs/ext4/ialloc.c:413:
+ struct buffer_head * bitmap_bh = NULL, * bh2;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#178: FILE: fs/ext4/ialloc.c:413:
+ struct buffer_head * bitmap_bh = NULL, * bh2;
                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: fs/ext4/ialloc.c:414:
+ unsigned long lastres_ino, start_ino, end_ino;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: fs/ext4/ialloc.c:415:
+ struct ext4_magic_inode * link_minode, * lastres_minode;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#180: FILE: fs/ext4/ialloc.c:415:
+ struct ext4_magic_inode * link_minode, * lastres_minode;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#180: FILE: fs/ext4/ialloc.c:415:
+ struct ext4_magic_inode * link_minode, * lastres_minode;
                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: fs/ext4/ialloc.c:416:
+ struct ext4_iloc link_iloc, lastres_iloc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: fs/ext4/ialloc.c:417:
+ struct ext4_group_desc * gdp = NULL;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#182: FILE: fs/ext4/ialloc.c:417:
+ struct ext4_group_desc * gdp = NULL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: fs/ext4/ialloc.c:418:
+ int itable_offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: fs/ext4/ialloc.c:419:
+ int ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: fs/ext4/ialloc.c:421:
+ sb = dir->i_sb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: fs/ext4/ialloc.c:422:
+ sbi = EXT4_SB(sb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: fs/ext4/ialloc.c:425:
+ group = find_group_orlov(sb, dir);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#191: FILE: fs/ext4/ialloc.c:426:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: fs/ext4/ialloc.c:426:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: fs/ext4/ialloc.c:427:
+ if (group == -1) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#192: FILE: fs/ext4/ialloc.c:427:
+ if (group == -1) {
+ printk("no space in find_group_orlove.\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: fs/ext4/ialloc.c:428:
+ printk("no space in find_group_orlove.\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#193: FILE: fs/ext4/ialloc.c:428:
+ printk("no space in find_group_orlove.\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: fs/ext4/ialloc.c:429:
+ return -ENOSPC;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: fs/ext4/ialloc.c:430:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: fs/ext4/ialloc.c:431:
+ if (!test_opt (sb, INORES)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#196: FILE: fs/ext4/ialloc.c:431:
+ if (!test_opt (sb, INORES)) {
+ printk(KERN_DEBUG "INORES is not set, return 0.\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#196: FILE: fs/ext4/ialloc.c:431:
+ if (!test_opt (sb, INORES)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: fs/ext4/ialloc.c:432:
+ printk(KERN_DEBUG "INORES is not set, return 0.\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#197: FILE: fs/ext4/ialloc.c:432:
+ printk(KERN_DEBUG "INORES is not set, return 0.\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: fs/ext4/ialloc.c:433:
+ * ino = 0;$

ERROR:SPACING: space prohibited after that '*' (ctx:ExW)
#198: FILE: fs/ext4/ialloc.c:433:
+ * ino = 0;
  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: fs/ext4/ialloc.c:434:
+ return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: fs/ext4/ialloc.c:435:
+ }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: fs/ext4/ialloc.c:436:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: fs/ext4/ialloc.c:436:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#202: FILE: fs/ext4/ialloc.c:437:
+ /* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#203: FILE: fs/ext4/ialloc.c:438:
+ * the corresponded block is already loaded into memory in $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#203: FILE: fs/ext4/ialloc.c:438:
+ /* 
+ * the corresponded block is already loaded into memory in 

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#204: FILE: fs/ext4/ialloc.c:439:
+ * find_group_orlov(), this lock will not hurt performance $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: fs/ext4/ialloc.c:442:
+ spin_lock(sb_bgl_lock(sbi, group));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: fs/ext4/ialloc.c:443:
+ if (ext4_unreserved_inodes(sb, group) < EXT4_INIT_RESERVE_INODES) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#208: FILE: fs/ext4/ialloc.c:443:
+ if (ext4_unreserved_inodes(sb, group) < EXT4_INIT_RESERVE_INODES) {
+ spin_unlock(sb_bgl_lock(sbi, group));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: fs/ext4/ialloc.c:444:
+ spin_unlock(sb_bgl_lock(sbi, group));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: fs/ext4/ialloc.c:445:
+ goto find_group_again;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: fs/ext4/ialloc.c:446:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: fs/ext4/ialloc.c:448:
+ lastres_ino = ext4_get_group_lastres_ino(sb, group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: fs/ext4/ialloc.c:449:
+ ret = ext4_get_magic_inode_loc(sb, lastres_ino, &lastres_iloc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: fs/ext4/ialloc.c:450:
+ if (ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#215: FILE: fs/ext4/ialloc.c:450:
+ if (ret) {
+ spin_unlock(sb_bgl_lock(sbi, group));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: fs/ext4/ialloc.c:451:
+ spin_unlock(sb_bgl_lock(sbi, group));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: fs/ext4/ialloc.c:452:
+ return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: fs/ext4/ialloc.c:453:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: fs/ext4/ialloc.c:454:
+ lastres_minode = (struct ext4_magic_inode *)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: fs/ext4/ialloc.c:455:
+ ((char *)lastres_iloc.bh->b_data + lastres_iloc.offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: fs/ext4/ialloc.c:456:
+ if(!ext4_magic_inode(lastres_minode, EXT4_MINODE_TYPE_LASTRES)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#221: FILE: fs/ext4/ialloc.c:456:
+ if(!ext4_magic_inode(lastres_minode, EXT4_MINODE_TYPE_LASTRES)) {
+ spin_unlock(sb_bgl_lock(sbi, group));

ERROR:SPACING: space required before the open parenthesis '('
#221: FILE: fs/ext4/ialloc.c:456:
+ if(!ext4_magic_inode(lastres_minode, EXT4_MINODE_TYPE_LASTRES)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: fs/ext4/ialloc.c:457:
+ spin_unlock(sb_bgl_lock(sbi, group));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: fs/ext4/ialloc.c:458:
+ brelse(lastres_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: fs/ext4/ialloc.c:459:
+ return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: fs/ext4/ialloc.c:460:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: fs/ext4/ialloc.c:461:
+ BUFFER_TRACE (lastres_iloc.bh, "call ext4_journal_get_write_access");$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#226: FILE: fs/ext4/ialloc.c:461:
+ BUFFER_TRACE (lastres_iloc.bh, "call ext4_journal_get_write_access");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: fs/ext4/ialloc.c:462:
+ ret = ext4_journal_get_write_access(handle, lastres_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: fs/ext4/ialloc.c:463:
+ if(ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#228: FILE: fs/ext4/ialloc.c:463:
+ if(ret) {
+ spin_unlock(sb_bgl_lock(sbi, group));

ERROR:SPACING: space required before the open parenthesis '('
#228: FILE: fs/ext4/ialloc.c:463:
+ if(ret) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: fs/ext4/ialloc.c:464:
+ spin_unlock(sb_bgl_lock(sbi, group));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: fs/ext4/ialloc.c:465:
+ brelse(lastres_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: fs/ext4/ialloc.c:466:
+ return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: fs/ext4/ialloc.c:467:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: fs/ext4/ialloc.c:468:
+ start_ino = le32_to_cpu(lastres_minode->mi_lastres_ino) + 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: fs/ext4/ialloc.c:469:
+ printk("start_ino: %lu, in group %d\n", start_ino, group);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#234: FILE: fs/ext4/ialloc.c:469:
+ printk("start_ino: %lu, in group %d\n", start_ino, group);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#235: FILE: fs/ext4/ialloc.c:470:
+ lastres_minode->mi_lastres_ino = cpu_to_le32(start_ino + $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: fs/ext4/ialloc.c:470:
+ lastres_minode->mi_lastres_ino = cpu_to_le32(start_ino + $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: fs/ext4/ialloc.c:471:
+ EXT4_INIT_RESERVE_INODES - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: fs/ext4/ialloc.c:472:
+ BUFFER_TRACE(lastres_iloc.bh, "call ext4_journal_dirty_metadata");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: fs/ext4/ialloc.c:473:
+ ret = ext4_journal_dirty_metadata(handle, lastres_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: fs/ext4/ialloc.c:474:
+ if(ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#239: FILE: fs/ext4/ialloc.c:474:
+ if(ret) {
+ spin_unlock(sb_bgl_lock(sbi, group));

ERROR:SPACING: space required before the open parenthesis '('
#239: FILE: fs/ext4/ialloc.c:474:
+ if(ret) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: fs/ext4/ialloc.c:475:
+ spin_unlock(sb_bgl_lock(sbi, group));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: fs/ext4/ialloc.c:476:
+ brelse(lastres_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: fs/ext4/ialloc.c:477:
+ return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: fs/ext4/ialloc.c:478:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: fs/ext4/ialloc.c:479:
+ brelse(lastres_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: fs/ext4/ialloc.c:480:
+ end_ino = start_ino + EXT4_INIT_RESERVE_INODES - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: fs/ext4/ialloc.c:482:
+ ret = ext4_get_magic_inode_loc(sb, end_ino, &link_iloc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: fs/ext4/ialloc.c:483:
+ if (ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#248: FILE: fs/ext4/ialloc.c:483:
+ if (ret) {
+ spin_unlock(sb_bgl_lock(sbi, group));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: fs/ext4/ialloc.c:484:
+ spin_unlock(sb_bgl_lock(sbi, group));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: fs/ext4/ialloc.c:485:
+ return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: fs/ext4/ialloc.c:486:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: fs/ext4/ialloc.c:487:
+ link_minode = (struct ext4_magic_inode *)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: fs/ext4/ialloc.c:488:
+ ((char *)link_iloc.bh->b_data + link_iloc.offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: fs/ext4/ialloc.c:490:
+ bitmap_bh = read_inode_bitmap(sb, group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: fs/ext4/ialloc.c:491:
+ if (!bitmap_bh) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#256: FILE: fs/ext4/ialloc.c:491:
+ if (!bitmap_bh) {
+ spin_unlock(sb_bgl_lock(sbi, group));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: fs/ext4/ialloc.c:492:
+ spin_unlock(sb_bgl_lock(sbi, group));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: fs/ext4/ialloc.c:493:
+ brelse(link_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: fs/ext4/ialloc.c:494:
+ return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: fs/ext4/ialloc.c:495:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: fs/ext4/ialloc.c:497:
+ itable_offset = (end_ino - 1) % EXT4_INODES_PER_GROUP(sb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: fs/ext4/ialloc.c:498:
+ printk(KERN_DEBUG "itable_offset of group %d is: %d\n", group,$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#263: FILE: fs/ext4/ialloc.c:498:
+ printk(KERN_DEBUG "itable_offset of group %d is: %d\n", group,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#265: FILE: fs/ext4/ialloc.c:499:
+ printk(KERN_DEBUG "itable_offset of group %d is: %d\n", group,
+ if (ext4_test_bit(itable_offset, bitmap_bh->b_data)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: fs/ext4/ialloc.c:499:
+ if (ext4_test_bit(itable_offset, bitmap_bh->b_data)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#265: FILE: fs/ext4/ialloc.c:499:
+ if (ext4_test_bit(itable_offset, bitmap_bh->b_data)) {
+ if(!ext4_magic_inode(link_minode, EXT4_MINODE_TYPE_LINK)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: fs/ext4/ialloc.c:500:
+ if(!ext4_magic_inode(link_minode, EXT4_MINODE_TYPE_LINK)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#266: FILE: fs/ext4/ialloc.c:500:
+ if(!ext4_magic_inode(link_minode, EXT4_MINODE_TYPE_LINK)) {
+ printk(KERN_INFO "Allocated inode %lu is not a "

ERROR:SPACING: space required before the open parenthesis '('
#266: FILE: fs/ext4/ialloc.c:500:
+ if(!ext4_magic_inode(link_minode, EXT4_MINODE_TYPE_LINK)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: fs/ext4/ialloc.c:501:
+ printk(KERN_INFO "Allocated inode %lu is not a "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#267: FILE: fs/ext4/ialloc.c:501:
+ printk(KERN_INFO "Allocated inode %lu is not a "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: fs/ext4/ialloc.c:502:
+ "EXT4_MINODE_TYPE_LINK magic inode, "$

WARNING:SPLIT_STRING: quoted string split across lines
#268: FILE: fs/ext4/ialloc.c:502:
+ printk(KERN_INFO "Allocated inode %lu is not a "
+ "EXT4_MINODE_TYPE_LINK magic inode, "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: fs/ext4/ialloc.c:503:
+ "Disable directory inode reservation "$

WARNING:SPLIT_STRING: quoted string split across lines
#269: FILE: fs/ext4/ialloc.c:503:
+ "EXT4_MINODE_TYPE_LINK magic inode, "
+ "Disable directory inode reservation "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: fs/ext4/ialloc.c:504:
+ "now.\n", end_ino);$

WARNING:SPLIT_STRING: quoted string split across lines
#270: FILE: fs/ext4/ialloc.c:504:
+ "Disable directory inode reservation "
+ "now.\n", end_ino);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: fs/ext4/ialloc.c:505:
+ spin_unlock(sb_bgl_lock(sbi, group));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: fs/ext4/ialloc.c:506:
+ clear_opt(sbi->s_mount_opt, INORES);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: fs/ext4/ialloc.c:507:
+ brelse(bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: fs/ext4/ialloc.c:508:
+ brelse(link_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: fs/ext4/ialloc.c:509:
+ * ino = 0;$

ERROR:SPACING: space prohibited after that '*' (ctx:ExW)
#275: FILE: fs/ext4/ialloc.c:509:
+ * ino = 0;
  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: fs/ext4/ialloc.c:510:
+ return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: fs/ext4/ialloc.c:511:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: fs/ext4/ialloc.c:512:
+ if(le32_to_cpu(link_minode->mi_parent_ino) != start_ino) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#278: FILE: fs/ext4/ialloc.c:512:
+ if(le32_to_cpu(link_minode->mi_parent_ino) != start_ino) {
+ printk(KERN_INFO "EXT4_MINODE_TYPE_LINK magic inode "

ERROR:SPACING: space required before the open parenthesis '('
#278: FILE: fs/ext4/ialloc.c:512:
+ if(le32_to_cpu(link_minode->mi_parent_ino) != start_ino) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: fs/ext4/ialloc.c:513:
+ printk(KERN_INFO "EXT4_MINODE_TYPE_LINK magic inode "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#279: FILE: fs/ext4/ialloc.c:513:
+ printk(KERN_INFO "EXT4_MINODE_TYPE_LINK magic inode "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: fs/ext4/ialloc.c:514:
+ "%lu is allocated already and belongs to "$

WARNING:SPLIT_STRING: quoted string split across lines
#280: FILE: fs/ext4/ialloc.c:514:
+ printk(KERN_INFO "EXT4_MINODE_TYPE_LINK magic inode "
+ "%lu is allocated already and belongs to "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: fs/ext4/ialloc.c:515:
+ "a different directory inode %lu. Use this "$

WARNING:SPLIT_STRING: quoted string split across lines
#281: FILE: fs/ext4/ialloc.c:515:
+ "%lu is allocated already and belongs to "
+ "a different directory inode %lu. Use this "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: fs/ext4/ialloc.c:516:
+ "magic inode for new directory inode %lu "$

WARNING:SPLIT_STRING: quoted string split across lines
#282: FILE: fs/ext4/ialloc.c:516:
+ "a different directory inode %lu. Use this "
+ "magic inode for new directory inode %lu "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: fs/ext4/ialloc.c:517:
+ "with force now.\n",$

WARNING:SPLIT_STRING: quoted string split across lines
#283: FILE: fs/ext4/ialloc.c:517:
+ "magic inode for new directory inode %lu "
+ "with force now.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#284: FILE: fs/ext4/ialloc.c:518:
+ end_ino, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: fs/ext4/ialloc.c:518:
+ end_ino, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: fs/ext4/ialloc.c:519:
+ (unsigned long)le32_to_cpu(link_minode->mi_parent_ino),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: fs/ext4/ialloc.c:520:
+ start_ino);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: fs/ext4/ialloc.c:521:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: fs/ext4/ialloc.c:522:
+ if(le32_to_cpu(link_minode->mi_parent_ctime) !=$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#288: FILE: fs/ext4/ialloc.c:522:
+ if(le32_to_cpu(link_minode->mi_parent_ctime) !=
[...]
+ printk(KERN_INFO "EXT4_MINODE_TYPE_LINK magic inode "

ERROR:SPACING: space required before the open parenthesis '('
#288: FILE: fs/ext4/ialloc.c:522:
+ if(le32_to_cpu(link_minode->mi_parent_ctime) !=

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: fs/ext4/ialloc.c:523:
+ ctime) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: fs/ext4/ialloc.c:524:
+ printk(KERN_INFO "EXT4_MINODE_TYPE_LINK magic inode "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#290: FILE: fs/ext4/ialloc.c:524:
+ printk(KERN_INFO "EXT4_MINODE_TYPE_LINK magic inode "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: fs/ext4/ialloc.c:525:
+ "%lu ctime does not match, which means it "$

WARNING:SPLIT_STRING: quoted string split across lines
#291: FILE: fs/ext4/ialloc.c:525:
+ printk(KERN_INFO "EXT4_MINODE_TYPE_LINK magic inode "
+ "%lu ctime does not match, which means it "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: fs/ext4/ialloc.c:526:
+ "belongs a removed directory with same inode "$

WARNING:SPLIT_STRING: quoted string split across lines
#292: FILE: fs/ext4/ialloc.c:526:
+ "%lu ctime does not match, which means it "
+ "belongs a removed directory with same inode "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: fs/ext4/ialloc.c:527:
+ "number. Use this magic inode for new directory "$

WARNING:SPLIT_STRING: quoted string split across lines
#293: FILE: fs/ext4/ialloc.c:527:
+ "belongs a removed directory with same inode "
+ "number. Use this magic inode for new directory "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: fs/ext4/ialloc.c:528:
+ "inode %lu with force now.\n",$

WARNING:SPLIT_STRING: quoted string split across lines
#294: FILE: fs/ext4/ialloc.c:528:
+ "number. Use this magic inode for new directory "
+ "inode %lu with force now.\n",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: fs/ext4/ialloc.c:529:
+ end_ino,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: fs/ext4/ialloc.c:530:
+ (unsigned long)le32_to_cpu(link_minode->mi_parent_ino));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: fs/ext4/ialloc.c:531:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: fs/ext4/ialloc.c:532:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: fs/ext4/ialloc.c:533:
+ BUFFER_TRACE (bitmap_bh, "call ext4_journal_get_write_access");$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#299: FILE: fs/ext4/ialloc.c:533:
+ BUFFER_TRACE (bitmap_bh, "call ext4_journal_get_write_access");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: fs/ext4/ialloc.c:534:
+ ret = ext4_journal_get_write_access(handle, bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: fs/ext4/ialloc.c:535:
+ if (ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#301: FILE: fs/ext4/ialloc.c:535:
+ if (ret) {
+ spin_unlock(sb_bgl_lock(sbi, group));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: fs/ext4/ialloc.c:536:
+ spin_unlock(sb_bgl_lock(sbi, group));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: fs/ext4/ialloc.c:537:
+ jbd2_journal_release_buffer(handle, link_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: fs/ext4/ialloc.c:538:
+ brelse(bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: fs/ext4/ialloc.c:539:
+ brelse(link_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: fs/ext4/ialloc.c:540:
+ return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: fs/ext4/ialloc.c:541:
+ }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#309: FILE: fs/ext4/ialloc.c:543:
+ if (ext4_set_bit((start_ino - 1) % EXT4_INODES_PER_GROUP(sb), $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: fs/ext4/ialloc.c:543:
+ if (ext4_set_bit((start_ino - 1) % EXT4_INODES_PER_GROUP(sb), $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#309: FILE: fs/ext4/ialloc.c:543:
+ if (ext4_set_bit((start_ino - 1) % EXT4_INODES_PER_GROUP(sb), 
[...]
+ printk(KERN_ERR "inode %lu for new directory is already "

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#310: FILE: fs/ext4/ialloc.c:544:
+ if (ext4_set_bit((start_ino - 1) % EXT4_INODES_PER_GROUP(sb), 
+ bitmap_bh->b_data)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: fs/ext4/ialloc.c:544:
+ bitmap_bh->b_data)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: fs/ext4/ialloc.c:545:
+ printk(KERN_ERR "inode %lu for new directory is already "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#311: FILE: fs/ext4/ialloc.c:545:
+ printk(KERN_ERR "inode %lu for new directory is already "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: fs/ext4/ialloc.c:546:
+ "set in bitmap of group %d\n", start_ino, group);$

WARNING:SPLIT_STRING: quoted string split across lines
#312: FILE: fs/ext4/ialloc.c:546:
+ printk(KERN_ERR "inode %lu for new directory is already "
+ "set in bitmap of group %d\n", start_ino, group);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: fs/ext4/ialloc.c:547:
+ spin_unlock(sb_bgl_lock(sbi, group));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: fs/ext4/ialloc.c:548:
+ jbd2_journal_release_buffer(handle, bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: fs/ext4/ialloc.c:549:
+ jbd2_journal_release_buffer(handle, link_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: fs/ext4/ialloc.c:550:
+ brelse(bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: fs/ext4/ialloc.c:551:
+ brelse(link_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: fs/ext4/ialloc.c:552:
+ return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: fs/ext4/ialloc.c:553:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: fs/ext4/ialloc.c:554:
+ if (ext4_set_bit((end_ino - 1) % EXT4_INODES_PER_GROUP(sb),$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#320: FILE: fs/ext4/ialloc.c:554:
+ if (ext4_set_bit((end_ino - 1) % EXT4_INODES_PER_GROUP(sb),
[...]
+ printk(KERN_INFO "EXT4_MINODE_TYPE_LINK magic inode "

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#321: FILE: fs/ext4/ialloc.c:555:
+ if (ext4_set_bit((end_ino - 1) % EXT4_INODES_PER_GROUP(sb),
+ bitmap_bh->b_data)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: fs/ext4/ialloc.c:555:
+ bitmap_bh->b_data)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: fs/ext4/ialloc.c:556:
+ printk(KERN_INFO "EXT4_MINODE_TYPE_LINK magic inode "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#322: FILE: fs/ext4/ialloc.c:556:
+ printk(KERN_INFO "EXT4_MINODE_TYPE_LINK magic inode "

ERROR:TRAILING_WHITESPACE: trailing whitespace
#323: FILE: fs/ext4/ialloc.c:557:
+ "%lu is already set in bitmap of group %d\n", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: fs/ext4/ialloc.c:557:
+ "%lu is already set in bitmap of group %d\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#323: FILE: fs/ext4/ialloc.c:557:
+ printk(KERN_INFO "EXT4_MINODE_TYPE_LINK magic inode "
+ "%lu is already set in bitmap of group %d\n", 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: fs/ext4/ialloc.c:558:
+ end_ino, group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: fs/ext4/ialloc.c:559:
+ printk(KERN_INFO "Use inode %lu as EXT4_MINODE_TYPE_LINK magic "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#325: FILE: fs/ext4/ialloc.c:559:
+ printk(KERN_INFO "Use inode %lu as EXT4_MINODE_TYPE_LINK magic "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: fs/ext4/ialloc.c:560:
+ "inode for directory inode %lu of group %d.\n",$

WARNING:SPLIT_STRING: quoted string split across lines
#326: FILE: fs/ext4/ialloc.c:560:
+ printk(KERN_INFO "Use inode %lu as EXT4_MINODE_TYPE_LINK magic "
+ "inode for directory inode %lu of group %d.\n",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: fs/ext4/ialloc.c:561:
+ end_ino, start_ino, group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: fs/ext4/ialloc.c:562:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: fs/ext4/ialloc.c:563:
+ spin_unlock(sb_bgl_lock(sbi, group));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: fs/ext4/ialloc.c:565:
+ BUFFER_TRACE(link_iloc.bh, "call ext4_journal_get_write_access");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: fs/ext4/ialloc.c:566:
+ ret = ext4_journal_get_write_access(handle, link_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: fs/ext4/ialloc.c:567:
+ if (ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#333: FILE: fs/ext4/ialloc.c:567:
+ if (ret) {
+ spin_unlock(sb_bgl_lock(sbi, group));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: fs/ext4/ialloc.c:568:
+ spin_unlock(sb_bgl_lock(sbi, group));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: fs/ext4/ialloc.c:569:
+ brelse(bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: fs/ext4/ialloc.c:570:
+ brelse(link_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: fs/ext4/ialloc.c:571:
+ return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: fs/ext4/ialloc.c:572:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: fs/ext4/ialloc.c:574:
+ ext4_init_magic_inode(link_minode, EXT4_MINODE_TYPE_LINK);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: fs/ext4/ialloc.c:575:
+ link_minode->mi_next_ino = cpu_to_le32(0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: fs/ext4/ialloc.c:576:
+ link_minode->mi_parent_ino = cpu_to_le32(start_ino);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: fs/ext4/ialloc.c:577:
+ link_minode->mi_current_ressize =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: fs/ext4/ialloc.c:578:
+ link_minode->mi_next_ressize = cpu_to_le32(EXT4_INIT_RESERVE_INODES *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: fs/ext4/ialloc.c:579:
+ link_minode->mi_parent_ctime = cpu_to_le32(ctime);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: fs/ext4/ialloc.c:580:
+ BUFFER_TRACE (link_iloc.bh, "call ext4_journal_dirty_metadata");$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#348: FILE: fs/ext4/ialloc.c:580:
+ BUFFER_TRACE (link_iloc.bh, "call ext4_journal_dirty_metadata");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: fs/ext4/ialloc.c:581:
+ ret = ext4_journal_dirty_metadata(handle, link_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: fs/ext4/ialloc.c:582:
+ if (ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#350: FILE: fs/ext4/ialloc.c:582:
+ if (ret) {
+ jbd2_journal_release_buffer(handle, bitmap_bh);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: fs/ext4/ialloc.c:583:
+ jbd2_journal_release_buffer(handle, bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: fs/ext4/ialloc.c:584:
+ brelse(bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: fs/ext4/ialloc.c:585:
+ brelse(link_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: fs/ext4/ialloc.c:586:
+ return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: fs/ext4/ialloc.c:587:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: fs/ext4/ialloc.c:588:
+ brelse(link_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#357: FILE: fs/ext4/ialloc.c:589:
+ BUFFER_TRACE (bitmap_bh, "call ext4_journal_dirty_metadata");$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#357: FILE: fs/ext4/ialloc.c:589:
+ BUFFER_TRACE (bitmap_bh, "call ext4_journal_dirty_metadata");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: fs/ext4/ialloc.c:590:
+ ret = ext4_journal_dirty_metadata(handle, bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: fs/ext4/ialloc.c:591:
+ if (ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#359: FILE: fs/ext4/ialloc.c:591:
+ if (ret) {
+ brelse(bitmap_bh);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: fs/ext4/ialloc.c:592:
+ brelse(bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: fs/ext4/ialloc.c:593:
+ return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: fs/ext4/ialloc.c:594:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: fs/ext4/ialloc.c:595:
+ brelse(bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: fs/ext4/ialloc.c:597:
+ gdp = ext4_get_group_desc(sb, group, &bh2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: fs/ext4/ialloc.c:598:
+ if (!gdp)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#366: FILE: fs/ext4/ialloc.c:598:
+ if (!gdp)
+ return -EFAULT;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: fs/ext4/ialloc.c:599:
+ return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: fs/ext4/ialloc.c:600:
+ BUFFER_TRACE(bh2, "call ext4_journal_get_write_access");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: fs/ext4/ialloc.c:601:
+ ret = ext4_journal_get_write_access(handle, bh2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: fs/ext4/ialloc.c:602:
+ if (ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#370: FILE: fs/ext4/ialloc.c:602:
+ if (ret) {
+ return -EFAULT;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#370: FILE: fs/ext4/ialloc.c:602:
+ if (ret) {
+ return -EFAULT;
+ }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: fs/ext4/ialloc.c:603:
+ return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: fs/ext4/ialloc.c:604:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: fs/ext4/ialloc.c:605:
+ spin_lock(sb_bgl_lock(sbi, group));$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#374: FILE: fs/ext4/ialloc.c:606:
+ gdp->bg_free_inodes_count = $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: fs/ext4/ialloc.c:606:
+ gdp->bg_free_inodes_count = $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: fs/ext4/ialloc.c:607:
+ cpu_to_le16(le16_to_cpu(gdp->bg_free_inodes_count) - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: fs/ext4/ialloc.c:608:
+ spin_unlock(sb_bgl_lock(sbi, group));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: fs/ext4/ialloc.c:609:
+ BUFFER_TRACE(bh2, "call ext4_journal_dirty_metadata");$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#378: FILE: fs/ext4/ialloc.c:610:
+ ret = ext4_journal_dirty_metadata(handle, bh2); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: fs/ext4/ialloc.c:610:
+ ret = ext4_journal_dirty_metadata(handle, bh2); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: fs/ext4/ialloc.c:611:
+ if (ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#379: FILE: fs/ext4/ialloc.c:611:
+ if (ret) {
+ return -EFAULT;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#379: FILE: fs/ext4/ialloc.c:611:
+ if (ret) {
+ return -EFAULT;
+ }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: fs/ext4/ialloc.c:612:
+ return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: fs/ext4/ialloc.c:613:
+ }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#382: FILE: fs/ext4/ialloc.c:614:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: fs/ext4/ialloc.c:614:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: fs/ext4/ialloc.c:615:
+ * ino = start_ino;$

ERROR:SPACING: space prohibited after that '*' (ctx:ExW)
#383: FILE: fs/ext4/ialloc.c:615:
+ * ino = start_ino;
  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: fs/ext4/ialloc.c:616:
+ return 0;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#386: FILE: fs/ext4/ialloc.c:618:
+
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#388: FILE: fs/ext4/ialloc.c:620:
+static int ext4_new_reserve_area(handle_t * handle,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#389: FILE: fs/ext4/ialloc.c:621:
+static int ext4_new_reserve_area(handle_t * handle,
+ struct super_block *sb,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: fs/ext4/ialloc.c:621:
+ struct super_block *sb,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: fs/ext4/ialloc.c:622:
+ int group,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: fs/ext4/ialloc.c:623:
+ struct ext4_magic_inode * prev_link_minode,$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#391: FILE: fs/ext4/ialloc.c:623:
+ struct ext4_magic_inode * prev_link_minode,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: fs/ext4/ialloc.c:624:
+ struct buffer_head * prev_link_bh,$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#392: FILE: fs/ext4/ialloc.c:624:
+ struct buffer_head * prev_link_bh,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: fs/ext4/ialloc.c:625:
+ unsigned long prev_link_mino,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: fs/ext4/ialloc.c:626:
+ int new_ressize)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: fs/ext4/ialloc.c:628:
+ struct buffer_head * bitmap_bh, * bh2;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#396: FILE: fs/ext4/ialloc.c:628:
+ struct buffer_head * bitmap_bh, * bh2;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#396: FILE: fs/ext4/ialloc.c:628:
+ struct buffer_head * bitmap_bh, * bh2;
                                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: fs/ext4/ialloc.c:629:
+ struct ext4_iloc link_iloc, lastres_iloc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: fs/ext4/ialloc.c:630:
+ struct ext4_magic_inode * lastres_minode, * link_minode;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#398: FILE: fs/ext4/ialloc.c:630:
+ struct ext4_magic_inode * lastres_minode, * link_minode;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#398: FILE: fs/ext4/ialloc.c:630:
+ struct ext4_magic_inode * lastres_minode, * link_minode;
                                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: fs/ext4/ialloc.c:631:
+ struct ext4_group_desc * gdp;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#399: FILE: fs/ext4/ialloc.c:631:
+ struct ext4_group_desc * gdp;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: fs/ext4/ialloc.c:632:
+ unsigned long lastres_ino, start_ino, end_ino;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: fs/ext4/ialloc.c:633:
+ int itable_offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: fs/ext4/ialloc.c:634:
+ int ret;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#403: FILE: fs/ext4/ialloc.c:635:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: fs/ext4/ialloc.c:635:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#404: FILE: fs/ext4/ialloc.c:636:
+ 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#406: FILE: fs/ext4/ialloc.c:638:
+ lastres_ino = (group + 1) * EXT4_INODES_PER_GROUP(sb) - 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#406: FILE: fs/ext4/ialloc.c:638:
+ lastres_ino = (group + 1) * EXT4_INODES_PER_GROUP(sb) - 1;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#407: FILE: fs/ext4/ialloc.c:639:
+ printk(KERN_DEBUG "lastres_ino %lu in group %d\n", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: fs/ext4/ialloc.c:639:
+ printk(KERN_DEBUG "lastres_ino %lu in group %d\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#407: FILE: fs/ext4/ialloc.c:639:
+ printk(KERN_DEBUG "lastres_ino %lu in group %d\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#408: FILE: fs/ext4/ialloc.c:640:
+ printk(KERN_DEBUG "lastres_ino %lu in group %d\n", 
+ lastres_ino, group);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: fs/ext4/ialloc.c:640:
+ lastres_ino, group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: fs/ext4/ialloc.c:641:
+ ret = ext4_get_magic_inode_loc(sb, lastres_ino, &lastres_iloc);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#410: FILE: fs/ext4/ialloc.c:642:
+ if (ret) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: fs/ext4/ialloc.c:642:
+ if (ret) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#410: FILE: fs/ext4/ialloc.c:642:
+ if (ret) 
+ return -EIO;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: fs/ext4/ialloc.c:643:
+ return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: fs/ext4/ialloc.c:644:
+ lastres_minode = (struct ext4_magic_inode *)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: fs/ext4/ialloc.c:645:
+ ((char *)lastres_iloc.bh->b_data + lastres_iloc.offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: fs/ext4/ialloc.c:646:
+ if (!ext4_magic_inode(lastres_minode, EXT4_MINODE_TYPE_LASTRES)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#414: FILE: fs/ext4/ialloc.c:646:
+ if (!ext4_magic_inode(lastres_minode, EXT4_MINODE_TYPE_LASTRES)) {
+ printk(KERN_ERR "EXT4_MINODE_TYPE_LASTRES magic inode in "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#415: FILE: fs/ext4/ialloc.c:647:
+ printk(KERN_ERR "EXT4_MINODE_TYPE_LASTRES magic inode in "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#415: FILE: fs/ext4/ialloc.c:647:
+ printk(KERN_ERR "EXT4_MINODE_TYPE_LASTRES magic inode in "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: fs/ext4/ialloc.c:648:
+ "group %d corrupt.\n", group);$

WARNING:SPLIT_STRING: quoted string split across lines
#416: FILE: fs/ext4/ialloc.c:648:
+ printk(KERN_ERR "EXT4_MINODE_TYPE_LASTRES magic inode in "
+ "group %d corrupt.\n", group);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: fs/ext4/ialloc.c:649:
+ brelse(lastres_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: fs/ext4/ialloc.c:650:
+ return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: fs/ext4/ialloc.c:651:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#420: FILE: fs/ext4/ialloc.c:652:
+ start_ino = le32_to_cpu(lastres_minode->mi_lastres_ino) + 1;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#421: FILE: fs/ext4/ialloc.c:653:
+ printk(KERN_DEBUG "try start_ino %lu in group %d.\n", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: fs/ext4/ialloc.c:653:
+ printk(KERN_DEBUG "try start_ino %lu in group %d.\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#421: FILE: fs/ext4/ialloc.c:653:
+ printk(KERN_DEBUG "try start_ino %lu in group %d.\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#422: FILE: fs/ext4/ialloc.c:654:
+ printk(KERN_DEBUG "try start_ino %lu in group %d.\n", 
+ start_ino, group);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: fs/ext4/ialloc.c:654:
+ start_ino, group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: fs/ext4/ialloc.c:655:
+ BUFFER_TRACE(lastres_iloc.bh, "get_write_access");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: fs/ext4/ialloc.c:656:
+ ret = ext4_journal_get_write_access(handle, lastres_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: fs/ext4/ialloc.c:657:
+ if (ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#425: FILE: fs/ext4/ialloc.c:657:
+ if (ret) {
+ brelse(lastres_iloc.bh);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: fs/ext4/ialloc.c:658:
+ brelse(lastres_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#427: FILE: fs/ext4/ialloc.c:659:
+ return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: fs/ext4/ialloc.c:660:
+ }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#429: FILE: fs/ext4/ialloc.c:661:
+ lastres_minode->mi_lastres_ino = $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#429: FILE: fs/ext4/ialloc.c:661:
+ lastres_minode->mi_lastres_ino = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#430: FILE: fs/ext4/ialloc.c:662:
+ cpu_to_le32(le32_to_cpu(lastres_minode->mi_lastres_ino) + $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#430: FILE: fs/ext4/ialloc.c:662:
+ cpu_to_le32(le32_to_cpu(lastres_minode->mi_lastres_ino) + $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#431: FILE: fs/ext4/ialloc.c:663:
+ new_ressize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#432: FILE: fs/ext4/ialloc.c:664:
+ BUFFER_TRACE(lastres_iloc.bh, "dirty_metadata");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: fs/ext4/ialloc.c:665:
+ ret = ext4_journal_dirty_metadata(handle, lastres_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: fs/ext4/ialloc.c:666:
+ if (ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#434: FILE: fs/ext4/ialloc.c:666:
+ if (ret) {
+ brelse(lastres_iloc.bh);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: fs/ext4/ialloc.c:667:
+ brelse(lastres_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: fs/ext4/ialloc.c:668:
+ return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#437: FILE: fs/ext4/ialloc.c:669:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: fs/ext4/ialloc.c:670:
+ end_ino = le32_to_cpu(lastres_minode->mi_lastres_ino);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#439: FILE: fs/ext4/ialloc.c:671:
+ brelse(lastres_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: fs/ext4/ialloc.c:673:
+ itable_offset = (end_ino - 1) % EXT4_INODES_PER_GROUP(sb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: fs/ext4/ialloc.c:674:
+ bitmap_bh = read_inode_bitmap(sb, group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#443: FILE: fs/ext4/ialloc.c:675:
+ if(!bitmap_bh) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#443: FILE: fs/ext4/ialloc.c:675:
+ if(!bitmap_bh) {
+ printk(KERN_ERR "Can not read bitmap for group %d.\n",

ERROR:SPACING: space required before the open parenthesis '('
#443: FILE: fs/ext4/ialloc.c:675:
+ if(!bitmap_bh) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#444: FILE: fs/ext4/ialloc.c:676:
+ printk(KERN_ERR "Can not read bitmap for group %d.\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#444: FILE: fs/ext4/ialloc.c:676:
+ printk(KERN_ERR "Can not read bitmap for group %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#445: FILE: fs/ext4/ialloc.c:677:
+ printk(KERN_ERR "Can not read bitmap for group %d.\n",
+ group);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#445: FILE: fs/ext4/ialloc.c:677:
+ group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#446: FILE: fs/ext4/ialloc.c:678:
+ return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#447: FILE: fs/ext4/ialloc.c:679:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#448: FILE: fs/ext4/ialloc.c:680:
+ BUFFER_TRACE(bitmap_bh, "get_write_access");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: fs/ext4/ialloc.c:681:
+ ret = ext4_journal_get_write_access(handle, bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: fs/ext4/ialloc.c:682:
+ if(ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#450: FILE: fs/ext4/ialloc.c:682:
+ if(ret) {
+ brelse(bitmap_bh);

ERROR:SPACING: space required before the open parenthesis '('
#450: FILE: fs/ext4/ialloc.c:682:
+ if(ret) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#451: FILE: fs/ext4/ialloc.c:683:
+ brelse(bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: fs/ext4/ialloc.c:684:
+ return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#453: FILE: fs/ext4/ialloc.c:685:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#454: FILE: fs/ext4/ialloc.c:686:
+ printk(KERN_DEBUG "end ino offset of new reserve area: %d\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#454: FILE: fs/ext4/ialloc.c:686:
+ printk(KERN_DEBUG "end ino offset of new reserve area: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#456: FILE: fs/ext4/ialloc.c:687:
+ printk(KERN_DEBUG "end ino offset of new reserve area: %d\n",
+ if (ext4_set_bit(itable_offset, bitmap_bh->b_data)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#456: FILE: fs/ext4/ialloc.c:687:
+ if (ext4_set_bit(itable_offset, bitmap_bh->b_data)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#456: FILE: fs/ext4/ialloc.c:687:
+ if (ext4_set_bit(itable_offset, bitmap_bh->b_data)) {
+ printk(KERN_INFO "inode %lu in group %d is allocated "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#457: FILE: fs/ext4/ialloc.c:688:
+ printk(KERN_INFO "inode %lu in group %d is allocated "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#457: FILE: fs/ext4/ialloc.c:688:
+ printk(KERN_INFO "inode %lu in group %d is allocated "

ERROR:TRAILING_WHITESPACE: trailing whitespace
#458: FILE: fs/ext4/ialloc.c:689:
+ "already. Give up this group.\n", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#458: FILE: fs/ext4/ialloc.c:689:
+ "already. Give up this group.\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#458: FILE: fs/ext4/ialloc.c:689:
+ printk(KERN_INFO "inode %lu in group %d is allocated "
+ "already. Give up this group.\n", 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#459: FILE: fs/ext4/ialloc.c:690:
+ end_ino, group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: fs/ext4/ialloc.c:691:
+ jbd2_journal_release_buffer(handle, bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: fs/ext4/ialloc.c:692:
+ brelse(bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: fs/ext4/ialloc.c:693:
+ return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: fs/ext4/ialloc.c:694:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: fs/ext4/ialloc.c:695:
+ BUFFER_TRACE(bitmap_bh, "dirty_metadata");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#465: FILE: fs/ext4/ialloc.c:696:
+ ret = ext4_journal_dirty_metadata(handle, bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#466: FILE: fs/ext4/ialloc.c:697:
+ brelse(bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: fs/ext4/ialloc.c:698:
+ if(ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#467: FILE: fs/ext4/ialloc.c:698:
+ if(ret)
+ return -EFAULT;

ERROR:SPACING: space required before the open parenthesis '('
#467: FILE: fs/ext4/ialloc.c:698:
+ if(ret)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: fs/ext4/ialloc.c:699:
+ return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: fs/ext4/ialloc.c:701:
+ gdp = ext4_get_group_desc(sb, group, &bh2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: fs/ext4/ialloc.c:702:
+ if (!gdp) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#471: FILE: fs/ext4/ialloc.c:702:
+ if (!gdp) {
+ printk(KERN_ERR "can not get group descriptor of "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: fs/ext4/ialloc.c:703:
+ printk(KERN_ERR "can not get group descriptor of "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#472: FILE: fs/ext4/ialloc.c:703:
+ printk(KERN_ERR "can not get group descriptor of "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#473: FILE: fs/ext4/ialloc.c:704:
+ "group %d.\n", group);$

WARNING:SPLIT_STRING: quoted string split across lines
#473: FILE: fs/ext4/ialloc.c:704:
+ printk(KERN_ERR "can not get group descriptor of "
+ "group %d.\n", group);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: fs/ext4/ialloc.c:705:
+ return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#475: FILE: fs/ext4/ialloc.c:706:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: fs/ext4/ialloc.c:707:
+ BUFFER_TRACE(bh2, "get_write_access");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#477: FILE: fs/ext4/ialloc.c:708:
+ ret = ext4_journal_get_write_access(handle, bh2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: fs/ext4/ialloc.c:709:
+ if (ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#478: FILE: fs/ext4/ialloc.c:709:
+ if (ret)
+ return -EIO;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#479: FILE: fs/ext4/ialloc.c:710:
+ return -EIO;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#480: FILE: fs/ext4/ialloc.c:711:
+ gdp->bg_free_inodes_count = $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#480: FILE: fs/ext4/ialloc.c:711:
+ gdp->bg_free_inodes_count = $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: fs/ext4/ialloc.c:712:
+ cpu_to_le16(le16_to_cpu(gdp->bg_free_inodes_count) - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#482: FILE: fs/ext4/ialloc.c:713:
+ BUFFER_TRACE(bh2, "call dirty_metadata");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: fs/ext4/ialloc.c:714:
+ ret = ext4_journal_dirty_metadata(handle, bh2);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#484: FILE: fs/ext4/ialloc.c:715:
+ if(ret) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: fs/ext4/ialloc.c:715:
+ if(ret) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#484: FILE: fs/ext4/ialloc.c:715:
+ if(ret) 
+ return -EIO;

ERROR:SPACING: space required before the open parenthesis '('
#484: FILE: fs/ext4/ialloc.c:715:
+ if(ret) 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#485: FILE: fs/ext4/ialloc.c:716:
+ return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: fs/ext4/ialloc.c:717:
+ ret = ext4_get_magic_inode_loc(sb, end_ino, &link_iloc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: fs/ext4/ialloc.c:718:
+ if(ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#487: FILE: fs/ext4/ialloc.c:718:
+ if(ret)
+ return -EIO;

ERROR:SPACING: space required before the open parenthesis '('
#487: FILE: fs/ext4/ialloc.c:718:
+ if(ret)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: fs/ext4/ialloc.c:719:
+ return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: fs/ext4/ialloc.c:720:
+ ret = ext4_journal_get_write_access(handle, link_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: fs/ext4/ialloc.c:721:
+ if (ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#490: FILE: fs/ext4/ialloc.c:721:
+ if (ret) {
+ brelse(link_iloc.bh);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: fs/ext4/ialloc.c:722:
+ brelse(link_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: fs/ext4/ialloc.c:723:
+ return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: fs/ext4/ialloc.c:724:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: fs/ext4/ialloc.c:725:
+ link_minode = (struct ext4_magic_inode *)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#495: FILE: fs/ext4/ialloc.c:726:
+ ((char *)link_iloc.bh->b_data + link_iloc.offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: fs/ext4/ialloc.c:727:
+ ext4_init_magic_inode(link_minode, EXT4_MINODE_TYPE_LINK);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: fs/ext4/ialloc.c:728:
+ link_minode->mi_next_ino = cpu_to_le32(0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: fs/ext4/ialloc.c:729:
+ link_minode->mi_parent_ino = prev_link_minode->mi_parent_ino;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#499: FILE: fs/ext4/ialloc.c:730:
+ link_minode->mi_current_ressize = cpu_to_le32(new_ressize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#500: FILE: fs/ext4/ialloc.c:731:
+ link_minode->mi_next_ressize = cpu_to_le32(0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#501: FILE: fs/ext4/ialloc.c:732:
+ link_minode->mi_parent_ctime = prev_link_minode->mi_parent_ctime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#502: FILE: fs/ext4/ialloc.c:733:
+ BUFFER_TRACE(link_iloc.bh, "call dirty_metadata");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#503: FILE: fs/ext4/ialloc.c:734:
+ ret = ext4_journal_dirty_metadata(handle, link_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#504: FILE: fs/ext4/ialloc.c:735:
+ if (ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#504: FILE: fs/ext4/ialloc.c:735:
+ if (ret) {
+ brelse(link_iloc.bh);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#505: FILE: fs/ext4/ialloc.c:736:
+ brelse(link_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: fs/ext4/ialloc.c:737:
+ return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#507: FILE: fs/ext4/ialloc.c:738:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#508: FILE: fs/ext4/ialloc.c:739:
+ brelse(link_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#509: FILE: fs/ext4/ialloc.c:740:
+ ret = ext4_journal_get_write_access(handle, prev_link_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: fs/ext4/ialloc.c:741:
+ if (ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#510: FILE: fs/ext4/ialloc.c:741:
+ if (ret)
+ return -EIO;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#511: FILE: fs/ext4/ialloc.c:742:
+ return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#512: FILE: fs/ext4/ialloc.c:743:
+ prev_link_minode->mi_next_ressize = cpu_to_le32(new_ressize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#513: FILE: fs/ext4/ialloc.c:744:
+ prev_link_minode->mi_next_ino = start_ino;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#514: FILE: fs/ext4/ialloc.c:745:
+ ret = ext4_journal_dirty_metadata(handle, prev_link_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#515: FILE: fs/ext4/ialloc.c:746:
+ if (ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#515: FILE: fs/ext4/ialloc.c:746:
+ if (ret)
+ return -EIO;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#516: FILE: fs/ext4/ialloc.c:747:
+ return -EIO;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#517: FILE: fs/ext4/ialloc.c:748:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#517: FILE: fs/ext4/ialloc.c:748:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#518: FILE: fs/ext4/ialloc.c:749:
+ return 0;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#521: FILE: fs/ext4/ialloc.c:752:
+static int ext4_reserve_inodes_area(handle_t * handle,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#522: FILE: fs/ext4/ialloc.c:753:
+static int ext4_reserve_inodes_area(handle_t * handle,
+ struct super_block * sb,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: fs/ext4/ialloc.c:753:
+ struct super_block * sb,$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#522: FILE: fs/ext4/ialloc.c:753:
+ struct super_block * sb,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#523: FILE: fs/ext4/ialloc.c:754:
+ struct inode * dir,$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#523: FILE: fs/ext4/ialloc.c:754:
+ struct inode * dir,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#524: FILE: fs/ext4/ialloc.c:755:
+ struct ext4_magic_inode * prev_link_minode,$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#524: FILE: fs/ext4/ialloc.c:755:
+ struct ext4_magic_inode * prev_link_minode,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: fs/ext4/ialloc.c:756:
+ struct buffer_head * prev_link_bh,$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#525: FILE: fs/ext4/ialloc.c:756:
+ struct buffer_head * prev_link_bh,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: fs/ext4/ialloc.c:757:
+ unsigned long prev_link_mino)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#528: FILE: fs/ext4/ialloc.c:759:
+ struct ext4_sb_info * sbi = EXT4_SB(sb);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#528: FILE: fs/ext4/ialloc.c:759:
+ struct ext4_sb_info * sbi = EXT4_SB(sb);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#529: FILE: fs/ext4/ialloc.c:760:
+ int unreserved_inodes, new_ressize;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#530: FILE: fs/ext4/ialloc.c:761:
+ int group;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: fs/ext4/ialloc.c:762:
+ int i, ret;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#532: FILE: fs/ext4/ialloc.c:763:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#532: FILE: fs/ext4/ialloc.c:763:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: fs/ext4/ialloc.c:764:
+ spin_lock(dir->i_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#534: FILE: fs/ext4/ialloc.c:765:
+ if (le32_to_cpu(prev_link_minode->mi_next_ino) != 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#534: FILE: fs/ext4/ialloc.c:765:
+ if (le32_to_cpu(prev_link_minode->mi_next_ino) != 0) {
+ printk(KERN_DEBUG "new reserve inodes area generated "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#535: FILE: fs/ext4/ialloc.c:766:
+ printk(KERN_DEBUG "new reserve inodes area generated "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#535: FILE: fs/ext4/ialloc.c:766:
+ printk(KERN_DEBUG "new reserve inodes area generated "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#536: FILE: fs/ext4/ialloc.c:767:
+ "by others. Nothing to do here.\n");$

WARNING:SPLIT_STRING: quoted string split across lines
#536: FILE: fs/ext4/ialloc.c:767:
+ printk(KERN_DEBUG "new reserve inodes area generated "
+ "by others. Nothing to do here.\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#537: FILE: fs/ext4/ialloc.c:768:
+ spin_unlock(dir->i_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#538: FILE: fs/ext4/ialloc.c:769:
+ return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#539: FILE: fs/ext4/ialloc.c:770:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#541: FILE: fs/ext4/ialloc.c:772:
+ group = (prev_link_mino - 1) / EXT4_INODES_PER_GROUP(sb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#542: FILE: fs/ext4/ialloc.c:773:
+ new_ressize = le32_to_cpu(prev_link_minode->mi_current_ressize) * 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#543: FILE: fs/ext4/ialloc.c:774:
+ if (new_ressize > EXT4_INODES_PER_GROUP(sb))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#543: FILE: fs/ext4/ialloc.c:774:
+ if (new_ressize > EXT4_INODES_PER_GROUP(sb))
+ new_ressize = new_ressize / 2;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#544: FILE: fs/ext4/ialloc.c:775:
+ new_ressize = new_ressize / 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#547: FILE: fs/ext4/ialloc.c:778:
+ for (i = 0; i < sbi->s_groups_count; i ++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#547: FILE: fs/ext4/ialloc.c:778:
+ for (i = 0; i < sbi->s_groups_count; i ++) {
+ printk(KERN_DEBUG "try reserv size %d in group %d\n", 

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#547: FILE: fs/ext4/ialloc.c:778:
+ for (i = 0; i < sbi->s_groups_count; i ++) {
                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#548: FILE: fs/ext4/ialloc.c:779:
+ printk(KERN_DEBUG "try reserv size %d in group %d\n", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#548: FILE: fs/ext4/ialloc.c:779:
+ printk(KERN_DEBUG "try reserv size %d in group %d\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#548: FILE: fs/ext4/ialloc.c:779:
+ printk(KERN_DEBUG "try reserv size %d in group %d\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#549: FILE: fs/ext4/ialloc.c:780:
+ printk(KERN_DEBUG "try reserv size %d in group %d\n", 
+ new_ressize, group);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#549: FILE: fs/ext4/ialloc.c:780:
+ new_ressize, group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#550: FILE: fs/ext4/ialloc.c:781:
+ spin_lock(sb_bgl_lock(sbi, group));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#551: FILE: fs/ext4/ialloc.c:782:
+ unreserved_inodes = ext4_unreserved_inodes(sb, group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#552: FILE: fs/ext4/ialloc.c:783:
+ printk("%d inodes unreserved in group %d\n", unreserved_inodes,$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#552: FILE: fs/ext4/ialloc.c:783:
+ printk("%d inodes unreserved in group %d\n", unreserved_inodes,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#554: FILE: fs/ext4/ialloc.c:784:
+ printk("%d inodes unreserved in group %d\n", unreserved_inodes,
+ if (unreserved_inodes >= new_ressize) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#554: FILE: fs/ext4/ialloc.c:784:
+ if (unreserved_inodes >= new_ressize) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#554: FILE: fs/ext4/ialloc.c:784:
+ if (unreserved_inodes >= new_ressize) {
+ printk(KERN_DEBUG "group %d has enough inodes to "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: fs/ext4/ialloc.c:785:
+ printk(KERN_DEBUG "group %d has enough inodes to "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#555: FILE: fs/ext4/ialloc.c:785:
+ printk(KERN_DEBUG "group %d has enough inodes to "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#556: FILE: fs/ext4/ialloc.c:786:
+ "reserve.\n", group);$

WARNING:SPLIT_STRING: quoted string split across lines
#556: FILE: fs/ext4/ialloc.c:786:
+ printk(KERN_DEBUG "group %d has enough inodes to "
+ "reserve.\n", group);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#557: FILE: fs/ext4/ialloc.c:787:
+ ret = ext4_new_reserve_area(handle, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#557: FILE: fs/ext4/ialloc.c:787:
+ ret = ext4_new_reserve_area(handle, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#558: FILE: fs/ext4/ialloc.c:788:
+     sb, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#558: FILE: fs/ext4/ialloc.c:788:
+ ret = ext4_new_reserve_area(handle, 
+     sb, 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#558: FILE: fs/ext4/ialloc.c:788:
+     sb, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#559: FILE: fs/ext4/ialloc.c:789:
+     group, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#559: FILE: fs/ext4/ialloc.c:789:
+     group, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#560: FILE: fs/ext4/ialloc.c:790:
+     prev_link_minode,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#561: FILE: fs/ext4/ialloc.c:791:
+     prev_link_bh,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#562: FILE: fs/ext4/ialloc.c:792:
+     prev_link_mino, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#562: FILE: fs/ext4/ialloc.c:792:
+     prev_link_mino, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#563: FILE: fs/ext4/ialloc.c:793:
+     new_ressize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: fs/ext4/ialloc.c:794:
+ if (ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#564: FILE: fs/ext4/ialloc.c:794:
+ if (ret) {
+ printk(KERN_DEBUG "failed to make new "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: fs/ext4/ialloc.c:795:
+ printk(KERN_DEBUG "failed to make new "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#565: FILE: fs/ext4/ialloc.c:795:
+ printk(KERN_DEBUG "failed to make new "

ERROR:TRAILING_WHITESPACE: trailing whitespace
#566: FILE: fs/ext4/ialloc.c:796:
+ "reserved area in group %d\n", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#566: FILE: fs/ext4/ialloc.c:796:
+ "reserved area in group %d\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#566: FILE: fs/ext4/ialloc.c:796:
+ printk(KERN_DEBUG "failed to make new "
+ "reserved area in group %d\n", 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#567: FILE: fs/ext4/ialloc.c:797:
+ group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#568: FILE: fs/ext4/ialloc.c:798:
+ spin_unlock(sb_bgl_lock(sbi, group));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#569: FILE: fs/ext4/ialloc.c:799:
+ return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#570: FILE: fs/ext4/ialloc.c:800:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#571: FILE: fs/ext4/ialloc.c:801:
+ printk(KERN_DEBUG "Success to make new reserved "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#571: FILE: fs/ext4/ialloc.c:801:
+ printk(KERN_DEBUG "Success to make new reserved "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#572: FILE: fs/ext4/ialloc.c:802:
+ "inodes area in group %d\n", group);$

WARNING:SPLIT_STRING: quoted string split across lines
#572: FILE: fs/ext4/ialloc.c:802:
+ printk(KERN_DEBUG "Success to make new reserved "
+ "inodes area in group %d\n", group);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#573: FILE: fs/ext4/ialloc.c:803:
+ spin_unlock(sb_bgl_lock(sbi, group));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#574: FILE: fs/ext4/ialloc.c:804:
+ return 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#575: FILE: fs/ext4/ialloc.c:805:
+ } $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#575: FILE: fs/ext4/ialloc.c:805:
+ } $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#576: FILE: fs/ext4/ialloc.c:806:
+ spin_unlock(sb_bgl_lock(sbi, group));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: fs/ext4/ialloc.c:807:
+ group = (group + 1) % sbi->s_groups_count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#578: FILE: fs/ext4/ialloc.c:808:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#579: FILE: fs/ext4/ialloc.c:809:
+ new_ressize = new_ressize >> 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#580: FILE: fs/ext4/ialloc.c:810:
+ if(new_ressize >= EXT4_INIT_RESERVE_INODES)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#580: FILE: fs/ext4/ialloc.c:810:
+ if(new_ressize >= EXT4_INIT_RESERVE_INODES)
+ goto try_new_ressize;

ERROR:SPACING: space required before the open parenthesis '('
#580: FILE: fs/ext4/ialloc.c:810:
+ if(new_ressize >= EXT4_INIT_RESERVE_INODES)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: fs/ext4/ialloc.c:811:
+ goto try_new_ressize;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#582: FILE: fs/ext4/ialloc.c:812:
+ return -EFAULT;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#585: FILE: fs/ext4/ialloc.c:815:
+static int ext4_inores_newfile_ino(handle_t * handle, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#585: FILE: fs/ext4/ialloc.c:815:
+static int ext4_inores_newfile_ino(handle_t * handle, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#586: FILE: fs/ext4/ialloc.c:816:
+    struct inode * dir, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#586: FILE: fs/ext4/ialloc.c:816:
+static int ext4_inores_newfile_ino(handle_t * handle, 
+    struct inode * dir, 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#586: FILE: fs/ext4/ialloc.c:816:
+    struct inode * dir, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#586: FILE: fs/ext4/ialloc.c:816:
+    struct inode * dir, 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#587: FILE: fs/ext4/ialloc.c:817:
+    unsigned long * ino)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#587: FILE: fs/ext4/ialloc.c:817:
+    unsigned long * ino)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#589: FILE: fs/ext4/ialloc.c:819:
+ struct super_block * sb;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#589: FILE: fs/ext4/ialloc.c:819:
+ struct super_block * sb;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#590: FILE: fs/ext4/ialloc.c:820:
+ struct ext4_sb_info * sbi;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#590: FILE: fs/ext4/ialloc.c:820:
+ struct ext4_sb_info * sbi;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#591: FILE: fs/ext4/ialloc.c:821:
+ unsigned long start_ino, end_ino;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#592: FILE: fs/ext4/ialloc.c:822:
+ int itable_offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#593: FILE: fs/ext4/ialloc.c:823:
+ int parent_group, prev_group, group;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#594: FILE: fs/ext4/ialloc.c:824:
+ int bitmap_size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#595: FILE: fs/ext4/ialloc.c:825:
+ struct buffer_head * bitmap_bh;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#595: FILE: fs/ext4/ialloc.c:825:
+ struct buffer_head * bitmap_bh;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#596: FILE: fs/ext4/ialloc.c:826:
+ struct ext4_iloc link_iloc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#597: FILE: fs/ext4/ialloc.c:827:
+ struct ext4_magic_inode * link_minode;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#597: FILE: fs/ext4/ialloc.c:827:
+ struct ext4_magic_inode * link_minode;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#598: FILE: fs/ext4/ialloc.c:828:
+ int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#600: FILE: fs/ext4/ialloc.c:830:
+ start_ino = dir->i_ino;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#601: FILE: fs/ext4/ialloc.c:831:
+ if((start_ino != EXT4_ROOT_INO) &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#601: FILE: fs/ext4/ialloc.c:831:
+ if((start_ino != EXT4_ROOT_INO) &&
[...]
+ printk(KERN_WARNING "directory inode %lu is not "

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'start_ino != EXT4_ROOT_INO'
#601: FILE: fs/ext4/ialloc.c:831:
+ if((start_ino != EXT4_ROOT_INO) &&
+    ((start_ino - 1) % EXT4_INIT_RESERVE_INODES) != 0) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open parenthesis '('
#601: FILE: fs/ext4/ialloc.c:831:
+ if((start_ino != EXT4_ROOT_INO) &&

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#602: FILE: fs/ext4/ialloc.c:832:
+    ((start_ino - 1) % EXT4_INIT_RESERVE_INODES) != 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#603: FILE: fs/ext4/ialloc.c:833:
+ printk(KERN_WARNING "directory inode %lu is not "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#603: FILE: fs/ext4/ialloc.c:833:
+ printk(KERN_WARNING "directory inode %lu is not "

ERROR:TRAILING_WHITESPACE: trailing whitespace
#604: FILE: fs/ext4/ialloc.c:834:
+ "%d inodes aligned.\n", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#604: FILE: fs/ext4/ialloc.c:834:
+ "%d inodes aligned.\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#604: FILE: fs/ext4/ialloc.c:834:
+ printk(KERN_WARNING "directory inode %lu is not "
+ "%d inodes aligned.\n", 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#605: FILE: fs/ext4/ialloc.c:835:
+ start_ino, EXT4_INIT_RESERVE_INODES);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#606: FILE: fs/ext4/ialloc.c:836:
+ return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#607: FILE: fs/ext4/ialloc.c:837:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#609: FILE: fs/ext4/ialloc.c:839:
+ sb = dir->i_sb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#610: FILE: fs/ext4/ialloc.c:840:
+ sbi = EXT4_SB(sb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#611: FILE: fs/ext4/ialloc.c:841:
+ group = parent_group = EXT4_I(dir)->i_block_group;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#611: FILE: fs/ext4/ialloc.c:841:
+ group = parent_group = EXT4_I(dir)->i_block_group;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#612: FILE: fs/ext4/ialloc.c:842:
+ if (start_ino == EXT4_ROOT_INO)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#612: FILE: fs/ext4/ialloc.c:842:
+ if (start_ino == EXT4_ROOT_INO)
+ end_ino = EXT4_INIT_RESERVE_INODES;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#613: FILE: fs/ext4/ialloc.c:843:
+ end_ino = EXT4_INIT_RESERVE_INODES;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#614: FILE: fs/ext4/ialloc.c:844:
+ else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#614: FILE: fs/ext4/ialloc.c:844:
+ else
+ end_ino = start_ino + EXT4_INIT_RESERVE_INODES - 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#615: FILE: fs/ext4/ialloc.c:845:
+ end_ino = start_ino + EXT4_INIT_RESERVE_INODES - 1;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#617: FILE: fs/ext4/ialloc.c:847:
+ if (unlikely(end_ino > $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#617: FILE: fs/ext4/ialloc.c:847:
+ if (unlikely(end_ino > $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#617: FILE: fs/ext4/ialloc.c:847:
+ if (unlikely(end_ino > 
[...]
+ printk(KERN_ERR "end_io %lu of directory inode %lu "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#618: FILE: fs/ext4/ialloc.c:848:
+ (parent_group + 1) * EXT4_INODES_PER_GROUP(sb))) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#619: FILE: fs/ext4/ialloc.c:849:
+ printk(KERN_ERR "end_io %lu of directory inode %lu "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#619: FILE: fs/ext4/ialloc.c:849:
+ printk(KERN_ERR "end_io %lu of directory inode %lu "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#620: FILE: fs/ext4/ialloc.c:850:
+ "exceeds inodes of group %d.\n",$

WARNING:SPLIT_STRING: quoted string split across lines
#620: FILE: fs/ext4/ialloc.c:850:
+ printk(KERN_ERR "end_io %lu of directory inode %lu "
+ "exceeds inodes of group %d.\n",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#621: FILE: fs/ext4/ialloc.c:851:
+ end_ino, start_ino, group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#622: FILE: fs/ext4/ialloc.c:852:
+ return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#623: FILE: fs/ext4/ialloc.c:853:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: fs/ext4/ialloc.c:854:
+ if (unlikely(end_ino <= EXT4_FIRST_INO(sb))) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#624: FILE: fs/ext4/ialloc.c:854:
+ if (unlikely(end_ino <= EXT4_FIRST_INO(sb))) {
+ printk(KERN_ERR "end_ino %lu is small than fs' first "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#625: FILE: fs/ext4/ialloc.c:855:
+ printk(KERN_ERR "end_ino %lu is small than fs' first "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#625: FILE: fs/ext4/ialloc.c:855:
+ printk(KERN_ERR "end_ino %lu is small than fs' first "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#626: FILE: fs/ext4/ialloc.c:856:
+ "inode %d.\n", end_ino, EXT4_FIRST_INO(sb));$

WARNING:SPLIT_STRING: quoted string split across lines
#626: FILE: fs/ext4/ialloc.c:856:
+ printk(KERN_ERR "end_ino %lu is small than fs' first "
+ "inode %d.\n", end_ino, EXT4_FIRST_INO(sb));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#627: FILE: fs/ext4/ialloc.c:857:
+ return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#628: FILE: fs/ext4/ialloc.c:858:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#630: FILE: fs/ext4/ialloc.c:860:
+ start_ino += 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#632: FILE: fs/ext4/ialloc.c:862:
+ prev_group = group;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#635: FILE: fs/ext4/ialloc.c:865:
+ unsigned long  loop_count = 0; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#635: FILE: fs/ext4/ialloc.c:865:
+ unsigned long  loop_count = 0; $

WARNING:LINE_SPACING: Missing a blank line after declarations
#636: FILE: fs/ext4/ialloc.c:866:
+ unsigned long  loop_count = 0; 
+ while(1) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#636: FILE: fs/ext4/ialloc.c:866:
+ while(1) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#636: FILE: fs/ext4/ialloc.c:866:
+ while(1) {
+ printk(KERN_INFO "try group %d\n", group);

ERROR:SPACING: space required before the open parenthesis '('
#636: FILE: fs/ext4/ialloc.c:866:
+ while(1) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#637: FILE: fs/ext4/ialloc.c:867:
+ printk(KERN_INFO "try group %d\n", group);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#637: FILE: fs/ext4/ialloc.c:867:
+ printk(KERN_INFO "try group %d\n", group);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#638: FILE: fs/ext4/ialloc.c:868:
+ bitmap_bh = read_inode_bitmap(sb, group);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#639: FILE: fs/ext4/ialloc.c:869:
+ if (!bitmap_bh) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#639: FILE: fs/ext4/ialloc.c:869:
+ if (!bitmap_bh) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#639: FILE: fs/ext4/ialloc.c:869:
+ if (!bitmap_bh) 
+ return -EIO;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#640: FILE: fs/ext4/ialloc.c:870:
+ return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#642: FILE: fs/ext4/ialloc.c:872:
+ loop_count += 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#643: FILE: fs/ext4/ialloc.c:873:
+ if (loop_count > 10000000){$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#643: FILE: fs/ext4/ialloc.c:873:
+ if (loop_count > 10000000){
+ brelse(bitmap_bh);

ERROR:SPACING: space required before the open brace '{'
#643: FILE: fs/ext4/ialloc.c:873:
+ if (loop_count > 10000000){

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#644: FILE: fs/ext4/ialloc.c:874:
+ brelse(bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#645: FILE: fs/ext4/ialloc.c:875:
+ printk("too much time dead loop\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#645: FILE: fs/ext4/ialloc.c:875:
+ printk("too much time dead loop\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#646: FILE: fs/ext4/ialloc.c:876:
+ return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#647: FILE: fs/ext4/ialloc.c:877:
+ }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#648: FILE: fs/ext4/ialloc.c:878:
+ itable_offset = (start_ino - 1) % $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#648: FILE: fs/ext4/ialloc.c:878:
+ itable_offset = (start_ino - 1) % $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#649: FILE: fs/ext4/ialloc.c:879:
+ EXT4_INODES_PER_GROUP(sb);$

CHECK:SPACING: No space is necessary after a cast
#650: FILE: fs/ext4/ialloc.c:880:
+ bitmap_size = (end_ino - 1) % EXT4_INODES_PER_GROUP(sb) + 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#650: FILE: fs/ext4/ialloc.c:880:
+ bitmap_size = (end_ino - 1) % EXT4_INODES_PER_GROUP(sb) + 1;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#651: FILE: fs/ext4/ialloc.c:881:
+ /* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#652: FILE: fs/ext4/ialloc.c:882:
+ * should use a function here $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#652: FILE: fs/ext4/ialloc.c:882:
+ /* 
+ * should use a function here 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#654: FILE: fs/ext4/ialloc.c:884:
+ printk("bitmap_size: %d, itable_offset: %d\n", bitmap_size,$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#654: FILE: fs/ext4/ialloc.c:884:
+ printk("bitmap_size: %d, itable_offset: %d\n", bitmap_size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#656: FILE: fs/ext4/ialloc.c:885:
+ printk("bitmap_size: %d, itable_offset: %d\n", bitmap_size,
+ * ino = ext4_find_next_zero_bit((unsigned long *)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#656: FILE: fs/ext4/ialloc.c:885:
+ * ino = ext4_find_next_zero_bit((unsigned long *)$

ERROR:SPACING: space prohibited after that '*' (ctx:ExW)
#656: FILE: fs/ext4/ialloc.c:885:
+ * ino = ext4_find_next_zero_bit((unsigned long *)
  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#657: FILE: fs/ext4/ialloc.c:886:
+ bitmap_bh->b_data, bitmap_size, itable_offset);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#660: FILE: fs/ext4/ialloc.c:889:
+ printk("find offset %lu in group %d [%d - %d] inodes [%lu - %lu]\n", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#660: FILE: fs/ext4/ialloc.c:889:
+ printk("find offset %lu in group %d [%d - %d] inodes [%lu - %lu]\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#660: FILE: fs/ext4/ialloc.c:889:
+ printk("find offset %lu in group %d [%d - %d] inodes [%lu - %lu]\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#661: FILE: fs/ext4/ialloc.c:890:
+ printk("find offset %lu in group %d [%d - %d] inodes [%lu - %lu]\n", 
+ * ino, group, itable_offset, bitmap_size - 1,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#661: FILE: fs/ext4/ialloc.c:890:
+ * ino, group, itable_offset, bitmap_size - 1,$

ERROR:SPACING: space prohibited after that '*' (ctx:ExW)
#661: FILE: fs/ext4/ialloc.c:890:
+ * ino, group, itable_offset, bitmap_size - 1,
  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#662: FILE: fs/ext4/ialloc.c:891:
+ start_ino, end_ino);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#663: FILE: fs/ext4/ialloc.c:892:
+ if ((* ino) < bitmap_size) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#663: FILE: fs/ext4/ialloc.c:892:
+ if ((* ino) < bitmap_size) {
+ BUFFER_TRACE(bitmap_bh, "get_write_access");

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#663: FILE: fs/ext4/ialloc.c:892:
+ if ((* ino) < bitmap_size) {
       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#664: FILE: fs/ext4/ialloc.c:893:
+ BUFFER_TRACE(bitmap_bh, "get_write_access");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#665: FILE: fs/ext4/ialloc.c:894:
+ ret = ext4_journal_get_write_access(handle, bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#666: FILE: fs/ext4/ialloc.c:895:
+ if(ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#666: FILE: fs/ext4/ialloc.c:895:
+ if(ret) {
+ brelse(bitmap_bh);

ERROR:SPACING: space required before the open parenthesis '('
#666: FILE: fs/ext4/ialloc.c:895:
+ if(ret) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#667: FILE: fs/ext4/ialloc.c:896:
+ brelse(bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#668: FILE: fs/ext4/ialloc.c:897:
+ return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#669: FILE: fs/ext4/ialloc.c:898:
+ }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#670: FILE: fs/ext4/ialloc.c:899:
+ if(!ext4_set_bit_atomic(sb_bgl_lock(sbi, group), $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#670: FILE: fs/ext4/ialloc.c:899:
+ if(!ext4_set_bit_atomic(sb_bgl_lock(sbi, group), $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#670: FILE: fs/ext4/ialloc.c:899:
+ if(!ext4_set_bit_atomic(sb_bgl_lock(sbi, group), 
[...]
+ BUFFER_TRACE(bitmap_bh, 

ERROR:SPACING: space required before the open parenthesis '('
#670: FILE: fs/ext4/ialloc.c:899:
+ if(!ext4_set_bit_atomic(sb_bgl_lock(sbi, group), 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#671: FILE: fs/ext4/ialloc.c:900:
+ if(!ext4_set_bit_atomic(sb_bgl_lock(sbi, group), 
+ * ino, bitmap_bh->b_data)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#671: FILE: fs/ext4/ialloc.c:900:
+ * ino, bitmap_bh->b_data)) {$

ERROR:SPACING: space prohibited after that '*' (ctx:ExW)
#671: FILE: fs/ext4/ialloc.c:900:
+ * ino, bitmap_bh->b_data)) {
  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#672: FILE: fs/ext4/ialloc.c:901:
+ BUFFER_TRACE(bitmap_bh, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#672: FILE: fs/ext4/ialloc.c:901:
+ BUFFER_TRACE(bitmap_bh, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#673: FILE: fs/ext4/ialloc.c:902:
+ BUFFER_TRACE(bitmap_bh, 
+ "call ext4_journal_dirty_metadata");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#673: FILE: fs/ext4/ialloc.c:902:
+ "call ext4_journal_dirty_metadata");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#674: FILE: fs/ext4/ialloc.c:903:
+ ret = ext4_journal_dirty_metadata(handle,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#675: FILE: fs/ext4/ialloc.c:904:
+ ret = ext4_journal_dirty_metadata(handle,
+ bitmap_bh);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#675: FILE: fs/ext4/ialloc.c:904:
+ bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#676: FILE: fs/ext4/ialloc.c:905:
+ if(ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#676: FILE: fs/ext4/ialloc.c:905:
+ if(ret) {
+ brelse (bitmap_bh);

ERROR:SPACING: space required before the open parenthesis '('
#676: FILE: fs/ext4/ialloc.c:905:
+ if(ret) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#677: FILE: fs/ext4/ialloc.c:906:
+ brelse (bitmap_bh);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#677: FILE: fs/ext4/ialloc.c:906:
+ brelse (bitmap_bh);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#678: FILE: fs/ext4/ialloc.c:907:
+ return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#679: FILE: fs/ext4/ialloc.c:908:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#680: FILE: fs/ext4/ialloc.c:909:
+ brelse(bitmap_bh);$

CHECK:SPACING: No space is necessary after a cast
#681: FILE: fs/ext4/ialloc.c:910:
+ * ino = group * EXT4_INODES_PER_GROUP(sb) +

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#681: FILE: fs/ext4/ialloc.c:910:
+ * ino = group * EXT4_INODES_PER_GROUP(sb) +$

ERROR:SPACING: space prohibited after that '*' (ctx:ExW)
#681: FILE: fs/ext4/ialloc.c:910:
+ * ino = group * EXT4_INODES_PER_GROUP(sb) +
  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#682: FILE: fs/ext4/ialloc.c:911:
+ (* ino) + 1;$

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#682: FILE: fs/ext4/ialloc.c:911:
+ (* ino) + 1;
   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#683: FILE: fs/ext4/ialloc.c:912:
+ return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#684: FILE: fs/ext4/ialloc.c:913:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#685: FILE: fs/ext4/ialloc.c:914:
+ printk("offset %lu set in bitmap already.\n", * ino);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#685: FILE: fs/ext4/ialloc.c:914:
+ printk("offset %lu set in bitmap already.\n", * ino);

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#685: FILE: fs/ext4/ialloc.c:914:
+ printk("offset %lu set in bitmap already.\n", * ino);
                                                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#686: FILE: fs/ext4/ialloc.c:915:
+ jbd2_journal_release_buffer(handle, bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#687: FILE: fs/ext4/ialloc.c:916:
+ goto repeat_in_this_group;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#688: FILE: fs/ext4/ialloc.c:917:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#689: FILE: fs/ext4/ialloc.c:918:
+ ret = ext4_get_magic_inode_loc(sb, end_ino, &link_iloc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#690: FILE: fs/ext4/ialloc.c:919:
+ if (ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#690: FILE: fs/ext4/ialloc.c:919:
+ if (ret) {
+ printk (KERN_ERR "failed to get magic inode %lu "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#691: FILE: fs/ext4/ialloc.c:920:
+ printk (KERN_ERR "failed to get magic inode %lu "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#691: FILE: fs/ext4/ialloc.c:920:
+ printk (KERN_ERR "failed to get magic inode %lu "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#691: FILE: fs/ext4/ialloc.c:920:
+ printk (KERN_ERR "failed to get magic inode %lu "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#692: FILE: fs/ext4/ialloc.c:921:
+ "from group %d\n", end_ino, group);$

WARNING:SPLIT_STRING: quoted string split across lines
#692: FILE: fs/ext4/ialloc.c:921:
+ printk (KERN_ERR "failed to get magic inode %lu "
+ "from group %d\n", end_ino, group);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#693: FILE: fs/ext4/ialloc.c:922:
+ brelse(bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#694: FILE: fs/ext4/ialloc.c:923:
+ return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#695: FILE: fs/ext4/ialloc.c:924:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#696: FILE: fs/ext4/ialloc.c:925:
+ link_minode = (struct ext4_magic_inode *)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#697: FILE: fs/ext4/ialloc.c:926:
+ ((char *)link_iloc.bh->b_data + link_iloc.offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#698: FILE: fs/ext4/ialloc.c:927:
+ if(!ext4_magic_inode(link_minode, EXT4_MINODE_TYPE_LINK)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#698: FILE: fs/ext4/ialloc.c:927:
+ if(!ext4_magic_inode(link_minode, EXT4_MINODE_TYPE_LINK)) {
+ printk(KERN_ERR "inode %lu is not a EXT4_MINODE_TYPE_LINK "

ERROR:SPACING: space required before the open parenthesis '('
#698: FILE: fs/ext4/ialloc.c:927:
+ if(!ext4_magic_inode(link_minode, EXT4_MINODE_TYPE_LINK)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#699: FILE: fs/ext4/ialloc.c:928:
+ printk(KERN_ERR "inode %lu is not a EXT4_MINODE_TYPE_LINK "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#699: FILE: fs/ext4/ialloc.c:928:
+ printk(KERN_ERR "inode %lu is not a EXT4_MINODE_TYPE_LINK "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#700: FILE: fs/ext4/ialloc.c:929:
+ "magic inode.\n", end_ino);$

WARNING:SPLIT_STRING: quoted string split across lines
#700: FILE: fs/ext4/ialloc.c:929:
+ printk(KERN_ERR "inode %lu is not a EXT4_MINODE_TYPE_LINK "
+ "magic inode.\n", end_ino);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#701: FILE: fs/ext4/ialloc.c:930:
+ brelse(bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#702: FILE: fs/ext4/ialloc.c:931:
+ brelse(link_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#703: FILE: fs/ext4/ialloc.c:932:
+ return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#704: FILE: fs/ext4/ialloc.c:933:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#705: FILE: fs/ext4/ialloc.c:934:
+ printk("preextend, link_minode->mi_next_ino: %lu\n",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#705: FILE: fs/ext4/ialloc.c:934:
+ printk("preextend, link_minode->mi_next_ino: %lu\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#706: FILE: fs/ext4/ialloc.c:935:
+ printk("preextend, link_minode->mi_next_ino: %lu\n",
+ (unsigned long)le32_to_cpu(link_minode->mi_next_ino));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#706: FILE: fs/ext4/ialloc.c:935:
+ (unsigned long)le32_to_cpu(link_minode->mi_next_ino));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#707: FILE: fs/ext4/ialloc.c:936:
+ if (le32_to_cpu(link_minode->mi_next_ino) == 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#707: FILE: fs/ext4/ialloc.c:936:
+ if (le32_to_cpu(link_minode->mi_next_ino) == 0) {
+ ret = ext4_reserve_inodes_area(handle, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#708: FILE: fs/ext4/ialloc.c:937:
+ ret = ext4_reserve_inodes_area(handle, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#708: FILE: fs/ext4/ialloc.c:937:
+ ret = ext4_reserve_inodes_area(handle, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#709: FILE: fs/ext4/ialloc.c:938:
+ sb, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#709: FILE: fs/ext4/ialloc.c:938:
+ ret = ext4_reserve_inodes_area(handle, 
+ sb, 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#709: FILE: fs/ext4/ialloc.c:938:
+ sb, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#710: FILE: fs/ext4/ialloc.c:939:
+ dir,  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#710: FILE: fs/ext4/ialloc.c:939:
+ dir,  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#711: FILE: fs/ext4/ialloc.c:940:
+ link_minode, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#711: FILE: fs/ext4/ialloc.c:940:
+ link_minode, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#712: FILE: fs/ext4/ialloc.c:941:
+ link_iloc.bh, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#712: FILE: fs/ext4/ialloc.c:941:
+ link_iloc.bh, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#713: FILE: fs/ext4/ialloc.c:942:
+ end_ino); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#713: FILE: fs/ext4/ialloc.c:942:
+ end_ino); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#714: FILE: fs/ext4/ialloc.c:943:
+ if (ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#714: FILE: fs/ext4/ialloc.c:943:
+ if (ret) {
+ printk(KERN_ERR "get new reserve inodes area after "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#715: FILE: fs/ext4/ialloc.c:944:
+ printk(KERN_ERR "get new reserve inodes area after "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#715: FILE: fs/ext4/ialloc.c:944:
+ printk(KERN_ERR "get new reserve inodes area after "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#716: FILE: fs/ext4/ialloc.c:945:
+ "area [%lu - %lu] failed.\n",$

WARNING:SPLIT_STRING: quoted string split across lines
#716: FILE: fs/ext4/ialloc.c:945:
+ printk(KERN_ERR "get new reserve inodes area after "
+ "area [%lu - %lu] failed.\n",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#717: FILE: fs/ext4/ialloc.c:946:
+ start_ino, end_ino);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#718: FILE: fs/ext4/ialloc.c:947:
+ brelse(bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#719: FILE: fs/ext4/ialloc.c:948:
+ brelse(link_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#720: FILE: fs/ext4/ialloc.c:949:
+ return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#721: FILE: fs/ext4/ialloc.c:950:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#722: FILE: fs/ext4/ialloc.c:951:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#723: FILE: fs/ext4/ialloc.c:952:
+ printk("afterextend, link_minode->mi_next_ino: %lu\n",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#723: FILE: fs/ext4/ialloc.c:952:
+ printk("afterextend, link_minode->mi_next_ino: %lu\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#724: FILE: fs/ext4/ialloc.c:953:
+ printk("afterextend, link_minode->mi_next_ino: %lu\n",
+ (unsigned long)le32_to_cpu(link_minode->mi_next_ino));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#724: FILE: fs/ext4/ialloc.c:953:
+ (unsigned long)le32_to_cpu(link_minode->mi_next_ino));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#725: FILE: fs/ext4/ialloc.c:954:
+ start_ino = le32_to_cpu(link_minode->mi_next_ino);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#726: FILE: fs/ext4/ialloc.c:955:
+ end_ino = start_ino + $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#726: FILE: fs/ext4/ialloc.c:955:
+ end_ino = start_ino + $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#727: FILE: fs/ext4/ialloc.c:956:
+   le32_to_cpu(link_minode->mi_next_ressize) - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#728: FILE: fs/ext4/ialloc.c:957:
+ brelse (link_iloc.bh);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#728: FILE: fs/ext4/ialloc.c:957:
+ brelse (link_iloc.bh);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#729: FILE: fs/ext4/ialloc.c:958:
+ group = (start_ino - 1) / EXT4_INODES_PER_GROUP(sb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#730: FILE: fs/ext4/ialloc.c:959:
+ printk("prev_group: %d, group: %d, start_ino: %lu, end_ino: %lu\n",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#730: FILE: fs/ext4/ialloc.c:959:
+ printk("prev_group: %d, group: %d, start_ino: %lu, end_ino: %lu\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#731: FILE: fs/ext4/ialloc.c:960:
+ printk("prev_group: %d, group: %d, start_ino: %lu, end_ino: %lu\n",
+ prev_group, group, start_ino, end_ino);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#731: FILE: fs/ext4/ialloc.c:960:
+ prev_group, group, start_ino, end_ino);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#732: FILE: fs/ext4/ialloc.c:961:
+ if (group == prev_group) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#732: FILE: fs/ext4/ialloc.c:961:
+ if (group == prev_group) {
+ printk("try same group %d.\n", prev_group);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#733: FILE: fs/ext4/ialloc.c:962:
+ printk("try same group %d.\n", prev_group);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#733: FILE: fs/ext4/ialloc.c:962:
+ printk("try same group %d.\n", prev_group);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#734: FILE: fs/ext4/ialloc.c:963:
+ goto repeat_in_this_group;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#735: FILE: fs/ext4/ialloc.c:964:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#736: FILE: fs/ext4/ialloc.c:965:
+ printk("try new group %d.\n", group);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#736: FILE: fs/ext4/ialloc.c:965:
+ printk("try new group %d.\n", group);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#737: FILE: fs/ext4/ialloc.c:966:
+ prev_group = group;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#738: FILE: fs/ext4/ialloc.c:967:
+ brelse(bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#739: FILE: fs/ext4/ialloc.c:968:
+ }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#740: FILE: fs/ext4/ialloc.c:969:
+ printk(" ============= loop end ========= \n"); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#740: FILE: fs/ext4/ialloc.c:969:
+ printk(" ============= loop end ========= \n"); $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#740: FILE: fs/ext4/ialloc.c:969:
+ printk(" ============= loop end ========= \n"); 

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#740: FILE: fs/ext4/ialloc.c:969:
+ printk(" ============= loop end ========= \n"); 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#741: FILE: fs/ext4/ialloc.c:970:
+ return -EINVAL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#744: FILE: fs/ext4/ialloc.c:973:
+static int ext4_find_inores_ino(handle_t * handle, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#744: FILE: fs/ext4/ialloc.c:973:
+static int ext4_find_inores_ino(handle_t * handle, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#745: FILE: fs/ext4/ialloc.c:974:
+ struct inode * dir, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#745: FILE: fs/ext4/ialloc.c:974:
+static int ext4_find_inores_ino(handle_t * handle, 
+ struct inode * dir, 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#745: FILE: fs/ext4/ialloc.c:974:
+ struct inode * dir, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#745: FILE: fs/ext4/ialloc.c:974:
+ struct inode * dir, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#746: FILE: fs/ext4/ialloc.c:975:
+ int mode, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#746: FILE: fs/ext4/ialloc.c:975:
+ int mode, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#747: FILE: fs/ext4/ialloc.c:976:
+ time_t ctime,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#748: FILE: fs/ext4/ialloc.c:977:
+ unsigned long * ino)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#748: FILE: fs/ext4/ialloc.c:977:
+ unsigned long * ino)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#750: FILE: fs/ext4/ialloc.c:979:
+{
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#751: FILE: fs/ext4/ialloc.c:980:
+ struct super_block *sb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#752: FILE: fs/ext4/ialloc.c:981:
+ int ret = -EINVAL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#753: FILE: fs/ext4/ialloc.c:982:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#753: FILE: fs/ext4/ialloc.c:982:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#754: FILE: fs/ext4/ialloc.c:983:
+ sb = dir->i_sb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#755: FILE: fs/ext4/ialloc.c:984:
+ if (!test_opt(sb, INORES))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#755: FILE: fs/ext4/ialloc.c:984:
+ if (!test_opt(sb, INORES))
+ return ret;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#756: FILE: fs/ext4/ialloc.c:985:
+ return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#758: FILE: fs/ext4/ialloc.c:987:
+ if (S_ISDIR(mode))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#758: FILE: fs/ext4/ialloc.c:987:
+ if (S_ISDIR(mode))
+ ret = ext4_inores_newdir_ino(handle, dir, ctime, ino);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#759: FILE: fs/ext4/ialloc.c:988:
+ ret = ext4_inores_newdir_ino(handle, dir, ctime, ino);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#760: FILE: fs/ext4/ialloc.c:989:
+ else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#760: FILE: fs/ext4/ialloc.c:989:
+ else
+ ret = ext4_inores_newfile_ino(handle, dir, ino);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#761: FILE: fs/ext4/ialloc.c:990:
+ ret = ext4_inores_newfile_ino(handle, dir, ino);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#762: FILE: fs/ext4/ialloc.c:991:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#762: FILE: fs/ext4/ialloc.c:991:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#763: FILE: fs/ext4/ialloc.c:992:
+ return ret;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#766: FILE: fs/ext4/ialloc.c:995:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#789: FILE: fs/ext4/ialloc.c:1018:
+ struct timespec ctime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#799: FILE: fs/ext4/ialloc.c:1037:
+ ctime = ext4_current_time(inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#800: FILE: fs/ext4/ialloc.c:1038:
+ if (test_opt (sb, INORES)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#800: FILE: fs/ext4/ialloc.c:1038:
+ if (test_opt (sb, INORES)) {
+ err = ext4_find_inores_ino(handle, dir, mode, ctime.tv_sec, &ino);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#800: FILE: fs/ext4/ialloc.c:1038:
+ if (test_opt (sb, INORES)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#801: FILE: fs/ext4/ialloc.c:1039:
+ err = ext4_find_inores_ino(handle, dir, mode, ctime.tv_sec, &ino);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#802: FILE: fs/ext4/ialloc.c:1040:
+ if (err)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#802: FILE: fs/ext4/ialloc.c:1040:
+ if (err)
[...]
+ return ERR_PTR(-ENOSPC); /* for test now */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#804: FILE: fs/ext4/ialloc.c:1042:
+ return ERR_PTR(-ENOSPC); /* for test now */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#805: FILE: fs/ext4/ialloc.c:1043:
+ if (ino > 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#805: FILE: fs/ext4/ialloc.c:1043:
+ if (ino > 0) {
+ group  = (ino - 1) / EXT4_INODES_PER_GROUP(sb);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#806: FILE: fs/ext4/ialloc.c:1044:
+ group  = (ino - 1) / EXT4_INODES_PER_GROUP(sb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#807: FILE: fs/ext4/ialloc.c:1045:
+ gdp = ext4_get_group_desc(sb, group, &bh2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#808: FILE: fs/ext4/ialloc.c:1046:
+ if (!gdp)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#808: FILE: fs/ext4/ialloc.c:1046:
+ if (!gdp)
+ goto fail;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#809: FILE: fs/ext4/ialloc.c:1047:
+ goto fail;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#810: FILE: fs/ext4/ialloc.c:1048:
+ printk("find ino %lu in group %d from ext4_find_inores_ino.\n",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#810: FILE: fs/ext4/ialloc.c:1048:
+ printk("find ino %lu in group %d from ext4_find_inores_ino.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#811: FILE: fs/ext4/ialloc.c:1049:
+ printk("find ino %lu in group %d from ext4_find_inores_ino.\n",
+ ino, group);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#811: FILE: fs/ext4/ialloc.c:1049:
+ ino, group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#812: FILE: fs/ext4/ialloc.c:1050:
+ goto inores_got;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#813: FILE: fs/ext4/ialloc.c:1051:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#814: FILE: fs/ext4/ialloc.c:1052:
+ printk(KERN_INFO "can not find inode from reserved inodes "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#814: FILE: fs/ext4/ialloc.c:1052:
+ printk(KERN_INFO "can not find inode from reserved inodes "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#815: FILE: fs/ext4/ialloc.c:1053:
+ "area, disable inode reservation for "$

WARNING:SPLIT_STRING: quoted string split across lines
#815: FILE: fs/ext4/ialloc.c:1053:
+ printk(KERN_INFO "can not find inode from reserved inodes "
+ "area, disable inode reservation for "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#816: FILE: fs/ext4/ialloc.c:1054:
+ "directory now.\n");$

WARNING:SPLIT_STRING: quoted string split across lines
#816: FILE: fs/ext4/ialloc.c:1054:
+ "area, disable inode reservation for "
+ "directory now.\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#817: FILE: fs/ext4/ialloc.c:1055:
+ return ERR_PTR(-ENOSPC); /* for test now */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#818: FILE: fs/ext4/ialloc.c:1056:
+ clear_opt (sbi->s_mount_opt, INORES);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#818: FILE: fs/ext4/ialloc.c:1056:
+ clear_opt (sbi->s_mount_opt, INORES);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#819: FILE: fs/ext4/ialloc.c:1057:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#821: FILE: fs/ext4/ialloc.c:1059:
+ return ERR_PTR(-ENOSPC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#834: FILE: fs/ext4/ialloc.c:1131:
+     "reserved inode or inode > inodes count -- "$

ERROR:CODE_INDENT: code indent should use tabs where possible
#843: FILE: fs/ext4/ialloc.c:1173:
+        ctime;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#843: FILE: fs/ext4/ialloc.c:1173:
+        ctime;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#857: FILE: fs/ext4/inode.c:3332:
+int ext4_magic_inode(struct ext4_magic_inode * magic_inode, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#857: FILE: fs/ext4/inode.c:3332:
+int ext4_magic_inode(struct ext4_magic_inode * magic_inode, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#858: FILE: fs/ext4/inode.c:3333:
+int ext4_magic_inode(struct ext4_magic_inode * magic_inode, 
+ int type)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#858: FILE: fs/ext4/inode.c:3333:
+ int type)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#860: FILE: fs/ext4/inode.c:3335:
+ int i, sum;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#861: FILE: fs/ext4/inode.c:3336:
+ int i, sum;
+ if(le32_to_cpu(magic_inode->mi_zeropad) != 0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#861: FILE: fs/ext4/inode.c:3336:
+ if(le32_to_cpu(magic_inode->mi_zeropad) != 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#861: FILE: fs/ext4/inode.c:3336:
+ if(le32_to_cpu(magic_inode->mi_zeropad) != 0)
+ return 0;

ERROR:SPACING: space required before the open parenthesis '('
#861: FILE: fs/ext4/inode.c:3336:
+ if(le32_to_cpu(magic_inode->mi_zeropad) != 0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#862: FILE: fs/ext4/inode.c:3337:
+ return 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#863: FILE: fs/ext4/inode.c:3338:
+ if(strncmp(magic_inode->mi_magic, EXT4_MINODE_MAGIC_STR, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#863: FILE: fs/ext4/inode.c:3338:
+ if(strncmp(magic_inode->mi_magic, EXT4_MINODE_MAGIC_STR, $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#863: FILE: fs/ext4/inode.c:3338:
+ if(strncmp(magic_inode->mi_magic, EXT4_MINODE_MAGIC_STR, 
[...]
+ return 0;

ERROR:SPACING: space required before the open parenthesis '('
#863: FILE: fs/ext4/inode.c:3338:
+ if(strncmp(magic_inode->mi_magic, EXT4_MINODE_MAGIC_STR, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#864: FILE: fs/ext4/inode.c:3339:
+ if(strncmp(magic_inode->mi_magic, EXT4_MINODE_MAGIC_STR, 
+ EXT4_MINODE_MAGIC_LEN))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#864: FILE: fs/ext4/inode.c:3339:
+ EXT4_MINODE_MAGIC_LEN))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#865: FILE: fs/ext4/inode.c:3340:
+ return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#866: FILE: fs/ext4/inode.c:3341:
+ sum = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#867: FILE: fs/ext4/inode.c:3342:
+ for(i = 0; i < EXT4_MINODE_MAGIC_LEN; i ++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#867: FILE: fs/ext4/inode.c:3342:
+ for(i = 0; i < EXT4_MINODE_MAGIC_LEN; i ++)
+ sum += magic_inode->mi_magic[i];

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#867: FILE: fs/ext4/inode.c:3342:
+ for(i = 0; i < EXT4_MINODE_MAGIC_LEN; i ++)
                                          ^

ERROR:SPACING: space required before the open parenthesis '('
#867: FILE: fs/ext4/inode.c:3342:
+ for(i = 0; i < EXT4_MINODE_MAGIC_LEN; i ++)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#868: FILE: fs/ext4/inode.c:3343:
+ sum += magic_inode->mi_magic[i];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#869: FILE: fs/ext4/inode.c:3344:
+ if(sum + le32_to_cpu(magic_inode->mi_checksum) != 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#869: FILE: fs/ext4/inode.c:3344:
+ if(sum + le32_to_cpu(magic_inode->mi_checksum) != 0)
+ return 0;

ERROR:SPACING: space required before the open parenthesis '('
#869: FILE: fs/ext4/inode.c:3344:
+ if(sum + le32_to_cpu(magic_inode->mi_checksum) != 0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#870: FILE: fs/ext4/inode.c:3345:
+ return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#871: FILE: fs/ext4/inode.c:3346:
+ if(le32_to_cpu(magic_inode->mi_type) != type)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#871: FILE: fs/ext4/inode.c:3346:
+ if(le32_to_cpu(magic_inode->mi_type) != type)
+ return 0;

ERROR:SPACING: space required before the open parenthesis '('
#871: FILE: fs/ext4/inode.c:3346:
+ if(le32_to_cpu(magic_inode->mi_type) != type)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#872: FILE: fs/ext4/inode.c:3347:
+ return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#873: FILE: fs/ext4/inode.c:3348:
+ return 1;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#876: FILE: fs/ext4/inode.c:3351:
+void ext4_init_magic_inode(struct ext4_magic_inode * magic_inode,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#877: FILE: fs/ext4/inode.c:3352:
+void ext4_init_magic_inode(struct ext4_magic_inode * magic_inode,
+ int type)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#877: FILE: fs/ext4/inode.c:3352:
+ int type)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#879: FILE: fs/ext4/inode.c:3354:
+ int i, sum;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#880: FILE: fs/ext4/inode.c:3355:
+ int i, sum;
+ memset(magic_inode, 0, sizeof(struct ext4_magic_inode));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#880: FILE: fs/ext4/inode.c:3355:
+ memset(magic_inode, 0, sizeof(struct ext4_magic_inode));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#881: FILE: fs/ext4/inode.c:3356:
+ memcpy(magic_inode->mi_magic, EXT4_MINODE_MAGIC_STR,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#882: FILE: fs/ext4/inode.c:3357:
+ EXT4_MINODE_MAGIC_LEN); $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#882: FILE: fs/ext4/inode.c:3357:
+ memcpy(magic_inode->mi_magic, EXT4_MINODE_MAGIC_STR,
+ EXT4_MINODE_MAGIC_LEN); 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#882: FILE: fs/ext4/inode.c:3357:
+ EXT4_MINODE_MAGIC_LEN); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#883: FILE: fs/ext4/inode.c:3358:
+ sum = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#884: FILE: fs/ext4/inode.c:3359:
+ for(i = 0; i < EXT4_MINODE_MAGIC_LEN; i ++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#884: FILE: fs/ext4/inode.c:3359:
+ for(i = 0; i < EXT4_MINODE_MAGIC_LEN; i ++)
+ sum += magic_inode->mi_magic[i];

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#884: FILE: fs/ext4/inode.c:3359:
+ for(i = 0; i < EXT4_MINODE_MAGIC_LEN; i ++)
                                          ^

ERROR:SPACING: space required before the open parenthesis '('
#884: FILE: fs/ext4/inode.c:3359:
+ for(i = 0; i < EXT4_MINODE_MAGIC_LEN; i ++)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#885: FILE: fs/ext4/inode.c:3360:
+ sum += magic_inode->mi_magic[i];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#886: FILE: fs/ext4/inode.c:3361:
+ magic_inode->mi_checksum = cpu_to_le32(0 - sum);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#887: FILE: fs/ext4/inode.c:3362:
+ magic_inode->mi_type = cpu_to_le32(type);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#890: FILE: fs/ext4/inode.c:3365:
+unsigned long ext4_get_group_lastres_ino(struct super_block * sb, int

ERROR:CODE_INDENT: code indent should use tabs where possible
#893: FILE: fs/ext4/inode.c:3367:
+        unsigned long lastres_ino;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#893: FILE: fs/ext4/inode.c:3367:
+        unsigned long lastres_ino;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#894: FILE: fs/ext4/inode.c:3368:
+        lastres_ino = (group + 1) * EXT4_INODES_PER_GROUP(sb) - 1;$

CHECK:SPACING: No space is necessary after a cast
#894: FILE: fs/ext4/inode.c:3368:
+        lastres_ino = (group + 1) * EXT4_INODES_PER_GROUP(sb) - 1;

WARNING:LINE_SPACING: Missing a blank line after declarations
#894: FILE: fs/ext4/inode.c:3368:
+        unsigned long lastres_ino;
+        lastres_ino = (group + 1) * EXT4_INODES_PER_GROUP(sb) - 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#894: FILE: fs/ext4/inode.c:3368:
+        lastres_ino = (group + 1) * EXT4_INODES_PER_GROUP(sb) - 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#895: FILE: fs/ext4/inode.c:3369:
+        return lastres_ino;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#895: FILE: fs/ext4/inode.c:3369:
+        return lastres_ino;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#898: FILE: fs/ext4/inode.c:3372:
+int  ext4_get_magic_inode_loc(struct super_block * sb, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#898: FILE: fs/ext4/inode.c:3372:
+int  ext4_get_magic_inode_loc(struct super_block * sb, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#899: FILE: fs/ext4/inode.c:3373:
+int  ext4_get_magic_inode_loc(struct super_block * sb, 
+       unsigned long ino,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#899: FILE: fs/ext4/inode.c:3373:
+       unsigned long ino,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#900: FILE: fs/ext4/inode.c:3374:
+       struct ext4_iloc * iloc)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#900: FILE: fs/ext4/inode.c:3374:
+       struct ext4_iloc * iloc)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#902: FILE: fs/ext4/inode.c:3376:
+ unsigned long block_group, group_desc, desc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#903: FILE: fs/ext4/inode.c:3377:
+ unsigned long block, offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#904: FILE: fs/ext4/inode.c:3378:
+ struct buffer_head * bh;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#904: FILE: fs/ext4/inode.c:3378:
+ struct buffer_head * bh;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#905: FILE: fs/ext4/inode.c:3379:
+ struct ext4_group_desc * gdp;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#905: FILE: fs/ext4/inode.c:3379:
+ struct ext4_group_desc * gdp;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#907: FILE: fs/ext4/inode.c:3381:
+ block_group = (ino - 1) / EXT4_INODES_PER_GROUP(sb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#908: FILE: fs/ext4/inode.c:3382:
+ if(block_group >= EXT4_SB(sb)->s_groups_count) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#908: FILE: fs/ext4/inode.c:3382:
+ if(block_group >= EXT4_SB(sb)->s_groups_count) {
+ ext4_error(sb, "ext4_get_magic_inode_loc", 

ERROR:SPACING: space required before the open parenthesis '('
#908: FILE: fs/ext4/inode.c:3382:
+ if(block_group >= EXT4_SB(sb)->s_groups_count) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#909: FILE: fs/ext4/inode.c:3383:
+ ext4_error(sb, "ext4_get_magic_inode_loc", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#909: FILE: fs/ext4/inode.c:3383:
+ ext4_error(sb, "ext4_get_magic_inode_loc", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#910: FILE: fs/ext4/inode.c:3384:
+ ext4_error(sb, "ext4_get_magic_inode_loc", 
+ "group >= groups count");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#910: FILE: fs/ext4/inode.c:3384:
+ "group >= groups count");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#911: FILE: fs/ext4/inode.c:3385:
+ return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#912: FILE: fs/ext4/inode.c:3386:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#914: FILE: fs/ext4/inode.c:3388:
+ group_desc = block_group >> EXT4_DESC_PER_BLOCK_BITS(sb);$

CHECK:SPACING: No space is necessary after a cast
#915: FILE: fs/ext4/inode.c:3389:
+ desc = block_group & (EXT4_DESC_PER_BLOCK(sb) - 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#915: FILE: fs/ext4/inode.c:3389:
+ desc = block_group & (EXT4_DESC_PER_BLOCK(sb) - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#916: FILE: fs/ext4/inode.c:3390:
+ bh = EXT4_SB(sb)->s_group_desc[group_desc];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#917: FILE: fs/ext4/inode.c:3391:
+ if(!bh) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#917: FILE: fs/ext4/inode.c:3391:
+ if(!bh) {
+ ext4_error (sb, "ext4_get_magic_inode_loc",

ERROR:SPACING: space required before the open parenthesis '('
#917: FILE: fs/ext4/inode.c:3391:
+ if(!bh) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#918: FILE: fs/ext4/inode.c:3392:
+ ext4_error (sb, "ext4_get_magic_inode_loc",$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#918: FILE: fs/ext4/inode.c:3392:
+ ext4_error (sb, "ext4_get_magic_inode_loc",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#919: FILE: fs/ext4/inode.c:3393:
+ ext4_error (sb, "ext4_get_magic_inode_loc",
+ "Descriptor not loaded");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#919: FILE: fs/ext4/inode.c:3393:
+ "Descriptor not loaded");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#920: FILE: fs/ext4/inode.c:3394:
+ return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#921: FILE: fs/ext4/inode.c:3395:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#922: FILE: fs/ext4/inode.c:3396:
+ gdp = (struct ext4_group_desc *)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#923: FILE: fs/ext4/inode.c:3397:
+ ((char *)bh->b_data + desc * EXT4_DESC_SIZE(sb));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#925: FILE: fs/ext4/inode.c:3399:
+ offset = ((ino - 1) % EXT4_INODES_PER_GROUP(sb)) *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#926: FILE: fs/ext4/inode.c:3400:
+ EXT4_INODE_SIZE(sb);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#927: FILE: fs/ext4/inode.c:3401:
+ block = ext4_inode_table(sb, gdp) + $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#927: FILE: fs/ext4/inode.c:3401:
+ block = ext4_inode_table(sb, gdp) + $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#928: FILE: fs/ext4/inode.c:3402:
+ (offset >> EXT4_BLOCK_SIZE_BITS(sb));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#930: FILE: fs/ext4/inode.c:3404:
+ bh = sb_bread(sb, block);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#931: FILE: fs/ext4/inode.c:3405:
+ if(!bh) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#931: FILE: fs/ext4/inode.c:3405:
+ if(!bh) {
+ ext4_error (sb, "ext4_get_magic_inode_loc",

ERROR:SPACING: space required before the open parenthesis '('
#931: FILE: fs/ext4/inode.c:3405:
+ if(!bh) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#932: FILE: fs/ext4/inode.c:3406:
+ ext4_error (sb, "ext4_get_magic_inode_loc",$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#932: FILE: fs/ext4/inode.c:3406:
+ ext4_error (sb, "ext4_get_magic_inode_loc",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#933: FILE: fs/ext4/inode.c:3407:
+ ext4_error (sb, "ext4_get_magic_inode_loc",
+ "unable to read inode block - "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#933: FILE: fs/ext4/inode.c:3407:
+ "unable to read inode block - "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#934: FILE: fs/ext4/inode.c:3408:
+ "inode=%lu, block=%lu",$

WARNING:SPLIT_STRING: quoted string split across lines
#934: FILE: fs/ext4/inode.c:3408:
+ "unable to read inode block - "
+ "inode=%lu, block=%lu",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#935: FILE: fs/ext4/inode.c:3409:
+ ino, block);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#936: FILE: fs/ext4/inode.c:3410:
+ return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#937: FILE: fs/ext4/inode.c:3411:
+ }$

CHECK:SPACING: No space is necessary after a cast
#938: FILE: fs/ext4/inode.c:3412:
+ offset = offset & (EXT4_BLOCK_SIZE(sb) - 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#938: FILE: fs/ext4/inode.c:3412:
+ offset = offset & (EXT4_BLOCK_SIZE(sb) - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#939: FILE: fs/ext4/inode.c:3413:
+ iloc->block_group = block_group;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#940: FILE: fs/ext4/inode.c:3414:
+ iloc->offset = offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#941: FILE: fs/ext4/inode.c:3415:
+ iloc->bh = bh;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#943: FILE: fs/ext4/inode.c:3417:
+ return 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#946: FILE: fs/ext4/inode.c:3420:
+unsigned long ext4_unreserved_inodes(struct super_block *sb, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#947: FILE: fs/ext4/inode.c:3421:
+unsigned long ext4_unreserved_inodes(struct super_block *sb, 
+      int group)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#947: FILE: fs/ext4/inode.c:3421:
+      int group)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#949: FILE: fs/ext4/inode.c:3423:
+ unsigned long lastres_ino;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#950: FILE: fs/ext4/inode.c:3424:
+ unsigned long unreserved_nr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#951: FILE: fs/ext4/inode.c:3425:
+ struct ext4_iloc iloc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#952: FILE: fs/ext4/inode.c:3426:
+ struct ext4_magic_inode * magic_inode;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#952: FILE: fs/ext4/inode.c:3426:
+ struct ext4_magic_inode * magic_inode;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#954: FILE: fs/ext4/inode.c:3428:
+ lastres_ino = ext4_get_group_lastres_ino(sb, group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#955: FILE: fs/ext4/inode.c:3429:
+ if(ext4_get_magic_inode_loc(sb, lastres_ino, &iloc) < 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#955: FILE: fs/ext4/inode.c:3429:
+ if(ext4_get_magic_inode_loc(sb, lastres_ino, &iloc) < 0) {
+ ext4_error (sb, "ext4_unreserved_inodes",

ERROR:SPACING: space required before the open parenthesis '('
#955: FILE: fs/ext4/inode.c:3429:
+ if(ext4_get_magic_inode_loc(sb, lastres_ino, &iloc) < 0) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#956: FILE: fs/ext4/inode.c:3430:
+ ext4_error (sb, "ext4_unreserved_inodes",$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#956: FILE: fs/ext4/inode.c:3430:
+ ext4_error (sb, "ext4_unreserved_inodes",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#957: FILE: fs/ext4/inode.c:3431:
+ ext4_error (sb, "ext4_unreserved_inodes",
+ "failed to load inode block - "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#957: FILE: fs/ext4/inode.c:3431:
+ "failed to load inode block - "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#958: FILE: fs/ext4/inode.c:3432:
+ "inode %lu, group %d", lastres_ino, group);$

WARNING:SPLIT_STRING: quoted string split across lines
#958: FILE: fs/ext4/inode.c:3432:
+ "failed to load inode block - "
+ "inode %lu, group %d", lastres_ino, group);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#959: FILE: fs/ext4/inode.c:3433:
+ return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#960: FILE: fs/ext4/inode.c:3434:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#961: FILE: fs/ext4/inode.c:3435:
+ magic_inode = (struct ext4_magic_inode * )$

ERROR:POINTER_LOCATION: "(foo * )" should be "(foo *)"
#961: FILE: fs/ext4/inode.c:3435:
+ magic_inode = (struct ext4_magic_inode * )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#961: FILE: fs/ext4/inode.c:3435:
+ magic_inode = (struct ext4_magic_inode * )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#962: FILE: fs/ext4/inode.c:3436:
+ ((char *)iloc.bh->b_data + iloc.offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#963: FILE: fs/ext4/inode.c:3437:
+ if(!ext4_magic_inode(magic_inode, EXT4_MINODE_TYPE_LASTRES)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#963: FILE: fs/ext4/inode.c:3437:
+ if(!ext4_magic_inode(magic_inode, EXT4_MINODE_TYPE_LASTRES)) {
+ ext4_error (sb, "ext4_unreserved_inodes",

ERROR:SPACING: space required before the open parenthesis '('
#963: FILE: fs/ext4/inode.c:3437:
+ if(!ext4_magic_inode(magic_inode, EXT4_MINODE_TYPE_LASTRES)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#964: FILE: fs/ext4/inode.c:3438:
+ ext4_error (sb, "ext4_unreserved_inodes",$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#964: FILE: fs/ext4/inode.c:3438:
+ ext4_error (sb, "ext4_unreserved_inodes",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#965: FILE: fs/ext4/inode.c:3439:
+ ext4_error (sb, "ext4_unreserved_inodes",
+ "inode %lu in group %d is not "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#965: FILE: fs/ext4/inode.c:3439:
+ "inode %lu in group %d is not "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#966: FILE: fs/ext4/inode.c:3440:
+ "EXT4_MINODE_TYPE_LASTRES magic inode",$

WARNING:SPLIT_STRING: quoted string split across lines
#966: FILE: fs/ext4/inode.c:3440:
+ "inode %lu in group %d is not "
+ "EXT4_MINODE_TYPE_LASTRES magic inode",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#967: FILE: fs/ext4/inode.c:3441:
+ lastres_ino, group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#968: FILE: fs/ext4/inode.c:3442:
+ brelse(iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#969: FILE: fs/ext4/inode.c:3443:
+ return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#970: FILE: fs/ext4/inode.c:3444:
+ }$

CHECK:SPACING: No space is necessary after a cast
#971: FILE: fs/ext4/inode.c:3445:
+ unreserved_nr = (group + 1) * EXT4_INODES_PER_GROUP(sb) -

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#971: FILE: fs/ext4/inode.c:3445:
+ unreserved_nr = (group + 1) * EXT4_INODES_PER_GROUP(sb) -$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#972: FILE: fs/ext4/inode.c:3446:
+ le32_to_cpu(magic_inode->mi_lastres_ino);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#973: FILE: fs/ext4/inode.c:3447:
+ brelse(iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#974: FILE: fs/ext4/inode.c:3448:
+ return (unreserved_nr > 0) ? unreserved_nr : 0;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#977: FILE: fs/ext4/inode.c:3451:
+static int ext4_shrink_inores_ino(struct super_block * sb,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#978: FILE: fs/ext4/inode.c:3452:
+   int group, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#978: FILE: fs/ext4/inode.c:3452:
+static int ext4_shrink_inores_ino(struct super_block * sb,
+   int group, 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#978: FILE: fs/ext4/inode.c:3452:
+   int group, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#979: FILE: fs/ext4/inode.c:3453:
+   unsigned long link_ino, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#979: FILE: fs/ext4/inode.c:3453:
+   unsigned long link_ino, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#980: FILE: fs/ext4/inode.c:3454:
+   handle_t * handle,$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#980: FILE: fs/ext4/inode.c:3454:
+   handle_t * handle,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#981: FILE: fs/ext4/inode.c:3455:
+   struct buffer_head * lastres_bh,$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#981: FILE: fs/ext4/inode.c:3455:
+   struct buffer_head * lastres_bh,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#982: FILE: fs/ext4/inode.c:3456:
+   struct ext4_magic_inode * lastres_minode) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#982: FILE: fs/ext4/inode.c:3456:
+   struct ext4_magic_inode * lastres_minode) $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#982: FILE: fs/ext4/inode.c:3456:
+   struct ext4_magic_inode * lastres_minode) 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#984: FILE: fs/ext4/inode.c:3458:
+ struct ext4_sb_info * sbi;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#984: FILE: fs/ext4/inode.c:3458:
+ struct ext4_sb_info * sbi;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#985: FILE: fs/ext4/inode.c:3459:
+ struct buffer_head * bitmap_bh;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#985: FILE: fs/ext4/inode.c:3459:
+ struct buffer_head * bitmap_bh;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#986: FILE: fs/ext4/inode.c:3460:
+ int lastres_mino_offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#987: FILE: fs/ext4/inode.c:3461:
+ int len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#988: FILE: fs/ext4/inode.c:3462:
+ int prev_offset, offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#989: FILE: fs/ext4/inode.c:3463:
+ int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#991: FILE: fs/ext4/inode.c:3465:
+ sbi = EXT4_SB(sb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#992: FILE: fs/ext4/inode.c:3466:
+ spin_lock(sb_bgl_lock(sbi, group));$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#993: FILE: fs/ext4/inode.c:3467:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#993: FILE: fs/ext4/inode.c:3467:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#994: FILE: fs/ext4/inode.c:3468:
+ if (link_ino != le32_to_cpu(lastres_minode->mi_lastres_ino)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#994: FILE: fs/ext4/inode.c:3468:
+ if (link_ino != le32_to_cpu(lastres_minode->mi_lastres_ino)) {
+ printk(KERN_INFO "last reserved ino  of group %d is not "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#995: FILE: fs/ext4/inode.c:3469:
+ printk(KERN_INFO "last reserved ino  of group %d is not "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#995: FILE: fs/ext4/inode.c:3469:
+ printk(KERN_INFO "last reserved ino  of group %d is not "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#996: FILE: fs/ext4/inode.c:3470:
+ "%lu any more. Give up shrink last reserved ino.\n",$

WARNING:SPLIT_STRING: quoted string split across lines
#996: FILE: fs/ext4/inode.c:3470:
+ printk(KERN_INFO "last reserved ino  of group %d is not "
+ "%lu any more. Give up shrink last reserved ino.\n",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#997: FILE: fs/ext4/inode.c:3471:
+ group, link_ino);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#998: FILE: fs/ext4/inode.c:3472:
+ spin_unlock(sb_bgl_lock(sbi, group));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#999: FILE: fs/ext4/inode.c:3473:
+ return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1000: FILE: fs/ext4/inode.c:3474:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1002: FILE: fs/ext4/inode.c:3476:
+ bitmap_bh = read_inode_bitmap(sb, group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1003: FILE: fs/ext4/inode.c:3477:
+ if (!bitmap_bh) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1003: FILE: fs/ext4/inode.c:3477:
+ if (!bitmap_bh) {
+ spin_unlock(sb_bgl_lock(sbi, group));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1004: FILE: fs/ext4/inode.c:3478:
+ spin_unlock(sb_bgl_lock(sbi, group));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1005: FILE: fs/ext4/inode.c:3479:
+ return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1006: FILE: fs/ext4/inode.c:3480:
+ }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1008: FILE: fs/ext4/inode.c:3482:
+ lastres_mino_offset = $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1008: FILE: fs/ext4/inode.c:3482:
+ lastres_mino_offset = $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1009: FILE: fs/ext4/inode.c:3483:
+ (ext4_get_group_lastres_ino(sb, group) - 1) %$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1010: FILE: fs/ext4/inode.c:3484:
+ EXT4_INODES_PER_GROUP(sb);$

CHECK:SPACING: No space is necessary after a cast
#1011: FILE: fs/ext4/inode.c:3485:
+ len = (link_ino - 1) % EXT4_INODES_PER_GROUP(sb) + 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1011: FILE: fs/ext4/inode.c:3485:
+ len = (link_ino - 1) % EXT4_INODES_PER_GROUP(sb) + 1;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1013: FILE: fs/ext4/inode.c:3487:
+ printk("lastres_mino_offset: %d, len: %d\n", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1013: FILE: fs/ext4/inode.c:3487:
+ printk("lastres_mino_offset: %d, len: %d\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1013: FILE: fs/ext4/inode.c:3487:
+ printk("lastres_mino_offset: %d, len: %d\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1014: FILE: fs/ext4/inode.c:3488:
+ printk("lastres_mino_offset: %d, len: %d\n", 
+ lastres_mino_offset, len);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1014: FILE: fs/ext4/inode.c:3488:
+ lastres_mino_offset, len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1015: FILE: fs/ext4/inode.c:3489:
+ for(prev_offset = 0, offset = 0; offset < len; offset ++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1015: FILE: fs/ext4/inode.c:3489:
+ for(prev_offset = 0, offset = 0; offset < len; offset ++) {
+ offset = find_next_bit((unsigned long *)bitmap_bh->b_data,

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#1015: FILE: fs/ext4/inode.c:3489:
+ for(prev_offset = 0, offset = 0; offset < len; offset ++) {
                                                        ^

ERROR:SPACING: space required before the open parenthesis '('
#1015: FILE: fs/ext4/inode.c:3489:
+ for(prev_offset = 0, offset = 0; offset < len; offset ++) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1016: FILE: fs/ext4/inode.c:3490:
+ offset = find_next_bit((unsigned long *)bitmap_bh->b_data,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1017: FILE: fs/ext4/inode.c:3491:
+ offset = find_next_bit((unsigned long *)bitmap_bh->b_data,
+ len, offset);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1017: FILE: fs/ext4/inode.c:3491:
+ len, offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1018: FILE: fs/ext4/inode.c:3492:
+ if (offset >= len)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1018: FILE: fs/ext4/inode.c:3492:
+ if (offset >= len)
+ break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1019: FILE: fs/ext4/inode.c:3493:
+ break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1020: FILE: fs/ext4/inode.c:3494:
+ if (offset != lastres_mino_offset)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1020: FILE: fs/ext4/inode.c:3494:
+ if (offset != lastres_mino_offset)
+ prev_offset = offset;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1021: FILE: fs/ext4/inode.c:3495:
+ prev_offset = offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1022: FILE: fs/ext4/inode.c:3496:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1023: FILE: fs/ext4/inode.c:3497:
+ printk("offset: %d, prev_offset: %d\n", offset, prev_offset);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1023: FILE: fs/ext4/inode.c:3497:
+ printk("offset: %d, prev_offset: %d\n", offset, prev_offset);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1024: FILE: fs/ext4/inode.c:3498:
+ BUFFER_TRACE(lastres_bh, "call get_write_access");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1025: FILE: fs/ext4/inode.c:3499:
+ ret = ext4_journal_get_write_access(handle, lastres_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1026: FILE: fs/ext4/inode.c:3500:
+ if (ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1026: FILE: fs/ext4/inode.c:3500:
+ if (ret) {
+ spin_unlock(sb_bgl_lock(sbi, group));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1027: FILE: fs/ext4/inode.c:3501:
+ spin_unlock(sb_bgl_lock(sbi, group));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1028: FILE: fs/ext4/inode.c:3502:
+ return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1029: FILE: fs/ext4/inode.c:3503:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1030: FILE: fs/ext4/inode.c:3504:
+ if (prev_offset)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1030: FILE: fs/ext4/inode.c:3504:
+ if (prev_offset)
+ prev_offset += 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1031: FILE: fs/ext4/inode.c:3505:
+ prev_offset += 1;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1032: FILE: fs/ext4/inode.c:3506:
+ lastres_minode->mi_lastres_ino = $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1032: FILE: fs/ext4/inode.c:3506:
+ lastres_minode->mi_lastres_ino = $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1033: FILE: fs/ext4/inode.c:3507:
+ cpu_to_le32(group * EXT4_INODES_PER_GROUP(sb)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1034: FILE: fs/ext4/inode.c:3508:
+ + prev_offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1035: FILE: fs/ext4/inode.c:3509:
+ BUFFER_TRACE(lastres_bh, "call dirty_metadata");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1036: FILE: fs/ext4/inode.c:3510:
+ ret = ext4_journal_dirty_metadata(handle, lastres_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1037: FILE: fs/ext4/inode.c:3511:
+ if (ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1037: FILE: fs/ext4/inode.c:3511:
+ if (ret) {
+ spin_unlock(sb_bgl_lock(sbi, group));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1038: FILE: fs/ext4/inode.c:3512:
+ spin_unlock(sb_bgl_lock(sbi, group));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1039: FILE: fs/ext4/inode.c:3513:
+ return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1040: FILE: fs/ext4/inode.c:3514:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1041: FILE: fs/ext4/inode.c:3515:
+ spin_unlock(sb_bgl_lock(sbi, group));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1042: FILE: fs/ext4/inode.c:3516:
+ return 0;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1045: FILE: fs/ext4/inode.c:3519:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1046: FILE: fs/ext4/inode.c:3520:
+int ext4_delete_link_magic_inodes(handle_t * handle, struct inode *

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1049: FILE: fs/ext4/inode.c:3522:
+ struct super_block * sb;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1049: FILE: fs/ext4/inode.c:3522:
+ struct super_block * sb;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1050: FILE: fs/ext4/inode.c:3523:
+ struct ext4_sb_info * sbi;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1050: FILE: fs/ext4/inode.c:3523:
+ struct ext4_sb_info * sbi;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1051: FILE: fs/ext4/inode.c:3524:
+ unsigned long dir_ino, link_ino, next_ino;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1052: FILE: fs/ext4/inode.c:3525:
+ unsigned long lastres_ino;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1053: FILE: fs/ext4/inode.c:3526:
+ int next_ressize;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1054: FILE: fs/ext4/inode.c:3527:
+ struct ext4_iloc link_iloc, lastres_iloc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1055: FILE: fs/ext4/inode.c:3528:
+ struct ext4_magic_inode * link_minode,* lastres_minode;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1055: FILE: fs/ext4/inode.c:3528:
+ struct ext4_magic_inode * link_minode,* lastres_minode;

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1055: FILE: fs/ext4/inode.c:3528:
+ struct ext4_magic_inode * link_minode,* lastres_minode;
                                       ^

ERROR:SPACING: space required before that '*' (ctx:OxW)
#1055: FILE: fs/ext4/inode.c:3528:
+ struct ext4_magic_inode * link_minode,* lastres_minode;
                                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1056: FILE: fs/ext4/inode.c:3529:
+ struct buffer_head * bitmap_bh, * bh2 ;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1056: FILE: fs/ext4/inode.c:3529:
+ struct buffer_head * bitmap_bh, * bh2 ;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#1056: FILE: fs/ext4/inode.c:3529:
+ struct buffer_head * bitmap_bh, * bh2 ;
                                  ^

WARNING:SPACING: space prohibited before semicolon
#1056: FILE: fs/ext4/inode.c:3529:
+ struct buffer_head * bitmap_bh, * bh2 ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1057: FILE: fs/ext4/inode.c:3530:
+ struct ext4_group_desc * gdp;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1057: FILE: fs/ext4/inode.c:3530:
+ struct ext4_group_desc * gdp;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1058: FILE: fs/ext4/inode.c:3531:
+ int group, bit;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1059: FILE: fs/ext4/inode.c:3532:
+ int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1061: FILE: fs/ext4/inode.c:3534:
+ dir_ino = dir->i_ino;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1063: FILE: fs/ext4/inode.c:3536:
+ if (dir_ino != EXT4_ROOT_INO && $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1063: FILE: fs/ext4/inode.c:3536:
+ if (dir_ino != EXT4_ROOT_INO && $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1063: FILE: fs/ext4/inode.c:3536:
+ if (dir_ino != EXT4_ROOT_INO && 
[...]
+ printk(KERN_DEBUG "dir inode %lu is not %d aligned."

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1064: FILE: fs/ext4/inode.c:3537:
+     (dir_ino - 1) % EXT4_INIT_RESERVE_INODES != 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1065: FILE: fs/ext4/inode.c:3538:
+ printk(KERN_DEBUG "dir inode %lu is not %d aligned."$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1065: FILE: fs/ext4/inode.c:3538:
+ printk(KERN_DEBUG "dir inode %lu is not %d aligned."

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1066: FILE: fs/ext4/inode.c:3539:
+ "Give up deleting EXT4_MINODE_TYPE_LINK magic "$

WARNING:SPLIT_STRING: quoted string split across lines
#1066: FILE: fs/ext4/inode.c:3539:
+ printk(KERN_DEBUG "dir inode %lu is not %d aligned."
+ "Give up deleting EXT4_MINODE_TYPE_LINK magic "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1067: FILE: fs/ext4/inode.c:3540:
+ "inodes of this dir inode.\n",$

WARNING:SPLIT_STRING: quoted string split across lines
#1067: FILE: fs/ext4/inode.c:3540:
+ "Give up deleting EXT4_MINODE_TYPE_LINK magic "
+ "inodes of this dir inode.\n",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1068: FILE: fs/ext4/inode.c:3541:
+ dir_ino, EXT4_INIT_RESERVE_INODES);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1069: FILE: fs/ext4/inode.c:3542:
+ return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1070: FILE: fs/ext4/inode.c:3543:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1072: FILE: fs/ext4/inode.c:3545:
+ sb = dir->i_sb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1073: FILE: fs/ext4/inode.c:3546:
+ sbi = EXT4_SB(sb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1075: FILE: fs/ext4/inode.c:3548:
+ if (dir_ino == EXT4_ROOT_INO)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1075: FILE: fs/ext4/inode.c:3548:
+ if (dir_ino == EXT4_ROOT_INO)
+ link_ino = EXT4_INIT_RESERVE_INODES;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1076: FILE: fs/ext4/inode.c:3549:
+ link_ino = EXT4_INIT_RESERVE_INODES;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1077: FILE: fs/ext4/inode.c:3550:
+ else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1077: FILE: fs/ext4/inode.c:3550:
+ else
+ link_ino = dir_ino + EXT4_INIT_RESERVE_INODES - 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1078: FILE: fs/ext4/inode.c:3551:
+ link_ino = dir_ino + EXT4_INIT_RESERVE_INODES - 1;$

WARNING:TYPO_SPELLING: 'begining' may be misspelled - perhaps 'beginning'?
#1080: FILE: fs/ext4/inode.c:3553:
+ printk("at begining, dir_ino: %lu, link_ino: %lu.\n", dir_ino,
             ^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1080: FILE: fs/ext4/inode.c:3553:
+ printk("at begining, dir_ino: %lu, link_ino: %lu.\n", dir_ino,$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1080: FILE: fs/ext4/inode.c:3553:
+ printk("at begining, dir_ino: %lu, link_ino: %lu.\n", dir_ino,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1082: FILE: fs/ext4/inode.c:3554:
+ printk("at begining, dir_ino: %lu, link_ino: %lu.\n", dir_ino,
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1083: FILE: fs/ext4/inode.c:3555:
+ next_ino = dir_ino;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1084: FILE: fs/ext4/inode.c:3556:
+ while (next_ino) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1084: FILE: fs/ext4/inode.c:3556:
+ while (next_ino) {
+ ret = ext4_get_magic_inode_loc(sb, link_ino, &link_iloc);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1085: FILE: fs/ext4/inode.c:3557:
+ ret = ext4_get_magic_inode_loc(sb, link_ino, &link_iloc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1086: FILE: fs/ext4/inode.c:3558:
+ if (ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1086: FILE: fs/ext4/inode.c:3558:
+ if (ret)
+ return ret;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1087: FILE: fs/ext4/inode.c:3559:
+ return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1088: FILE: fs/ext4/inode.c:3560:
+ link_minode = (struct ext4_magic_inode *)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1089: FILE: fs/ext4/inode.c:3561:
+ ((char *)link_iloc.bh->b_data + link_iloc.offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1090: FILE: fs/ext4/inode.c:3562:
+ if(!ext4_magic_inode(link_minode, EXT4_MINODE_TYPE_LINK)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1090: FILE: fs/ext4/inode.c:3562:
+ if(!ext4_magic_inode(link_minode, EXT4_MINODE_TYPE_LINK)) {
+ printk(KERN_WARNING "Inode %lu is not a "

ERROR:SPACING: space required before the open parenthesis '('
#1090: FILE: fs/ext4/inode.c:3562:
+ if(!ext4_magic_inode(link_minode, EXT4_MINODE_TYPE_LINK)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1091: FILE: fs/ext4/inode.c:3563:
+ printk(KERN_WARNING "Inode %lu is not a "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1091: FILE: fs/ext4/inode.c:3563:
+ printk(KERN_WARNING "Inode %lu is not a "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1092: FILE: fs/ext4/inode.c:3564:
+ "EXT4_MINODE_TYPE_LINK magic inode. "$

WARNING:SPLIT_STRING: quoted string split across lines
#1092: FILE: fs/ext4/inode.c:3564:
+ printk(KERN_WARNING "Inode %lu is not a "
+ "EXT4_MINODE_TYPE_LINK magic inode. "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1093: FILE: fs/ext4/inode.c:3565:
+ "Give up removing other magic inodes.\n",$

WARNING:SPLIT_STRING: quoted string split across lines
#1093: FILE: fs/ext4/inode.c:3565:
+ "EXT4_MINODE_TYPE_LINK magic inode. "
+ "Give up removing other magic inodes.\n",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1094: FILE: fs/ext4/inode.c:3566:
+ link_ino);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1095: FILE: fs/ext4/inode.c:3567:
+ brelse(link_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1096: FILE: fs/ext4/inode.c:3568:
+ return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1097: FILE: fs/ext4/inode.c:3569:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1098: FILE: fs/ext4/inode.c:3570:
+ next_ino = le32_to_cpu(link_minode->mi_next_ino);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1099: FILE: fs/ext4/inode.c:3571:
+ next_ressize = le32_to_cpu(link_minode->mi_next_ressize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1100: FILE: fs/ext4/inode.c:3572:
+ brelse(link_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1101: FILE: fs/ext4/inode.c:3573:
+ group = (link_ino - 1) / EXT4_INODES_PER_GROUP(sb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1102: FILE: fs/ext4/inode.c:3574:
+ bit = (link_ino - 1) % EXT4_INODES_PER_GROUP(sb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1103: FILE: fs/ext4/inode.c:3575:
+ bitmap_bh = read_inode_bitmap(sb, group);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1104: FILE: fs/ext4/inode.c:3576:
+ if (!bitmap_bh) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1104: FILE: fs/ext4/inode.c:3576:
+ if (!bitmap_bh) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1104: FILE: fs/ext4/inode.c:3576:
+ if (!bitmap_bh) 
+ return -EIO;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1105: FILE: fs/ext4/inode.c:3577:
+ return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1106: FILE: fs/ext4/inode.c:3578:
+ BUFFER_TRACE(bitmap_bh, "call get_write_access");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1107: FILE: fs/ext4/inode.c:3579:
+ ret = ext4_journal_get_write_access(handle, bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1108: FILE: fs/ext4/inode.c:3580:
+ if (ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1108: FILE: fs/ext4/inode.c:3580:
+ if (ret) {
+ brelse(bitmap_bh);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1109: FILE: fs/ext4/inode.c:3581:
+ brelse(bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1110: FILE: fs/ext4/inode.c:3582:
+ return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1111: FILE: fs/ext4/inode.c:3583:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1112: FILE: fs/ext4/inode.c:3584:
+ printk(KERN_DEBUG "clear magic inode %lu in bitmap of group %d.\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1112: FILE: fs/ext4/inode.c:3584:
+ printk(KERN_DEBUG "clear magic inode %lu in bitmap of group %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1113: FILE: fs/ext4/inode.c:3585:
+ printk(KERN_DEBUG "clear magic inode %lu in bitmap of group %d.\n",
+ link_ino, group);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1113: FILE: fs/ext4/inode.c:3585:
+ link_ino, group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1114: FILE: fs/ext4/inode.c:3586:
+ if (!ext4_clear_bit_atomic(sb_bgl_lock(sbi, group),$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1114: FILE: fs/ext4/inode.c:3586:
+ if (!ext4_clear_bit_atomic(sb_bgl_lock(sbi, group),
[...]
+ ext4_error(sb, "ext4_delete_link_magic_inodes",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1115: FILE: fs/ext4/inode.c:3587:
+ if (!ext4_clear_bit_atomic(sb_bgl_lock(sbi, group),
+ bit, bitmap_bh->b_data)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1115: FILE: fs/ext4/inode.c:3587:
+ bit, bitmap_bh->b_data)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1116: FILE: fs/ext4/inode.c:3588:
+ ext4_error(sb, "ext4_delete_link_magic_inodes",$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1117: FILE: fs/ext4/inode.c:3589:
+ ext4_error(sb, "ext4_delete_link_magic_inodes",
+ "bit already cleared for inode %lu",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1117: FILE: fs/ext4/inode.c:3589:
+ "bit already cleared for inode %lu",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1118: FILE: fs/ext4/inode.c:3590:
+ link_ino);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1119: FILE: fs/ext4/inode.c:3591:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1120: FILE: fs/ext4/inode.c:3592:
+ BUFFER_TRACE(bitmap_bh, "call dirty_metadata");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1121: FILE: fs/ext4/inode.c:3593:
+ ret = ext4_journal_dirty_metadata(handle, bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1122: FILE: fs/ext4/inode.c:3594:
+ if (ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1122: FILE: fs/ext4/inode.c:3594:
+ if (ret) {
+ brelse(bitmap_bh);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1123: FILE: fs/ext4/inode.c:3595:
+ brelse(bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1124: FILE: fs/ext4/inode.c:3596:
+ return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1125: FILE: fs/ext4/inode.c:3597:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1126: FILE: fs/ext4/inode.c:3598:
+ brelse(bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1127: FILE: fs/ext4/inode.c:3599:
+ gdp = ext4_get_group_desc(sb, group, &bh2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1128: FILE: fs/ext4/inode.c:3600:
+ if (!gdp) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1128: FILE: fs/ext4/inode.c:3600:
+ if (!gdp) {
+ ext4_error(sb, "ext4_delete_link_magic_inodes",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1129: FILE: fs/ext4/inode.c:3601:
+ ext4_error(sb, "ext4_delete_link_magic_inodes",$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1130: FILE: fs/ext4/inode.c:3602:
+ ext4_error(sb, "ext4_delete_link_magic_inodes",
+ "get group %d desc failed.",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1130: FILE: fs/ext4/inode.c:3602:
+ "get group %d desc failed.",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1131: FILE: fs/ext4/inode.c:3603:
+ group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1132: FILE: fs/ext4/inode.c:3604:
+ return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1133: FILE: fs/ext4/inode.c:3605:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1134: FILE: fs/ext4/inode.c:3606:
+ BUFFER_TRACE(bh2, "call get_write_access");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1135: FILE: fs/ext4/inode.c:3607:
+ ret = ext4_journal_get_write_access(handle, bh2);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1136: FILE: fs/ext4/inode.c:3608:
+ if (ret) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1136: FILE: fs/ext4/inode.c:3608:
+ if (ret) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1136: FILE: fs/ext4/inode.c:3608:
+ if (ret) 
+ return -EFAULT;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1137: FILE: fs/ext4/inode.c:3609:
+ return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1138: FILE: fs/ext4/inode.c:3610:
+ spin_lock(sb_bgl_lock(sbi, group));$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1139: FILE: fs/ext4/inode.c:3611:
+ gdp->bg_free_inodes_count = $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1139: FILE: fs/ext4/inode.c:3611:
+ gdp->bg_free_inodes_count = $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1140: FILE: fs/ext4/inode.c:3612:
+ cpu_to_le32(le32_to_cpu(gdp->bg_free_inodes_count) + 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1141: FILE: fs/ext4/inode.c:3613:
+ spin_unlock(sb_bgl_lock(sbi, group));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1142: FILE: fs/ext4/inode.c:3614:
+ BUFFER_TRACE(bh2, "call dirty_metadata");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1143: FILE: fs/ext4/inode.c:3615:
+ ret = ext4_journal_dirty_metadata(handle, bh2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1144: FILE: fs/ext4/inode.c:3616:
+ if (ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1144: FILE: fs/ext4/inode.c:3616:
+ if (ret)
+ return -EFAULT;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1145: FILE: fs/ext4/inode.c:3617:
+ return -EFAULT;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1146: FILE: fs/ext4/inode.c:3618:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1146: FILE: fs/ext4/inode.c:3618:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1147: FILE: fs/ext4/inode.c:3619:
+ lastres_ino = ext4_get_group_lastres_ino(sb, group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1148: FILE: fs/ext4/inode.c:3620:
+ ret = ext4_get_magic_inode_loc(sb, lastres_ino, &lastres_iloc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1149: FILE: fs/ext4/inode.c:3621:
+ if (ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1149: FILE: fs/ext4/inode.c:3621:
+ if (ret) {
+ ext4_error(sb, "ext4_delete_link_magic_inodes",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1150: FILE: fs/ext4/inode.c:3622:
+ ext4_error(sb, "ext4_delete_link_magic_inodes",$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1151: FILE: fs/ext4/inode.c:3623:
+ ext4_error(sb, "ext4_delete_link_magic_inodes",
+ "read EXT4_MINODE_TYPE_LASTRES magic inode %lu"

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1151: FILE: fs/ext4/inode.c:3623:
+ "read EXT4_MINODE_TYPE_LASTRES magic inode %lu"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1152: FILE: fs/ext4/inode.c:3624:
+ "of group %d failed.", lastres_ino, group);$

WARNING:SPLIT_STRING: quoted string split across lines
#1152: FILE: fs/ext4/inode.c:3624:
+ "read EXT4_MINODE_TYPE_LASTRES magic inode %lu"
+ "of group %d failed.", lastres_ino, group);

WARNING:MISSING_SPACE: break quoted strings at a space character
#1152: FILE: fs/ext4/inode.c:3624:
+ "read EXT4_MINODE_TYPE_LASTRES magic inode %lu"
+ "of group %d failed.", lastres_ino, group);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1153: FILE: fs/ext4/inode.c:3625:
+ return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1154: FILE: fs/ext4/inode.c:3626:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1155: FILE: fs/ext4/inode.c:3627:
+ lastres_minode = (struct ext4_magic_inode *)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1156: FILE: fs/ext4/inode.c:3628:
+ ((char *)lastres_iloc.bh->b_data + lastres_iloc.offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1157: FILE: fs/ext4/inode.c:3629:
+ if (!ext4_magic_inode(lastres_minode, EXT4_MINODE_TYPE_LASTRES)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1157: FILE: fs/ext4/inode.c:3629:
+ if (!ext4_magic_inode(lastres_minode, EXT4_MINODE_TYPE_LASTRES)) {
+ ext4_error(sb, "ext4_delete_link_magic_inodes",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1158: FILE: fs/ext4/inode.c:3630:
+ ext4_error(sb, "ext4_delete_link_magic_inodes",$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1159: FILE: fs/ext4/inode.c:3631:
+ ext4_error(sb, "ext4_delete_link_magic_inodes",
+ "inode %lu is not EXT4_MINODE_TYPE_LASTRES "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1159: FILE: fs/ext4/inode.c:3631:
+ "inode %lu is not EXT4_MINODE_TYPE_LASTRES "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1160: FILE: fs/ext4/inode.c:3632:
+ "magic inode of group %d.",$

WARNING:SPLIT_STRING: quoted string split across lines
#1160: FILE: fs/ext4/inode.c:3632:
+ "inode %lu is not EXT4_MINODE_TYPE_LASTRES "
+ "magic inode of group %d.",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1161: FILE: fs/ext4/inode.c:3633:
+ lastres_ino, group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1162: FILE: fs/ext4/inode.c:3634:
+ brelse(lastres_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1163: FILE: fs/ext4/inode.c:3635:
+ return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1164: FILE: fs/ext4/inode.c:3636:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1165: FILE: fs/ext4/inode.c:3637:
+ printk("whether to shrink the last reserved ino?  link_ino: %lu,$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1165: FILE: fs/ext4/inode.c:3637:
+ printk("whether to shrink the last reserved ino?  link_ino: %lu,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1167: FILE: fs/ext4/inode.c:3638:
+ link_ino,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1168: FILE: fs/ext4/inode.c:3639:
+ le32_to_cpu(lastres_minode->mi_lastres_ino));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1169: FILE: fs/ext4/inode.c:3640:
+ if (link_ino == le32_to_cpu(lastres_minode->mi_lastres_ino)) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1170: FILE: fs/ext4/inode.c:3641:
+ ret = ext4_shrink_inores_ino( sb, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1170: FILE: fs/ext4/inode.c:3641:
+ ret = ext4_shrink_inores_ino( sb, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1171: FILE: fs/ext4/inode.c:3642:
+ group, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1171: FILE: fs/ext4/inode.c:3642:
+ group, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1172: FILE: fs/ext4/inode.c:3643:
+ link_ino, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1172: FILE: fs/ext4/inode.c:3643:
+ link_ino, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1173: FILE: fs/ext4/inode.c:3644:
+ handle, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1173: FILE: fs/ext4/inode.c:3644:
+ handle, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1174: FILE: fs/ext4/inode.c:3645:
+ lastres_iloc.bh,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1175: FILE: fs/ext4/inode.c:3646:
+ lastres_minode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1176: FILE: fs/ext4/inode.c:3647:
+ if (ret) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1177: FILE: fs/ext4/inode.c:3648:
+ ext4_error(sb, "ext4_delete_link_magic_inodes",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1178: FILE: fs/ext4/inode.c:3649:
+ "shrink last reserved ino of group "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1179: FILE: fs/ext4/inode.c:3650:
+ "%d failed.", group);$

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1179: FILE: fs/ext4/inode.c:3650:
+ "%d failed.", group);
   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1180: FILE: fs/ext4/inode.c:3651:
+ brelse(lastres_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1181: FILE: fs/ext4/inode.c:3652:
+ return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1182: FILE: fs/ext4/inode.c:3653:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1183: FILE: fs/ext4/inode.c:3654:
+ printk("shrink group %d last reserved ino to %lu.\n",$

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1183: FILE: fs/ext4/inode.c:3654:
+ printk("shrink group %d last reserved ino to %lu.\n",
                       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1183: FILE: fs/ext4/inode.c:3654:
+ printk("shrink group %d last reserved ino to %lu.\n",
                                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1184: FILE: fs/ext4/inode.c:3655:
+ group, le32_to_cpu(lastres_minode->mi_lastres_ino));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1185: FILE: fs/ext4/inode.c:3656:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1186: FILE: fs/ext4/inode.c:3657:
+ brelse(lastres_iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1187: FILE: fs/ext4/inode.c:3658:
+ link_ino = next_ino + next_ressize - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1188: FILE: fs/ext4/inode.c:3659:
+ printk(KERN_DEBUG "try next link_ino: %lu\n", link_ino);$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1188: FILE: fs/ext4/inode.c:3659:
+ printk(KERN_DEBUG "try next link_ino: %lu\n", link_ino);
                                      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1188: FILE: fs/ext4/inode.c:3659:
+ printk(KERN_DEBUG "try next link_ino: %lu\n", link_ino);
                                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1189: FILE: fs/ext4/inode.c:3660:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1191: FILE: fs/ext4/inode.c:3662:
+ return 0;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1194: FILE: fs/ext4/inode.c:3665:
+
+

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1198: FILE: fs/ext4/namei.c:3666:
+++ b/fs/ext4/namei.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1204: FILE: fs/ext4/namei.c:2045:
+ retval = ext4_delete_link_magic_inodes(handle, inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1205: FILE: fs/ext4/namei.c:2046:
+ if (retval)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1205: FILE: fs/ext4/namei.c:2046:
+ if (retval)
+ goto end_rmdir;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1206: FILE: fs/ext4/namei.c:2047:
+ goto end_rmdir;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1220: FILE: fs/ext4/super.c:729:
+ Opt_nouid32, Opt_nocheck, Opt_debug, Opt_oldalloc, Opt_orlov,$

CHECK:CAMELCASE: Avoid CamelCase: <Opt_nouid32>
#1220: FILE: fs/ext4/super.c:729:
+ Opt_nouid32, Opt_nocheck, Opt_debug, Opt_oldalloc, Opt_orlov,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Opt_nocheck>
#1220: FILE: fs/ext4/super.c:729:
+ Opt_nouid32, Opt_nocheck, Opt_debug, Opt_oldalloc, Opt_orlov,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_debug>
#1220: FILE: fs/ext4/super.c:729:
+ Opt_nouid32, Opt_nocheck, Opt_debug, Opt_oldalloc, Opt_orlov,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_oldalloc>
#1220: FILE: fs/ext4/super.c:729:
+ Opt_nouid32, Opt_nocheck, Opt_debug, Opt_oldalloc, Opt_orlov,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_orlov>
#1220: FILE: fs/ext4/super.c:729:
+ Opt_nouid32, Opt_nocheck, Opt_debug, Opt_oldalloc, Opt_orlov,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1229: FILE: fs/ext4/super.c:759:
+ {Opt_inores, "inode_reservation"},$

CHECK:CAMELCASE: Avoid CamelCase: <Opt_inores>
#1229: FILE: fs/ext4/super.c:759:
+ {Opt_inores, "inode_reservation"},

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1238: FILE: fs/ext4/super.c:895:
+ case Opt_inores:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1239: FILE: fs/ext4/super.c:896:
+ set_opt (sbi->s_mount_opt, INORES);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1239: FILE: fs/ext4/super.c:896:
+ set_opt (sbi->s_mount_opt, INORES);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1240: FILE: fs/ext4/super.c:897:
+ break;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1249: FILE: fs/ext4/super.c:1308:
+/* Called at mount-time, super-block is locked $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1252: FILE: fs/ext4/super.c:1310:
+ * inode in each block group. $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1254: FILE: fs/ext4/super.c:1312:
+int ext4_check_lastres_magic_inode(struct super_block * sb)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1256: FILE: fs/ext4/super.c:1314:
+ struct ext4_sb_info *sbi = EXT4_SB(sb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1257: FILE: fs/ext4/super.c:1315:
+ struct ext4_group_desc *gdp = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1258: FILE: fs/ext4/super.c:1316:
+ struct buffer_head *bitmap_bh = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1259: FILE: fs/ext4/super.c:1317:
+ struct ext4_magic_inode * magic_inode;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1259: FILE: fs/ext4/super.c:1317:
+ struct ext4_magic_inode * magic_inode;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1260: FILE: fs/ext4/super.c:1318:
+ struct ext4_iloc iloc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1261: FILE: fs/ext4/super.c:1319:
+ int desc_block = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1262: FILE: fs/ext4/super.c:1320:
+ unsigned long offset, prev_offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1263: FILE: fs/ext4/super.c:1321:
+ unsigned long itable_offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1264: FILE: fs/ext4/super.c:1322:
+ unsigned long lastres_ino;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1265: FILE: fs/ext4/super.c:1323:
+ int group;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1266: FILE: fs/ext4/super.c:1324:
+ int i;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1267: FILE: fs/ext4/super.c:1325:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1267: FILE: fs/ext4/super.c:1325:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1268: FILE: fs/ext4/super.c:1326:
+ 
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1269: FILE: fs/ext4/super.c:1327:
+ ext4_debug("ext4_check_lastres_magic_inode");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1271: FILE: fs/ext4/super.c:1329:
+ for(group = 0; group < sbi->s_groups_count; group ++)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1271: FILE: fs/ext4/super.c:1329:
+ for(group = 0; group < sbi->s_groups_count; group ++)
+ {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1271: FILE: fs/ext4/super.c:1329:
+ for(group = 0; group < sbi->s_groups_count; group ++)
+ {

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#1271: FILE: fs/ext4/super.c:1329:
+ for(group = 0; group < sbi->s_groups_count; group ++)
                                                    ^

ERROR:SPACING: space required before the open parenthesis '('
#1271: FILE: fs/ext4/super.c:1329:
+ for(group = 0; group < sbi->s_groups_count; group ++)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1272: FILE: fs/ext4/super.c:1330:
+ {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1273: FILE: fs/ext4/super.c:1331:
+ if((group % EXT4_DESC_PER_BLOCK(sb)) == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1273: FILE: fs/ext4/super.c:1331:
+ if((group % EXT4_DESC_PER_BLOCK(sb)) == 0)
+ gdp = (struct ext4_group_desc *)

ERROR:SPACING: space required before the open parenthesis '('
#1273: FILE: fs/ext4/super.c:1331:
+ if((group % EXT4_DESC_PER_BLOCK(sb)) == 0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1274: FILE: fs/ext4/super.c:1332:
+ gdp = (struct ext4_group_desc *)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1275: FILE: fs/ext4/super.c:1333:
+ sbi->s_group_desc[desc_block++]->b_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1277: FILE: fs/ext4/super.c:1335:
+ bitmap_bh = sb_bread(sb, ext4_inode_bitmap(sb, gdp));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1278: FILE: fs/ext4/super.c:1336:
+ if(!bitmap_bh) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1278: FILE: fs/ext4/super.c:1336:
+ if(!bitmap_bh) {
+ ext4_error (sb, "ext4_check_lastres_magic_inode",

ERROR:SPACING: space required before the open parenthesis '('
#1278: FILE: fs/ext4/super.c:1336:
+ if(!bitmap_bh) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1279: FILE: fs/ext4/super.c:1337:
+ ext4_error (sb, "ext4_check_lastres_magic_inode",$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1279: FILE: fs/ext4/super.c:1337:
+ ext4_error (sb, "ext4_check_lastres_magic_inode",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1280: FILE: fs/ext4/super.c:1338:
+ ext4_error (sb, "ext4_check_lastres_magic_inode",
+ "can not read inode bitmap for group %d",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1280: FILE: fs/ext4/super.c:1338:
+ "can not read inode bitmap for group %d",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1281: FILE: fs/ext4/super.c:1339:
+ group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1282: FILE: fs/ext4/super.c:1340:
+ return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1283: FILE: fs/ext4/super.c:1341:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1285: FILE: fs/ext4/super.c:1343:
+ lastres_ino = ext4_get_group_lastres_ino(sb, group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1286: FILE: fs/ext4/super.c:1344:
+ itable_offset = (lastres_ino % EXT4_INODES_PER_GROUP(sb)) - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1287: FILE: fs/ext4/super.c:1345:
+ if(ext4_test_bit(itable_offset, bitmap_bh->b_data)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1287: FILE: fs/ext4/super.c:1345:
+ if(ext4_test_bit(itable_offset, bitmap_bh->b_data)) {
+ if(ext4_get_magic_inode_loc(sb, lastres_ino, &iloc) < 0) {

ERROR:SPACING: space required before the open parenthesis '('
#1287: FILE: fs/ext4/super.c:1345:
+ if(ext4_test_bit(itable_offset, bitmap_bh->b_data)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1288: FILE: fs/ext4/super.c:1346:
+ if(ext4_get_magic_inode_loc(sb, lastres_ino, &iloc) < 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1288: FILE: fs/ext4/super.c:1346:
+ if(ext4_get_magic_inode_loc(sb, lastres_ino, &iloc) < 0) {
+ ext4_error (sb, "ext4_check_lastres_magic_inode",

ERROR:SPACING: space required before the open parenthesis '('
#1288: FILE: fs/ext4/super.c:1346:
+ if(ext4_get_magic_inode_loc(sb, lastres_ino, &iloc) < 0) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1289: FILE: fs/ext4/super.c:1347:
+ ext4_error (sb, "ext4_check_lastres_magic_inode",$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1289: FILE: fs/ext4/super.c:1347:
+ ext4_error (sb, "ext4_check_lastres_magic_inode",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1290: FILE: fs/ext4/super.c:1348:
+ ext4_error (sb, "ext4_check_lastres_magic_inode",
+ "failed to load inode block - inode %lu, "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1290: FILE: fs/ext4/super.c:1348:
+ "failed to load inode block - inode %lu, "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1291: FILE: fs/ext4/super.c:1349:
+ "group %d", lastres_ino, group);$

WARNING:SPLIT_STRING: quoted string split across lines
#1291: FILE: fs/ext4/super.c:1349:
+ "failed to load inode block - inode %lu, "
+ "group %d", lastres_ino, group);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1292: FILE: fs/ext4/super.c:1350:
+ brelse(bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1293: FILE: fs/ext4/super.c:1351:
+ return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1294: FILE: fs/ext4/super.c:1352:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1295: FILE: fs/ext4/super.c:1353:
+ magic_inode = (struct ext4_magic_inode *)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1296: FILE: fs/ext4/super.c:1354:
+ ((char *)iloc.bh->b_data + iloc.offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1298: FILE: fs/ext4/super.c:1356:
+ if(!ext4_magic_inode(magic_inode, EXT4_MINODE_TYPE_LASTRES)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1298: FILE: fs/ext4/super.c:1356:
+ if(!ext4_magic_inode(magic_inode, EXT4_MINODE_TYPE_LASTRES)) {
+ ext4_error(sb, "ext4_check_lastres_magic_inode",

ERROR:SPACING: space required before the open parenthesis '('
#1298: FILE: fs/ext4/super.c:1356:
+ if(!ext4_magic_inode(magic_inode, EXT4_MINODE_TYPE_LASTRES)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1299: FILE: fs/ext4/super.c:1357:
+ ext4_error(sb, "ext4_check_lastres_magic_inode",$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1300: FILE: fs/ext4/super.c:1358:
+ ext4_error(sb, "ext4_check_lastres_magic_inode",
+ "inode %lu in group %d is not "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1300: FILE: fs/ext4/super.c:1358:
+ "inode %lu in group %d is not "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1301: FILE: fs/ext4/super.c:1359:
+ "EXT4_MINODE_TYPE_LASTRES magic inode",$

WARNING:SPLIT_STRING: quoted string split across lines
#1301: FILE: fs/ext4/super.c:1359:
+ "inode %lu in group %d is not "
+ "EXT4_MINODE_TYPE_LASTRES magic inode",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1302: FILE: fs/ext4/super.c:1360:
+ lastres_ino, group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1303: FILE: fs/ext4/super.c:1361:
+ brelse(bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1304: FILE: fs/ext4/super.c:1362:
+ brelse(iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1305: FILE: fs/ext4/super.c:1363:
+ return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1306: FILE: fs/ext4/super.c:1364:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1307: FILE: fs/ext4/super.c:1365:
+ printk(KERN_DEBUG "group %d last reserved inode %lu.\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1307: FILE: fs/ext4/super.c:1365:
+ printk(KERN_DEBUG "group %d last reserved inode %lu.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1308: FILE: fs/ext4/super.c:1366:
+ printk(KERN_DEBUG "group %d last reserved inode %lu.\n",
+ group, le32_to_cpu(magic_inode->mi_lastres_ino));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1308: FILE: fs/ext4/super.c:1366:
+ group, le32_to_cpu(magic_inode->mi_lastres_ino));$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1309: FILE: fs/ext4/super.c:1367:
+ if(le32_to_cpu(magic_inode->mi_lastres_ino) > $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1309: FILE: fs/ext4/super.c:1367:
+ if(le32_to_cpu(magic_inode->mi_lastres_ino) > $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1309: FILE: fs/ext4/super.c:1367:
+ if(le32_to_cpu(magic_inode->mi_lastres_ino) > 
[...]
+ ext4_error(sb, "ext4_check_lastres_magic_inode",

ERROR:SPACING: space required before the open parenthesis '('
#1309: FILE: fs/ext4/super.c:1367:
+ if(le32_to_cpu(magic_inode->mi_lastres_ino) > 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1310: FILE: fs/ext4/super.c:1368:
+ ((group + 1) * EXT4_INODES_PER_GROUP(sb))) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1311: FILE: fs/ext4/super.c:1369:
+ ext4_error(sb, "ext4_check_lastres_magic_inode",$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1312: FILE: fs/ext4/super.c:1370:
+ ext4_error(sb, "ext4_check_lastres_magic_inode",
+ "last reserved inode %d is not in inode "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1312: FILE: fs/ext4/super.c:1370:
+ "last reserved inode %d is not in inode "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1313: FILE: fs/ext4/super.c:1371:
+ "table of group %d",$

WARNING:SPLIT_STRING: quoted string split across lines
#1313: FILE: fs/ext4/super.c:1371:
+ "last reserved inode %d is not in inode "
+ "table of group %d",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1314: FILE: fs/ext4/super.c:1372:
+ (int)le32_to_cpu(magic_inode->mi_lastres_ino), group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1315: FILE: fs/ext4/super.c:1373:
+ brelse(bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1316: FILE: fs/ext4/super.c:1374:
+ brelse(iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1317: FILE: fs/ext4/super.c:1375:
+ return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1318: FILE: fs/ext4/super.c:1376:
+ }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1319: FILE: fs/ext4/super.c:1377:
+ i = EXT4_INODES_PER_GROUP(sb) - $

CHECK:SPACING: No space is necessary after a cast
#1319: FILE: fs/ext4/super.c:1377:
+ i = EXT4_INODES_PER_GROUP(sb) - 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1319: FILE: fs/ext4/super.c:1377:
+ i = EXT4_INODES_PER_GROUP(sb) - $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1320: FILE: fs/ext4/super.c:1378:
+ le32_to_cpu(gdp->bg_free_inodes_count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1321: FILE: fs/ext4/super.c:1379:
+ for(prev_offset = 0, offset = 0; i > 0; i --, offset ++)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1321: FILE: fs/ext4/super.c:1379:
+ for(prev_offset = 0, offset = 0; i > 0; i --, offset ++)
+ {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1321: FILE: fs/ext4/super.c:1379:
+ for(prev_offset = 0, offset = 0; i > 0; i --, offset ++)
+ {

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#1321: FILE: fs/ext4/super.c:1379:
+ for(prev_offset = 0, offset = 0; i > 0; i --, offset ++)
                                                       ^

ERROR:SPACING: space required before the open parenthesis '('
#1321: FILE: fs/ext4/super.c:1379:
+ for(prev_offset = 0, offset = 0; i > 0; i --, offset ++)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1322: FILE: fs/ext4/super.c:1380:
+ {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1323: FILE: fs/ext4/super.c:1381:
+ offset = find_next_bit((unsigned long *)bitmap_bh->b_data, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1323: FILE: fs/ext4/super.c:1381:
+ offset = find_next_bit((unsigned long *)bitmap_bh->b_data, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1324: FILE: fs/ext4/super.c:1382:
+ offset = find_next_bit((unsigned long *)bitmap_bh->b_data, 
+ EXT4_INODES_PER_GROUP(sb), offset);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1324: FILE: fs/ext4/super.c:1382:
+ EXT4_INODES_PER_GROUP(sb), offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1325: FILE: fs/ext4/super.c:1383:
+ if (offset != itable_offset)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1325: FILE: fs/ext4/super.c:1383:
+ if (offset != itable_offset)
+ prev_offset = offset;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1326: FILE: fs/ext4/super.c:1384:
+ prev_offset = offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1327: FILE: fs/ext4/super.c:1385:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1328: FILE: fs/ext4/super.c:1386:
+ offset --;$

ERROR:SPACING: space prohibited before that '--' (ctx:WxO)
#1328: FILE: fs/ext4/super.c:1386:
+ offset --;
         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1329: FILE: fs/ext4/super.c:1387:
+ if(offset == itable_offset)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1329: FILE: fs/ext4/super.c:1387:
+ if(offset == itable_offset)
+ offset = prev_offset;

ERROR:SPACING: space required before the open parenthesis '('
#1329: FILE: fs/ext4/super.c:1387:
+ if(offset == itable_offset)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1330: FILE: fs/ext4/super.c:1388:
+ offset = prev_offset;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1331: FILE: fs/ext4/super.c:1389:
+ if(offset > (le32_to_cpu(magic_inode->mi_lastres_ino) - 1) % $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1331: FILE: fs/ext4/super.c:1389:
+ if(offset > (le32_to_cpu(magic_inode->mi_lastres_ino) - 1) % $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1331: FILE: fs/ext4/super.c:1389:
+ if(offset > (le32_to_cpu(magic_inode->mi_lastres_ino) - 1) % 
[...]
+ printk(KERN_INFO "last reserved inode offset in "

ERROR:SPACING: space required before the open parenthesis '('
#1331: FILE: fs/ext4/super.c:1389:
+ if(offset > (le32_to_cpu(magic_inode->mi_lastres_ino) - 1) % 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1332: FILE: fs/ext4/super.c:1390:
+ EXT4_INODES_PER_GROUP(sb)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1333: FILE: fs/ext4/super.c:1391:
+ printk(KERN_INFO "last reserved inode offset in "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1333: FILE: fs/ext4/super.c:1391:
+ printk(KERN_INFO "last reserved inode offset in "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1334: FILE: fs/ext4/super.c:1392:
+ "magic inode (group %d) does not match "$

WARNING:SPLIT_STRING: quoted string split across lines
#1334: FILE: fs/ext4/super.c:1392:
+ printk(KERN_INFO "last reserved inode offset in "
+ "magic inode (group %d) does not match "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1335: FILE: fs/ext4/super.c:1393:
+ "in inode bitmap\n", group);$

WARNING:SPLIT_STRING: quoted string split across lines
#1335: FILE: fs/ext4/super.c:1393:
+ "magic inode (group %d) does not match "
+ "in inode bitmap\n", group);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1336: FILE: fs/ext4/super.c:1394:
+ printk(KERN_INFO "set last reserved inode offset "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1336: FILE: fs/ext4/super.c:1394:
+ printk(KERN_INFO "set last reserved inode offset "

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1337: FILE: fs/ext4/super.c:1395:
+ "from %d to %lu for group %d\n", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1337: FILE: fs/ext4/super.c:1395:
+ "from %d to %lu for group %d\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#1337: FILE: fs/ext4/super.c:1395:
+ printk(KERN_INFO "set last reserved inode offset "
+ "from %d to %lu for group %d\n", 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1338: FILE: fs/ext4/super.c:1396:
+ (int)le32_to_cpu(magic_inode->mi_lastres_ino),$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1339: FILE: fs/ext4/super.c:1397:
+ group * EXT4_INODES_PER_GROUP(sb) + offset, $

CHECK:SPACING: No space is necessary after a cast
#1339: FILE: fs/ext4/super.c:1397:
+ group * EXT4_INODES_PER_GROUP(sb) + offset, 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1339: FILE: fs/ext4/super.c:1397:
+ group * EXT4_INODES_PER_GROUP(sb) + offset, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1340: FILE: fs/ext4/super.c:1398:
+ group);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1341: FILE: fs/ext4/super.c:1399:
+ magic_inode->mi_lastres_ino = $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1341: FILE: fs/ext4/super.c:1399:
+ magic_inode->mi_lastres_ino = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1342: FILE: fs/ext4/super.c:1400:
+ cpu_to_le32(group * EXT4_INODES_PER_GROUP(sb) + $

CHECK:SPACING: No space is necessary after a cast
#1342: FILE: fs/ext4/super.c:1400:
+ cpu_to_le32(group * EXT4_INODES_PER_GROUP(sb) + 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1342: FILE: fs/ext4/super.c:1400:
+ cpu_to_le32(group * EXT4_INODES_PER_GROUP(sb) + $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1343: FILE: fs/ext4/super.c:1401:
+     offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1344: FILE: fs/ext4/super.c:1402:
+ mark_buffer_dirty(iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1345: FILE: fs/ext4/super.c:1403:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1346: FILE: fs/ext4/super.c:1404:
+ } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1346: FILE: fs/ext4/super.c:1404:
+ } else {
+ printk(KERN_INFO "can not find EXT4_MINODE_LASTRES magic "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1347: FILE: fs/ext4/super.c:1405:
+ printk(KERN_INFO "can not find EXT4_MINODE_LASTRES magic "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1347: FILE: fs/ext4/super.c:1405:
+ printk(KERN_INFO "can not find EXT4_MINODE_LASTRES magic "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1348: FILE: fs/ext4/super.c:1406:
+ "inode in group %d. Disable inode_reservaion now\n",$

WARNING:SPLIT_STRING: quoted string split across lines
#1348: FILE: fs/ext4/super.c:1406:
+ printk(KERN_INFO "can not find EXT4_MINODE_LASTRES magic "
+ "inode in group %d. Disable inode_reservaion now\n",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1349: FILE: fs/ext4/super.c:1407:
+ group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1350: FILE: fs/ext4/super.c:1408:
+ clear_opt(sbi->s_mount_opt, INORES);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1351: FILE: fs/ext4/super.c:1409:
+ brelse(bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1352: FILE: fs/ext4/super.c:1410:
+ return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1353: FILE: fs/ext4/super.c:1411:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1354: FILE: fs/ext4/super.c:1412:
+ brelse(bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1355: FILE: fs/ext4/super.c:1413:
+ brelse(iloc.bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1356: FILE: fs/ext4/super.c:1414:
+ gdp = (struct ext4_group_desc *)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1357: FILE: fs/ext4/super.c:1415:
+ ((__u8 *)gdp + EXT4_DESC_SIZE(sb));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1358: FILE: fs/ext4/super.c:1416:
+ }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1359: FILE: fs/ext4/super.c:1417:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1359: FILE: fs/ext4/super.c:1417:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1360: FILE: fs/ext4/super.c:1418:
+ return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1373: FILE: fs/ext4/super.c:1864:
+ if(test_opt(sb, INORES) && !ext4_check_lastres_magic_inode(sb)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1373: FILE: fs/ext4/super.c:1864:
+ if(test_opt(sb, INORES) && !ext4_check_lastres_magic_inode(sb)) {
+ printk(KERN_ERR "EXT4-fs: EXT4_MINODE_TYPE_LASTRES "

ERROR:SPACING: space required before the open parenthesis '('
#1373: FILE: fs/ext4/super.c:1864:
+ if(test_opt(sb, INORES) && !ext4_check_lastres_magic_inode(sb)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1374: FILE: fs/ext4/super.c:1865:
+ printk(KERN_ERR "EXT4-fs: EXT4_MINODE_TYPE_LASTRES "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1374: FILE: fs/ext4/super.c:1865:
+ printk(KERN_ERR "EXT4-fs: EXT4_MINODE_TYPE_LASTRES "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1375: FILE: fs/ext4/super.c:1866:
+ "magic inodes correupted!\n");$

WARNING:SPLIT_STRING: quoted string split across lines
#1375: FILE: fs/ext4/super.c:1866:
+ printk(KERN_ERR "EXT4-fs: EXT4_MINODE_TYPE_LASTRES "
+ "magic inodes correupted!\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1376: FILE: fs/ext4/super.c:1867:
+ goto failed_mount2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1377: FILE: fs/ext4/super.c:1868:
+ }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1378: FILE: fs/ext4/super.c:1869:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1378: FILE: fs/ext4/super.c:1869:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1391: FILE: include/linux/ext4_fs.h:353:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1392: FILE: include/linux/ext4_fs.h:354:
+ * inode reservation for directories $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1403: FILE: include/linux/ext4_fs.h:365:
+ __le32 mi_zeropad; /* Zero pad */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1404: FILE: include/linux/ext4_fs.h:366:
+ __u8 mi_magic[EXT4_MINODE_MAGIC_LEN];/* Magic string */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1405: FILE: include/linux/ext4_fs.h:367:
+ __le32 mi_checksum; /* Checksum for magic string */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1406: FILE: include/linux/ext4_fs.h:368:
+ __le32 mi_type; /* Type of magic inode */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1407: FILE: include/linux/ext4_fs.h:369:
+ __le32 mi_lastres_ino; /* Offset in inode table, for */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1409: FILE: include/linux/ext4_fs.h:371:
+ __le32 mi_next_ino; /* Inode number for head inode of next */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1411: FILE: include/linux/ext4_fs.h:373:
+ __le32 mi_parent_ino; /* Dir inode number */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1412: FILE: include/linux/ext4_fs.h:374:
+ __le32 mi_parent_ctime; /* Dir inode ctime */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1413: FILE: include/linux/ext4_fs.h:375:
+ __le32 mi_current_ressize; /* Reserved inodes size for current$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1415: FILE: include/linux/ext4_fs.h:376:
+ __le32 mi_current_ressize; /* Reserved inodes size for current
+ /* inodes area */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1416: FILE: include/linux/ext4_fs.h:377:
+ __le32 mi_next_ressize; /* Reserved inodes size for next reserved */$

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1438: FILE: include/linux/ext4_fs.h:955:
+extern int ext4_magic_inode(struct ext4_magic_inode * , int);
                                                       ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1438: FILE: include/linux/ext4_fs.h:955:
+extern int ext4_magic_inode(struct ext4_magic_inode * , int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ext4_magic_inode *' should also have an identifier name
#1438: FILE: include/linux/ext4_fs.h:955:
+extern int ext4_magic_inode(struct ext4_magic_inode * , int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1438: FILE: include/linux/ext4_fs.h:955:
+extern int ext4_magic_inode(struct ext4_magic_inode * , int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1439: FILE: include/linux/ext4_fs.h:956:
+extern void ext4_init_magic_inode(struct ext4_magic_inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ext4_magic_inode *' should also have an identifier name
#1439: FILE: include/linux/ext4_fs.h:956:
+extern void ext4_init_magic_inode(struct ext4_magic_inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1439: FILE: include/linux/ext4_fs.h:956:
+extern void ext4_init_magic_inode(struct ext4_magic_inode *, int);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1447: FILE: include/linux/ext4_fs.h:964:
+extern int ext4_magic_inode(struct ext4_magic_inode * magic_inode, int

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1447: FILE: include/linux/ext4_fs.h:964:
+extern int ext4_magic_inode(struct ext4_magic_inode * magic_inode, int

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1449: FILE: include/linux/ext4_fs.h:965:
+extern void ext4_init_magic_inode(struct ext4_magic_inode *

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1451: FILE: include/linux/ext4_fs.h:966:
+extern unsigned long ext4_get_group_lastres_ino(struct super_block *

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1453: FILE: include/linux/ext4_fs.h:967:
+extern int ext4_get_magic_inode_loc(struct super_block * sb,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1453: FILE: include/linux/ext4_fs.h:967:
+extern int ext4_get_magic_inode_loc(struct super_block * sb,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1454: FILE: include/linux/ext4_fs.h:968:
+extern int ext4_get_magic_inode_loc(struct super_block * sb,
+ unsigned long ino, struct ext4_iloc * iloc);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1454: FILE: include/linux/ext4_fs.h:968:
+ unsigned long ino, struct ext4_iloc * iloc);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1454: FILE: include/linux/ext4_fs.h:968:
+ unsigned long ino, struct ext4_iloc * iloc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1455: FILE: include/linux/ext4_fs.h:969:
+extern unsigned long ext4_unreserved_inodes(struct super_block *sb, int

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1457: FILE: include/linux/ext4_fs.h:970:
+int ext4_delete_link_magic_inodes(handle_t * handle, struct inode *

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1469: FILE: include/linux/ext4_fs.h:993:
+read_inode_bitmap(struct super_block * sb, unsigned long block_group);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000427558.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 232 errors, 1256 warnings, 91 checks, 1399 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000427558.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
