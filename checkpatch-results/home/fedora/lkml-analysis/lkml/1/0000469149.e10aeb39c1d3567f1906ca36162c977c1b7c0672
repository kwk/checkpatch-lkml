WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
Ensure pages are uptodate after returning from read_cache_page, which allows

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#26: 
Ensure pages are uptodate after returning from read_cache_page, which allows
                 ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#30: 
possible use-before uptodate in hfs, 2 in hfsplus, 1 in jfs, a few in ecryptfs,
                    ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#32: 
All depending on whether the filler is async and/or can return with a !uptodate
                                                                       ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#128: FILE: fs/cramfs/inode.c:184:
+			page = read_mapping_page_async(mapping, blocknr + i,
+									NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#172: FILE: mm/filemap.c:1750:
+static struct page *__read_cache_page(struct address_space *mapping,
 				unsigned long index,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#194: FILE: mm/filemap.c:1791:
+struct page *read_cache_page_async(struct address_space *mapping,
 				unsigned long index,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#217: FILE: mm/filemap.c:1838:
+struct page *read_cache_page(struct address_space *mapping,
+				unsigned long index,

ERROR:SPACING: space required after that ',' (ctx:OxV)
#218: FILE: mm/filemap.c:1839:
+				int (*filler)(void *,struct page*),
 				                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#259: FILE: fs/namei.c:2642:
+		return (char*)page;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#303: FILE: fs/ntfs/attrib.c:2535:
 			ntfs_error(vol->sb, "Failed to read first partial "
+					"page (error, index 0x%lx).", idx);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#319: FILE: fs/ntfs/attrib.c:2598:
 			ntfs_error(vol->sb, "Failed to read last partial page "
+					"(error, index 0x%lx).", idx);

WARNING:SPLIT_STRING: quoted string split across lines
#617: FILE: fs/ufs/util.c:258:
 			printk(KERN_ERR "ufs_change_blocknr: "
+			       "read_mapping_page error: ino %lu, index: %lu\n",

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#629: FILE: include/linux/pagemap.h:100:
+extern struct page * read_cache_page_async(struct address_space *mapping,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#629: FILE: include/linux/pagemap.h:100:
+extern struct page * read_cache_page_async(struct address_space *mapping,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#630: FILE: include/linux/pagemap.h:101:
+extern struct page * read_cache_page_async(struct address_space *mapping,
+				unsigned long index, filler_t *filler,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#638: FILE: include/linux/pagemap.h:109:
+static inline struct page *read_mapping_page_async(

WARNING:LINE_SPACING: Missing a blank line after declarations
#643: FILE: include/linux/pagemap.h:114:
+	filler_t *filler = (filler_t *)mapping->a_ops->readpage;
+	return read_cache_page_async(mapping, index, filler, data);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000469149.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 8 warnings, 7 checks, 456 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000469149.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
