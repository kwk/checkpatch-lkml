CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "up->port.state"
#160: FILE: drivers/serial/8250.c:1503:
+	    up->port.state != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#619: FILE: drivers/serial/imx.c:908:
+		tty_encode_baud_rate(sport->port.state->port.tty,
 				(speed_t)tdiv64, (speed_t)tdiv64);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "up->port.state"
#991: FILE: drivers/serial/ip22zilog.c:259:
+	if (up->port.state != NULL &&

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "up->port.state->port.tty"
#992: FILE: drivers/serial/ip22zilog.c:260:
+	    up->port.state->port.tty != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!up->port.state"
#1011: FILE: drivers/serial/ip22zilog.c:407:
+	if (up->port.state == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1095: FILE: drivers/serial/jsm/jsm_tty.c:869:
+		while ((port->state->xmit.head != temp_tail) &&
 		(data_count < remain)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1108: FILE: drivers/serial/jsm/jsm_tty.c:884:
+		while ((port->state->xmit.head != temp_tail) &&
 			(data_count1 < remain)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "s->port.state->port.tty"
#1183: FILE: drivers/serial/max3100.c:310:
+		if (rxchars > 16 && s->port.state->port.tty != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "s->port.state->port.tty"
#1194: FILE: drivers/serial/max3100.c:323:
+	if (rxchars > 0 && s->port.state->port.tty != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!uap->port.state"
#1398: FILE: drivers/serial/pmac_zilog.c:245:
+	if (uap->port.state == NULL || uap->port.state->port.tty == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!uap->port.state->port.tty"
#1398: FILE: drivers/serial/pmac_zilog.c:245:
+	if (uap->port.state == NULL || uap->port.state->port.tty == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!uap->port.state"
#1422: FILE: drivers/serial/pmac_zilog.c:423:
+	if (uap->port.state == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!uport->state"
#1576: FILE: drivers/serial/samsung.c:995:
+		if (uport->state == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "port->state"
#1623: FILE: drivers/serial/sc26xx.c:143:
+	if (port->state != NULL)		/* Unopened serial console */

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'state' - possible side-effects?
#1659: FILE: drivers/serial/serial_core.c:55:
+#define uart_users(state)	((state)->count + (state)->port.blocked_open)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1675: FILE: drivers/serial/serial_core.c:79:
+	BUG_ON(!state);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: No space is necessary after a cast
#1754: FILE: drivers/serial/serial_core.c:171:
+		state->xmit.buf = (unsigned char *) page;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2272: FILE: drivers/serial/serial_core.c:1486:
+		if (tty_hung_up_p(filp) || state->port.tty == NULL)
 		                  ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!state->port.tty"
#2272: FILE: drivers/serial/serial_core.c:1486:
+		if (tty_hung_up_p(filp) || state->port.tty == NULL)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2318: FILE: drivers/serial/serial_core.c:1544:
+	if (!state->port.tty || tty_hung_up_p(filp))
 	                                      ^^^^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2592: FILE: drivers/serial/serial_lh7a40x.c:141:
+	struct tty_struct* tty = port->state->port.tty;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2601: FILE: drivers/serial/serial_lh7a40x.c:187:
+	struct circ_buf* xmit = &port->state->xmit;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2610: FILE: drivers/serial/serial_lh7a40x.c:244:
+	wake_up_interruptible (&port->state->delta_msr_wait);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lhead != port->sc_port.state->xmit.head'
#2738: FILE: drivers/serial/sn_console.c:965:
+				if ((lhead != port->sc_port.state->xmit.head)
 				    || (ltail !=
+					port->sc_port.state->xmit.tail)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ltail !=
 					port->sc_port.state->xmit.tail'
#2738: FILE: drivers/serial/sn_console.c:965:
+				if ((lhead != port->sc_port.state->xmit.head)
 				    || (ltail !=
+					port->sc_port.state->xmit.tail)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "port->state"
#2761: FILE: drivers/serial/sunhv.c:187:
+	if (port->state != NULL)		/* Unopened serial console */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "up->port.state"
#2789: FILE: drivers/serial/sunsab.c:120:
+	if (up->port.state != NULL)		/* Unopened serial console */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "up->port.state"
#2863: FILE: drivers/serial/sunzilog.c:331:
+	if (up->port.state != NULL &&		/* Unopened serial console */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "up->port.state->port.tty"
#2864: FILE: drivers/serial/sunzilog.c:332:
+	    up->port.state->port.tty != NULL)	/* Keyboard || mouse */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!up->port.state"
#2883: FILE: drivers/serial/sunzilog.c:504:
+	if (up->port.state == NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3086: FILE: include/linux/serial_core.h:345:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000070007.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 4 warnings, 25 checks, 2670 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000070007.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
