CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#106: FILE: arch/x86/kernel/cpu/mtrr/main.c:645:
+add_range(struct res_range *range, int nr_range, unsigned long start,
+			      unsigned long end)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#125: FILE: arch/x86/kernel/cpu/mtrr/main.c:661:
+add_range_with_merge(struct res_range *range, int nr_range, unsigned long start,
+			      unsigned long end)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#183: FILE: arch/x86/kernel/cpu/mtrr/main.c:757:
+set_var_mtrr(unsigned int reg, unsigned long basek, unsigned long sizek,
+		unsigned char type, unsigned address_bits)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#183: FILE: arch/x86/kernel/cpu/mtrr/main.c:757:
+		unsigned char type, unsigned address_bits)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#212: FILE: arch/x86/kernel/cpu/mtrr/main.c:775:
+	base_lo = base & ((1ULL<<32) - 1);
 	                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#215: FILE: arch/x86/kernel/cpu/mtrr/main.c:778:
+	mask_lo = mask & ((1ULL<<32) - 1);
 	                       ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#229: FILE: arch/x86/kernel/cpu/mtrr/main.c:787:
+	      unsigned address_bits)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#257: FILE: arch/x86/kernel/cpu/mtrr/main.c:851:
+	if (range0_sizek == state->range_sizek) {
 			printk(KERN_INFO "rangeX: %016lx - %016lx\n", range0_basek<<10, (range0_basek + state->range_sizek)<<10);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#262: FILE: arch/x86/kernel/cpu/mtrr/main.c:856:
+	} else if (basek) {
+	    while (range0_basek + range0_sizek - chunk_sizek > basek) {

WARNING:TABSTOP: Statements should start on a tabstop
#263: FILE: arch/x86/kernel/cpu/mtrr/main.c:857:
+	    while (range0_basek + range0_sizek - chunk_sizek > basek) {

WARNING:TABSTOP: Statements should start on a tabstop
#267: FILE: arch/x86/kernel/cpu/mtrr/main.c:861:
+	    }

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#303: FILE: arch/x86/kernel/cpu/mtrr/main.c:934:
+static u64 mtrr_gran_size __initdata = (1ULL<<20);
                                             ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#314: FILE: arch/x86/kernel/cpu/mtrr/main.c:947:
+		    unsigned address_bits)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000287996.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 6 checks, 316 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000287996.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
