WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#62: 
documentation for TXT support and for the changes to the boot_params structure,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#115: FILE: arch/x86/include/asm/tboot.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#132: FILE: arch/x86/include/asm/tboot.h:18:
+ * this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#133: FILE: arch/x86/include/asm/tboot.h:19:
+ * 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#225: FILE: arch/x86/include/asm/tboot.h:111:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#233: FILE: arch/x86/include/asm/tboot.h:119:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tboot"
#257: FILE: arch/x86/include/asm/tboot.h:143:
+	return tboot != NULL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#260: FILE: arch/x86/include/asm/tboot.h:146:
+extern void tboot_probe(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#261: FILE: arch/x86/include/asm/tboot.h:147:
+extern void tboot_create_trampoline(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#262: FILE: arch/x86/include/asm/tboot.h:148:
+extern void tboot_shutdown(u32 shutdown_type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#263: FILE: arch/x86/include/asm/tboot.h:149:
+extern void tboot_sleep(u8 sleep_state, u32 pm1a_control, u32 pm1b_control);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#264: FILE: arch/x86/include/asm/tboot.h:150:
+extern int tboot_wait_for_aps(int num_aps);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#265: FILE: arch/x86/include/asm/tboot.h:151:
+extern struct acpi_table_header *tboot_get_dmar_table(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#265: FILE: arch/x86/include/asm/tboot.h:151:
+extern struct acpi_table_header *tboot_get_dmar_table(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#267: FILE: arch/x86/include/asm/tboot.h:153:
+extern int tboot_force_iommu(void);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#298: FILE: arch/x86/include/asm/tboot.h:184:
+static inline struct acpi_table_header *tboot_get_dmar_table(

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#348: FILE: arch/x86/kernel/tboot.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#364: FILE: arch/x86/kernel/tboot.c:17:
+ * this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#365: FILE: arch/x86/kernel/tboot.c:18:
+ * 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#379: FILE: arch/x86/kernel/tboot.c:32:
+#include <asm/processor.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#381: FILE: arch/x86/kernel/tboot.c:34:
+#include <asm/pgtable.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#386: FILE: arch/x86/kernel/tboot.c:39:
+#include <asm/io.h>

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'tbg' - possible side-effects?
#565: FILE: arch/x86/kernel/tboot.c:218:
+#define TB_COPY_GAS(tbg, g)			\
+	tbg.space_id     = g.space_id;		\
+	tbg.bit_width    = g.bit_width;		\
+	tbg.bit_offset   = g.bit_offset;	\
+	tbg.access_width = g.access_width;	\
+	tbg.address      = g.address;

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'g' - possible side-effects?
#565: FILE: arch/x86/kernel/tboot.c:218:
+#define TB_COPY_GAS(tbg, g)			\
+	tbg.space_id     = g.space_id;		\
+	tbg.bit_width    = g.bit_width;		\
+	tbg.bit_offset   = g.bit_offset;	\
+	tbg.access_width = g.access_width;	\
+	tbg.address      = g.address;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#565: FILE: arch/x86/kernel/tboot.c:218:
+#define TB_COPY_GAS(tbg, g)			\
+	tbg.space_id     = g.space_id;		\
+	tbg.bit_width    = g.bit_width;		\
+	tbg.bit_offset   = g.bit_offset;	\
+	tbg.access_width = g.access_width;	\
+	tbg.address      = g.address;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#620: FILE: arch/x86/kernel/tboot.c:273:
+	timeout = jiffies + AP_WAIT_TIMEOUT*HZ;
 	                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'sysem' may be misspelled - perhaps 'system'?
#969: FILE: security/Kconfig:126:
+	  Intel TXT will provide higher assurance of sysem configuration and
 	                                             ^^^^^

Some words may have been misspelled.  Consider reviewing them.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000102065.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 5 warnings, 18 checks, 870 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000102065.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
