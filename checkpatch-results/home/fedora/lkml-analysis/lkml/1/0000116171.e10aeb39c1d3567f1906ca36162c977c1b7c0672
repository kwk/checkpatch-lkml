WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
This driver is a port the Atmel AVR32 MCI driver which uses similar silicon.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#78: FILE: arch/arm/mach-at91/Kconfig:329:
+config AT91_2MMC
+	bool "Use both MMC Ports"
+	depends on MACH_AT91SAM9G20EK
+	help
+	  Select this if you have connected both MMC Slots.  Answer No if unsure.
+
 # ----------------------------------------------------------

Kconfig symbols should have a help text which fully describes
it.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#93: FILE: arch/arm/mach-at91/at91sam9260_devices.c:274:
struct at91_mmc_data *data)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#100: FILE: arch/arm/mach-at91/at91sam9260_devices.c:281:
+ * -------------------------------------------------------------------- */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: arch/arm/mach-at91/at91sam9260_devices.c:314:
+        unsigned int i;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: arch/arm/mach-at91/at91sam9260_devices.c:314:
+        unsigned int i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: arch/arm/mach-at91/at91sam9260_devices.c:315:
+        unsigned int slot_count = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: arch/arm/mach-at91/at91sam9260_devices.c:315:
+        unsigned int slot_count = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: arch/arm/mach-at91/at91sam9260_devices.c:320:
+        for (i = 0; i < AT91_MCI_MAX_NR_SLOTS; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: arch/arm/mach-at91/at91sam9260_devices.c:320:
+        for (i = 0; i < AT91_MCI_MAX_NR_SLOTS; i++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: arch/arm/mach-at91/at91sam9260_devices.c:321:
+                if (data->slot[i].bus_width) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: arch/arm/mach-at91/at91sam9260_devices.c:321:
+                if (data->slot[i].bus_width) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: arch/arm/mach-at91/at91sam9260_devices.c:322:
+                        /* input/irq */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: arch/arm/mach-at91/at91sam9260_devices.c:323:
+                        if (data->slot[i].det_pin) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: arch/arm/mach-at91/at91sam9260_devices.c:323:
+                        if (data->slot[i].det_pin) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: arch/arm/mach-at91/at91sam9260_devices.c:324:
+                                at91_set_gpio_input(data->slot[i].det_pin, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: arch/arm/mach-at91/at91sam9260_devices.c:324:
+                                at91_set_gpio_input(data->slot[i].det_pin, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: arch/arm/mach-at91/at91sam9260_devices.c:325:
+                                at91_set_deglitch(data->slot[i].det_pin, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: arch/arm/mach-at91/at91sam9260_devices.c:325:
+                                at91_set_deglitch(data->slot[i].det_pin, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: arch/arm/mach-at91/at91sam9260_devices.c:326:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: arch/arm/mach-at91/at91sam9260_devices.c:326:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: arch/arm/mach-at91/at91sam9260_devices.c:327:
+                if (data->slot[i].wp_pin)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: arch/arm/mach-at91/at91sam9260_devices.c:327:
+                if (data->slot[i].wp_pin)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: arch/arm/mach-at91/at91sam9260_devices.c:328:
+                        at91_set_gpio_input(data->slot[i].wp_pin, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: arch/arm/mach-at91/at91sam9260_devices.c:328:
+                        at91_set_gpio_input(data->slot[i].wp_pin, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: arch/arm/mach-at91/at91sam9260_devices.c:329:
+                if (data->slot[i].vcc_pin)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: arch/arm/mach-at91/at91sam9260_devices.c:329:
+                if (data->slot[i].vcc_pin)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: arch/arm/mach-at91/at91sam9260_devices.c:330:
+                        at91_set_gpio_output(data->slot[i].vcc_pin, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: arch/arm/mach-at91/at91sam9260_devices.c:330:
+                        at91_set_gpio_output(data->slot[i].vcc_pin, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: arch/arm/mach-at91/at91sam9260_devices.c:332:
+                switch(i) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: arch/arm/mach-at91/at91sam9260_devices.c:332:
+                switch(i) {$

ERROR:SPACING: space required before the open parenthesis '('
#151: FILE: arch/arm/mach-at91/at91sam9260_devices.c:332:
+                switch(i) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: arch/arm/mach-at91/at91sam9260_devices.c:333:
+                case 0:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: arch/arm/mach-at91/at91sam9260_devices.c:333:
+                case 0:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: arch/arm/mach-at91/at91sam9260_devices.c:334:
+                        /* CMD */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: arch/arm/mach-at91/at91sam9260_devices.c:335:
+                        at91_set_A_periph(AT91_PIN_PA7, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: arch/arm/mach-at91/at91sam9260_devices.c:335:
+                        at91_set_A_periph(AT91_PIN_PA7, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: arch/arm/mach-at91/at91sam9260_devices.c:336:
+                        /* DAT0, maybe DAT1..DAT3 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: arch/arm/mach-at91/at91sam9260_devices.c:337:
+                        at91_set_A_periph(AT91_PIN_PA6, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: arch/arm/mach-at91/at91sam9260_devices.c:337:
+                        at91_set_A_periph(AT91_PIN_PA6, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: arch/arm/mach-at91/at91sam9260_devices.c:338:
+                        if (data->slot[i].bus_width == 4) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: arch/arm/mach-at91/at91sam9260_devices.c:338:
+                        if (data->slot[i].bus_width == 4) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: arch/arm/mach-at91/at91sam9260_devices.c:339:
+                                at91_set_A_periph(AT91_PIN_PA9, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: arch/arm/mach-at91/at91sam9260_devices.c:339:
+                                at91_set_A_periph(AT91_PIN_PA9, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: arch/arm/mach-at91/at91sam9260_devices.c:340:
+                                at91_set_A_periph(AT91_PIN_PA10, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: arch/arm/mach-at91/at91sam9260_devices.c:340:
+                                at91_set_A_periph(AT91_PIN_PA10, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: arch/arm/mach-at91/at91sam9260_devices.c:341:
+                                at91_set_A_periph(AT91_PIN_PA11, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: arch/arm/mach-at91/at91sam9260_devices.c:341:
+                                at91_set_A_periph(AT91_PIN_PA11, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: arch/arm/mach-at91/at91sam9260_devices.c:342:
+                        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: arch/arm/mach-at91/at91sam9260_devices.c:342:
+                        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: arch/arm/mach-at91/at91sam9260_devices.c:343:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: arch/arm/mach-at91/at91sam9260_devices.c:343:
+                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: arch/arm/mach-at91/at91sam9260_devices.c:344:
+                case 1:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: arch/arm/mach-at91/at91sam9260_devices.c:344:
+                case 1:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: arch/arm/mach-at91/at91sam9260_devices.c:345:
+                        /* CMD */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: arch/arm/mach-at91/at91sam9260_devices.c:346:
+                        at91_set_B_periph(AT91_PIN_PA1, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: arch/arm/mach-at91/at91sam9260_devices.c:346:
+                        at91_set_B_periph(AT91_PIN_PA1, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: arch/arm/mach-at91/at91sam9260_devices.c:347:
+                        /* DAT0, maybe DAT1..DAT3 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: arch/arm/mach-at91/at91sam9260_devices.c:348:
+                        at91_set_B_periph(AT91_PIN_PA0, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: arch/arm/mach-at91/at91sam9260_devices.c:348:
+                        at91_set_B_periph(AT91_PIN_PA0, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: arch/arm/mach-at91/at91sam9260_devices.c:349:
+                        if (data->slot[i].bus_width == 4) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: arch/arm/mach-at91/at91sam9260_devices.c:349:
+                        if (data->slot[i].bus_width == 4) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: arch/arm/mach-at91/at91sam9260_devices.c:350:
+                                at91_set_B_periph(AT91_PIN_PA5, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: arch/arm/mach-at91/at91sam9260_devices.c:350:
+                                at91_set_B_periph(AT91_PIN_PA5, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: arch/arm/mach-at91/at91sam9260_devices.c:351:
+                                at91_set_B_periph(AT91_PIN_PA4, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: arch/arm/mach-at91/at91sam9260_devices.c:351:
+                                at91_set_B_periph(AT91_PIN_PA4, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: arch/arm/mach-at91/at91sam9260_devices.c:352:
+                                at91_set_B_periph(AT91_PIN_PA3, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: arch/arm/mach-at91/at91sam9260_devices.c:352:
+                                at91_set_B_periph(AT91_PIN_PA3, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: arch/arm/mach-at91/at91sam9260_devices.c:353:
+                        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: arch/arm/mach-at91/at91sam9260_devices.c:353:
+                        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: arch/arm/mach-at91/at91sam9260_devices.c:354:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: arch/arm/mach-at91/at91sam9260_devices.c:354:
+                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: arch/arm/mach-at91/at91sam9260_devices.c:355:
+                default:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: arch/arm/mach-at91/at91sam9260_devices.c:356:
+                    break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: arch/arm/mach-at91/at91sam9260_devices.c:356:
+                    break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: arch/arm/mach-at91/at91sam9260_devices.c:357:
+                };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: arch/arm/mach-at91/at91sam9260_devices.c:357:
+                };$

ERROR:CODE_INDENT: code indent should use tabs where possible
#177: FILE: arch/arm/mach-at91/at91sam9260_devices.c:358:
+                slot_count++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: arch/arm/mach-at91/at91sam9260_devices.c:358:
+                slot_count++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: arch/arm/mach-at91/at91sam9260_devices.c:359:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: arch/arm/mach-at91/at91sam9260_devices.c:359:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: arch/arm/mach-at91/at91sam9260_devices.c:360:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: arch/arm/mach-at91/at91sam9260_devices.c:360:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: arch/arm/mach-at91/at91sam9260_devices.c:362:
+        if (slot_count) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: arch/arm/mach-at91/at91sam9260_devices.c:362:
+        if (slot_count) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: arch/arm/mach-at91/at91sam9260_devices.c:363:
+                /* CLK */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: arch/arm/mach-at91/at91sam9260_devices.c:364:
+                at91_set_A_periph(AT91_PIN_PA8, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: arch/arm/mach-at91/at91sam9260_devices.c:364:
+                at91_set_A_periph(AT91_PIN_PA8, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: arch/arm/mach-at91/at91sam9260_devices.c:366:
+                mmc_data = *data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: arch/arm/mach-at91/at91sam9260_devices.c:366:
+                mmc_data = *data;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: arch/arm/mach-at91/at91sam9260_devices.c:367:
+                platform_device_register(&at91sam9260_mmc_device);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: arch/arm/mach-at91/at91sam9260_devices.c:367:
+                platform_device_register(&at91sam9260_mmc_device);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: arch/arm/mach-at91/at91sam9260_devices.c:368:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: arch/arm/mach-at91/at91sam9260_devices.c:368:
+        }$

WARNING:MISPLACED_INIT: __initdata should be placed after ek_mmc_data
#245: FILE: arch/arm/mach-at91/board-sam9g20ek.c:209:
+static struct at91_mmc_data __initdata ek_mmc_data = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: arch/arm/mach-at91/include/mach/board.h:82:
+        unsigned int            bus_width;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: arch/arm/mach-at91/include/mach/board.h:82:
+        unsigned int            bus_width;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#348: FILE: arch/arm/mach-at91/include/mach/board.h:83:
+        int                     det_pin;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: arch/arm/mach-at91/include/mach/board.h:83:
+        int                     det_pin;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#349: FILE: arch/arm/mach-at91/include/mach/board.h:84:
+        int                     wp_pin;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: arch/arm/mach-at91/include/mach/board.h:84:
+        int                     wp_pin;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#350: FILE: arch/arm/mach-at91/include/mach/board.h:85:
+        int                     vcc_pin;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: arch/arm/mach-at91/include/mach/board.h:85:
+        int                     vcc_pin;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#354: FILE: arch/arm/mach-at91/include/mach/board.h:89:
+        struct dma_slave        *dma_slave;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: arch/arm/mach-at91/include/mach/board.h:89:
+        struct dma_slave        *dma_slave;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#355: FILE: arch/arm/mach-at91/include/mach/board.h:90:
+        struct at91_mmc_slot_pdata   slot[AT91_MCI_MAX_NR_SLOTS];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: arch/arm/mach-at91/include/mach/board.h:90:
+        struct at91_mmc_slot_pdata   slot[AT91_MCI_MAX_NR_SLOTS];$

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#406: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#411: FILE: drivers/mmc/host/at91gen2-mci.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#440: FILE: drivers/mmc/host/at91gen2-mci.c:30:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/gpio.h> instead of <asm/gpio.h>
#442: FILE: drivers/mmc/host/at91gen2-mci.c:32:
+#include <asm/gpio.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#466: FILE: drivers/mmc/host/at91gen2-mci.c:56:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#467: FILE: drivers/mmc/host/at91gen2-mci.c:57:
+#define AT91MCI_DATA_ERROR_FLAGS	(AT91_MCI_RINDE | AT91_MCI_RDIRE |

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#469: FILE: drivers/mmc/host/at91gen2-mci.c:58:
+				 | AT91_MCI_RENDE | AT91_MCI_RTOE | AT91_MCI_DCRCE \

WARNING:TYPO_SPELLING: 'interupt' may be misspelled - perhaps 'interrupt'?
#557: FILE: drivers/mmc/host/at91gen2-mci.c:146:
+ * CMDRDY interupt must be disabled and @cmd_status updated with a
           ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#563: FILE: drivers/mmc/host/at91gen2-mci.c:152:
+	spinlock_t		lock;

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'host' may be better as '(host)' to avoid precedence issues
#636: FILE: drivers/mmc/host/at91gen2-mci.c:225:
+#define at91mci_test_and_clear_pending(host, event)		\
+	test_and_clear_bit(event, &host->pending_events)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'host' may be better as '(host)' to avoid precedence issues
#638: FILE: drivers/mmc/host/at91gen2-mci.c:227:
+#define at91mci_set_completed(host, event)			\
+	set_bit(event, &host->completed_events)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'host' may be better as '(host)' to avoid precedence issues
#640: FILE: drivers/mmc/host/at91gen2-mci.c:229:
+#define at91mci_set_pending(host, event)				\
+	set_bit(event, &host->pending_events)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#644: FILE: drivers/mmc/host/at91gen2-mci.c:233:
+#define at91_mci_write(host, reg, val)	__raw_writel((val),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#670: FILE: drivers/mmc/host/at91gen2-mci.c:258:
+			seq_printf(s,
+				"CMD%u(0x%x) flg %x rsp %x %x %x %x err %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#676: FILE: drivers/mmc/host/at91gen2-mci.c:264:
+			seq_printf(s, "DATA %u / %u * %u flg %x err %d\n",
+				data->bytes_xfered, data->blocks,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#680: FILE: drivers/mmc/host/at91gen2-mci.c:268:
+			seq_printf(s,
+				"CMD%u(0x%x) flg %x rsp %x %x %x %x err %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#705: FILE: drivers/mmc/host/at91gen2-mci.c:293:
+static void at91mci_show_status_reg(struct seq_file *s,
+		const char *regname, u32 value)

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#707: FILE: drivers/mmc/host/at91gen2-mci.c:295:
+	static const char	*sr_bit[] = {

WARNING:TYPO_SPELLING: 'RENDE' may be misspelled - perhaps 'RENDER'?
#723: FILE: drivers/mmc/host/at91gen2-mci.c:311:
+		[19]	= "RENDE",
 		    	   ^^^^^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#811: FILE: drivers/mmc/host/at91gen2-mci.c:399:
+	node = debugfs_create_file("regs", S_IRUSR, root, host,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#812: FILE: drivers/mmc/host/at91gen2-mci.c:400:
+	node = debugfs_create_file("regs", S_IRUSR, root, host,
+			&at91mci_regs_fops);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#818: FILE: drivers/mmc/host/at91gen2-mci.c:406:
+	node = debugfs_create_file("req", S_IRUSR, root, slot, &at91mci_req_fops);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#822: FILE: drivers/mmc/host/at91gen2-mci.c:410:
+	node = debugfs_create_u32("state", S_IRUSR, root, (u32 *)&host->state);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#826: FILE: drivers/mmc/host/at91gen2-mci.c:414:
+	node = debugfs_create_x32("pending_events", S_IRUSR, root,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#827: FILE: drivers/mmc/host/at91gen2-mci.c:415:
+	node = debugfs_create_x32("pending_events", S_IRUSR, root,
+				     (u32 *)&host->pending_events);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#831: FILE: drivers/mmc/host/at91gen2-mci.c:419:
+	node = debugfs_create_x32("completed_events", S_IRUSR, root,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#832: FILE: drivers/mmc/host/at91gen2-mci.c:420:
+	node = debugfs_create_x32("completed_events", S_IRUSR, root,
+				     (u32 *)&host->completed_events);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#849: FILE: drivers/mmc/host/at91gen2-mci.c:437:
+static void at91mci_set_timeout(struct at91_mci *host,
+		struct at91_mci_slot *slot, struct mmc_data *data)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#851: FILE: drivers/mmc/host/at91gen2-mci.c:439:
+	static unsigned	dtomul_to_shift[] = {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#854: FILE: drivers/mmc/host/at91gen2-mci.c:442:
+	unsigned	timeout;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#855: FILE: drivers/mmc/host/at91gen2-mci.c:443:
+	unsigned	dtocyc;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#856: FILE: drivers/mmc/host/at91gen2-mci.c:444:
+	unsigned	dtomul;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#861: FILE: drivers/mmc/host/at91gen2-mci.c:449:
+		unsigned shift = dtomul_to_shift[dtomul];

WARNING:LINE_SPACING: Missing a blank line after declarations
#862: FILE: drivers/mmc/host/at91gen2-mci.c:450:
+		unsigned shift = dtomul_to_shift[dtomul];
+		dtocyc = (timeout + (1 << shift) - 1) >> shift;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#873: FILE: drivers/mmc/host/at91gen2-mci.c:461:
+	dev_vdbg(&slot->mmc->class_dev, "setting timeout to %u cycles\n",
+			dtocyc << dtomul_to_shift[dtomul]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#882: FILE: drivers/mmc/host/at91gen2-mci.c:470:
+static u32 at91mci_prepare_command(struct mmc_host *mmc,
+				 struct mmc_command *cmd)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#926: FILE: drivers/mmc/host/at91gen2-mci.c:514:
+static void at91mci_start_command(struct at91_mci *host,
+		struct mmc_command *cmd, u32 cmd_flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#932: FILE: drivers/mmc/host/at91gen2-mci.c:520:
+	dev_vdbg(&host->pdev->dev,
+			"start command: ARGR=0x%08x CMDR=0x%08x\n",

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#952: FILE: drivers/mmc/host/at91gen2-mci.c:539:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1001: FILE: drivers/mmc/host/at91gen2-mci.c:588:
+static void at91mci_start_request(struct at91_mci *host,
+		struct at91_mci_slot *slot)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1028: FILE: drivers/mmc/host/at91gen2-mci.c:615:
+		dev_warn(&slot->mmc->class_dev, "WARNING: IMR=0x%08x\n",
+				iflags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1044: FILE: drivers/mmc/host/at91gen2-mci.c:631:
+		dev_vdbg(&slot->mmc->class_dev, "BLKR=0x%08x\n",
+			AT91_MCI_BLKR_BCNT(data->blocks) | AT91_MCI_BLKR_BLKLEN(data->blksz));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1076: FILE: drivers/mmc/host/at91gen2-mci.c:663:
+static void at91mci_queue_request(struct at91_mci *host,
+		struct at91_mci_slot *slot, struct mmc_request *mrq)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1079: FILE: drivers/mmc/host/at91gen2-mci.c:666:
+	dev_vdbg(&slot->mmc->class_dev, "queue request: state=%d\n",
+			host->state);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1157: FILE: drivers/mmc/host/at91gen2-mci.c:744:
+			if (host->slot[i] && host->slot[i]->clock
+					&& host->slot[i]->clock < clock_min)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1165: FILE: drivers/mmc/host/at91gen2-mci.c:752:
+			dev_warn(&mmc->class_dev,
+				"clock %u too slow; using %lu\n",

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1232: FILE: drivers/mmc/host/at91gen2-mci.c:819:
+	int			read_only = -ENOSYS;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1238: FILE: drivers/mmc/host/at91gen2-mci.c:825:
+		dev_dbg(&mmc->class_dev, "card is %s\n",
+				read_only ? "read-only" : "read-write");

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1246: FILE: drivers/mmc/host/at91gen2-mci.c:833:
+	int			present = -ENOSYS;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1252: FILE: drivers/mmc/host/at91gen2-mci.c:839:
+		dev_dbg(&mmc->class_dev, "card is %spresent\n",
+				present ? "" : "not ");

WARNING:TYPO_SPELLING: 'transfering' may be misspelled - perhaps 'transferring'?
#1278: FILE: drivers/mmc/host/at91gen2-mci.c:865:
+	 * busy transfering data.
 	        ^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1287: FILE: drivers/mmc/host/at91gen2-mci.c:874:
+		slot = list_entry(host->queue.next,
+				struct at91_mci_slot, queue_node);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1290: FILE: drivers/mmc/host/at91gen2-mci.c:877:
+		dev_vdbg(&host->pdev->dev, "list not empty: %s is next\n",
+				mmc_hostname(slot->mmc));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1304: FILE: drivers/mmc/host/at91gen2-mci.c:891:
+static void at91mci_command_complete(struct at91_mci *host,
+			struct mmc_command *cmd)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1358: FILE: drivers/mmc/host/at91gen2-mci.c:945:
+	dev_vdbg(&slot->mmc->class_dev, "detect change: %d (was %d)\n",
+			present, present_old);

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1396: FILE: drivers/mmc/host/at91gen2-mci.c:983:
+					/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1407: FILE: drivers/mmc/host/at91gen2-mci.c:994:
+					/* fall through */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1448: FILE: drivers/mmc/host/at91gen2-mci.c:1035:
+	dev_vdbg(&host->pdev->dev,
+		"tasklet: state %u pending/completed/mask %lx/%lx/%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1461: FILE: drivers/mmc/host/at91gen2-mci.c:1048:
+			if (!at91mci_test_and_clear_pending(host,
+						EVENT_CMD_COMPLETE))

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1472: FILE: drivers/mmc/host/at91gen2-mci.c:1059:
+			prev_state = state = STATE_SENDING_DATA;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1473: FILE: drivers/mmc/host/at91gen2-mci.c:1060:
+			/* fall through */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1477: FILE: drivers/mmc/host/at91gen2-mci.c:1064:
+			if (at91mci_test_and_clear_pending(host,
+						EVENT_DATA_ERROR)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1486: FILE: drivers/mmc/host/at91gen2-mci.c:1073:
+			if (!at91mci_test_and_clear_pending(host,
+						EVENT_XFER_COMPLETE))

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1490: FILE: drivers/mmc/host/at91gen2-mci.c:1077:
+			prev_state = state = STATE_DATA_BUSY;

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1491: FILE: drivers/mmc/host/at91gen2-mci.c:1078:
+			/* fall through */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1495: FILE: drivers/mmc/host/at91gen2-mci.c:1082:
+			if (!at91mci_test_and_clear_pending(host,
+						EVENT_DATA_COMPLETE))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1504: FILE: drivers/mmc/host/at91gen2-mci.c:1091:
+					dev_dbg(&host->pdev->dev,
+							"data timeout error\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1508: FILE: drivers/mmc/host/at91gen2-mci.c:1095:
+					dev_dbg(&host->pdev->dev,
+							"data CRC error\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1526: FILE: drivers/mmc/host/at91gen2-mci.c:1113:
+			prev_state = state = STATE_SENDING_STOP;

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1529: FILE: drivers/mmc/host/at91gen2-mci.c:1116:
+			/* fall through */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1533: FILE: drivers/mmc/host/at91gen2-mci.c:1120:
+			if (!at91mci_test_and_clear_pending(host,
+						EVENT_CMD_COMPLETE))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1543: FILE: drivers/mmc/host/at91gen2-mci.c:1130:
+			if (!at91mci_test_and_clear_pending(host,
+						EVENT_XFER_COMPLETE))

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1577: FILE: drivers/mmc/host/at91gen2-mci.c:1164:
+				host->sg = sg = sg_next(sg);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1586: FILE: drivers/mmc/host/at91gen2-mci.c:1173:
+			unsigned int remaining = sg->length - offset;
+			memcpy(buf + offset, &value, remaining);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1590: FILE: drivers/mmc/host/at91gen2-mci.c:1177:
+			host->sg = sg = sg_next(sg);

WARNING:MEMORY_BARRIER: memory barrier without comment
#1606: FILE: drivers/mmc/host/at91gen2-mci.c:1193:
+			smp_wmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#1622: FILE: drivers/mmc/host/at91gen2-mci.c:1209:
+	smp_wmb();

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1644: FILE: drivers/mmc/host/at91gen2-mci.c:1231:
+				host->sg = sg = sg_next(sg);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1658: FILE: drivers/mmc/host/at91gen2-mci.c:1245:
+			host->sg = sg = sg_next(sg);

WARNING:MEMORY_BARRIER: memory barrier without comment
#1677: FILE: drivers/mmc/host/at91gen2-mci.c:1264:
+			smp_wmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#1693: FILE: drivers/mmc/host/at91gen2-mci.c:1280:
+	smp_wmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#1702: FILE: drivers/mmc/host/at91gen2-mci.c:1289:
+	smp_wmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#1726: FILE: drivers/mmc/host/at91gen2-mci.c:1313:
+			smp_wmb();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1732: FILE: drivers/mmc/host/at91gen2-mci.c:1319:
+			at91_mci_write(host, AT91_MCI_IDR,
+					AT91MCI_DATA_ERROR_FLAGS | AT91_MCI_NOTBUSY);

WARNING:MEMORY_BARRIER: memory barrier without comment
#1735: FILE: drivers/mmc/host/at91gen2-mci.c:1322:
+			smp_wmb();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1767: FILE: drivers/mmc/host/at91gen2-mci.c:1354:
+static int __init at91mci_init_slot(struct at91_mci *host,
+		struct at91_mmc_slot_pdata *slot_data, unsigned int id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1825: FILE: drivers/mmc/host/at91gen2-mci.c:1412:
+		setup_timer(&slot->detect_timer, at91mci_detect_change,
+				(unsigned long)slot);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1828: FILE: drivers/mmc/host/at91gen2-mci.c:1415:
+		ret = request_irq(gpio_to_irq(slot->det_pin),
+				at91mci_detect_interrupt,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1846: FILE: drivers/mmc/host/at91gen2-mci.c:1433:
+static void __exit at91mci_cleanup_slot(struct at91_mci_slot *slot,
+		unsigned int id)

WARNING:MEMORY_BARRIER: memory barrier without comment
#1851: FILE: drivers/mmc/host/at91gen2-mci.c:1438:
+	smp_wmb();

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1878: FILE: drivers/mmc/host/at91gen2-mci.c:1465:
+	printk("Probing for AT91 MMC using Gen2 Driver\n");

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*host)...) over kzalloc(sizeof(struct at91_mci)...)
#1890: FILE: drivers/mmc/host/at91gen2-mci.c:1477:
+	host = kzalloc(sizeof(struct at91_mci), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1929: FILE: drivers/mmc/host/at91gen2-mci.c:1516:
+		ret = at91mci_init_slot(host, &pdata->slot[0],
+				AT91_MCI_SDCSEL & 0x0, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1935: FILE: drivers/mmc/host/at91gen2-mci.c:1522:
+		ret = at91mci_init_slot(host, &pdata->slot[1],
+				AT91_MCI_SDCSEL & 0x1, 1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1941: FILE: drivers/mmc/host/at91gen2-mci.c:1528:
+		printk(KERN_ERR "AT91 MCI controller init failed.

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1947: FILE: drivers/mmc/host/at91gen2-mci.c:1533:
+			"AT91 MCI controller at 0x%08lx irq %d, %u slots\n",
 			                          ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1947: FILE: drivers/mmc/host/at91gen2-mci.c:1533:
+			"AT91 MCI controller at 0x%08lx irq %d, %u slots\n",
 			                                    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1947: FILE: drivers/mmc/host/at91gen2-mci.c:1533:
+			"AT91 MCI controller at 0x%08lx irq %d, %u slots\n",
 			                                        ^

CHECK:CAMELCASE: Avoid CamelCase: <Atmel>
#2010: FILE: drivers/mmc/host/at91gen2-mci.c:1596:
+MODULE_DESCRIPTION("Atmel AT91 Multimedia Card Interface driver 2nd gen");

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Multimedia>
#2010: FILE: drivers/mmc/host/at91gen2-mci.c:1596:
+MODULE_DESCRIPTION("Atmel AT91 Multimedia Card Interface driver 2nd gen");

CHECK:CAMELCASE: Avoid CamelCase: <Card>
#2010: FILE: drivers/mmc/host/at91gen2-mci.c:1596:
+MODULE_DESCRIPTION("Atmel AT91 Multimedia Card Interface driver 2nd gen");

CHECK:CAMELCASE: Avoid CamelCase: <Interface>
#2010: FILE: drivers/mmc/host/at91gen2-mci.c:1596:
+MODULE_DESCRIPTION("Atmel AT91 Multimedia Card Interface driver 2nd gen");

CHECK:CAMELCASE: Avoid CamelCase: <Rob>
#2011: FILE: drivers/mmc/host/at91gen2-mci.c:1597:
+MODULE_AUTHOR("Rob Emanuele <poorarm@shoreis.com>");

CHECK:CAMELCASE: Avoid CamelCase: <Emanuele>
#2011: FILE: drivers/mmc/host/at91gen2-mci.c:1597:
+MODULE_AUTHOR("Rob Emanuele <poorarm@shoreis.com>");

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2013: FILE: drivers/mmc/host/at91gen2-mci.c:1599:
+MODULE_ALIAS("platform:at91_mci");
                       ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000116171.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 58 errors, 90 warnings, 64 checks, 1892 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000116171.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
