WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#56: 
OK, so I think the attached patches should do it. Hopefully I have addressed 

WARNING:BAD_SIGN_OFF: Duplicate signature
#145: 
Signed-off-by: Thomas Schlichter <thomas.schlichter@web.de>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kobject *' should also have an identifier name
#202: FILE: include/linux/sysfs.h:76:
+	int (*release)(struct kobject *, struct bin_attribute *attr,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: include/linux/sysfs.h:77:
+	int (*release)(struct kobject *, struct bin_attribute *attr,
+		      struct file *file);

WARNING:BAD_SIGN_OFF: Duplicate signature
#234: 
Signed-off-by: Thomas Schlichter <thomas.schlichter@web.de>

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#280: FILE: arch/x86/pci/i386.c:312:
+		if ((size < PAGE_SIZE) || (size & (size - 1)) ||
+		    (base & (size - 1)))
+		{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'size < PAGE_SIZE'
#280: FILE: arch/x86/pci/i386.c:312:
+		if ((size < PAGE_SIZE) || (size & (size - 1)) ||
+		    (base & (size - 1)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#283: FILE: arch/x86/pci/i386.c:315:
+			printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#285: FILE: arch/x86/pci/i386.c:317:
+				"Unaligned memory region passed to "
+				"pci_mmap_page_range().\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pci_mmap_page_range', this function's name, in a string
#285: FILE: arch/x86/pci/i386.c:317:
+				"pci_mmap_page_range().\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#286: FILE: arch/x86/pci/i386.c:318:
+			printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#288: FILE: arch/x86/pci/i386.c:320:
+				"Thus no write combining MTRR entry "
+				"is created.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#289: FILE: arch/x86/pci/i386.c:321:
+			printk(KERN_DEBUG

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p_mtrr_usage"
#298: FILE: arch/x86/pci/i386.c:330:
+			if (*p_mtrr_usage == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "p_mtrr_usage"
#302: FILE: arch/x86/pci/i386.c:334:
+			if (*p_mtrr_usage != NULL)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#369: FILE: drivers/pci/pci.h:88:
+extern int pci_release_file(struct file *file);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000057012.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 10 warnings, 5 checks, 193 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000057012.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
