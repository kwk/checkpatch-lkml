CHECK:LINE_SPACING: Please don't use multiple blank lines
#53: FILE: fs/gfs2/locking/dlm/lock.c:14:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#76: FILE: fs/gfs2/locking/dlm/lock.c:35:
+/* A lock placed on this queue is re-submitted to DLM as soon as the lock_dlm
+   thread gets to it. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#76: FILE: fs/gfs2/locking/dlm/lock.c:35:
+   thread gets to it. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: fs/gfs2/locking/dlm/lock.c:89:
+^I^I ^I lp->lockname.ln_type,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#148: FILE: fs/gfs2/locking/dlm/lock.c:89:
+^I^I ^I lp->lockname.ln_type,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#148: FILE: fs/gfs2/locking/dlm/lock.c:89:
+		log_info("complete dlm cancel %x,%llx flags %lx",
+		 	 lp->lockname.ln_type,

ERROR:CODE_INDENT: code indent should use tabs where possible
#196: FILE: fs/gfs2/locking/dlm/lock.c:137:
+^I^I ^I lp->lockname.ln_type,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#196: FILE: fs/gfs2/locking/dlm/lock.c:137:
+^I^I ^I lp->lockname.ln_type,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#196: FILE: fs/gfs2/locking/dlm/lock.c:137:
+		log_info("complete internal cancel %x,%llx",
+		 	 lp->lockname.ln_type,

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#204: FILE: fs/gfs2/locking/dlm/lock.c:145:
+	 * An error occured.
 	            ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: braces {} should be used on all arms of this statement
#222: FILE: fs/gfs2/locking/dlm/lock.c:163:
+		if (lp->lksb.sb_status == -EDEADLOCK &&
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#229: FILE: fs/gfs2/locking/dlm/lock.c:170:
+		} else

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#283: FILE: fs/gfs2/locking/dlm/lock.c:224:
+	    lp->req != DLM_LOCK_NL) {
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lp->cur > DLM_LOCK_NL'
#330: FILE: fs/gfs2/locking/dlm/lock.c:271:
+	if (!test_and_clear_bit(LFL_NOCACHE, &lp->flags) &&
+	    (lp->cur > DLM_LOCK_NL) && (prev_mode > DLM_LOCK_NL))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'prev_mode > DLM_LOCK_NL'
#330: FILE: fs/gfs2/locking/dlm/lock.c:271:
+	if (!test_and_clear_bit(LFL_NOCACHE, &lp->flags) &&
+	    (lp->cur > DLM_LOCK_NL) && (prev_mode > DLM_LOCK_NL))

WARNING:LINE_SPACING: Missing a blank line after declarations
#340: FILE: fs/gfs2/locking/dlm/lock.c:281:
+	struct gdlm_lock *lp = astarg;
+	clear_bit(LFL_ACTIVE, &lp->flags);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#366: FILE: fs/gfs2/locking/dlm/lock.c:307:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#372: FILE: fs/gfs2/locking/dlm/lock.c:313:
+		printk(KERN_INFO "lock_dlm: bast mode zero %x,%llx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#373: FILE: fs/gfs2/locking/dlm/lock.c:314:
+		printk(KERN_INFO "lock_dlm: bast mode zero %x,%llx\n",
+			lp->lockname.ln_type,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000256058.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 7 warnings, 10 checks, 844 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000256058.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
