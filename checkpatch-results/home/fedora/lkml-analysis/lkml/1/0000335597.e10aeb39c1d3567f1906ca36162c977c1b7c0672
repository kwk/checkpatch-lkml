WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#50: FILE: drivers/thermal/thermal.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#69: FILE: drivers/thermal/thermal.c:20:
+ *  with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#70: FILE: drivers/thermal/thermal.c:21:
+ *  59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.$

WARNING:INDENTED_LABEL: labels should not be indented
#112: FILE: drivers/thermal/thermal.c:63:
+      again:

WARNING:NAKED_SSCANF: unchecked sscanf return value
#201: FILE: drivers/thermal/thermal.c:152:
+	if (!sscanf(attr->attr.name, "trip_point_%d_type", &trip))
+		return -EINVAL;

WARNING:NAKED_SSCANF: unchecked sscanf return value
#217: FILE: drivers/thermal/thermal.c:168:
+	if (!sscanf(attr->attr.name, "trip_point_%d_temp", &trip))
+		return -EINVAL;

WARNING:DEVICE_ATTR_RO: Use DEVICE_ATTR_RO
#221: FILE: drivers/thermal/thermal.c:172:
+}

The DEVICE_ATTR_RO(name) helper macro can be used instead of
DEVICE_ATTR(name, 0444, name_show, NULL);

Note that the macro automatically appends _show to the named
attribute variable of the device for the show method.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:DEVICE_ATTR_RO: Use DEVICE_ATTR_RO
#224: FILE: drivers/thermal/thermal.c:175:
+static DEVICE_ATTR(temp, 0444, temp_show, NULL);

WARNING:DEVICE_ATTR_RW: Use DEVICE_ATTR_RW
#225: FILE: drivers/thermal/thermal.c:176:
+static DEVICE_ATTR(mode, 0644, mode_show, mode_store);

The DEVICE_ATTR_RW(name) helper macro can be used instead of
DEVICE_ATTR(name, 0644, name_show, name_store);

Note that the macro automatically appends _show and _store to the
named attribute variable of the device for the show and store methods.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_dev' - possible side-effects?
#250: FILE: drivers/thermal/thermal.c:201:
+#define TRIP_POINT_ATTR_ADD(_dev, _index, result)     \
+do {    \
+	result = device_create_file(_dev,	\
+				&trip_point_attrs[_index * 2]);	\
+	if (result)	\
+		break;	\
+	result = device_create_file(_dev,	\
+			&trip_point_attrs[_index * 2 + 1]);	\
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_index' - possible side-effects?
#250: FILE: drivers/thermal/thermal.c:201:
+#define TRIP_POINT_ATTR_ADD(_dev, _index, result)     \
+do {    \
+	result = device_create_file(_dev,	\
+				&trip_point_attrs[_index * 2]);	\
+	if (result)	\
+		break;	\
+	result = device_create_file(_dev,	\
+			&trip_point_attrs[_index * 2 + 1]);	\
+} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '_index' may be better as '(_index)' to avoid precedence issues
#250: FILE: drivers/thermal/thermal.c:201:
+#define TRIP_POINT_ATTR_ADD(_dev, _index, result)     \
+do {    \
+	result = device_create_file(_dev,	\
+				&trip_point_attrs[_index * 2]);	\
+	if (result)	\
+		break;	\
+	result = device_create_file(_dev,	\
+			&trip_point_attrs[_index * 2 + 1]);	\
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'result' - possible side-effects?
#250: FILE: drivers/thermal/thermal.c:201:
+#define TRIP_POINT_ATTR_ADD(_dev, _index, result)     \
+do {    \
+	result = device_create_file(_dev,	\
+				&trip_point_attrs[_index * 2]);	\
+	if (result)	\
+		break;	\
+	result = device_create_file(_dev,	\
+			&trip_point_attrs[_index * 2 + 1]);	\
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_dev' - possible side-effects?
#260: FILE: drivers/thermal/thermal.c:211:
+#define TRIP_POINT_ATTR_REMOVE(_dev, _index)	\
+do {	\
+	device_remove_file(_dev, &trip_point_attrs[_index * 2]);	\
+	device_remove_file(_dev, &trip_point_attrs[_index * 2 + 1]);	\
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_index' - possible side-effects?
#260: FILE: drivers/thermal/thermal.c:211:
+#define TRIP_POINT_ATTR_REMOVE(_dev, _index)	\
+do {	\
+	device_remove_file(_dev, &trip_point_attrs[_index * 2]);	\
+	device_remove_file(_dev, &trip_point_attrs[_index * 2 + 1]);	\
+} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '_index' may be better as '(_index)' to avoid precedence issues
#260: FILE: drivers/thermal/thermal.c:211:
+#define TRIP_POINT_ATTR_REMOVE(_dev, _index)	\
+do {	\
+	device_remove_file(_dev, &trip_point_attrs[_index * 2]);	\
+	device_remove_file(_dev, &trip_point_attrs[_index * 2 + 1]);	\
+} while (0)

WARNING:NAKED_SSCANF: unchecked sscanf return value
#306: FILE: drivers/thermal/thermal.c:257:
+	if (!sscanf(buf, "%d\n", &state))
+		return -EINVAL;

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'thermal_cooling_device_max_state_show' to 'max_state_show'
#320: FILE: drivers/thermal/thermal.c:271:
+static DEVICE_ATTR(max_state, 0444,

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'thermal_cooling_device_cur_state_show' to 'cur_state_show' 'thermal_cooling_device_cur_state_store' to 'cur_state_store'
#322: FILE: drivers/thermal/thermal.c:273:
+static DEVICE_ATTR(cur_state, 0644,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#328: FILE: drivers/thermal/thermal.c:279:
+thermal_cooling_device_trip_point_show(struct device *dev,
+				    struct device_attribute *attr, char *buf)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#392: FILE: drivers/thermal/thermal.c:343:
+	list_for_each_entry(pos, &tz->cooling_devices, node)
+	    if (pos->tz == tz && pos->trip == trip && pos->cdev == cdev) {

WARNING:TABSTOP: Statements should start on a tabstop
#393: FILE: drivers/thermal/thermal.c:344:
+	    if (pos->tz == tz && pos->trip == trip && pos->cdev == cdev) {

WARNING:INDENTED_LABEL: labels should not be indented
#405: FILE: drivers/thermal/thermal.c:356:
+      remove_symbol_link:

WARNING:INDENTED_LABEL: labels should not be indented
#407: FILE: drivers/thermal/thermal.c:358:
+      release_idr:

WARNING:INDENTED_LABEL: labels should not be indented
#409: FILE: drivers/thermal/thermal.c:360:
+      free_mem:

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#432: FILE: drivers/thermal/thermal.c:383:
+		if (pos->tz == tz && pos->trip == trip
+		    && pos->cdev == cdev) {

WARNING:INDENTED_LABEL: labels should not be indented
#442: FILE: drivers/thermal/thermal.c:393:
+      unbind:

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#477: FILE: drivers/thermal/thermal.c:428:
+struct thermal_cooling_device *thermal_cooling_device_register(char *type,
+		       void *devdata, struct thermal_cooling_device_ops *ops)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#487: FILE: drivers/thermal/thermal.c:438:
+	if (!ops || !ops->get_max_state || !ops->get_cur_state ||
+		!ops->set_cur_state)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*cdev)...) over kzalloc(sizeof(struct thermal_cooling_device)...)
#490: FILE: drivers/thermal/thermal.c:441:
+	cdev = kzalloc(sizeof(struct thermal_cooling_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#537: FILE: drivers/thermal/thermal.c:488:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:INDENTED_LABEL: labels should not be indented
#543: FILE: drivers/thermal/thermal.c:494:
+      unregister:

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#560: FILE: drivers/thermal/thermal.c:511:
+				       *cdev)
 				       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#569: FILE: drivers/thermal/thermal.c:520:
+	list_for_each_entry(pos, &thermal_cdev_list, node)
+	    if (pos == cdev)

WARNING:TABSTOP: Statements should start on a tabstop
#570: FILE: drivers/thermal/thermal.c:521:
+	    if (pos == cdev)

WARNING:RETURN_VOID: void function return statements are not generally useful
#593: FILE: drivers/thermal/thermal.c:544:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#607: FILE: drivers/thermal/thermal.c:558:
+struct thermal_zone_device *thermal_zone_device_register(char *type,
+					int trips, void *devdata,

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*tz)...) over kzalloc(sizeof(struct thermal_zone_device)...)
#624: FILE: drivers/thermal/thermal.c:575:
+	tz = kzalloc(sizeof(struct thermal_zone_device), GFP_KERNEL);

WARNING:INDENTED_LABEL: labels should not be indented
#686: FILE: drivers/thermal/thermal.c:637:
+      unregister:

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#708: FILE: drivers/thermal/thermal.c:659:
+	list_for_each_entry(pos, &thermal_tz_list, node)
+	    if (pos == tz)

WARNING:TABSTOP: Statements should start on a tabstop
#709: FILE: drivers/thermal/thermal.c:660:
+	    if (pos == tz)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#718: FILE: drivers/thermal/thermal.c:669:
+		list_for_each_entry(cdev, &thermal_cdev_list, node)
+		    tz->ops->unbind(tz, cdev);

WARNING:RETURN_VOID: void function return statements are not generally useful
#736: FILE: drivers/thermal/thermal.c:687:
+	return;
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#769: FILE: include/linux/thermal.h:1:
+/*

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#770: FILE: include/linux/thermal.h:2:
+ *  thermal.h  ($Revision: 0 $)

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#787: FILE: include/linux/thermal.h:19:
+ *  with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#788: FILE: include/linux/thermal.h:20:
+ *  59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.$

WARNING:SPACING: Unnecessary space before function pointer arguments
#803: FILE: include/linux/thermal.h:35:
+	int (*bind) (struct thermal_zone_device *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct thermal_zone_device *' should also have an identifier name
#803: FILE: include/linux/thermal.h:35:
+	int (*bind) (struct thermal_zone_device *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct thermal_cooling_device *' should also have an identifier name
#803: FILE: include/linux/thermal.h:35:
+	int (*bind) (struct thermal_zone_device *,

WARNING:SPACING: Unnecessary space before function pointer arguments
#805: FILE: include/linux/thermal.h:37:
+	int (*unbind) (struct thermal_zone_device *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct thermal_zone_device *' should also have an identifier name
#805: FILE: include/linux/thermal.h:37:
+	int (*unbind) (struct thermal_zone_device *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct thermal_cooling_device *' should also have an identifier name
#805: FILE: include/linux/thermal.h:37:
+	int (*unbind) (struct thermal_zone_device *,

WARNING:SPACING: Unnecessary space before function pointer arguments
#807: FILE: include/linux/thermal.h:39:
+	int (*get_temp) (struct thermal_zone_device *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct thermal_zone_device *' should also have an identifier name
#807: FILE: include/linux/thermal.h:39:
+	int (*get_temp) (struct thermal_zone_device *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#807: FILE: include/linux/thermal.h:39:
+	int (*get_temp) (struct thermal_zone_device *, char *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#808: FILE: include/linux/thermal.h:40:
+	int (*get_mode) (struct thermal_zone_device *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct thermal_zone_device *' should also have an identifier name
#808: FILE: include/linux/thermal.h:40:
+	int (*get_mode) (struct thermal_zone_device *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#808: FILE: include/linux/thermal.h:40:
+	int (*get_mode) (struct thermal_zone_device *, char *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#809: FILE: include/linux/thermal.h:41:
+	int (*set_mode) (struct thermal_zone_device *, const char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct thermal_zone_device *' should also have an identifier name
#809: FILE: include/linux/thermal.h:41:
+	int (*set_mode) (struct thermal_zone_device *, const char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#809: FILE: include/linux/thermal.h:41:
+	int (*set_mode) (struct thermal_zone_device *, const char *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#810: FILE: include/linux/thermal.h:42:
+	int (*get_trip_type) (struct thermal_zone_device *, int, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct thermal_zone_device *' should also have an identifier name
#810: FILE: include/linux/thermal.h:42:
+	int (*get_trip_type) (struct thermal_zone_device *, int, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#810: FILE: include/linux/thermal.h:42:
+	int (*get_trip_type) (struct thermal_zone_device *, int, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#810: FILE: include/linux/thermal.h:42:
+	int (*get_trip_type) (struct thermal_zone_device *, int, char *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#811: FILE: include/linux/thermal.h:43:
+	int (*get_trip_temp) (struct thermal_zone_device *, int, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct thermal_zone_device *' should also have an identifier name
#811: FILE: include/linux/thermal.h:43:
+	int (*get_trip_temp) (struct thermal_zone_device *, int, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#811: FILE: include/linux/thermal.h:43:
+	int (*get_trip_temp) (struct thermal_zone_device *, int, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#811: FILE: include/linux/thermal.h:43:
+	int (*get_trip_temp) (struct thermal_zone_device *, int, char *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#815: FILE: include/linux/thermal.h:47:
+	int (*get_max_state) (struct thermal_cooling_device *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct thermal_cooling_device *' should also have an identifier name
#815: FILE: include/linux/thermal.h:47:
+	int (*get_max_state) (struct thermal_cooling_device *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#815: FILE: include/linux/thermal.h:47:
+	int (*get_max_state) (struct thermal_cooling_device *, char *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#816: FILE: include/linux/thermal.h:48:
+	int (*get_cur_state) (struct thermal_cooling_device *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct thermal_cooling_device *' should also have an identifier name
#816: FILE: include/linux/thermal.h:48:
+	int (*get_cur_state) (struct thermal_cooling_device *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#816: FILE: include/linux/thermal.h:48:
+	int (*get_cur_state) (struct thermal_cooling_device *, char *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#817: FILE: include/linux/thermal.h:49:
+	int (*set_cur_state) (struct thermal_cooling_device *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct thermal_cooling_device *' should also have an identifier name
#817: FILE: include/linux/thermal.h:49:
+	int (*set_cur_state) (struct thermal_cooling_device *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#817: FILE: include/linux/thermal.h:49:
+	int (*set_cur_state) (struct thermal_cooling_device *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#845: FILE: include/linux/thermal.h:77:
+struct thermal_zone_device *thermal_zone_device_register(char *, int, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#845: FILE: include/linux/thermal.h:77:
+struct thermal_zone_device *thermal_zone_device_register(char *, int, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#845: FILE: include/linux/thermal.h:77:
+struct thermal_zone_device *thermal_zone_device_register(char *, int, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct thermal_zone_device_ops *' should also have an identifier name
#845: FILE: include/linux/thermal.h:77:
+struct thermal_zone_device *thermal_zone_device_register(char *, int, void *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#846: FILE: include/linux/thermal.h:78:
+struct thermal_zone_device *thermal_zone_device_register(char *, int, void *,
+					struct thermal_zone_device_ops *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct thermal_zone_device *' should also have an identifier name
#847: FILE: include/linux/thermal.h:79:
+void thermal_zone_device_unregister(struct thermal_zone_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct thermal_zone_device *' should also have an identifier name
#849: FILE: include/linux/thermal.h:81:
+int thermal_zone_bind_cooling_device(struct thermal_zone_device *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#849: FILE: include/linux/thermal.h:81:
+int thermal_zone_bind_cooling_device(struct thermal_zone_device *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct thermal_cooling_device *' should also have an identifier name
#849: FILE: include/linux/thermal.h:81:
+int thermal_zone_bind_cooling_device(struct thermal_zone_device *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct thermal_zone_device *' should also have an identifier name
#851: FILE: include/linux/thermal.h:83:
+int thermal_zone_unbind_cooling_device(struct thermal_zone_device *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#851: FILE: include/linux/thermal.h:83:
+int thermal_zone_unbind_cooling_device(struct thermal_zone_device *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct thermal_cooling_device *' should also have an identifier name
#851: FILE: include/linux/thermal.h:83:
+int thermal_zone_unbind_cooling_device(struct thermal_zone_device *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#854: FILE: include/linux/thermal.h:86:
+struct thermal_cooling_device *thermal_cooling_device_register(char *, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#854: FILE: include/linux/thermal.h:86:
+struct thermal_cooling_device *thermal_cooling_device_register(char *, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct thermal_cooling_device_ops *' should also have an identifier name
#854: FILE: include/linux/thermal.h:86:
+struct thermal_cooling_device *thermal_cooling_device_register(char *, void *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#855: FILE: include/linux/thermal.h:87:
+struct thermal_cooling_device *thermal_cooling_device_register(char *, void *,
+					struct thermal_cooling_device_ops *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct thermal_cooling_device *' should also have an identifier name
#856: FILE: include/linux/thermal.h:88:
+void thermal_cooling_device_unregister(struct thermal_cooling_device *);

WARNING:TYPO_SPELLING: 'focusses' may be misspelled - perhaps 'focuses'?
#937: FILE: Documentation/thermal/sysfs-api.txt:17:
+This how-to focusses on enabling new thermal zone and cooling devices to participate
             ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'exection' may be misspelled - perhaps 'execution'?
#1052: FILE: Documentation/thermal/sysfs-api.txt:132:
+thermal_zone_bind_cooling_device/thermal_zone_unbind_cooling_device successful exection.
                                                                                ^^^^^^^^

WARNING:TYPO_SPELLING: 'assocated' may be misspelled - perhaps 'associated'?
#1102: FILE: Documentation/thermal/sysfs-api.txt:182:
+cdev[0-*]_trip_point		The trip point with which cdev[0-*] is assocated in this thermal zone
                     		                                       ^^^^^^^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000335597.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 77 warnings, 18 checks, 1088 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000335597.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
