WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
> > >> When the application does a ioctl(fd_of_mnt_video0,VIDIOC_G_FMT,&arg) 

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#101: FILE: drivers/media/video/Kconfig:795:
+config USB_STK11XX
+	tristate "STK11XX based webcams"
+	depends on VIDEO_V4L2
+	---help---
+	  This will add support for Syntek webcams such as dc1125 and stk1135.
+
+	  If you choose to build it as module, it will be called stk11xx.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#126: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#131: FILE: drivers/media/video/stk11xx.c:1:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#131: FILE: drivers/media/video/stk11xx.c:1:
+/* 

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#185: FILE: drivers/media/video/stk11xx.c:55:
+#define ISO_MAX_FRAME_SIZE		3 * 1024

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#202: FILE: drivers/media/video/stk11xx.c:72:
+#define STK_STREAM(str, args...)	printk(KERN_DEBUG "stk11xx: " str, \

ERROR:SPACING: space required before the open parenthesis '('
#205: FILE: drivers/media/video/stk11xx.c:75:
+#define STK_STREAM(str, args...)	do { } while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#232: FILE: drivers/media/video/stk11xx.c:102:
+	volatile int filled;

CHECK:CAMELCASE: Avoid CamelCase: <isoc_in_endpointAddr>
#259: FILE: drivers/media/video/stk11xx.c:129:
+	u8 isoc_in_endpointAddr;	/**< Isochrone IN endpoint address */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#263: FILE: drivers/media/video/stk11xx.c:133:
+	struct mutex open_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#267: FILE: drivers/media/video/stk11xx.c:137:
+	spinlock_t spinlock;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#283: FILE: drivers/media/video/stk11xx.c:153:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#323: FILE: drivers/media/video/stk11xx.c:193:
+	result = usb_control_msg(udev, usb_rcvctrlpipe(udev, 0), 0x00,
+			USB_DIR_IN | USB_TYPE_VENDOR | USB_RECIP_DEVICE, 0x00,

ERROR:CODE_INDENT: code indent should use tabs where possible
#336: FILE: drivers/media/video/stk11xx.c:206:
+        int value;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: drivers/media/video/stk11xx.c:206:
+        int value;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#338: FILE: drivers/media/video/stk11xx.c:208:
+        return stk11xx_read_reg(dev, index, &value);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: drivers/media/video/stk11xx.c:208:
+        return stk11xx_read_reg(dev, index, &value);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#342: FILE: drivers/media/video/stk11xx.c:212:
+static int stk11xx_write_reg(struct stk11xx *dev, u16 index,
+			       u16 value)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#348: FILE: drivers/media/video/stk11xx.c:218:
+	result = usb_control_msg(udev, usb_sndctrlpipe(udev, 0), 0x01,
+			USB_DIR_OUT | USB_TYPE_VENDOR | USB_RECIP_DEVICE, value,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#353: FILE: drivers/media/video/stk11xx.c:223:
+		dev_err(&udev->dev, "Write registry fails %02X = %02X\n", index,
+				value);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#378: FILE: drivers/media/video/stk11xx.c:248:
+static int stk11xx_process_table(struct stk11xx *dev,
+		const struct stk11xx_table *table)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#397: FILE: drivers/media/video/stk11xx.c:267:
+				ret = stk1125_configure_device(dev,table->addr);
 				                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#399: FILE: drivers/media/video/stk11xx.c:269:
+				ret = stk1135_configure_device(dev,table->addr);
 				                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#410: FILE: drivers/media/video/stk11xx.c:280:
+#define STK11XX_AVG2(x,y) (u8)(((int)x + (int)y) / 2)
                       ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#410: FILE: drivers/media/video/stk11xx.c:280:
+#define STK11XX_AVG2(x,y) (u8)(((int)x + (int)y) / 2)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#410: FILE: drivers/media/video/stk11xx.c:280:
+#define STK11XX_AVG2(x,y) (u8)(((int)x + (int)y) / 2)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#411: FILE: drivers/media/video/stk11xx.c:281:
+#define STK11XX_AVG4(a,b,c,d) (u8)(((int)a + (int)b + (int)c + (int)d) / 4)
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#411: FILE: drivers/media/video/stk11xx.c:281:
+#define STK11XX_AVG4(a,b,c,d) (u8)(((int)a + (int)b + (int)c + (int)d) / 4)
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#411: FILE: drivers/media/video/stk11xx.c:281:
+#define STK11XX_AVG4(a,b,c,d) (u8)(((int)a + (int)b + (int)c + (int)d) / 4)
                           ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#411: FILE: drivers/media/video/stk11xx.c:281:
+#define STK11XX_AVG4(a,b,c,d) (u8)(((int)a + (int)b + (int)c + (int)d) / 4)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#411: FILE: drivers/media/video/stk11xx.c:281:
+#define STK11XX_AVG4(a,b,c,d) (u8)(((int)a + (int)b + (int)c + (int)d) / 4)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'b' may be better as '(b)' to avoid precedence issues
#411: FILE: drivers/media/video/stk11xx.c:281:
+#define STK11XX_AVG4(a,b,c,d) (u8)(((int)a + (int)b + (int)c + (int)d) / 4)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'c' may be better as '(c)' to avoid precedence issues
#411: FILE: drivers/media/video/stk11xx.c:281:
+#define STK11XX_AVG4(a,b,c,d) (u8)(((int)a + (int)b + (int)c + (int)d) / 4)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#414: FILE: drivers/media/video/stk11xx.c:284:
+static void stk11xx_bayer_to_rgb(u8 *rgb, const u8 *bayer,
+			  const int width, const int height)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#426: FILE: drivers/media/video/stk11xx.c:296:
+^I * BGBGBG    $

ERROR:SPACING: space prohibited after that open parenthesis '('
#448: FILE: drivers/media/video/stk11xx.c:318:
+					dst[2] = STK11XX_AVG2( /* R */

ERROR:SPACING: space prohibited after that open parenthesis '('
#450: FILE: drivers/media/video/stk11xx.c:320:
+					dst[0] = STK11XX_AVG2( /* B */

ERROR:SPACING: space prohibited after that open parenthesis '('
#453: FILE: drivers/media/video/stk11xx.c:323:
+					dst[2] = STK11XX_AVG4( /* R */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#454: FILE: drivers/media/video/stk11xx.c:324:
+						bayer[above-1],	bayer[above+1],
 						           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#454: FILE: drivers/media/video/stk11xx.c:324:
+						bayer[above-1],	bayer[above+1],
 						               	           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#455: FILE: drivers/media/video/stk11xx.c:325:
+						bayer[below-1],	bayer[below+1]);
 						           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#455: FILE: drivers/media/video/stk11xx.c:325:
+						bayer[below-1],	bayer[below+1]);
 						               	           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#456: FILE: drivers/media/video/stk11xx.c:326:
+					dst[1] = STK11XX_AVG4( /* G */

ERROR:SPACING: space prohibited after that open parenthesis '('
#463: FILE: drivers/media/video/stk11xx.c:333:
+					dst[0] = STK11XX_AVG4( /* B */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#464: FILE: drivers/media/video/stk11xx.c:334:
+						bayer[above-1],	bayer[above+1],
 						           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#464: FILE: drivers/media/video/stk11xx.c:334:
+						bayer[above-1],	bayer[above+1],
 						               	           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#465: FILE: drivers/media/video/stk11xx.c:335:
+						bayer[below-1],	bayer[below+1]);
 						           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#465: FILE: drivers/media/video/stk11xx.c:335:
+						bayer[below-1],	bayer[below+1]);
 						               	           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#466: FILE: drivers/media/video/stk11xx.c:336:
+					dst[1] = STK11XX_AVG4( /* G */

ERROR:SPACING: space prohibited after that open parenthesis '('
#470: FILE: drivers/media/video/stk11xx.c:340:
+					dst[0] = STK11XX_AVG2( /* B */

ERROR:SPACING: space prohibited after that open parenthesis '('
#472: FILE: drivers/media/video/stk11xx.c:342:
+					dst[2] = STK11XX_AVG2( /* R */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#481: FILE: drivers/media/video/stk11xx.c:351:
+static void stk11xx_resize_image(u8 *out, const u8 *in,
+		unsigned int width, unsigned int height, unsigned int factor)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!framebuf"
#510: FILE: drivers/media/video/stk11xx.c:380:
+	if (framebuf == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#577: FILE: drivers/media/video/stk11xx.c:447:
+/* $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->fill_frame"
#589: FILE: drivers/media/video/stk11xx.c:459:
+	if (dev->fill_frame != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->full_frames"
#590: FILE: drivers/media/video/stk11xx.c:460:
+		if (dev->full_frames == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->empty_frames"
#599: FILE: drivers/media/video/stk11xx.c:469:
+	if (dev->empty_frames != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->full_frames"
#603: FILE: drivers/media/video/stk11xx.c:473:
+		if (dev->full_frames == NULL) {

WARNING:SPLIT_STRING: quoted string split across lines
#605: FILE: drivers/media/video/stk11xx.c:475:
+			dev_err(&dev->udev->dev, "neither empty or full frames "
+					"available!\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'transfert' may be misspelled - perhaps 'transfer'?
#624: FILE: drivers/media/video/stk11xx.c:494:
+ * This function is called as an URB transfert is complete (Isochronous pipe).
                                      ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#629: FILE: drivers/media/video/stk11xx.c:499:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,19)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#629: FILE: drivers/media/video/stk11xx.c:499:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,19)
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#629: FILE: drivers/media/video/stk11xx.c:499:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,19)
                                            ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#629: FILE: drivers/media/video/stk11xx.c:499:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,19)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#643: FILE: drivers/media/video/stk11xx.c:513:
+	if (dev == NULL) {

WARNING:SPLIT_STRING: quoted string split across lines
#645: FILE: drivers/media/video/stk11xx.c:515:
+		dev_err(&dev->udev->dev, "isoc_handler called with NULL "
+				"device\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#659: FILE: drivers/media/video/stk11xx.c:529:
+		dev_warn(&dev->udev->dev, "unknown urb status %d\n",
+				urb->status);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#661: FILE: drivers/media/video/stk11xx.c:531:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!framebuf"
#664: FILE: drivers/media/video/stk11xx.c:534:
+	if (framebuf == NULL) {

WARNING:SPLIT_STRING: quoted string split across lines
#666: FILE: drivers/media/video/stk11xx.c:536:
+		dev_err(&dev->udev->dev, "isoc_handler without valid fill "
+				"frame\n");

WARNING:SPLIT_STRING: quoted string split across lines
#675: FILE: drivers/media/video/stk11xx.c:545:
+			dev_err(&dev->udev->dev, "error (%d) re-submitting urb "
+					"in isoc_handler\n", ret);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#700: FILE: drivers/media/video/stk11xx.c:570:
+				if (*iso_buf & 0x80) {
+					skip = 8;
+				}

WARNING:SPLIT_STRING: quoted string split across lines
#707: FILE: drivers/media/video/stk11xx.c:577:
+					dev_err(&dev->udev->dev, "frame buffer "
+							"overflow\n");

WARNING:SPLIT_STRING: quoted string split across lines
#718: FILE: drivers/media/video/stk11xx.c:588:
+			STK_STREAM("URB : Length = %d - Skip = %d - Buffer "
+					"size = %d\n", framelen, skip,

CHECK:BRACES: Unbalanced braces around else statement
#731: FILE: drivers/media/video/stk11xx.c:601:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#733: FILE: drivers/media/video/stk11xx.c:603:
+			dev_err(&dev->udev->dev, "iso frame %d has error %d\n",
+					i, framestatus);

WARNING:SPLIT_STRING: quoted string split across lines
#744: FILE: drivers/media/video/stk11xx.c:614:
+		dev_err(&dev->udev->dev, "error (%d) re-submitting urb in "
+				"isoc_handler.\n", ret);

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#772: FILE: drivers/media/video/stk11xx.c:642:
+	clear_bit(STK11XX_STAT_ISOC, dev->status);;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!urb"
#789: FILE: drivers/media/video/stk11xx.c:659:
+		if (urb == NULL) {

WARNING:SPLIT_STRING: quoted string split across lines
#820: FILE: drivers/media/video/stk11xx.c:690:
+			dev_err(&udev->dev, "isoc_init submit_urb %d "
+					"failed with error %d\n", i, ret);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#826: FILE: drivers/media/video/stk11xx.c:696:
+	dev_dbg(&udev->dev, "isoc_in_endpointAddr = %x\n",
+			dev->isoc_in_endpointAddr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#841: FILE: drivers/media/video/stk11xx.c:711:
+/* $

WARNING:SPLIT_STRING: quoted string split across lines
#866: FILE: drivers/media/video/stk11xx.c:736:
+			dev_err(&dev->udev->dev, "check device return error "
+					"(0x201 = %02X)\n", value);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#974: FILE: drivers/media/video/stk11xx.c:844:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#982: FILE: drivers/media/video/stk11xx.c:852:
+ *   10 : for a resolution from 80x60 to 640x480 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#988: FILE: drivers/media/video/stk11xx.c:858:
+^I/*      0,    1,    2,    3,    4,    5,    6,    7,    8,    9, $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#989: FILE: drivers/media/video/stk11xx.c:859:
+	/*      0,    1,    2,    3,    4,    5,    6,    7,    8,    9, 
+		    10,   11 */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#989: FILE: drivers/media/video/stk11xx.c:859:
+		    10,   11 */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1053: FILE: drivers/media/video/stk11xx.c:923:
+	dev_dbg(&dev->udev->dev, "%s: %u\n", __FUNCTION__, step);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1059: FILE: drivers/media/video/stk11xx.c:929:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1298: FILE: drivers/media/video/stk11xx.c:1168:
+	dev_dbg(&dev->udev->dev, "set contrast: %d, whiteness: %d, ",
+			dev->vsettings.contrast, dev->vsettings.whiteness);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1465: FILE: drivers/media/video/stk11xx.c:1335:
+	/*      0,    1,    2,    3,    4,    5,    6,    7,    8,    9,
+		    10,   11,   12,   13 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1465: FILE: drivers/media/video/stk11xx.c:1335:
+		    10,   11,   12,   13 */

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'stk1135_configure_device', this function's name, in a string
#1521: FILE: drivers/media/video/stk11xx.c:1391:
+	dev_dbg(&dev->udev->dev, "stk1135_configure_device: %d\n", step);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1826: FILE: drivers/media/video/stk11xx.c:1696:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1876: FILE: drivers/media/video/stk11xx.c:1746:
+/* $

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#1929: FILE: drivers/media/video/stk11xx.c:1799:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,15)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1929: FILE: drivers/media/video/stk11xx.c:1799:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,15)
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1929: FILE: drivers/media/video/stk11xx.c:1799:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,15)
                                            ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1929: FILE: drivers/media/video/stk11xx.c:1799:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,15)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1961: FILE: drivers/media/video/stk11xx.c:1831:
+	dev_dbg(&dev->udev->dev, "%s\n", __FUNCTION__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->isobuf[i].data"
#1965: FILE: drivers/media/video/stk11xx.c:1835:
+		if (dev->isobuf[i].data == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1967: FILE: drivers/media/video/stk11xx.c:1837:
+			dev->isobuf[i].data = kzalloc(ISO_BUFFER_SIZE,
+					GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->isobuf[i].data"
#1968: FILE: drivers/media/video/stk11xx.c:1838:
+			if (dev->isobuf[i].data == NULL) {

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1969: FILE: drivers/media/video/stk11xx.c:1839:
+			if (dev->isobuf[i].data == NULL) {
+				dev_err(&dev->udev->dev, "failed to allocate "

WARNING:SPLIT_STRING: quoted string split across lines
#1970: FILE: drivers/media/video/stk11xx.c:1840:
+				dev_err(&dev->udev->dev, "failed to allocate "
+					"iso buffer %d\n", i);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->framebuf[i].data"
#1977: FILE: drivers/media/video/stk11xx.c:1847:
+		if (dev->framebuf[i].data == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->framebuf[i].data"
#1979: FILE: drivers/media/video/stk11xx.c:1849:
+			if (dev->framebuf[i].data == NULL) {

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1980: FILE: drivers/media/video/stk11xx.c:1850:
+			if (dev->framebuf[i].data == NULL) {
+				dev_err(&dev->udev->dev, "failed to allocate "

WARNING:SPLIT_STRING: quoted string split across lines
#1981: FILE: drivers/media/video/stk11xx.c:1851:
+				dev_err(&dev->udev->dev, "failed to allocate "
+						"frame buffer %d\n", i);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->decompress_data"
#1989: FILE: drivers/media/video/stk11xx.c:1859:
+	if (dev->decompress_data == NULL) {

WARNING:SPLIT_STRING: quoted string split across lines
#1991: FILE: drivers/media/video/stk11xx.c:1861:
+		dev_err(&dev->udev->dev, "failed to allocate decompress "
+				"buffer(s). needed (%lu)\n", STK11XX_IMAGE_LEN);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->image_data"
#1998: FILE: drivers/media/video/stk11xx.c:1868:
+	if (dev->image_data == NULL) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2000: FILE: drivers/media/video/stk11xx.c:1870:
+			"needed (%lu)\n", STK11XX_MAX_IMAGES*STK11XX_IMAGE_LEN);
 			                                    ^

WARNING:SPLIT_STRING: quoted string split across lines
#2000: FILE: drivers/media/video/stk11xx.c:1870:
+		dev_err(&dev->udev->dev, "failed to allocate image buffer(s). "
+			"needed (%lu)\n", STK11XX_MAX_IMAGES*STK11XX_IMAGE_LEN);

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#2013: FILE: drivers/media/video/stk11xx.c:1883:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,15)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2013: FILE: drivers/media/video/stk11xx.c:1883:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,15)
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2013: FILE: drivers/media/video/stk11xx.c:1883:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,15)
                                            ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2013: FILE: drivers/media/video/stk11xx.c:1883:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,15)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2036: FILE: drivers/media/video/stk11xx.c:1906:
+	dev_dbg(&dev->udev->dev, "%s\n", __FUNCTION__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#2038: FILE: drivers/media/video/stk11xx.c:1908:
+	WARN_ON(dev == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#2039: FILE: drivers/media/video/stk11xx.c:1909:
+	if (dev == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->isobuf[i].data"
#2044: FILE: drivers/media/video/stk11xx.c:1914:
+		if (dev->isobuf[i].data != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->framebuf[i].data"
#2051: FILE: drivers/media/video/stk11xx.c:1921:
+		if (dev->framebuf[i].data != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->decompress_data"
#2057: FILE: drivers/media/video/stk11xx.c:1927:
+	if (dev->decompress_data != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->image_data"
#2061: FILE: drivers/media/video/stk11xx.c:1931:
+	if (dev->image_data != NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2063: FILE: drivers/media/video/stk11xx.c:1933:
+		stk11xx_rvfree(dev->image_data,
+				STK11XX_MAX_IMAGES * STK11XX_IMAGE_LEN);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2065: FILE: drivers/media/video/stk11xx.c:1935:
+	dev->decompress_data = dev->image_data = NULL;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2073: FILE: drivers/media/video/stk11xx.c:1943:
+	dev_dbg(&dev->udev->dev, "%s\n", __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2113: FILE: drivers/media/video/stk11xx.c:1983:
+/* $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2125: FILE: drivers/media/video/stk11xx.c:1995:
+		dev_err(&dev->udev->dev, "Error: Register 0x0001 = %02X\n",
+				value);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2130: FILE: drivers/media/video/stk11xx.c:2000:
+/* $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->read_frame"
#2143: FILE: drivers/media/video/stk11xx.c:2013:
+	if (dev->read_frame != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->full_frames"
#2148: FILE: drivers/media/video/stk11xx.c:2018:
+	if (dev->full_frames != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->read_frame"
#2154: FILE: drivers/media/video/stk11xx.c:2024:
+	if (dev->read_frame != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->empty_frames"
#2159: FILE: drivers/media/video/stk11xx.c:2029:
+		if (dev->empty_frames == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2178: FILE: drivers/media/video/stk11xx.c:2048:
+static int stk11xx_select_video_mode(struct stk11xx *dev, int width,
+				  int height)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'width < stk11xx_image_sizes[0].x'
#2184: FILE: drivers/media/video/stk11xx.c:2054:
+	if ((width < stk11xx_image_sizes[0].x) ||
+			(height < stk11xx_image_sizes[0].y))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'height < stk11xx_image_sizes[0].y'
#2184: FILE: drivers/media/video/stk11xx.c:2054:
+	if ((width < stk11xx_image_sizes[0].x) ||
+			(height < stk11xx_image_sizes[0].y))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2185: FILE: drivers/media/video/stk11xx.c:2055:
+	if ((width < stk11xx_image_sizes[0].x) ||
+			(height < stk11xx_image_sizes[0].y))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2193: FILE: drivers/media/video/stk11xx.c:2063:
+			if (stk11xx_image_sizes[i].x <= width &&
+					stk11xx_image_sizes[i].y <= height)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2201: FILE: drivers/media/video/stk11xx.c:2071:
+			if (stk11xx_image_sizes[i].x <= width &&
+					stk11xx_image_sizes[i].y <= height)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2214: FILE: drivers/media/video/stk11xx.c:2084:
+	dev_dbg(&dev->udev->dev, "set mode %d [%dx%d]\n", dev->resolution,
+			stk11xx_image_sizes[dev->resolution].x,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2250: FILE: drivers/media/video/stk11xx.c:2120:
+	BUG_ON(dev == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#2250: FILE: drivers/media/video/stk11xx.c:2120:
+	BUG_ON(dev == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2309: FILE: drivers/media/video/stk11xx.c:2179:
+	BUG_ON(dev == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#2309: FILE: drivers/media/video/stk11xx.c:2179:
+	BUG_ON(dev == NULL);

WARNING:SPLIT_STRING: quoted string split across lines
#2314: FILE: drivers/media/video/stk11xx.c:2184:
+		dev_warn(&dev->udev->dev, "v4l_release called on closed "
+				"device\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2336: FILE: drivers/media/video/stk11xx.c:2206:
+static ssize_t stk11xx_read(struct file *fp, char __user *buf, size_t count,
+		loff_t *f_pos)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->full_frames"
#2345: FILE: drivers/media/video/stk11xx.c:2215:
+		if ((fp->f_flags & O_NONBLOCK) && dev->full_frames == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2349: FILE: drivers/media/video/stk11xx.c:2219:
+		retval = wait_event_interruptible(dev->wait_frame,
+			dev->full_frames != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->full_frames"
#2349: FILE: drivers/media/video/stk11xx.c:2219:
+			dev->full_frames != NULL);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2380: FILE: drivers/media/video/stk11xx.c:2250:
+static unsigned int stk11xx_poll(struct file *fp, poll_table * wait)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->full_frames"
#2388: FILE: drivers/media/video/stk11xx.c:2258:
+	if (dev->full_frames != NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2415: FILE: drivers/media/video/stk11xx.c:2285:
+	if (size > STK11XX_IMAGE_LEN && (i > 0 || (i == 0 &&
+				size != STK11XX_MAX_IMAGES*STK11XX_IMAGE_LEN)))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2415: FILE: drivers/media/video/stk11xx.c:2285:
+				size != STK11XX_MAX_IMAGES*STK11XX_IMAGE_LEN)))
 				                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2445: FILE: drivers/media/video/stk11xx.c:2315:
+static int stk11xx_querycap(struct file *file, void *fh,
+		struct v4l2_capability *cap)

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#2449: FILE: drivers/media/video/stk11xx.c:2319:
+	strlcpy(cap->driver, "stk11xx", sizeof(cap->driver));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#2454: FILE: drivers/media/video/stk11xx.c:2324:
+	strlcpy(cap->card, dev->vdev->name, sizeof(cap->card));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#2457: FILE: drivers/media/video/stk11xx.c:2327:
+		strlcpy(cap->bus_info, dev->vdev->name, sizeof(cap->bus_info));

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2461: FILE: drivers/media/video/stk11xx.c:2331:
+}
+static int stk11xx_enum_input(struct file *file, void *fh, struct v4l2_input *i)

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#2466: FILE: drivers/media/video/stk11xx.c:2336:
+	strlcpy(i->name, "USB", sizeof(i->name));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2484: FILE: drivers/media/video/stk11xx.c:2354:
+static int stk11xx_queryctrl(struct file *file, void *fh,
+		struct v4l2_queryctrl *c)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2543: FILE: drivers/media/video/stk11xx.c:2413:
+static int stk11xx_enum_fmt_cap(struct file *file, void *fh,
+		struct v4l2_fmtdesc *fmtd)

ERROR:CODE_INDENT: code indent should use tabs where possible
#2559: FILE: drivers/media/video/stk11xx.c:2429:
+^I   ^Istruct v4l2_format *fmtd)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2559: FILE: drivers/media/video/stk11xx.c:2429:
+^I   ^Istruct v4l2_format *fmtd)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2559: FILE: drivers/media/video/stk11xx.c:2429:
+static int stk11xx_g_fmt_cap(struct file *file, void *fh,
+	   	struct v4l2_format *fmtd)

ERROR:CODE_INDENT: code indent should use tabs where possible
#2577: FILE: drivers/media/video/stk11xx.c:2447:
+^I   ^Istruct v4l2_format *fmtd)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2577: FILE: drivers/media/video/stk11xx.c:2447:
+^I   ^Istruct v4l2_format *fmtd)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2577: FILE: drivers/media/video/stk11xx.c:2447:
+static int stk11xx_s_fmt_cap(struct file *file, void *fh,
+	   	struct v4l2_format *fmtd)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2584: FILE: drivers/media/video/stk11xx.c:2454:
+	dev_dbg(&dev->udev->dev, "set width=%d, height=%d\n", pix->width,
+			pix->height);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2591: FILE: drivers/media/video/stk11xx.c:2461:
+		if (pix->width == stk11xx_image_sizes[a].x &&
+				pix->height == stk11xx_image_sizes[a].y)

ERROR:CODE_INDENT: code indent should use tabs where possible
#2619: FILE: drivers/media/video/stk11xx.c:2489:
+^I   ^Istruct v4l2_format *fmtd)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2619: FILE: drivers/media/video/stk11xx.c:2489:
+^I   ^Istruct v4l2_format *fmtd)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2619: FILE: drivers/media/video/stk11xx.c:2489:
+static int stk11xx_try_fmt_cap(struct file *file, void *fh,
+	   	struct v4l2_format *fmtd)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2651: FILE: drivers/media/video/stk11xx.c:2521:
+static int stk11xx_reqbufs(struct file *file, void *fh,
+		struct v4l2_requestbuffers *rb)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2662: FILE: drivers/media/video/stk11xx.c:2532:
+static int stk11xx_querybuf(struct file *file, void *fh,
+		struct v4l2_buffer *buf)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->full_frames"
#2682: FILE: drivers/media/video/stk11xx.c:2552:
+	if (dev->full_frames != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->full_frames"
#2717: FILE: drivers/media/video/stk11xx.c:2587:
+	if (dev->full_frames == NULL && (file->f_flags & O_NONBLOCK))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2721: FILE: drivers/media/video/stk11xx.c:2591:
+	retval = wait_event_interruptible(dev->wait_frame,
+			dev->full_frames != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->full_frames"
#2721: FILE: drivers/media/video/stk11xx.c:2591:
+			dev->full_frames != NULL);

ERROR:SPACING: spaces required around that ':' (ctx:VxO)
#2749: FILE: drivers/media/video/stk11xx.c:2619:
+	return i == V4L2_BUF_TYPE_VIDEO_CAPTURE ? stk11xx_isoc_init(fh):-EINVAL;
 	                                                               ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#2749: FILE: drivers/media/video/stk11xx.c:2619:
+	return i == V4L2_BUF_TYPE_VIDEO_CAPTURE ? stk11xx_isoc_init(fh):-EINVAL;
 	                                                                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2759: FILE: drivers/media/video/stk11xx.c:2629:
+static int stk11xx_g_parm(struct file *file, void *fh,
+		struct v4l2_streamparm *sp)

WARNING:TYPO_SPELLING: 'PARM' may be misspelled - perhaps 'PARAM'?
#2761: FILE: drivers/media/video/stk11xx.c:2631:
+	pr_debug("GET PARM %d\n", sp->type);
 	              ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#2766: FILE: drivers/media/video/stk11xx.c:2636:
+	sp->parm.capture.capability = 0;
 	    ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#2767: FILE: drivers/media/video/stk11xx.c:2637:
+	sp->parm.capture.capturemode = 0;
 	    ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#2768: FILE: drivers/media/video/stk11xx.c:2638:
+	sp->parm.capture.timeperframe.numerator = 1;
 	    ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#2769: FILE: drivers/media/video/stk11xx.c:2639:
+	sp->parm.capture.timeperframe.denominator = 30;
 	    ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#2770: FILE: drivers/media/video/stk11xx.c:2640:
+	sp->parm.capture.readbuffers = 2;
 	    ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#2771: FILE: drivers/media/video/stk11xx.c:2641:
+	sp->parm.capture.extendedmode = 0;
 	    ^^^^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#2796: FILE: drivers/media/video/stk11xx.c:2666:
+static struct file_operations stk11xx_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#2858: FILE: drivers/media/video/stk11xx.c:2728:
+static CLASS_DEVICE_ATTR(contrast, S_IRUGO, show_contrast, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#2859: FILE: drivers/media/video/stk11xx.c:2729:
+static CLASS_DEVICE_ATTR(whitebalance, S_IRUGO, show_whitebalance, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2862: FILE: drivers/media/video/stk11xx.c:2732:
+static inline int stk11xx_create_sysfs_file(const struct stk11xx *dev,
+		const struct class_device_attribute *cda)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2869: FILE: drivers/media/video/stk11xx.c:2739:
+		dev_err(&dev->udev->dev, "can't create sysfs file %s: %d\n",
+				attr_name(*cda), ret);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3163: FILE: drivers/media/video/stk11xx.c:3033:
+/* $

WARNING:TYPO_SPELLING: 'completly' may be misspelled - perhaps 'completely'?
#3166: FILE: drivers/media/video/stk11xx.c:3036:
+ * completly initalized and it's ready.
    ^^^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceNumber>
#3197: FILE: drivers/media/video/stk11xx.c:3067:
+	if (interface->cur_altsetting->desc.bInterfaceNumber > 0) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dev)...) over kzalloc(sizeof(struct stk11xx)...)
#3202: FILE: drivers/media/video/stk11xx.c:3072:
+	dev = kzalloc(sizeof(struct stk11xx), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#3203: FILE: drivers/media/video/stk11xx.c:3073:
+	if (dev == NULL) {

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#3204: FILE: drivers/media/video/stk11xx.c:3074:
+	if (dev == NULL) {
+		dev_err(&udev->dev, "can't alloc device info!\n");

WARNING:TYPO_SPELLING: 'usefull' may be misspelled - perhaps 'useful'?
#3221: FILE: drivers/media/video/stk11xx.c:3091:
+/* NICKLAS: Claiming the interface is usefull when the driver want manage severals interfaces. */
                                       ^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <bNumEndpoints>
#3230: FILE: drivers/media/video/stk11xx.c:3100:
+	for (i = 0; i < iface_desc->desc.bNumEndpoints; ++i) {

CHECK:CAMELCASE: Avoid CamelCase: <bEndpointAddress>
#3233: FILE: drivers/media/video/stk11xx.c:3103:
+		if (!dev->isoc_in_endpointAddr && ((endpoint->bEndpointAddress &

CHECK:CAMELCASE: Avoid CamelCase: <bmAttributes>
#3235: FILE: drivers/media/video/stk11xx.c:3105:
+				((endpoint->bmAttributes &

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->vdev"
#3253: FILE: drivers/media/video/stk11xx.c:3123:
+	if (dev->vdev == NULL) {

WARNING:SPLIT_STRING: quoted string split across lines
#3278: FILE: drivers/media/video/stk11xx.c:3148:
+	dev_info(&udev->dev, "Syntek USB2.0 - STK-%.4u based webcam found and "
+		"ready\n", id->driver_info == SYNTEK_STK1125 ? 1125 : 1135);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3292: FILE: drivers/media/video/stk11xx.c:3162:
+^Iunsigned int free = 0;^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3295: FILE: drivers/media/video/stk11xx.c:3165:
+	class_device_remove_file(&dev->vdev->class_dev,
+					&class_device_attr_contrast);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3297: FILE: drivers/media/video/stk11xx.c:3167:
+	class_device_remove_file(&dev->vdev->class_dev,
+					&class_device_attr_whitebalance);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3337: FILE: drivers/media/video/stk11xx.c:3207:
+		printk(KERN_ERR "stk11xx: framerate out of bounds "

WARNING:SPLIT_STRING: quoted string split across lines
#3338: FILE: drivers/media/video/stk11xx.c:3208:
+		printk(KERN_ERR "stk11xx: framerate out of bounds "
+				"[10-30]\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3344: FILE: drivers/media/video/stk11xx.c:3214:
+		printk(KERN_ERR "stk11xx: usb_register failed!\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000417587.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 46 errors, 68 warnings, 101 checks, 3253 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000417587.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
