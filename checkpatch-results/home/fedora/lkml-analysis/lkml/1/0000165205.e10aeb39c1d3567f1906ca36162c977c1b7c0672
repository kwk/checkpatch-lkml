WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
2.6.27-stable review patch.  If anyone has any objections, please let us know.

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id 'c894058d66637c7720569fbe12957f4de64d9991', maybe rebased or not pulled?
#47: 
(cherry picked from commit c894058d66637c7720569fbe12957f4de64d9991 to allow

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id 'e21675d4', maybe rebased or not pulled?
#48: 
commit e21675d4 to be included in 2.6.27.y)

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#77: FILE: fs/ext4/mballoc.c:2510:
+	meta_group_info[i]->bb_free_root.rb_node = NULL;;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#111: FILE: fs/ext4/mballoc.c:2840:
+			entry = list_entry(sbi->s_committed_transaction.next,
+					struct ext4_free_data, list);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!entry"
#117: FILE: fs/ext4/mballoc.c:2845:
+		if (entry == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around db->bb_free_root
#147: FILE: fs/ext4/mballoc.c:2861:
+		rb_erase(&entry->node, &(db->bb_free_root));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#175: FILE: fs/ext4/mballoc.c:3033:
+		kmem_cache_create("ext4_free_block_extents",
+				     sizeof(struct ext4_free_data),

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ext4_free_ext_cachep"
#177: FILE: fs/ext4/mballoc.c:3035:
+	if (ext4_free_ext_cachep == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: fs/ext4/mballoc.c:4701:
+static int can_merge(struct ext4_free_data *entry1,
+			struct ext4_free_data *entry2)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'entry1->t_tid == entry2->t_tid'
#213: FILE: fs/ext4/mballoc.c:4703:
+	if ((entry1->t_tid == entry2->t_tid) &&
+	    (entry1->group == entry2->group) &&
+	    ((entry1->start_blk + entry1->count) == entry2->start_blk))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'entry1->group == entry2->group'
#213: FILE: fs/ext4/mballoc.c:4703:
+	if ((entry1->t_tid == entry2->t_tid) &&
+	    (entry1->group == entry2->group) &&
+	    ((entry1->start_blk + entry1->count) == entry2->start_blk))

WARNING:TYPO_SPELLING: 'exent' may be misspelled - perhaps 'extent'?
#251: FILE: fs/ext4/mballoc.c:4734:
+		/* first free block exent. We need to
 		                    ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#252: FILE: fs/ext4/mballoc.c:4735:
+		/* first free block exent. We need to
+		   protect buddy cache from being freed,

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#255: FILE: fs/ext4/mballoc.c:4738:
+		 * blocks */

CHECK:BRACES: braces {} should be used on all arms of this statement
#262: FILE: fs/ext4/mballoc.c:4745:
+		if (block < entry->start_blk)
[...]
+		else if (block >= (entry->start_blk + entry->count))
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#266: FILE: fs/ext4/mballoc.c:4749:
+		else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#268: FILE: fs/ext4/mballoc.c:4751:
+			ext4_error(sb, __func__,
+			    "Double free of blocks %d (%d %d)\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around db->bb_free_root
#310: FILE: fs/ext4/mballoc.c:4767:
+			rb_erase(node, &(db->bb_free_root));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around db->bb_free_root
#329: FILE: fs/ext4/mballoc.c:4780:
+			rb_erase(node, &(db->bb_free_root));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000165205.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 13 checks, 306 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000165205.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
