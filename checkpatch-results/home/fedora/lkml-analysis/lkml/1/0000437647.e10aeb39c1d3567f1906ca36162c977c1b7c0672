WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#47: FILE: fs/Kconfig:1362:
+config JFFS2_CMODE_FAVOURLZO
+        bool "Favour LZO"
+        help
+          Tries all compressors and chooses the one which has the smallest
+          result but gives some preference to LZO (which has faster
+	  decompression) at the expense of size.
+

Kconfig symbols should have a help text which fully describes
it.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#65: FILE: fs/jffs2/compr.c:27:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#70: FILE: fs/jffs2/compr.c:32:
+static int jffs2_is_best_compression(struct jffs2_compressor *this,
+		struct jffs2_compressor *best, uint32_t size, uint32_t bestsize)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#72: FILE: fs/jffs2/compr.c:34:
+	switch (jffs2_compression_mode) {
+		case JFFS2_COMPR_MODE_SIZE:
[...]
+		case JFFS2_COMPR_MODE_FAVOURLZO:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'this->compr == JFFS2_COMPR_LZO'
#78: FILE: fs/jffs2/compr.c:40:
+			if ((this->compr == JFFS2_COMPR_LZO) && (bestsize > size))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bestsize > size'
#78: FILE: fs/jffs2/compr.c:40:
+			if ((this->compr == JFFS2_COMPR_LZO) && (bestsize > size))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'best->compr != JFFS2_COMPR_LZO'
#80: FILE: fs/jffs2/compr.c:42:
+			if ((best->compr != JFFS2_COMPR_LZO) && (bestsize > size))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bestsize > size'
#80: FILE: fs/jffs2/compr.c:42:
+			if ((best->compr != JFFS2_COMPR_LZO) && (bestsize > size))

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#82: FILE: fs/jffs2/compr.c:44:
+			if ((this->compr == JFFS2_COMPR_LZO) && (bestsize > (size * FAVOUR_LZO_PERCENT / 100)))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'this->compr == JFFS2_COMPR_LZO'
#82: FILE: fs/jffs2/compr.c:44:
+			if ((this->compr == JFFS2_COMPR_LZO) && (bestsize > (size * FAVOUR_LZO_PERCENT / 100)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: fs/jffs2/compr.c:120:
+        case JFFS2_COMPR_MODE_FAVOURLZO:$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: fs/jffs2/compr.c:120:
+        case JFFS2_COMPR_MODE_FAVOURLZO:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: fs/jffs2/compr.c:129:
+                        if ((this->compr_buf_size<orig_slen)&&(this->compr_buf)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: fs/jffs2/compr.c:129:
+                        if ((this->compr_buf_size<orig_slen)&&(this->compr_buf)) {$

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#109: FILE: fs/jffs2/compr.c:129:
+                        if ((this->compr_buf_size<orig_slen)&&(this->compr_buf)) {
                                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '&&' (ctx:VxV)
#109: FILE: fs/jffs2/compr.c:129:
+                        if ((this->compr_buf_size<orig_slen)&&(this->compr_buf)) {
                                                             ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'this->compr_buf_size<orig_slen'
#109: FILE: fs/jffs2/compr.c:129:
+                        if ((this->compr_buf_size<orig_slen)&&(this->compr_buf)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: fs/jffs2/compr.c:138:
+                                tmp_buf = kmalloc(orig_slen,GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: fs/jffs2/compr.c:138:
+                                tmp_buf = kmalloc(orig_slen,GFP_KERNEL);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#118: FILE: fs/jffs2/compr.c:138:
+                                tmp_buf = kmalloc(orig_slen,GFP_KERNEL);
                                                            ^

WARNING:LONG_LINE: line length of 130 exceeds 100 columns
#122: FILE: fs/jffs2/compr.c:141:
+                                        printk(KERN_WARNING "JFFS2: No memory for compressor allocation. (%d bytes)\n",orig_slen);

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: fs/jffs2/compr.c:141:
+                                        printk(KERN_WARNING "JFFS2: No memory for compressor allocation. (%d bytes)\n",orig_slen);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: fs/jffs2/compr.c:141:
+                                        printk(KERN_WARNING "JFFS2: No memory for compressor allocation. (%d bytes)\n",orig_slen);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#122: FILE: fs/jffs2/compr.c:141:
+                                        printk(KERN_WARNING "JFFS2: No memory for compressor allocation. (%d bytes)\n",orig_slen);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#122: FILE: fs/jffs2/compr.c:141:
+                                        printk(KERN_WARNING "JFFS2: No memory for compressor allocation. (%d bytes)\n",orig_slen);
                                                                                                                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: fs/jffs2/compr.c:146:
+                                        this->compr_buf_size = orig_slen;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: fs/jffs2/compr.c:146:
+                                        this->compr_buf_size = orig_slen;$

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#137: FILE: fs/jffs2/compr.c:157:
+				if (((!best_dlen) || jffs2_is_best_compression(this, best, *cdatalen, best_dlen))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!best_dlen'
#137: FILE: fs/jffs2/compr.c:157:
+				if (((!best_dlen) || jffs2_is_best_compression(this, best, *cdatalen, best_dlen))
+						&& (*cdatalen < *datalen)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#138: FILE: fs/jffs2/compr.c:158:
+				if (((!best_dlen) || jffs2_is_best_compression(this, best, *cdatalen, best_dlen))
+						&& (*cdatalen < *datalen)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: fs/jffs2/compr.c:331:
+        jffs2_compression_mode = JFFS2_COMPR_MODE_FAVOURLZO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: fs/jffs2/compr.c:331:
+        jffs2_compression_mode = JFFS2_COMPR_MODE_FAVOURLZO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: fs/jffs2/compr.c:332:
+        D1(printk(KERN_INFO "JFFS2: default compression mode: favourlzo\n");)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: fs/jffs2/compr.c:332:
+        D1(printk(KERN_INFO "JFFS2: default compression mode: favourlzo\n");)$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#148: FILE: fs/jffs2/compr.c:332:
+        D1(printk(KERN_INFO "JFFS2: default compression mode: favourlzo\n");)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000437647.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 12 errors, 13 warnings, 10 checks, 112 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000437647.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
