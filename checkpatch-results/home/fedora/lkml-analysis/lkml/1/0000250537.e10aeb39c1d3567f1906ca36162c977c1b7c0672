WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
events for events relating to the hardware ring buffer. Chrdev access to the

ERROR:TRAILING_WHITESPACE: trailing whitespace
#66: FILE: drivers/industrialio/accelerometer/Kconfig:24:
+^I Say yes here to build support for the VTI SCA3000 series of SPI $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#79: FILE: drivers/industrialio/accelerometer/sca3000.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'defintions' may be misspelled - perhaps 'definitions'?
#101: FILE: drivers/industrialio/accelerometer/sca3000.c:23:
+/* Local to driver defintions - to be shared with i2c driver */
                    ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#155: FILE: drivers/industrialio/accelerometer/sca3000.c:77:
+			     uint8_t address,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tx"
#169: FILE: drivers/industrialio/accelerometer/sca3000.c:91:
+	if (tx == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#191: FILE: drivers/industrialio/accelerometer/sca3000.c:113:
+			     uint8_t reg_address_high,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rx_p"
#206: FILE: drivers/industrialio/accelerometer/sca3000.c:128:
+	if (*rx_p == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tx"
#212: FILE: drivers/industrialio/accelerometer/sca3000.c:134:
+	if (tx == NULL) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#235: FILE: drivers/industrialio/accelerometer/sca3000.c:157:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#239: FILE: drivers/industrialio/accelerometer/sca3000.c:161:
+{
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tx"
#281: FILE: drivers/industrialio/accelerometer/sca3000.c:203:
+	if (tx == NULL) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#285: FILE: drivers/industrialio/accelerometer/sca3000.c:207:
+	tx[0] = tx[2] = tx[4] = SCA3000_WRITE_REG(SCA3000_REG_ADDR_UNLOCK);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#290: FILE: drivers/industrialio/accelerometer/sca3000.c:212:
+	xfer[1].tx_buf = tx+2;
 	                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#291: FILE: drivers/industrialio/accelerometer/sca3000.c:213:
+	xfer[2].tx_buf = tx+4;
 	                   ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#309: FILE: drivers/industrialio/accelerometer/sca3000.c:231:
+{
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#312: FILE: drivers/industrialio/accelerometer/sca3000.c:234:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#337: FILE: drivers/industrialio/accelerometer/sca3000.c:259:
+				 uint8_t ctrl_reg,

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#371: FILE: drivers/industrialio/accelerometer/sca3000.c:293:
+		dev_err(dev, "eeprom error \n");

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#382: FILE: drivers/industrialio/accelerometer/sca3000.c:304:
+inline int sca3000_13bit_convert(uint8_t msb, uint8_t lsb)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's16' over 'int16_t'
#384: FILE: drivers/industrialio/accelerometer/sca3000.c:306:
+	int16_t val;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#393: FILE: drivers/industrialio/accelerometer/sca3000.c:315:
+
+

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#464: FILE: drivers/industrialio/accelerometer/sca3000.c:386:
+	len += sprintf(buf + len, " 3 - motion detection \n");

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#528: FILE: drivers/industrialio/accelerometer/sca3000.c:450:
+	ret = strict_strtol(buf, 10, &val);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:LINE_SPACING: Please don't use multiple blank lines
#551: FILE: drivers/industrialio/accelerometer/sca3000.c:473:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#553: FILE: drivers/industrialio/accelerometer/sca3000.c:475:
+ * will make it into the sysfs header if not, made available like this. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#554: FILE: drivers/industrialio/accelerometer/sca3000.c:476:
+static IIO_DEVICE_ATTR(available_measurement_modes, S_IRUGO,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#558: FILE: drivers/industrialio/accelerometer/sca3000.c:480:
+static IIO_DEVICE_ATTR(measurement_mode, S_IRUGO | S_IWUSR,

WARNING:TYPO_SPELLING: 'devision' may be misspelled - perhaps 'division'?
#575: FILE: drivers/industrialio/accelerometer/sca3000.c:497:
+ * devision will give good enough answer and not all chips have them specified
    ^^^^^^^^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#594: FILE: drivers/industrialio/accelerometer/sca3000.c:516:
+			       st->info->measurement_mode_freq/2,
 			                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#595: FILE: drivers/industrialio/accelerometer/sca3000.c:517:
+			       st->info->measurement_mode_freq/4);
 			                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#600: FILE: drivers/industrialio/accelerometer/sca3000.c:522:
+			       st->info->option_mode_1_freq/2,
 			                                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#601: FILE: drivers/industrialio/accelerometer/sca3000.c:523:
+			       st->info->option_mode_1_freq/4);
 			                                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#606: FILE: drivers/industrialio/accelerometer/sca3000.c:528:
+			       st->info->option_mode_2_freq/2,
 			                                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#607: FILE: drivers/industrialio/accelerometer/sca3000.c:529:
+			       st->info->option_mode_2_freq/4);
 			                                   ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#647: FILE: drivers/industrialio/accelerometer/sca3000.c:569:
+		switch (rx[1]&0x03) {
 		             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#653: FILE: drivers/industrialio/accelerometer/sca3000.c:575:
+			len = sprintf(buf, "%d\n", base_freq/2);
 			                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#656: FILE: drivers/industrialio/accelerometer/sca3000.c:578:
+			len = sprintf(buf, "%d\n", base_freq/4);
 			                                    ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#674: FILE: drivers/industrialio/accelerometer/sca3000.c:596:
+	long val;
+	ret = strict_strtol(buf, 10, &val);

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#674: FILE: drivers/industrialio/accelerometer/sca3000.c:596:
+	ret = strict_strtol(buf, 10, &val);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#700: FILE: drivers/industrialio/accelerometer/sca3000.c:622:
+	if (val == base_freq/2) {
 	                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#702: FILE: drivers/industrialio/accelerometer/sca3000.c:624:
+	} else if (val == base_freq/4) {
 	                           ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#719: FILE: drivers/industrialio/accelerometer/sca3000.c:641:
+static IIO_DEV_ATTR_SAMP_FREQ(S_IWUSR | S_IRUGO,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#724: FILE: drivers/industrialio/accelerometer/sca3000.c:646:
+ * userspace part of header */

WARNING:LINE_SPACING: Missing a blank line after declarations
#732: FILE: drivers/industrialio/accelerometer/sca3000.c:654:
+	char *rx;
+	ret = sca3000_read_data(dev, SCA3000_REG_ADDR_TEMP_MSB, &rx, 2);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#735: FILE: drivers/industrialio/accelerometer/sca3000.c:657:
+	val = ((rx[1]&0x3F) << 3) | ((rx[2] & 0xE0) >> 5);
 	             ^

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#750: FILE: drivers/industrialio/accelerometer/sca3000.c:672:
+	return sprintf(buf, "8, 11\n");;

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#785: FILE: drivers/industrialio/accelerometer/sca3000.c:707:
+	ret = strict_strtol(buf, 10, &val);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#815: FILE: drivers/industrialio/accelerometer/sca3000.c:737:
+static IIO_DEV_ATTR_RING_BPS(S_IRUGO | S_IWUSR,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#835: FILE: drivers/industrialio/accelerometer/sca3000.c:757:
+	len += sprintf(buf+len, "%d\n", rx[1]);
 	                  ^

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#853: FILE: drivers/industrialio/accelerometer/sca3000.c:775:
+	ret = strict_strtol(buf, 10, &val);

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#895: FILE: drivers/industrialio/accelerometer/sca3000.c:817:
+	ret = strict_strtol(buf, 10, &val);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#922: FILE: drivers/industrialio/accelerometer/sca3000.c:844:
+static IIO_DEV_ATTR_ACCEL_THRESH_X(S_IRUGO | S_IWUSR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#926: FILE: drivers/industrialio/accelerometer/sca3000.c:848:
+static IIO_DEV_ATTR_ACCEL_THRESH_Y(S_IRUGO | S_IWUSR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#930: FILE: drivers/industrialio/accelerometer/sca3000.c:852:
+static IIO_DEV_ATTR_ACCEL_THRESH_Z(S_IRUGO | S_IWUSR,

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#939: FILE: drivers/industrialio/accelerometer/sca3000.c:861:
+/*fixme, cleaner and readable way of handling these two subtly different tables?
+*/

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#990: FILE: drivers/industrialio/accelerometer/sca3000.c:912:
+	struct sca3000_state *st
+		= container_of(work_s, struct sca3000_state,

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#995: FILE: drivers/industrialio/accelerometer/sca3000.c:917:
+
+

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#1000: FILE: drivers/industrialio/accelerometer/sca3000.c:922:
+	 * occured. Note no events are actually sent if no-one is listening.*/
 	   ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1000: FILE: drivers/industrialio/accelerometer/sca3000.c:922:
+	 * occured. Note no events are actually sent if no-one is listening.*/

WARNING:RETURN_VOID: void function return statements are not generally useful
#1008: FILE: drivers/industrialio/accelerometer/sca3000.c:930:
+	return;
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#1017: FILE: drivers/industrialio/accelerometer/sca3000.c:939:
+	struct sca3000_state *st = dev_info->dev_data;
+	st->last_timestamp = timestamp;

WARNING:TYPO_SPELLING: 'irrelvant' may be misspelled - perhaps 'irrelevant'?
#1019: FILE: drivers/industrialio/accelerometer/sca3000.c:941:
+	   no check is irrelvant */
 	               ^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1019: FILE: drivers/industrialio/accelerometer/sca3000.c:941:
+	/* have to read the interrupt status to acknowledge the interrupt so
+	   no check is irrelvant */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1019: FILE: drivers/industrialio/accelerometer/sca3000.c:941:
+	   no check is irrelvant */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1033: FILE: drivers/industrialio/accelerometer/sca3000.c:955:
+	uint8_t protect_mask = 0x03;

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1041: FILE: drivers/industrialio/accelerometer/sca3000.c:963:
+	if ((rx[1]&protect_mask) != SCA3000_MEAS_MODE_MOT_DET)
 	          ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1041: FILE: drivers/industrialio/accelerometer/sca3000.c:963:
+	if ((rx[1]&protect_mask) != SCA3000_MEAS_MODE_MOT_DET)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1043: FILE: drivers/industrialio/accelerometer/sca3000.c:965:
+	else {

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1051: FILE: drivers/industrialio/accelerometer/sca3000.c:973:
+		if (rx[1]&this_attr->mask)
 		         ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1067: FILE: drivers/industrialio/accelerometer/sca3000.c:989:
+
+

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1078: FILE: drivers/industrialio/accelerometer/sca3000.c:1000:
+	val = rx[1]&SCA3000_FREE_FALL_DETECT ? 1 : 0;
 	           ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1107: FILE: drivers/industrialio/accelerometer/sca3000.c:1029:
+
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1110: FILE: drivers/industrialio/accelerometer/sca3000.c:1032:
+static ssize_t sca3000_set_ring_int(struct device *dev,
+				      struct device_attribute *attr,

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#1122: FILE: drivers/industrialio/accelerometer/sca3000.c:1044:
+	ret = strict_strtol(buf, 10, &val);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1162: FILE: drivers/industrialio/accelerometer/sca3000.c:1084:
+	uint8_t protect_mask = SCA3000_FREE_FALL_DETECT;

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#1165: FILE: drivers/industrialio/accelerometer/sca3000.c:1087:
+	ret = strict_strtol(buf, 10, &val);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1175: FILE: drivers/industrialio/accelerometer/sca3000.c:1097:
+	if (val && !(rx[1]&protect_mask))
 	                  ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1179: FILE: drivers/industrialio/accelerometer/sca3000.c:1101:
+	else if (!val && (rx[1]&protect_mask))
 	                       ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1181: FILE: drivers/industrialio/accelerometer/sca3000.c:1103:
+					(rx[1]&(~protect_mask)));
 					      ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1209: FILE: drivers/industrialio/accelerometer/sca3000.c:1131:
+	uint8_t protect_mask = 0x03;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1210: FILE: drivers/industrialio/accelerometer/sca3000.c:1132:
+	uint8_t protect_mask = 0x03;
+	mutex_lock(&st->lock);

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#1211: FILE: drivers/industrialio/accelerometer/sca3000.c:1133:
+	ret = strict_strtol(buf, 10, &val);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1215: FILE: drivers/industrialio/accelerometer/sca3000.c:1137:
+	 * this axis is on*/

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1222: FILE: drivers/industrialio/accelerometer/sca3000.c:1144:
+	if (val && !(rx[1]&this_attr->mask)) {
 	                  ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1230: FILE: drivers/industrialio/accelerometer/sca3000.c:1152:
+	} else if (!val && (rx[1]&this_attr->mask)) {
 	                         ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'st->mo_det_use_count'
#1247: FILE: drivers/industrialio/accelerometer/sca3000.c:1169:
+	if ((st->mo_det_use_count)
+	    && ((rx[1]&protect_mask) != SCA3000_MEAS_MODE_MOT_DET))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1248: FILE: drivers/industrialio/accelerometer/sca3000.c:1170:
+	if ((st->mo_det_use_count)
+	    && ((rx[1]&protect_mask) != SCA3000_MEAS_MODE_MOT_DET))

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1248: FILE: drivers/industrialio/accelerometer/sca3000.c:1170:
+	    && ((rx[1]&protect_mask) != SCA3000_MEAS_MODE_MOT_DET))
 	              ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1250: FILE: drivers/industrialio/accelerometer/sca3000.c:1172:
+					(rx[1]&(~protect_mask))
 					      ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1255: FILE: drivers/industrialio/accelerometer/sca3000.c:1177:
+	/*CARE HERE as need to know what mode to switch
+	   to - at the moment assuming back to normal */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1255: FILE: drivers/industrialio/accelerometer/sca3000.c:1177:
+	   to - at the moment assuming back to normal */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1257: FILE: drivers/industrialio/accelerometer/sca3000.c:1179:
+	else if (!(st->mo_det_use_count)
+		&& ((rx[1]&protect_mask) == SCA3000_MEAS_MODE_MOT_DET))

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1257: FILE: drivers/industrialio/accelerometer/sca3000.c:1179:
+		&& ((rx[1]&protect_mask) == SCA3000_MEAS_MODE_MOT_DET))
 		          ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1259: FILE: drivers/industrialio/accelerometer/sca3000.c:1181:
+					(rx[1]&(~protect_mask)));
 					      ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1273: FILE: drivers/industrialio/accelerometer/sca3000.c:1195:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1325: FILE: drivers/industrialio/accelerometer/sca3000.c:1247:
+int sca3000_ring_open(struct inode *inode, struct file *filp)
                                                         ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1332: FILE: drivers/industrialio/accelerometer/sca3000.c:1254:
+int sca3000_ring_release(struct inode *inode, struct file *filp)
                                                            ^^^^

WARNING:TYPO_SPELLING: 'Afterall' may be misspelled - perhaps 'After all'?
#1343: FILE: drivers/industrialio/accelerometer/sca3000.c:1265:
+ * Afterall, if we are responding to an interrupt we have a minimum content
    ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1344: FILE: drivers/industrialio/accelerometer/sca3000.c:1266:
+ * guaranteed*/

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1346: FILE: drivers/industrialio/accelerometer/sca3000.c:1268:
+ssize_t sca3000_ring_rip(struct file *filp,
                                       ^^^^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1351: FILE: drivers/industrialio/accelerometer/sca3000.c:1273:
+{
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1376: FILE: drivers/industrialio/accelerometer/sca3000.c:1298:
+	if (count > num_available*bytes_per_sample)
 	                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1377: FILE: drivers/industrialio/accelerometer/sca3000.c:1299:
+		num_read = num_available*bytes_per_sample;
 		                        ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1381: FILE: drivers/industrialio/accelerometer/sca3000.c:1303:
+	 * of the initial byte. Will think on this.*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1437: FILE: drivers/industrialio/accelerometer/sca3000.c:1359:
+	 * debugging easier - add control of this later */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1451: FILE: drivers/industrialio/accelerometer/sca3000.c:1373:
+	ret = sca3000_read_data(dev,
+			  SCA3000_REG_ADDR_INT_MASK,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1464: FILE: drivers/industrialio/accelerometer/sca3000.c:1386:
+	 * as that occurs in one of the example on the datasheet */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1466: FILE: drivers/industrialio/accelerometer/sca3000.c:1388:
+	ret = sca3000_read_data(dev,
+			  SCA3000_REG_ADDR_MODE,

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1481: FILE: drivers/industrialio/accelerometer/sca3000.c:1403:
+static int __devinit sca3000_probe(struct spi_device *spi)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*st)...) over kzalloc(sizeof(struct sca3000_state)...)
#1487: FILE: drivers/industrialio/accelerometer/sca3000.c:1409:
+	st = kzalloc(sizeof(struct sca3000_state), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!st"
#1488: FILE: drivers/industrialio/accelerometer/sca3000.c:1410:
+	if (st == NULL) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*st->indio_dev)...) over kzalloc(sizeof(struct iio_dev)...)
#1495: FILE: drivers/industrialio/accelerometer/sca3000.c:1417:
+	st->indio_dev = kzalloc(sizeof(struct iio_dev), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!st->indio_dev"
#1496: FILE: drivers/industrialio/accelerometer/sca3000.c:1418:
+	if (st->indio_dev == NULL) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1526: FILE: drivers/industrialio/accelerometer/sca3000.c:1448:
+		 * THIS IS PROBABLY A COMMON SITUATION - CLEAN UP REGISTRATION*/

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1563: FILE: drivers/industrialio/accelerometer/sca3000.c:1485:
+}
+static int sca3000_stop_all_interrupts(struct device *dev)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1581: FILE: drivers/industrialio/accelerometer/sca3000.c:1503:
+
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1582: FILE: drivers/industrialio/accelerometer/sca3000.c:1504:
+}
+static int sca3000_remove(struct spi_device *spi)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1587: FILE: drivers/industrialio/accelerometer/sca3000.c:1509:
+	int ret;
+	iio_free_hw_ring_buffer(st->hw_ring, &spi->dev);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1601: FILE: drivers/industrialio/accelerometer/sca3000.c:1523:
+}
+static struct spi_driver sca3000_driver = {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1629: FILE: include/linux/industrialio/sca3000.h:1:
+/* fixme, start these at zero and rebase chip_info array in driver */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1642: FILE: include/linux/industrialio/sca3000.h:14:
+inline int sca3000_11bit_convert(uint8_t msb, uint8_t lsb)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's16' over 'int16_t'
#1644: FILE: include/linux/industrialio/sca3000.h:16:
+	int16_t val;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000250537.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 50 warnings, 72 checks, 1583 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000250537.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
