WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#68: FILE: include/linux/memrlimitcgroup.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#120: FILE: mm/memrlimitcgroup.c:1:
+/*

CHECK:BRACES: braces {} should be used on all arms of this statement
#172: FILE: mm/memrlimitcgroup.c:53:
+	if (unlikely(cgrp->parent == NULL))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cgrp->parent"
#172: FILE: mm/memrlimitcgroup.c:53:
+	if (unlikely(cgrp->parent == NULL))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: Unbalanced braces around else statement
#174: FILE: mm/memrlimitcgroup.c:55:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#184: FILE: mm/memrlimitcgroup.c:65:
+static void memrlimit_cgroup_destroy(struct cgroup_subsys *ss,
+					struct cgroup *cgrp)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#219: FILE: mm/memrlimitcgroup.c:100:
+static ssize_t memrlimit_cgroup_write(struct cgroup *cgrp, struct cftype *cft,
+					struct file *file,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#250: FILE: mm/memrlimitcgroup.c:131:
+static int memrlimit_cgroup_populate(struct cgroup_subsys *ss,
+					struct cgroup *cgrp)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000277359.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 6 checks, 192 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000277359.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
