WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#53: FILE: MAINTAINERS:1417:
+P:	Eric Paris
+M:	eparis@parisplace.org

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#125: FILE: fs/notify/dnotify/dnotify.c:64:
+	struct dnotify_mark_entry *dnentry  = container_of(entry, struct dnotify_mark_entry, fsn_entry);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dn"
#133: FILE: fs/notify/dnotify/dnotify.c:69:
+	for (; dn != NULL; dn = dn->dn_next)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'alreay' may be misspelled - perhaps 'already'?
#159: FILE: fs/notify/dnotify/dnotify.c:95:
+	/* unlikely since we alreay passed dnotify_should_send_event() */
 	                     ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: braces {} should be used on all arms of this statement
#173: FILE: fs/notify/dnotify/dnotify.c:109:
+		if (dn->dn_mask & FS_DN_MULTISHOT)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#175: FILE: fs/notify/dnotify/dnotify.c:111:
+		else {

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#188: FILE: fs/notify/dnotify/dnotify.c:124:
+static void dnotify_clear_mark(struct fsnotify_mark_entry *entry, struct inode *inode, unsigned int flags)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#192: FILE: fs/notify/dnotify/dnotify.c:128:
+	 * have already been flushed in dnotify_flush() */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#193: FILE: fs/notify/dnotify/dnotify.c:129:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#202: FILE: fs/notify/dnotify/dnotify.c:138:
+	/* !dir_notify_enable should never get here, don't waste time checking
+	if (!dir_notify_enable)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#203: FILE: fs/notify/dnotify/dnotify.c:139:
+		return 0; */

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#227: FILE: fs/notify/dnotify/dnotify.c:163:
+	struct dnotify_mark_entry *dnentry = container_of(entry, struct dnotify_mark_entry, fsn_entry);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#229: FILE: fs/notify/dnotify/dnotify.c:165:
+	BUG_ON(dnentry->dn);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dnentry->dn"
#278: FILE: fs/notify/dnotify/dnotify.c:210:
+	if (dnentry->dn == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#323: FILE: fs/notify/dnotify/dnotify.c:254:
+ */ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#339: FILE: fs/notify/dnotify/dnotify.c:270:
+		if (ret == -EEXIST)
[...]
+		else if (ret) {
[...]

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#361: FILE: fs/notify/dnotify/dnotify.c:292:
+		     int fd, struct file *filp, __u64 mask)
 		                          ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#370: FILE: fs/notify/dnotify/dnotify.c:300:
+		if ((odn->dn_owner == id) && (odn->dn_filp == filp)) {
 		                                              ^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'odn->dn_owner == id'
#370: FILE: fs/notify/dnotify/dnotify.c:300:
+		if ((odn->dn_owner == id) && (odn->dn_filp == filp)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'odn->dn_filp == filp'
#370: FILE: fs/notify/dnotify/dnotify.c:300:
+		if ((odn->dn_owner == id) && (odn->dn_filp == filp)) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#380: FILE: fs/notify/dnotify/dnotify.c:310:
+	dn->dn_filp = filp;
 	              ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#388: FILE: fs/notify/dnotify/dnotify.c:318:
+int fcntl_dirnotify(int fd, struct file *filp, unsigned long arg)
                                          ^^^^

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#442: FILE: fs/notify/dnotify/dnotify.c:358:
+	dnotify_group = fsnotify_obtain_group(DNOTIFY_GROUP_NUM, DNOTIFY_GROUP_NUM, ALL_DNOTIFY_EVENTS, &dnotify_fsnotify_ops);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#456: FILE: fs/notify/dnotify/dnotify.c:364:
+	new_dnentry = dnentry = kmem_cache_alloc(dnotify_inode_mark_cache, GFP_KERNEL);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#515: FILE: fs/notify/dnotify/dnotify.c:384:
+	/* if (f != filp) means that we lost a race and another task/thread
 	            ^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#518: FILE: fs/notify/dnotify/dnotify.c:387:
+	 * up the mark entries we need to get our mark off the list. */

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#519: FILE: fs/notify/dnotify/dnotify.c:388:
+	if (f != filp) {
 	         ^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#522: FILE: fs/notify/dnotify/dnotify.c:391:
+		 * since multiple calls to destroy_mark is perfectly safe */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#526: FILE: fs/notify/dnotify/dnotify.c:395:
+		 * silently as the flush at close time dealt with it */

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#535: FILE: fs/notify/dnotify/dnotify.c:399:
+	error = __f_setown(filp, task_pid(current), PIDTYPE_PID, 0);
 	                   ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#549: FILE: fs/notify/dnotify/dnotify.c:403:
+	error = attach_dn(dn, dnentry, id, fd, filp, mask);
 	                                       ^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#554: FILE: fs/notify/dnotify/dnotify.c:408:
+	 * that isn't an error (and the unused dn should be freed) */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#596: FILE: fs/notify/dnotify/dnotify.c:438:
+	dnotify_inode_mark_cache = kmem_cache_create("dnotify_inode_mark",
+		sizeof(struct dnotify_mark_entry), 0, SLAB_PANIC, NULL);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000169441.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 23 warnings, 9 checks, 737 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000169441.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
