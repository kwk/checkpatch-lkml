WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
Hopefully correct handling of integer constant expressions.  Please, review.

CHECK:CAMELCASE: Avoid CamelCase: <Int_const_expr>
#120: FILE: evaluate.c:886:
+		if (!(expr->left->flags & expr->right->flags & Int_const_expr))

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LINE_SPACING: Missing a blank line after declarations
#156: FILE: evaluate.c:1078:
+		int flags = expr->conditional->flags & Int_const_expr;
+		flags &= (*true)->flags & expr->cond_false->flags;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#207: FILE: evaluate.c:2514:
+	/* if argument turns out to be not an integer constant expression *and*
+	   it was not a floating literal to start with -> too bad */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#207: FILE: evaluate.c:2514:
+	   it was not a floating literal to start with -> too bad */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#209: FILE: evaluate.c:2516:
+	else if (expr->flags == Int_const_expr &&
+		!(target->flags & Int_const_expr))

CHECK:CAMELCASE: Avoid CamelCase: <Float_literal>
#346: FILE: expression.c:386:
+	expr->flags = Float_literal;

ERROR:CODE_INDENT: code indent should use tabs where possible
#418: FILE: expression.c:667:
+^I^I    ^Istruct expression *unop;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#418: FILE: expression.c:667:
+^I^I    ^Istruct expression *unop;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#469: FILE: expression.c:756:
+	struct token * next = inner(__token, &left);			\

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#516: FILE: expression.c:921:
+	LR_BINOP_EXPRESSION_NONCONST(

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct expression *' should also have an identifier name
#544: FILE: expression.h:151:
+long long const_expression_value(struct expression *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000413058.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 6 warnings, 4 checks, 432 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000413058.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
