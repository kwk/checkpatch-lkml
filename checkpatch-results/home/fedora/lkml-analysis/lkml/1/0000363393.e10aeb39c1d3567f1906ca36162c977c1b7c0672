WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
master.kernel.org:/pub/scm/linux/kernel/git/cooloney/blackfin-2.6.git for-linus

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#113: FILE: arch/blackfin/Kconfig:298:
+config H8606_HVSISTEMAS
+        bool "HV Sistemas H8606"
+        depends on (BF532)
+        help
+          HV Sistemas H8606 board support.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#751: FILE: arch/blackfin/kernel/gptimers.c:23:
+		printk(KERN_DEBUG "%s:%s:%i: Assertion failed: " #expr "\n", __FILE__, __func__, __LINE__);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#751: FILE: arch/blackfin/kernel/gptimers.c:23:
+		printk(KERN_DEBUG "%s:%s:%i: Assertion failed: " #expr "\n", __FILE__, __func__, __LINE__);

WARNING:STATIC_CONST: Move const after static - use 'static const uint32_t'
#760: FILE: arch/blackfin/kernel/gptimers.c:72:
+static uint32_t const trun_mask[MAX_BLACKFIN_GPTIMERS] =

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#760: FILE: arch/blackfin/kernel/gptimers.c:72:
+static uint32_t const trun_mask[MAX_BLACKFIN_GPTIMERS] =

WARNING:STATIC_CONST: Move const after static - use 'static const uint32_t'
#769: FILE: arch/blackfin/kernel/gptimers.c:92:
+static uint32_t const tovf_mask[MAX_BLACKFIN_GPTIMERS] =

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#769: FILE: arch/blackfin/kernel/gptimers.c:92:
+static uint32_t const tovf_mask[MAX_BLACKFIN_GPTIMERS] =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#770: FILE: arch/blackfin/kernel/gptimers.c:93:
+static uint32_t const tovf_mask[MAX_BLACKFIN_GPTIMERS] =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:STATIC_CONST: Move const after static - use 'static const uint32_t'
#789: FILE: arch/blackfin/kernel/gptimers.c:112:
+static uint32_t const timil_mask[MAX_BLACKFIN_GPTIMERS] =

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#789: FILE: arch/blackfin/kernel/gptimers.c:112:
+static uint32_t const timil_mask[MAX_BLACKFIN_GPTIMERS] =

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#847: FILE: arch/blackfin/kernel/setup.c:322:
+		printk(KERN_INFO "Recovering from Double Fault event\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#849: FILE: arch/blackfin/kernel/setup.c:324:
+		printk(KERN_INFO "Recovering from Watchdog event\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#851: FILE: arch/blackfin/kernel/setup.c:326:
+		printk(KERN_NOTICE "Reset caused by Software reset\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#869: FILE: arch/blackfin/kernel/setup.c:434:
+	BUG_ON((char *)&safe_user_instruction - (char *)&fixed_code_start

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#888: FILE: arch/blackfin/kernel/traps.c:46:
+# define CHK_DEBUGGER_TRAP() \
+	do { \
+		CHK_DEBUGGER(trapnr, sig, info.si_code, fp, ); \
+	} while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

ERROR:SPACING: space prohibited before that close parenthesis ')'
#890: FILE: arch/blackfin/kernel/traps.c:48:
+		CHK_DEBUGGER(trapnr, sig, info.si_code, fp, ); \

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#926: FILE: arch/blackfin/kernel/traps.c:93:
+		sprintf(buf, "<0x%p> { %s%s%s%s + 0x%lx }",
 		              (void *)address, delim, modname, delim, symname,

WARNING:TYPO_SPELLING: 'dereferncing' may be misspelled - perhaps 'dereferencing'?
#1002: FILE: arch/blackfin/kernel/traps.c:188:
+	/* Important - be very careful dereferncing pointers - will lead to
 	                               ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1009: FILE: arch/blackfin/kernel/traps.c:195:
+	 * If KGDB is enabled, don't set this for kernel breakpoints
+	*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1024: FILE: arch/blackfin/kernel/traps.c:198:
 #ifdef CONFIG_KGDB
+		&& trapnr != VEC_EXCPT02

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!current->mm"
#1032: FILE: arch/blackfin/kernel/traps.c:204:
+		if (current->mm == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1045: FILE: arch/blackfin/kernel/traps.c:253:
+		printk(KERN_NOTICE EXC_0x03);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1054: FILE: arch/blackfin/kernel/traps.c:282:
+		printk(KERN_NOTICE EXC_0x11);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1063: FILE: arch/blackfin/kernel/traps.c:304:
+		printk(KERN_NOTICE EXC_0x21);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1071: FILE: arch/blackfin/kernel/traps.c:311:
+		printk(KERN_NOTICE EXC_0x22);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1080: FILE: arch/blackfin/kernel/traps.c:319:
+		printk(KERN_NOTICE EXC_0x23);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1088: FILE: arch/blackfin/kernel/traps.c:326:
+		printk(KERN_NOTICE EXC_0x24);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1096: FILE: arch/blackfin/kernel/traps.c:333:
+		printk(KERN_NOTICE EXC_0x25);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1105: FILE: arch/blackfin/kernel/traps.c:341:
+		printk(KERN_NOTICE EXC_0x26);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1115: FILE: arch/blackfin/kernel/traps.c:349:
+		printk(KERN_NOTICE "NULL pointer access (probably)\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1119: FILE: arch/blackfin/kernel/traps.c:352:
+		printk(KERN_NOTICE EXC_0x27);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1128: FILE: arch/blackfin/kernel/traps.c:372:
+		printk(KERN_NOTICE "BF535: VEC_ISTRU_VL\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1137: FILE: arch/blackfin/kernel/traps.c:382:
+		printk(KERN_NOTICE EXC_0x2A);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1146: FILE: arch/blackfin/kernel/traps.c:390:
+		printk(KERN_NOTICE EXC_0x2B);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1154: FILE: arch/blackfin/kernel/traps.c:397:
+		printk(KERN_NOTICE EXC_0x2C);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1163: FILE: arch/blackfin/kernel/traps.c:405:
+		printk(KERN_NOTICE "Jump to address 0 - 0x0fff\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1167: FILE: arch/blackfin/kernel/traps.c:408:
+		printk(KERN_NOTICE EXC_0x2D);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1176: FILE: arch/blackfin/kernel/traps.c:416:
+		printk(KERN_NOTICE EXC_0x2E);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1185: FILE: arch/blackfin/kernel/traps.c:445:
+	BUG_ON(sig == 0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1195: FILE: arch/blackfin/kernel/traps.c:454:
+			printk(KERN_NOTICE "No trace since you do not have "

WARNING:SPLIT_STRING: quoted string split across lines
#1196: FILE: arch/blackfin/kernel/traps.c:455:
+			printk(KERN_NOTICE "No trace since you do not have "
+				"CONFIG_DEBUG_BFIN_NO_KERN_HWTRACE enabled\n"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#1205: FILE: arch/blackfin/kernel/traps.c:463:
+			printk(KERN_EMERG "Hey - dork - please turn on "

WARNING:SPLIT_STRING: quoted string split across lines
#1206: FILE: arch/blackfin/kernel/traps.c:464:
+			printk(KERN_EMERG "Hey - dork - please turn on "
+				"CONFIG_ACCESS_CHECK\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1255: FILE: arch/blackfin/kernel/traps.c:498:
+	printk(KERN_NOTICE "Hardware Trace:\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1265: FILE: arch/blackfin/kernel/traps.c:503:
+			printk(KERN_NOTICE "%4i Target : %s\n", i, buf);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1267: FILE: arch/blackfin/kernel/traps.c:505:
+			printk(KERN_NOTICE "     Source : %s\n", buf);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1278: FILE: arch/blackfin/kernel/traps.c:518:
+		printk(KERN_NOTICE "%4i Target : %s\n", i, buf);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1285: FILE: arch/blackfin/kernel/traps.c:523:
+		printk(KERN_NOTICE "     Source : %s\n", buf);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1301: FILE: arch/blackfin/kernel/traps.c:541:
+	printk(KERN_NOTICE "\n" KERN_NOTICE "Call Trace:\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1310: FILE: arch/blackfin/kernel/traps.c:557:
+	printk(KERN_NOTICE "\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1319: FILE: arch/blackfin/kernel/traps.c:579:
+	printk(KERN_NOTICE "Stack from %08lx:", (unsigned long)stack);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1325: FILE: arch/blackfin/kernel/traps.c:584:
+			printk("\n" KERN_NOTICE "       ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1328: FILE: arch/blackfin/kernel/traps.c:587:
+	printk("\n");

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1341: FILE: arch/blackfin/kernel/traps.c:608:
+	char buf [150];

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1345: FILE: arch/blackfin/kernel/traps.c:612:
+			printk(KERN_NOTICE "\n" KERN_NOTICE "CURRENT PROCESS:\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1346: FILE: arch/blackfin/kernel/traps.c:613:
+			printk(KERN_NOTICE "COMM=%s PID=%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1347: FILE: arch/blackfin/kernel/traps.c:614:
+			printk(KERN_NOTICE "COMM=%s PID=%d\n",
+				current->comm, current->pid);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1349: FILE: arch/blackfin/kernel/traps.c:616:
+			printk(KERN_NOTICE "TEXT = 0x%p-0x%p  DATA = 0x%p-0x%p\n"

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1360: FILE: arch/blackfin/kernel/traps.c:627:
+			printk (KERN_NOTICE "\n" KERN_NOTICE

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1360: FILE: arch/blackfin/kernel/traps.c:627:
+			printk (KERN_NOTICE "\n" KERN_NOTICE

WARNING:SPLIT_STRING: quoted string split across lines
#1362: FILE: arch/blackfin/kernel/traps.c:629:
+			     "No Valid pid - Either things are really messed up,"
+			     " or you are in the kernel\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1382: FILE: arch/blackfin/kernel/traps.c:632:
+		printk(KERN_NOTICE "Kernel or interrupt exception\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1395: FILE: arch/blackfin/kernel/traps.c:645:
+		printk(KERN_NOTICE "return address: [0x%p]; contents of:", retaddr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1399: FILE: arch/blackfin/kernel/traps.c:648:
+				printk("\n" KERN_NOTICE "0x%08x: ", i);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1420: FILE: arch/blackfin/kernel/traps.c:671:
+		printk("\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1423: FILE: arch/blackfin/kernel/traps.c:673:
+		printk("\n" KERN_NOTICE

WARNING:SPLIT_STRING: quoted string split across lines
#1426: FILE: arch/blackfin/kernel/traps.c:675:
 			"Cannot look at the [PC] for it is"
+			" in unreadable memory - sorry\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1428: FILE: arch/blackfin/kernel/traps.c:677:
+	printk(KERN_NOTICE "\n" KERN_NOTICE "SEQUENCER STATUS:\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1429: FILE: arch/blackfin/kernel/traps.c:678:
+	printk(KERN_NOTICE " SEQSTAT: %08lx  IPEND: %04lx  SYSCFG: %04lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1430: FILE: arch/blackfin/kernel/traps.c:679:
+	printk(KERN_NOTICE " SEQSTAT: %08lx  IPEND: %04lx  SYSCFG: %04lx\n",
+		(long)fp->seqstat, fp->ipend, fp->syscfg);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1433: FILE: arch/blackfin/kernel/traps.c:682:
+	printk(KERN_NOTICE " RETE: %s\n", buf);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1435: FILE: arch/blackfin/kernel/traps.c:684:
+	printk(KERN_NOTICE " RETN: %s\n", buf);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1437: FILE: arch/blackfin/kernel/traps.c:686:
+	printk(KERN_NOTICE " RETX: %s\n", buf);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1439: FILE: arch/blackfin/kernel/traps.c:688:
+	printk(KERN_NOTICE " RETS: %s\n", buf);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1451: FILE: arch/blackfin/kernel/traps.c:692:
+		printk(KERN_NOTICE "DCPLB_FAULT_ADDR: %s\n", buf);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1453: FILE: arch/blackfin/kernel/traps.c:694:
+		printk(KERN_NOTICE "ICPLB_FAULT_ADDR: %s\n", buf);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1456: FILE: arch/blackfin/kernel/traps.c:697:
+	printk(KERN_NOTICE "\n" KERN_NOTICE "PROCESSOR STATE:\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1457: FILE: arch/blackfin/kernel/traps.c:698:
+	printk(KERN_NOTICE " R0 : %08lx    R1 : %08lx    R2 : %08lx    R3 : %08lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1458: FILE: arch/blackfin/kernel/traps.c:699:
+	printk(KERN_NOTICE " R0 : %08lx    R1 : %08lx    R2 : %08lx    R3 : %08lx\n",
 		fp->r0, fp->r1, fp->r2, fp->r3);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1460: FILE: arch/blackfin/kernel/traps.c:700:
+	printk(KERN_NOTICE " R4 : %08lx    R5 : %08lx    R6 : %08lx    R7 : %08lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1461: FILE: arch/blackfin/kernel/traps.c:701:
+	printk(KERN_NOTICE " R4 : %08lx    R5 : %08lx    R6 : %08lx    R7 : %08lx\n",
 		fp->r4, fp->r5, fp->r6, fp->r7);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1463: FILE: arch/blackfin/kernel/traps.c:702:
+	printk(KERN_NOTICE " P0 : %08lx    P1 : %08lx    P2 : %08lx    P3 : %08lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1464: FILE: arch/blackfin/kernel/traps.c:703:
+	printk(KERN_NOTICE " P0 : %08lx    P1 : %08lx    P2 : %08lx    P3 : %08lx\n",
 		fp->p0, fp->p1, fp->p2, fp->p3);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1473: FILE: arch/blackfin/kernel/traps.c:704:
+	printk(KERN_NOTICE " P4 : %08lx    P5 : %08lx    FP : %08lx    SP : %08lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1474: FILE: arch/blackfin/kernel/traps.c:705:
+	printk(KERN_NOTICE " P4 : %08lx    P5 : %08lx    FP : %08lx    SP : %08lx\n",
+		fp->p4, fp->p5, fp->fp, (long)fp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1475: FILE: arch/blackfin/kernel/traps.c:706:
+	printk(KERN_NOTICE " LB0: %08lx    LT0: %08lx    LC0: %08lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1476: FILE: arch/blackfin/kernel/traps.c:707:
+	printk(KERN_NOTICE " LB0: %08lx    LT0: %08lx    LC0: %08lx\n",
 		fp->lb0, fp->lt0, fp->lc0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1478: FILE: arch/blackfin/kernel/traps.c:708:
+	printk(KERN_NOTICE " LB1: %08lx    LT1: %08lx    LC1: %08lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1479: FILE: arch/blackfin/kernel/traps.c:709:
+	printk(KERN_NOTICE " LB1: %08lx    LT1: %08lx    LC1: %08lx\n",
 		fp->lb1, fp->lt1, fp->lc1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1481: FILE: arch/blackfin/kernel/traps.c:710:
+	printk(KERN_NOTICE " B0 : %08lx    L0 : %08lx    M0 : %08lx    I0 : %08lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1482: FILE: arch/blackfin/kernel/traps.c:711:
+	printk(KERN_NOTICE " B0 : %08lx    L0 : %08lx    M0 : %08lx    I0 : %08lx\n",
 		fp->b0, fp->l0, fp->m0, fp->i0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1484: FILE: arch/blackfin/kernel/traps.c:712:
+	printk(KERN_NOTICE " B1 : %08lx    L1 : %08lx    M1 : %08lx    I1 : %08lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1485: FILE: arch/blackfin/kernel/traps.c:713:
+	printk(KERN_NOTICE " B1 : %08lx    L1 : %08lx    M1 : %08lx    I1 : %08lx\n",
 		fp->b1, fp->l1, fp->m1, fp->i1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1487: FILE: arch/blackfin/kernel/traps.c:714:
+	printk(KERN_NOTICE " B2 : %08lx    L2 : %08lx    M2 : %08lx    I2 : %08lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1488: FILE: arch/blackfin/kernel/traps.c:715:
+	printk(KERN_NOTICE " B2 : %08lx    L2 : %08lx    M2 : %08lx    I2 : %08lx\n",
 		fp->b2, fp->l2, fp->m2, fp->i2);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1490: FILE: arch/blackfin/kernel/traps.c:716:
+	printk(KERN_NOTICE " B3 : %08lx    L3 : %08lx    M3 : %08lx    I3 : %08lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1491: FILE: arch/blackfin/kernel/traps.c:717:
+	printk(KERN_NOTICE " B3 : %08lx    L3 : %08lx    M3 : %08lx    I3 : %08lx\n",
 		fp->b3, fp->l3, fp->m3, fp->i3);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1492: FILE: arch/blackfin/kernel/traps.c:718:
+	printk(KERN_NOTICE "A0.w: %08lx   A0.x: %08lx   A1.w: %08lx   A1.x: %08lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1493: FILE: arch/blackfin/kernel/traps.c:719:
+	printk(KERN_NOTICE "A0.w: %08lx   A0.x: %08lx   A1.w: %08lx   A1.x: %08lx\n",
+		fp->a0w, fp->a0x, fp->a1w, fp->a1x);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1496: FILE: arch/blackfin/kernel/traps.c:721:
+	printk(KERN_NOTICE "USP : %08lx  ASTAT: %08lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1497: FILE: arch/blackfin/kernel/traps.c:722:
+	printk(KERN_NOTICE "USP : %08lx  ASTAT: %08lx\n",
 		rdusp(), fp->astat);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1506: FILE: arch/blackfin/kernel/traps.c:724:
+	printk(KERN_NOTICE "\n");

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#1623: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1628: FILE: arch/blackfin/mach-bf533/boards/H8606.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1656: FILE: arch/blackfin/mach-bf533/boards/H8606.c:29:
+ * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:STATIC_CONST_CHAR_ARRAY: const array should probably be static const
#1677: FILE: arch/blackfin/mach-bf533/boards/H8606.c:50:
+const char bfin_board_name[] = "HV Sistemas H8606";

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1687: FILE: arch/blackfin/mach-bf533/boards/H8606.c:60:
+/*
+*  Driver needs to know address, irq and flag pin.

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1688: FILE: arch/blackfin/mach-bf533/boards/H8606.c:61:
+*  Driver needs to know address, irq and flag pin.
+ */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1704: FILE: arch/blackfin/mach-bf533/boards/H8606.c:77:
+    .id^I^I^I= 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1705: FILE: arch/blackfin/mach-bf533/boards/H8606.c:78:
+    .name^I^I= "dm9000",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1706: FILE: arch/blackfin/mach-bf533/boards/H8606.c:79:
+    .resource^I^I= dm9000_resources,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1707: FILE: arch/blackfin/mach-bf533/boards/H8606.c:80:
+    .num_resources^I= ARRAY_SIZE(dm9000_resources),$

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#1762: FILE: arch/blackfin/mach-bf533/boards/H8606.c:135:
+#if defined(CONFIG_SPI_BFIN) || defined(CONFIG_SPI_BFIN_MODULE)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1824: FILE: arch/blackfin/mach-bf533/boards/H8606.c:197:
+ * SPI_BAUD, not the real baudrate */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1894: FILE: arch/blackfin/mach-bf533/boards/H8606.c:267:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#1918: FILE: arch/blackfin/mach-bf533/boards/H8606.c:291:
+#if defined(CONFIG_SERIAL_BFIN) || defined(CONFIG_SERIAL_BFIN_MODULE)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#1936: FILE: arch/blackfin/mach-bf533/boards/H8606.c:309:
+#if defined(CONFIG_RTC_DRV_BFIN) || defined(CONFIG_RTC_DRV_BFIN_MODULE)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#1952: FILE: arch/blackfin/mach-bf533/boards/H8606.c:325:
+#if defined(CONFIG_SPI_BFIN) || defined(CONFIG_SPI_BFIN_MODULE)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#1956: FILE: arch/blackfin/mach-bf533/boards/H8606.c:329:
+#if defined(CONFIG_SERIAL_BFIN) || defined(CONFIG_SERIAL_BFIN_MODULE)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1963: FILE: arch/blackfin/mach-bf533/boards/H8606.c:336:
+	printk(KERN_INFO "HV Sistemas H8606 board support by http://www.hvsistemas.com\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1964: FILE: arch/blackfin/mach-bf533/boards/H8606.c:337:
+	printk(KERN_INFO "%s(): registering device resources\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1964: FILE: arch/blackfin/mach-bf533/boards/H8606.c:337:
+	printk(KERN_INFO "%s(): registering device resources\n", __FUNCTION__);

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#1966: FILE: arch/blackfin/mach-bf533/boards/H8606.c:339:
+#if defined(CONFIG_SPI_BFIN) || defined(CONFIG_SPI_BFIN_MODULE)

WARNING:MISSING_EOF_NEWLINE: adding a line without newline at end of file
#1972: FILE: arch/blackfin/mach-bf533/boards/H8606.c:345:
+arch_initcall(H8606_init);

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#2016: FILE: arch/blackfin/mach-bf533/boards/cm_bf533.c:96:
+#if defined(CONFIG_SPI_MMC) || defined(CONFIG_SPI_MMC_MODULE)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#2055: FILE: arch/blackfin/mach-bf533/boards/cm_bf533.c:138:
+#if defined(CONFIG_SPI_MMC) || defined(CONFIG_SPI_MMC_MODULE)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2167: FILE: include/asm-blackfin/bfin-global.h:83:
+extern void safe_user_instruction(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2191: FILE: include/asm-blackfin/gptimers.h:200:
+uint16_t get_gptimer_over      (int timer_id);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2192: FILE: include/asm-blackfin/gptimers.h:201:
+void     clear_gptimer_over    (int timer_id);

CHECK:CAMELCASE: Avoid CamelCase: <HOST_CNTR_nHOST_EN>
#2225: FILE: include/asm-blackfin/mach-bf527/defBF52x_base.h:1722:
+#define                  HOST_CNTR_nHOST_EN  0x0

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:TYPO_SPELLING: 'Endianess' may be misspelled - perhaps 'Endianness'?
#2226: FILE: include/asm-blackfin/mach-bf527/defBF52x_base.h:1723:
+#define                  HOST_CNTR_HOST_END  0x2        /* Host Endianess */
                                                                 ^^^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <HOST_CNTR_nHOST_END>
#2227: FILE: include/asm-blackfin/mach-bf527/defBF52x_base.h:1724:
+#define                 HOST_CNTR_nHOST_END  0x0

CHECK:CAMELCASE: Avoid CamelCase: <HOST_CNTR_nDATA_SIZE>
#2229: FILE: include/asm-blackfin/mach-bf527/defBF52x_base.h:1726:
+#define                HOST_CNTR_nDATA_SIZE  0x0

CHECK:CAMELCASE: Avoid CamelCase: <HOST_CNTR_nHOST_RST>
#2231: FILE: include/asm-blackfin/mach-bf527/defBF52x_base.h:1728:
+#define                 HOST_CNTR_nHOST_RST  0x0

CHECK:CAMELCASE: Avoid CamelCase: <HOST_CNTR_nHRDY_OVR>
#2233: FILE: include/asm-blackfin/mach-bf527/defBF52x_base.h:1730:
+#define                 HOST_CNTR_nHRDY_OVR  0x0

CHECK:CAMELCASE: Avoid CamelCase: <HOST_CNTR_nINT_MODE>
#2235: FILE: include/asm-blackfin/mach-bf527/defBF52x_base.h:1732:
+#define                 HOST_CNTR_nINT_MODE  0x0

CHECK:CAMELCASE: Avoid CamelCase: <nBT_EN>
#2237: FILE: include/asm-blackfin/mach-bf527/defBF52x_base.h:1734:
+#define                   HOST_CNTR_ nBT_EN  0x0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2237: FILE: include/asm-blackfin/mach-bf527/defBF52x_base.h:1734:
+#define                   HOST_CNTR_ nBT_EN  0x0

CHECK:CAMELCASE: Avoid CamelCase: <HOST_CNTR_nEHW>
#2239: FILE: include/asm-blackfin/mach-bf527/defBF52x_base.h:1736:
+#define                      HOST_CNTR_nEHW  0x0

CHECK:CAMELCASE: Avoid CamelCase: <HOST_CNTR_nEHR>
#2241: FILE: include/asm-blackfin/mach-bf527/defBF52x_base.h:1738:
+#define                      HOST_CNTR_nEHR  0x0

CHECK:CAMELCASE: Avoid CamelCase: <HOST_CNTR_nBDR>
#2243: FILE: include/asm-blackfin/mach-bf527/defBF52x_base.h:1740:
+#define                      HOST_CNTR_nBDR  0x0

CHECK:CAMELCASE: Avoid CamelCase: <HOST_STAT_nREADY>
#2270: FILE: include/asm-blackfin/mach-bf527/defBF52x_base.h:1745:
+#define                    HOST_STAT_nREADY  0x0

CHECK:CAMELCASE: Avoid CamelCase: <HOST_STAT_nFIFOFULL>
#2272: FILE: include/asm-blackfin/mach-bf527/defBF52x_base.h:1747:
+#define                 HOST_STAT_nFIFOFULL  0x0

CHECK:CAMELCASE: Avoid CamelCase: <HOST_STAT_nFIFOEMPTY>
#2274: FILE: include/asm-blackfin/mach-bf527/defBF52x_base.h:1749:
+#define                HOST_STAT_nFIFOEMPTY  0x0

CHECK:CAMELCASE: Avoid CamelCase: <HOST_STAT_nCOMPLETE>
#2276: FILE: include/asm-blackfin/mach-bf527/defBF52x_base.h:1751:
+#define                 HOST_STAT_nCOMPLETE  0x0

CHECK:CAMELCASE: Avoid CamelCase: <HOST_STAT_nHSHK>
#2278: FILE: include/asm-blackfin/mach-bf527/defBF52x_base.h:1753:
+#define                     HOST_STAT_nHSHK  0x0

CHECK:CAMELCASE: Avoid CamelCase: <HOST_STAT_nTIMEOUT>
#2280: FILE: include/asm-blackfin/mach-bf527/defBF52x_base.h:1755:
+#define                  HOST_STAT_nTIMEOUT  0x0

CHECK:CAMELCASE: Avoid CamelCase: <HOST_STAT_nHIRQ>
#2282: FILE: include/asm-blackfin/mach-bf527/defBF52x_base.h:1757:
+#define                     HOST_STAT_nHIRQ  0x0

CHECK:CAMELCASE: Avoid CamelCase: <HOST_STAT_nALLOW_CNFG>
#2284: FILE: include/asm-blackfin/mach-bf527/defBF52x_base.h:1759:
+#define               HOST_STAT_nALLOW_CNFG  0x0

CHECK:CAMELCASE: Avoid CamelCase: <HOST_STAT_nDMA_DIR>
#2286: FILE: include/asm-blackfin/mach-bf527/defBF52x_base.h:1761:
+#define                  HOST_STAT_nDMA_DIR  0x0

CHECK:CAMELCASE: Avoid CamelCase: <HOST_STAT_nBTE>
#2288: FILE: include/asm-blackfin/mach-bf527/defBF52x_base.h:1763:
+#define                      HOST_STAT_nBTE  0x0

CHECK:CAMELCASE: Avoid CamelCase: <HOST_STAT_nHOSTRD_DONE>
#2290: FILE: include/asm-blackfin/mach-bf527/defBF52x_base.h:1765:
+#define              HOST_STAT_nHOSTRD_DONE  0x0

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2363: FILE: include/asm-blackfin/mach-bf548/portmux.h:270:
 
+

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2386: FILE: include/asm-blackfin/mach-bf561/defBF561.h:58:
+#define RESET_DOUBLE            (SWRST_DBL_FAULT_B|SWRST_DBL_FAULT_A)
                                                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2387: FILE: include/asm-blackfin/mach-bf561/defBF561.h:59:
+#define RESET_WDOG              (SWRST_WDT_B|SWRST_WDT_A)
                                             ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000363393.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 105 warnings, 46 checks, 2065 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000363393.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
