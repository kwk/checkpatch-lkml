WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
According to the HyperTransport spec, 'En' indicate if the MSI Mapping is active. So it should be set when enable the MSI.

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#67: FILE: drivers/pci/msi.c:307:
+	if ((pos = pci_find_ht_capability(dev, HT_CAPTYPE_MSI_MAPPING)) != 0)
+	{	

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#67: FILE: drivers/pci/msi.c:307:
+	if ((pos = pci_find_ht_capability(dev, HT_CAPTYPE_MSI_MAPPING)) != 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#68: FILE: drivers/pci/msi.c:308:
+^I{^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#71: FILE: drivers/pci/msi.c:311:
+		pci_write_config_byte(dev, pos + HT_MSI_FLAGS,
+						  flags | HT_MSI_FLAGS_ENABLE);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#73: FILE: drivers/pci/msi.c:313:
+		printk(KERN_INFO "PCI: %s: enabled HT MSI mapping\n", pci_name(dev));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#84: FILE: drivers/pci/msi.c:324:
+ * Search if device support ht MSI mapping capability on HT-base $

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#86: FILE: drivers/pci/msi.c:326:
+ * search the the upstream bridge for that capability, enable En bit find it, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#86: FILE: drivers/pci/msi.c:326:
+ * search the the upstream bridge for that capability, enable En bit find it, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#87: FILE: drivers/pci/msi.c:327:
+ * otherwise disable the MSI function if device and upstream bridge can't $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: drivers/pci/msi.c:334:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bridge_dev->vendor == PCI_VENDOR_ID_NVIDIA'
#99: FILE: drivers/pci/msi.c:339:
+		if (((bridge_dev = pci_find_slot(0, 0)) != NULL) &&
+				 (bridge_dev->vendor == PCI_VENDOR_ID_NVIDIA)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#99: FILE: drivers/pci/msi.c:339:
+		if (((bridge_dev = pci_find_slot(0, 0)) != NULL) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#100: FILE: drivers/pci/msi.c:340:
+		if (((bridge_dev = pci_find_slot(0, 0)) != NULL) &&
+				 (bridge_dev->vendor == PCI_VENDOR_ID_NVIDIA)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#116: FILE: drivers/pci/msi.c:356:
+				while ((bridge_dev = pci_get_device(PCI_VENDOR_ID_NVIDIA,
+					PCI_DEVICE_ID_NVIDIA_NFORCE_MCP55_MEMC, bridge_dev))

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: drivers/pci/msi.c:359:
+^I^I^I ^I}$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#119: FILE: drivers/pci/msi.c:359:
+^I^I^I ^I}$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#128: FILE: drivers/pci/msi.c:368:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#131: FILE: drivers/pci/msi.c:371:
+			return 0;
+		} else {

ERROR:SPACING: space required before the open parenthesis '('
#135: FILE: drivers/pci/msi.c:375:
+			while(bridge_dev != 0) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#136: FILE: drivers/pci/msi.c:376:
+				if (pci_enable_msi_ht_cap(bridge_dev) != 0) {
[...]
+				} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#138: FILE: drivers/pci/msi.c:378:
+					return 0;
+				} else

CHECK:BRACES: Unbalanced braces around else statement
#138: FILE: drivers/pci/msi.c:378:
+				} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#155: FILE: drivers/pci/msi.c:608:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#157: FILE: drivers/pci/msi.c:610:
+	if(status)

ERROR:SPACING: space required before the open parenthesis '('
#167: FILE: drivers/pci/msi.c:709:
+	if(status)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000354305.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 13 errors, 7 warnings, 6 checks, 127 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000354305.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
