CHECK:CAMELCASE: Avoid CamelCase: <ChipRev>
#73: FILE: drivers/net/yellowfin.c:492:
+		    ioread32(ioaddr + ChipRev), ioaddr,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#107: FILE: drivers/net/yellowfin.c:644:
+		netdev_printk(KERN_DEBUG, dev, "Done %s()\n", __func__);

CHECK:CAMELCASE: Avoid CamelCase: <IntrStatus>
#118: FILE: drivers/net/yellowfin.c:666:
+			      ioread16(ioaddr + IntrStatus));

CHECK:CAMELCASE: Avoid CamelCase: <TxStatus>
#144: FILE: drivers/net/yellowfin.c:698:
+		    ioread32(ioaddr + TxStatus),

CHECK:CAMELCASE: Avoid CamelCase: <RxStatus>
#145: FILE: drivers/net/yellowfin.c:699:
+		    ioread32(ioaddr + RxStatus));

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#157: FILE: drivers/net/yellowfin.c:706:
+			pr_cont(" %08x", yp->rx_ring[i].result_status);

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#158: FILE: drivers/net/yellowfin.c:707:
+		pr_cont("\n");

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#162: FILE: drivers/net/yellowfin.c:710:
+			pr_cont(" %04x /%08x",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#163: FILE: drivers/net/yellowfin.c:711:
+			pr_cont(" %04x /%08x",
 			       yp->tx_status[i].tx_errs,

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#166: FILE: drivers/net/yellowfin.c:713:
+		pr_cont("\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#271: FILE: drivers/net/yellowfin.c:1052:
+		printk(KERN_DEBUG " In yellowfin_rx(), entry %d status %08x\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'yellowfin_rx', this function's name, in a string
#271: FILE: drivers/net/yellowfin.c:1052:
+		printk(KERN_DEBUG " In yellowfin_rx(), entry %d status %08x\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#272: FILE: drivers/net/yellowfin.c:1053:
+		printk(KERN_DEBUG " In yellowfin_rx(), entry %d status %08x\n",
 			   entry, yp->rx_ring[entry].result_status);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#274: FILE: drivers/net/yellowfin.c:1054:
+		printk(KERN_DEBUG "   #%d desc. %08x %08x %08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: drivers/net/yellowfin.c:1055:
+		printk(KERN_DEBUG "   #%d desc. %08x %08x %08x\n",
 			   entry, yp->rx_ring[entry].dbdma_cmd, yp->rx_ring[entry].addr,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#284: FILE: drivers/net/yellowfin.c:1078:
+			printk(KERN_DEBUG "  %s() status was %04x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#300: FILE: drivers/net/yellowfin.c:1090:
+				printk(KERN_DEBUG "  %s() Rx error was %04x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#323: FILE: drivers/net/yellowfin.c:1126:
+				printk(KERN_DEBUG "  %s() normal Rx pkt length %d of %d, bogus_cnt %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#364: FILE: drivers/net/yellowfin.c:1224:
+		printk(KERN_DEBUG "  Tx ring at %08llx:\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#365: FILE: drivers/net/yellowfin.c:1225:
+		printk(KERN_DEBUG "  Tx ring at %08llx:\n",
 				(unsigned long long)yp->tx_ring_dma);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#368: FILE: drivers/net/yellowfin.c:1227:
+			printk(KERN_DEBUG " %c #%d desc. %08x %08x %08x %08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#369: FILE: drivers/net/yellowfin.c:1228:
+			printk(KERN_DEBUG " %c #%d desc. %08x %08x %08x %08x\n",
 				   ioread32(ioaddr + TxPtr) == (long)&yp->tx_ring[i] ? '>' : ' ',

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#375: FILE: drivers/net/yellowfin.c:1233:
+			printk(KERN_DEBUG "   #%d status %04x %04x %04x %04x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#376: FILE: drivers/net/yellowfin.c:1234:
+			printk(KERN_DEBUG "   #%d status %04x %04x %04x %04x\n",
 				   i, yp->tx_status[i].tx_cnt, yp->tx_status[i].tx_errs,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#380: FILE: drivers/net/yellowfin.c:1237:
+		printk(KERN_DEBUG "  Rx ring %08llx:\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#381: FILE: drivers/net/yellowfin.c:1238:
+		printk(KERN_DEBUG "  Rx ring %08llx:\n",
 				(unsigned long long)yp->rx_ring_dma);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#384: FILE: drivers/net/yellowfin.c:1240:
+			printk(KERN_DEBUG " %c #%d desc. %08x %08x %08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#385: FILE: drivers/net/yellowfin.c:1241:
+			printk(KERN_DEBUG " %c #%d desc. %08x %08x %08x\n",
 				   ioread32(ioaddr + RxPtr) == (long)&yp->rx_ring[i] ? '>' : ' ',

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#392: FILE: drivers/net/yellowfin.c:1248:
+					printk(KERN_DEBUG);

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#397: FILE: drivers/net/yellowfin.c:1250:
+						pr_cont(" %04x",

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#398: FILE: drivers/net/yellowfin.c:1251:
+							get_unaligned(((u16*)yp->rx_ring[i].addr) + j));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#398: FILE: drivers/net/yellowfin.c:1251:
+							get_unaligned(((u16*)yp->rx_ring[i].addr) + j));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#399: FILE: drivers/net/yellowfin.c:1252:
+					pr_cont("\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000010489.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 20 warnings, 12 checks, 351 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000010489.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
