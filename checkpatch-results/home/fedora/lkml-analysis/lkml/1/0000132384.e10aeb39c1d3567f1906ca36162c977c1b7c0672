CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#71: FILE: arch/x86/include/asm/msr.h:235:
 }
+static inline int rdmsr_on_cpus(const cpumask_t *m, u32 msr_no, u32 *l, u32 *h)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#75: FILE: arch/x86/include/asm/msr.h:239:
+}
+static inline int wrmsr_on_cpus(const cpumask_t *m, u32 msr_no, u32 *l, u32 *h)

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#96: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#204: FILE: arch/x86/lib/msr.c:1:
+#include <linux/module.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: arch/x86/lib/msr.c:71:
+		tmp = rdmsr_on_cpu(cpu, msr_no, l + (cpu - off),
+						h + (cpu - off));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#300: FILE: arch/x86/lib/msr.c:97:
+		tmp = wrmsr_on_cpu(cpu, msr_no, *(l + (cpu - off)),
+						*(h + (cpu - off)));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#308: FILE: arch/x86/lib/msr.c:105:
+/* These "safe" variants are slower and should be used when the target MSR
+   may not actually exist. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#308: FILE: arch/x86/lib/msr.c:105:
+   may not actually exist. */

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#349: FILE: arch/x86/lib/msr.c:146:
+EXPORT_SYMBOL(rdmsr_on_cpu);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#350: FILE: arch/x86/lib/msr.c:147:
+EXPORT_SYMBOL(wrmsr_on_cpu);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#351: FILE: arch/x86/lib/msr.c:148:
+EXPORT_SYMBOL(rdmsr_on_cpus);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#352: FILE: arch/x86/lib/msr.c:149:
+EXPORT_SYMBOL(wrmsr_on_cpus);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#353: FILE: arch/x86/lib/msr.c:150:
+EXPORT_SYMBOL(rdmsr_safe_on_cpu);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#354: FILE: arch/x86/lib/msr.c:151:
+EXPORT_SYMBOL(wrmsr_safe_on_cpu);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000132384.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 10 warnings, 4 checks, 188 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000132384.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
