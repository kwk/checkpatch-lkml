CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#54: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:918:
+	retval = kobject_init_and_add_mutable(per_cpu(ici_cache_kobject, cpu),
 				      &ktype_percpu_entry,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#108: FILE: drivers/base/sys.c:254:
+		error = kobject_init_and_add_mutable(&sysdev->kobj, &ktype_sysdev,
+				     NULL, "%s%d", kobject_name(&cls->kset.kobj),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#112: FILE: drivers/base/sys.c:258:
+		error = kobject_init_and_add(&sysdev->kobj, &ktype_sysdev, NULL,
 				     "%s%d", kobject_name(&cls->kset.kobj),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#169: FILE: drivers/cpufreq/cpufreq.c:2010:
+	cpufreq_global_kobject = kobject_create_and_add_mutable("cpufreq",
 						&cpu_sysdev_class.kset.kobj);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#248: FILE: fs/sysfs/dir.c:651:
+int sysfs_create_subdir_mutable(struct kobject *kobj, const char *name,
+			struct sysfs_dirent **p_sd)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#325: FILE: fs/sysfs/group.c:107:
+int sysfs_create_group_mutable(struct kobject *kobj,
+		       const struct attribute_group *grp)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#423: FILE: include/linux/kobject.h:80:
+extern void kobject_set_mutable(struct kobject *kobj);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#431: FILE: include/linux/kobject.h:88:
+extern void kobject_init_mutable(struct kobject *kobj, struct kobj_type *ktype);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#439: FILE: include/linux/kobject.h:96:
+extern int __must_check kobject_init_and_add_mutable(struct kobject *kobj,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#449: FILE: include/linux/kobject.h:106:
+extern struct kobject * __must_check kobject_create_and_add_mutable(const char *name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#450: FILE: include/linux/kobject.h:107:
+extern struct kobject * __must_check kobject_create_and_add_mutable(const char *name,
+						struct kobject *parent);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#462: FILE: include/linux/sysdev.h:97:
+extern int sysdev_register_mutable(struct sys_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sys_device *' should also have an identifier name
#462: FILE: include/linux/sysdev.h:97:
+extern int sysdev_register_mutable(struct sys_device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#530: FILE: lib/kobject.c:411:
+int kobject_init_and_add_mutable(struct kobject *kobj, struct kobj_type *ktype,
+			 struct kobject *parent, const char *fmt, ...)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#545: FILE: lib/kobject.c:426:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#554: FILE: lib/kobject.c:706:
+struct kobject *kobject_create_and_add_mutable(const char *name,
+						struct kobject *parent)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#566: FILE: lib/kobject.c:718:
+		printk(KERN_WARNING "%s: kobject_add error: %d\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#575: FILE: lib/kobject.c:727:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000013528.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 16 checks, 435 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000013528.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
