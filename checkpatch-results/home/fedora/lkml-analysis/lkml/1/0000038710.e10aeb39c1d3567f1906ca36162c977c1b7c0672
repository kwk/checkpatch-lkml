ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#89: FILE: arch/alpha/include/asm/spinlock.h:20:
+static inline void arch_spin_unlock(arch_spinlock_t * lock)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#96: FILE: arch/alpha/include/asm/spinlock.h:26:
+static inline void arch_spin_lock(arch_spinlock_t * lock)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#224: FILE: arch/blackfin/include/asm/spinlock.h:95:
+#define arch_spin_relax(lock)  ^Icpu_relax()$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#404: FILE: arch/ia64/include/asm/spinlock.h:115:
 }
+#define arch_spin_is_contended	arch_spin_is_contended

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#426: FILE: arch/ia64/include/asm/spinlock.h:133:
+static __always_inline void arch_spin_lock_flags(arch_spinlock_t *lock,
 						  unsigned long flags)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#461: FILE: arch/m32r/include/asm/spinlock.h:27:
+#define arch_spin_is_locked(x)		(*(volatile int *)(&(x)->slock) <= 0)

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#485: FILE: arch/m32r/include/asm/spinlock.h:53:
+		"# arch_spin_trylock		\n\t"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#503: FILE: arch/m32r/include/asm/spinlock.h:87:
+		"# arch_spin_lock		\n\t"

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#549: FILE: arch/mips/include/asm/spinlock.h:46:
+	while (arch_spin_is_locked(x)) { cpu_relax(); }

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#549: FILE: arch/mips/include/asm/spinlock.h:46:
+	while (arch_spin_is_locked(x)) { cpu_relax(); }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#559: FILE: arch/mips/include/asm/spinlock.h:54:
 }
+#define arch_spin_is_contended	arch_spin_is_contended

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#570: FILE: arch/mips/include/asm/spinlock.h:63:
+		"	.set push		# arch_spin_lock	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#579: FILE: arch/mips/include/asm/spinlock.h:97:
+		"	.set push		# arch_spin_lock	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#597: FILE: arch/mips/include/asm/spinlock.h:145:
+		"				# arch_spin_unlock	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#606: FILE: arch/mips/include/asm/spinlock.h:156:
+		"	.set push		# arch_spin_unlock	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#622: FILE: arch/mips/include/asm/spinlock.h:183:
+		"	.set push		# arch_spin_trylock	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#631: FILE: arch/mips/include/asm/spinlock.h:207:
+		"	.set push		# arch_spin_trylock	\n"

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#690: FILE: arch/parisc/include/asm/spinlock.h:19:
+static inline void arch_spin_lock_flags(arch_spinlock_t *x,
 					 unsigned long flags)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#887: FILE: arch/powerpc/include/asm/spinlock.h:152:
+extern void arch_spin_unlock_wait(arch_spinlock_t *lock);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#971: FILE: arch/powerpc/lib/locks.c:95:
+EXPORT_SYMBOL(arch_spin_unlock_wait);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lock' - possible side-effects?
#1021: FILE: arch/s390/include/asm/spinlock.h:56:
+#define arch_spin_unlock_wait(lock) \
+	do { while (arch_spin_is_locked(lock)) \
+		 arch_spin_relax(lock); } while (0)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1025: FILE: arch/s390/include/asm/spinlock.h:60:
+extern void arch_spin_lock_wait(arch_spinlock_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'arch_spinlock_t *' should also have an identifier name
#1025: FILE: arch/s390/include/asm/spinlock.h:60:
+extern void arch_spin_lock_wait(arch_spinlock_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1026: FILE: arch/s390/include/asm/spinlock.h:61:
+extern void arch_spin_lock_wait_flags(arch_spinlock_t *, unsigned long flags);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'arch_spinlock_t *' should also have an identifier name
#1026: FILE: arch/s390/include/asm/spinlock.h:61:
+extern void arch_spin_lock_wait_flags(arch_spinlock_t *, unsigned long flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1027: FILE: arch/s390/include/asm/spinlock.h:62:
+extern int arch_spin_trylock_retry(arch_spinlock_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'arch_spinlock_t *' should also have an identifier name
#1027: FILE: arch/s390/include/asm/spinlock.h:62:
+extern int arch_spin_trylock_retry(arch_spinlock_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1028: FILE: arch/s390/include/asm/spinlock.h:63:
+extern void arch_spin_relax(arch_spinlock_t *lock);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1044: FILE: arch/s390/include/asm/spinlock.h:76:
+static inline void arch_spin_lock_flags(arch_spinlock_t *lp,
 					 unsigned long flags)

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1192: FILE: arch/sh/include/asm/spinlock.h:44:
+		"movli.l	@%2, %0	! arch_spin_lock	\n\t"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1207: FILE: arch/sh/include/asm/spinlock.h:62:
+		"mov		#1, %0 ! arch_spin_unlock	\n\t"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1223: FILE: arch/sh/include/asm/spinlock.h:76:
+		"movli.l	@%2, %0	! arch_spin_trylock	\n\t"

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1248: FILE: arch/sparc/include/asm/spinlock_32.h:13:
+#define arch_spin_is_locked(lock) (*((volatile unsigned char *)(lock)) != 0)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1377: FILE: arch/x86/include/asm/paravirt.h:743:
 }
+#define arch_spin_is_contended	arch_spin_is_contended

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1387: FILE: arch/x86/include/asm/paravirt.h:751:
+static __always_inline void arch_spin_lock_flags(struct arch_spinlock *lock,
 						  unsigned long flags)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1423: FILE: arch/x86/include/asm/spinlock.h:186:
 }
+#define arch_spin_is_contended	arch_spin_is_contended

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1445: FILE: arch/x86/include/asm/spinlock.h:204:
+static __always_inline void arch_spin_lock_flags(arch_spinlock_t *lock,
 						  unsigned long flags)

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#1593: FILE: include/linux/spinlock.h:106:
+#define spin_is_locked(lock)	arch_spin_is_locked(&(lock)->raw_lock)

lockdep_assert_held() annotations should be preferred over
assertions based on spin_is_locked()

See: https://www.kernel.org/doc/html/latest/locking/lockdep-design.html#annotations

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1685: FILE: include/linux/spinlock_up.h:62:
+# define arch_spin_lock(lock)		do { (void)(lock); } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1686: FILE: include/linux/spinlock_up.h:63:
+# define arch_spin_lock_flags(lock, flags)	do { (void)(lock); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1687: FILE: include/linux/spinlock_up.h:64:
+# define arch_spin_unlock(lock)	do { (void)(lock); } while (0)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000038710.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 23 warnings, 15 checks, 1836 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000038710.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
