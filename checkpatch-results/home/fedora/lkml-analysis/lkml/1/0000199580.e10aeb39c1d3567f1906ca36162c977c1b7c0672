WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#47: FILE: arch/x86/perfmon/perfmon_intel_arch.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#67: FILE: arch/x86/perfmon/perfmon_intel_arch.c:21:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#68: FILE: arch/x86/perfmon/perfmon_intel_arch.c:22:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#89: FILE: arch/x86/perfmon/perfmon_intel_arch.c:43:
+#define PFM_IA_PMC_RSVD	((~((1ULL<<32)-1)) \
                        	         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#89: FILE: arch/x86/perfmon/perfmon_intel_arch.c:43:
+#define PFM_IA_PMC_RSVD	((~((1ULL<<32)-1)) \
                        	              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#90: FILE: arch/x86/perfmon/perfmon_intel_arch.c:44:
+			| (1ULL<<20) \
 			       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#91: FILE: arch/x86/perfmon/perfmon_intel_arch.c:45:
+			| (1ULL<<21))
 			       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#97: FILE: arch/x86/perfmon/perfmon_intel_arch.c:51:
+#define PFM_IA_PMC_VAL	(1ULL<<20)
                       	     ^

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#97: FILE: arch/x86/perfmon/perfmon_intel_arch.c:51:
+#define PFM_IA_PMC_VAL	(1ULL<<20)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#98: FILE: arch/x86/perfmon/perfmon_intel_arch.c:52:
+#define PFM_IA_NO64	(1ULL<<20)
                    	     ^

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#98: FILE: arch/x86/perfmon/perfmon_intel_arch.c:52:
+#define PFM_IA_NO64	(1ULL<<20)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#115: FILE: arch/x86/perfmon/perfmon_intel_arch.c:69:
+^Iunsigned int num_cnt:8; ^I/* number of generic counters */$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#153: FILE: arch/x86/perfmon/perfmon_intel_arch.c:107:
+	.hw_addr = MSR_GEN_SEL_BASE+(n) \
 	                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#156: FILE: arch/x86/perfmon/perfmon_intel_arch.c:110:
+#define PFM_IA_D(n) \
+	{ .type = PFM_REG_C,			\
+	  .desc = "PMC"#n,			\
+	  .hw_addr = MSR_P6_PERFCTR0+n,		\
+	  .dep_pmcs[0] = 1ULL << n		\
+	}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#156: FILE: arch/x86/perfmon/perfmon_intel_arch.c:110:
+#define PFM_IA_D(n) \
+	{ .type = PFM_REG_C,			\
+	  .desc = "PMC"#n,			\
+	  .hw_addr = MSR_P6_PERFCTR0+n,		\
+	  .dep_pmcs[0] = 1ULL << n		\
+	}

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#159: FILE: arch/x86/perfmon/perfmon_intel_arch.c:113:
+	  .hw_addr = MSR_P6_PERFCTR0+n,		\
 	                            ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#163: FILE: arch/x86/perfmon/perfmon_intel_arch.c:117:
+#define PFM_IA_FD(n) \
+	{ .type = PFM_REG_C,			\
+	  .desc = "FIXED_CTR"#n,		\
+	  .hw_addr = MSR_CORE_PERF_FIXED_CTR0+n,\
+	  .dep_pmcs[0] = 1ULL << 16		\
+	}

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#166: FILE: arch/x86/perfmon/perfmon_intel_arch.c:120:
+	  .hw_addr = MSR_CORE_PERF_FIXED_CTR0+n,\
 	                                     ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#170: FILE: arch/x86/perfmon/perfmon_intel_arch.c:124:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#185: FILE: arch/x86/perfmon/perfmon_intel_arch.c:139:
+};
+#define PFM_IA_MAX_PMCS	ARRAY_SIZE(pfm_intel_arch_pmc_desc)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#198: FILE: arch/x86/perfmon/perfmon_intel_arch.c:152:
+};
+#define PFM_IA_MAX_PMDS	ARRAY_SIZE(pfm_intel_arch_pmd_desc)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#221: FILE: arch/x86/perfmon/perfmon_intel_arch.c:175:
+	if ((i+1) > max_enable)
 	      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxW)
#222: FILE: arch/x86/perfmon/perfmon_intel_arch.c:176:
+		max_enable = i+ 1;
 		              ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#245: FILE: arch/x86/perfmon/perfmon_intel_arch.c:199:
+		printk(KERN_INFO "perfmon: Limiting number of generic counters"

WARNING:SPLIT_STRING: quoted string split across lines
#246: FILE: arch/x86/perfmon/perfmon_intel_arch.c:200:
+		printk(KERN_INFO "perfmon: Limiting number of generic counters"
+				 " to %u, HW supports %u",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#255: FILE: arch/x86/perfmon/perfmon_intel_arch.c:209:
+	rsvd = ~((1ULL << width)-1);
 	                        ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#269: FILE: arch/x86/perfmon/perfmon_intel_arch.c:223:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#295: FILE: arch/x86/perfmon/perfmon_intel_arch.c:249:
+		printk(KERN_INFO "perfmon: Limiting number of fixed counters"

WARNING:SPLIT_STRING: quoted string split across lines
#296: FILE: arch/x86/perfmon/perfmon_intel_arch.c:250:
+		printk(KERN_INFO "perfmon: Limiting number of fixed counters"
+				 " to %u, HW supports %u",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#303: FILE: arch/x86/perfmon/perfmon_intel_arch.c:257:
+	rsvd = ~((1ULL << width)-1);
 	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#305: FILE: arch/x86/perfmon/perfmon_intel_arch.c:259:
+		pfm_intel_arch_pmd_desc[PFM_IA_FCNT_BASE+i].rsvd_msk = rsvd;
 		                                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#317: FILE: arch/x86/perfmon/perfmon_intel_arch.c:271:
+		pfm_intel_arch_pmc_desc[16].rsvd_msk |= rsvd << (i<<2);
 		                                                  ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#323: FILE: arch/x86/perfmon/perfmon_intel_arch.c:277:
+^I * ^I- rsvd_msk: set all 4 bits$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#330: FILE: arch/x86/perfmon/perfmon_intel_arch.c:284:
+		pfm_intel_arch_pmd_desc[PFM_IA_FCNT_BASE+i].type = PFM_REG_NA;
 		                                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#331: FILE: arch/x86/perfmon/perfmon_intel_arch.c:285:
+		rsvd |= 0xfULL << (i<<2);
 		                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#332: FILE: arch/x86/perfmon/perfmon_intel_arch.c:286:
+		dfl &= ~(0xfULL << (i<<2));
 		                     ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#377: FILE: arch/x86/perfmon/perfmon_intel_arch.c:331:
+	if (eax.eax.version == 0
+	    && current_cpu_data.x86 == 6 && current_cpu_data.x86_model == 15) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#407: FILE: arch/x86/perfmon/perfmon_intel_arch.c:361:
+ ^I/*$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#407: FILE: arch/x86/perfmon/perfmon_intel_arch.c:361:
+ ^I/*$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: arch/x86/perfmon/perfmon_intel_arch.c:361:
+ ^I/*$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#412: FILE: arch/x86/perfmon/perfmon_intel_arch.c:366:
+	if (eax.eax.version == 3 && edx.edx.num_cnt < 3
+	    && current_cpu_data.x86 == 6 && current_cpu_data.x86_model == 28) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#419: FILE: arch/x86/perfmon/perfmon_intel_arch.c:373:
+	PFM_INFO("num_gen=%d width=%d num_fixed=%d width=%d",
+		  eax.eax.num_cnt,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#445: FILE: arch/x86/perfmon/perfmon_intel_arch.c:399:
+ * ^I0 : no overflow$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#446: FILE: arch/x86/perfmon/perfmon_intel_arch.c:400:
+ * ^I1 : at least one overflow$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#561: FILE: arch/x86/perfmon/perfmon_intel_arch.c:515:
+				wrmsrl(MSR_P6_EVNTSEL0+i, 0);
 				                      ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#565: FILE: arch/x86/perfmon/perfmon_intel_arch.c:519:
+}
+/**

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#566: FILE: arch/x86/perfmon/perfmon_intel_arch.c:520:
+/**
+* pfm_intel_arch_release_pmu_percpu - release PMU resource per CPU

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#595: FILE: arch/x86/perfmon/perfmon_intel_arch.c:549:
+	for (i=0; i < 16; i++) {
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#600: FILE: arch/x86/perfmon/perfmon_intel_arch.c:554:
+	for (i=16; i < PFM_IA_MAX_PMDS; i++) {
 	      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#603: FILE: arch/x86/perfmon/perfmon_intel_arch.c:557:
+		mask |= 1ull << (32+i-16);
 		                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#603: FILE: arch/x86/perfmon/perfmon_intel_arch.c:557:
+		mask |= 1ull << (32+i-16);
 		                     ^

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#623: FILE: arch/x86/perfmon/perfmon_intel_arch.c:577:
+/**
+* pfm_intel_arch_release_pmu_percpu - release PMU resource per CPU

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#669: FILE: arch/x86/perfmon/perfmon_intel_arch.c:623:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#683: FILE: arch/x86/perfmon/Kconfig:18:
+config  X86_PERFMON_INTEL_ARCH
+	bool "Support for Intel architectural perfmon v1/v2/v3"
+	depends on PERFMON
+	default n
+	help
+	Enables support for Intel architectural performance counters.
+	This feature was introduced with Intel Core Solo/Core Duo processors.

Kconfig symbols should have a help text which fully describes
it.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000199580.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 15 warnings, 34 checks, 643 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000199580.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
