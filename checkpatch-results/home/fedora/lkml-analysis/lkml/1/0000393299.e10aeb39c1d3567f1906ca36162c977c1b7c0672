WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
The attached patch makes it possible for the NFS filesystem to make use of the

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#46: 
Signed-Off-By: David Howells <dhowells@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#121: FILE: fs/nfs/file.c:61:
+struct vm_operations_struct nfs_fs_vm_operations = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#205: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#210: FILE: fs/nfs/fscache-def.c:1:
+/* NFS FS-Cache index structure definition

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#250: FILE: fs/nfs/fscache-def.c:41:
+	uint16_t nfsversion;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#251: FILE: fs/nfs/fscache-def.c:42:
+	uint16_t port;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#254: FILE: fs/nfs/fscache-def.c:45:
+			uint8_t		ipv6wrapper[12];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#270: FILE: fs/nfs/fscache-def.c:61:
+static const uint8_t nfs_cache_ipv6_wrapper_for_ipv4[12] = {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#283: FILE: fs/nfs/fscache-def.c:74:
+	uint16_t len = 0;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#311: FILE: fs/nfs/fscache-def.c:102:
+		printk(KERN_WARNING "NFS: Unknown network family '%d'\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#312: FILE: fs/nfs/fscache-def.c:103:
+		printk(KERN_WARNING "NFS: Unknown network family '%d'\n",
+			clp->cl_addr.sin_family);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#324: FILE: fs/nfs/fscache-def.c:115:
+^I.type ^I^I= FSCACHE_COOKIE_TYPE_INDEX,$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#335: FILE: fs/nfs/fscache-def.c:126:
+	uint16_t nsize;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'nfs_fh_now_uncached', this function's name, in a string
#381: FILE: fs/nfs/fscache-def.c:172:
+	dprintk("NFS: nfs_fh_now_uncached: nfs_inode 0x%p\n", nfsi);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#504: FILE: fs/nfs/fscache.c:1:
+/* NFS filesystem cache interface

ERROR:SPACING: space required after that ',' (ctx:VxV)
#549: FILE: fs/nfs/fscache.c:46:
+	dfprintk(FSCACHE,"NFS: get client cookie (0x%p/0x%p)\n",
 	                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#587: FILE: fs/nfs/fscache.c:84:
+		nfsi->fscache = fscache_acquire_cookie(

ERROR:SPACING: space required after that ',' (ctx:VxV)
#618: FILE: fs/nfs/fscache.c:115:
+	dfprintk(FSCACHE,"NFS: zapping cookie (0x%p/0x%p)\n",
 	                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#619: FILE: fs/nfs/fscache.c:116:
+	dfprintk(FSCACHE,"NFS: zapping cookie (0x%p/0x%p)\n",
+		nfsi, nfsi->fscache);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#653: FILE: fs/nfs/fscache.c:150:
+void nfs_fscache_set_fh_cookie(struct inode *inode, struct file *filp)
                                                                  ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#677: FILE: fs/nfs/fscache.c:174:
+		nfsi->fscache = fscache_acquire_cookie(

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#709: FILE: fs/nfs/fscache.c:206:
+	 * the VM reissue the readpage */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#791: FILE: fs/nfs/fscache.c:288:
+				 unsigned *nr_pages)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#804: FILE: fs/nfs/fscache.c:301:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#807: FILE: fs/nfs/fscache.c:304:
+		BUG_ON(!list_empty(pages));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#808: FILE: fs/nfs/fscache.c:305:
+		BUG_ON(*nr_pages != 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#845: FILE: fs/nfs/fscache.c:342:
+		BUG_ON(!nfsi->fscache);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#865: FILE: fs/nfs/fscache.c:362:
+	BUG_ON(!nfsi->fscache);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#872: FILE: fs/nfs/fscache.c:369:
+	BUG_ON(!PageLocked(page));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#884: FILE: fs/nfs/fscache.h:1:
+/* NFS filesystem cache interface definitions

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#912: FILE: fs/nfs/fscache.h:29:
+extern int nfs_fscache_register(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#913: FILE: fs/nfs/fscache.h:30:
+extern void nfs_fscache_unregister(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#924: FILE: fs/nfs/fscache.h:41:
+extern void nfs_fscache_get_client_cookie(struct nfs_client *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfs_client *' should also have an identifier name
#924: FILE: fs/nfs/fscache.h:41:
+extern void nfs_fscache_get_client_cookie(struct nfs_client *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#925: FILE: fs/nfs/fscache.h:42:
+extern void nfs_fscache_release_client_cookie(struct nfs_client *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfs_client *' should also have an identifier name
#925: FILE: fs/nfs/fscache.h:42:
+extern void nfs_fscache_release_client_cookie(struct nfs_client *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#926: FILE: fs/nfs/fscache.h:43:
+extern void nfs_fscache_init_fh_cookie(struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#926: FILE: fs/nfs/fscache.h:43:
+extern void nfs_fscache_init_fh_cookie(struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#927: FILE: fs/nfs/fscache.h:44:
+extern void nfs_fscache_enable_fh_cookie(struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#927: FILE: fs/nfs/fscache.h:44:
+extern void nfs_fscache_enable_fh_cookie(struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#928: FILE: fs/nfs/fscache.h:45:
+extern void nfs_fscache_release_fh_cookie(struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#928: FILE: fs/nfs/fscache.h:45:
+extern void nfs_fscache_release_fh_cookie(struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#929: FILE: fs/nfs/fscache.h:46:
+extern void nfs_fscache_zap_fh_cookie(struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#929: FILE: fs/nfs/fscache.h:46:
+extern void nfs_fscache_zap_fh_cookie(struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#930: FILE: fs/nfs/fscache.h:47:
+extern void nfs_fscache_disable_fh_cookie(struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#930: FILE: fs/nfs/fscache.h:47:
+extern void nfs_fscache_disable_fh_cookie(struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#931: FILE: fs/nfs/fscache.h:48:
+extern void nfs_fscache_set_fh_cookie(struct inode *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#931: FILE: fs/nfs/fscache.h:48:
+extern void nfs_fscache_set_fh_cookie(struct inode *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#931: FILE: fs/nfs/fscache.h:48:
+extern void nfs_fscache_set_fh_cookie(struct inode *, struct file *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#932: FILE: fs/nfs/fscache.h:49:
+extern void nfs_fscache_renew_fh_cookie(struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#932: FILE: fs/nfs/fscache.h:49:
+extern void nfs_fscache_renew_fh_cookie(struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#933: FILE: fs/nfs/fscache.h:50:
+extern void nfs_fscache_attr_changed(struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#933: FILE: fs/nfs/fscache.h:50:
+extern void nfs_fscache_attr_changed(struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#934: FILE: fs/nfs/fscache.h:51:
+extern void __nfs_readpage_to_fscache(struct inode *, struct page *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#934: FILE: fs/nfs/fscache.h:51:
+extern void __nfs_readpage_to_fscache(struct inode *, struct page *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#934: FILE: fs/nfs/fscache.h:51:
+extern void __nfs_readpage_to_fscache(struct inode *, struct page *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#934: FILE: fs/nfs/fscache.h:51:
+extern void __nfs_readpage_to_fscache(struct inode *, struct page *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#935: FILE: fs/nfs/fscache.h:52:
+extern int __nfs_readpage_from_fscache(struct nfs_open_context *, struct inode *, struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfs_open_context *' should also have an identifier name
#935: FILE: fs/nfs/fscache.h:52:
+extern int __nfs_readpage_from_fscache(struct nfs_open_context *, struct inode *, struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#935: FILE: fs/nfs/fscache.h:52:
+extern int __nfs_readpage_from_fscache(struct nfs_open_context *, struct inode *, struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#935: FILE: fs/nfs/fscache.h:52:
+extern int __nfs_readpage_from_fscache(struct nfs_open_context *, struct inode *, struct page *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#936: FILE: fs/nfs/fscache.h:53:
+extern int __nfs_readpages_from_fscache(struct nfs_open_context *, struct inode *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfs_open_context *' should also have an identifier name
#936: FILE: fs/nfs/fscache.h:53:
+extern int __nfs_readpages_from_fscache(struct nfs_open_context *, struct inode *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#936: FILE: fs/nfs/fscache.h:53:
+extern int __nfs_readpages_from_fscache(struct nfs_open_context *, struct inode *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct address_space *' should also have an identifier name
#936: FILE: fs/nfs/fscache.h:53:
+extern int __nfs_readpages_from_fscache(struct nfs_open_context *, struct inode *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct list_head *' should also have an identifier name
#936: FILE: fs/nfs/fscache.h:53:
+extern int __nfs_readpages_from_fscache(struct nfs_open_context *, struct inode *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned *' should also have an identifier name
#936: FILE: fs/nfs/fscache.h:53:
+extern int __nfs_readpages_from_fscache(struct nfs_open_context *, struct inode *,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#937: FILE: fs/nfs/fscache.h:54:
+					struct address_space *, struct list_head *, unsigned *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#938: FILE: fs/nfs/fscache.h:55:
+extern void __nfs_fscache_invalidate_page(struct page *, struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#938: FILE: fs/nfs/fscache.h:55:
+extern void __nfs_fscache_invalidate_page(struct page *, struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#938: FILE: fs/nfs/fscache.h:55:
+extern void __nfs_fscache_invalidate_page(struct page *, struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#939: FILE: fs/nfs/fscache.h:56:
+extern int nfs_fscache_release_page(struct page *, gfp_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#939: FILE: fs/nfs/fscache.h:56:
+extern int nfs_fscache_release_page(struct page *, gfp_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gfp_t' should also have an identifier name
#939: FILE: fs/nfs/fscache.h:56:
+extern int nfs_fscache_release_page(struct page *, gfp_t);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#982: FILE: fs/nfs/fscache.h:99:
+					     unsigned *nr_pages)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1004: FILE: fs/nfs/fscache.h:121:
+static inline void nfs_fscache_set_fh_cookie(struct inode *inode, struct file *filp) {}
                                                                                ^^^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1010: FILE: fs/nfs/fscache.h:127:
+}
+static inline void nfs_fscache_invalidate_page(struct page *page, struct inode *inode) {}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1017: FILE: fs/nfs/fscache.h:134:
+}
+static inline int nfs_readpages_from_fscache(struct nfs_open_context *ctx,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#1021: FILE: fs/nfs/fscache.h:138:
+					     unsigned *nr_pages)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1061: FILE: fs/nfs/inode.c:572:
+	nfs_fscache_set_fh_cookie(inode, filp);
 	                                 ^^^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1130: FILE: fs/nfs/inode.c:1024:
+			invalid |= NFS_INO_INVALID_ATTR|NFS_INO_INVALID_DATA |
 			                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1140: FILE: fs/nfs/inode.c:1037:
+		invalid |= NFS_INO_INVALID_ATTR|NFS_INO_INVALID_DATA |
 		                               ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1368: FILE: include/linux/nfs_fs.h:472:
+extern int  nfs_readpage_async(struct nfs_open_context *, struct inode *, struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfs_open_context *' should also have an identifier name
#1368: FILE: include/linux/nfs_fs.h:472:
+extern int  nfs_readpage_async(struct nfs_open_context *, struct inode *, struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1368: FILE: include/linux/nfs_fs.h:472:
+extern int  nfs_readpage_async(struct nfs_open_context *, struct inode *, struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#1368: FILE: include/linux/nfs_fs.h:472:
+extern int  nfs_readpage_async(struct nfs_open_context *, struct inode *, struct page *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000393299.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 52 warnings, 33 checks, 1260 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000393299.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
