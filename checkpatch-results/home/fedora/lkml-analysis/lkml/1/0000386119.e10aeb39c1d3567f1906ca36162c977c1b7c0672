WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#35: 
Signed-Off-By: Jan Beulich <jbeulich@novell.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: 'Acked-by:' is the preferred signature form
#36: 
Acked-By: Andi Kleen <ak@suse.de>

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#71: FILE: arch/i386/kernel/cpu/common.c:673:
+	unsigned i;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#101: FILE: arch/i386/kernel/cpu/common.c:730:
+		}
+		else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#107: FILE: arch/i386/kernel/cpu/common.c:736:
+		exception_tss[cpu][i].esp = exception_tss[cpu][i].esp0 = stack;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#110: FILE: arch/i386/kernel/cpu/common.c:739:
+			unsigned j;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#114: FILE: arch/i386/kernel/cpu/common.c:743:
+				/* set_page_refs sets the page count only for the first
+				   page, but since we split the larger-order page here,

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#116: FILE: arch/i386/kernel/cpu/common.c:745:
+				   pieces. */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#117: FILE: arch/i386/kernel/cpu/common.c:746:
+				struct page * page = virt_to_page((void *)stack);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#119: FILE: arch/i386/kernel/cpu/common.c:748:
+				BUG_ON(page_count(page));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#150: FILE: arch/i386/kernel/doublefault.c:14:
+#define ptr_ok(x, l) ((x) >= PAGE_OFFSET \
+                      && (x) + (l) <= PAGE_OFFSET + max_low_pfn * PAGE_SIZE - 1)

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: arch/i386/kernel/doublefault.c:15:
+                      && (x) + (l) <= PAGE_OFFSET + max_low_pfn * PAGE_SIZE - 1)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#151: FILE: arch/i386/kernel/doublefault.c:15:
+#define ptr_ok(x, l) ((x) >= PAGE_OFFSET \
+                      && (x) + (l) <= PAGE_OFFSET + max_low_pfn * PAGE_SIZE - 1)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: arch/i386/kernel/doublefault.c:15:
+                      && (x) + (l) <= PAGE_OFFSET + max_low_pfn * PAGE_SIZE - 1)$

CHECK:CAMELCASE: Avoid CamelCase: <Xgt_desc_struct>
#162: FILE: arch/i386/kernel/doublefault.c:23:
+	struct Xgt_desc_struct gdt_desc;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#169: FILE: arch/i386/kernel/doublefault.c:29:
+	printk(KERN_EMERG "PANIC: double fault, gdt at %08lx [%d bytes]\n", gdt, gdt_desc.size + 1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#202: FILE: arch/i386/kernel/doublefault.c:57:
+			printk(KERN_EMERG "esi = %08lx, edi = %08lx, ebp = %08lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: arch/i386/kernel/doublefault.c:58:
+			printk(KERN_EMERG "esi = %08lx, edi = %08lx, ebp = %08lx\n",
+				t->esi, t->edi, t->ebp);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#263: FILE: arch/i386/kernel/traps.c:71:
+void doublefault_fn(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#266: FILE: arch/i386/kernel/traps.c:74:
+	[0 ... NR_CPUS-1] = {
 	              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#267: FILE: arch/i386/kernel/traps.c:75:
+		[0 ... N_EXCEPTION_TSS-1] = {
 		                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#308: FILE: arch/i386/kernel/traps.c:1206:
+	set_task_gate(8,GDT_ENTRY_EXCEPTION_TSS + DOUBLEFAULT_TSS);
 	               ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000386119.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 11 warnings, 7 checks, 306 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000386119.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
