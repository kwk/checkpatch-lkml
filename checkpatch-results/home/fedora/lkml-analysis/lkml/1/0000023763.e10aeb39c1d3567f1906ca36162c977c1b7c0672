ERROR:POINTER_LOCATION: "foo __read_mostly	bar" should be "foo __read_mostly bar"
#79: FILE: kernel/trace/trace.c:103:
+cpumask_var_t __read_mostly	tracing_buffer_mask;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "trace_find_next_entry_inc"
#149: FILE: kernel/trace/trace.c:3069:
+	while (trace_find_next_entry_inc(iter) != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "trace_find_next_entry_inc"
#223: FILE: kernel/trace/trace.c:4337:
+		if (trace_find_next_entry_inc(&iter) != NULL) {

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#279: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#284: FILE: kernel/trace/trace_kdb.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#325: FILE: kernel/trace/trace_kdb.c:42:
+	memset(&iter.seq, 0,
+		   sizeof(struct trace_iterator) -

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "trace_find_next_entry_inc"
#341: FILE: kernel/trace/trace_kdb.c:58:
+		if (trace_find_next_entry_inc(&iter) != NULL && !skip_lines)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#380: FILE: kernel/trace/trace_kdb.c:97:
+		skip_lines = simple_strtol(argv[1], &cp, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000023763.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 3 warnings, 4 checks, 315 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000023763.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
