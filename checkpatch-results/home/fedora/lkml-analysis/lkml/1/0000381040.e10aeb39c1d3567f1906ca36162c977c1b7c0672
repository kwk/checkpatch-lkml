WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
I know that there has been a patch for the Winchiphead CH340/41 USB to serial 

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#119: FILE: drivers/usb/serial/ch341.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'extenions' may be misspelled - perhaps 'extension'?
#123: FILE: drivers/usb/serial/ch341.c:5:
+ * for changes/extenions regarding universal baud rate capability and modem
                ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#124: FILE: drivers/usb/serial/ch341.c:6:
+ * line control/status routines. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#150: FILE: drivers/usb/serial/ch341.c:32:
+#define CH341_BIT_RTS (1 << 6)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#151: FILE: drivers/usb/serial/ch341.c:33:
+#define CH341_BIT_DTR (1 << 5)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#165: FILE: drivers/usb/serial/ch341.c:47:
+/* status returned in third interrupt answer byte, inverted in data from irq $

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#166: FILE: drivers/usb/serial/ch341.c:47:
*/

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#167: FILE: drivers/usb/serial/ch341.c:48:
+/* status returned in third interrupt answer byte, inverted in data from irq 
+#define CH341_BIT_CTS 0x01

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#181: FILE: drivers/usb/serial/ch341.c:62:
+static struct usb_device_id id_table [] = {

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: drivers/usb/serial/ch341.c:63:
+       { USB_DEVICE(0x4348, 0x5523) },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: drivers/usb/serial/ch341.c:64:
+       { },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: drivers/usb/serial/ch341.c:69:
+    spinlock_t lock; /* access lock */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#189: FILE: drivers/usb/serial/ch341.c:70:
+    wait_queue_head_t delta_msr_wait; /* wait queue for modem status */    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: drivers/usb/serial/ch341.c:70:
+    wait_queue_head_t delta_msr_wait; /* wait queue for modem status */    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: drivers/usb/serial/ch341.c:71:
+    unsigned baud_rate; /* set baud rate */$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#190: FILE: drivers/usb/serial/ch341.c:71:
+    unsigned baud_rate; /* set baud rate */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: drivers/usb/serial/ch341.c:72:
+    u8 line_control; /* set line control value RTS/DTR */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: drivers/usb/serial/ch341.c:73:
+    u8 line_status; /* active status of modem control inputs */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: drivers/usb/serial/ch341.c:74:
+    u8 multi_status_change; /* status changed multiple since last call */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: drivers/usb/serial/ch341.c:78:
+                            u16 value, u16 index)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#197: FILE: drivers/usb/serial/ch341.c:78:
+static int ch341_control_out(struct usb_device *dev, u8 request,
+                            u16 value, u16 index)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: drivers/usb/serial/ch341.c:78:
+                            u16 value, u16 index)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: drivers/usb/serial/ch341.c:80:
+       int r;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#200: FILE: drivers/usb/serial/ch341.c:81:
+       int r;
+       dbg("ch341_control_out(%02x,%02x,%04x,%04x)", USB_DIR_OUT|0x40,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: drivers/usb/serial/ch341.c:81:
+       dbg("ch341_control_out(%02x,%02x,%04x,%04x)", USB_DIR_OUT|0x40,$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#200: FILE: drivers/usb/serial/ch341.c:81:
+       dbg("ch341_control_out(%02x,%02x,%04x,%04x)", USB_DIR_OUT|0x40,
                                                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ch341_control_out', this function's name, in a string
#200: FILE: drivers/usb/serial/ch341.c:81:
+       dbg("ch341_control_out(%02x,%02x,%04x,%04x)", USB_DIR_OUT|0x40,

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: drivers/usb/serial/ch341.c:82:
+               (int)request, (int)value, (int)index);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#201: FILE: drivers/usb/serial/ch341.c:82:
+       dbg("ch341_control_out(%02x,%02x,%04x,%04x)", USB_DIR_OUT|0x40,
+               (int)request, (int)value, (int)index);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: drivers/usb/serial/ch341.c:82:
+               (int)request, (int)value, (int)index);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: drivers/usb/serial/ch341.c:84:
+       r = usb_control_msg(dev, usb_sndctrlpipe(dev, 0), request,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: drivers/usb/serial/ch341.c:85:
+                           USB_TYPE_VENDOR | USB_RECIP_DEVICE | USB_DIR_OUT,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: drivers/usb/serial/ch341.c:85:
+                           USB_TYPE_VENDOR | USB_RECIP_DEVICE | USB_DIR_OUT,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: drivers/usb/serial/ch341.c:86:
+                           value, index, NULL, 0, DEFAULT_TIMEOUT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: drivers/usb/serial/ch341.c:86:
+                           value, index, NULL, 0, DEFAULT_TIMEOUT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: drivers/usb/serial/ch341.c:88:
+       return r;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: drivers/usb/serial/ch341.c:92:
+                           u8 request, u16 value, u16 index,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: drivers/usb/serial/ch341.c:92:
+static int ch341_control_in(struct usb_device *dev,
+                           u8 request, u16 value, u16 index,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: drivers/usb/serial/ch341.c:92:
+                           u8 request, u16 value, u16 index,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: drivers/usb/serial/ch341.c:93:
+                           char *buf, unsigned bufsize)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: drivers/usb/serial/ch341.c:93:
+                           char *buf, unsigned bufsize)$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#212: FILE: drivers/usb/serial/ch341.c:93:
+                           char *buf, unsigned bufsize)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: drivers/usb/serial/ch341.c:95:
+       int r;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#215: FILE: drivers/usb/serial/ch341.c:96:
+       int r;
+       dbg("ch341_control_in(%02x,%02x,%04x,%04x,%p,%u)", USB_DIR_IN|0x40,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: drivers/usb/serial/ch341.c:96:
+       dbg("ch341_control_in(%02x,%02x,%04x,%04x,%p,%u)", USB_DIR_IN|0x40,$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#215: FILE: drivers/usb/serial/ch341.c:96:
+       dbg("ch341_control_in(%02x,%02x,%04x,%04x,%p,%u)", USB_DIR_IN|0x40,
                                                                     ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ch341_control_in', this function's name, in a string
#215: FILE: drivers/usb/serial/ch341.c:96:
+       dbg("ch341_control_in(%02x,%02x,%04x,%04x,%p,%u)", USB_DIR_IN|0x40,

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: drivers/usb/serial/ch341.c:97:
+               (int)request, (int)value, (int)index, buf, (int)bufsize);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#216: FILE: drivers/usb/serial/ch341.c:97:
+       dbg("ch341_control_in(%02x,%02x,%04x,%04x,%p,%u)", USB_DIR_IN|0x40,
+               (int)request, (int)value, (int)index, buf, (int)bufsize);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: drivers/usb/serial/ch341.c:97:
+               (int)request, (int)value, (int)index, buf, (int)bufsize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: drivers/usb/serial/ch341.c:99:
+       r = usb_control_msg(dev, usb_rcvctrlpipe(dev, 0), request,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: drivers/usb/serial/ch341.c:100:
+                           USB_TYPE_VENDOR | USB_RECIP_DEVICE | USB_DIR_IN,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: drivers/usb/serial/ch341.c:100:
+                           USB_TYPE_VENDOR | USB_RECIP_DEVICE | USB_DIR_IN,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: drivers/usb/serial/ch341.c:101:
+                           value, index, buf, bufsize, DEFAULT_TIMEOUT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: drivers/usb/serial/ch341.c:101:
+                           value, index, buf, bufsize, DEFAULT_TIMEOUT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: drivers/usb/serial/ch341.c:102:
+       return r;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: drivers/usb/serial/ch341.c:107:
+       short a, b;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: drivers/usb/serial/ch341.c:108:
+       int r;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: drivers/usb/serial/ch341.c:109:
+       unsigned long factor;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: drivers/usb/serial/ch341.c:110:
+       short divisor;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: drivers/usb/serial/ch341.c:112:
+       dbg("ch341_set_baudrate(%d)", priv->baud_rate);$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ch341_set_baudrate', this function's name, in a string
#231: FILE: drivers/usb/serial/ch341.c:112:
+       dbg("ch341_set_baudrate(%d)", priv->baud_rate);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: drivers/usb/serial/ch341.c:114:
+       if (!priv->baud_rate)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#233: FILE: drivers/usb/serial/ch341.c:114:
+       if (!priv->baud_rate)
+	   return -EINVAL;

WARNING:TABSTOP: Statements should start on a tabstop
#234: FILE: drivers/usb/serial/ch341.c:115:
+	   return -EINVAL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#235: FILE: drivers/usb/serial/ch341.c:116:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: drivers/usb/serial/ch341.c:116:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: drivers/usb/serial/ch341.c:117:
+       factor = (CH341_BAUDBASE_FACTOR / priv->baud_rate);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: drivers/usb/serial/ch341.c:118:
+       divisor = CH341_BAUDBASE_DIVMAX;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: drivers/usb/serial/ch341.c:120:
+       while ((factor > 0xfff0) && divisor) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#239: FILE: drivers/usb/serial/ch341.c:120:
+       while ((factor > 0xfff0) && divisor) {
+	   factor >>= 3;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: drivers/usb/serial/ch341.c:123:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: drivers/usb/serial/ch341.c:125:
+       if (factor > 0xfff0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#244: FILE: drivers/usb/serial/ch341.c:125:
+       if (factor > 0xfff0)
+	   return -EINVAL;

WARNING:TABSTOP: Statements should start on a tabstop
#245: FILE: drivers/usb/serial/ch341.c:126:
+	   return -EINVAL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: drivers/usb/serial/ch341.c:128:
+       factor = 0x10000 - factor;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: drivers/usb/serial/ch341.c:129:
+       a = (factor & 0xff00) | divisor;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: drivers/usb/serial/ch341.c:130:
+       b = factor & 0xff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: drivers/usb/serial/ch341.c:132:
+       r = ch341_control_out(dev, 0x9a, 0x1312, a);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: drivers/usb/serial/ch341.c:133:
+       if (!r)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#252: FILE: drivers/usb/serial/ch341.c:133:
+       if (!r)
+               r = ch341_control_out(dev, 0x9a, 0x0f2c, b);

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: drivers/usb/serial/ch341.c:134:
+               r = ch341_control_out(dev, 0x9a, 0x0f2c, b);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: drivers/usb/serial/ch341.c:134:
+               r = ch341_control_out(dev, 0x9a, 0x0f2c, b);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: drivers/usb/serial/ch341.c:136:
+       return r;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: drivers/usb/serial/ch341.c:141:
+       dbg("ch341_set_handshake(0x%02x)", control);$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ch341_set_handshake', this function's name, in a string
#260: FILE: drivers/usb/serial/ch341.c:141:
+       dbg("ch341_set_handshake(0x%02x)", control);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: drivers/usb/serial/ch341.c:142:
+       return ch341_control_out(dev, 0xa4, ~control, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: drivers/usb/serial/ch341.c:147:
+       char *buffer;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: drivers/usb/serial/ch341.c:148:
+       int r;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: drivers/usb/serial/ch341.c:149:
+       const unsigned size = 8;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#268: FILE: drivers/usb/serial/ch341.c:149:
+       const unsigned size = 8;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: drivers/usb/serial/ch341.c:150:
+       unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: drivers/usb/serial/ch341.c:152:
+       dbg("ch341_get_status()");$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ch341_get_status', this function's name, in a string
#271: FILE: drivers/usb/serial/ch341.c:152:
+       dbg("ch341_get_status()");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: drivers/usb/serial/ch341.c:154:
+       buffer = kmalloc(size, GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: drivers/usb/serial/ch341.c:155:
+       if (!buffer)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#274: FILE: drivers/usb/serial/ch341.c:155:
+       if (!buffer)
+               return -ENOMEM;

ERROR:CODE_INDENT: code indent should use tabs where possible
#275: FILE: drivers/usb/serial/ch341.c:156:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: drivers/usb/serial/ch341.c:156:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: drivers/usb/serial/ch341.c:158:
+       r = ch341_control_in(dev, 0x95, 0x0706, 0, buffer, size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: drivers/usb/serial/ch341.c:159:
+       if ( r < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#278: FILE: drivers/usb/serial/ch341.c:159:
+       if ( r < 0)
+               goto out;

ERROR:SPACING: space prohibited after that open parenthesis '('
#278: FILE: drivers/usb/serial/ch341.c:159:
+       if ( r < 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#279: FILE: drivers/usb/serial/ch341.c:160:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: drivers/usb/serial/ch341.c:160:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: drivers/usb/serial/ch341.c:163:
+       if (r == 2) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#282: FILE: drivers/usb/serial/ch341.c:163:
+       if (r == 2) {
+	   r = 0;

CHECK:BRACES: braces {} should be used on all arms of this statement
#282: FILE: drivers/usb/serial/ch341.c:163:
+       if (r == 2) {
[...]
+       } else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: drivers/usb/serial/ch341.c:169:
+       } else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#288: FILE: drivers/usb/serial/ch341.c:169:
+       } else
+	   r = -EPROTO;	     

CHECK:BRACES: Unbalanced braces around else statement
#288: FILE: drivers/usb/serial/ch341.c:169:
+       } else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#289: FILE: drivers/usb/serial/ch341.c:170:
+^I   r = -EPROTO;^I     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: drivers/usb/serial/ch341.c:173:
+       return r;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#295: FILE: drivers/usb/serial/ch341.c:176:
+/* -------------------------------------------------------------------------- $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#297: FILE: drivers/usb/serial/ch341.c:177:
+/* -------------------------------------------------------------------------- 
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#308: FILE: drivers/usb/serial/ch341.c:188:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: drivers/usb/serial/ch341.c:191:
+       r = ch341_control_in(dev, 0x5f, 0, 0, buffer, size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: drivers/usb/serial/ch341.c:192:
+       if (r < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#312: FILE: drivers/usb/serial/ch341.c:192:
+       if (r < 0)
+               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#313: FILE: drivers/usb/serial/ch341.c:193:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: drivers/usb/serial/ch341.c:193:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: drivers/usb/serial/ch341.c:195:
+       r = ch341_control_out(dev, 0xa1, 0, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: drivers/usb/serial/ch341.c:196:
+       if (r < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#316: FILE: drivers/usb/serial/ch341.c:196:
+       if (r < 0)
+               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#317: FILE: drivers/usb/serial/ch341.c:197:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: drivers/usb/serial/ch341.c:197:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: drivers/usb/serial/ch341.c:199:
+       r = ch341_set_baudrate(dev, priv);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: drivers/usb/serial/ch341.c:200:
+       if (r < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#320: FILE: drivers/usb/serial/ch341.c:200:
+       if (r < 0)
+               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#321: FILE: drivers/usb/serial/ch341.c:201:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: drivers/usb/serial/ch341.c:201:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: drivers/usb/serial/ch341.c:204:
+       r = ch341_control_in(dev, 0x95, 0x2518, 0, buffer, size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: drivers/usb/serial/ch341.c:205:
+       if (r < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#325: FILE: drivers/usb/serial/ch341.c:205:
+       if (r < 0)
+               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#326: FILE: drivers/usb/serial/ch341.c:206:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: drivers/usb/serial/ch341.c:206:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: drivers/usb/serial/ch341.c:208:
+       r = ch341_control_out(dev, 0x9a, 0x2518, 0x0050);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: drivers/usb/serial/ch341.c:209:
+       if (r < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#329: FILE: drivers/usb/serial/ch341.c:209:
+       if (r < 0)
+               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#330: FILE: drivers/usb/serial/ch341.c:210:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: drivers/usb/serial/ch341.c:210:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: drivers/usb/serial/ch341.c:213:
+       r = ch341_get_status(dev, priv);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: drivers/usb/serial/ch341.c:214:
+       if (r < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#334: FILE: drivers/usb/serial/ch341.c:214:
+       if (r < 0)
+               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#335: FILE: drivers/usb/serial/ch341.c:215:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: drivers/usb/serial/ch341.c:215:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: drivers/usb/serial/ch341.c:217:
+       r = ch341_control_out(dev, 0xa1, 0x501f, 0xd90a);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: drivers/usb/serial/ch341.c:218:
+       if (r < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#338: FILE: drivers/usb/serial/ch341.c:218:
+       if (r < 0)
+               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#339: FILE: drivers/usb/serial/ch341.c:219:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: drivers/usb/serial/ch341.c:219:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: drivers/usb/serial/ch341.c:221:
+       r = ch341_set_baudrate(dev, priv);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: drivers/usb/serial/ch341.c:222:
+       if (r < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#342: FILE: drivers/usb/serial/ch341.c:222:
+       if (r < 0)
+               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#343: FILE: drivers/usb/serial/ch341.c:223:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: drivers/usb/serial/ch341.c:223:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: drivers/usb/serial/ch341.c:225:
+       r = ch341_set_handshake(dev, priv->line_control);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: drivers/usb/serial/ch341.c:226:
+       if (r < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#346: FILE: drivers/usb/serial/ch341.c:226:
+       if (r < 0)
+               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: drivers/usb/serial/ch341.c:227:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: drivers/usb/serial/ch341.c:227:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: drivers/usb/serial/ch341.c:230:
+       r = ch341_get_status(dev, priv);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: drivers/usb/serial/ch341.c:233:
+       return r;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: drivers/usb/serial/ch341.c:239:
+       struct ch341_private *priv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: drivers/usb/serial/ch341.c:240:
+       int r;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: drivers/usb/serial/ch341.c:242:
+       dbg("ch341_attach()");$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ch341_attach', this function's name, in a string
#362: FILE: drivers/usb/serial/ch341.c:242:
+       dbg("ch341_attach()");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: drivers/usb/serial/ch341.c:245:
+       priv = kzalloc(sizeof(struct ch341_private), GFP_KERNEL);$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*priv)...) over kzalloc(sizeof(struct ch341_private)...)
#365: FILE: drivers/usb/serial/ch341.c:245:
+       priv = kzalloc(sizeof(struct ch341_private), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: drivers/usb/serial/ch341.c:246:
+       if (!priv)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#366: FILE: drivers/usb/serial/ch341.c:246:
+       if (!priv)
+               return -ENOMEM;

ERROR:CODE_INDENT: code indent should use tabs where possible
#367: FILE: drivers/usb/serial/ch341.c:247:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: drivers/usb/serial/ch341.c:247:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: drivers/usb/serial/ch341.c:249:
+       spin_lock_init(&priv->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: drivers/usb/serial/ch341.c:250:
+       init_waitqueue_head(&priv->delta_msr_wait);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: drivers/usb/serial/ch341.c:251:
+       priv->baud_rate = DEFAULT_BAUD_RATE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: drivers/usb/serial/ch341.c:252:
+       priv->line_control = CH341_BIT_RTS | CH341_BIT_DTR;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: drivers/usb/serial/ch341.c:254:
+       r = ch341_configure(serial->dev, priv);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: drivers/usb/serial/ch341.c:255:
+       if (r < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#375: FILE: drivers/usb/serial/ch341.c:255:
+       if (r < 0)
+               goto error;

ERROR:CODE_INDENT: code indent should use tabs where possible
#376: FILE: drivers/usb/serial/ch341.c:256:
+               goto error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: drivers/usb/serial/ch341.c:256:
+               goto error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: drivers/usb/serial/ch341.c:258:
+       usb_set_serial_port_data(serial->port[0], priv);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: drivers/usb/serial/ch341.c:259:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: drivers/usb/serial/ch341.c:262:
+       return r;$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#385: FILE: drivers/usb/serial/ch341.c:265:
+static void ch341_close(struct usb_serial_port *port, struct file *filp)
                                                                    ^^^^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#391: FILE: drivers/usb/serial/ch341.c:271:
+	dbg("%s - port %d", __FUNCTION__, port->number);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#394: FILE: drivers/usb/serial/ch341.c:274:
+	dbg("%s - shutting down urbs", __FUNCTION__);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#413: FILE: drivers/usb/serial/ch341.c:293:
+static int ch341_open(struct usb_serial_port *port, struct file *filp)
                                                                  ^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#415: FILE: drivers/usb/serial/ch341.c:295:
+       struct usb_serial *serial = port->serial;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#416: FILE: drivers/usb/serial/ch341.c:296:
+       struct ch341_private *priv = $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: drivers/usb/serial/ch341.c:296:
+       struct ch341_private *priv = $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: drivers/usb/serial/ch341.c:297:
+       int r;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#420: FILE: drivers/usb/serial/ch341.c:299:
+       dbg("ch341_open()");$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ch341_open', this function's name, in a string
#420: FILE: drivers/usb/serial/ch341.c:299:
+       dbg("ch341_open()");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: drivers/usb/serial/ch341.c:301:
+       priv->baud_rate = DEFAULT_BAUD_RATE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: drivers/usb/serial/ch341.c:302:
+       priv->line_control = CH341_BIT_RTS | CH341_BIT_DTR;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: drivers/usb/serial/ch341.c:304:
+       r = ch341_configure(serial->dev, priv);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: drivers/usb/serial/ch341.c:305:
+       if (r)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#426: FILE: drivers/usb/serial/ch341.c:305:
+       if (r)
+               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#427: FILE: drivers/usb/serial/ch341.c:306:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#427: FILE: drivers/usb/serial/ch341.c:306:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#429: FILE: drivers/usb/serial/ch341.c:308:
+       r = ch341_set_handshake(serial->dev, priv->line_control);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#430: FILE: drivers/usb/serial/ch341.c:309:
+       if (r)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#430: FILE: drivers/usb/serial/ch341.c:309:
+       if (r)
+               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#431: FILE: drivers/usb/serial/ch341.c:310:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#431: FILE: drivers/usb/serial/ch341.c:310:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: drivers/usb/serial/ch341.c:312:
+       r = ch341_set_baudrate(serial->dev, priv);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: drivers/usb/serial/ch341.c:313:
+       if (r)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#434: FILE: drivers/usb/serial/ch341.c:313:
+       if (r)
+               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#435: FILE: drivers/usb/serial/ch341.c:314:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: drivers/usb/serial/ch341.c:314:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#437: FILE: drivers/usb/serial/ch341.c:316:
+       dbg("%s - submitting interrupt urb", __FUNCTION__);$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#437: FILE: drivers/usb/serial/ch341.c:316:
+       dbg("%s - submitting interrupt urb", __FUNCTION__);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: drivers/usb/serial/ch341.c:317:
+       port->interrupt_in_urb->dev = serial->dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#439: FILE: drivers/usb/serial/ch341.c:318:
+       r = usb_submit_urb(port->interrupt_in_urb, GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#440: FILE: drivers/usb/serial/ch341.c:319:
+       if (r) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#440: FILE: drivers/usb/serial/ch341.c:319:
+       if (r) {
+	   dev_err(&port->dev, "%s - failed submitting interrupt urb,"

WARNING:SPLIT_STRING: quoted string split across lines
#442: FILE: drivers/usb/serial/ch341.c:321:
+	   dev_err(&port->dev, "%s - failed submitting interrupt urb,"
+		   " error %d\n", __FUNCTION__, r);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#442: FILE: drivers/usb/serial/ch341.c:321:
+		   " error %d\n", __FUNCTION__, r);

WARNING:TABSTOP: Statements should start on a tabstop
#444: FILE: drivers/usb/serial/ch341.c:323:
+	   return -EPROTO;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#445: FILE: drivers/usb/serial/ch341.c:324:
+       }$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#447: FILE: drivers/usb/serial/ch341.c:326:
+       r = usb_serial_generic_open(port, filp);
                                          ^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#447: FILE: drivers/usb/serial/ch341.c:326:
+       r = usb_serial_generic_open(port, filp);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#456: FILE: drivers/usb/serial/ch341.c:335:
+                             struct ktermios *old_termios)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#456: FILE: drivers/usb/serial/ch341.c:335:
+static void ch341_set_termios(struct usb_serial_port *port,
+                             struct ktermios *old_termios)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#456: FILE: drivers/usb/serial/ch341.c:335:
+                             struct ktermios *old_termios)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#458: FILE: drivers/usb/serial/ch341.c:337:
+       struct ch341_private *priv = usb_get_serial_port_data(port);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#459: FILE: drivers/usb/serial/ch341.c:338:
+       struct tty_struct *tty = port->tty;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: drivers/usb/serial/ch341.c:339:
+       unsigned baud_rate;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#460: FILE: drivers/usb/serial/ch341.c:339:
+       unsigned baud_rate;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: drivers/usb/serial/ch341.c:340:
+       unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: drivers/usb/serial/ch341.c:342:
+       dbg("ch341_set_termios()");$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ch341_set_termios', this function's name, in a string
#463: FILE: drivers/usb/serial/ch341.c:342:
+       dbg("ch341_set_termios()");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#465: FILE: drivers/usb/serial/ch341.c:344:
+       if (!tty || !tty->termios)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#465: FILE: drivers/usb/serial/ch341.c:344:
+       if (!tty || !tty->termios)
+               return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#466: FILE: drivers/usb/serial/ch341.c:345:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#466: FILE: drivers/usb/serial/ch341.c:345:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: drivers/usb/serial/ch341.c:347:
+       baud_rate = tty_get_baud_rate(tty);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#469: FILE: drivers/usb/serial/ch341.c:348:
+       priv->baud_rate = baud_rate;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: drivers/usb/serial/ch341.c:350:
+       if (baud_rate) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#471: FILE: drivers/usb/serial/ch341.c:350:
+       if (baud_rate) {
+	   spin_lock_irqsave(&priv->lock, flags);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#473: FILE: drivers/usb/serial/ch341.c:352:
+^I   priv->line_control |= (CH341_BIT_DTR | CH341_BIT_RTS);^I   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#474: FILE: drivers/usb/serial/ch341.c:353:
+^I   spin_unlock_irqrestore(&priv->lock, flags);^I   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: drivers/usb/serial/ch341.c:355:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#476: FILE: drivers/usb/serial/ch341.c:355:
+       } else {
+	   spin_lock_irqsave(&priv->lock, flags);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#478: FILE: drivers/usb/serial/ch341.c:357:
+^I   priv->line_control &= ~(CH341_BIT_DTR | CH341_BIT_RTS);^I   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#479: FILE: drivers/usb/serial/ch341.c:358:
+^I   spin_unlock_irqrestore(&priv->lock, flags);^I   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#480: FILE: drivers/usb/serial/ch341.c:359:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: drivers/usb/serial/ch341.c:360:
+       ch341_set_handshake(port->serial->dev, priv->line_control);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#484: FILE: drivers/usb/serial/ch341.c:363:
+        * (cflag & CSIZE) : data bits [5, 8]$

ERROR:CODE_INDENT: code indent should use tabs where possible
#485: FILE: drivers/usb/serial/ch341.c:364:
+        * (cflag & PARENB) : parity {NONE, EVEN, ODD}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#486: FILE: drivers/usb/serial/ch341.c:365:
+        * (cflag & CSTOPB) : stop bits [1, 2]$

ERROR:CODE_INDENT: code indent should use tabs where possible
#487: FILE: drivers/usb/serial/ch341.c:366:
+        */$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#509: FILE: drivers/usb/serial/ch341.c:388:
+	return(ch341_set_handshake(port->serial->dev, control));

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:SPACING: No space is necessary after a cast
#514: FILE: drivers/usb/serial/ch341.c:393:
+	struct usb_serial_port *port = (struct usb_serial_port *) urb->context;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#519: FILE: drivers/usb/serial/ch341.c:398:
+	dbg("%s (%d)", __FUNCTION__, port->number);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#529: FILE: drivers/usb/serial/ch341.c:408:
+		dbg("%s - urb shutting down with status: %d", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#533: FILE: drivers/usb/serial/ch341.c:412:
+		dbg("%s - nonzero urb status received: %d", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#538: FILE: drivers/usb/serial/ch341.c:417:
+	usb_serial_debug_data(debug, &port->dev, __FUNCTION__,

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#541: FILE: drivers/usb/serial/ch341.c:420:
+	if (actual_length >= 4) {
+	    struct ch341_private *priv = usb_get_serial_port_data(port);

WARNING:TABSTOP: Statements should start on a tabstop
#542: FILE: drivers/usb/serial/ch341.c:421:
+	    struct ch341_private *priv = usb_get_serial_port_data(port);

WARNING:TABSTOP: Statements should start on a tabstop
#543: FILE: drivers/usb/serial/ch341.c:422:
+	    unsigned long flags;

WARNING:TABSTOP: Statements should start on a tabstop
#547: FILE: drivers/usb/serial/ch341.c:426:
+	    if ((data[1] & CH341_MULT_STAT))

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#558: FILE: drivers/usb/serial/ch341.c:437:
+			__FUNCTION__, status);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#586: FILE: drivers/usb/serial/ch341.c:465:
+		changed=prevstatus^status;
 		       ^

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#586: FILE: drivers/usb/serial/ch341.c:465:
+		changed=prevstatus^status;
 		                  ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#591: FILE: drivers/usb/serial/ch341.c:470:
+		    ((arg & TIOCM_CTS) && (changed & CH341_BIT_CTS)) ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#601: FILE: drivers/usb/serial/ch341.c:480:
+static int ch341_ioctl(struct usb_serial_port *port, struct file *file,
+			unsigned int cmd, unsigned long arg)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#603: FILE: drivers/usb/serial/ch341.c:482:
+	dbg("%s (%d) cmd = 0x%04x", __FUNCTION__, port->number, cmd);

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#605: FILE: drivers/usb/serial/ch341.c:484:
+	switch (cmd) {
+		case TIOCMIWAIT:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#607: FILE: drivers/usb/serial/ch341.c:486:
+			dbg("%s (%d) TIOCMIWAIT", __FUNCTION__,  port->number);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#611: FILE: drivers/usb/serial/ch341.c:490:
+			dbg("%s not supported = 0x%04x", __FUNCTION__, cmd);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#626: FILE: drivers/usb/serial/ch341.c:505:
+	dbg("%s (%d)", __FUNCTION__, port->number);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#640: FILE: drivers/usb/serial/ch341.c:519:
+	dbg("%s - result = %x", __FUNCTION__, result);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#646: FILE: drivers/usb/serial/ch341.c:525:
+       .name           = "ch341",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#647: FILE: drivers/usb/serial/ch341.c:526:
+       .probe          = usb_serial_probe,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#648: FILE: drivers/usb/serial/ch341.c:527:
+       .disconnect     = usb_serial_disconnect,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#649: FILE: drivers/usb/serial/ch341.c:528:
+       .id_table       = id_table,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#650: FILE: drivers/usb/serial/ch341.c:529:
+       .no_dynamic_id  = 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#654: FILE: drivers/usb/serial/ch341.c:533:
+       .driver = {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#655: FILE: drivers/usb/serial/ch341.c:534:
+               .owner  = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#655: FILE: drivers/usb/serial/ch341.c:534:
+               .owner  = THIS_MODULE,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#656: FILE: drivers/usb/serial/ch341.c:535:
+               .name   = "ch341-uart",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#656: FILE: drivers/usb/serial/ch341.c:535:
+               .name   = "ch341-uart",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#657: FILE: drivers/usb/serial/ch341.c:536:
+       },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#658: FILE: drivers/usb/serial/ch341.c:537:
+       .id_table         = id_table,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#659: FILE: drivers/usb/serial/ch341.c:538:
+       .usb_driver       = &ch341_driver,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#660: FILE: drivers/usb/serial/ch341.c:539:
+       .num_interrupt_in = 1, //NUM_DONT_CARE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#661: FILE: drivers/usb/serial/ch341.c:540:
+       .num_bulk_in      = 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#662: FILE: drivers/usb/serial/ch341.c:541:
+       .num_bulk_out     = 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#663: FILE: drivers/usb/serial/ch341.c:542:
+       .num_ports        = 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#664: FILE: drivers/usb/serial/ch341.c:543:
+       .open             = ch341_open,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#665: FILE: drivers/usb/serial/ch341.c:544:
+       .close            = ch341_close,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#666: FILE: drivers/usb/serial/ch341.c:545:
+       .ioctl            = ch341_ioctl,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#667: FILE: drivers/usb/serial/ch341.c:546:
+       .set_termios      = ch341_set_termios,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#668: FILE: drivers/usb/serial/ch341.c:547:
+       .tiocmget         = ch341_tiocmget,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#669: FILE: drivers/usb/serial/ch341.c:548:
+       .tiocmset         = ch341_tiocmset,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#670: FILE: drivers/usb/serial/ch341.c:549:
+       .read_int_callback= ch341_read_int_callback,$

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#670: FILE: drivers/usb/serial/ch341.c:549:
+       .read_int_callback= ch341_read_int_callback,
                          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#671: FILE: drivers/usb/serial/ch341.c:550:
+       .attach           = ch341_attach,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#676: FILE: drivers/usb/serial/ch341.c:555:
+       int retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#678: FILE: drivers/usb/serial/ch341.c:557:
+       retval = usb_serial_register(&ch341_device);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#679: FILE: drivers/usb/serial/ch341.c:558:
+       if (retval)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#679: FILE: drivers/usb/serial/ch341.c:558:
+       if (retval)
+               return retval;

ERROR:CODE_INDENT: code indent should use tabs where possible
#680: FILE: drivers/usb/serial/ch341.c:559:
+               return retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#680: FILE: drivers/usb/serial/ch341.c:559:
+               return retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#681: FILE: drivers/usb/serial/ch341.c:560:
+       retval = usb_register(&ch341_driver);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#682: FILE: drivers/usb/serial/ch341.c:561:
+       if (retval)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#682: FILE: drivers/usb/serial/ch341.c:561:
+       if (retval)
+               usb_serial_deregister(&ch341_device);

ERROR:CODE_INDENT: code indent should use tabs where possible
#683: FILE: drivers/usb/serial/ch341.c:562:
+               usb_serial_deregister(&ch341_device);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#683: FILE: drivers/usb/serial/ch341.c:562:
+               usb_serial_deregister(&ch341_device);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#684: FILE: drivers/usb/serial/ch341.c:563:
+       return retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#689: FILE: drivers/usb/serial/ch341.c:568:
+       usb_deregister(&ch341_driver);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#690: FILE: drivers/usb/serial/ch341.c:569:
+       usb_serial_deregister(&ch341_device);$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#697: FILE: drivers/usb/serial/ch341.c:576:
+module_param(debug, bool, S_IRUGO | S_IWUSR);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000381040.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 56 errors, 246 warnings, 15 checks, 625 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000381040.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
