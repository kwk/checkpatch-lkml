CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#97: FILE: fs/gfs2/glock.c:297:
+static int gfs2_lm_get_lock(struct gfs2_sbd *sdp, struct lm_lockname *name,
+		     void **lockp)

WARNING:LINE_SPACING: Missing a blank line after declarations
#100: FILE: fs/gfs2/glock.c:300:
+	int error = -EIO;
+	if (likely(!test_bit(SDF_SHUTDOWN, &sdp->sd_flags)))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#101: FILE: fs/gfs2/glock.c:301:
+		error = sdp->sd_lockstruct.ls_ops->lm_get_lock(

WARNING:LINE_SPACING: Missing a blank line after declarations
#118: FILE: fs/gfs2/glock.c:900:
+	int ret = 0;
+	if (likely(!test_bit(SDF_SHUTDOWN, &sdp->sd_flags)))

WARNING:LINE_SPACING: Missing a blank line after declarations
#135: FILE: fs/gfs2/glock.c:950:
+	int ret = 0;
+	if (likely(!test_bit(SDF_SHUTDOWN, &sdp->sd_flags)))

WARNING:LINE_SPACING: Missing a blank line after declarations
#168: FILE: fs/gfs2/glock.c:1464:
+	int error = -EIO;
+	if (likely(!test_bit(SDF_SHUTDOWN, &sdp->sd_flags)))

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#207: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#487: FILE: fs/gfs2/ops_file.c:599:
+static int gfs2_lm_plock_get(struct gfs2_sbd *sdp, struct lm_lockname *name,
+		      struct file *file, struct file_lock *fl)

WARNING:LINE_SPACING: Missing a blank line after declarations
#490: FILE: fs/gfs2/ops_file.c:602:
+	int error = -EIO;
+	if (likely(!test_bit(SDF_SHUTDOWN, &sdp->sd_flags)))

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#491: FILE: fs/gfs2/ops_file.c:603:
+		error = sdp->sd_lockstruct.ls_ops->lm_plock_get(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#497: FILE: fs/gfs2/ops_file.c:609:
+static int gfs2_lm_plock(struct gfs2_sbd *sdp, struct lm_lockname *name,
+		  struct file *file, int cmd, struct file_lock *fl)

WARNING:LINE_SPACING: Missing a blank line after declarations
#500: FILE: fs/gfs2/ops_file.c:612:
+	int error = -EIO;
+	if (likely(!test_bit(SDF_SHUTDOWN, &sdp->sd_flags)))

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#501: FILE: fs/gfs2/ops_file.c:613:
+		error = sdp->sd_lockstruct.ls_ops->lm_plock(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#507: FILE: fs/gfs2/ops_file.c:619:
+static int gfs2_lm_punlock(struct gfs2_sbd *sdp, struct lm_lockname *name,
+		    struct file *file, struct file_lock *fl)

WARNING:LINE_SPACING: Missing a blank line after declarations
#510: FILE: fs/gfs2/ops_file.c:622:
+	int error = -EIO;
+	if (likely(!test_bit(SDF_SHUTDOWN, &sdp->sd_flags)))

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#511: FILE: fs/gfs2/ops_file.c:623:
+		error = sdp->sd_lockstruct.ls_ops->lm_punlock(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#538: FILE: fs/gfs2/ops_fstype.c:368:
+		sdp->sd_lockstruct.ls_ops->lm_others_may_mount(

WARNING:TYPO_SPELLING: 'arguements' may be misspelled - perhaps 'arguments'?
#551: FILE: fs/gfs2/ops_fstype.c:716:
+ * @args: mount arguements
                 ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#643: FILE: fs/gfs2/recovery.c:427:
 
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#648: FILE: fs/gfs2/recovery.c:432:
+		sdp->sd_lockstruct.ls_ops->lm_recovery_done(

CHECK:LINE_SPACING: Please don't use multiple blank lines
#652: FILE: fs/gfs2/recovery.c:436:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#708: FILE: fs/gfs2/util.c:47:
+	BUG_ON(sdp->sd_args.ar_debug);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000294355.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 10 warnings, 12 checks, 343 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000294355.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
