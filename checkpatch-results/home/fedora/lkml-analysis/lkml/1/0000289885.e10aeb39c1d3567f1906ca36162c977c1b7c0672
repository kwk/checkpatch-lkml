WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
> discussion was that we're going to avoid putting mmio pages in the rmap.  

WARNING:TYPO_SPELLING: 'contex' may be misspelled - perhaps 'context'?
#92: 
inside mmu_lock everywhere (except in mmu-notifier contex where it can
                                                   ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#181: FILE: arch/x86/kvm/mmu.c:673:
+		BUG_ON(!(*spte & PT_PRESENT_MASK));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LINE_SPACING: Missing a blank line after declarations
#213: FILE: arch/x86/kvm/mmu.c:705:
+			gfn_t gfn_offset = (hva - start) >> PAGE_SHIFT;
+			need_tlb_flush |= kvm_unmap_rmapp(kvm,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#230: FILE: arch/x86/kvm/mmu.c:722:
+		u64 _spte = *spte;
+		BUG_ON(!(_spte & PT_PRESENT_MASK));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#230: FILE: arch/x86/kvm/mmu.c:722:
+		BUG_ON(!(_spte & PT_PRESENT_MASK));

WARNING:LINE_SPACING: Missing a blank line after declarations
#262: FILE: arch/x86/kvm/mmu.c:754:
+			gfn_t gfn_offset = (hva - start) >> PAGE_SHIFT;
+			young |= kvm_age_rmapp(kvm, &memslot->rmap[gfn_offset]);

WARNING:MEMORY_BARRIER: memory barrier without comment
#295: FILE: arch/x86/kvm/mmu.c:1320:
+	smp_rmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#336: FILE: arch/x86/kvm/mmu.c:1491:
+	smp_rmb();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#405: FILE: arch/x86/kvm/mmu.c:1812:
+	BUG_ON(!is_error_pfn(vcpu->arch.update_pte.pfn));

WARNING:MEMORY_BARRIER: memory barrier without comment
#450: FILE: arch/x86/kvm/paging_tmpl.h:268:
+	smp_rmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#480: FILE: arch/x86/kvm/paging_tmpl.h:438:
+	smp_rmb();

WARNING:LINE_SPACING: Missing a blank line after declarations
#517: FILE: arch/x86/kvm/x86.c:3866:
+	struct kvm_arch *kvm_arch;
+	kvm_arch = container_of(mn, struct kvm_arch, mmu_notifier);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#556: FILE: arch/x86/kvm/x86.c:3905:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'preceeding' may be misspelled - perhaps 'preceding'?
#600: FILE: arch/x86/kvm/x86.c:3949:
+	 * of the last PT-lock-protected critical section preceeding
 	                                                  ^^^^^^^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#617: FILE: arch/x86/kvm/x86.c:3966:
+	BUG_ON(atomic_read(&kvm->arch.mmu_notifier_count) < 0);

WARNING:LINE_SPACING: Missing a blank line after declarations
#643: FILE: arch/x86/kvm/x86.c:3992:
+	struct kvm *kvm = mmu_notifier_to_kvm(mn);
+	BUG_ON(mm != kvm->mm);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#643: FILE: arch/x86/kvm/x86.c:3992:
+	BUG_ON(mm != kvm->mm);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000289885.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 17 warnings, 1 checks, 573 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000289885.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
