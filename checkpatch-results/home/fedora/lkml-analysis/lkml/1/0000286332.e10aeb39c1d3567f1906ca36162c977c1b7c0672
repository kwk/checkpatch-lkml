WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#38: 
# configuration is based on 'my_favourite_config'

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#40: 
# configuration written to .config

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
#

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#140: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#145: FILE: scripts/kconfig/aconf.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#179: FILE: scripts/kconfig/aconf.c:35:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <rootEntry>
#181: FILE: scripts/kconfig/aconf.c:37:
+static struct menu *rootEntry;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:TYPO_SPELLING: 'strig' may be misspelled - perhaps 'string'?
#183: FILE: scripts/kconfig/aconf.c:39:
+/* Set strig value - it this a nop as it looks like? */
        ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#189: FILE: scripts/kconfig/aconf.c:45:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'default_value != set_default'
#193: FILE: scripts/kconfig/aconf.c:49:
+	if (sym_has_value(sym) && (default_value != set_default))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'default_value != set_default'
#210: FILE: scripts/kconfig/aconf.c:66:
+	if (sym_has_value(sym) && (default_value != set_default))

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#220: FILE: scripts/kconfig/aconf.c:76:
+	/* fallthrough */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#231: FILE: scripts/kconfig/aconf.c:87:
+	/* fallthrough */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#237: FILE: scripts/kconfig/aconf.c:93:
+	/* fallthrough */

WARNING:TABSTOP: Statements should start on a tabstop
#239: FILE: scripts/kconfig/aconf.c:95:
+		 do {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#243: FILE: scripts/kconfig/aconf.c:99:
+		case no:  sym_set_tristate_value(sym, no); break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#244: FILE: scripts/kconfig/aconf.c:100:
+		case mod: sym_set_tristate_value(sym, mod); break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#245: FILE: scripts/kconfig/aconf.c:101:
+		case yes: sym_set_tristate_value(sym, yes); break;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#275: FILE: scripts/kconfig/aconf.c:131:
+	cnt = def = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#290: FILE: scripts/kconfig/aconf.c:146:
+	/* fallthrough */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#314: FILE: scripts/kconfig/aconf.c:170:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#428: FILE: scripts/kconfig/aconf.c:284:
+^I^I        _("%s: default value missing. "$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#429: FILE: scripts/kconfig/aconf.c:285:
+^I^I        "You must use one of: -{d,n,m,y,r}\n"), av[0]);$

WARNING:SPLIT_STRING: quoted string split across lines
#429: FILE: scripts/kconfig/aconf.c:285:
+		        _("%s: default value missing. "
+		        "You must use one of: -{d,n,m,y,r}\n"), av[0]);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:CODE_INDENT: code indent should use tabs where possible
#436: FILE: scripts/kconfig/aconf.c:292:
+^I^I        av[0], config_file);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#441: FILE: scripts/kconfig/aconf.c:297:
+^I^I        av[0], config_file);$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#444: FILE: scripts/kconfig/aconf.c:300:
+	if (config_file) {
+		printf(_("# configuration is based on '%s'\n"), config_file);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#455: FILE: scripts/kconfig/aconf.c:311:
+^I^I        _("%s: error during write of the configuration.\n"),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#456: FILE: scripts/kconfig/aconf.c:312:
+^I^I        av[0]);$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 2
#468: FILE: scripts/kconfig/aconf.sh:2:
+set -e

WARNING:TYPO_SPELLING: 'unknow' may be misspelled - perhaps 'unknown'?
#492: FILE: scripts/kconfig/aconf.sh:26:
+		echo "$0: unknow command $1"
 		          ^^^^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000286332.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 16 warnings, 7 checks, 406 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000286332.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
