WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#109: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#114: FILE: drivers/input/misc/imon.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#132: FILE: drivers/input/misc/imon.c:19:
+ *   along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#133: FILE: drivers/input/misc/imon.c:20:
+ *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#244: FILE: drivers/input/misc/imon.c:131:
+#define TOUCH_TIMEOUT	(HZ/30)
                      	   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#511: FILE: drivers/input/misc/imon.c:398:
+/* the OK and Enter buttons decode to the same value
+	{ KE_KEY, 0x02000028, { KEY_OK } }, */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#511: FILE: drivers/input/misc/imon.c:398:
+	{ KE_KEY, 0x02000028, { KEY_OK } }, */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#569: FILE: drivers/input/misc/imon.c:456:
+/* the TV key on my panel is broken, doesn't work under any OS
+	{ 0x0000000000000fee, KEY_TV }, */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#569: FILE: drivers/input/misc/imon.c:456:
+	{ 0x0000000000000fee, KEY_TV }, */

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#595: FILE: drivers/input/misc/imon.c:482:
+module_param(debug, bool, S_IRUGO | S_IWUSR);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#600: FILE: drivers/input/misc/imon.c:487:
+module_param(display_type, int, S_IRUGO);

WARNING:SPLIT_STRING: quoted string split across lines
#602: FILE: drivers/input/misc/imon.c:489:
+MODULE_PARM_DESC(display_type, "Type of attached display. 0=autodetect, "
+		 "1=vfd, 2=lcd, 3=vga, 4=none (default: autodetect)");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#606: FILE: drivers/input/misc/imon.c:493:
+module_param(ir_protocol, int, S_IRUGO | S_IWUSR);

WARNING:SPLIT_STRING: quoted string split across lines
#608: FILE: drivers/input/misc/imon.c:495:
+MODULE_PARM_DESC(ir_protocol, "Which IR protocol to use. 0=native iMON, "
+		 "1=Windows Media Center Ed. (RC-6), 2=iMON w/o PAD stabilize "

WARNING:SPLIT_STRING: quoted string split across lines
#609: FILE: drivers/input/misc/imon.c:496:
+		 "1=Windows Media Center Ed. (RC-6), 2=iMON w/o PAD stabilize "
+		 "(default: native iMON)");

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#616: FILE: drivers/input/misc/imon.c:503:
+module_param(nomouse, bool, S_IRUGO | S_IWUSR);

WARNING:SPLIT_STRING: quoted string split across lines
#618: FILE: drivers/input/misc/imon.c:505:
+MODULE_PARM_DESC(nomouse, "Disable mouse input device mode when IR device is "
+		 "open. 0=don't disable, 1=disable. (default: don't disable)");

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#622: FILE: drivers/input/misc/imon.c:509:
+module_param(pad_thresh, int, S_IRUGO | S_IWUSR);

WARNING:SPLIT_STRING: quoted string split across lines
#624: FILE: drivers/input/misc/imon.c:511:
+MODULE_PARM_DESC(pad_thresh, "Threshold at which a pad push registers as an "
+		 "arrow key in kbd mode (default: 28)");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#626: FILE: drivers/input/misc/imon.c:513:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <bEndpointAddress>
#747: FILE: drivers/input/misc/imon.c:634:
+				      ictx->tx_endpoint->bEndpointAddress);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <bInterval>
#748: FILE: drivers/input/misc/imon.c:635:
+		interval = ictx->tx_endpoint->bInterval;

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*control_req)...) over kmalloc(sizeof(struct usb_ctrlrequest)...)
#758: FILE: drivers/input/misc/imon.c:645:
+		control_req = kmalloc(sizeof(struct usb_ctrlrequest),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!control_req"
#760: FILE: drivers/input/misc/imon.c:647:
+		if (control_req == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:CAMELCASE: Avoid CamelCase: <bRequestType>
#764: FILE: drivers/input/misc/imon.c:651:
+		control_req->bRequestType = 0x21;

CHECK:CAMELCASE: Avoid CamelCase: <bRequest>
#765: FILE: drivers/input/misc/imon.c:652:
+		control_req->bRequest = 0x09;

CHECK:CAMELCASE: Avoid CamelCase: <wValue>
#766: FILE: drivers/input/misc/imon.c:653:
+		control_req->wValue = cpu_to_le16(0x0200);

CHECK:CAMELCASE: Avoid CamelCase: <wIndex>
#767: FILE: drivers/input/misc/imon.c:654:
+		control_req->wIndex = cpu_to_le16(0x0001);

CHECK:CAMELCASE: Avoid CamelCase: <wLength>
#768: FILE: drivers/input/misc/imon.c:655:
+		control_req->wLength = cpu_to_le16(0x0008);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#794: FILE: drivers/input/misc/imon.c:681:
+		retval = wait_for_completion_interruptible(

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#866: FILE: drivers/input/misc/imon.c:753:
+		clock_enable_pkt[0][2] = month-1;
 		                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#892: FILE: drivers/input/misc/imon.c:779:
+		clock_enable_pkt[0][1] = month-1;
 		                              ^

WARNING:SPLIT_STRING: quoted string split across lines
#947: FILE: drivers/input/misc/imon.c:834:
+	dev_info(d, "Visit http://www.lirc.org/html/imon-24g.html for "
+		 "instructions on how to associate your iMON 2.4G DT/LT "

WARNING:SPLIT_STRING: quoted string split across lines
#948: FILE: drivers/input/misc/imon.c:835:
+		 "instructions on how to associate your iMON 2.4G DT/LT "
+		 "remote\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#990: FILE: drivers/input/misc/imon.c:877:
+		len = snprintf(buf, PAGE_SIZE,
+			"To set the clock on your iMON display:\n"

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dow > 6'
#1028: FILE: drivers/input/misc/imon.c:915:
+	if ((month < 1 || month > 12) ||
+	    (day < 1 || day > 31) || (dow > 6) ||
+	    (hour > 23) || (minute > 59) || (second > 59)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hour > 23'
#1028: FILE: drivers/input/misc/imon.c:915:
+	if ((month < 1 || month > 12) ||
+	    (day < 1 || day > 31) || (dow > 6) ||
+	    (hour > 23) || (minute > 59) || (second > 59)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'minute > 59'
#1028: FILE: drivers/input/misc/imon.c:915:
+	if ((month < 1 || month > 12) ||
+	    (day < 1 || day > 31) || (dow > 6) ||
+	    (hour > 23) || (minute > 59) || (second > 59)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'second > 59'
#1028: FILE: drivers/input/misc/imon.c:915:
+	if ((month < 1 || month > 12) ||
+	    (day < 1 || day > 31) || (dow > 6) ||
+	    (hour > 23) || (minute > 59) || (second > 59)) {

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_imon_clock' to 'imon_clock_show' 'store_imon_clock' to 'imon_clock_store'
#1045: FILE: drivers/input/misc/imon.c:932:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1047: FILE: drivers/input/misc/imon.c:934:
+
+

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#1048: FILE: drivers/input/misc/imon.c:935:
+static DEVICE_ATTR(imon_clock, S_IWUSR | S_IRUGO, show_imon_clock,

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_associate_remote' to 'associate_remote_show' 'store_associate_remote' to 'associate_remote_store'
#1051: FILE: drivers/input/misc/imon.c:938:
+static DEVICE_ATTR(associate_remote, S_IWUSR | S_IRUGO, show_associate_remote,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#1051: FILE: drivers/input/misc/imon.c:938:
+static DEVICE_ATTR(associate_remote, S_IWUSR | S_IRUGO, show_associate_remote,

CHECK:SPACING: No space is necessary after a cast
#1131: FILE: drivers/input/misc/imon.c:1018:
+		ictx->usb_tx_buf[7] = (unsigned char) seq;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1136: FILE: drivers/input/misc/imon.c:1023:
+			err("%s: send packet failed for packet #%d",
+					__func__, seq/2);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1136: FILE: drivers/input/misc/imon.c:1023:
+					__func__, seq/2);
 					             ^

CHECK:SPACING: No space is necessary after a cast
#1147: FILE: drivers/input/misc/imon.c:1034:
+	ictx->usb_tx_buf[7] = (unsigned char) seq;

CHECK:SPACING: No space is necessary after a cast
#1194: FILE: drivers/input/misc/imon.c:1081:
+		    __func__, (int) n_bytes);

CHECK:SPACING: No space is necessary after a cast
#1210: FILE: drivers/input/misc/imon.c:1097:
+			__func__, (int) n_bytes);

WARNING:SPLIT_STRING: quoted string split across lines
#1266: FILE: drivers/input/misc/imon.c:1153:
+		dev_dbg(dev, "Configuring IR receiver for iMON protocol "
+			"without PAD stabilize function enabled\n");

WARNING:SPLIT_STRING: quoted string split across lines
#1273: FILE: drivers/input/misc/imon.c:1160:
+		dev_info(dev, "%s: unknown IR protocol specified, will "
+			 "just default to iMON protocol\n", __func__);

WARNING:SPLIT_STRING: quoted string split across lines
#1284: FILE: drivers/input/misc/imon.c:1171:
+		dev_info(dev, "%s: failed to set IR protocol, falling back "
+			 "to standard iMON protocol mode\n", __func__);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1443: FILE: drivers/input/misc/imon.c:1330:
+	if (ictx->product != 0xffdc && (buf[0] & 0x01) && len == 5) {
[...]
+	} else if (ictx->product == 0xffdc && (buf[0] & 0x40) &&
[...]
+	} else if (ictx->product == 0xffdc && (buf[0] == 0x68)) {
[...]
+	} else if (ictx->kc == KEY_CHANNELUP && (buf[2] & 0x40) != 0x40) {
[...]
+	} else if (ictx->kc == KEY_CHANNELDOWN && (buf[2] & 0x40) != 0x40) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1469: FILE: drivers/input/misc/imon.c:1356:
+	} else

WARNING:TYPO_SPELLING: 'tendancy' may be misspelled - perhaps 'tendency'?
#1518: FILE: drivers/input/misc/imon.c:1405:
+	 * diagonals, it has a tendancy to jump back and forth, so lets try to
 	                       ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1523: FILE: drivers/input/misc/imon.c:1410:
+		buf[5] = buf[6] = buf[7] = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'buf[1] == 0'
#1531: FILE: drivers/input/misc/imon.c:1418:
+			if ((buf[1] == 0) && ((rel_x != 0) || (rel_y != 0))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rel_x != 0'
#1531: FILE: drivers/input/misc/imon.c:1418:
+			if ((buf[1] == 0) && ((rel_x != 0) || (rel_y != 0))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rel_y != 0'
#1531: FILE: drivers/input/misc/imon.c:1418:
+			if ((buf[1] == 0) && ((rel_x != 0) || (rel_y != 0))) {

CHECK:SPACING: No space is necessary after a cast
#1541: FILE: drivers/input/misc/imon.c:1428:
+				remote_key = (u32) (le64_to_cpu(temp_key)

WARNING:TYPO_SPELLING: 'endianess' may be misspelled - perhaps 'endianness'?
#1565: FILE: drivers/input/misc/imon.c:1452:
+	 * reversed endianess. Extract direction from buffer, rotate endianess,
 	            ^^^^^^^^^

WARNING:TYPO_SPELLING: 'endianess' may be misspelled - perhaps 'endianness'?
#1565: FILE: drivers/input/misc/imon.c:1452:
+	 * reversed endianess. Extract direction from buffer, rotate endianess,
 	                                                             ^^^^^^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1578: FILE: drivers/input/misc/imon.c:1465:
+			rel_x |= ~0x10+1;
 			              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1583: FILE: drivers/input/misc/imon.c:1470:
+			rel_y |= ~0x10+1;
 			              ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1586: FILE: drivers/input/misc/imon.c:1473:
+		buf[1] = buf[4] = buf[5] = buf[6] = buf[7] = 0;

CHECK:SPACING: No space is necessary after a cast
#1598: FILE: drivers/input/misc/imon.c:1485:
+			remote_key = (u32) (le64_to_cpu(temp_key) & 0xffffffff);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1630: FILE: drivers/input/misc/imon.c:1517:
+		if (ictx->kc != ictx->last_keycode
+		    || buf[2] != ictx->mce_toggle_bit) {

CHECK:SPACING: No space is necessary after a cast
#1691: FILE: drivers/input/misc/imon.c:1578:
+		remote_key = (u32) (le64_to_cpu(temp_key) & 0xffffffff);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'len == 5'
#1732: FILE: drivers/input/misc/imon.c:1619:
+	if (((len == 5) && (buf[0] == 0x01) && (buf[4] == 0x00)) ||
+	    ((len == 8) && (buf[0] & 0x40) &&
+	     !(buf[1] & 0x1 || buf[1] >> 2 & 0x1))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'buf[0] == 0x01'
#1732: FILE: drivers/input/misc/imon.c:1619:
+	if (((len == 5) && (buf[0] == 0x01) && (buf[4] == 0x00)) ||
+	    ((len == 8) && (buf[0] & 0x40) &&
+	     !(buf[1] & 0x1 || buf[1] >> 2 & 0x1))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'buf[4] == 0x00'
#1732: FILE: drivers/input/misc/imon.c:1619:
+	if (((len == 5) && (buf[0] == 0x01) && (buf[4] == 0x00)) ||
+	    ((len == 8) && (buf[0] & 0x40) &&
+	     !(buf[1] & 0x1 || buf[1] >> 2 & 0x1))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'len == 8'
#1732: FILE: drivers/input/misc/imon.c:1619:
+	if (((len == 5) && (buf[0] == 0x01) && (buf[4] == 0x00)) ||
+	    ((len == 8) && (buf[0] & 0x40) &&
+	     !(buf[1] & 0x1 || buf[1] >> 2 & 0x1))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1741: FILE: drivers/input/misc/imon.c:1628:
+		printk(KERN_INFO "intf%d decoded packet: ", intf);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1743: FILE: drivers/input/misc/imon.c:1630:
+			printk("%02x ", buf[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1744: FILE: drivers/input/misc/imon.c:1631:
+		printk("\n");

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1753: FILE: drivers/input/misc/imon.c:1640:
+	if ((ictx->kc == KEY_MUTE && ictx->kc == ictx->last_keycode)
+	    && (buf[7] == 0xee || ksrc == IMON_BUTTON_MCE)) {

WARNING:SPLIT_STRING: quoted string split across lines
#1777: FILE: drivers/input/misc/imon.c:1664:
+		dev_warn(dev, "imon %s: invalid incoming packet "
+			 "size (len = %d, intf%d)\n", __func__, len, intf);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1938: FILE: drivers/input/misc/imon.c:1825:
+		u16 kc = imon_panel_key_table[i].keycode;
+		__set_bit(kc, idev->keybit);

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceNumber>
#2016: FILE: drivers/input/misc/imon.c:1903:
+	int ifnum = iface_desc->desc.bInterfaceNumber;

CHECK:CAMELCASE: Avoid CamelCase: <bNumEndpoints>
#2017: FILE: drivers/input/misc/imon.c:1904:
+	int num_endpts = iface_desc->desc.bNumEndpoints;

CHECK:CAMELCASE: Avoid CamelCase: <bmAttributes>
#2031: FILE: drivers/input/misc/imon.c:1918:
+		ep_type = ep->bmAttributes & USB_ENDPOINT_XFERTYPE_MASK;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2035: FILE: drivers/input/misc/imon.c:1922:
+		    ep_type == USB_ENDPOINT_XFER_INT) {
+

WARNING:SPLIT_STRING: quoted string split across lines
#2067: FILE: drivers/input/misc/imon.c:1954:
+		dev_dbg(ictx->dev, "%s: device uses control endpoint, not "
+			"interface OUT endpoint\n", __func__);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2100: FILE: drivers/input/misc/imon.c:1987:
+
+}

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ictx)...) over kzalloc(sizeof(struct imon_context)...)
#2111: FILE: drivers/input/misc/imon.c:1998:
+	ictx = kzalloc(sizeof(struct imon_context), GFP_KERNEL);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#2113: FILE: drivers/input/misc/imon.c:2000:
+	if (!ictx) {
+		dev_err(dev, "%s: kzalloc failed for context", __func__);

CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#2144: FILE: drivers/input/misc/imon.c:2031:
+	ictx->vendor  = le16_to_cpu(ictx->usbdev_intf0->descriptor.idVendor);

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#2145: FILE: drivers/input/misc/imon.c:2032:
+	ictx->product = le16_to_cpu(ictx->usbdev_intf0->descriptor.idProduct);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2158: FILE: drivers/input/misc/imon.c:2045:
+	usb_fill_int_urb(ictx->rx_urb_intf0, ictx->usbdev_intf0,
+		usb_rcvintpipe(ictx->usbdev_intf0,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2159: FILE: drivers/input/misc/imon.c:2046:
+		usb_rcvintpipe(ictx->usbdev_intf0,
+			ictx->rx_endpoint_intf0->bEndpointAddress),

CHECK:BRACES: braces {} should be used on all arms of this statement
#2221: FILE: drivers/input/misc/imon.c:2108:
+	if (ictx->display_type == IMON_DISPLAY_TYPE_VGA) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2225: FILE: drivers/input/misc/imon.c:2112:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2229: FILE: drivers/input/misc/imon.c:2116:
+	usb_fill_int_urb(ictx->rx_urb_intf1, ictx->usbdev_intf1,
+		usb_rcvintpipe(ictx->usbdev_intf1,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2230: FILE: drivers/input/misc/imon.c:2117:
+		usb_rcvintpipe(ictx->usbdev_intf1,
+			ictx->rx_endpoint_intf1->bEndpointAddress),

WARNING:SPLIT_STRING: quoted string split across lines
#2281: FILE: drivers/input/misc/imon.c:2168:
+		dev_dbg(ictx->dev, "%s: overriding display type to %d via "
+			"modparam\n", __func__, display_type);

WARNING:SPLIT_STRING: quoted string split across lines
#2301: FILE: drivers/input/misc/imon.c:2188:
+		dev_err(ictx->dev, "Could not create display sysfs "
+			"entries(%d)", ret);

WARNING:SPLIT_STRING: quoted string split across lines
#2310: FILE: drivers/input/misc/imon.c:2197:
+		dev_info(ictx->dev, "could not get a minor number for "
+			 "display\n");

WARNING:SPLIT_STRING: quoted string split across lines
#2318: FILE: drivers/input/misc/imon.c:2205:
+		dev_info(ictx->dev, "failed to enable front-panel "
+			 "buttons and/or knobs\n");

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2324: FILE: drivers/input/misc/imon.c:2211:
+static int __devinit imon_probe(struct usb_interface *interface,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2354: FILE: drivers/input/misc/imon.c:2241:
+
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2386: FILE: drivers/input/misc/imon.c:2273:
+
+	}

WARNING:SPLIT_STRING: quoted string split across lines
#2394: FILE: drivers/input/misc/imon.c:2281:
+	dev_info(dev, "iMON device (%04x:%04x, intf%d) on "
+		 "usb<%d:%d> initialized\n", vendor, product, ifnum,

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#2412: FILE: drivers/input/misc/imon.c:2299:
+static void __devexit imon_disconnect(struct usb_interface *interface)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2501: FILE: drivers/input/misc/imon.c:2388:
+		usb_fill_int_urb(ictx->rx_urb_intf0, ictx->usbdev_intf0,
+			usb_rcvintpipe(ictx->usbdev_intf0,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2502: FILE: drivers/input/misc/imon.c:2389:
+			usb_rcvintpipe(ictx->usbdev_intf0,
+				ictx->rx_endpoint_intf0->bEndpointAddress),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2511: FILE: drivers/input/misc/imon.c:2398:
+		usb_fill_int_urb(ictx->rx_urb_intf1, ictx->usbdev_intf1,
+			usb_rcvintpipe(ictx->usbdev_intf1,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2512: FILE: drivers/input/misc/imon.c:2399:
+			usb_rcvintpipe(ictx->usbdev_intf1,
+				ictx->rx_endpoint_intf1->bEndpointAddress),

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000028751.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 42 warnings, 64 checks, 2452 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000028751.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
