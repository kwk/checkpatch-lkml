CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#73: FILE: arch/alpha/include/asm/pci.h:276:
+extern int pci_legacy_read(struct pci_bus *bus, loff_t port, u32 *val,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#75: FILE: arch/alpha/include/asm/pci.h:278:
+extern int pci_legacy_write(struct pci_bus *bus, loff_t port, u32 val,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#77: FILE: arch/alpha/include/asm/pci.h:280:
+extern int pci_mmap_legacy_page_range(struct pci_bus *bus,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#80: FILE: arch/alpha/include/asm/pci.h:283:
+extern void pci_adjust_legacy_attr(struct pci_bus *bus,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#84: FILE: arch/alpha/include/asm/pci.h:287:
+extern int pci_create_resource_files(struct pci_dev *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#85: FILE: arch/alpha/include/asm/pci.h:288:
+extern void pci_remove_resource_files(struct pci_dev *dev);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#102: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#107: FILE: arch/alpha/kernel/pci-sysfs.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#108: FILE: arch/alpha/kernel/pci-sysfs.c:2:
+ * arch/alpha/kernel/pci-sysfs.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:SPLIT_STRING: quoted string split across lines
#153: FILE: arch/alpha/kernel/pci-sysfs.c:47:
+	WARN(1, "process \"%s\" tried to map%s 0x%08lx-0x%08lx on %s BAR %d "
+		"(size 0x%08lx)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#249: FILE: arch/alpha/kernel/pci-sysfs.c:143:
+	/* All core logic chips have 4G sparse address space, except
+	   CIA which has 16G (see xxx_SPARSE_MEM and xxx_DENSE_MEM

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#251: FILE: arch/alpha/kernel/pci-sysfs.c:145:
+	   to 128M or 512M of the bus space. */

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#268: FILE: arch/alpha/kernel/pci-sysfs.c:162:
+	res_attr->attr.mode = S_IRUSR | S_IWUSR;

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#340: FILE: arch/alpha/kernel/pci-sysfs.c:234:
+	for (i = 0; i < PCI_ROM_RESOURCE; i++) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPLIT_STRING: quoted string split across lines
#369: FILE: arch/alpha/kernel/pci-sysfs.c:263:
+	WARN(1, "process \"%s\" tried to map%s 0x%08lx-0x%08lx on hose %d "
+		"(size 0x%08lx)\n",

WARNING:RETURN_VOID: void function return statements are not generally useful
#423: FILE: arch/alpha/kernel/pci-sysfs.c:317:
+	return;
+}

ERROR:SPACING: space required before the open parenthesis '('
#432: FILE: arch/alpha/kernel/pci-sysfs.c:326:
+	switch(size) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#456: FILE: arch/alpha/kernel/pci-sysfs.c:350:
+	switch(size) {

WARNING:RETURN_VOID: void function return statements are not generally useful
#491: FILE: drivers/pci/pci-sysfs.c:506:
+	return;
+}

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000166125.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 10 warnings, 7 checks, 435 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000166125.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
