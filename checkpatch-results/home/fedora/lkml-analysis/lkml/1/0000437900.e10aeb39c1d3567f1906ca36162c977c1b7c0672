WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
Note: This driver depends on ds1wm.h header, recently submitted, and which by now should be in -mm tree.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#47: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#62: FILE: drivers/soc/Kconfig:11:
+config SOC_ASIC3
+	tristate "HTC ASIC3 SoC support (iPAQ & HTC PDAs)"
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#91: FILE: drivers/soc/asic3_base.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#128: FILE: drivers/soc/asic3_base.c:38:
+#include <asm/io.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#135: FILE: drivers/soc/asic3_base.c:45:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#137: FILE: drivers/soc/asic3_base.c:47:
+struct asic3_data
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'get_fn_name' - possible side-effects?
#189: FILE: drivers/soc/asic3_base.c:99:
+#define ASIC3_GPIO_FN(get_fn_name, set_fn_name, REG)			\
+u32 get_fn_name(struct device *dev)					\
+{                                                                       \
+	return asic3_read_register(dev, REG);				\
+}                                                                       \
+EXPORT_SYMBOL(get_fn_name);						\
+									\
+void set_fn_name(struct device *dev, u32 bits, u32 val)			\
+{                                                                       \
+	unsigned long flags;						\
+									\
+	spin_lock_irqsave(&asic3_gpio_lock, flags);			\
+	val |= (asic3_read_register(dev, REG) & ~bits);			\
+	asic3_write_register(dev, REG, val);				\
+	spin_unlock_irqrestore(&asic3_gpio_lock, flags);		\
+}                                                                       \
+EXPORT_SYMBOL(set_fn_name);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'set_fn_name' - possible side-effects?
#189: FILE: drivers/soc/asic3_base.c:99:
+#define ASIC3_GPIO_FN(get_fn_name, set_fn_name, REG)			\
+u32 get_fn_name(struct device *dev)					\
+{                                                                       \
+	return asic3_read_register(dev, REG);				\
+}                                                                       \
+EXPORT_SYMBOL(get_fn_name);						\
+									\
+void set_fn_name(struct device *dev, u32 bits, u32 val)			\
+{                                                                       \
+	unsigned long flags;						\
+									\
+	spin_lock_irqsave(&asic3_gpio_lock, flags);			\
+	val |= (asic3_read_register(dev, REG) & ~bits);			\
+	asic3_write_register(dev, REG, val);				\
+	spin_unlock_irqrestore(&asic3_gpio_lock, flags);		\
+}                                                                       \
+EXPORT_SYMBOL(set_fn_name);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'REG' - possible side-effects?
#189: FILE: drivers/soc/asic3_base.c:99:
+#define ASIC3_GPIO_FN(get_fn_name, set_fn_name, REG)			\
+u32 get_fn_name(struct device *dev)					\
+{                                                                       \
+	return asic3_read_register(dev, REG);				\
+}                                                                       \
+EXPORT_SYMBOL(get_fn_name);						\
+									\
+void set_fn_name(struct device *dev, u32 bits, u32 val)			\
+{                                                                       \
+	unsigned long flags;						\
+									\
+	spin_lock_irqsave(&asic3_gpio_lock, flags);			\
+	val |= (asic3_read_register(dev, REG) & ~bits);			\
+	asic3_write_register(dev, REG, val);				\
+	spin_unlock_irqrestore(&asic3_gpio_lock, flags);		\
+}                                                                       \
+EXPORT_SYMBOL(set_fn_name);

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#189: FILE: drivers/soc/asic3_base.c:99:
+#define ASIC3_GPIO_FN(get_fn_name, set_fn_name, REG)			\
+u32 get_fn_name(struct device *dev)					\
+{                                                                       \
+	return asic3_read_register(dev, REG);				\
+}                                                                       \
+EXPORT_SYMBOL(get_fn_name);						\
+									\
+void set_fn_name(struct device *dev, u32 bits, u32 val)			\
+{                                                                       \
+	unsigned long flags;						\
+									\
+	spin_lock_irqsave(&asic3_gpio_lock, flags);			\
+	val |= (asic3_read_register(dev, REG) & ~bits);			\
+	asic3_write_register(dev, REG, val);				\
+	spin_unlock_irqrestore(&asic3_gpio_lock, flags);		\
+}                                                                       \
+EXPORT_SYMBOL(set_fn_name);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#189: FILE: drivers/soc/asic3_base.c:99:
+#define ASIC3_GPIO_FN(get_fn_name, set_fn_name, REG)			\
+u32 get_fn_name(struct device *dev)					\
+{                                                                       \
+	return asic3_read_register(dev, REG);				\
+}                                                                       \
+EXPORT_SYMBOL(get_fn_name);						\
+									\
+void set_fn_name(struct device *dev, u32 bits, u32 val)			\
+{                                                                       \
+	unsigned long flags;						\
+									\
+	spin_lock_irqsave(&asic3_gpio_lock, flags);			\
+	val |= (asic3_read_register(dev, REG) & ~bits);			\
+	asic3_write_register(dev, REG, val);				\
+	spin_unlock_irqrestore(&asic3_gpio_lock, flags);		\
+}                                                                       \
+EXPORT_SYMBOL(set_fn_name);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#194: FILE: drivers/soc/asic3_base.c:104:
+EXPORT_SYMBOL(get_fn_name);						\

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#207: FILE: drivers/soc/asic3_base.c:117:
+#define ASIC3_GPIO_REGISTER(ACTION, action, fn, FN)			\
+	ASIC3_GPIO_FN (asic3_get_gpio_ ## action ## _ ## fn ,		\
+		       asic3_set_gpio_ ## action ## _ ## fn ,		\
+		       _IPAQ_ASIC3_GPIO_ ## FN ## _Base 		\
+		       + _IPAQ_ASIC3_GPIO_ ## ACTION )

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#208: FILE: drivers/soc/asic3_base.c:118:
+	ASIC3_GPIO_FN (asic3_get_gpio_ ## action ## _ ## fn ,		\

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#208: FILE: drivers/soc/asic3_base.c:118:
+	ASIC3_GPIO_FN (asic3_get_gpio_ ## action ## _ ## fn ,		\
 	                                                    ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#209: FILE: drivers/soc/asic3_base.c:119:
+		       asic3_set_gpio_ ## action ## _ ## fn ,		\
 		                                            ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#210: FILE: drivers/soc/asic3_base.c:120:
+^I^I       _IPAQ_ASIC3_GPIO_ ## FN ## _Base ^I^I\$

CHECK:CAMELCASE: Avoid CamelCase: <_IPAQ_ASIC3_GPIO_ ## FN ## _Base>
#210: FILE: drivers/soc/asic3_base.c:120:
+		       _IPAQ_ASIC3_GPIO_ ## FN ## _Base 		\

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: space prohibited before that close parenthesis ')'
#211: FILE: drivers/soc/asic3_base.c:121:
+		       + _IPAQ_ASIC3_GPIO_ ## ACTION )

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#213: FILE: drivers/soc/asic3_base.c:123:
+#define ASIC3_GPIO_FUNCTIONS(fn, FN)					\
+	ASIC3_GPIO_REGISTER (Direction, dir, fn, FN)			\
+	ASIC3_GPIO_REGISTER (Out, out, fn, FN)				\
+	ASIC3_GPIO_REGISTER (SleepMask, sleepmask, fn, FN)		\
+	ASIC3_GPIO_REGISTER (SleepOut, sleepout, fn, FN)		\
+	ASIC3_GPIO_REGISTER (BattFaultOut, battfaultout, fn, FN)	\
+	ASIC3_GPIO_REGISTER (AltFunction, alt_fn, fn, FN)		\
+	ASIC3_GPIO_REGISTER (SleepConf, sleepconf, fn, FN)		\
+	ASIC3_GPIO_REGISTER (Status, status, fn, FN)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'fn' - possible side-effects?
#213: FILE: drivers/soc/asic3_base.c:123:
+#define ASIC3_GPIO_FUNCTIONS(fn, FN)					\
+	ASIC3_GPIO_REGISTER (Direction, dir, fn, FN)			\
+	ASIC3_GPIO_REGISTER (Out, out, fn, FN)				\
+	ASIC3_GPIO_REGISTER (SleepMask, sleepmask, fn, FN)		\
+	ASIC3_GPIO_REGISTER (SleepOut, sleepout, fn, FN)		\
+	ASIC3_GPIO_REGISTER (BattFaultOut, battfaultout, fn, FN)	\
+	ASIC3_GPIO_REGISTER (AltFunction, alt_fn, fn, FN)		\
+	ASIC3_GPIO_REGISTER (SleepConf, sleepconf, fn, FN)		\
+	ASIC3_GPIO_REGISTER (Status, status, fn, FN)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'FN' - possible side-effects?
#213: FILE: drivers/soc/asic3_base.c:123:
+#define ASIC3_GPIO_FUNCTIONS(fn, FN)					\
+	ASIC3_GPIO_REGISTER (Direction, dir, fn, FN)			\
+	ASIC3_GPIO_REGISTER (Out, out, fn, FN)				\
+	ASIC3_GPIO_REGISTER (SleepMask, sleepmask, fn, FN)		\
+	ASIC3_GPIO_REGISTER (SleepOut, sleepout, fn, FN)		\
+	ASIC3_GPIO_REGISTER (BattFaultOut, battfaultout, fn, FN)	\
+	ASIC3_GPIO_REGISTER (AltFunction, alt_fn, fn, FN)		\
+	ASIC3_GPIO_REGISTER (SleepConf, sleepconf, fn, FN)		\
+	ASIC3_GPIO_REGISTER (Status, status, fn, FN)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#214: FILE: drivers/soc/asic3_base.c:124:
+	ASIC3_GPIO_REGISTER (Direction, dir, fn, FN)			\

CHECK:CAMELCASE: Avoid CamelCase: <Direction>
#214: FILE: drivers/soc/asic3_base.c:124:
+	ASIC3_GPIO_REGISTER (Direction, dir, fn, FN)			\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#215: FILE: drivers/soc/asic3_base.c:125:
+	ASIC3_GPIO_REGISTER (Out, out, fn, FN)				\

CHECK:CAMELCASE: Avoid CamelCase: <Out>
#215: FILE: drivers/soc/asic3_base.c:125:
+	ASIC3_GPIO_REGISTER (Out, out, fn, FN)				\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#216: FILE: drivers/soc/asic3_base.c:126:
+	ASIC3_GPIO_REGISTER (SleepMask, sleepmask, fn, FN)		\

CHECK:CAMELCASE: Avoid CamelCase: <SleepMask>
#216: FILE: drivers/soc/asic3_base.c:126:
+	ASIC3_GPIO_REGISTER (SleepMask, sleepmask, fn, FN)		\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#217: FILE: drivers/soc/asic3_base.c:127:
+	ASIC3_GPIO_REGISTER (SleepOut, sleepout, fn, FN)		\

CHECK:CAMELCASE: Avoid CamelCase: <SleepOut>
#217: FILE: drivers/soc/asic3_base.c:127:
+	ASIC3_GPIO_REGISTER (SleepOut, sleepout, fn, FN)		\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#218: FILE: drivers/soc/asic3_base.c:128:
+	ASIC3_GPIO_REGISTER (BattFaultOut, battfaultout, fn, FN)	\

CHECK:CAMELCASE: Avoid CamelCase: <BattFaultOut>
#218: FILE: drivers/soc/asic3_base.c:128:
+	ASIC3_GPIO_REGISTER (BattFaultOut, battfaultout, fn, FN)	\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#219: FILE: drivers/soc/asic3_base.c:129:
+	ASIC3_GPIO_REGISTER (AltFunction, alt_fn, fn, FN)		\

CHECK:CAMELCASE: Avoid CamelCase: <AltFunction>
#219: FILE: drivers/soc/asic3_base.c:129:
+	ASIC3_GPIO_REGISTER (AltFunction, alt_fn, fn, FN)		\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#220: FILE: drivers/soc/asic3_base.c:130:
+	ASIC3_GPIO_REGISTER (SleepConf, sleepconf, fn, FN)		\

CHECK:CAMELCASE: Avoid CamelCase: <SleepConf>
#220: FILE: drivers/soc/asic3_base.c:130:
+	ASIC3_GPIO_REGISTER (SleepConf, sleepconf, fn, FN)		\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#221: FILE: drivers/soc/asic3_base.c:131:
+	ASIC3_GPIO_REGISTER (Status, status, fn, FN)

CHECK:CAMELCASE: Avoid CamelCase: <Status>
#221: FILE: drivers/soc/asic3_base.c:131:
+	ASIC3_GPIO_REGISTER (Status, status, fn, FN)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#228: FILE: drivers/soc/asic3_base.c:138:
+int asic3_gpio_get_value(struct device *dev, unsigned gpio)

WARNING:LINE_SPACING: Missing a blank line after declarations
#231: FILE: drivers/soc/asic3_base.c:141:
+	u32 mask = ASIC3_GPIO_bit(gpio);
+	printk("%s(%d)\n", __FUNCTION__, gpio);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#231: FILE: drivers/soc/asic3_base.c:141:
+	printk("%s(%d)\n", __FUNCTION__, gpio);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#231: FILE: drivers/soc/asic3_base.c:141:
+	printk("%s(%d)\n", __FUNCTION__, gpio);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#243: FILE: drivers/soc/asic3_base.c:153:
+	printk(KERN_ERR "%s: invalid GPIO value 0x%x", __FUNCTION__, gpio);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#243: FILE: drivers/soc/asic3_base.c:153:
+	printk(KERN_ERR "%s: invalid GPIO value 0x%x", __FUNCTION__, gpio);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#248: FILE: drivers/soc/asic3_base.c:158:
+void asic3_gpio_set_value(struct device *dev, unsigned gpio, int val)

WARNING:LINE_SPACING: Missing a blank line after declarations
#252: FILE: drivers/soc/asic3_base.c:162:
+	u32 bitval = 0;
+	if (val)  bitval = mask;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#252: FILE: drivers/soc/asic3_base.c:162:
+	if (val)  bitval = mask;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#253: FILE: drivers/soc/asic3_base.c:163:
+	printk("%s(%d, %d)\n", __FUNCTION__, gpio, val);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#253: FILE: drivers/soc/asic3_base.c:163:
+	printk("%s(%d, %d)\n", __FUNCTION__, gpio, val);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#270: FILE: drivers/soc/asic3_base.c:180:
+	printk(KERN_ERR "%s: invalid GPIO value 0x%x", __FUNCTION__, gpio);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#270: FILE: drivers/soc/asic3_base.c:180:
+	printk(KERN_ERR "%s: invalid GPIO value 0x%x", __FUNCTION__, gpio);

CHECK:CAMELCASE: Avoid CamelCase: <_IPAQ_ASIC3_LED_0_Base>
#294: FILE: drivers/soc/asic3_base.c:204:
+		led_base = _IPAQ_ASIC3_LED_0_Base;

CHECK:CAMELCASE: Avoid CamelCase: <_IPAQ_ASIC3_LED_1_Base>
#297: FILE: drivers/soc/asic3_base.c:207:
+		led_base = _IPAQ_ASIC3_LED_1_Base;

CHECK:CAMELCASE: Avoid CamelCase: <_IPAQ_ASIC3_LED_2_Base>
#300: FILE: drivers/soc/asic3_base.c:210:
+		led_base = _IPAQ_ASIC3_LED_2_Base;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#303: FILE: drivers/soc/asic3_base.c:213:
+		printk(KERN_ERR "%s: invalid led number %d", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#303: FILE: drivers/soc/asic3_base.c:213:
+		printk(KERN_ERR "%s: invalid led number %d", __FUNCTION__,

CHECK:CAMELCASE: Avoid CamelCase: <_IPAQ_ASIC3_LED_TimeBase>
#308: FILE: drivers/soc/asic3_base.c:218:
+	__asic3_write_register(asic, led_base + _IPAQ_ASIC3_LED_TimeBase,

CHECK:CAMELCASE: Avoid CamelCase: <_IPAQ_ASIC3_LED_PeriodTime>
#310: FILE: drivers/soc/asic3_base.c:220:
+	__asic3_write_register(asic, led_base + _IPAQ_ASIC3_LED_PeriodTime,

CHECK:CAMELCASE: Avoid CamelCase: <_IPAQ_ASIC3_LED_DutyTime>
#312: FILE: drivers/soc/asic3_base.c:222:
+	__asic3_write_register(asic, led_base + _IPAQ_ASIC3_LED_DutyTime,

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#314: FILE: drivers/soc/asic3_base.c:224:
+	udelay(20);     /* asic voodoo - possibly need a whole duty cycle? */

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#319: FILE: drivers/soc/asic3_base.c:229:
+EXPORT_SYMBOL(asic3_set_led);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#364: FILE: drivers/soc/asic3_base.c:274:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Select>
#461: FILE: drivers/soc/asic3_base.c:371:
+	v = __asic3_read_register(asic, IPAQ_ASIC3_OFFSET(EXTCF, Select));

CHECK:CAMELCASE: Avoid CamelCase: <Reset>
#475: FILE: drivers/soc/asic3_base.c:385:
+	v = __asic3_read_register(asic, IPAQ_ASIC3_OFFSET(EXTCF, Reset));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#488: FILE: drivers/soc/asic3_base.c:398:
+	spin_lock_irqsave (&asic3_gpio_lock, flags);

CHECK:CAMELCASE: Avoid CamelCase: <SDConf>
#489: FILE: drivers/soc/asic3_base.c:399:
+	v = __asic3_read_register(asic, IPAQ_ASIC3_OFFSET(SDHWCTRL, SDConf));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#496: FILE: drivers/soc/asic3_base.c:406:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <_IPAQ_ASIC3_GPIO_Base_INCR>
#498: FILE: drivers/soc/asic3_base.c:408:
+#define _IPAQ_ASIC3_GPIO_Base_INCR \

CHECK:CAMELCASE: Avoid CamelCase: <_IPAQ_ASIC3_GPIO_B_Base>
#499: FILE: drivers/soc/asic3_base.c:409:
+	(_IPAQ_ASIC3_GPIO_B_Base - _IPAQ_ASIC3_GPIO_A_Base)

CHECK:CAMELCASE: Avoid CamelCase: <_IPAQ_ASIC3_GPIO_A_Base>
#499: FILE: drivers/soc/asic3_base.c:409:
+	(_IPAQ_ASIC3_GPIO_B_Base - _IPAQ_ASIC3_GPIO_A_Base)

CHECK:CAMELCASE: Avoid CamelCase: <_IPAQ_ASIC3_GPIO_EdgeTrigger>
#505: FILE: drivers/soc/asic3_base.c:415:
+		base + _IPAQ_ASIC3_GPIO_EdgeTrigger);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#508: FILE: drivers/soc/asic3_base.c:418:
+	__asic3_write_register(asic,
+		base + _IPAQ_ASIC3_GPIO_EdgeTrigger, edge);

WARNING:TYPO_SPELLING: 'parrent' may be misspelled - perhaps 'parent'?
#516: FILE: drivers/soc/asic3_base.c:426:
+	/* Acknowledge the parrent (i.e. CPU's) IRQ */
 	                   ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#527: FILE: drivers/soc/asic3_base.c:437:
+		status = __asic3_read_register(asic,
+			IPAQ_ASIC3_OFFSET(INTR, PIntStat));

CHECK:CAMELCASE: Avoid CamelCase: <PIntStat>
#527: FILE: drivers/soc/asic3_base.c:437:
+			IPAQ_ASIC3_OFFSET(INTR, PIntStat));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#540: FILE: drivers/soc/asic3_base.c:450:
+				istat = __asic3_read_register(asic,
+					base + _IPAQ_ASIC3_GPIO_IntStatus);

CHECK:CAMELCASE: Avoid CamelCase: <_IPAQ_ASIC3_GPIO_IntStatus>
#540: FILE: drivers/soc/asic3_base.c:450:
+					base + _IPAQ_ASIC3_GPIO_IntStatus);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#544: FILE: drivers/soc/asic3_base.c:454:
+				__asic3_write_register(asic,
+					base + _IPAQ_ASIC3_GPIO_IntStatus, 0);

WARNING:LINE_SPACING: Missing a blank line after declarations
#549: FILE: drivers/soc/asic3_base.c:459:
+					unsigned int irqnr;
+					if (!(istat & bit))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#552: FILE: drivers/soc/asic3_base.c:462:
+^I^I^I^I^Iirqnr = asic->irq_base $

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#578: FILE: drivers/soc/asic3_base.c:488:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#581: FILE: drivers/soc/asic3_base.c:491:
+		printk(KERN_ERR "%s: interrupt processing overrun\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#582: FILE: drivers/soc/asic3_base.c:492:
+		       __FUNCTION__);

CHECK:CAMELCASE: Avoid CamelCase: <_IPAQ_ASIC3_GPIO_Mask>
#609: FILE: drivers/soc/asic3_base.c:519:
+	val = __asic3_read_register(asic, bank + _IPAQ_ASIC3_GPIO_Mask);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#621: FILE: drivers/soc/asic3_base.c:531:
+		printk(KERN_ERR "asic3_base: gpio mask attempt, irq %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#627: FILE: drivers/soc/asic3_base.c:537:
+	regval = __asic3_read_register(asic,
+		_IPAQ_ASIC3_INTR_Base + _IPAQ_ASIC3_INTR_IntMask);

CHECK:CAMELCASE: Avoid CamelCase: <_IPAQ_ASIC3_INTR_Base>
#627: FILE: drivers/soc/asic3_base.c:537:
+		_IPAQ_ASIC3_INTR_Base + _IPAQ_ASIC3_INTR_IntMask);

CHECK:CAMELCASE: Avoid CamelCase: <_IPAQ_ASIC3_INTR_IntMask>
#627: FILE: drivers/soc/asic3_base.c:537:
+		_IPAQ_ASIC3_INTR_Base + _IPAQ_ASIC3_INTR_IntMask);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#632: FILE: drivers/soc/asic3_base.c:542:
+		__asic3_write_register(asic,
+			_IPAQ_ASIC3_INTR_Base + _IPAQ_ASIC3_INTR_IntMask,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#637: FILE: drivers/soc/asic3_base.c:547:
+		__asic3_write_register(asic,
+			_IPAQ_ASIC3_INTR_Base + _IPAQ_ASIC3_INTR_IntMask,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#642: FILE: drivers/soc/asic3_base.c:552:
+		__asic3_write_register(asic,
+			_IPAQ_ASIC3_INTR_Base + _IPAQ_ASIC3_INTR_IntMask,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#647: FILE: drivers/soc/asic3_base.c:557:
+		__asic3_write_register(asic,
+			_IPAQ_ASIC3_INTR_Base + _IPAQ_ASIC3_INTR_IntMask,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#652: FILE: drivers/soc/asic3_base.c:562:
+		__asic3_write_register(asic,
+			_IPAQ_ASIC3_INTR_Base + _IPAQ_ASIC3_INTR_IntMask,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#657: FILE: drivers/soc/asic3_base.c:567:
+		__asic3_write_register(asic,
+			_IPAQ_ASIC3_INTR_Base + _IPAQ_ASIC3_INTR_IntMask,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#661: FILE: drivers/soc/asic3_base.c:571:
+		printk(KERN_ERR "asic3_base: bad non-gpio irq %d\n", irq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#688: FILE: drivers/soc/asic3_base.c:598:
+		printk(KERN_ERR "asic3_base: gpio unmask attempt, irq %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#694: FILE: drivers/soc/asic3_base.c:604:
+	regval = __asic3_read_register(asic,
+		_IPAQ_ASIC3_INTR_Base + _IPAQ_ASIC3_INTR_IntMask);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#699: FILE: drivers/soc/asic3_base.c:609:
+		__asic3_write_register(asic,
+			_IPAQ_ASIC3_INTR_Base + _IPAQ_ASIC3_INTR_IntMask,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#704: FILE: drivers/soc/asic3_base.c:614:
+		__asic3_write_register(asic,
+			_IPAQ_ASIC3_INTR_Base + _IPAQ_ASIC3_INTR_IntMask,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#709: FILE: drivers/soc/asic3_base.c:619:
+		__asic3_write_register(asic,
+			_IPAQ_ASIC3_INTR_Base + _IPAQ_ASIC3_INTR_IntMask,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#714: FILE: drivers/soc/asic3_base.c:624:
+		__asic3_write_register(asic,
+			_IPAQ_ASIC3_INTR_Base + _IPAQ_ASIC3_INTR_IntMask,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#719: FILE: drivers/soc/asic3_base.c:629:
+		__asic3_write_register(asic,
+			_IPAQ_ASIC3_INTR_Base + _IPAQ_ASIC3_INTR_IntMask,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#724: FILE: drivers/soc/asic3_base.c:634:
+		__asic3_write_register(asic,
+			_IPAQ_ASIC3_INTR_Base + _IPAQ_ASIC3_INTR_IntMask,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#728: FILE: drivers/soc/asic3_base.c:638:
+		printk(KERN_ERR "asic3_base: bad non-gpio irq %d\n", irq);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#742: FILE: drivers/soc/asic3_base.c:652:
+	bit = 1<<index;
 	       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#746: FILE: drivers/soc/asic3_base.c:656:
+	level = __asic3_read_register(asic,
+		bank + _IPAQ_ASIC3_GPIO_LevelTrigger);

CHECK:CAMELCASE: Avoid CamelCase: <_IPAQ_ASIC3_GPIO_LevelTrigger>
#746: FILE: drivers/soc/asic3_base.c:656:
+		bank + _IPAQ_ASIC3_GPIO_LevelTrigger);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#748: FILE: drivers/soc/asic3_base.c:658:
+	edge = __asic3_read_register(asic,
+		bank + _IPAQ_ASIC3_GPIO_EdgeTrigger);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#750: FILE: drivers/soc/asic3_base.c:660:
+	trigger = __asic3_read_register(asic,
+		bank + _IPAQ_ASIC3_GPIO_TriggerType);

CHECK:CAMELCASE: Avoid CamelCase: <_IPAQ_ASIC3_GPIO_TriggerType>
#750: FILE: drivers/soc/asic3_base.c:660:
+		bank + _IPAQ_ASIC3_GPIO_TriggerType);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#778: FILE: drivers/soc/asic3_base.c:688:
+		printk(KERN_NOTICE "asic3: irq type not changed.\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sdev"
#824: FILE: drivers/soc/asic3_base.c:734:
+	if (sdev == NULL || mmc_config == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mmc_config"
#824: FILE: drivers/soc/asic3_base.c:734:
+	if (sdev == NULL || mmc_config == NULL)

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#842: FILE: drivers/soc/asic3_base.c:752:
+	res = kzalloc(sdev->num_resources * sizeof(struct resource),
+		      GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!res"
#844: FILE: drivers/soc/asic3_base.c:754:
+	if (res == NULL) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#854: FILE: drivers/soc/asic3_base.c:764:
+	res[1].start = res[1].end = pdev->resource[3].start;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#859: FILE: drivers/soc/asic3_base.c:769:
+		printk(KERN_ERR "asic3_base: "

WARNING:SPLIT_STRING: quoted string split across lines
#860: FILE: drivers/soc/asic3_base.c:770:
+		printk(KERN_ERR "asic3_base: "
+		       "Could not register asic3_mmc device\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LINE_SPACING: Missing a blank line after declarations
#875: FILE: drivers/soc/asic3_base.c:785:
+	struct asic3_data *asic = dev->driver_data;
+	platform_device_unregister(asic->mmc_dev);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#884: FILE: drivers/soc/asic3_base.c:794:
+ * ^IDS1WM subdevice$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#893: FILE: drivers/soc/asic3_base.c:803:
+	asic3_set_clock_cdex(dev,
+		CLOCK_CDEX_EX0 | CLOCK_CDEX_EX1 | CLOCK_CDEX_OWM,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#906: FILE: drivers/soc/asic3_base.c:816:
+	asic3_set_extcf_select(dev,
+		ASIC3_EXTCF_OWM_SMB | ASIC3_EXTCF_OWM_EN,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#917: FILE: drivers/soc/asic3_base.c:827:
+	asic3_set_extcf_select(dev,
+		ASIC3_EXTCF_OWM_SMB | ASIC3_EXTCF_OWM_EN,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#921: FILE: drivers/soc/asic3_base.c:831:
+	asic3_set_clock_cdex(dev,
+		CLOCK_CDEX_EX0 | CLOCK_CDEX_EX1 | CLOCK_CDEX_OWM,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#925: FILE: drivers/soc/asic3_base.c:835:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <_IPAQ_ASIC3_OWM_Base>
#928: FILE: drivers/soc/asic3_base.c:838:
+		.start = _IPAQ_ASIC3_OWM_Base,

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*asic)...) over kzalloc(sizeof(struct asic3_data)...)
#965: FILE: drivers/soc/asic3_base.c:875:
+	asic = kzalloc(sizeof(struct asic3_data), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#969: FILE: drivers/soc/asic3_base.c:879:
+	spin_lock_init (&asic3_gpio_lock);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#975: FILE: drivers/soc/asic3_base.c:885:
+		printk(KERN_ERR "asic3: couldn't ioremap ASIC3\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#976: FILE: drivers/soc/asic3_base.c:886:
+		kfree (asic);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#993: FILE: drivers/soc/asic3_base.c:903:
+		printk(KERN_ERR "asic3: failed to register ASIC3 gclk\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#998: FILE: drivers/soc/asic3_base.c:908:
+			printk(KERN_ERR "asic3: "

WARNING:SPLIT_STRING: quoted string split across lines
#999: FILE: drivers/soc/asic3_base.c:909:
+			printk(KERN_ERR "asic3: "
+			       "failed to register clock %s (%d)\n",

CHECK:CAMELCASE: Avoid CamelCase: <Mask>
#1003: FILE: drivers/soc/asic3_base.c:913:
+	__asic3_write_register(asic, IPAQ_ASIC3_GPIO_OFFSET(A, Mask), 0xffff);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1080: FILE: drivers/soc/asic3_base.c:990:
+			printk(KERN_ERR "asic3: IRQ base not specified\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1092: FILE: drivers/soc/asic3_base.c:1002:
+		printk(KERN_INFO "asic3: using irq %d-%d on irq %d\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#1098: FILE: drivers/soc/asic3_base.c:1008:
+			int irq = i + asic->irq_base;
+			if (i < ASIC3_NR_GPIO_IRQS) {

CHECK:CAMELCASE: Avoid CamelCase: <IntMask>
#1112: FILE: drivers/soc/asic3_base.c:1022:
+		__asic3_write_register(asic, IPAQ_ASIC3_OFFSET(INTR, IntMask),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1113: FILE: drivers/soc/asic3_base.c:1023:
+		__asic3_write_register(asic, IPAQ_ASIC3_OFFSET(INTR, IntMask),
+					ASIC3_INTMASK_GINTMASK);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1131: FILE: drivers/soc/asic3_base.c:1041:
+		int rc;
+		rc = asic3_register_mmc(dev);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1153: FILE: drivers/soc/asic3_base.c:1063:
+			platform_device_unregister(

WARNING:LINE_SPACING: Missing a blank line after declarations
#1163: FILE: drivers/soc/asic3_base.c:1073:
+			int irq = i + asic->irq_base;
+			set_irq_flags(irq, 0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1165: FILE: drivers/soc/asic3_base.c:1075:
+			set_irq_chip (irq, NULL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1200: FILE: drivers/soc/asic3_base.c:1110:
+	struct asic3_data *asic = platform_get_drvdata(pdev);
+	suspend_cdex = __asic3_read_register(asic,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1201: FILE: drivers/soc/asic3_base.c:1111:
+	suspend_cdex = __asic3_read_register(asic,
+		_IPAQ_ASIC3_CLOCK_Base + _IPAQ_ASIC3_CLOCK_CDEX);

CHECK:CAMELCASE: Avoid CamelCase: <_IPAQ_ASIC3_CLOCK_Base>
#1201: FILE: drivers/soc/asic3_base.c:1111:
+		_IPAQ_ASIC3_CLOCK_Base + _IPAQ_ASIC3_CLOCK_CDEX);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1204: FILE: drivers/soc/asic3_base.c:1114:
+	__asic3_write_register(asic,
+		_IPAQ_ASIC3_CLOCK_Base + _IPAQ_ASIC3_CLOCK_CDEX,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1221: FILE: drivers/soc/asic3_base.c:1131:
+		 * subject "asic3 suspend / resume". */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1223: FILE: drivers/soc/asic3_base.c:1133:
+		intmask = __asic3_read_register(asic,
+				IPAQ_ASIC3_OFFSET(INTR, IntMask));

WARNING:LINE_SPACING: Missing a blank line after declarations
#1248: FILE: drivers/soc/asic3_base.c:1158:
+	int retval = 0;
+	retval = platform_driver_register(&asic3_device_driver);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1274: FILE: include/linux/soc/asic3_base.h:1:
+#include <asm/types.h>

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1277: FILE: include/linux/soc/asic3_base.h:4:
+#define HDR_IPAQ_ASIC3_ACTION(ACTION,action,fn,FN)                  \
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1277: FILE: include/linux/soc/asic3_base.h:4:
+#define HDR_IPAQ_ASIC3_ACTION(ACTION,action,fn,FN)                  \
                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1277: FILE: include/linux/soc/asic3_base.h:4:
+#define HDR_IPAQ_ASIC3_ACTION(ACTION,action,fn,FN)                  \
                                               ^

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1277: FILE: include/linux/soc/asic3_base.h:4:
+#define HDR_IPAQ_ASIC3_ACTION(ACTION,action,fn,FN)                  \
+u32  asic3_get_gpio_ ## action ## _ ## fn (struct device *dev);      \
+void asic3_set_gpio_ ## action ## _ ## fn (struct device *dev, u32 bits, u32 val);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1278: FILE: include/linux/soc/asic3_base.h:5:
+u32  asic3_get_gpio_ ## action ## _ ## fn (struct device *dev);      \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1279: FILE: include/linux/soc/asic3_base.h:6:
+void asic3_set_gpio_ ## action ## _ ## fn (struct device *dev, u32 bits, u32 val);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1281: FILE: include/linux/soc/asic3_base.h:8:
+#define HDR_IPAQ_ASIC3_FN(fn,FN)					\
                             ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1281: FILE: include/linux/soc/asic3_base.h:8:
+#define HDR_IPAQ_ASIC3_FN(fn,FN)					\
+	HDR_IPAQ_ASIC3_ACTION ( MASK,mask,fn,FN)			\
+	HDR_IPAQ_ASIC3_ACTION ( DIR, dir, fn, FN)			\
+	HDR_IPAQ_ASIC3_ACTION ( OUT, out, fn, FN)			\
+	HDR_IPAQ_ASIC3_ACTION ( LEVELTRI, trigtype, fn, FN)		\
+	HDR_IPAQ_ASIC3_ACTION ( RISING, rising, fn, FN)			\
+	HDR_IPAQ_ASIC3_ACTION ( LEVEL, triglevel, fn, FN)		\
+	HDR_IPAQ_ASIC3_ACTION ( SLEEP_MASK, sleepmask, fn, FN)		\
+	HDR_IPAQ_ASIC3_ACTION ( SLEEP_OUT, sleepout, fn, FN)		\
+	HDR_IPAQ_ASIC3_ACTION ( BATT_FAULT_OUT, battfaultout, fn, FN)	\
+	HDR_IPAQ_ASIC3_ACTION ( INT_STATUS, intstatus, fn, FN)		\
+	HDR_IPAQ_ASIC3_ACTION ( ALT_FUNCTION, alt_fn, fn, FN)		\
+	HDR_IPAQ_ASIC3_ACTION ( SLEEP_CONF, sleepconf, fn, FN)		\
+	HDR_IPAQ_ASIC3_ACTION ( STATUS, status, fn, FN) 

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'fn' - possible side-effects?
#1281: FILE: include/linux/soc/asic3_base.h:8:
+#define HDR_IPAQ_ASIC3_FN(fn,FN)					\
+	HDR_IPAQ_ASIC3_ACTION ( MASK,mask,fn,FN)			\
+	HDR_IPAQ_ASIC3_ACTION ( DIR, dir, fn, FN)			\
+	HDR_IPAQ_ASIC3_ACTION ( OUT, out, fn, FN)			\
+	HDR_IPAQ_ASIC3_ACTION ( LEVELTRI, trigtype, fn, FN)		\
+	HDR_IPAQ_ASIC3_ACTION ( RISING, rising, fn, FN)			\
+	HDR_IPAQ_ASIC3_ACTION ( LEVEL, triglevel, fn, FN)		\
+	HDR_IPAQ_ASIC3_ACTION ( SLEEP_MASK, sleepmask, fn, FN)		\
+	HDR_IPAQ_ASIC3_ACTION ( SLEEP_OUT, sleepout, fn, FN)		\
+	HDR_IPAQ_ASIC3_ACTION ( BATT_FAULT_OUT, battfaultout, fn, FN)	\
+	HDR_IPAQ_ASIC3_ACTION ( INT_STATUS, intstatus, fn, FN)		\
+	HDR_IPAQ_ASIC3_ACTION ( ALT_FUNCTION, alt_fn, fn, FN)		\
+	HDR_IPAQ_ASIC3_ACTION ( SLEEP_CONF, sleepconf, fn, FN)		\
+	HDR_IPAQ_ASIC3_ACTION ( STATUS, status, fn, FN) 

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'FN' - possible side-effects?
#1281: FILE: include/linux/soc/asic3_base.h:8:
+#define HDR_IPAQ_ASIC3_FN(fn,FN)					\
+	HDR_IPAQ_ASIC3_ACTION ( MASK,mask,fn,FN)			\
+	HDR_IPAQ_ASIC3_ACTION ( DIR, dir, fn, FN)			\
+	HDR_IPAQ_ASIC3_ACTION ( OUT, out, fn, FN)			\
+	HDR_IPAQ_ASIC3_ACTION ( LEVELTRI, trigtype, fn, FN)		\
+	HDR_IPAQ_ASIC3_ACTION ( RISING, rising, fn, FN)			\
+	HDR_IPAQ_ASIC3_ACTION ( LEVEL, triglevel, fn, FN)		\
+	HDR_IPAQ_ASIC3_ACTION ( SLEEP_MASK, sleepmask, fn, FN)		\
+	HDR_IPAQ_ASIC3_ACTION ( SLEEP_OUT, sleepout, fn, FN)		\
+	HDR_IPAQ_ASIC3_ACTION ( BATT_FAULT_OUT, battfaultout, fn, FN)	\
+	HDR_IPAQ_ASIC3_ACTION ( INT_STATUS, intstatus, fn, FN)		\
+	HDR_IPAQ_ASIC3_ACTION ( ALT_FUNCTION, alt_fn, fn, FN)		\
+	HDR_IPAQ_ASIC3_ACTION ( SLEEP_CONF, sleepconf, fn, FN)		\
+	HDR_IPAQ_ASIC3_ACTION ( STATUS, status, fn, FN) 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1282: FILE: include/linux/soc/asic3_base.h:9:
+	HDR_IPAQ_ASIC3_ACTION ( MASK,mask,fn,FN)			\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1282: FILE: include/linux/soc/asic3_base.h:9:
+	HDR_IPAQ_ASIC3_ACTION ( MASK,mask,fn,FN)			\
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1282: FILE: include/linux/soc/asic3_base.h:9:
+	HDR_IPAQ_ASIC3_ACTION ( MASK,mask,fn,FN)			\
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1282: FILE: include/linux/soc/asic3_base.h:9:
+	HDR_IPAQ_ASIC3_ACTION ( MASK,mask,fn,FN)			\
 	                                    ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1282: FILE: include/linux/soc/asic3_base.h:9:
+	HDR_IPAQ_ASIC3_ACTION ( MASK,mask,fn,FN)			\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1283: FILE: include/linux/soc/asic3_base.h:10:
+	HDR_IPAQ_ASIC3_ACTION ( DIR, dir, fn, FN)			\

ERROR:SPACING: space prohibited after that open parenthesis '('
#1283: FILE: include/linux/soc/asic3_base.h:10:
+	HDR_IPAQ_ASIC3_ACTION ( DIR, dir, fn, FN)			\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1284: FILE: include/linux/soc/asic3_base.h:11:
+	HDR_IPAQ_ASIC3_ACTION ( OUT, out, fn, FN)			\

ERROR:SPACING: space prohibited after that open parenthesis '('
#1284: FILE: include/linux/soc/asic3_base.h:11:
+	HDR_IPAQ_ASIC3_ACTION ( OUT, out, fn, FN)			\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1285: FILE: include/linux/soc/asic3_base.h:12:
+	HDR_IPAQ_ASIC3_ACTION ( LEVELTRI, trigtype, fn, FN)		\

ERROR:SPACING: space prohibited after that open parenthesis '('
#1285: FILE: include/linux/soc/asic3_base.h:12:
+	HDR_IPAQ_ASIC3_ACTION ( LEVELTRI, trigtype, fn, FN)		\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1286: FILE: include/linux/soc/asic3_base.h:13:
+	HDR_IPAQ_ASIC3_ACTION ( RISING, rising, fn, FN)			\

ERROR:SPACING: space prohibited after that open parenthesis '('
#1286: FILE: include/linux/soc/asic3_base.h:13:
+	HDR_IPAQ_ASIC3_ACTION ( RISING, rising, fn, FN)			\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1287: FILE: include/linux/soc/asic3_base.h:14:
+	HDR_IPAQ_ASIC3_ACTION ( LEVEL, triglevel, fn, FN)		\

ERROR:SPACING: space prohibited after that open parenthesis '('
#1287: FILE: include/linux/soc/asic3_base.h:14:
+	HDR_IPAQ_ASIC3_ACTION ( LEVEL, triglevel, fn, FN)		\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1288: FILE: include/linux/soc/asic3_base.h:15:
+	HDR_IPAQ_ASIC3_ACTION ( SLEEP_MASK, sleepmask, fn, FN)		\

ERROR:SPACING: space prohibited after that open parenthesis '('
#1288: FILE: include/linux/soc/asic3_base.h:15:
+	HDR_IPAQ_ASIC3_ACTION ( SLEEP_MASK, sleepmask, fn, FN)		\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1289: FILE: include/linux/soc/asic3_base.h:16:
+	HDR_IPAQ_ASIC3_ACTION ( SLEEP_OUT, sleepout, fn, FN)		\

ERROR:SPACING: space prohibited after that open parenthesis '('
#1289: FILE: include/linux/soc/asic3_base.h:16:
+	HDR_IPAQ_ASIC3_ACTION ( SLEEP_OUT, sleepout, fn, FN)		\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1290: FILE: include/linux/soc/asic3_base.h:17:
+	HDR_IPAQ_ASIC3_ACTION ( BATT_FAULT_OUT, battfaultout, fn, FN)	\

ERROR:SPACING: space prohibited after that open parenthesis '('
#1290: FILE: include/linux/soc/asic3_base.h:17:
+	HDR_IPAQ_ASIC3_ACTION ( BATT_FAULT_OUT, battfaultout, fn, FN)	\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1291: FILE: include/linux/soc/asic3_base.h:18:
+	HDR_IPAQ_ASIC3_ACTION ( INT_STATUS, intstatus, fn, FN)		\

ERROR:SPACING: space prohibited after that open parenthesis '('
#1291: FILE: include/linux/soc/asic3_base.h:18:
+	HDR_IPAQ_ASIC3_ACTION ( INT_STATUS, intstatus, fn, FN)		\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1292: FILE: include/linux/soc/asic3_base.h:19:
+	HDR_IPAQ_ASIC3_ACTION ( ALT_FUNCTION, alt_fn, fn, FN)		\

ERROR:SPACING: space prohibited after that open parenthesis '('
#1292: FILE: include/linux/soc/asic3_base.h:19:
+	HDR_IPAQ_ASIC3_ACTION ( ALT_FUNCTION, alt_fn, fn, FN)		\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1293: FILE: include/linux/soc/asic3_base.h:20:
+	HDR_IPAQ_ASIC3_ACTION ( SLEEP_CONF, sleepconf, fn, FN)		\

ERROR:SPACING: space prohibited after that open parenthesis '('
#1293: FILE: include/linux/soc/asic3_base.h:20:
+	HDR_IPAQ_ASIC3_ACTION ( SLEEP_CONF, sleepconf, fn, FN)		\

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1294: FILE: include/linux/soc/asic3_base.h:21:
+^IHDR_IPAQ_ASIC3_ACTION ( STATUS, status, fn, FN) $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1294: FILE: include/linux/soc/asic3_base.h:21:
+	HDR_IPAQ_ASIC3_ACTION ( STATUS, status, fn, FN) 

ERROR:SPACING: space prohibited after that open parenthesis '('
#1294: FILE: include/linux/soc/asic3_base.h:21:
+	HDR_IPAQ_ASIC3_ACTION ( STATUS, status, fn, FN) 

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1312: FILE: include/linux/soc/asic3_base.h:39:
+extern int asic3_irq_base(struct device *dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1314: FILE: include/linux/soc/asic3_base.h:41:
+extern void asic3_write_register(struct device *dev, unsigned int reg, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1314: FILE: include/linux/soc/asic3_base.h:41:
+extern void asic3_write_register(struct device *dev, unsigned int reg, 

ERROR:CODE_INDENT: code indent should use tabs where possible
#1315: FILE: include/linux/soc/asic3_base.h:42:
+                                 u32 value);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1315: FILE: include/linux/soc/asic3_base.h:42:
+                                 u32 value);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1316: FILE: include/linux/soc/asic3_base.h:43:
+extern u32  asic3_read_register(struct device *dev, unsigned int reg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1319: FILE: include/linux/soc/asic3_base.h:46:
+extern void asic3_set_clock_sel(struct device *dev, u32 bits, u32 val);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1320: FILE: include/linux/soc/asic3_base.h:47:
+extern u32  asic3_get_clock_cdex(struct device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1321: FILE: include/linux/soc/asic3_base.h:48:
+extern void asic3_set_clock_cdex(struct device *dev, u32 bits, u32 val);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1323: FILE: include/linux/soc/asic3_base.h:50:
+extern void asic3_set_extcf_select(struct device *dev, u32 bits, u32 val);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1324: FILE: include/linux/soc/asic3_base.h:51:
+extern void asic3_set_extcf_reset(struct device *dev, u32 bits, u32 val);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1325: FILE: include/linux/soc/asic3_base.h:52:
+extern void asic3_set_sdhwctrl(struct device *dev, u32 bits, u32 val);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1327: FILE: include/linux/soc/asic3_base.h:54:
+extern void asic3_set_led(struct device *dev, int led_num, int duty_time, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1327: FILE: include/linux/soc/asic3_base.h:54:
+extern void asic3_set_led(struct device *dev, int led_num, int duty_time, 

ERROR:CODE_INDENT: code indent should use tabs where possible
#1328: FILE: include/linux/soc/asic3_base.h:55:
+                          int cycle_time, int timebase);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1328: FILE: include/linux/soc/asic3_base.h:55:
+                          int cycle_time, int timebase);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1330: FILE: include/linux/soc/asic3_base.h:57:
+extern int asic3_register_mmc(struct device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1331: FILE: include/linux/soc/asic3_base.h:58:
+extern int asic3_unregister_mmc(struct device *dev);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'gpio' may be better as '(gpio)' to avoid precedence issues
#1344: FILE: include/linux/soc/asic3_base.h:71:
+#define ASIC3_GPIO_bit(gpio) (1 << (gpio & 0xf))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1346: FILE: include/linux/soc/asic3_base.h:73:
+extern int asic3_get_gpio_bit(struct device *dev, int gpio);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1347: FILE: include/linux/soc/asic3_base.h:74:
+extern void asic3_set_gpio_bit(struct device *dev, int gpio, int val);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1348: FILE: include/linux/soc/asic3_base.h:75:
+extern int asic3_gpio_get_value(struct device *dev, unsigned gpio);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1348: FILE: include/linux/soc/asic3_base.h:75:
+extern int asic3_gpio_get_value(struct device *dev, unsigned gpio);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1349: FILE: include/linux/soc/asic3_base.h:76:
+extern void asic3_gpio_set_value(struct device *dev, unsigned gpio, int val);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1349: FILE: include/linux/soc/asic3_base.h:76:
+extern void asic3_gpio_set_value(struct device *dev, unsigned gpio, int val);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1351: FILE: include/linux/soc/asic3_base.h:78:
+
+

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1355: FILE: include/linux/soc/asic3_base.h:82:
+struct asic3_platform_data
+{

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1380: FILE: include/linux/soc/tmio_mmc.h:1:
+#include <linux/platform_device.h>

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1385: FILE: include/linux/soc/tmio_mmc.h:6:
+#define TMIO_WP_ALWAYS_RW ((void*)-1)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1391: FILE: include/linux/soc/tmio_mmc.h:12:
+^I/* NULL - use ASIC3 signal, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1392: FILE: include/linux/soc/tmio_mmc.h:13:
+^I   TMIO_WP_ALWAYS_RW - assume always R/W (e.g. miniSD) $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1392: FILE: include/linux/soc/tmio_mmc.h:13:
+	/* NULL - use ASIC3 signal, 
+	   TMIO_WP_ALWAYS_RW - assume always R/W (e.g. miniSD) 

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1393: FILE: include/linux/soc/tmio_mmc.h:14:
+	   otherwise - machine-specific handler */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000437900.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 39 errors, 87 warnings, 99 checks, 1321 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000437900.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
