WARNING:TYPO_SPELLING: 'mmaped' may be misspelled - perhaps 'mapped'?
#49: 
    check will not work correctly.  To avoid this failure for mmaped
                                                              ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#90: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#95: FILE: fs/nilfs2/page.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#111: FILE: fs/nilfs2/page.c:17:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#112: FILE: fs/nilfs2/page.c:18:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#130: FILE: fs/nilfs2/page.c:36:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "mapping->assoc_mapping"
#187: FILE: fs/nilfs2/page.c:93:
+	if (!buffer_uptodate(bh) && mapping->assoc_mapping != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#287: FILE: fs/nilfs2/page.c:193:
+	bh = head = page_buffers(page);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#302: FILE: fs/nilfs2/page.c:208:
+		printk(KERN_CRIT "NILFS_PAGE_BUG(NULL)\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#309: FILE: fs/nilfs2/page.c:215:
+		struct inode *inode = NILFS_AS_I(m);
+		if (inode != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "inode"
#309: FILE: fs/nilfs2/page.c:215:
+		if (inode != NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#312: FILE: fs/nilfs2/page.c:218:
+	printk(KERN_CRIT "NILFS_PAGE_BUG(%p): cnt=%d index#=%llu flags=0x%lx "

WARNING:SPLIT_STRING: quoted string split across lines
#313: FILE: fs/nilfs2/page.c:219:
+	printk(KERN_CRIT "NILFS_PAGE_BUG(%p): cnt=%d index#=%llu flags=0x%lx "
+	       "mapping=%p ino=%lu\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#321: FILE: fs/nilfs2/page.c:227:
+		bh = head = page_buffers(page);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#323: FILE: fs/nilfs2/page.c:229:
+			printk(KERN_CRIT

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#372: FILE: fs/nilfs2/page.c:278:
+	BUG_ON(!PageLocked(page));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#373: FILE: fs/nilfs2/page.c:279:
+	BUG_ON(page->mapping);

WARNING:TYPO_SPELLING: 'fuction' may be misspelled - perhaps 'function'?
#388: FILE: fs/nilfs2/page.c:294:
+ * This fuction is for both data pages and btnode pages.  The dirty flag
         ^^^^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#397: FILE: fs/nilfs2/page.c:303:
+	BUG_ON(PageWriteback(dst));

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#399: FILE: fs/nilfs2/page.c:305:
+	sbh = sbufs = page_buffers(src);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#406: FILE: fs/nilfs2/page.c:312:
+	dbh = dbufs = page_buffers(dst);

WARNING:TYPO_SPELLING: 'orignal' may be misspelled - perhaps 'original'?
#484: FILE: fs/nilfs2/page.c:390:
+ * nilfs_copy_back_pages -- copy back pages to orignal cache from shadow cache
                                                ^^^^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#514: FILE: fs/nilfs2/page.c:420:
+			BUG_ON(PageDirty(dpage));

WARNING:SPLIT_STRING: quoted string split across lines
#526: FILE: fs/nilfs2/page.c:432:
+				NILFS_PAGE_BUG(page, "page removal failed "
+					       "(offset=%lu, page2=%p)",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#534: FILE: fs/nilfs2/page.c:440:
+				BUG_ON(err == -EEXIST);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#572: FILE: fs/nilfs2/page.c:478:
+			bh = head = page_buffers(page);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#591: FILE: fs/nilfs2/page.c:497:
+unsigned nilfs_page_count_clean_buffers(struct page *page,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#592: FILE: fs/nilfs2/page.c:498:
+					unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#592: FILE: fs/nilfs2/page.c:498:
+					unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#594: FILE: fs/nilfs2/page.c:500:
+	unsigned block_start, block_end;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#596: FILE: fs/nilfs2/page.c:502:
+	unsigned nc = 0;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#643: FILE: fs/nilfs2/page.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#659: FILE: fs/nilfs2/page.h:17:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#660: FILE: fs/nilfs2/page.h:18:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#685: FILE: fs/nilfs2/page.h:43:
+
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#687: FILE: fs/nilfs2/page.h:45:
+int __nilfs_clear_page_dirty(struct page *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#689: FILE: fs/nilfs2/page.h:47:
+struct buffer_head *nilfs_grab_buffer(struct inode *, struct address_space *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct address_space *' should also have an identifier name
#689: FILE: fs/nilfs2/page.h:47:
+struct buffer_head *nilfs_grab_buffer(struct inode *, struct address_space *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#689: FILE: fs/nilfs2/page.h:47:
+struct buffer_head *nilfs_grab_buffer(struct inode *, struct address_space *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#689: FILE: fs/nilfs2/page.h:47:
+struct buffer_head *nilfs_grab_buffer(struct inode *, struct address_space *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct buffer_head *' should also have an identifier name
#691: FILE: fs/nilfs2/page.h:49:
+void nilfs_forget_buffer(struct buffer_head *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct buffer_head *' should also have an identifier name
#692: FILE: fs/nilfs2/page.h:50:
+void nilfs_copy_buffer(struct buffer_head *, struct buffer_head *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct buffer_head *' should also have an identifier name
#692: FILE: fs/nilfs2/page.h:50:
+void nilfs_copy_buffer(struct buffer_head *, struct buffer_head *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#693: FILE: fs/nilfs2/page.h:51:
+int nilfs_page_buffers_clean(struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#694: FILE: fs/nilfs2/page.h:52:
+void nilfs_page_bug(struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct block_device *' should also have an identifier name
#695: FILE: fs/nilfs2/page.h:53:
+struct page *nilfs_alloc_private_page(struct block_device *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#695: FILE: fs/nilfs2/page.h:53:
+struct page *nilfs_alloc_private_page(struct block_device *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#695: FILE: fs/nilfs2/page.h:53:
+struct page *nilfs_alloc_private_page(struct block_device *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#697: FILE: fs/nilfs2/page.h:55:
+void nilfs_free_private_page(struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct address_space *' should also have an identifier name
#699: FILE: fs/nilfs2/page.h:57:
+int nilfs_copy_dirty_pages(struct address_space *, struct address_space *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct address_space *' should also have an identifier name
#699: FILE: fs/nilfs2/page.h:57:
+int nilfs_copy_dirty_pages(struct address_space *, struct address_space *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct address_space *' should also have an identifier name
#700: FILE: fs/nilfs2/page.h:58:
+void nilfs_copy_back_pages(struct address_space *, struct address_space *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct address_space *' should also have an identifier name
#700: FILE: fs/nilfs2/page.h:58:
+void nilfs_copy_back_pages(struct address_space *, struct address_space *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct address_space *' should also have an identifier name
#701: FILE: fs/nilfs2/page.h:59:
+void nilfs_clear_dirty_pages(struct address_space *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#702: FILE: fs/nilfs2/page.h:60:
+unsigned nilfs_page_count_clean_buffers(struct page *, unsigned, unsigned);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#702: FILE: fs/nilfs2/page.h:60:
+unsigned nilfs_page_count_clean_buffers(struct page *, unsigned, unsigned);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#702: FILE: fs/nilfs2/page.h:60:
+unsigned nilfs_page_count_clean_buffers(struct page *, unsigned, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#702: FILE: fs/nilfs2/page.h:60:
+unsigned nilfs_page_count_clean_buffers(struct page *, unsigned, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#702: FILE: fs/nilfs2/page.h:60:
+unsigned nilfs_page_count_clean_buffers(struct page *, unsigned, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#702: FILE: fs/nilfs2/page.h:60:
+unsigned nilfs_page_count_clean_buffers(struct page *, unsigned, unsigned);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#705: FILE: fs/nilfs2/page.h:63:
+	do { nilfs_page_bug(page); BUG(); } while (0)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000228155.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 48 warnings, 9 checks, 618 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000228155.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
