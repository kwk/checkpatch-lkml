ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: kernel/fork.c:1072:
+ ^I^Igoto bad_fork_cleanup_container;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#99: FILE: kernel/fork.c:1072:
+ ^I^Igoto bad_fork_cleanup_container;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: kernel/fork.c:1072:
+ ^I^Igoto bad_fork_cleanup_container;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#109: FILE: kernel/fork.c:1184:
+	 * on the tasklist. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#136: FILE: include/linux/container.h:21:
+extern void container_fork(struct task_struct *p);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#137: FILE: include/linux/container.h:22:
+extern void container_fork_callbacks(struct task_struct *p);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#138: FILE: include/linux/container.h:23:
+extern void container_exit(struct task_struct *p, int run_callbacks);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#174: FILE: kernel/container.c:149:
+static void get_css_group(struct css_group *cg) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#176: FILE: kernel/container.c:151:
+	int i;
+	for (i = 0; i < CONTAINER_SUBSYS_COUNT; i++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#176: FILE: kernel/container.c:151:
+	for (i = 0; i < CONTAINER_SUBSYS_COUNT; i++) {
+		atomic_inc(&cg->subsys[i]->container->count);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#181: FILE: kernel/container.c:156:
+static void put_css_group(struct css_group *cg) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#183: FILE: kernel/container.c:158:
+	int i;
+	for (i = 0; i < CONTAINER_SUBSYS_COUNT; i++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#183: FILE: kernel/container.c:158:
+	for (i = 0; i < CONTAINER_SUBSYS_COUNT; i++) {
+		atomic_dec(&cg->subsys[i]->container->count);
+	}

WARNING:LINE_SPACING: Missing a blank line after declarations
#231: FILE: kernel/container.c:1560:
+		int i;
+		for (i = 0; i < CONTAINER_SUBSYS_COUNT; i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#233: FILE: kernel/container.c:1562:
+			struct container_subsys *ss = subsys[i];
+			if (ss->fork) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#233: FILE: kernel/container.c:1562:
+			if (ss->fork) {
+				ss->fork(ss, child);
+			}

WARNING:LINE_SPACING: Missing a blank line after declarations
#279: FILE: kernel/container.c:1608:
+	int i;
+	if (run_callbacks && need_forkexit_callback) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#282: FILE: kernel/container.c:1611:
+			struct container_subsys *ss = subsys[i];
+			if (ss->exit) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#282: FILE: kernel/container.c:1611:
+			if (ss->exit) {
+				ss->exit(ss, tsk);
+			}

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000440024.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 13 warnings, 3 checks, 218 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000440024.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
