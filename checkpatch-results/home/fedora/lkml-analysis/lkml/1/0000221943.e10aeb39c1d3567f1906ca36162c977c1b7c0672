WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#59: FILE: drivers/net/wan/retina.c:46:
+static char fepci_name[] = "retina";

CHECK:CAMELCASE: Avoid CamelCase: <MaskFrameReceived>
#90: FILE: drivers/net/wan/retina.c:210:
+	MaskFrameReceived = 0x01,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <MaskRxFifoError>
#91: FILE: drivers/net/wan/retina.c:211:
+	MaskRxFifoError = 0x02,

CHECK:CAMELCASE: Avoid CamelCase: <MaskRxFrameDroppedError>
#92: FILE: drivers/net/wan/retina.c:212:
+	MaskRxFrameDroppedError = 0x04,

CHECK:CAMELCASE: Avoid CamelCase: <MaskFrameTransmitted>
#93: FILE: drivers/net/wan/retina.c:213:
+	MaskFrameTransmitted = 0x40,

CHECK:CAMELCASE: Avoid CamelCase: <MaskTxFifoError>
#94: FILE: drivers/net/wan/retina.c:214:
+	MaskTxFifoError = 0x80,

CHECK:CAMELCASE: Avoid CamelCase: <IntrFrameReceived>
#99: FILE: drivers/net/wan/retina.c:216:
+	IntrFrameReceived = 0x01,

CHECK:CAMELCASE: Avoid CamelCase: <IntrRxFifoError>
#100: FILE: drivers/net/wan/retina.c:217:
+	IntrRxFifoError = 0x02,

CHECK:CAMELCASE: Avoid CamelCase: <IntrRxFrameDroppedError>
#101: FILE: drivers/net/wan/retina.c:218:
+	IntrRxFrameDroppedError = 0x04,

CHECK:CAMELCASE: Avoid CamelCase: <IntrFrameTransmitted>
#102: FILE: drivers/net/wan/retina.c:219:
+	IntrFrameTransmitted = 0x40,

CHECK:CAMELCASE: Avoid CamelCase: <IntrTxFifoError>
#103: FILE: drivers/net/wan/retina.c:220:
+	IntrTxFifoError = 0x80,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#132: FILE: drivers/net/wan/retina.c:254:
+	const unsigned shift = 8u * channel;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#212: FILE: drivers/net/wan/retina.c:417:
+	vma->vm_file = filp;
 	               ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#230: FILE: drivers/net/wan/retina.c:433:
+		unsigned int w;
+		for (w = 0u; w < len; w += 2) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#231: FILE: drivers/net/wan/retina.c:434:
+			uint32_t longword = readl_relaxed(from + w / 2u *

WARNING:LINE_SPACING: Missing a blank line after declarations
#251: FILE: drivers/net/wan/retina.c:449:
+		unsigned int w;
+		for (w = 0u; w < len; w += 4u) {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#252: FILE: drivers/net/wan/retina.c:450:
+			uint32_t longword = readl_relaxed(from + w);

WARNING:LINE_SPACING: Missing a blank line after declarations
#266: FILE: drivers/net/wan/retina.c:465:
+		unsigned int w;
+		for (w = 0u; w < len; w += 2u) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#288: FILE: drivers/net/wan/retina.c:482:
+		unsigned int w;
+		for (w = 0u; w < len; w += 4u) {

CHECK:CAMELCASE: Avoid CamelCase: <Semafore_Mail_number>
#308: FILE: drivers/net/wan/retina.c:497:
+	return readb_relaxed(&mailbox->Semafore_Mail_number);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fp->tx_buffer"
#618: FILE: drivers/net/wan/retina.c:902:
+	if (unlikely(fp->tx_buffer == NULL))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fp->rx_buffer"
#623: FILE: drivers/net/wan/retina.c:905:
+	if (unlikely(fp->rx_buffer == NULL)) {

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#644: FILE: drivers/net/wan/retina.c:918:
+	*USER_RX_S_POINTER(cp->card_number, fp->channel_number, stream_pointers)
+		= 0ul;

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#646: FILE: drivers/net/wan/retina.c:920:
+	*USER_TX_S_POINTER(cp->card_number, fp->channel_number, stream_pointers)
+		= 0ul;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#728: FILE: drivers/net/wan/retina.c:1043:
+	unsigned d = min(RX_RING_SIZE, TX_RING_SIZE) - 1;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#742: FILE: drivers/net/wan/retina.c:1058:
+		if (likely(!pci_dma_mapping_error(cp->pci_dev,
+					pci_unmap_addr(fp->rx + d, address))))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#751: FILE: drivers/net/wan/retina.c:1064:
+		if (likely(!pci_dma_mapping_error(cp->pci_dev,
+					pci_unmap_addr(fp->tx + d, address))))

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'fp->this_card_priv->pci_dev'
#850: FILE: drivers/net/wan/retina.c:1167:
+			if (likely(!pci_dma_mapping_error(fp->this_card_priv->
+									pci_dev,

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'fp->this_card_priv->pci_dev'
#924: FILE: drivers/net/wan/retina.c:1233:
+			if (likely(!pci_dma_mapping_error(fp->this_card_priv->
+									pci_dev,

CHECK:CAMELCASE: Avoid CamelCase: <Data>
#1015: FILE: drivers/net/wan/retina.c:1407:
+			u32 __iomem *data = real_mailbox->Data + 3u * j;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1067: FILE: drivers/net/wan/retina.c:1468:
+	unsigned d;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#1074: FILE: drivers/net/wan/retina.c:1475:
+		if (unlikely(skb == NULL)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1080: FILE: drivers/net/wan/retina.c:1481:
+			dma_addr_t bus_address;
+			skb_reserve(skb, NET_IP_ALIGN);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1083: FILE: drivers/net/wan/retina.c:1484:
+				pci_map_single(fp->this_card_priv->pci_dev,
+						skb->data, RETINA_MRU,

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'fp->this_card_priv->pci_dev'
#1086: FILE: drivers/net/wan/retina.c:1487:
+			if (likely(!pci_dma_mapping_error(fp->this_card_priv->
+									pci_dev,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1232: FILE: drivers/net/wan/retina.c:1648:
+	unsigned d = 0u;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1271: FILE: drivers/net/wan/retina.c:1672:
+		unsigned next = fp->cur_tx;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1272: FILE: drivers/net/wan/retina.c:1673:
+		unsigned next = fp->cur_tx;
+		if (netif_queue_stopped(dev) &&

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fp->tx[next].skbuff"
#1273: FILE: drivers/net/wan/retina.c:1674:
+		    fp->tx[next].skbuff == NULL &&

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#1283: FILE: drivers/net/wan/retina.c:1683:
net_device *dev)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1290: FILE: drivers/net/wan/retina.c:1685:
+	unsigned d, old_cur_rx = fp->cur_rx;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1291: FILE: drivers/net/wan/retina.c:1686:
+	unsigned last = (old_cur_rx + RX_RING_SIZE - 1u) & (RX_RING_SIZE - 1u);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1292: FILE: drivers/net/wan/retina.c:1687:
+	unsigned last = (old_cur_rx + RX_RING_SIZE - 1u) & (RX_RING_SIZE - 1u);
+	for (d = old_cur_rx; d != last; d = (d + 1u) & (RX_RING_SIZE - 1u)) {

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'fp->this_card_priv->pci_dev'
#1333: FILE: drivers/net/wan/retina.c:1759:
+				if (likely(!pci_dma_mapping_error(fp->
+							this_card_priv->pci_dev,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1344: FILE: drivers/net/wan/retina.c:1803:
+	unsigned d;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1438: FILE: drivers/net/wan/retina.c:1903:
+	unsigned channel = 0u;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000221943.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 22 warnings, 23 checks, 1395 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000221943.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
