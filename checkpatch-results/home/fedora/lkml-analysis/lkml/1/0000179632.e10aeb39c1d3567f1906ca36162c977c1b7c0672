ERROR:EXECUTE_PERMISSIONS: do not set execute permissions for source files
#51: FILE: Documentation/hwmon/hpfall.c

There is no reason for source files to be executable.  The executable
bit can be removed safely.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#51: 
new file mode 100755

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#56: FILE: Documentation/hwmon/hpfall.c:1:
+/* Disk protection for HP machines.

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LINE_SPACING: Missing a blank line after declarations
#79: FILE: Documentation/hwmon/hpfall.c:24:
+	int fd = open(path, O_RDWR);
+	if (fd < 0) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#98: FILE: Documentation/hwmon/hpfall.c:43:
+	write_int("/sys/block/sda/device/unload_heads", seconds*1000);
 	                                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#116: FILE: Documentation/hwmon/hpfall.c:61:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#118: FILE: Documentation/hwmon/hpfall.c:63:
+int main(int argc, char* argv[])

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: Documentation/hwmon/hpfall.c:65:
+       int fd, ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: Documentation/hwmon/hpfall.c:67:
+       fd = open("/dev/freefall", O_RDONLY);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: Documentation/hwmon/hpfall.c:68:
+       if (fd < 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#123: FILE: Documentation/hwmon/hpfall.c:68:
+       if (fd < 0) {
+               perror("open");

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: Documentation/hwmon/hpfall.c:69:
+               perror("open");$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: Documentation/hwmon/hpfall.c:69:
+               perror("open");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: Documentation/hwmon/hpfall.c:70:
+               return EXIT_FAILURE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: Documentation/hwmon/hpfall.c:70:
+               return EXIT_FAILURE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: Documentation/hwmon/hpfall.c:71:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: Documentation/hwmon/hpfall.c:75:
+       for (;;) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#130: FILE: Documentation/hwmon/hpfall.c:75:
+       for (;;) {
+	       unsigned char count;

WARNING:TABSTOP: Statements should start on a tabstop
#131: FILE: Documentation/hwmon/hpfall.c:76:
+	       unsigned char count;

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: Documentation/hwmon/hpfall.c:78:
+               ret = read(fd, &count, sizeof(count));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: Documentation/hwmon/hpfall.c:78:
+               ret = read(fd, &count, sizeof(count));$

WARNING:TABSTOP: Statements should start on a tabstop
#135: FILE: Documentation/hwmon/hpfall.c:80:
+	       if ((ret == -1) && (errno == EINTR)) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#135: FILE: Documentation/hwmon/hpfall.c:80:
+	       if ((ret == -1) && (errno == EINTR)) {
[...]
+		       continue;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'errno == EINTR'
#135: FILE: Documentation/hwmon/hpfall.c:80:
+	       if ((ret == -1) && (errno == EINTR)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TABSTOP: Statements should start on a tabstop
#137: FILE: Documentation/hwmon/hpfall.c:82:
+		       continue;

WARNING:TABSTOP: Statements should start on a tabstop
#138: FILE: Documentation/hwmon/hpfall.c:83:
+	       }

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: Documentation/hwmon/hpfall.c:85:
+               if (ret != sizeof(count)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: Documentation/hwmon/hpfall.c:85:
+               if (ret != sizeof(count)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#140: FILE: Documentation/hwmon/hpfall.c:85:
+               if (ret != sizeof(count)) {
+                       perror("read");

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: Documentation/hwmon/hpfall.c:86:
+                       perror("read");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: Documentation/hwmon/hpfall.c:86:
+                       perror("read");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: Documentation/hwmon/hpfall.c:87:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: Documentation/hwmon/hpfall.c:87:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: Documentation/hwmon/hpfall.c:88:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: Documentation/hwmon/hpfall.c:88:
+               }$

WARNING:TABSTOP: Statements should start on a tabstop
#147: FILE: Documentation/hwmon/hpfall.c:92:
+	       if (1 || on_ac() || lid_open()) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#147: FILE: Documentation/hwmon/hpfall.c:92:
+	       if (1 || on_ac() || lid_open()) {
+		       alarm(2);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#147: FILE: Documentation/hwmon/hpfall.c:92:
+	       if (1 || on_ac() || lid_open()) {
[...]
+	       } else {
[...]

WARNING:TABSTOP: Statements should start on a tabstop
#149: FILE: Documentation/hwmon/hpfall.c:94:
+	       } else {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#149: FILE: Documentation/hwmon/hpfall.c:94:
+	       } else {
+		       alarm(20);

WARNING:TABSTOP: Statements should start on a tabstop
#151: FILE: Documentation/hwmon/hpfall.c:96:
+	       }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: Documentation/hwmon/hpfall.c:97:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: Documentation/hwmon/hpfall.c:99:
+       close(fd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: Documentation/hwmon/hpfall.c:100:
+       return EXIT_SUCCESS;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: drivers/hwmon/hp_accel.c:230:
+	status = acpi_walk_resources(device->handle, METHOD_NAME__CRS,
+					lis3lv02d_get_resource, &adev.irq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#205: FILE: drivers/hwmon/hp_accel.c:232:
+		printk(KERN_DEBUG DRIVER_NAME ": Error getting resources\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#324: FILE: drivers/hwmon/lis3lv02d.c:195:
+		printk(KERN_ERR DRIVER_NAME ": IRQ%d allocation failed\n", adev.irq);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#328: FILE: drivers/hwmon/lis3lv02d.c:199:
+	printk("lis3: registered interrupt %d\n", adev.irq);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#342: FILE: drivers/hwmon/lis3lv02d.c:213:
+static ssize_t lis3lv02d_misc_read(struct file *file, char __user *buf,
+				size_t count, loff_t *pos)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#378: FILE: drivers/hwmon/lis3lv02d.c:249:
+	 * TASK_INTERRUPTIBLE state */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#442: FILE: drivers/hwmon/lis3lv02d.c:396:
+	printk("lis3_init_device: irq %d\n", dev->irq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#446: FILE: drivers/hwmon/lis3lv02d.c:400:
+		printk(KERN_ERR DRIVER_NAME

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#451: FILE: drivers/hwmon/lis3lv02d.c:405:
+	printk("lis3: registering device\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#453: FILE: drivers/hwmon/lis3lv02d.c:407:
+		printk(KERN_ERR DRIVER_NAME ": misc_register failed\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000179632.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 40 warnings, 5 checks, 397 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000179632.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
