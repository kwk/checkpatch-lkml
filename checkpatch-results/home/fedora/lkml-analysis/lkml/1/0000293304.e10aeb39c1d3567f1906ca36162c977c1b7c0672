WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#65: FILE: MAINTAINERS:1088:
+P:	Dmitry Baryshkov
+M:	dbaryshkov@gmail.com

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#77: FILE: include/linux/clklib.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct clk *' should also have an identifier name
#107: FILE: include/linux/clklib.h:31:
+	int (*set_rate)(struct clk *, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#107: FILE: include/linux/clklib.h:31:
+	int (*set_rate)(struct clk *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct clk *' should also have an identifier name
#108: FILE: include/linux/clklib.h:32:
+	long (*round_rate)(struct clk *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#108: FILE: include/linux/clklib.h:32:
+	long (*round_rate)(struct clk *, unsigned long);

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#152: FILE: include/linux/clklib.h:76:
+#define CLK_FUNC(_clock, _function, _ops, _data)	\
+	(struct clk_function) {						\
+		.parent = _clock,			\
+		.priv	= _data,			\
+		.clk = {				\
+			.name = _function,		\
+			.owner = THIS_MODULE,		\
+			.ops = _ops,			\
+		},					\
+	}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#204: FILE: kernel/clklib.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#205: FILE: kernel/clklib.c:2:
+ * kernel/clklib.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:LINE_SPACING: Missing a blank line after declarations
#265: FILE: kernel/clklib.c:62:
+	int i;
+	for (i = num - 1; i >= 0;  i++)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#274: FILE: kernel/clklib.c:71:
+	int ret;
+	for (i = 0; i < num; i++) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#368: FILE: kernel/clklib.c:165:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#450: FILE: kernel/clklib.c:247:
+		if (clk->ops && clk->ops->get_rate) {
[...]
+		} else
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#453: FILE: kernel/clklib.c:250:
+			break;
+		} else

CHECK:BRACES: Unbalanced braces around else statement
#453: FILE: kernel/clklib.c:250:
+		} else

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#563: FILE: kernel/clklib.c:360:
+void clk_free_functions(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#574: FILE: kernel/clklib.c:371:
+int __must_check clk_alloc_functions(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#585: FILE: kernel/clklib.c:382:
+			printk(KERN_ERR "Error allocating %s.%s function.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#586: FILE: kernel/clklib.c:383:
+			printk(KERN_ERR "Error allocating %s.%s function.\n",
+					funcs[i].parent,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000293304.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 12 warnings, 6 checks, 514 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000293304.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
