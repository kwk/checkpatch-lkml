Use of uninitialized value $typo_fix in concatenation (.) or string at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3367.
Use of uninitialized value $typo_fix in concatenation (.) or string at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3367.
WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
This rare but critical bug has the potential to cause a hardware failure on disk drives by

WARNING:TYPO_SPELLING: 'msdos' may be misspelled - perhaps ''?
#51: 
In the case of the commonly used "msdos" partition-type used for Linux, BSD, Solaris, MS-DOS,
                                  ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'msdos' may be misspelled - perhaps ''?
#54: 
fs/partitions/msdos.c:msdos_partition().
              ^^^^^

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: partitions/msdos.tj.c:403:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#107: FILE: partitions/msdos.tj.c:416:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#113: FILE: partitions/msdos.tj.c:422:
+ */ $

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#114: FILE: partitions/msdos.tj.c:423:
+int check_sane_values(struct partition *p, struct block_device *bdev) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <Sector>
#117: FILE: partitions/msdos.tj.c:426:
+	Sector sect;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_WHITESPACE: trailing whitespace
#124: FILE: partitions/msdos.tj.c:433:
+^Ifor (slot = 1 ; slot <= 4 ; slot++, p++) { $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#130: FILE: partitions/msdos.tj.c:439:
+		if (START_SECT(p) > bdev->bd_disk->capacity-1) { /* invalid - beyond end of disk */
 		                                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE_COMMENT: line length of 113 exceeds 100 columns
#133: FILE: partitions/msdos.tj.c:442:
+		if (START_SECT(p)+NR_SECTS(p)-1 > bdev->bd_disk->capacity-1) { /* invalid - beyond end of disk */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#133: FILE: partitions/msdos.tj.c:442:
+		if (START_SECT(p)+NR_SECTS(p)-1 > bdev->bd_disk->capacity-1) { /* invalid - beyond end of disk */
 		                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#133: FILE: partitions/msdos.tj.c:442:
+		if (START_SECT(p)+NR_SECTS(p)-1 > bdev->bd_disk->capacity-1) { /* invalid - beyond end of disk */
 		                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#133: FILE: partitions/msdos.tj.c:442:
+		if (START_SECT(p)+NR_SECTS(p)-1 > bdev->bd_disk->capacity-1) { /* invalid - beyond end of disk */
 		                                                         ^

WARNING:LONG_LINE_COMMENT: line length of 117 exceeds 100 columns
#137: FILE: partitions/msdos.tj.c:446:
+			data = read_dev_sector(bdev, START_SECT(p)*sector_size, &sect); /* fetch sector from cache */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#137: FILE: partitions/msdos.tj.c:446:
+			data = read_dev_sector(bdev, START_SECT(p)*sector_size, &sect); /* fetch sector from cache */
 			                                          ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#138: FILE: partitions/msdos.tj.c:447:
+			if (data) {
[...]
+			else ret = -1; /* failed to read sector from cache */
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#140: FILE: partitions/msdos.tj.c:449:
+					ext = (struct partition *) (data + 0x1be);

WARNING:LONG_LINE_COMMENT: line length of 113 exceeds 100 columns
#143: FILE: partitions/msdos.tj.c:452:
+						insane |= 4; /* bit-2 flags insane extended partition contents */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#147: FILE: partitions/msdos.tj.c:456:
+			else ret = -1; /* failed to read sector from cache */

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#147: FILE: partitions/msdos.tj.c:456:
+			}
+			else ret = -1; /* failed to read sector from cache */

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#149: FILE: partitions/msdos.tj.c:458:
+
+		}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#152: FILE: partitions/msdos.tj.c:461:
+			printk("\n"); /* start error report on a fresh line */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#154: FILE: partitions/msdos.tj.c:463:
+				printk(" partition %d: start (sector %d) beyond end of disk (sector %d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#155: FILE: partitions/msdos.tj.c:464:
+				printk(" partition %d: start (sector %d) beyond end of disk (sector %d)\n",
+				 slot, START_SECT(p), (unsigned int) bdev->bd_disk->capacity-1);

CHECK:SPACING: No space is necessary after a cast
#155: FILE: partitions/msdos.tj.c:464:
+				 slot, START_SECT(p), (unsigned int) bdev->bd_disk->capacity-1);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#155: FILE: partitions/msdos.tj.c:464:
+				 slot, START_SECT(p), (unsigned int) bdev->bd_disk->capacity-1);
 				                                                            ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#157: FILE: partitions/msdos.tj.c:466:
+				printk(" partition %d: end (sector %d) beyond end of disk (sector %d)\n",

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#158: FILE: partitions/msdos.tj.c:467:
+				 slot, START_SECT(p)+NR_SECTS(p)-1, (unsigned int) bdev->bd_disk->capacity-1);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#158: FILE: partitions/msdos.tj.c:467:
+				printk(" partition %d: end (sector %d) beyond end of disk (sector %d)\n",
+				 slot, START_SECT(p)+NR_SECTS(p)-1, (unsigned int) bdev->bd_disk->capacity-1);

CHECK:SPACING: No space is necessary after a cast
#158: FILE: partitions/msdos.tj.c:467:
+				 slot, START_SECT(p)+NR_SECTS(p)-1, (unsigned int) bdev->bd_disk->capacity-1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#158: FILE: partitions/msdos.tj.c:467:
+				 slot, START_SECT(p)+NR_SECTS(p)-1, (unsigned int) bdev->bd_disk->capacity-1);
 				                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#158: FILE: partitions/msdos.tj.c:467:
+				 slot, START_SECT(p)+NR_SECTS(p)-1, (unsigned int) bdev->bd_disk->capacity-1);
 				                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#158: FILE: partitions/msdos.tj.c:467:
+				 slot, START_SECT(p)+NR_SECTS(p)-1, (unsigned int) bdev->bd_disk->capacity-1);
 				                                                                          ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#160: FILE: partitions/msdos.tj.c:469:
+				printk(" partition %d: insane extended contents\n", slot);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#173: FILE: partitions/msdos.tj.c:524:
+^I/* $

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#174: FILE: partitions/msdos.tj.c:525:
+	 * Check that *all* sector offsets are valid before actually building the partition structure

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#175: FILE: partitions/msdos.tj.c:526:
+	 * Do it now rather than inside the loop that builds the partition entries to avoid having to

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#176: FILE: partitions/msdos.tj.c:527:
+	 * unwind an unknown number of put_partition() calls in this loop and in the (possible) calls

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000472456.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 15 warnings, 17 checks, 97 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000472456.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
