WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#109: FILE: fs/fuse/file.c:1943:
+	struct vm_operations_struct vm_ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#264: FILE: fs/fuse/file.c:2098:
+	fd = commit_in->fd = get_unused_fd_flags(O_CLOEXEC);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#427: FILE: fs/fuse/file.c:2261:
+		printk(KERN_ERR "FUSE: can't do direct mmap. shmem mmap has "

WARNING:SPLIT_STRING: quoted string split across lines
#428: FILE: fs/fuse/file.c:2262:
+		printk(KERN_ERR "FUSE: can't do direct mmap. shmem mmap has "
+		       "open, close or vm_private_data\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:BRACES: braces {} should be used on all arms of this statement
#457: FILE: fs/fuse/file.c:2291:
+	if (!err) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#467: FILE: fs/fuse/file.c:2301:
+	} else

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#491: FILE: fs/fuse/file.c:2325:
+	/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#496: FILE: fs/fuse/file.c:2330:
+	if (err == -ENOSYS) {

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#529: FILE: fs/fuse/fuse_i.h:275:
+			/** to move filp for mmap between client and server */
 			            ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BIT_MACRO: Prefer using the BIT macro
#560: FILE: include/linux/fuse.h:180:
+#define FUSE_MMAP_DONT_COPY	(1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#561: FILE: include/linux/fuse.h:181:
+#define FUSE_MMAP_DONT_EXPAND	(1 << 1)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000140014.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 5 checks, 540 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000140014.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
