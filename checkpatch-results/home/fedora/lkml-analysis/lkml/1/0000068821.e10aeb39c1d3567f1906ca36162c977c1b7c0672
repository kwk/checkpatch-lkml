CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#302: FILE: arch/s390/include/asm/lowcore.h:193:
+#ifndef __s390x__

Architecture specific defines should be avoided wherever
possible.

CHECK:BIT_MACRO: Prefer using the BIT macro
#308: FILE: arch/s390/include/asm/lowcore.h:199:
+#define LC_PAGES (1UL << LC_ORDER)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char __user * __user' should also have an identifier name
#543: FILE: arch/s390/kernel/entry.h:49:
+long sys_execve(char __user *name, char __user * __user *argv,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char __user * __user' should also have an identifier name
#543: FILE: arch/s390/kernel/entry.h:49:
+long sys_execve(char __user *name, char __user * __user *argv,

CHECK:SPACING: No space is necessary after a cast
#701: FILE: arch/s390/kernel/smp.c:479:
+	lowcore = (void *) __get_free_pages(GFP_KERNEL | GFP_DMA, LC_ORDER);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#710: FILE: arch/s390/kernel/smp.c:510:
+	free_pages((unsigned long) lowcore, LC_ORDER);

CHECK:SPACING: No space is necessary after a cast
#728: FILE: arch/s390/kernel/smp.c:527:
+	free_pages((unsigned long) lowcore, LC_ORDER);

CHECK:SPACING: No space is necessary after a cast
#746: FILE: arch/s390/kernel/smp.c:672:
+	lowcore = (void *) __get_free_pages(GFP_KERNEL | GFP_DMA, LC_ORDER);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1120: FILE: arch/s390/mm/pgtable.c:324:
+	asm volatile(

CHECK:BRACES: Unbalanced braces around else statement
#1149: FILE: drivers/s390/block/dasd_eckd.c:986:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPLIT_STRING: quoted string split across lines
#1151: FILE: drivers/s390/block/dasd_eckd.c:988:
+		dev_warn(&device->cdev->dev, "Reading device feature codes"
+			 " failed with rc=%d\n", rc);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:BRACES: braces {} should be used on all arms of this statement
#1198: FILE: drivers/s390/cio/css.c:317:
+	if (cio_is_console(schid))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1200: FILE: drivers/s390/cio/css.c:319:
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#1789: FILE: drivers/s390/cio/qdio_main.c:571:
+	} else

WARNING:TYPO_SPELLING: 'supsend' may be misspelled - perhaps 'suspend'?
#1849: FILE: drivers/s390/crypto/ap_bus.c:114:
+ * important when supsend and resume is done in a z/VM environment where the
                   ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1850: FILE: drivers/s390/crypto/ap_bus.c:115:
+ * domain might change. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1851: FILE: drivers/s390/crypto/ap_bus.c:116:
+static int user_set_domain = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000068821.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 5 warnings, 11 checks, 1626 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000068821.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
