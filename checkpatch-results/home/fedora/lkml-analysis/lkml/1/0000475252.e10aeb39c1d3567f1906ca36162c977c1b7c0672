WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#36: 
# echo 1 > /proc/timer_stats

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#37: 
# cat /proc/timer_stats

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
  17,     0 swapper          hrtimer_restart_sched_tick (hrtimer_sched_tick)

WARNING:TYPO_SPELLING: 'intialized' may be misspelled - perhaps 'initialized'?
#102: FILE: Documentation/hrtimer/timer_stats.txt:21:
+- the function where the timer was intialized
                                    ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'parantheses' may be misspelled - perhaps 'parentheses'?
#145: FILE: Documentation/hrtimer/timer_stats.txt:64:
+initialized the timer and in parantheses the callback function which was
                              ^^^^^^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#175: FILE: include/linux/hrtimer.h:324:
+extern void timer_stats_update_stats(void *timer, pid_t pid, void *startf,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#176: FILE: include/linux/hrtimer.h:325:
+				     void *timerf, char * comm);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#184: FILE: include/linux/hrtimer.h:333:
+extern void __timer_stats_hrtimer_set_start_info(struct hrtimer *timer,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#244: FILE: include/linux/timer.h:87:
+extern void init_timer_stats(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#246: FILE: include/linux/timer.h:89:
+extern void timer_stats_update_stats(void *timer, pid_t pid, void *startf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#247: FILE: include/linux/timer.h:90:
+				     void *timerf, char * comm);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#255: FILE: include/linux/timer.h:98:
+extern void __timer_stats_timer_set_start_info(struct timer_list *timer,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#285: FILE: include/linux/timer.h:128:
+extern void delayed_work_timer_fn(unsigned long __data);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#287: FILE: include/linux/timer.h:130:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#384: FILE: kernel/time/timer_stats.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#385: FILE: kernel/time/timer_stats.c:2:
+ * kernel/time/timer_stats.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#429: FILE: kernel/time/timer_stats.c:46:
+#include <asm/uaccess.h>

CHECK:BIT_MACRO: Prefer using the BIT macro
#496: FILE: kernel/time/timer_stats.c:113:
+#define MAX_ENTRIES		(1UL << MAX_ENTRIES_BITS)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#522: FILE: kernel/time/timer_stats.c:139:
+#define TSTAT_HASH_SIZE		(1UL << TSTAT_HASH_BITS)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'entry' - possible side-effects?
#525: FILE: kernel/time/timer_stats.c:142:
+#define __tstat_hashfn(entry)						\
+	(((unsigned long)(entry)->timer       ^				\
+	  (unsigned long)(entry)->start_func  ^				\
+	  (unsigned long)(entry)->expire_func ^				\
+	  (unsigned long)(entry)->pid		) & TSTAT_HASH_MASK)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#529: FILE: kernel/time/timer_stats.c:146:
+	  (unsigned long)(entry)->pid		) & TSTAT_HASH_MASK)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#613: FILE: kernel/time/timer_stats.c:230:
+			      void *timerf, char * comm)

WARNING:TYPO_SPELLING: 'doesnt' may be misspelled - perhaps 'doesn't'?
#616: FILE: kernel/time/timer_stats.c:233:
+	 * It doesnt matter which lock we take:
 	      ^^^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#643: FILE: kernel/time/timer_stats.c:260:
+	char namebuf[KSYM_NAME_LEN+1];
 	                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#680: FILE: kernel/time/timer_stats.c:297:
+		seq_printf(m, "Overflow: %d entries\n",
+			atomic_read(&overflow_count));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#685: FILE: kernel/time/timer_stats.c:302:
+		seq_printf(m, "%4lu, %5d %-16s ",
+				entry->count, entry->pid, entry->comm);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#761: FILE: kernel/time/timer_stats.c:378:
+static int tstats_open(struct inode *inode, struct file *filp)
                                                          ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#763: FILE: kernel/time/timer_stats.c:380:
+	return single_open(filp, tstats_show, NULL);
 	                   ^^^^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#766: FILE: kernel/time/timer_stats.c:383:
+static struct file_operations tstats_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#794: FILE: kernel/time/timer_stats.c:411:
+__initcall(init_tstats_procfs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#931: FILE: kernel/workqueue.c:598:
+int fastcall schedule_delayed_work(struct delayed_work *dwork,
+					unsigned long delay)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000475252.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 13 warnings, 14 checks, 817 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000475252.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
