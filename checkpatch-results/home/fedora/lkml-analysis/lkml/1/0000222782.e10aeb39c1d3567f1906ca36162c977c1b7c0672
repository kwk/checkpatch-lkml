CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#93: FILE: fs/ubifs/file.c:602:
+	addr = zaddr = kmap(page);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: Unbalanced braces around else statement
#108: FILE: fs/ubifs/file.c:617:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*bu)...) over kmalloc(sizeof(struct bu_info)...)
#187: FILE: fs/ubifs/file.c:696:
+	bu = kmalloc(sizeof(struct bu_info), GFP_NOFS);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#373: FILE: fs/ubifs/super.c:405:
+		seq_printf(s, ",bulk_read");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#375: FILE: fs/ubifs/super.c:407:
+		seq_printf(s, ",no_bulk_read");

CHECK:CAMELCASE: Avoid CamelCase: <Opt_bulk_read>
#410: FILE: fs/ubifs/super.c:867:
+	Opt_bulk_read,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Opt_no_bulk_read>
#411: FILE: fs/ubifs/super.c:868:
+	Opt_no_bulk_read,

WARNING:LINE_SPACING: Missing a blank line after declarations
#456: FILE: fs/ubifs/tnc.c:1505:
+	int n, err = 0, lnum = -1, uninitialized_var(offs);
+	int uninitialized_var(len);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#456: FILE: fs/ubifs/tnc.c:1505:
+	int uninitialized_var(len);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'len' should also have an identifier name
#456: FILE: fs/ubifs/tnc.c:1505:
+	int uninitialized_var(len);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000222782.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 5 checks, 756 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000222782.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
