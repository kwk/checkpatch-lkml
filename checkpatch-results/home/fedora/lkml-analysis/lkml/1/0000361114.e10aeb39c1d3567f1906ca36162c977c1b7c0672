CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#71: FILE: include/linux/kobject.h:129:
 };
+#define KOBJ_ATTR(_name,_mode,_show,_store)		\

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#71: FILE: include/linux/kobject.h:129:
+#define KOBJ_ATTR(_name,_mode,_show,_store)		\
                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#71: FILE: include/linux/kobject.h:129:
+#define KOBJ_ATTR(_name,_mode,_show,_store)		\
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#71: FILE: include/linux/kobject.h:129:
+#define KOBJ_ATTR(_name,_mode,_show,_store)		\
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#73: FILE: include/linux/kobject.h:131:
+		__ATTR(_name,_mode,_show,_store)
 		            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#73: FILE: include/linux/kobject.h:131:
+		__ATTR(_name,_mode,_show,_store)
 		                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#73: FILE: include/linux/kobject.h:131:
+		__ATTR(_name,_mode,_show,_store)
 		                        ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#74: FILE: include/linux/kobject.h:132:
+extern int __must_check kobject_create_file(struct kobject *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: space required after that ',' (ctx:OxV)
#76: FILE: include/linux/kobject.h:134:
+extern void kobject_remove_file(struct kobject *,struct kobj_attribute *);
                                                 ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#76: FILE: include/linux/kobject.h:134:
+extern void kobject_remove_file(struct kobject *,struct kobj_attribute *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kobject *' should also have an identifier name
#76: FILE: include/linux/kobject.h:134:
+extern void kobject_remove_file(struct kobject *,struct kobj_attribute *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kobj_attribute *' should also have an identifier name
#76: FILE: include/linux/kobject.h:134:
+extern void kobject_remove_file(struct kobject *,struct kobj_attribute *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000361114.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 2 warnings, 3 checks, 41 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000361114.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
