WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#74: FILE: drivers/usb/serial/visor.c:40:
+					struct file *filp);
 					             ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#74: FILE: drivers/usb/serial/visor.c:40:
+static int  visor_open(struct tty_struct *tty, struct usb_serial_port *port,
+					struct file *filp);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#76: FILE: drivers/usb/serial/visor.c:42:
+					struct file *filp);
 					             ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#76: FILE: drivers/usb/serial/visor.c:42:
+static void visor_close(struct tty_struct *tty, struct usb_serial_port *port,
+					struct file *filp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#78: FILE: drivers/usb/serial/visor.c:44:
+static int  visor_write(struct tty_struct *tty, struct usb_serial_port *port,
+					const unsigned char *buf, int count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#83: FILE: drivers/usb/serial/visor.c:49:
+static int  visor_probe(struct usb_serial *serial,
+					const struct usb_device_id *id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#102: FILE: drivers/usb/serial/visor.c:59:
+static int palm_os_3_probe(struct usb_serial *serial,
+					const struct usb_device_id *id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#104: FILE: drivers/usb/serial/visor.c:61:
+static int palm_os_4_probe(struct usb_serial *serial,
+					const struct usb_device_id *id);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#140: FILE: drivers/usb/serial/visor.c:189:
+/* All of the device info needed for the Handspring Visor,
+   and Palm 4.0 devices */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#140: FILE: drivers/usb/serial/visor.c:189:
+   and Palm 4.0 devices */

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#150: FILE: drivers/usb/serial/visor.c:278:
+							struct file *filp)
 							             ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: drivers/usb/serial/visor.c:278:
+static int visor_open(struct tty_struct *tty, struct usb_serial_port *port,
+							struct file *filp)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: drivers/usb/serial/visor.c:309:
+	usb_fill_bulk_urb(port->read_urb, serial->dev,
+			   usb_rcvbulkpipe(serial->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#162: FILE: drivers/usb/serial/visor.c:310:
+			   usb_rcvbulkpipe(serial->dev,
 					    port->bulk_in_endpointAddress),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#184: FILE: drivers/usb/serial/visor.c:327:
+			dev_err(&port->dev,
+			    "%s - failed submitting interrupt urb, error %d\n",

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#195: FILE: drivers/usb/serial/visor.c:336:
+			struct usb_serial_port *port, struct file *filp)
 			                                           ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#215: FILE: drivers/usb/serial/visor.c:353:
+			usb_control_msg(port->serial->dev,
 					 usb_rcvctrlpipe(port->serial->dev, 0),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: drivers/usb/serial/visor.c:408:
+	usb_fill_bulk_urb(urb, serial->dev,
+			   usb_sndbulkpipe(serial->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: drivers/usb/serial/visor.c:409:
+			   usb_sndbulkpipe(serial->dev,
 					    port->bulk_out_endpointAddress),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#257: FILE: drivers/usb/serial/visor.c:417:
+		dev_err(&port->dev,
+		   "%s - usb_submit_urb(write bulk) failed with status = %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#304: FILE: drivers/usb/serial/visor.c:513:
+	usb_serial_debug_data(debug, &port->dev, __func__,
+						urb->actual_length, data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#310: FILE: drivers/usb/serial/visor.c:518:
+		available_room = tty_buffer_request_room(tty,
+							urb->actual_length);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#320: FILE: drivers/usb/serial/visor.c:533:
+		usb_fill_bulk_urb(port->read_urb, port->serial->dev,
 				   usb_rcvbulkpipe(port->serial->dev,

CHECK:CAMELCASE: Avoid CamelCase: <bulk_in_endpointAddress>
#322: FILE: drivers/usb/serial/visor.c:534:
+					   port->bulk_in_endpointAddress),

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#331: FILE: drivers/usb/serial/visor.c:541:
+			dev_err(&port->dev,
+			    "%s - failed resubmitting read urb, error %d\n",

CHECK:BRACES: Unbalanced braces around else statement
#333: FILE: drivers/usb/serial/visor.c:543:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#354: FILE: drivers/usb/serial/visor.c:585:
+		dev_err(&urb->dev->dev,
+				"%s - Error %d submitting interrupt urb\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#384: FILE: drivers/usb/serial/visor.c:624:
+static int palm_os_3_probe(struct usb_serial *serial,
+						const struct usb_device_id *id)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#403: FILE: drivers/usb/serial/visor.c:645:
+	retval = usb_control_msg(serial->dev,
 				  usb_rcvctrlpipe(serial->dev, 0),

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#409: FILE: drivers/usb/serial/visor.c:655:
 	if (retval == sizeof(*connection_info)) {
+			connection_info = (struct visor_connection_info *)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#435: FILE: drivers/usb/serial/visor.c:661:
+			switch (

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#464: FILE: drivers/usb/serial/visor.c:692:
+		dev_warn(dev, "%s: No valid connect info available\n",
 			serial->type->description);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#479: FILE: drivers/usb/serial/visor.c:706:
+	/* ask for the number of bytes available, but ignore the
+	   response as it is broken */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#479: FILE: drivers/usb/serial/visor.c:706:
+	   response as it is broken */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#481: FILE: drivers/usb/serial/visor.c:708:
+	retval = usb_control_msg(serial->dev,
 				  usb_rcvctrlpipe(serial->dev, 0),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#496: FILE: drivers/usb/serial/visor.c:724:
+static int palm_os_4_probe(struct usb_serial *serial,
+						const struct usb_device_id *id)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#515: FILE: drivers/usb/serial/visor.c:741:
+	retval = usb_control_msg(serial->dev,
+				  usb_rcvctrlpipe(serial->dev, 0),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#535: FILE: drivers/usb/serial/visor.c:758:
+static int visor_probe(struct usb_serial *serial,
+					const struct usb_device_id *id)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#540: FILE: drivers/usb/serial/visor.c:762:
+	int (*startup)(struct usb_serial *serial,
+					const struct usb_device_id *id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#577: FILE: drivers/usb/serial/visor.c:826:
+	result = usb_control_msg(serial->dev, usb_rcvctrlpipe(serial->dev, 0),
 				  USB_REQ_GET_CONFIGURATION, USB_DIR_IN,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#582: FILE: drivers/usb/serial/visor.c:830:
+		dev_err(dev, "%s: get config number failed: %d\n",
+							__func__, result);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#588: FILE: drivers/usb/serial/visor.c:835:
+		dev_err(dev, "%s: get config number bad return length: %d\n",
+							__func__, result);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#596: FILE: drivers/usb/serial/visor.c:841:
+	result = usb_control_msg(serial->dev, usb_rcvctrlpipe(serial->dev, 0),
+				  USB_REQ_GET_INTERFACE,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#602: FILE: drivers/usb/serial/visor.c:846:
+		dev_err(dev, "%s: get interface number failed: %d\n",
+							__func__, result);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'serial->num_interrupt_in == 0'
#627: FILE: drivers/usb/serial/visor.c:865:
+	if (!((le16_to_cpu(serial->dev->descriptor.idVendor)
+						== HANDSPRING_VENDOR_ID) ||
+		(le16_to_cpu(serial->dev->descriptor.idVendor)
+						== KYOCERA_VENDOR_ID)) ||
+		(serial->num_interrupt_in == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#627: FILE: drivers/usb/serial/visor.c:865:
+	if (!((le16_to_cpu(serial->dev->descriptor.idVendor)

CHECK:CAMELCASE: Avoid CamelCase: <interrupt_in_endpointAddress>
#659: FILE: drivers/usb/serial/visor.c:887:
+		dest->interrupt_in_endpointAddress = \

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#680: FILE: drivers/usb/serial/visor.c:909:
+	/* TH55 registers 2 ports.
+	   Communication in from the UX50/TH55 uses bulk_in_endpointAddress

CHECK:CAMELCASE: Avoid CamelCase: <bulk_out_endpointAddress>
#695: FILE: drivers/usb/serial/visor.c:921:
+	serial->port[0]->bulk_out_endpointAddress =

CHECK:SPACING: No space is necessary after a cast
#724: FILE: drivers/usb/serial/visor.c:952:
+					(kernel_ulong_t) &palm_os_4_probe

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#747: FILE: drivers/usb/serial/visor.c:970:
+		info(

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000265211.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 10 warnings, 41 checks, 707 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000265211.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
