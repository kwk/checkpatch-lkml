WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#85: FILE: mm/cpu_alloc.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#89: FILE: mm/cpu_alloc.c:5:
+ * ^IBasic implementation with allocation and free from a dedicated per$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#90: FILE: mm/cpu_alloc.c:6:
+ * ^Icpu area.$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#177: FILE: mm/cpu_alloc.c:93:
+	for ( ; ; ) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#189: FILE: mm/cpu_alloc.c:105:
+		if (start % (align / UNIT_SIZE) == 0 &&
[...]
+				break;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#190: FILE: mm/cpu_alloc.c:106:
+		if (start % (align / UNIT_SIZE) == 0 &&
+			find_next_bit(cpu_alloc_map, nr_units, start + 1)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#238: FILE: mm/cpu_alloc.c:154:
+	BUG_ON(index >= nr_units ||

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: mm/cpu_alloc.c:155:
+	BUG_ON(index >= nr_units ||
+		!test_bit(index, cpu_alloc_map) ||

CHECK:LINE_SPACING: Please don't use multiple blank lines
#254: FILE: mm/cpu_alloc.c:170:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#282: FILE: include/linux/percpu.h:110:
 
+

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pointer' - possible side-effects?
#320: FILE: include/linux/percpu.h:148:
+#define CPU_FREE(pointer)	cpu_free((pointer), sizeof(*(pointer)))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000226807.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 6 checks, 278 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000226807.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
