WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
This patch makes lockdep_map have a new member, do_register. This is a pointer of function.

WARNING:TYPO_SPELLING: 'adress' may be misspelled - perhaps 'address'?
#47: 
This function receives the adress of lockdep_map (it's owner),
                           ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#120: FILE: arch/x86/include/asm/rwsem.h:77:
+# define __RWSEM_DEP_MAP_INIT(lockname) , .dep_map = {	\
                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#147: FILE: include/linux/lockdep.h:30:
+extern void register_lockdep_id(struct lockdep_map *map);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#176: FILE: include/linux/lockdep.h:159:
+^Iint      ^I^I^Iline;$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct lockdep_map *' should also have an identifier name
#184: FILE: include/linux/lockdep.h:167:
+	void (*do_register)(struct lockdep_map *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#344: FILE: kernel/lockdep.c:3842:
+		printk(KERN_DEBUG "LOCKDEP_TYPE_OTHER detected, name:%s\n",

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#349: FILE: kernel/lockdep.c:3847:
+		lock_idtable[map->type][i].lock
+			= (void *)container_of(map, spinlock_t, dep_map);

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#353: FILE: kernel/lockdep.c:3851:
+		lock_idtable[map->type][i].lock
+			= (void *)container_of(map, rwlock_t, dep_map);

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#357: FILE: kernel/lockdep.c:3855:
+		lock_idtable[map->type][i].lock
+			= (void *)container_of(map, struct mutex, dep_map);

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#361: FILE: kernel/lockdep.c:3859:
+		lock_idtable[map->type][i].lock
+			= (void *)container_of(map,

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#379: FILE: kernel/lockdep.c:3877:
+	spinlock_t *spin;

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#381: FILE: kernel/lockdep.c:3879:
+	struct mutex *mutex;

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#387: FILE: kernel/lockdep.c:3885:
+			seq_printf(m, "\t --- spinlock ---\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#390: FILE: kernel/lockdep.c:3888:
+			seq_printf(m, "\t --- rwlock ---\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#393: FILE: kernel/lockdep.c:3891:
+			seq_printf(m, "\t --- mutex ---\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#396: FILE: kernel/lockdep.c:3894:
+			seq_printf(m, "\t --- rwsem ---\n");

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#401: FILE: kernel/lockdep.c:3899:
+		for (id = 0; id < LOCK_IDTABLE_LENGTH; id++) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#433: FILE: kernel/lockdep.c:3931:
+static int lockdep_idtable_open(struct inode *inode, struct file *filp)
                                                                   ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#435: FILE: kernel/lockdep.c:3933:
+	return single_open(filp, lockdep_idtable_show, NULL);
 	                   ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#448: FILE: kernel/lockdep.c:3946:
+	debugfs_create_file("lockdep_idtable", 0444, NULL, NULL,
+			&lockdep_idtable_fops);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000035386.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 11 warnings, 9 checks, 306 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000035386.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
