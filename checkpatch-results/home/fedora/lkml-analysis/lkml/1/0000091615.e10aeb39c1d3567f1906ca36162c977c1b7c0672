CHECK:CAMELCASE: Avoid CamelCase: <Device>
#102: FILE: drivers/staging/hv/BlkVsc.c:37:
+	struct hv_device *Device,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: drivers/staging/hv/ChannelInterface.c:156:
+   struct hv_device *Device,$

CHECK:CAMELCASE: Avoid CamelCase: <DeviceObject>
#231: FILE: drivers/staging/hv/ChannelMgmt.h:48:
+	struct hv_device *DeviceObject;

CHECK:CAMELCASE: Avoid CamelCase: <AllocNetDevice>
#309: FILE: drivers/staging/hv/NetVsc.c:116:
+static inline struct NETVSC_DEVICE *AllocNetDevice(struct hv_device *Device)

CHECK:CAMELCASE: Avoid CamelCase: <GetOutboundNetDevice>
#318: FILE: drivers/staging/hv/NetVsc.c:142:
+static inline struct NETVSC_DEVICE *GetOutboundNetDevice(struct hv_device *Device)

CHECK:CAMELCASE: Avoid CamelCase: <GetInboundNetDevice>
#327: FILE: drivers/staging/hv/NetVsc.c:160:
+static inline struct NETVSC_DEVICE *GetInboundNetDevice(struct hv_device *Device)

CHECK:CAMELCASE: Avoid CamelCase: <PutNetDevice>
#336: FILE: drivers/staging/hv/NetVsc.c:177:
+static inline void PutNetDevice(struct hv_device *Device)

CHECK:CAMELCASE: Avoid CamelCase: <ReleaseOutboundNetDevice>
#345: FILE: drivers/staging/hv/NetVsc.c:187:
+static inline struct NETVSC_DEVICE *ReleaseOutboundNetDevice(struct hv_device *Device)

CHECK:CAMELCASE: Avoid CamelCase: <ReleaseInboundNetDevice>
#354: FILE: drivers/staging/hv/NetVsc.c:204:
+static inline struct NETVSC_DEVICE *ReleaseInboundNetDevice(struct hv_device *Device)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#444: FILE: drivers/staging/hv/NetVsc.c:1361:
+	struct hv_device *device = (struct hv_device*)packet->Device;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#453: FILE: drivers/staging/hv/NetVsc.c:1420:
+	struct hv_device *device=(struct hv_device*)Context;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#453: FILE: drivers/staging/hv/NetVsc.c:1420:
+	struct hv_device *device=(struct hv_device*)Context;
 	                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Context>
#453: FILE: drivers/staging/hv/NetVsc.c:1420:
+	struct hv_device *device=(struct hv_device*)Context;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#650: FILE: drivers/staging/hv/StorVsc.c:148:
+static inline STORVSC_DEVICE* AllocStorDevice(struct hv_device *Device)

CHECK:CAMELCASE: Avoid CamelCase: <AllocStorDevice>
#650: FILE: drivers/staging/hv/StorVsc.c:148:
+static inline STORVSC_DEVICE* AllocStorDevice(struct hv_device *Device)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#659: FILE: drivers/staging/hv/StorVsc.c:173:
+static inline STORVSC_DEVICE* GetStorDevice(struct hv_device *Device)

CHECK:CAMELCASE: Avoid CamelCase: <GetStorDevice>
#659: FILE: drivers/staging/hv/StorVsc.c:173:
+static inline STORVSC_DEVICE* GetStorDevice(struct hv_device *Device)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#668: FILE: drivers/staging/hv/StorVsc.c:191:
+static inline STORVSC_DEVICE* MustGetStorDevice(struct hv_device *Device)

CHECK:CAMELCASE: Avoid CamelCase: <MustGetStorDevice>
#668: FILE: drivers/staging/hv/StorVsc.c:191:
+static inline STORVSC_DEVICE* MustGetStorDevice(struct hv_device *Device)

CHECK:CAMELCASE: Avoid CamelCase: <PutStorDevice>
#677: FILE: drivers/staging/hv/StorVsc.c:208:
+static inline void PutStorDevice(struct hv_device *Device)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#686: FILE: drivers/staging/hv/StorVsc.c:220:
+static inline STORVSC_DEVICE* ReleaseStorDevice(struct hv_device *Device)

CHECK:CAMELCASE: Avoid CamelCase: <ReleaseStorDevice>
#686: FILE: drivers/staging/hv/StorVsc.c:220:
+static inline STORVSC_DEVICE* ReleaseStorDevice(struct hv_device *Device)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#695: FILE: drivers/staging/hv/StorVsc.c:237:
+static inline STORVSC_DEVICE* FinalReleaseStorDevice(struct hv_device *Device)

CHECK:CAMELCASE: Avoid CamelCase: <FinalReleaseStorDevice>
#695: FILE: drivers/staging/hv/StorVsc.c:237:
+static inline STORVSC_DEVICE* FinalReleaseStorDevice(struct hv_device *Device)

CHECK:CAMELCASE: Avoid CamelCase: <StorVscChannelInit>
#713: FILE: drivers/staging/hv/StorVsc.c:368:
+static int StorVscChannelInit(struct hv_device *Device)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#740: FILE: drivers/staging/hv/StorVsc.c:622:
+struct hv_device *device=(struct hv_device *)Context;
                         ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#785: FILE: drivers/staging/hv/StorVsc.c:928:
+	struct hv_device *device = (struct hv_device*)Context;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#798: FILE: drivers/staging/hv/Vmbus.c:49:
+static struct hv_device* gDevice; /* vmbus root device */

CHECK:CAMELCASE: Avoid CamelCase: <gDevice>
#798: FILE: drivers/staging/hv/Vmbus.c:49:
+static struct hv_device* gDevice; /* vmbus root device */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#850: FILE: drivers/staging/hv/Vmbus.c:253:
+   struct hv_device *ChildDevice)$

CHECK:CAMELCASE: Avoid CamelCase: <ChildDevice>
#850: FILE: drivers/staging/hv/Vmbus.c:253:
+   struct hv_device *ChildDevice)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#859: FILE: drivers/staging/hv/Vmbus.c:272:
+   struct hv_device *ChildDevice)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#913: FILE: drivers/staging/hv/VmbusPrivate.h:132:
+   struct hv_device *Device);$

CHECK:CAMELCASE: Avoid CamelCase: <Status>
#966: FILE: drivers/staging/hv/include/NetVscApi.h:55:
+typedef void (*PFN_ON_LINKSTATUS_CHANGED)(struct hv_device *dev, u32 Status);

CHECK:CAMELCASE: Avoid CamelCase: <Request>
#988: FILE: drivers/staging/hv/include/StorVscApi.h:59:
+typedef int (*PFN_ON_IO_REQUEST)(struct hv_device *Device, PSTORVSC_REQUEST Request);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1016: FILE: drivers/staging/hv/include/VmbusApi.h:72:
+typedef int (*PFN_ON_DEVICEADD)(struct hv_device *Device, void* AdditionalInfo);

CHECK:CAMELCASE: Avoid CamelCase: <AdditionalInfo>
#1016: FILE: drivers/staging/hv/include/VmbusApi.h:72:
+typedef int (*PFN_ON_DEVICEADD)(struct hv_device *Device, void* AdditionalInfo);

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#1034: FILE: drivers/staging/hv/include/VmbusApi.h:84:
+typedef struct hv_device *(*PFN_ON_CHILDDEVICE_CREATE)(GUID DeviceType, GUID DeviceInstance, void *Context);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <DeviceType>
#1034: FILE: drivers/staging/hv/include/VmbusApi.h:84:
+typedef struct hv_device *(*PFN_ON_CHILDDEVICE_CREATE)(GUID DeviceType, GUID DeviceInstance, void *Context);

CHECK:CAMELCASE: Avoid CamelCase: <DeviceInstance>
#1034: FILE: drivers/staging/hv/include/VmbusApi.h:84:
+typedef struct hv_device *(*PFN_ON_CHILDDEVICE_CREATE)(GUID DeviceType, GUID DeviceInstance, void *Context);

CHECK:CAMELCASE: Avoid CamelCase: <RootDevice>
#1036: FILE: drivers/staging/hv/include/VmbusApi.h:86:
+typedef int (*PFN_ON_CHILDDEVICE_ADD)(struct hv_device *RootDevice, struct hv_device *ChildDevice);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1120: FILE: drivers/staging/hv/include/VmbusApi.h:188:
+typedef void (*VMBUS_GET_CHANNEL_INFO)(struct hv_device *Device, DEVICE_INFO* DeviceInfo);

CHECK:CAMELCASE: Avoid CamelCase: <DeviceInfo>
#1120: FILE: drivers/staging/hv/include/VmbusApi.h:188:
+typedef void (*VMBUS_GET_CHANNEL_INFO)(struct hv_device *Device, DEVICE_INFO* DeviceInfo);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1172: FILE: drivers/staging/hv/netvsc_drv.c:54:
+static int netvsc_recv_callback(struct hv_device *device_obj, NETVSC_PACKET* Packet);

CHECK:CAMELCASE: Avoid CamelCase: <Packet>
#1172: FILE: drivers/staging/hv/netvsc_drv.c:54:
+static int netvsc_recv_callback(struct hv_device *device_obj, NETVSC_PACKET* Packet);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1230: FILE: drivers/staging/hv/netvsc_drv.c:552:
+static int netvsc_recv_callback(struct hv_device *device_obj, NETVSC_PACKET* packet)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1243: FILE: drivers/staging/hv/storvsc_drv.c:85:
+static void storvsc_host_rescan(struct hv_device* device_obj);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1296: FILE: drivers/staging/hv/vmbus_drv.c:78:
+static struct hv_device *vmbus_child_device_create(GUID type, GUID instance, void* context);

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#1298: FILE: drivers/staging/hv/vmbus_drv.c:80:
+static int vmbus_child_device_register(struct hv_device *root_device_obj, struct hv_device *child_device_obj);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1318: FILE: drivers/staging/hv/vmbus_drv.c:560:
+static struct hv_device *vmbus_child_device_create(GUID type, GUID instance, void* context)

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#1331: FILE: drivers/staging/hv/vmbus_drv.c:604:
+static int vmbus_child_device_register(struct hv_device *root_device_obj, struct hv_device *child_device_obj)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000091615.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 18 errors, 7 warnings, 26 checks, 1078 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000091615.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
