WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
Now uses configfs to build mappings from remote buttons to key strokes. When ir-core loads it creates /config/remotes. Make a directory for each remote you have; this will cause a new input devices to be created. Inside these directories make a directory for each key on the remote. In the key directory attributes fill in the protocol, device, command, keycode. Since this is configfs all of this can be easily scripted.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#59: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#64: FILE: drivers/input/ir/ir-configfs.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#115: FILE: drivers/input/ir/ir-configfs.c:52:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#119: FILE: drivers/input/ir/ir-configfs.c:56:
+	.ca_mode = S_IRUGO | S_IWUSR,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#125: FILE: drivers/input/ir/ir-configfs.c:62:
+	.ca_mode = S_IRUGO | S_IWUSR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#131: FILE: drivers/input/ir/ir-configfs.c:68:
+	.ca_mode = S_IRUGO | S_IWUSR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#137: FILE: drivers/input/ir/ir-configfs.c:74:
+	.ca_mode = S_IRUGO | S_IWUSR,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#141: FILE: drivers/input/ir/ir-configfs.c:78:
+static ssize_t item_show(struct config_item *item,
+				      struct configfs_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#156: FILE: drivers/input/ir/ir-configfs.c:93:
+static ssize_t item_store(struct config_item *item,
+				       struct configfs_attribute *attr,

CHECK:SPACING: No space is necessary after a cast
#162: FILE: drivers/input/ir/ir-configfs.c:99:
+	char *p = (char *) page;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#164: FILE: drivers/input/ir/ir-configfs.c:101:
+	tmp = simple_strtoul(p, &p, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:BRACES: braces {} should be used on all arms of this statement
#171: FILE: drivers/input/ir/ir-configfs.c:108:
+	if (attr == &item_protocol)
[...]
+	else if (attr == &item_device)
[...]
+	else if (attr == &item_command)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#177: FILE: drivers/input/ir/ir-configfs.c:114:
+	else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#192: FILE: drivers/input/ir/ir-configfs.c:129:
+	printk("keymap release\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#241: FILE: drivers/input/ir/ir-configfs.c:178:
+static ssize_t remote_show_description(struct config_item *item,
+					 struct configfs_attribute *attr,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#257: FILE: drivers/input/ir/ir-configfs.c:194:
+	.ca_mode = S_IRUGO,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#335: FILE: drivers/input/ir/ir-configfs.c:272:
+	.ca_mode = S_IRUGO,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: drivers/input/ir/ir-configfs.c:317:
+    mutex_lock(&input_ir_remotes.su_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: drivers/input/ir/ir-configfs.c:320:
+    list_for_each_entry(i, &input_ir_remotes.su_group.cg_children, ci_entry) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#384: FILE: drivers/input/ir/ir-configfs.c:321:
+    ^Ig = to_config_group(i);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#384: FILE: drivers/input/ir/ir-configfs.c:321:
+    ^Ig = to_config_group(i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: drivers/input/ir/ir-configfs.c:321:
+    ^Ig = to_config_group(i);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#385: FILE: drivers/input/ir/ir-configfs.c:322:
+        list_for_each_entry(j, &g->cg_children, ci_entry) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: drivers/input/ir/ir-configfs.c:322:
+        list_for_each_entry(j, &g->cg_children, ci_entry) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#386: FILE: drivers/input/ir/ir-configfs.c:323:
+        ^Ikeymap = to_keymap(j);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#386: FILE: drivers/input/ir/ir-configfs.c:323:
+        ^Ikeymap = to_keymap(j);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: drivers/input/ir/ir-configfs.c:323:
+        ^Ikeymap = to_keymap(j);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#387: FILE: drivers/input/ir/ir-configfs.c:324:
+        ^Iif ((keymap->protocol == protocol) && (keymap->device == device)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#387: FILE: drivers/input/ir/ir-configfs.c:324:
+        ^Iif ((keymap->protocol == protocol) && (keymap->device == device)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: drivers/input/ir/ir-configfs.c:324:
+        ^Iif ((keymap->protocol == protocol) && (keymap->device == device)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#387: FILE: drivers/input/ir/ir-configfs.c:324:
+        	if ((keymap->protocol == protocol) && (keymap->device == device)
[...]
+				remote = to_remote(g);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'keymap->protocol == protocol'
#387: FILE: drivers/input/ir/ir-configfs.c:324:
+        	if ((keymap->protocol == protocol) && (keymap->device == device)
+        			&& (keymap->command == command)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'keymap->device == device'
#387: FILE: drivers/input/ir/ir-configfs.c:324:
+        	if ((keymap->protocol == protocol) && (keymap->device == device)
+        			&& (keymap->command == command)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'keymap->command == command'
#387: FILE: drivers/input/ir/ir-configfs.c:324:
+        	if ((keymap->protocol == protocol) && (keymap->device == device)
+        			&& (keymap->command == command)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#388: FILE: drivers/input/ir/ir-configfs.c:325:
+        ^I^I^I&& (keymap->command == command)) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#388: FILE: drivers/input/ir/ir-configfs.c:325:
+        ^I^I^I&& (keymap->command == command)) {$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#388: FILE: drivers/input/ir/ir-configfs.c:325:
+        	if ((keymap->protocol == protocol) && (keymap->device == device)
+        			&& (keymap->command == command)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: drivers/input/ir/ir-configfs.c:325:
+        ^I^I^I&& (keymap->command == command)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#392: FILE: drivers/input/ir/ir-configfs.c:329:
+        ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#392: FILE: drivers/input/ir/ir-configfs.c:329:
+        ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: drivers/input/ir/ir-configfs.c:329:
+        ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: drivers/input/ir/ir-configfs.c:330:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: drivers/input/ir/ir-configfs.c:330:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: drivers/input/ir/ir-configfs.c:331:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: drivers/input/ir/ir-configfs.c:332:
+    mutex_unlock(&input_ir_remotes.su_mutex);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000207904.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 28 warnings, 11 checks, 370 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000207904.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
