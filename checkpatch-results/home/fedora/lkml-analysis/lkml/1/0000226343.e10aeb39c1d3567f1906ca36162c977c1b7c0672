WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#69: FILE: drivers/serial/Kconfig:512:
+config SERIAL_MAX3100
+        tristate "MAX3100 support"
+        depends on SPI
+        help
+          MAX3100 chip support
 

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#90: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#95: FILE: drivers/serial/max3100.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#147: FILE: drivers/serial/max3100.c:53:
+#define MAX3100_C    (1<<14)
                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#147: FILE: drivers/serial/max3100.c:53:
+#define MAX3100_C    (1<<14)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#148: FILE: drivers/serial/max3100.c:54:
+#define MAX3100_D    (0<<14)
                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#149: FILE: drivers/serial/max3100.c:55:
+#define MAX3100_W    (1<<15)
                        ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#149: FILE: drivers/serial/max3100.c:55:
+#define MAX3100_W    (1<<15)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#150: FILE: drivers/serial/max3100.c:56:
+#define MAX3100_RX   (0<<15)
                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#158: FILE: drivers/serial/max3100.c:64:
+#define MAX3100_T    (1<<14)
                        ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#158: FILE: drivers/serial/max3100.c:64:
+#define MAX3100_T    (1<<14)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#159: FILE: drivers/serial/max3100.c:65:
+#define MAX3100_R    (1<<15)
                        ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#159: FILE: drivers/serial/max3100.c:65:
+#define MAX3100_R    (1<<15)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#161: FILE: drivers/serial/max3100.c:67:
+#define MAX3100_FEN  (1<<13)
                        ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#161: FILE: drivers/serial/max3100.c:67:
+#define MAX3100_FEN  (1<<13)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#162: FILE: drivers/serial/max3100.c:68:
+#define MAX3100_SHDN (1<<12)
                        ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#162: FILE: drivers/serial/max3100.c:68:
+#define MAX3100_SHDN (1<<12)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#163: FILE: drivers/serial/max3100.c:69:
+#define MAX3100_TM   (1<<11)
                        ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#163: FILE: drivers/serial/max3100.c:69:
+#define MAX3100_TM   (1<<11)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#164: FILE: drivers/serial/max3100.c:70:
+#define MAX3100_RM   (1<<10)
                        ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#164: FILE: drivers/serial/max3100.c:70:
+#define MAX3100_RM   (1<<10)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#165: FILE: drivers/serial/max3100.c:71:
+#define MAX3100_PM   (1<<9)
                        ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#165: FILE: drivers/serial/max3100.c:71:
+#define MAX3100_PM   (1<<9)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#166: FILE: drivers/serial/max3100.c:72:
+#define MAX3100_RAM  (1<<8)
                        ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#166: FILE: drivers/serial/max3100.c:72:
+#define MAX3100_RAM  (1<<8)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#167: FILE: drivers/serial/max3100.c:73:
+#define MAX3100_IR   (1<<7)
                        ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#167: FILE: drivers/serial/max3100.c:73:
+#define MAX3100_IR   (1<<7)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#168: FILE: drivers/serial/max3100.c:74:
+#define MAX3100_ST   (1<<6)
                        ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#168: FILE: drivers/serial/max3100.c:74:
+#define MAX3100_ST   (1<<6)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#169: FILE: drivers/serial/max3100.c:75:
+#define MAX3100_PE   (1<<5)
                        ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#169: FILE: drivers/serial/max3100.c:75:
+#define MAX3100_PE   (1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#170: FILE: drivers/serial/max3100.c:76:
+#define MAX3100_L    (1<<4)
                        ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#170: FILE: drivers/serial/max3100.c:76:
+#define MAX3100_L    (1<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#173: FILE: drivers/serial/max3100.c:79:
+#define MAX3100_TE   (1<<10)
                        ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#173: FILE: drivers/serial/max3100.c:79:
+#define MAX3100_TE   (1<<10)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#174: FILE: drivers/serial/max3100.c:80:
+#define MAX3100_RAFE (1<<10)
                        ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#174: FILE: drivers/serial/max3100.c:80:
+#define MAX3100_RAFE (1<<10)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#175: FILE: drivers/serial/max3100.c:81:
+#define MAX3100_RTS  (1<<9)
                        ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#175: FILE: drivers/serial/max3100.c:81:
+#define MAX3100_RTS  (1<<9)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#176: FILE: drivers/serial/max3100.c:82:
+#define MAX3100_CTS  (1<<9)
                        ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#176: FILE: drivers/serial/max3100.c:82:
+#define MAX3100_CTS  (1<<9)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#177: FILE: drivers/serial/max3100.c:83:
+#define MAX3100_PT   (1<<8)
                        ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#177: FILE: drivers/serial/max3100.c:83:
+#define MAX3100_PT   (1<<8)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#198: FILE: drivers/serial/max3100.c:104:
+				 * (bits 0-7, bits 8-11 are irqs) */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPACING: Unnecessary space before function pointer arguments
#229: FILE: drivers/serial/max3100.c:135:
+	void (*max3100_hw_suspend) (int suspend);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#317: FILE: drivers/serial/max3100.c:223:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#338: FILE: drivers/serial/max3100.c:244:
+		dev_dbg(&s->spi->dev, "%s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#380: FILE: drivers/serial/max3100.c:286:
+	dev_dbg(&s->spi->dev, "%s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#445: FILE: drivers/serial/max3100.c:351:
+	dev_dbg(&s->spi->dev, "%s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#461: FILE: drivers/serial/max3100.c:367:
+	dev_dbg(&s->spi->dev, "%s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#470: FILE: drivers/serial/max3100.c:376:
+	dev_dbg(&s->spi->dev, "%s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#481: FILE: drivers/serial/max3100.c:387:
+	dev_dbg(&s->spi->dev, "%s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#497: FILE: drivers/serial/max3100.c:403:
+	dev_dbg(&s->spi->dev, "%s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#510: FILE: drivers/serial/max3100.c:416:
+	dev_dbg(&s->spi->dev, "%s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#525: FILE: drivers/serial/max3100.c:431:
+	dev_dbg(&s->spi->dev, "%s\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#540: FILE: drivers/serial/max3100.c:446:
+max3100_set_termios(struct uart_port *port, struct ktermios *termios,
+		   struct ktermios *old)

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#547: FILE: drivers/serial/max3100.c:453:
+	dev_dbg(&s->spi->dev, "%s\n", __func__);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'termios->c_cflag != old->c_cflag'
#549: FILE: drivers/serial/max3100.c:455:
+	if (!old || (termios->c_cflag != old->c_cflag)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#550: FILE: drivers/serial/max3100.c:456:
+		unsigned cflag;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#551: FILE: drivers/serial/max3100.c:457:
+		unsigned i;

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#683: FILE: drivers/serial/max3100.c:589:
+	dev_dbg(&s->spi->dev, "%s\n", __func__);

CHECK:BRACES: braces {} should be used on all arms of this statement
#701: FILE: drivers/serial/max3100.c:607:
+	if (s->max3100_hw_suspend)
[...]
+	else  {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#703: FILE: drivers/serial/max3100.c:609:
+	else  {

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#719: FILE: drivers/serial/max3100.c:625:
+	dev_dbg(&s->spi->dev, "%s\n", __func__);

WARNING:LINE_SPACING: Missing a blank line after declarations
#753: FILE: drivers/serial/max3100.c:659:
+		u16 tx, rx;
+		tx = 0x4001;

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#775: FILE: drivers/serial/max3100.c:681:
+	dev_dbg(&s->spi->dev, "%s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#786: FILE: drivers/serial/max3100.c:692:
+	dev_dbg(&s->spi->dev, "%s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#795: FILE: drivers/serial/max3100.c:701:
+	dev_dbg(&s->spi->dev, "%s\n", __func__);

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#802: FILE: drivers/serial/max3100.c:708:
+			       struct serial_struct *ser)
 			                             ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#809: FILE: drivers/serial/max3100.c:715:
+	dev_dbg(&s->spi->dev, "%s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#822: FILE: drivers/serial/max3100.c:728:
+	dev_dbg(&s->spi->dev, "%s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#831: FILE: drivers/serial/max3100.c:737:
+	dev_dbg(&s->spi->dev, "%s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#841: FILE: drivers/serial/max3100.c:747:
+	dev_dbg(&s->spi->dev, "%s\n", __func__);

WARNING:CONST_STRUCT: struct uart_ops should normally be const
#844: FILE: drivers/serial/max3100.c:750:
+static struct uart_ops max3100_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#871: FILE: drivers/serial/max3100.c:777:
+};
+static int uart_driver_registered;

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#873: FILE: drivers/serial/max3100.c:779:
+static int __devinit max3100_probe(struct spi_device *spi)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#883: FILE: drivers/serial/max3100.c:789:
+			printk(KERN_ERR "Couldn't register max3100 uart driver\n");

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*max3100s[i])...) over kzalloc(sizeof(struct max3100_port)...)
#896: FILE: drivers/serial/max3100.c:802:
+	max3100s[i] = kzalloc(sizeof(struct max3100_port), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#898: FILE: drivers/serial/max3100.c:804:
+	if (!max3100s[i]) {
+		dev_warn(&spi->dev,

CHECK:SPACING: No space is necessary after a cast
#917: FILE: drivers/serial/max3100.c:823:
+	max3100s[i]->timer.data = (unsigned long) max3100s[i];

CHECK:BRACES: braces {} should be used on all arms of this statement
#935: FILE: drivers/serial/max3100.c:841:
+	if (max3100s[i]->max3100_hw_suspend)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#937: FILE: drivers/serial/max3100.c:843:
+	else {

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#944: FILE: drivers/serial/max3100.c:850:
+static int __devexit max3100_remove(struct spi_device *spi)

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#975: FILE: drivers/serial/max3100.c:881:
+	dev_dbg(&s->spi->dev, "%s\n", __func__);

CHECK:BRACES: braces {} should be used on all arms of this statement
#983: FILE: drivers/serial/max3100.c:889:
+	if (s->max3100_hw_suspend)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#985: FILE: drivers/serial/max3100.c:891:
+	else {

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#999: FILE: drivers/serial/max3100.c:905:
+	dev_dbg(&s->spi->dev, "%s\n", __func__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1032: FILE: drivers/serial/max3100.c:938:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1068: FILE: include/linux/serial_max3100.h:1:
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1079: FILE: include/linux/serial_max3100.h:12:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1091: FILE: include/linux/serial_max3100.h:24:
+/* MAX3100 has a shutdown pin. This is a hook
+   called on suspend and resume to activate it.*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1091: FILE: include/linux/serial_max3100.h:24:
+   called on suspend and resume to activate it.*/

WARNING:SPACING: Unnecessary space before function pointer arguments
#1092: FILE: include/linux/serial_max3100.h:25:
+	void (*max3100_hw_suspend) (int suspend);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1094: FILE: include/linux/serial_max3100.h:27:
+ * ctrl is possible)  */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000226343.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 40 warnings, 54 checks, 1021 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000226343.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
