WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#56: FILE: drivers/block/drbd/drbd_vli.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#57: FILE: drivers/block/drbd/drbd_vli.h:2:
+/*
+-*- linux-c -*-

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#77: FILE: drivers/block/drbd/drbd_vli.h:22:
+   the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:TYPO_SPELLING: 'stroage' may be misspelled - perhaps 'storage'?
#85: FILE: drivers/block/drbd/drbd_vli.h:30:
+ * and stroage sizes of several TiB,
        ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'transfered' may be misspelled - perhaps 'transferred'?
#90: FILE: drivers/block/drbd/drbd_vli.h:35:
+ * We try to reduce the transfered bitmap information
                         ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'tranfered' may be misspelled - perhaps 'transferred'?
#128: FILE: drivers/block/drbd/drbd_vli.h:73:
+ * buf points to the current position in the tranfered byte stream.
                                              ^^^^^^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#135: FILE: drivers/block/drbd/drbd_vli.h:80:
+static inline int vli_decode_bytes(u64 *out, unsigned char *buf, unsigned buf_len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#138: FILE: drivers/block/drbd/drbd_vli.h:83:
+	unsigned bytes; /* extra bytes after code byte */

ERROR:SPACING: space required before the open parenthesis '('
#143: FILE: drivers/block/drbd/drbd_vli.h:88:
+	switch(*buf) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#144: FILE: drivers/block/drbd/drbd_vli.h:89:
+	case 0xff: bytes = 8; break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#145: FILE: drivers/block/drbd/drbd_vli.h:90:
+	case 0xfe: bytes = 7; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#146: FILE: drivers/block/drbd/drbd_vli.h:91:
+	case 0xfd: bytes = 6; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#147: FILE: drivers/block/drbd/drbd_vli.h:92:
+	case 0xfc: bytes = 5; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#148: FILE: drivers/block/drbd/drbd_vli.h:93:
+	case 0xfb: bytes = 4; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#149: FILE: drivers/block/drbd/drbd_vli.h:94:
+	case 0xfa: bytes = 3; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#150: FILE: drivers/block/drbd/drbd_vli.h:95:
+	case 0xf9: bytes = 2; break;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#160: FILE: drivers/block/drbd/drbd_vli.h:105:
+	 * requirements on certain architectures */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#161: FILE: drivers/block/drbd/drbd_vli.h:106:
+	memcpy(&tmp, buf+1, bytes);
 	                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#163: FILE: drivers/block/drbd/drbd_vli.h:108:
+	return bytes+1;
 	            ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#176: FILE: drivers/block/drbd/drbd_vli.h:121:
+static inline int vli_encode_bytes(unsigned char *buf, u64 n, unsigned buf_len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#178: FILE: drivers/block/drbd/drbd_vli.h:123:
+	unsigned bytes; /* _extra_ bytes after code byte */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#199: FILE: drivers/block/drbd/drbd_vli.h:144:
+	 * requirements on certain architectures */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#203: FILE: drivers/block/drbd/drbd_vli.h:148:
+	return bytes+1;
 	            ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#231: FILE: drivers/block/drbd/drbd_vli.h:176:
+ * but depending on VLI implementation, it may be more. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#247: FILE: drivers/block/drbd/drbd_vli.h:192:
+	 * total number of valid bits in stream: buf_len * 8 - pad_bits */

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#281: FILE: drivers/block/drbd/drbd_vli.h:226:
+	if ((bs->cur.b + ((bs->cur.bit + bits -1) >> 3)) - bs->buf >= bs->buf_len)
 	                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#314: FILE: drivers/block/drbd/drbd_vli.h:259:
+	if (bs->cur.b + ((bs->cur.bit + bs->pad_bits + bits -1) >> 3) - bs->buf >= bs->buf_len)
 	                                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#329: FILE: drivers/block/drbd/drbd_vli.h:274:
+		memcpy(&val, bs->cur.b+1, n - 1);
 		                      ^

WARNING:REPEATED_WORD: Possible repeated word: 'xxxxxxxx'
#368: FILE: drivers/block/drbd/drbd_vli.h:313:
+11111110  xxxxxxxx xxxxxxxx xxxxx                                0x202131 21

WARNING:REPEATED_WORD: Possible repeated word: 'xxxxxxxx'
#369: FILE: drivers/block/drbd/drbd_vli.h:314:
+11111101  xxxxxxxx xxxxxxxx xxxxxxxx  xxxxxxxx xx             0x400202131 34

WARNING:REPEATED_WORD: Possible repeated word: 'xxxxxxxx'
#369: FILE: drivers/block/drbd/drbd_vli.h:314:
+11111101  xxxxxxxx xxxxxxxx xxxxxxxx  xxxxxxxx xx             0x400202131 34

WARNING:REPEATED_WORD: Possible repeated word: 'xxxxxxxx'
#370: FILE: drivers/block/drbd/drbd_vli.h:315:
+11111111  xxxxxxxx xxxxxxxx xxxxxxxx  xxxxxxxx xxxxxxxx xxxxxxxx xxxxxxxx 56

WARNING:REPEATED_WORD: Possible repeated word: 'xxxxxxxx'
#370: FILE: drivers/block/drbd/drbd_vli.h:315:
+11111111  xxxxxxxx xxxxxxxx xxxxxxxx  xxxxxxxx xxxxxxxx xxxxxxxx xxxxxxxx 56

WARNING:REPEATED_WORD: Possible repeated word: 'xxxxxxxx'
#370: FILE: drivers/block/drbd/drbd_vli.h:315:
+11111111  xxxxxxxx xxxxxxxx xxxxxxxx  xxxxxxxx xxxxxxxx xxxxxxxx xxxxxxxx 56

WARNING:REPEATED_WORD: Possible repeated word: 'xxxxxxxx'
#370: FILE: drivers/block/drbd/drbd_vli.h:315:
+11111111  xxxxxxxx xxxxxxxx xxxxxxxx  xxxxxxxx xxxxxxxx xxxxxxxx xxxxxxxx 56

WARNING:REPEATED_WORD: Possible repeated word: 'xxxxxxxx'
#370: FILE: drivers/block/drbd/drbd_vli.h:315:
+11111111  xxxxxxxx xxxxxxxx xxxxxxxx  xxxxxxxx xxxxxxxx xxxxxxxx xxxxxxxx 56

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#371: FILE: drivers/block/drbd/drbd_vli.h:316:
+ * maximum encodable value: 0x100000400202131 == 2**56 + some */

WARNING:TYPO_SPELLING: 'compiletime' may be misspelled - perhaps 'compile time'?
#375: FILE: drivers/block/drbd/drbd_vli.h:320:
+ * The rest of the code table is calculated at compiletime from this. */
                                                ^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#375: FILE: drivers/block/drbd/drbd_vli.h:320:
+ * The rest of the code table is calculated at compiletime from this. */

ERROR:SPACING: space prohibited after that open parenthesis '('
#379: FILE: drivers/block/drbd/drbd_vli.h:324:
+	LEVEL( 1, 1, 0x00); \

ERROR:SPACING: space prohibited after that open parenthesis '('
#380: FILE: drivers/block/drbd/drbd_vli.h:325:
+	LEVEL( 3, 2, 0x01); \

ERROR:SPACING: space prohibited after that open parenthesis '('
#381: FILE: drivers/block/drbd/drbd_vli.h:326:
+	LEVEL( 4, 3, 0x03); \

ERROR:SPACING: space prohibited after that open parenthesis '('
#382: FILE: drivers/block/drbd/drbd_vli.h:327:
+	LEVEL( 6, 4, 0x07); \

ERROR:SPACING: space prohibited after that open parenthesis '('
#383: FILE: drivers/block/drbd/drbd_vli.h:328:
+	LEVEL( 8, 5, 0x0f); \

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#396: FILE: drivers/block/drbd/drbd_vli.h:341:
+ * All of these can encode at least "2 ** 56". */

ERROR:SPACING: space prohibited after that open parenthesis '('
#400: FILE: drivers/block/drbd/drbd_vli.h:345:
+	LEVEL( 2, 1, 0x00); \

ERROR:SPACING: space prohibited after that open parenthesis '('
#401: FILE: drivers/block/drbd/drbd_vli.h:346:
+	LEVEL( 3, 2, 0x01); \

ERROR:SPACING: space prohibited after that open parenthesis '('
#402: FILE: drivers/block/drbd/drbd_vli.h:347:
+	LEVEL( 5, 3, 0x03); \

ERROR:SPACING: space prohibited after that open parenthesis '('
#403: FILE: drivers/block/drbd/drbd_vli.h:348:
+	LEVEL( 7, 4, 0x07); \

ERROR:SPACING: space prohibited after that open parenthesis '('
#414: FILE: drivers/block/drbd/drbd_vli.h:359:
+	LEVEL( 2, 1, 0x00); \

ERROR:SPACING: space prohibited after that open parenthesis '('
#415: FILE: drivers/block/drbd/drbd_vli.h:360:
+	LEVEL( 4, 2, 0x01); \

ERROR:SPACING: space prohibited after that open parenthesis '('
#416: FILE: drivers/block/drbd/drbd_vli.h:361:
+	LEVEL( 6, 3, 0x03); \

ERROR:SPACING: space prohibited after that open parenthesis '('
#417: FILE: drivers/block/drbd/drbd_vli.h:362:
+	LEVEL( 9, 4, 0x07); \

ERROR:SPACING: space prohibited after that open parenthesis '('
#427: FILE: drivers/block/drbd/drbd_vli.h:372:
+	LEVEL( 3, 1, 0x00); \

ERROR:SPACING: space prohibited after that open parenthesis '('
#428: FILE: drivers/block/drbd/drbd_vli.h:373:
+	LEVEL( 5, 2, 0x01); \

ERROR:SPACING: space prohibited after that open parenthesis '('
#429: FILE: drivers/block/drbd/drbd_vli.h:374:
+	LEVEL( 8, 3, 0x03); \

ERROR:SPACING: space prohibited after that open parenthesis '('
#439: FILE: drivers/block/drbd/drbd_vli.h:384:
+	LEVEL( 4, 1, 0x00); \

ERROR:SPACING: space prohibited after that open parenthesis '('
#440: FILE: drivers/block/drbd/drbd_vli.h:385:
+	LEVEL( 7, 2, 0x01); \

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#456: FILE: drivers/block/drbd/drbd_vli.h:401:
+ * BUG() for bad input, as that would mean a buggy code table. */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#461: FILE: drivers/block/drbd/drbd_vli.h:406:
+#define LEVEL(t,b,v)					\
                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#461: FILE: drivers/block/drbd/drbd_vli.h:406:
+#define LEVEL(t,b,v)					\
                  ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 't' - possible side-effects?
#461: FILE: drivers/block/drbd/drbd_vli.h:406:
+#define LEVEL(t,b,v)					\
+	do {						\
+		if ((in & ((1 << b) -1)) == v) {	\
+			*out = ((in & ((~0ULL) >> (64-t))) >> b) + adj;	\
+			return t;			\
+		}					\
+		adj += 1ULL << (t - b);			\
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 't' may be better as '(t)' to avoid precedence issues
#461: FILE: drivers/block/drbd/drbd_vli.h:406:
+#define LEVEL(t,b,v)					\
+	do {						\
+		if ((in & ((1 << b) -1)) == v) {	\
+			*out = ((in & ((~0ULL) >> (64-t))) >> b) + adj;	\
+			return t;			\
+		}					\
+		adj += 1ULL << (t - b);			\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#461: FILE: drivers/block/drbd/drbd_vli.h:406:
+#define LEVEL(t,b,v)					\
+	do {						\
+		if ((in & ((1 << b) -1)) == v) {	\
+			*out = ((in & ((~0ULL) >> (64-t))) >> b) + adj;	\
+			return t;			\
+		}					\
+		adj += 1ULL << (t - b);			\
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'b' may be better as '(b)' to avoid precedence issues
#461: FILE: drivers/block/drbd/drbd_vli.h:406:
+#define LEVEL(t,b,v)					\
+	do {						\
+		if ((in & ((1 << b) -1)) == v) {	\
+			*out = ((in & ((~0ULL) >> (64-t))) >> b) + adj;	\
+			return t;			\
+		}					\
+		adj += 1ULL << (t - b);			\
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'v' may be better as '(v)' to avoid precedence issues
#461: FILE: drivers/block/drbd/drbd_vli.h:406:
+#define LEVEL(t,b,v)					\
+	do {						\
+		if ((in & ((1 << b) -1)) == v) {	\
+			*out = ((in & ((~0ULL) >> (64-t))) >> b) + adj;	\
+			return t;			\
+		}					\
+		adj += 1ULL << (t - b);			\
+	} while (0)

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#461: FILE: drivers/block/drbd/drbd_vli.h:406:
+#define LEVEL(t,b,v)					\
+	do {						\
+		if ((in & ((1 << b) -1)) == v) {	\
+			*out = ((in & ((~0ULL) >> (64-t))) >> b) + adj;	\
+			return t;			\
+		}					\
+		adj += 1ULL << (t - b);			\
+	} while (0)

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#463: FILE: drivers/block/drbd/drbd_vli.h:408:
+		if ((in & ((1 << b) -1)) == v) {	\
 		                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#464: FILE: drivers/block/drbd/drbd_vli.h:409:
+			*out = ((in & ((~0ULL) >> (64-t))) >> b) + adj;	\
 			                             ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#473: FILE: drivers/block/drbd/drbd_vli.h:418:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#478: FILE: drivers/block/drbd/drbd_vli.h:423:
+ * or negative error number */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#487: FILE: drivers/block/drbd/drbd_vli.h:432:
+#define LEVEL(t,b,v) do {		\
                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#487: FILE: drivers/block/drbd/drbd_vli.h:432:
+#define LEVEL(t,b,v) do {		\
                  ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 't' - possible side-effects?
#487: FILE: drivers/block/drbd/drbd_vli.h:432:
+#define LEVEL(t,b,v) do {		\
+		max += 1ULL << (t - b);	\
+		if (in <= max) {	\
+			if (out)	\
+				*out = ((in - adj) << b) | v;	\
+			return t;	\
+		}			\
+		adj = max + 1;		\
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 't' may be better as '(t)' to avoid precedence issues
#487: FILE: drivers/block/drbd/drbd_vli.h:432:
+#define LEVEL(t,b,v) do {		\
+		max += 1ULL << (t - b);	\
+		if (in <= max) {	\
+			if (out)	\
+				*out = ((in - adj) << b) | v;	\
+			return t;	\
+		}			\
+		adj = max + 1;		\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#487: FILE: drivers/block/drbd/drbd_vli.h:432:
+#define LEVEL(t,b,v) do {		\
+		max += 1ULL << (t - b);	\
+		if (in <= max) {	\
+			if (out)	\
+				*out = ((in - adj) << b) | v;	\
+			return t;	\
+		}			\
+		adj = max + 1;		\
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'b' may be better as '(b)' to avoid precedence issues
#487: FILE: drivers/block/drbd/drbd_vli.h:432:
+#define LEVEL(t,b,v) do {		\
+		max += 1ULL << (t - b);	\
+		if (in <= max) {	\
+			if (out)	\
+				*out = ((in - adj) << b) | v;	\
+			return t;	\
+		}			\
+		adj = max + 1;		\
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'v' may be better as '(v)' to avoid precedence issues
#487: FILE: drivers/block/drbd/drbd_vli.h:432:
+#define LEVEL(t,b,v) do {		\
+		max += 1ULL << (t - b);	\
+		if (in <= max) {	\
+			if (out)	\
+				*out = ((in - adj) << b) | v;	\
+			return t;	\
+		}			\
+		adj = max + 1;		\
+	} while (0)

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#487: FILE: drivers/block/drbd/drbd_vli.h:432:
+#define LEVEL(t,b,v) do {		\
+		max += 1ULL << (t - b);	\
+		if (in <= max) {	\
+			if (out)	\
+				*out = ((in - adj) << b) | v;	\
+			return t;	\
+		}			\
+		adj = max + 1;		\
+	} while (0)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#504: FILE: drivers/block/drbd/drbd_vli.h:449:
+/* encodes @in as vli into @bs;
+

WARNING:SELF_ASSIGNMENT: Do not use self-assignments to avoid compiler warnings
#513: FILE: drivers/block/drbd/drbd_vli.h:458:
+	u64 code = code;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000141061.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 31 errors, 32 warnings, 18 checks, 474 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000141061.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
