WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#38: 
#include <fcntl.h>

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
#include <pthread.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#40: 
#include <stdio.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
#include <unistd.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#42: 
#include <netinet/in.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
#include <sys/socket.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
#include <sys/syscall.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
#define SOCK_CLOEXEC 0x40000000

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
#ifdef __x86_64__

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
#define __NR_accept4 288

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
#elif __i386__

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
#define SYS_ACCEPT4     18

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
#define USE_SOCKETCALL 1

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
#else

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
#error "define syscall numbers for this architecture"

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
#endif

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
#define PORT 57392

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#218: 
#if USE_SOCKETCALL

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#219: 
      s2 = syscall (__NR_socketcall, SYS_ACCEPT4, s, NULL, 0, SOCK_CLOEXEC);

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#220: 
#else

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#222: 
#endif

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#298: FILE: include/linux/net.h:215:
+extern int ^I     sock_map_fd(struct socket *sock, int flags);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#298: FILE: include/linux/net.h:215:
+extern int 	     sock_map_fd(struct socket *sock, int flags);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#323: FILE: net/compat.c:526:
+static unsigned char nas[19]={AL(0),AL(3),AL(3),AL(3),AL(2),AL(3),
                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#323: FILE: net/compat.c:526:
+static unsigned char nas[19]={AL(0),AL(3),AL(3),AL(3),AL(2),AL(3),
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#323: FILE: net/compat.c:526:
+static unsigned char nas[19]={AL(0),AL(3),AL(3),AL(3),AL(2),AL(3),
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#323: FILE: net/compat.c:526:
+static unsigned char nas[19]={AL(0),AL(3),AL(3),AL(3),AL(2),AL(3),
                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#323: FILE: net/compat.c:526:
+static unsigned char nas[19]={AL(0),AL(3),AL(3),AL(3),AL(2),AL(3),
                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#323: FILE: net/compat.c:526:
+static unsigned char nas[19]={AL(0),AL(3),AL(3),AL(3),AL(2),AL(3),
                                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#326: FILE: net/compat.c:528:
+				AL(6),AL(2),AL(5),AL(5),AL(3),AL(3),
 				     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#326: FILE: net/compat.c:528:
+				AL(6),AL(2),AL(5),AL(5),AL(3),AL(3),
 				           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#326: FILE: net/compat.c:528:
+				AL(6),AL(2),AL(5),AL(5),AL(3),AL(3),
 				                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#326: FILE: net/compat.c:528:
+				AL(6),AL(2),AL(5),AL(5),AL(3),AL(3),
 				                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#326: FILE: net/compat.c:528:
+				AL(6),AL(2),AL(5),AL(5),AL(3),AL(3),
 				                             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#494: FILE: net/socket.c:2017:
+static const unsigned char nargs[19]={
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#498: FILE: net/socket.c:2020:
+	AL(6),AL(2),AL(5),AL(5),AL(3),AL(3),
 	     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#498: FILE: net/socket.c:2020:
+	AL(6),AL(2),AL(5),AL(5),AL(3),AL(3),
 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#498: FILE: net/socket.c:2020:
+	AL(6),AL(2),AL(5),AL(5),AL(3),AL(3),
 	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#498: FILE: net/socket.c:2020:
+	AL(6),AL(2),AL(5),AL(5),AL(3),AL(3),
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#498: FILE: net/socket.c:2020:
+	AL(6),AL(2),AL(5),AL(5),AL(3),AL(3),
 	                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#519: FILE: net/socket.c:2070:
+^I^I^I        (int __user *)a[2], 0);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#519: FILE: net/socket.c:2070:
+		    sys_accept4(a0, (struct sockaddr __user *)a1,
+			        (int __user *)a[2], 0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#530: FILE: net/socket.c:2120:
+^I^I^I        (int __user *)a[2], a[3]);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#530: FILE: net/socket.c:2120:
+		    sys_accept4(a0, (struct sockaddr __user *)a1,
+			        (int __user *)a[2], a[3]);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000290942.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 19 errors, 22 warnings, 3 checks, 236 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000290942.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
