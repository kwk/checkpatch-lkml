ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#55: FILE: arch/um/sys-i386/ldt.c:392:
+static short * host_ldt_entries = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#55: FILE: arch/um/sys-i386/ldt.c:392:
+static short * host_ldt_entries = NULL;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#65: FILE: arch/um/sys-i386/ldt.c:401:
+	if(host_ldt_entries != NULL)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "host_ldt_entries"
#65: FILE: arch/um/sys-i386/ldt.c:401:
+	if(host_ldt_entries != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#77: FILE: arch/um/sys-i386/ldt.c:411:
+		printk("ldt_get_host_info: couldn't allocate buffer for host "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ldt_get_host_info', this function's name, in a string
#77: FILE: arch/um/sys-i386/ldt.c:411:
+		printk("ldt_get_host_info: couldn't allocate buffer for host "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#78: FILE: arch/um/sys-i386/ldt.c:412:
+		printk("ldt_get_host_info: couldn't allocate buffer for host "
+		       "ldt\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#88: FILE: arch/um/sys-i386/ldt.c:438:
+			printk("ldt_get_host_info: couldn't allocate host ldt "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ldt_get_host_info', this function's name, in a string
#88: FILE: arch/um/sys-i386/ldt.c:438:
+			printk("ldt_get_host_info: couldn't allocate host ldt "

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#88: FILE: arch/um/sys-i386/ldt.c:438:
 		if(host_ldt_entries == NULL) {
+			printk("ldt_get_host_info: couldn't allocate host ldt "

WARNING:SPLIT_STRING: quoted string split across lines
#89: FILE: arch/um/sys-i386/ldt.c:439:
+			printk("ldt_get_host_info: couldn't allocate host ldt "
+			       "list\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: arch/um/sys-i386/ldt.c:573:
+^I                        ptr, bytecount);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000464670.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 7 warnings, 1 checks, 75 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000464670.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
