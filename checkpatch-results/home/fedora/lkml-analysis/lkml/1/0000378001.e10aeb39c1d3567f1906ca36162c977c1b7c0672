WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
cred struct with appropriate DAC and MAC controls for effecting that service.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#56: FILE: include/linux/cred.h:52:
+extern struct cred *get_kernel_cred(const char *, struct task_struct *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#56: FILE: include/linux/cred.h:52:
+extern struct cred *get_kernel_cred(const char *, struct task_struct *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#56: FILE: include/linux/cred.h:52:
+extern struct cred *get_kernel_cred(const char *, struct task_struct *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#57: FILE: include/linux/cred.h:53:
+extern int change_create_files_as(struct cred *, struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cred *' should also have an identifier name
#57: FILE: include/linux/cred.h:53:
+extern int change_create_files_as(struct cred *, struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#57: FILE: include/linux/cred.h:53:
+extern int change_create_files_as(struct cred *, struct inode *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#91: FILE: include/linux/security.h:1288:
+	int (*cred_kernel_act_as)(struct cred *cred, const char *service,
+			       struct task_struct *daemon);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#101: FILE: include/linux/security.h:1909:
+static inline int security_cred_kernel_act_as(struct cred *cred,
+					   const char *service,

WARNING:TYPO_SPELLING: 'deamon' may be misspelled - perhaps 'daemon'?
#157: FILE: kernel/cred.c:220:
+ * If @deamon is supplied, then the cred's uid, gid and groups list will be
        ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SIZEOF_PARENTHESIS: sizeof *cred should be sizeof(*cred)
#171: FILE: kernel/cred.c:234:
+	cred = kzalloc(sizeof *cred, GFP_KERNEL);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#197: FILE: kernel/cred.c:260:
+EXPORT_SYMBOL(get_kernel_cred);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#213: FILE: kernel/cred.c:276:
+EXPORT_SYMBOL(change_create_files_as);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*csec)...) over kzalloc(sizeof(struct cred_security_struct)...)
#274: FILE: security/selinux/hooks.c:2795:
+	csec = kzalloc(sizeof(struct cred_security_struct), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000378001.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 5 checks, 232 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000378001.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
