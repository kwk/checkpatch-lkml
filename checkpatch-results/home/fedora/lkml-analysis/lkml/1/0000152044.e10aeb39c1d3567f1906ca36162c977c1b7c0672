WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#38: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#43: FILE: arch/microblaze/kernel/timer.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#87: FILE: arch/microblaze/kernel/timer.c:45:
+#define TCSR_MDT	(1<<0)
                 	  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#87: FILE: arch/microblaze/kernel/timer.c:45:
+#define TCSR_MDT	(1<<0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#88: FILE: arch/microblaze/kernel/timer.c:46:
+#define TCSR_UDT	(1<<1)
                 	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#88: FILE: arch/microblaze/kernel/timer.c:46:
+#define TCSR_UDT	(1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#89: FILE: arch/microblaze/kernel/timer.c:47:
+#define TCSR_GENT	(1<<2)
                  	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#89: FILE: arch/microblaze/kernel/timer.c:47:
+#define TCSR_GENT	(1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#90: FILE: arch/microblaze/kernel/timer.c:48:
+#define TCSR_CAPT	(1<<3)
                  	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#90: FILE: arch/microblaze/kernel/timer.c:48:
+#define TCSR_CAPT	(1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#91: FILE: arch/microblaze/kernel/timer.c:49:
+#define TCSR_ARHT	(1<<4)
                  	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#91: FILE: arch/microblaze/kernel/timer.c:49:
+#define TCSR_ARHT	(1<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#92: FILE: arch/microblaze/kernel/timer.c:50:
+#define TCSR_LOAD	(1<<5)
                  	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#92: FILE: arch/microblaze/kernel/timer.c:50:
+#define TCSR_LOAD	(1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#93: FILE: arch/microblaze/kernel/timer.c:51:
+#define TCSR_ENIT	(1<<6)
                  	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#93: FILE: arch/microblaze/kernel/timer.c:51:
+#define TCSR_ENIT	(1<<6)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#94: FILE: arch/microblaze/kernel/timer.c:52:
+#define TCSR_ENT	(1<<7)
                 	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#94: FILE: arch/microblaze/kernel/timer.c:52:
+#define TCSR_ENT	(1<<7)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#95: FILE: arch/microblaze/kernel/timer.c:53:
+#define TCSR_TINT	(1<<8)
                  	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#95: FILE: arch/microblaze/kernel/timer.c:53:
+#define TCSR_TINT	(1<<8)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#96: FILE: arch/microblaze/kernel/timer.c:54:
+#define TCSR_PWMA	(1<<9)
                  	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#96: FILE: arch/microblaze/kernel/timer.c:54:
+#define TCSR_PWMA	(1<<9)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#97: FILE: arch/microblaze/kernel/timer.c:55:
+#define TCSR_ENALL	(1<<10)
                   	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#97: FILE: arch/microblaze/kernel/timer.c:55:
+#define TCSR_ENALL	(1<<10)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#127: FILE: arch/microblaze/kernel/timer.c:85:
+	out_be32(TIMER_BASE + TCSR0,
+			TCSR_TINT|TCSR_ENIT|TCSR_ENT|TCSR_ARHT|TCSR_UDT);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#127: FILE: arch/microblaze/kernel/timer.c:85:
+			TCSR_TINT|TCSR_ENIT|TCSR_ENT|TCSR_ARHT|TCSR_UDT);
 			         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#127: FILE: arch/microblaze/kernel/timer.c:85:
+			TCSR_TINT|TCSR_ENIT|TCSR_ENT|TCSR_ARHT|TCSR_UDT);
 			                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#127: FILE: arch/microblaze/kernel/timer.c:85:
+			TCSR_TINT|TCSR_ENIT|TCSR_ENT|TCSR_ARHT|TCSR_UDT);
 			                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#127: FILE: arch/microblaze/kernel/timer.c:85:
+			TCSR_TINT|TCSR_ENIT|TCSR_ENT|TCSR_ARHT|TCSR_UDT);
 			                                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: arch/microblaze/kernel/timer.c:98:
+	out_be32(TIMER_BASE + TCSR0,
+			TCSR_TINT|TCSR_ENIT|TCSR_ENT|TCSR_ARHT|TCSR_UDT);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#140: FILE: arch/microblaze/kernel/timer.c:98:
+			TCSR_TINT|TCSR_ENIT|TCSR_ENT|TCSR_ARHT|TCSR_UDT);
 			         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#140: FILE: arch/microblaze/kernel/timer.c:98:
+			TCSR_TINT|TCSR_ENIT|TCSR_ENT|TCSR_ARHT|TCSR_UDT);
 			                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#140: FILE: arch/microblaze/kernel/timer.c:98:
+			TCSR_TINT|TCSR_ENIT|TCSR_ENT|TCSR_ARHT|TCSR_UDT);
 			                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#140: FILE: arch/microblaze/kernel/timer.c:98:
+			TCSR_TINT|TCSR_ENIT|TCSR_ENT|TCSR_ARHT|TCSR_UDT);
 			                                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#144: FILE: arch/microblaze/kernel/timer.c:102:
+static int microblaze_timer_set_next_event(unsigned long delta,
+					struct clock_event_device *dev)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#152: FILE: arch/microblaze/kernel/timer.c:110:
+static void microblaze_timer_set_mode(enum clock_event_mode mode,
+				struct clock_event_device *evt)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#156: FILE: arch/microblaze/kernel/timer.c:114:
+		printk(KERN_INFO "%s: periodic\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#160: FILE: arch/microblaze/kernel/timer.c:118:
+		printk(KERN_INFO "%s: oneshot\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#163: FILE: arch/microblaze/kernel/timer.c:121:
+		printk(KERN_INFO "%s: unused\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#166: FILE: arch/microblaze/kernel/timer.c:124:
+		printk(KERN_INFO "%s: shutdown\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#170: FILE: arch/microblaze/kernel/timer.c:128:
+		printk(KERN_INFO "%s: resume\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: arch/microblaze/kernel/timer.c:169:
+		div_sc(cpuinfo.cpu_clock_freq, NSEC_PER_SEC,
+				clockevent_microblaze_timer.shift);

CHECK:SPACING: No space is necessary after a cast
#223: FILE: arch/microblaze/kernel/timer.c:181:
+	return (cycle_t) (in_be32(TIMER_BASE + TCR1));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: arch/microblaze/kernel/timer.c:197:
+			clocksource_hz2mult(cpuinfo.cpu_clock_freq,
+						clocksource_microblaze.shift);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#246: FILE: arch/microblaze/kernel/timer.c:204:
+	out_be32(TIMER_BASE + TCSR1, TCSR_TINT|TCSR_ENT|TCSR_ARHT);
 	                                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#246: FILE: arch/microblaze/kernel/timer.c:204:
+	out_be32(TIMER_BASE + TCSR1, TCSR_TINT|TCSR_ENT|TCSR_ARHT);
 	                                               ^

WARNING:STATIC_CONST_CHAR_ARRAY: char * array declaration might be better as static const
#265: FILE: arch/microblaze/kernel/timer.c:223:
+	char *timer_list[] = {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "timer_list[i]"
#272: FILE: arch/microblaze/kernel/timer.c:230:
+	for (i = 0; timer_list[i] != NULL; i++) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#278: FILE: arch/microblaze/kernel/timer.c:236:
+	timer_baseaddr = *(int *) of_get_property(timer, "reg", NULL);

CHECK:SPACING: No space is necessary after a cast
#279: FILE: arch/microblaze/kernel/timer.c:237:
+	timer_baseaddr = (unsigned long) ioremap(timer_baseaddr, PAGE_SIZE);

CHECK:SPACING: No space is necessary after a cast
#280: FILE: arch/microblaze/kernel/timer.c:238:
+	irq = *(int *) of_get_property(timer, "interrupts", NULL);

CHECK:SPACING: No space is necessary after a cast
#282: FILE: arch/microblaze/kernel/timer.c:240:
+		*(int *) of_get_property(timer, "xlnx,one-timer-only", NULL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#284: FILE: arch/microblaze/kernel/timer.c:242:
+		printk(KERN_EMERG "Please enable two timers in HW\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#285: FILE: arch/microblaze/kernel/timer.c:243:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: No space is necessary after a cast
#289: FILE: arch/microblaze/kernel/timer.c:247:
+	selfmod_function((int *) arr_func, timer_baseaddr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#291: FILE: arch/microblaze/kernel/timer.c:249:
+	printk(KERN_INFO "%s #0 at 0x%08x, irq=%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#292: FILE: arch/microblaze/kernel/timer.c:250:
+	printk(KERN_INFO "%s #0 at 0x%08x, irq=%d\n",
+		timer_list[i], timer_baseaddr, irq);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000152044.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 11 warnings, 46 checks, 261 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000152044.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
