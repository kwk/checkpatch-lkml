WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#36: FILE: Makefile:4:
+EXTRAVERSION = .3
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*__new_cbq)...) over kzalloc(sizeof(struct cn_callback_entry)...)
#135: FILE: drivers/connector/connector.c:152:
+				__new_cbq = kzalloc(sizeof(struct cn_callback_entry), GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#147: FILE: drivers/connector/connector.c:162:
+					INIT_WORK(&__new_cbq->work,
 							&cn_queue_wrapper);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#197: FILE: drivers/net/wireless/bcm43xx/bcm43xx_dma.c:154:
+	dmaaddr = pci_map_single(ring->bcm->pci_dev,
 					 buf, len,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#253: FILE: drivers/net/wireless/bcm43xx/bcm43xx_dma.c:216:
+	ring->descbase = pci_alloc_consistent(ring->bcm->pci_dev, BCM43xx_DMA_RINGMEMSIZE,
+					    &(ring->dmabase));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ring->dmabase
#253: FILE: drivers/net/wireless/bcm43xx/bcm43xx_dma.c:216:
+					    &(ring->dmabase));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#258: FILE: drivers/net/wireless/bcm43xx/bcm43xx_dma.c:219:
+		/* Allocation may have failed due to pci_alloc_consistent
+		   insisting on use of GFP_DMA, which is more restrictive

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#259: FILE: drivers/net/wireless/bcm43xx/bcm43xx_dma.c:220:
+		   than necessary...  */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#279: FILE: drivers/net/wireless/bcm43xx/bcm43xx_dma.c:240:
+			rx_ring_dma = pci_map_single(ring->bcm->pci_dev,
+						 rx_ring, BCM43xx_DMA_RINGMEMSIZE,

ERROR:CODE_INDENT: code indent should use tabs where possible
#290: FILE: drivers/net/wireless/bcm43xx/bcm43xx_dma.c:251:
+                }$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: drivers/net/wireless/bcm43xx/bcm43xx_dma.c:251:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#292: FILE: drivers/net/wireless/bcm43xx/bcm43xx_dma.c:253:
+                ring->descbase = rx_ring;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: drivers/net/wireless/bcm43xx/bcm43xx_dma.c:253:
+                ring->descbase = rx_ring;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#293: FILE: drivers/net/wireless/bcm43xx/bcm43xx_dma.c:254:
+                ring->dmabase = rx_ring_dma;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: drivers/net/wireless/bcm43xx/bcm43xx_dma.c:254:
+                ring->dmabase = rx_ring_dma;$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#299: FILE: drivers/net/wireless/bcm43xx/bcm43xx_dma.c:260:
+	printk(KERN_ERR PFX "DMA ringmemory allocation failed\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#309: FILE: drivers/net/wireless/bcm43xx/bcm43xx_dma.c:445:
+	/* This hardware bug work-around adapted from the b44 driver.
+	   The chip may be unable to do PCI DMA to/from anything above 1GB */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#309: FILE: drivers/net/wireless/bcm43xx/bcm43xx_dma.c:445:
+	   The chip may be unable to do PCI DMA to/from anything above 1GB */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#318: FILE: drivers/net/wireless/bcm43xx/bcm43xx_dma.c:454:
+		skb = __dev_alloc_skb(ring->rx_buffersize,GFP_DMA);
 		                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#319: FILE: drivers/net/wireless/bcm43xx/bcm43xx_dma.c:455:
+		if (skb == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#341: FILE: drivers/net/wireless/bcm43xx/bcm43xx_dma.c:699:
+	printk(KERN_ERR PFX "Error in bcm43xx_setup_dmaring\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'bcm43xx_setup_dmaring', this function's name, in a string
#341: FILE: drivers/net/wireless/bcm43xx/bcm43xx_dma.c:699:
+	printk(KERN_ERR PFX "Error in bcm43xx_setup_dmaring\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#402: FILE: drivers/net/wireless/bcm43xx/bcm43xx_dma.c:852:
+	printk(KERN_WARNING PFX "DMA not supported on this device."

WARNING:SPLIT_STRING: quoted string split across lines
#403: FILE: drivers/net/wireless/bcm43xx/bcm43xx_dma.c:853:
+	printk(KERN_WARNING PFX "DMA not supported on this device."
+				" Falling back to PIO.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#405: FILE: drivers/net/wireless/bcm43xx/bcm43xx_dma.c:855:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#407: FILE: drivers/net/wireless/bcm43xx/bcm43xx_dma.c:857:
+	printk(KERN_ERR PFX "FATAL: DMA not supported and PIO not configured. "

WARNING:SPLIT_STRING: quoted string split across lines
#408: FILE: drivers/net/wireless/bcm43xx/bcm43xx_dma.c:858:
+	printk(KERN_ERR PFX "FATAL: DMA not supported and PIO not configured. "
+			    "Please recompile the driver with PIO support.\n");

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#428: FILE: drivers/net/wireless/bcm43xx/bcm43xx_dma.c:987:
+		/* chip cannot handle DMA to/from > 1GB, use bounce buffer (copied from b44 driver) */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#431: FILE: drivers/net/wireless/bcm43xx/bcm43xx_dma.c:990:
+		bounce_skb = __dev_alloc_skb(skb->len, GFP_ATOMIC|GFP_DMA);
 		                                                 ^

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#462: FILE: drivers/scsi/scsi_debug.c:958:
+	if (! arr)
 	    ^

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#473: FILE: drivers/scsi/scsi_debug.c:1223:
+	if (! arr)
 	    ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#482: FILE: drivers/scsi/scsi_debug.c:2003:
+	if (NULL == devip)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#492: FILE: drivers/scsi/scsi_debug.c:2053:
+		open_devip = kzalloc(sizeof(*open_devip),GFP_ATOMIC);
 		                                        ^

WARNING:STATIC_CONST: Move const after static - use 'static const struct usb_endpoint_descriptor'
#504: FILE: drivers/usb/serial/keyspan.c:1278:
+static struct usb_endpoint_descriptor const *find_ep(struct usb_serial const *serial,

CHECK:CAMELCASE: Avoid CamelCase: <bNumEndpoints>
#512: FILE: drivers/usb/serial/keyspan.c:1286:
+	for (i = 0; i < iface_desc->desc.bNumEndpoints; ++i) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <bEndpointAddress>
#514: FILE: drivers/usb/serial/keyspan.c:1288:
+		if (ep->bEndpointAddress == endpoint)

WARNING:SPLIT_STRING: quoted string split across lines
#518: FILE: drivers/usb/serial/keyspan.c:1292:
+	dev_warn(&serial->interface->dev, "found no endpoint descriptor for "
+		 "endpoint %x\n", endpoint);

CHECK:CAMELCASE: Avoid CamelCase: <bInterval>
#550: FILE: drivers/usb/serial/keyspan.c:1324:
+				 ep_desc->bInterval);

CHECK:CAMELCASE: Avoid CamelCase: <bmAttributes>
#559: FILE: drivers/usb/serial/keyspan.c:1333:
+			 ep_desc->bmAttributes & USB_ENDPOINT_XFERTYPE_MASK);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sk->sk_prot->compat_getsockopt"
#617: FILE: net/core/sock.c:1600:
+	if (sk->sk_prot->compat_getsockopt != NULL)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#644: FILE: net/ipv4/netfilter/ip_conntrack_proto_tcp.c:825:
+	[TH_SYN|TH_URG]			= 1,
 	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#645: FILE: net/ipv4/netfilter/ip_conntrack_proto_tcp.c:826:
+	[TH_SYN|TH_PUSH|TH_URG]		= 1,
 	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#645: FILE: net/ipv4/netfilter/ip_conntrack_proto_tcp.c:826:
+	[TH_SYN|TH_PUSH|TH_URG]		= 1,
 	               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#646: FILE: net/ipv4/netfilter/ip_conntrack_proto_tcp.c:827:
+	[TH_SYN|TH_ACK]			= 1,
 	       ^

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#660: FILE: net/ipv4/netfilter/nf_nat_core.c:543:
+#if defined(CONFIG_NF_CT_NETLINK) || defined(CONFIG_NF_CT_NETLINK_MODULE)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#674: FILE: net/ipv4/netfilter/nf_nat_proto_gre.c:155:
+#if defined(CONFIG_NF_CT_NETLINK) || defined(CONFIG_NF_CT_NETLINK_MODULE)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#688: FILE: net/ipv4/netfilter/nf_nat_proto_icmp.c:81:
+#if defined(CONFIG_NF_CT_NETLINK) || defined(CONFIG_NF_CT_NETLINK_MODULE)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#702: FILE: net/ipv4/netfilter/nf_nat_proto_tcp.c:143:
+#if defined(CONFIG_NF_CT_NETLINK) || defined(CONFIG_NF_CT_NETLINK_MODULE)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#716: FILE: net/ipv4/netfilter/nf_nat_proto_udp.c:133:
+#if defined(CONFIG_NF_CT_NETLINK) || defined(CONFIG_NF_CT_NETLINK_MODULE)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#779: FILE: net/netfilter/nf_conntrack_proto_gre.c:284:
+#if defined(CONFIG_NF_CT_NETLINK) || defined(CONFIG_NF_CT_NETLINK_MODULE)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#793: FILE: net/netfilter/nf_conntrack_proto_tcp.c:782:
+	[TH_SYN|TH_URG]			= 1,
 	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#794: FILE: net/netfilter/nf_conntrack_proto_tcp.c:783:
+	[TH_SYN|TH_PUSH|TH_URG]		= 1,
 	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#794: FILE: net/netfilter/nf_conntrack_proto_tcp.c:783:
+	[TH_SYN|TH_PUSH|TH_URG]		= 1,
 	               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#795: FILE: net/netfilter/nf_conntrack_proto_tcp.c:784:
+	[TH_SYN|TH_ACK]			= 1,
 	       ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000456547.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 27 warnings, 21 checks, 694 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000456547.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
