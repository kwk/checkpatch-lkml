WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
>> To solve the problem, kdump developers discussed it at lkml and kexec-ml.

WARNING:TYPO_SPELLING: 'whcih' may be misspelled - perhaps 'which'?
#60: 
>so...  will this permit us to generate kdump files whcih don't have any
                                                    ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'defination' may be misspelled - perhaps 'definition'?
#72: 
OK. I added __attribute__ ((format (printf, 1, 2))) to the defination
                                                           ^^^^^^^^^^

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#175: FILE: arch/ia64/kernel/machine_kexec.c:24:
+#include <asm/processor.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

ERROR:SPACING: exactly one space required after that #elif
#198: FILE: arch/ia64/kernel/machine_kexec.c:146:
+#elif  CONFIG_PGTABLE_4

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#264: FILE: include/linux/kexec.h:127:
+	__attribute__ ((format (printf, 1, 2)));

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'name' may be better as '(name)' to avoid precedence issues
#267: FILE: include/linux/kexec.h:130:
+#define SYMBOL(name) \
+	vmcoreinfo_append_str("SYMBOL(%s)=%lx\n", #name, (unsigned long)&name)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'name' may be better as '(name)' to avoid precedence issues
#272: FILE: include/linux/kexec.h:135:
+#define OFFSET(name, field) \
+	vmcoreinfo_append_str("OFFSET(%s.%s)=%lu\n", #name, #field, \
+			      (unsigned long)&(((struct name *)0)->field))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'field' may be better as '(field)' to avoid precedence issues
#272: FILE: include/linux/kexec.h:135:
+#define OFFSET(name, field) \
+	vmcoreinfo_append_str("OFFSET(%s.%s)=%lu\n", #name, #field, \
+			      (unsigned long)&(((struct name *)0)->field))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#290: FILE: include/linux/kexec.h:173:
+#define VMCOREINFO_NOTE_SIZE       (KEXEC_NOTE_HEAD_BYTES*2 + VMCOREINFO_BYTES \
                                                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#298: FILE: include/linux/kexec.h:181:
+extern u32 vmcoreinfo_note[VMCOREINFO_NOTE_SIZE/4];
                                                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#327: FILE: kernel/kexec.c:41:
+u32 vmcoreinfo_note[VMCOREINFO_NOTE_SIZE/4];
                                         ^

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#328: FILE: kernel/kexec.c:42:
+size_t vmcoreinfo_size = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#386: FILE: kernel/kexec.c:1189:
+void __attribute__ ((weak)) arch_crash_save_vmcoreinfo(void)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#389: FILE: kernel/kexec.c:1192:
+unsigned long __attribute__ ((weak)) paddr_vmcoreinfo_note(void)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000387729.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 6 warnings, 7 checks, 298 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000387729.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
