WARNING:BAD_SIGN_OFF: Use a single space after Cc:
#31: 
CC:     Alan Cox <alan@lxorguk.ukuu.org.uk

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Alan Cox <alan@lxorguk.ukuu.org.uk'
#31: 
CC:     Alan Cox <alan@lxorguk.ukuu.org.uk

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#32: 
Signed-off-by:	Doug Thompson <dougthompson@xmission.com>

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#48: FILE: drivers/edac/Kconfig:126:
+config EDAC_MPC85XX
+	tristate "Freescale MPC85xx"
+	depends on EDAC_MM_EDAC && FSL_SOC && MPC85xx
+	help
+	  Support for error detection and correction on the Freescale
+	  MPC8560, MPC8540, MPC8548
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#74: FILE: drivers/edac/mpc85xx_edac.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'kenel' may be misspelled - perhaps 'kernel'?
#75: FILE: drivers/edac/mpc85xx_edac.c:2:
+ * Freescale MPC85xx Memory Controller kenel module
                                        ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#127: FILE: drivers/edac/mpc85xx_edac.c:54:
+	struct mpc85xx_mc_pdata *pdata = mci->pvt_info;
+	return sprintf(data, "0x%08x",

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#136: FILE: drivers/edac/mpc85xx_edac.c:63:
+	struct mpc85xx_mc_pdata *pdata = mci->pvt_info;
+	return sprintf(data, "0x%08x",

WARNING:LINE_SPACING: Missing a blank line after declarations
#144: FILE: drivers/edac/mpc85xx_edac.c:71:
+	struct mpc85xx_mc_pdata *pdata = mci->pvt_info;
+	return sprintf(data, "0x%08x",

WARNING:LINE_SPACING: Missing a blank line after declarations
#152: FILE: drivers/edac/mpc85xx_edac.c:79:
+	struct mpc85xx_mc_pdata *pdata = mci->pvt_info;
+	if (isdigit(*data)) {

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#154: FILE: drivers/edac/mpc85xx_edac.c:81:
+			 simple_strtoul(data, NULL, 0));

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:LINE_SPACING: Missing a blank line after declarations
#164: FILE: drivers/edac/mpc85xx_edac.c:91:
+	struct mpc85xx_mc_pdata *pdata = mci->pvt_info;
+	if (isdigit(*data)) {

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#166: FILE: drivers/edac/mpc85xx_edac.c:93:
+			 simple_strtoul(data, NULL, 0));

WARNING:LINE_SPACING: Missing a blank line after declarations
#176: FILE: drivers/edac/mpc85xx_edac.c:103:
+	struct mpc85xx_mc_pdata *pdata = mci->pvt_info;
+	if (isdigit(*data)) {

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#178: FILE: drivers/edac/mpc85xx_edac.c:105:
+			 simple_strtoul(data, NULL, 0));

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#188: FILE: drivers/edac/mpc85xx_edac.c:115:
+		  .mode = (S_IRUGO | S_IWUSR)

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#195: FILE: drivers/edac/mpc85xx_edac.c:122:
+		  .mode = (S_IRUGO | S_IWUSR)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#202: FILE: drivers/edac/mpc85xx_edac.c:129:
+		  .mode = (S_IRUGO | S_IWUSR)

WARNING:TABSTOP: Statements should start on a tabstop
#210: FILE: drivers/edac/mpc85xx_edac.c:137:
+	 }

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#234: FILE: drivers/edac/mpc85xx_edac.c:161:
+	printk(KERN_ERR "PCI error(s) detected\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#235: FILE: drivers/edac/mpc85xx_edac.c:162:
+	printk(KERN_ERR "PCI/X ERR_DR register: %#08x\n", err_detect);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#237: FILE: drivers/edac/mpc85xx_edac.c:164:
+	printk(KERN_ERR "PCI/X ERR_ATTRIB register: %#08x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#239: FILE: drivers/edac/mpc85xx_edac.c:166:
+	printk(KERN_ERR "PCI/X ERR_ADDR register: %#08x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#241: FILE: drivers/edac/mpc85xx_edac.c:168:
+	printk(KERN_ERR "PCI/X ERR_EXT_ADDR register: %#08x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#243: FILE: drivers/edac/mpc85xx_edac.c:170:
+	printk(KERN_ERR "PCI/X ERR_DL register: %#08x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#245: FILE: drivers/edac/mpc85xx_edac.c:172:
+	printk(KERN_ERR "PCI/X ERR_DH register: %#08x\n",

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#274: FILE: drivers/edac/mpc85xx_edac.c:201:
+static int __devinit mpc85xx_pci_err_probe(struct platform_device *pdev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#304: FILE: drivers/edac/mpc85xx_edac.c:231:
+		printk(KERN_ERR "%s: Unable to get resource for "

WARNING:SPLIT_STRING: quoted string split across lines
#305: FILE: drivers/edac/mpc85xx_edac.c:232:
+		printk(KERN_ERR "%s: Unable to get resource for "
+		       "PCI err regs\n", __func__);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#311: FILE: drivers/edac/mpc85xx_edac.c:238:
+		printk(KERN_ERR "%s: Error while requesting mem region\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#320: FILE: drivers/edac/mpc85xx_edac.c:247:
+		printk(KERN_ERR "%s: Unable to setup PCI err regs\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#350: FILE: drivers/edac/mpc85xx_edac.c:277:
+			printk(KERN_ERR

WARNING:TYPO_SPELLING: 'requiest' may be misspelled - perhaps 'request'?
#351: FILE: drivers/edac/mpc85xx_edac.c:278:
+			       "%s: Unable to requiest irq %d for "
 			                      ^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#352: FILE: drivers/edac/mpc85xx_edac.c:279:
+			       "%s: Unable to requiest irq %d for "
+			       "MPC85xx PCI err\n", __func__, pdata->irq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#357: FILE: drivers/edac/mpc85xx_edac.c:284:
+		printk(KERN_INFO EDAC_MOD_STR " acquired irq %d for PCI Err\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#363: FILE: drivers/edac/mpc85xx_edac.c:290:
+	printk(KERN_INFO EDAC_MOD_STR " PCI err registered\n");

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#380: FILE: drivers/edac/mpc85xx_edac.c:307:
+	debugf0("%s()\n", __func__);

WARNING:LINE_SPACING: Missing a blank line after declarations
#415: FILE: drivers/edac/mpc85xx_edac.c:342:
+	struct mpc85xx_l2_pdata *pdata = edac_dev->pvt_info;
+	return sprintf(data, "0x%08x",

WARNING:LINE_SPACING: Missing a blank line after declarations
#423: FILE: drivers/edac/mpc85xx_edac.c:350:
+	struct mpc85xx_l2_pdata *pdata = edac_dev->pvt_info;
+	return sprintf(data, "0x%08x",

WARNING:LINE_SPACING: Missing a blank line after declarations
#431: FILE: drivers/edac/mpc85xx_edac.c:358:
+	struct mpc85xx_l2_pdata *pdata = edac_dev->pvt_info;
+	return sprintf(data, "0x%08x",

WARNING:LINE_SPACING: Missing a blank line after declarations
#440: FILE: drivers/edac/mpc85xx_edac.c:367:
+	struct mpc85xx_l2_pdata *pdata = edac_dev->pvt_info;
+	if (isdigit(*data)) {

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#442: FILE: drivers/edac/mpc85xx_edac.c:369:
+			 simple_strtoul(data, NULL, 0));

WARNING:LINE_SPACING: Missing a blank line after declarations
#453: FILE: drivers/edac/mpc85xx_edac.c:380:
+	struct mpc85xx_l2_pdata *pdata = edac_dev->pvt_info;
+	if (isdigit(*data)) {

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#455: FILE: drivers/edac/mpc85xx_edac.c:382:
+			 simple_strtoul(data, NULL, 0));

WARNING:LINE_SPACING: Missing a blank line after declarations
#466: FILE: drivers/edac/mpc85xx_edac.c:393:
+	struct mpc85xx_l2_pdata *pdata = edac_dev->pvt_info;
+	if (isdigit(*data)) {

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#468: FILE: drivers/edac/mpc85xx_edac.c:395:
+			 simple_strtoul(data, NULL, 0));

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#478: FILE: drivers/edac/mpc85xx_edac.c:405:
+		  .mode = (S_IRUGO | S_IWUSR)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#485: FILE: drivers/edac/mpc85xx_edac.c:412:
+		  .mode = (S_IRUGO | S_IWUSR)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#492: FILE: drivers/edac/mpc85xx_edac.c:419:
+		  .mode = (S_IRUGO | S_IWUSR)

WARNING:TABSTOP: Statements should start on a tabstop
#500: FILE: drivers/edac/mpc85xx_edac.c:427:
+	 }

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#521: FILE: drivers/edac/mpc85xx_edac.c:448:
+	printk(KERN_ERR "ECC Error in CPU L2 cache\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#522: FILE: drivers/edac/mpc85xx_edac.c:449:
+	printk(KERN_ERR "L2 Error Detect Register: 0x%08x\n", err_detect);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#523: FILE: drivers/edac/mpc85xx_edac.c:450:
+	printk(KERN_ERR "L2 Error Capture Data High Register: 0x%08x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#525: FILE: drivers/edac/mpc85xx_edac.c:452:
+	printk(KERN_ERR "L2 Error Capture Data Lo Register: 0x%08x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#527: FILE: drivers/edac/mpc85xx_edac.c:454:
+	printk(KERN_ERR "L2 Error Syndrome Register: 0x%08x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#529: FILE: drivers/edac/mpc85xx_edac.c:456:
+	printk(KERN_ERR "L2 Error Attributes Capture Register: 0x%08x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#531: FILE: drivers/edac/mpc85xx_edac.c:458:
+	printk(KERN_ERR "L2 Error Address Capture Register: 0x%08x\n",

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#560: FILE: drivers/edac/mpc85xx_edac.c:487:
+static int __devinit mpc85xx_l2_err_probe(struct of_device *op,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#589: FILE: drivers/edac/mpc85xx_edac.c:516:
+		printk(KERN_ERR "%s: Unable to get resource for "

WARNING:SPLIT_STRING: quoted string split across lines
#590: FILE: drivers/edac/mpc85xx_edac.c:517:
+		printk(KERN_ERR "%s: Unable to get resource for "
+		       "L2 err regs\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#599: FILE: drivers/edac/mpc85xx_edac.c:526:
+		printk(KERN_ERR "%s: Error while requesting mem region\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#607: FILE: drivers/edac/mpc85xx_edac.c:534:
+		printk(KERN_ERR "%s: Unable to setup L2 err regs\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#639: FILE: drivers/edac/mpc85xx_edac.c:566:
+			printk(KERN_ERR

WARNING:TYPO_SPELLING: 'requiest' may be misspelled - perhaps 'request'?
#640: FILE: drivers/edac/mpc85xx_edac.c:567:
+			       "%s: Unable to requiest irq %d for "
 			                      ^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#641: FILE: drivers/edac/mpc85xx_edac.c:568:
+			       "%s: Unable to requiest irq %d for "
+			       "MPC85xx L2 err\n", __func__, pdata->irq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#647: FILE: drivers/edac/mpc85xx_edac.c:574:
+		printk(KERN_INFO EDAC_MOD_STR " acquired irq %d for L2 Err\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#658: FILE: drivers/edac/mpc85xx_edac.c:585:
+	printk(KERN_INFO EDAC_MOD_STR " L2 err registered\n");

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#675: FILE: drivers/edac/mpc85xx_edac.c:602:
+	debugf0("%s()\n", __func__);

WARNING:CONST_STRUCT: struct of_device_id should normally be const
#688: FILE: drivers/edac/mpc85xx_edac.c:615:
+static struct of_device_id mpc85xx_l2_err_of_match[] = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pfn >= csrow->first_page'
#753: FILE: drivers/edac/mpc85xx_edac.c:680:
+		if ((pfn >= csrow->first_page) && (pfn <= csrow->last_page))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pfn <= csrow->last_page'
#753: FILE: drivers/edac/mpc85xx_edac.c:680:
+		if ((pfn >= csrow->first_page) && (pfn <= csrow->last_page))

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#797: FILE: drivers/edac/mpc85xx_edac.c:724:
+static void __devinit mpc85xx_init_csrows(struct mem_ctl_info *mci)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#865: FILE: drivers/edac/mpc85xx_edac.c:792:
+static int __devinit mpc85xx_mc_err_probe(struct of_device *op,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#894: FILE: drivers/edac/mpc85xx_edac.c:821:
+		printk(KERN_ERR "%s: Unable to get resource for MC err regs\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#901: FILE: drivers/edac/mpc85xx_edac.c:828:
+		printk(KERN_ERR "%s: Error while requesting mem region\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#909: FILE: drivers/edac/mpc85xx_edac.c:836:
+		printk(KERN_ERR "%s: Unable to setup MC err regs\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#917: FILE: drivers/edac/mpc85xx_edac.c:844:
+		printk(KERN_WARNING "%s: No ECC DIMMs discovered\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#975: FILE: drivers/edac/mpc85xx_edac.c:902:
+			printk(KERN_ERR "%s: Unable to request irq %d for "

WARNING:SPLIT_STRING: quoted string split across lines
#976: FILE: drivers/edac/mpc85xx_edac.c:903:
+			printk(KERN_ERR "%s: Unable to request irq %d for "
+			       "MPC85xx DRAM ERR\n", __func__, pdata->irq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#982: FILE: drivers/edac/mpc85xx_edac.c:909:
+		printk(KERN_INFO EDAC_MOD_STR " acquired irq %d for MC\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#988: FILE: drivers/edac/mpc85xx_edac.c:915:
+	printk(KERN_INFO EDAC_MOD_STR " MC err registered\n");

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1005: FILE: drivers/edac/mpc85xx_edac.c:932:
+	debugf0("%s()\n", __func__);

WARNING:CONST_STRUCT: struct of_device_id should normally be const
#1021: FILE: drivers/edac/mpc85xx_edac.c:948:
+static struct of_device_id mpc85xx_mc_err_of_match[] = {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1059: FILE: drivers/edac/mpc85xx_edac.c:986:
+	printk(KERN_INFO "Freescale(R) MPC85xx EDAC driver, "

WARNING:SPLIT_STRING: quoted string split across lines
#1060: FILE: drivers/edac/mpc85xx_edac.c:987:
+	printk(KERN_INFO "Freescale(R) MPC85xx EDAC driver, "
+	       "(C) 2006 Montavista Software\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1074: FILE: drivers/edac/mpc85xx_edac.c:1001:
+		printk(KERN_WARNING EDAC_MOD_STR "MC fails to register\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1078: FILE: drivers/edac/mpc85xx_edac.c:1005:
+		printk(KERN_WARNING EDAC_MOD_STR "L2 fails to register\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1083: FILE: drivers/edac/mpc85xx_edac.c:1010:
+		printk(KERN_WARNING EDAC_MOD_STR "PCI fails to register\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1122: FILE: drivers/edac/mpc85xx_edac.h:1:
+/*

WARNING:TYPO_SPELLING: 'kenel' may be misspelled - perhaps 'kernel'?
#1123: FILE: drivers/edac/mpc85xx_edac.h:2:
+ * Freescale MPC85xx Memory Controller kenel module
                                        ^^^^^

ERROR:DATE_TIME: Use of the '__DATE__' macro makes the build non-deterministic
#1135: FILE: drivers/edac/mpc85xx_edac.h:14:
+#define MPC85XX_REVISION " Ver: 2.0.0 " __DATE__

It is generally desirable that building the same source code with
the same set of tools is reproducible, i.e. the output is always
exactly the same.

The kernel does *not* use the ``__DATE__`` and ``__TIME__`` macros,
and enables warnings if they are used as they can lead to
non-deterministic builds.

See: https://www.kernel.org/doc/html/latest/kbuild/reproducible-builds.html#timestamps

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000367856.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 87 warnings, 2 checks, 1224 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000367856.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
