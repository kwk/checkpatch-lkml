CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#50: FILE: include/linux/string.h:111:
+extern char **argv_split(gfp_t gfp, const char *str, int *argcp);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#51: FILE: include/linux/string.h:112:
+extern void argv_free(char **argv);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#72: FILE: lib/argv_split.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:SPACING: space required before the open parenthesis '('
#84: FILE: lib/argv_split.c:13:
+	while(*cp && isspace(*cp))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#92: FILE: lib/argv_split.c:21:
+	while(*cp && !isspace(*cp))

ERROR:SPACING: space required before the open parenthesis '('
#102: FILE: lib/argv_split.c:31:
+	while(*str) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#123: FILE: lib/argv_split.c:52:
+	char **p;
+	for(p = argv; *p; p++)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#123: FILE: lib/argv_split.c:52:
+	for(p = argv; *p; p++)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#147: FILE: lib/argv_split.c:76:
+	char **argv = kzalloc(sizeof(*argv) * (argc+1), gfp);
 	                                           ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!argv"
#150: FILE: lib/argv_split.c:79:
+	if (argv == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required before the open parenthesis '('
#156: FILE: lib/argv_split.c:85:
+	while(*str) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#165: FILE: lib/argv_split.c:94:
+			t = kstrndup(p, str-p, gfp);
 			                   ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!t"
#166: FILE: lib/argv_split.c:95:
+			if (t == NULL)

WARNING:INDENTED_LABEL: labels should not be indented
#173: FILE: lib/argv_split.c:102:
+  out:

WARNING:INDENTED_LABEL: labels should not be indented
#176: FILE: lib/argv_split.c:105:
+  fail:

WARNING:NEW_TYPEDEFS: do not add new typedefs
#189: FILE: lib/argv_split.c:118:
+typedef enum {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#195: FILE: lib/argv_split.c:124:
+#define BUG()	abort()

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - int main() should probably be int main(void)
#197: FILE: lib/argv_split.c:126:
+int main() {

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#197: FILE: lib/argv_split.c:126:
+int main() {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:STATIC_CONST_CHAR_ARRAY: char * array declaration might be better as static const
#198: FILE: lib/argv_split.c:127:
+	const char *testvec[] = {

ERROR:SPACING: space required before the open parenthesis '('
#212: FILE: lib/argv_split.c:141:
+	for(t = testvec; *t; t++) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#217: FILE: lib/argv_split.c:146:
+		printf("%d: test [%s]\n", t-testvec, *t);
 		                           ^

ERROR:SPACING: space required before the open parenthesis '('
#222: FILE: lib/argv_split.c:151:
+		for(a = argv; *a; a++)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000434194.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 7 warnings, 7 checks, 177 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000434194.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
