WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#36: FILE: Makefile:4:
+EXTRAVERSION = .5
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#195: FILE: drivers/net/smc911x.c:967:
 	if (lp->phy_type == 0)
+		 goto smc911x_phy_configure_exit_nolock;

WARNING:TABSTOP: Statements should start on a tabstop
#197: FILE: drivers/net/smc911x.c:968:
+		 goto smc911x_phy_configure_exit_nolock;

WARNING:TYPO_SPELLING: 'recepit' may be misspelled - perhaps 'recipe'?
#278: FILE: drivers/net/wireless/prism54/isl_ioctl.c:1399:
+		 * turn off dot1x when  allowing recepit of unencrypted eapol
 		                                 ^^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tm->tm_year >= 100'
#364: FILE: drivers/rtc/rtc-pcf8563.c:163:
+	if (pcf8563->c_polarity ? (tm->tm_year >= 100) : (tm->tm_year < 100))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tm->tm_year < 100'
#364: FILE: drivers/rtc/rtc-pcf8563.c:163:
+	if (pcf8563->c_polarity ? (tm->tm_year >= 100) : (tm->tm_year < 100))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#381: FILE: drivers/rtc/rtc-pcf8563.c:289:
+	if (!(pcf8563 = kzalloc(sizeof(struct pcf8563), GFP_KERNEL))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*pcf8563)...) over kzalloc(sizeof(struct pcf8563)...)
#381: FILE: drivers/rtc/rtc-pcf8563.c:289:
+	if (!(pcf8563 = kzalloc(sizeof(struct pcf8563), GFP_KERNEL))) {

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#499: FILE: include/asm-x86_64/bitops.h:12:
+/* Technically wrong, but this avoids compilation errors on some gcc
+   versions. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#499: FILE: include/asm-x86_64/bitops.h:12:
+   versions. */

CHECK:SPACING: No space is necessary after a cast
#500: FILE: include/asm-x86_64/bitops.h:13:
+#define ADDR "=m" (*(volatile long *) addr)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#500: FILE: include/asm-x86_64/bitops.h:13:
+#define ADDR "=m" (*(volatile long *) addr)

CHECK:SPACING: No space is necessary after a cast
#502: FILE: include/asm-x86_64/bitops.h:15:
+#define ADDR "+m" (*(volatile long *) addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#502: FILE: include/asm-x86_64/bitops.h:15:
+#define ADDR "+m" (*(volatile long *) addr)

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#512: FILE: include/asm-x86_64/bitops.h:32:
+		:ADDR
 		^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#521: FILE: include/asm-x86_64/bitops.h:49:
+		:ADDR
 		^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#530: FILE: include/asm-x86_64/bitops.h:67:
+		:ADDR
 		^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#539: FILE: include/asm-x86_64/bitops.h:75:
+		:ADDR
 		^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#548: FILE: include/asm-x86_64/bitops.h:95:
+		:ADDR
 		^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#557: FILE: include/asm-x86_64/bitops.h:112:
+		:ADDR
 		^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#566: FILE: include/asm-x86_64/bitops.h:130:
+		:"=r" (oldbit),ADDR
 		^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#566: FILE: include/asm-x86_64/bitops.h:130:
+		:"=r" (oldbit),ADDR
 		              ^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#575: FILE: include/asm-x86_64/bitops.h:150:
+		:"=r" (oldbit),ADDR
 		^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#575: FILE: include/asm-x86_64/bitops.h:150:
+		:"=r" (oldbit),ADDR
 		              ^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#584: FILE: include/asm-x86_64/bitops.h:169:
+		:"=r" (oldbit),ADDR
 		^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#584: FILE: include/asm-x86_64/bitops.h:169:
+		:"=r" (oldbit),ADDR
 		              ^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#593: FILE: include/asm-x86_64/bitops.h:189:
+		:"=r" (oldbit),ADDR
 		^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#593: FILE: include/asm-x86_64/bitops.h:189:
+		:"=r" (oldbit),ADDR
 		              ^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#602: FILE: include/asm-x86_64/bitops.h:201:
+		:"=r" (oldbit),ADDR
 		^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#602: FILE: include/asm-x86_64/bitops.h:201:
+		:"=r" (oldbit),ADDR
 		              ^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#611: FILE: include/asm-x86_64/bitops.h:220:
+		:"=r" (oldbit),ADDR
 		^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#611: FILE: include/asm-x86_64/bitops.h:220:
+		:"=r" (oldbit),ADDR
 		              ^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#620: FILE: include/asm-x86_64/bitops.h:246:
+		:"m" (*(volatile long *)addr),"dIr" (nr));
 		^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#620: FILE: include/asm-x86_64/bitops.h:246:
+		:"m" (*(volatile long *)addr),"dIr" (nr));
 		                             ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#620: FILE: include/asm-x86_64/bitops.h:246:
+		:"m" (*(volatile long *)addr),"dIr" (nr));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct svc_sock *' should also have an identifier name
#633: FILE: include/linux/sunrpc/svcsock.h:66:
+void		svc_close_socket(struct svc_sock *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#691: FILE: net/sunrpc/svcsock.c:310:
+		BUG_ON(! test_bit(SK_DEAD, &svsk->sk_flags));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#691: FILE: net/sunrpc/svcsock.c:310:
+		BUG_ON(! test_bit(SK_DEAD, &svsk->sk_flags));
 		       ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#766: FILE: net/sunrpc/svcsock.c:1626:
+		BUG_ON(atomic_read(&svsk->sk_inuse)<2);

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#766: FILE: net/sunrpc/svcsock.c:1626:
+		BUG_ON(atomic_read(&svsk->sk_inuse)<2);
 		                                   ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#908: FILE: sound/usb/usbaudio.c:1829:
+	subs->rate_list.list = kmalloc(sizeof(int) * count, GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:LINE_SPACING: Missing a blank line after declarations
#913: FILE: sound/usb/usbaudio.c:1834:
+		int i;
+		for (i = 0; i < fp->nr_rates; i++)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000463707.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 23 errors, 15 warnings, 5 checks, 784 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000463707.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
