WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#180: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#185: FILE: arch/arm/plat-iop/adma.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#199: FILE: arch/arm/plat-iop/adma.c:15:
+ * this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#200: FILE: arch/arm/plat-iop/adma.c:16:
+ * 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#282: FILE: arch/arm/plat-iop/adma.c:98:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#331: FILE: arch/arm/plat-iop/adma.c:147:
+		.platform_data = (void *) &iop3xx_dma_0_data,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#343: FILE: arch/arm/plat-iop/adma.c:159:
+		.platform_data = (void *) &iop3xx_dma_1_data,

CHECK:SPACING: No space is necessary after a cast
#355: FILE: arch/arm/plat-iop/adma.c:171:
+		.platform_data = (void *) &iop3xx_aau_data,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#400: FILE: include/asm-arm/arch-iop32x/adma.h:1:
+#ifndef IOP32X_ADMA_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#411: FILE: include/asm-arm/arch-iop33x/adma.h:1:
+#ifndef IOP33X_ADMA_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#422: FILE: include/asm-arm/hardware/iop3xx-adma.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#435: FILE: include/asm-arm/hardware/iop3xx-adma.h:14:
+ * this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#436: FILE: include/asm-arm/hardware/iop3xx-adma.h:15:
+ * 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#447: FILE: include/asm-arm/hardware/iop3xx-adma.h:26:
+#define DMA_CCR(chan)		(chan->mmr_base + 0x0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#448: FILE: include/asm-arm/hardware/iop3xx-adma.h:27:
+#define DMA_CSR(chan)		(chan->mmr_base + 0x4)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#449: FILE: include/asm-arm/hardware/iop3xx-adma.h:28:
+#define DMA_DAR(chan)		(chan->mmr_base + 0xc)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#450: FILE: include/asm-arm/hardware/iop3xx-adma.h:29:
+#define DMA_NDAR(chan)		(chan->mmr_base + 0x10)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#451: FILE: include/asm-arm/hardware/iop3xx-adma.h:30:
+#define DMA_PADR(chan)		(chan->mmr_base + 0x14)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#452: FILE: include/asm-arm/hardware/iop3xx-adma.h:31:
+#define DMA_PUADR(chan)	(chan->mmr_base + 0x18)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#453: FILE: include/asm-arm/hardware/iop3xx-adma.h:32:
+#define DMA_LADR(chan)		(chan->mmr_base + 0x1c)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#454: FILE: include/asm-arm/hardware/iop3xx-adma.h:33:
+#define DMA_BCR(chan)		(chan->mmr_base + 0x20)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#455: FILE: include/asm-arm/hardware/iop3xx-adma.h:34:
+#define DMA_DCR(chan)		(chan->mmr_base + 0x24)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#458: FILE: include/asm-arm/hardware/iop3xx-adma.h:37:
+#define AAU_ACR(chan)		(chan->mmr_base + 0x0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#459: FILE: include/asm-arm/hardware/iop3xx-adma.h:38:
+#define AAU_ASR(chan)		(chan->mmr_base + 0x4)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#460: FILE: include/asm-arm/hardware/iop3xx-adma.h:39:
+#define AAU_ADAR(chan)		(chan->mmr_base + 0x8)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#461: FILE: include/asm-arm/hardware/iop3xx-adma.h:40:
+#define AAU_ANDAR(chan)	(chan->mmr_base + 0xc)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#462: FILE: include/asm-arm/hardware/iop3xx-adma.h:41:
+#define AAU_SAR(src, chan)	(chan->mmr_base + (0x10 + ((src) << 2)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#463: FILE: include/asm-arm/hardware/iop3xx-adma.h:42:
+#define AAU_DAR(chan)		(chan->mmr_base + 0x20)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#464: FILE: include/asm-arm/hardware/iop3xx-adma.h:43:
+#define AAU_ABCR(chan)		(chan->mmr_base + 0x24)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#465: FILE: include/asm-arm/hardware/iop3xx-adma.h:44:
+#define AAU_ADCR(chan)		(chan->mmr_base + 0x28)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#466: FILE: include/asm-arm/hardware/iop3xx-adma.h:45:
+#define AAU_SAR_EDCR(src_edc)	(chan->mmr_base + (0x02c + ((src_edc-4) << 2)))
                              	                                    ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'src_edc' may be better as '(src_edc)' to avoid precedence issues
#466: FILE: include/asm-arm/hardware/iop3xx-adma.h:45:
+#define AAU_SAR_EDCR(src_edc)	(chan->mmr_base + (0x02c + ((src_edc-4) << 2)))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#627: FILE: include/asm-arm/hardware/iop3xx-adma.h:206:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#647: FILE: include/asm-arm/hardware/iop3xx-adma.h:226:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#649: FILE: include/asm-arm/hardware/iop3xx-adma.h:228:
+#define IOP_ADMA_STATUS_BUSY (1 << 10)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:LINE_SPACING: Missing a blank line after declarations
#657: FILE: include/asm-arm/hardware/iop3xx-adma.h:236:
+	u32 status = __raw_readl(DMA_CSR(chan));
+	return (status & IOP_ADMA_STATUS_BUSY) ? 1 : 0;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#661: FILE: include/asm-arm/hardware/iop3xx-adma.h:240:
+static inline int iop_desc_is_aligned(struct iop_adma_desc_slot *desc,
+					int num_slots)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#682: FILE: include/asm-arm/hardware/iop3xx-adma.h:261:
+static inline int iop3xx_aau_xor_slot_count(size_t len, int src_cnt,
+					int *slots_per_op)

WARNING:STATIC_CONST: Move const after static - use 'static const int '
#684: FILE: include/asm-arm/hardware/iop3xx-adma.h:263:
+	const static int slot_count_table[] = { 0,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#708: FILE: include/asm-arm/hardware/iop3xx-adma.h:287:
+		BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#714: FILE: include/asm-arm/hardware/iop3xx-adma.h:293:
+static inline int iop_chan_xor_slot_count(size_t len, int src_cnt,
+						int *slots_per_op)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#737: FILE: include/asm-arm/hardware/iop3xx-adma.h:316:
+static inline int iop_chan_zero_sum_slot_count(size_t len, int src_cnt,
+						int *slots_per_op)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#757: FILE: include/asm-arm/hardware/iop3xx-adma.h:336:
+static inline u32 iop_desc_get_dest_addr(struct iop_adma_desc_slot *desc,
+					struct iop_adma_chan *chan)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#768: FILE: include/asm-arm/hardware/iop3xx-adma.h:347:
+		BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#774: FILE: include/asm-arm/hardware/iop3xx-adma.h:353:
+static inline u32 iop_desc_get_byte_count(struct iop_adma_desc_slot *desc,
+					struct iop_adma_chan *chan)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#785: FILE: include/asm-arm/hardware/iop3xx-adma.h:364:
+		BUG();

WARNING:STATIC_CONST: Move const after static - use 'static const int '
#793: FILE: include/asm-arm/hardware/iop3xx-adma.h:372:
+	const static int desc_idx_table[] = { 0, 0, 0, 0,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#819: FILE: include/asm-arm/hardware/iop3xx-adma.h:398:
+		BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#829: FILE: include/asm-arm/hardware/iop3xx-adma.h:408:
+static inline void iop3xx_aau_desc_set_src_addr(struct iop3xx_desc_aau *hw_desc,
+					int src_idx, dma_addr_t addr)

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#893: FILE: include/asm-arm/hardware/iop3xx-adma.h:472:
+		/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#907: FILE: include/asm-arm/hardware/iop3xx-adma.h:486:
+		/* fall through */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#919: FILE: include/asm-arm/hardware/iop3xx-adma.h:498:
+		/* fall through */

CHECK:SPACING: No space is necessary after a cast
#974: FILE: include/asm-arm/hardware/iop3xx-adma.h:553:
+			prev_hw_desc->next_desc = (u32) (desc->phys + (i << 5));

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#995: FILE: include/asm-arm/hardware/iop3xx-adma.h:574:
+		/* fall through */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1002: FILE: include/asm-arm/hardware/iop3xx-adma.h:581:
+		/* fall through */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1007: FILE: include/asm-arm/hardware/iop3xx-adma.h:586:
+		/* fall through */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1019: FILE: include/asm-arm/hardware/iop3xx-adma.h:598:
+static inline void iop_desc_set_byte_count(struct iop_adma_desc_slot *desc,
+					struct iop_adma_chan *chan,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1033: FILE: include/asm-arm/hardware/iop3xx-adma.h:612:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1059: FILE: include/asm-arm/hardware/iop3xx-adma.h:638:
+		BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1088: FILE: include/asm-arm/hardware/iop3xx-adma.h:667:
+static inline void iop_desc_set_dest_addr(struct iop_adma_desc_slot *desc,
+					struct iop_adma_chan *chan,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1102: FILE: include/asm-arm/hardware/iop3xx-adma.h:681:
+		BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1107: FILE: include/asm-arm/hardware/iop3xx-adma.h:686:
+static inline void iop_desc_set_memcpy_src_addr(struct iop_adma_desc_slot *desc,
+					dma_addr_t addr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1110: FILE: include/asm-arm/hardware/iop3xx-adma.h:689:
+	struct iop3xx_desc_dma *hw_desc = desc->hw_desc;
+	hw_desc->src_addr = addr;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1115: FILE: include/asm-arm/hardware/iop3xx-adma.h:694:
+iop_desc_set_zero_sum_src_addr(struct iop_adma_desc_slot *desc, int src_idx,
+				dma_addr_t addr)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1117: FILE: include/asm-arm/hardware/iop3xx-adma.h:696:
+{
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1130: FILE: include/asm-arm/hardware/iop3xx-adma.h:709:
+static inline void iop_desc_set_xor_src_addr(struct iop_adma_desc_slot *desc,
+					int src_idx, dma_addr_t addr)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1132: FILE: include/asm-arm/hardware/iop3xx-adma.h:711:
+{
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1145: FILE: include/asm-arm/hardware/iop3xx-adma.h:724:
+static inline void iop_desc_set_next_desc(struct iop_adma_desc_slot *desc,
+					u32 next_desc_addr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1149: FILE: include/asm-arm/hardware/iop3xx-adma.h:728:
+	union iop3xx_desc hw_desc = { .ptr = desc->hw_desc, };
+	BUG_ON(hw_desc.dma->next_desc);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1149: FILE: include/asm-arm/hardware/iop3xx-adma.h:728:
+	BUG_ON(hw_desc.dma->next_desc);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1157: FILE: include/asm-arm/hardware/iop3xx-adma.h:736:
+	union iop3xx_desc hw_desc = { .ptr = desc->hw_desc, };
+	return hw_desc.dma->next_desc;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1164: FILE: include/asm-arm/hardware/iop3xx-adma.h:743:
+	union iop3xx_desc hw_desc = { .ptr = desc->hw_desc, };
+	hw_desc.dma->next_desc = 0;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1168: FILE: include/asm-arm/hardware/iop3xx-adma.h:747:
+static inline void iop_desc_set_block_fill_val(struct iop_adma_desc_slot *desc,
+						u32 val)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1171: FILE: include/asm-arm/hardware/iop3xx-adma.h:750:
+	struct iop3xx_desc_aau *hw_desc = desc->hw_desc;
+	hw_desc->src[0] = val;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1179: FILE: include/asm-arm/hardware/iop3xx-adma.h:758:
+	BUG_ON(!(desc_ctrl.tx_complete && desc_ctrl.zero_result_en));

WARNING:LINE_SPACING: Missing a blank line after declarations
#1208: FILE: include/asm-arm/hardware/iop3xx-adma.h:787:
+	u32 dma_chan_ctrl = __raw_readl(DMA_CCR(chan));
+	dma_chan_ctrl &= ~1;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1223: FILE: include/asm-arm/hardware/iop3xx-adma.h:802:
+	u32 status = __raw_readl(DMA_CSR(chan));
+	status &= (1 << 9);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1230: FILE: include/asm-arm/hardware/iop3xx-adma.h:809:
+	u32 status = __raw_readl(DMA_CSR(chan));
+	status &= (1 << 8);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1247: FILE: include/asm-arm/hardware/iop3xx-adma.h:826:
+		BUG();

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#1339: FILE: include/asm-arm/hardware/iop3xx.h:147:
+#define IOP3XX_DMA_PHYS_BASE(chan) (IOP3XX_PERIPHERAL_PHYS_BASE + \
+					(0x400 + (chan << 6)))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000412929.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 33 warnings, 43 checks, 1267 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000412929.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
