WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#43: FILE: security/tomoyo/domain.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#44: FILE: security/tomoyo/domain.c:2:
+ * security/tomoyo/domain.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#170: FILE: security/tomoyo/domain.c:128:
+	if (!tmy_correct_path(program, 1, -1, -1, __FUNCTION__))

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#175: FILE: security/tomoyo/domain.c:133:
+		    tmy_correct_path(domainname, 1, -1, -1, __FUNCTION__))

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#178: FILE: security/tomoyo/domain.c:136:
+		else if (!tmy_is_correct_domain(domainname, __FUNCTION__))

WARNING:SPACING: space prohibited before semicolon
#217: FILE: security/tomoyo/domain.c:175:
+out: ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#233: FILE: security/tomoyo/domain.c:191:
+	struct list_head *pos;
+	list_for_each_cookie(pos, head->read_var2, &domain_initializer_list) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#235: FILE: security/tomoyo/domain.c:193:
+		struct domain_initializer_entry *ptr;
+		ptr = list_entry(pos, struct domain_initializer_entry, list);

WARNING:LINE_SPACING: Missing a blank line after declarations
#289: FILE: security/tomoyo/domain.c:247:
+	int flag = 0;
+	list_for_each_entry(ptr,  &domain_initializer_list, list) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#329: FILE: security/tomoyo/domain.c:287:
+	    tmy_correct_path(domainname, 1, -1, -1, __FUNCTION__))

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#332: FILE: security/tomoyo/domain.c:290:
+	else if (!tmy_is_correct_domain(domainname, __FUNCTION__))

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#336: FILE: security/tomoyo/domain.c:294:
+		if (!tmy_correct_path(program, 1, -1, -1, __FUNCTION__))

WARNING:SPACING: space prohibited before semicolon
#375: FILE: security/tomoyo/domain.c:333:
+out: ;

WARNING:LINE_SPACING: Missing a blank line after declarations
#418: FILE: security/tomoyo/domain.c:376:
+	struct list_head *pos;
+	list_for_each_cookie(pos, head->read_var2, &domain_keeper_list) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#420: FILE: security/tomoyo/domain.c:378:
+		struct domain_keeper_entry *ptr;
+		ptr = list_entry(pos, struct domain_keeper_entry, list);

WARNING:LINE_SPACING: Missing a blank line after declarations
#450: FILE: security/tomoyo/domain.c:408:
+	int flag = 0;
+	list_for_each_entry(ptr, &domain_keeper_list, list) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#485: FILE: security/tomoyo/domain.c:443:
+	if (!tmy_correct_path(original_name, 1, -1, -1, __FUNCTION__) ||

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#486: FILE: security/tomoyo/domain.c:444:
+	    !tmy_correct_path(aliased_name, 1, -1, -1, __FUNCTION__))

WARNING:SPACING: space prohibited before semicolon
#518: FILE: security/tomoyo/domain.c:476:
+out: ;

WARNING:LINE_SPACING: Missing a blank line after declarations
#533: FILE: security/tomoyo/domain.c:491:
+	struct list_head *pos;
+	list_for_each_cookie(pos, head->read_var2, &alias_list) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#535: FILE: security/tomoyo/domain.c:493:
+		struct alias_entry *ptr;
+		ptr = list_entry(pos, struct alias_entry, list);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#584: FILE: security/tomoyo/domain.c:542:
+	if (!tmy_correct_path(original_name, 1, 0, -1, __FUNCTION__) ||

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#585: FILE: security/tomoyo/domain.c:543:
+	    !tmy_correct_path(aggregated_name, 1, -1, -1, __FUNCTION__))

WARNING:SPACING: space prohibited before semicolon
#617: FILE: security/tomoyo/domain.c:575:
+out: ;

WARNING:LINE_SPACING: Missing a blank line after declarations
#634: FILE: security/tomoyo/domain.c:592:
+	struct list_head *pos;
+	list_for_each_cookie(pos, head->read_var2, &aggregator_list) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#636: FILE: security/tomoyo/domain.c:594:
+		struct aggregator_entry *ptr;
+		ptr = list_entry(pos, struct aggregator_entry, list);

WARNING:LINE_SPACING: Missing a blank line after declarations
#700: FILE: security/tomoyo/domain.c:658:
+		struct domain_info *domain2;
+		if (domain == &KERNEL_DOMAIN ||

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#824: FILE: security/tomoyo/domain.c:782:
+	if (!tmy_is_correct_domain(domainname, __FUNCTION__))

CHECK:SPACING: No space is necessary after a cast
#846: FILE: security/tomoyo/domain.c:804:
+			if (((struct tmy_security *) p->security)->domain

WARNING:SPACING: space prohibited before semicolon
#882: FILE: security/tomoyo/domain.c:840:
+out: ;

CHECK:SPACING: No space is necessary after a cast
#892: FILE: security/tomoyo/domain.c:850:
+		const unsigned char c = *(const unsigned char *) src;

WARNING:SPACING: space prohibited before semicolon
#921: FILE: security/tomoyo/domain.c:879:
+out: ;

WARNING:SPACING: space prohibited before semicolon
#987: FILE: security/tomoyo/domain.c:945:
+out: ;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1014: FILE: security/tomoyo/domain.c:972:
+	struct file *filp = bprm->file;
 	             ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#1030: FILE: security/tomoyo/domain.c:988:
+	static bool first = 1;
+	if (first) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1083: FILE: security/tomoyo/domain.c:1041:
+	if (bprm->argc > 0 && tmy_flags(TMY_MAC_FOR_ARGV0)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1088: FILE: security/tomoyo/domain.c:1046:
+		if (org_argv0) {
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1123: FILE: security/tomoyo/domain.c:1081:
+
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1125: FILE: security/tomoyo/domain.c:1083:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1145: FILE: security/tomoyo/domain.c:1103:
+	retval = tmy_exec_perm(&r, filp);
 	                           ^^^^

WARNING:STRING_FRAGMENTS: Consecutive strings are generally better as a single string
#1158: FILE: security/tomoyo/domain.c:1116:
+			 TMY_ROOT_NAME " " "%s", real_program_name);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1187: FILE: security/tomoyo/domain.c:1145:
+			const u8 profile = TMY_SECURITY->domain->profile;
+			domain = tmy_new_domain(new_domain_name, profile);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1191: FILE: security/tomoyo/domain.c:1149:
+		const u8 profile = TMY_SECURITY->domain->profile;
+		domain = tmy_new_domain(new_domain_name, profile);

WARNING:SPACING: space prohibited before semicolon
#1194: FILE: security/tomoyo/domain.c:1152:
+ok: ;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1196: FILE: security/tomoyo/domain.c:1154:
+	if (!domain) {
[...]
+	} else
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1197: FILE: security/tomoyo/domain.c:1155:
+		printk(KERN_INFO "TOMOYO-ERROR: Domain '%s' not defined.\n",

CHECK:BRACES: Unbalanced braces around else statement
#1201: FILE: security/tomoyo/domain.c:1159:
+	} else

WARNING:SPACING: space prohibited before semicolon
#1203: FILE: security/tomoyo/domain.c:1161:
+out: ;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1225: FILE: security/tomoyo/domain.c:1183:
+	int error = -ENOMEM;
+	if (!mode || !envp_count)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1258: FILE: security/tomoyo/domain.c:1216:
+			const unsigned char c = kaddr[offset++];
+			if (c && arg_len < TMY_MAX_PATHNAME_LEN - 10) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000339091.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 42 warnings, 8 checks, 1261 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000339091.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
