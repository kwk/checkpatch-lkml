CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#99: FILE: arch/x86/include/asm/ptrace.h:221:
+extern int regs_query_register_offset(const char *name);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#100: FILE: arch/x86/include/asm/ptrace.h:222:
+extern const char *regs_query_register_name(unsigned int offset);

WARNING:LINE_SPACING: Missing a blank line after declarations
#148: FILE: arch/x86/include/asm/ptrace.h:270:
+	unsigned long *addr = (unsigned long *)kernel_stack_pointer(regs);
+	addr += n;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#156: FILE: arch/x86/include/asm/ptrace.h:278:
+extern unsigned long regs_get_argument_nth(struct pt_regs *regs,

WARNING:LINE_SPACING: Missing a blank line after declarations
#221: FILE: arch/x86/kernel/ptrace.c:103:
+	const struct pt_regs_offset *roff;
+	for (roff = regoffset_table; roff->name != NULL; roff++)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "roff->name"
#221: FILE: arch/x86/kernel/ptrace.c:103:
+	for (roff = regoffset_table; roff->name != NULL; roff++)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#237: FILE: arch/x86/kernel/ptrace.c:119:
+	const struct pt_regs_offset *roff;
+	for (roff = regoffset_table; roff->name != NULL; roff++)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "roff->name"
#237: FILE: arch/x86/kernel/ptrace.c:119:
+	for (roff = regoffset_table; roff->name != NULL; roff++)

CHECK:BRACES: braces {} should be used on all arms of this statement
#270: FILE: arch/x86/kernel/ptrace.c:152:
+	if (n < ARRAY_SIZE(arg_offs_table))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#272: FILE: arch/x86/kernel/ptrace.c:154:
+		return *((unsigned long *)regs + arg_offs_table[n]);
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#272: FILE: arch/x86/kernel/ptrace.c:154:
+	else {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000095753.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 7 checks, 192 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000095753.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
