WARNING:TYPO_SPELLING: 'genric' may be misspelled - perhaps 'generic'?
#35: 
v2: make it more genric, so subsys user only need to two line macro
                 ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'intead' may be misspelled - perhaps 'instead'?
#37: 
v4: use printk intead of pci_printk
               ^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
v7: call tag_loglevel_setup only one time, so could take several loglevel like

CHECK:CAMELCASE: Avoid CamelCase: <nameStr>
#131: FILE: include/linux/init.h:262:
+#define DEFINE_LOGLEVEL_SETUP_DEF(nameX, tagX, nameStr, levelX)		\

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <__loglevel_setup_##nameX>
#132: FILE: include/linux/init.h:263:
+	static struct loglevel_setup __loglevel_setup_##nameX __initdata = \

CHECK:CAMELCASE: Avoid CamelCase: <__loglevel_setup_ptr_##nameX>
#138: FILE: include/linux/init.h:269:
+	static struct loglevel_setup *__loglevel_setup_ptr_##nameX __used \

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".loglevel_setup.init") over __attribute__((__section__(".loglevel_setup.init")))
#139: FILE: include/linux/init.h:270:
+	__attribute__((__section__(".loglevel_setup.init"))) =	\

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#165: FILE: include/linux/kernel.h:109:
+extern int get_tag_level(char *str, int *slen);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#192: FILE: init/main.c:247:
+static int __init add_tag_name_level(const char *tag, const char *name,
+					int level)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: init/main.c:288:
+static int __init save_tag_name_level(const char *tag, const char *name,
+					int level)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#368: FILE: kernel/printk.c:460:
+				unsigned end, int msg_log_level, int level)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#372: FILE: kernel/printk.c:463:
+	if ((msg_log_level < level || ignore_loglevel) &&
 			console_drivers && start != end) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#400: FILE: kernel/printk.c:498:
+			if (((end - cur_index) > 2) &&
+					LOG_BUF(cur_index + 0) == '<' &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#444: FILE: kernel/printk.c:548:
+				_call_console_drivers(start_print, cur_index,
+							msg_level, level);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#492: FILE: kernel/printk.c:778:
+				temp = current_log_level/10;
 				                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000227151.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 10 checks, 393 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000227151.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
