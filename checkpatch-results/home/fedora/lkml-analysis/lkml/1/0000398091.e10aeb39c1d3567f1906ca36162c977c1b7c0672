WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#51: FILE: kernel/vfcipi/thread.c:58:
+	DECLARE_BITMAP(bitmap, MAX_RT_PRIO+1); /* include 1 bit for delimiter */
 	                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#77: FILE: kernel/vfcipi/thread.c:85:
+	for (i=0; i<MAX_RT_PRIO; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#77: FILE: kernel/vfcipi/thread.c:85:
+	for (i=0; i<MAX_RT_PRIO; i++)
 	           ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#82: FILE: kernel/vfcipi/thread.c:90:
+static struct vfcipi_queueitem* prio_array_dequeue(struct prio_array *array)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#96: FILE: kernel/vfcipi/thread.c:104:
+	BUG_ON(!head);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#97: FILE: kernel/vfcipi/thread.c:105:
+	BUG_ON(list_empty(head));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#100: FILE: kernel/vfcipi/thread.c:108:
+	BUG_ON(!qi);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#117: FILE: kernel/vfcipi/thread.c:125:
+	BUG_ON(prio < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#118: FILE: kernel/vfcipi/thread.c:126:
+	BUG_ON(prio > MAX_RT_PRIO);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#161: FILE: kernel/vfcipi/thread.c:252:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#190: FILE: kernel/vfcipi/thread.c:277:
+				BUG_ON(!qi);

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: kernel/vfcipi/thread.c:280:
+ ^I^I}$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#193: FILE: kernel/vfcipi/thread.c:280:
+ ^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: kernel/vfcipi/thread.c:280:
+ ^I^I}$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#194: FILE: kernel/vfcipi/thread.c:281:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: kernel/vfcipi/thread.c:281:
+ $

CHECK:BRACES: braces {} should be used on all arms of this statement
#231: FILE: kernel/vfcipi/thread.c:346:
+	if (rt_task(current)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#238: FILE: kernel/vfcipi/thread.c:353:
+	} else

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000398091.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 10 warnings, 4 checks, 207 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000398091.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
