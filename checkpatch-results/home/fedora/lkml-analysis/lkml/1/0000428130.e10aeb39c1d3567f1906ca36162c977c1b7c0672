WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#80: FILE: arch/i386/xen/enlighten.c:503:
+/* Early in boot, while setting up the initial pagetable, assume
+   everything is pinned. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#80: FILE: arch/i386/xen/enlighten.c:503:
+   everything is pinned. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#83: FILE: arch/i386/xen/enlighten.c:506:
+	BUG_ON(mem_map);	/* should only be used early */

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#88: FILE: arch/i386/xen/enlighten.c:511:
+/* This needs to make sure the new pte page is pinned iff its being
+   attached to a pinned pagetable. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#88: FILE: arch/i386/xen/enlighten.c:511:
+   attached to a pinned pagetable. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#114: FILE: arch/i386/xen/enlighten.c:523:
+			/* make sure there are no stray mappings of
+			   this page */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#114: FILE: arch/i386/xen/enlighten.c:523:
+			   this page */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#147: FILE: arch/i386/xen/enlighten.c:548:
+		printk("mapping highpte %lx type %d prot %s\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#171: FILE: arch/i386/xen/enlighten.c:604:
+	/* This will work as long as patching hasn't happened yet
+	   (which it hasn't) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#171: FILE: arch/i386/xen/enlighten.c:604:
+	   (which it hasn't) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#183: FILE: arch/i386/xen/enlighten.c:625:
+	/* Actually pin the pagetable down, but we can't set PG_pinned
+	   yet because the page structures don't exist yet. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#183: FILE: arch/i386/xen/enlighten.c:625:
+	   yet because the page structures don't exist yet. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#193: FILE: arch/i386/xen/enlighten.c:635:
+			BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#301: FILE: arch/i386/xen/mmu.c:159:
+		BUG();

WARNING:MEMORY_BARRIER: memory barrier without comment
#307: FILE: arch/i386/xen/mmu.c:165:
+	smp_wmb();

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#377: FILE: arch/i386/xen/mmu.c:280:
+/*
+  (Yet another) pagetable walker.  This one is intended for pinning a

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#386: FILE: arch/i386/xen/mmu.c:289:
+static int pgd_walk(pgd_t *pgd_base, int (*func)(struct page *, unsigned),

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#398: FILE: arch/i386/xen/mmu.c:297:
+	BUG_ON(limit > FIXADDR_TOP);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#411: FILE: arch/i386/xen/mmu.c:306:
+		pgd_next = pud_limit = pgd_addr_end(addr, FIXADDR_TOP);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#448: FILE: arch/i386/xen/mmu.c:337:
+				if ((pmd_limit-1) < (addr-1)) {
 				              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#448: FILE: arch/i386/xen/mmu.c:337:
+				if ((pmd_limit-1) < (addr-1)) {
 				                         ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#485: FILE: arch/i386/xen/mmu.c:355:
+static int pin_page(struct page *page, unsigned flags)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#487: FILE: arch/i386/xen/mmu.c:357:
+	unsigned pgfl = test_and_set_bit(PG_pinned, &page->flags);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#494: FILE: arch/i386/xen/mmu.c:364:
+		/* kmaps need flushing if we found an unpinned
+		   highpage */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#494: FILE: arch/i386/xen/mmu.c:364:
+		   highpage */

CHECK:BRACES: Unbalanced braces around else statement
#496: FILE: arch/i386/xen/mmu.c:366:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#512: FILE: arch/i386/xen/mmu.c:382:
+/* This is called just after a mm has been created, but it has not
+   been used yet.  We need to make sure that its pagetable is all

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#513: FILE: arch/i386/xen/mmu.c:383:
+   read-only, and can be pinned. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#549: FILE: arch/i386/xen/mmu.c:409:
+/* The init_mm pagetable is really pinned as soon as its created, but
+   that's before we have page structures to store the bits.  So do all

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#550: FILE: arch/i386/xen/mmu.c:410:
+   the book-keeping now. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#551: FILE: arch/i386/xen/mmu.c:411:
+static __init int mark_pinned(struct page *page, unsigned flags)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#562: FILE: arch/i386/xen/mmu.c:422:
+static int unpin_page(struct page *page, unsigned flags)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#564: FILE: arch/i386/xen/mmu.c:424:
+	unsigned pgfl = test_and_clear_bit(PG_pinned, &page->flags);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000428130.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 29 warnings, 4 checks, 560 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000428130.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
