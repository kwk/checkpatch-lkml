WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
This patch enables CE-ATA HDD support including device initialization and  data read/write.

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'GermanMonroy (german.monroy@intel.com>'
#56: 
Signed-off-by: GermanMonroy (german.monroy@intel.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#89: FILE: drivers/mmc/Kconfig:22:
+config MRST_MMC_WR
+       bool "MMC/SD/CEATA workaround for Moorestown"
+       depends on MMC
+       help
+         This is an option for Moorestown developers to add workaround
+         in the code due to Silicon issues.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: drivers/mmc/card/block.c:231:
+       struct mmc_blk_data *md = mq->data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: drivers/mmc/card/block.c:232:
+       struct mmc_card *card = md->queue.card;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: drivers/mmc/card/block.c:233:
+       struct mmc_blk_request brq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: drivers/mmc/card/block.c:234:
+       int ret = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: drivers/mmc/card/block.c:235:
+       int rw, err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: drivers/mmc/card/block.c:237:
+       rw = rq_data_dir(req) == READ ? 0 : 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: drivers/mmc/card/block.c:239:
+       mmc_claim_host(card->host);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: drivers/mmc/card/block.c:241:
+       do {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#131: FILE: drivers/mmc/card/block.c:241:
+       do {
[...]
+               err = ceata_read_write_cmd(card,

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: drivers/mmc/card/block.c:242:
+               /* 1. Send ATA command via ceata's mmc cmd 60*/$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: drivers/mmc/card/block.c:243:
+               err = ceata_read_write_cmd(card,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: drivers/mmc/card/block.c:243:
+               err = ceata_read_write_cmd(card,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: drivers/mmc/card/block.c:244:
+                       rw, req->sector, req->nr_sectors);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#134: FILE: drivers/mmc/card/block.c:244:
+               err = ceata_read_write_cmd(card,
+                       rw, req->sector, req->nr_sectors);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: drivers/mmc/card/block.c:244:
+                       rw, req->sector, req->nr_sectors);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: drivers/mmc/card/block.c:246:
+               if (err)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: drivers/mmc/card/block.c:246:
+               if (err)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#136: FILE: drivers/mmc/card/block.c:246:
+               if (err)
+                       goto cmd_err;

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: drivers/mmc/card/block.c:247:
+                       goto cmd_err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: drivers/mmc/card/block.c:247:
+                       goto cmd_err;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: drivers/mmc/card/block.c:249:
+               /* 2. Transfer data via DMA using ceata's mmc cmd 61 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: drivers/mmc/card/block.c:250:
+               memset(&brq, 0, sizeof(struct mmc_blk_request));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: drivers/mmc/card/block.c:250:
+               memset(&brq, 0, sizeof(struct mmc_blk_request));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: drivers/mmc/card/block.c:252:
+               brq.mrq.cmd = &brq.cmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: drivers/mmc/card/block.c:252:
+               brq.mrq.cmd = &brq.cmd;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: drivers/mmc/card/block.c:253:
+               brq.mrq.data = &brq.data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: drivers/mmc/card/block.c:253:
+               brq.mrq.data = &brq.data;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: drivers/mmc/card/block.c:254:
+               /* No stop command required for CEATA transfers */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: drivers/mmc/card/block.c:255:
+               brq.mrq.stop = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: drivers/mmc/card/block.c:255:
+               brq.mrq.stop = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: drivers/mmc/card/block.c:257:
+               /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: drivers/mmc/card/block.c:258:
+                * New controllers claim to support 4k mmc block transfers,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: drivers/mmc/card/block.c:259:
+                * but no known CEATA hdd supports it.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: drivers/mmc/card/block.c:260:
+                * Playing it safe at 512 for now$

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: drivers/mmc/card/block.c:261:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: drivers/mmc/card/block.c:262:
+               brq.data.blksz = 512;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: drivers/mmc/card/block.c:262:
+               brq.data.blksz = 512;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: drivers/mmc/card/block.c:263:
+               brq.data.blocks = req->nr_sectors;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: drivers/mmc/card/block.c:263:
+               brq.data.blocks = req->nr_sectors;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: drivers/mmc/card/block.c:264:
+               brq.data.flags = rw ? MMC_DATA_WRITE : MMC_DATA_READ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: drivers/mmc/card/block.c:264:
+               brq.data.flags = rw ? MMC_DATA_WRITE : MMC_DATA_READ;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: drivers/mmc/card/block.c:266:
+               if (brq.data.blocks > card->host->max_blk_count)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: drivers/mmc/card/block.c:266:
+               if (brq.data.blocks > card->host->max_blk_count)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#156: FILE: drivers/mmc/card/block.c:266:
+               if (brq.data.blocks > card->host->max_blk_count)
+                       brq.data.blocks = card->host->max_blk_count;

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: drivers/mmc/card/block.c:267:
+                       brq.data.blocks = card->host->max_blk_count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: drivers/mmc/card/block.c:267:
+                       brq.data.blocks = card->host->max_blk_count;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: drivers/mmc/card/block.c:269:
+               brq.cmd.opcode = MMC_CEATA_RW_MULTI_BLK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: drivers/mmc/card/block.c:269:
+               brq.cmd.opcode = MMC_CEATA_RW_MULTI_BLK;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: drivers/mmc/card/block.c:270:
+               brq.cmd.arg = (rw << 31) | req->nr_sectors;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: drivers/mmc/card/block.c:270:
+               brq.cmd.arg = (rw << 31) | req->nr_sectors;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: drivers/mmc/card/block.c:271:
+               brq.cmd.flags = MMC_CMD_ADTC | (rw ? MMC_RSP_R1B : MMC_RSP_R1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: drivers/mmc/card/block.c:271:
+               brq.cmd.flags = MMC_CMD_ADTC | (rw ? MMC_RSP_R1B : MMC_RSP_R1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: drivers/mmc/card/block.c:273:
+               mmc_set_data_timeout(&brq.data, card);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: drivers/mmc/card/block.c:273:
+               mmc_set_data_timeout(&brq.data, card);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: drivers/mmc/card/block.c:275:
+               brq.data.sg = mq->sg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: drivers/mmc/card/block.c:275:
+               brq.data.sg = mq->sg;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: drivers/mmc/card/block.c:276:
+               brq.data.sg_len = mmc_queue_map_sg(mq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: drivers/mmc/card/block.c:276:
+               brq.data.sg_len = mmc_queue_map_sg(mq);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: drivers/mmc/card/block.c:278:
+               mmc_queue_bounce_pre(mq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: drivers/mmc/card/block.c:278:
+               mmc_queue_bounce_pre(mq);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: drivers/mmc/card/block.c:280:
+               mmc_wait_for_req(card->host, &brq.mrq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: drivers/mmc/card/block.c:280:
+               mmc_wait_for_req(card->host, &brq.mrq);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: drivers/mmc/card/block.c:282:
+               mmc_queue_bounce_post(mq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: drivers/mmc/card/block.c:282:
+               mmc_queue_bounce_post(mq);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: drivers/mmc/card/block.c:284:
+               if (brq.cmd.error) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: drivers/mmc/card/block.c:284:
+               if (brq.cmd.error) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#174: FILE: drivers/mmc/card/block.c:284:
+               if (brq.cmd.error) {
+                       printk(KERN_ERR "%s: error %d sending read/write command\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: drivers/mmc/card/block.c:285:
+                       printk(KERN_ERR "%s: error %d sending read/write command\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: drivers/mmc/card/block.c:285:
+                       printk(KERN_ERR "%s: error %d sending read/write command\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#175: FILE: drivers/mmc/card/block.c:285:
+                       printk(KERN_ERR "%s: error %d sending read/write command\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: drivers/mmc/card/block.c:286:
+                       req->rq_disk->disk_name, brq.cmd.error);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#176: FILE: drivers/mmc/card/block.c:286:
+                       printk(KERN_ERR "%s: error %d sending read/write command\n",
+                       req->rq_disk->disk_name, brq.cmd.error);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: drivers/mmc/card/block.c:286:
+                       req->rq_disk->disk_name, brq.cmd.error);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#177: FILE: drivers/mmc/card/block.c:287:
+                       goto cmd_err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: drivers/mmc/card/block.c:287:
+                       goto cmd_err;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: drivers/mmc/card/block.c:288:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: drivers/mmc/card/block.c:288:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: drivers/mmc/card/block.c:290:
+               if (brq.data.error) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: drivers/mmc/card/block.c:290:
+               if (brq.data.error) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#180: FILE: drivers/mmc/card/block.c:290:
+               if (brq.data.error) {
+                       printk(KERN_ERR "%s: error %d transferring data\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: drivers/mmc/card/block.c:291:
+                       printk(KERN_ERR "%s: error %d transferring data\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: drivers/mmc/card/block.c:291:
+                       printk(KERN_ERR "%s: error %d transferring data\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#181: FILE: drivers/mmc/card/block.c:291:
+                       printk(KERN_ERR "%s: error %d transferring data\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: drivers/mmc/card/block.c:292:
+                       req->rq_disk->disk_name, brq.data.error);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#182: FILE: drivers/mmc/card/block.c:292:
+                       printk(KERN_ERR "%s: error %d transferring data\n",
+                       req->rq_disk->disk_name, brq.data.error);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: drivers/mmc/card/block.c:292:
+                       req->rq_disk->disk_name, brq.data.error);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: drivers/mmc/card/block.c:293:
+                       goto cmd_err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: drivers/mmc/card/block.c:293:
+                       goto cmd_err;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#184: FILE: drivers/mmc/card/block.c:294:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: drivers/mmc/card/block.c:294:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: drivers/mmc/card/block.c:296:
+               /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: drivers/mmc/card/block.c:297:
+                * A block was successfully transferred.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: drivers/mmc/card/block.c:298:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#189: FILE: drivers/mmc/card/block.c:299:
+               spin_lock_irq(&md->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: drivers/mmc/card/block.c:299:
+               spin_lock_irq(&md->lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#190: FILE: drivers/mmc/card/block.c:300:
+               ret = __blk_end_request(req, 0, brq.data.bytes_xfered);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: drivers/mmc/card/block.c:300:
+               ret = __blk_end_request(req, 0, brq.data.bytes_xfered);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: drivers/mmc/card/block.c:301:
+               spin_unlock_irq(&md->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: drivers/mmc/card/block.c:301:
+               spin_unlock_irq(&md->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: drivers/mmc/card/block.c:302:
+       } while (ret);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: drivers/mmc/card/block.c:304:
+       mmc_release_host(card->host);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: drivers/mmc/card/block.c:305:
+       return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: drivers/mmc/card/block.c:308:
+       mmc_release_host(card->host);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: drivers/mmc/card/block.c:310:
+       spin_lock_irq(&md->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: drivers/mmc/card/block.c:311:
+       while (ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#201: FILE: drivers/mmc/card/block.c:311:
+       while (ret)
+               ret = __blk_end_request(req, -EIO,

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: drivers/mmc/card/block.c:312:
+               ret = __blk_end_request(req, -EIO,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: drivers/mmc/card/block.c:312:
+               ret = __blk_end_request(req, -EIO,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: drivers/mmc/card/block.c:313:
+                       req->current_nr_sectors << 9);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: drivers/mmc/card/block.c:313:
+               ret = __blk_end_request(req, -EIO,
+                       req->current_nr_sectors << 9);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: drivers/mmc/card/block.c:313:
+                       req->current_nr_sectors << 9);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: drivers/mmc/card/block.c:315:
+       spin_unlock_irq(&md->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: drivers/mmc/card/block.c:317:
+       return 0;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#209: FILE: drivers/mmc/card/block.c:319:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: drivers/mmc/card/block.c:544:
+       if (mmc_card_ceata(card))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#218: FILE: drivers/mmc/card/block.c:544:
+       if (mmc_card_ceata(card))
+               return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: drivers/mmc/card/block.c:545:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: drivers/mmc/card/block.c:545:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: drivers/mmc/card/block.c:587:
+       if (mmc_card_ceata(card))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#229: FILE: drivers/mmc/card/block.c:587:
+       if (mmc_card_ceata(card))
+               md->queue.issue_fn = ceata_blk_issue_rq;

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: drivers/mmc/card/block.c:588:
+               md->queue.issue_fn = ceata_blk_issue_rq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: drivers/mmc/card/block.c:588:
+               md->queue.issue_fn = ceata_blk_issue_rq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: drivers/mmc/card/block.c:589:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#231: FILE: drivers/mmc/card/block.c:589:
+       else
+               md->queue.issue_fn = mmc_blk_issue_rq;

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: drivers/mmc/card/block.c:590:
+               md->queue.issue_fn = mmc_blk_issue_rq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: drivers/mmc/card/block.c:590:
+               md->queue.issue_fn = mmc_blk_issue_rq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: drivers/mmc/card/block.c:613:
+       snprintf(md->disk->disk_name, sizeof(md->disk->disk_name),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: drivers/mmc/card/block.c:614:
+               "mmcblk%d", devidx);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#243: FILE: drivers/mmc/card/block.c:614:
+       snprintf(md->disk->disk_name, sizeof(md->disk->disk_name),
+               "mmcblk%d", devidx);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: drivers/mmc/card/block.c:614:
+               "mmcblk%d", devidx);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: drivers/mmc/card/block.c:618:
+       if (mmc_card_ceata(card)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#248: FILE: drivers/mmc/card/block.c:618:
+       if (mmc_card_ceata(card)) {
[...]
+               WARN_ON(card->ceata_info->max_lba[1]);

ERROR:CODE_INDENT: code indent should use tabs where possible
#249: FILE: drivers/mmc/card/block.c:619:
+               /* max_lba[0] covers all current ceata devices */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#250: FILE: drivers/mmc/card/block.c:620:
+               WARN_ON(card->ceata_info->max_lba[1]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: drivers/mmc/card/block.c:620:
+               WARN_ON(card->ceata_info->max_lba[1]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#251: FILE: drivers/mmc/card/block.c:621:
+               /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#252: FILE: drivers/mmc/card/block.c:622:
+                * Capacity from IDENTIFY_DEVICE comes in 512 byte$

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: drivers/mmc/card/block.c:623:
+                * sectors.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: drivers/mmc/card/block.c:624:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#255: FILE: drivers/mmc/card/block.c:625:
+               set_capacity(md->disk, card->ceata_info->max_lba[0]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: drivers/mmc/card/block.c:625:
+               set_capacity(md->disk, card->ceata_info->max_lba[0]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: drivers/mmc/card/block.c:626:
+       } else if (!mmc_card_sd(card) && mmc_card_blockaddr(card)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: drivers/mmc/card/block.c:686:
+       if (!(card->csd.cmdclass & CCC_BLOCK_READ) &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#265: FILE: drivers/mmc/card/block.c:686:
+       if (!(card->csd.cmdclass & CCC_BLOCK_READ) &&
[...]
                return -ENODEV;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#266: FILE: drivers/mmc/card/block.c:687:
+       if (!(card->csd.cmdclass & CCC_BLOCK_READ) &&
+       !mmc_card_ceata(card))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: drivers/mmc/card/block.c:687:
+       !mmc_card_ceata(card))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: drivers/mmc/core/bus.c:39:
+       case MMC_TYPE_CEATA:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#292: FILE: drivers/mmc/core/bus.c:40:
+               return snprintf(buf, sizeof(buf), "CEATA\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: drivers/mmc/core/bus.c:40:
+               return snprintf(buf, sizeof(buf), "CEATA\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: drivers/mmc/core/bus.c:78:
+       case MMC_TYPE_CEATA:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: drivers/mmc/core/bus.c:79:
+               type = "CEATA";$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: drivers/mmc/core/bus.c:79:
+               type = "CEATA";$

ERROR:CODE_INDENT: code indent should use tabs where possible
#302: FILE: drivers/mmc/core/bus.c:80:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: drivers/mmc/core/bus.c:80:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: drivers/mmc/core/bus.c:198:
+       kfree(card->ceata_info);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: drivers/mmc/core/bus.c:248:
+       case MMC_TYPE_CEATA:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: drivers/mmc/core/bus.c:249:
+               type = "CEATA";$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: drivers/mmc/core/bus.c:249:
+               type = "CEATA";$

ERROR:CODE_INDENT: code indent should use tabs where possible
#321: FILE: drivers/mmc/core/bus.c:250:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: drivers/mmc/core/bus.c:250:
+               break;$

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#326: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#331: FILE: drivers/mmc/core/ceata.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#348: FILE: drivers/mmc/core/ceata.c:18:
+ * this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#349: FILE: drivers/mmc/core/ceata.c:19:
+ * 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: drivers/mmc/core/ceata.c:37:
+       u8 status;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: drivers/mmc/core/ceata.c:38:
+       u8 error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: drivers/mmc/core/ceata.c:39:
+       char *type;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#371: FILE: drivers/mmc/core/ceata.c:41:
+        * Almost all the time this function will return immediately$

ERROR:CODE_INDENT: code indent should use tabs where possible
#372: FILE: drivers/mmc/core/ceata.c:42:
+        * or within a few milliseconds.  However the Toshiba and$

ERROR:CODE_INDENT: code indent should use tabs where possible
#373: FILE: drivers/mmc/core/ceata.c:43:
+        * Samsung hdds have been known to take up to 1.5 s to clear$

ERROR:CODE_INDENT: code indent should use tabs where possible
#374: FILE: drivers/mmc/core/ceata.c:44:
+        * their ATA busy bit, either when the hdd is used for the first$

ERROR:CODE_INDENT: code indent should use tabs where possible
#375: FILE: drivers/mmc/core/ceata.c:45:
+        * time or sporadically during normal use.  Leaving 30 s for$

ERROR:CODE_INDENT: code indent should use tabs where possible
#376: FILE: drivers/mmc/core/ceata.c:46:
+        * a corner case.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#377: FILE: drivers/mmc/core/ceata.c:47:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: drivers/mmc/core/ceata.c:48:
+       int limit = 30000;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: drivers/mmc/core/ceata.c:49:
+       int wait = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: drivers/mmc/core/ceata.c:51:
+       for (wait = 0; wait < limit; wait++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#381: FILE: drivers/mmc/core/ceata.c:51:
+       for (wait = 0; wait < limit; wait++) {
+               mmc_fast_io(card, 0, CEATA_REG_STATUS, &status, 0x0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#382: FILE: drivers/mmc/core/ceata.c:52:
+               mmc_fast_io(card, 0, CEATA_REG_STATUS, &status, 0x0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: drivers/mmc/core/ceata.c:52:
+               mmc_fast_io(card, 0, CEATA_REG_STATUS, &status, 0x0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#384: FILE: drivers/mmc/core/ceata.c:54:
+               if (status & CEATA_STATUS_ERR) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: drivers/mmc/core/ceata.c:54:
+               if (status & CEATA_STATUS_ERR) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#384: FILE: drivers/mmc/core/ceata.c:54:
+               if (status & CEATA_STATUS_ERR) {
+                       mmc_fast_io(card, 0, CEATA_REG_ERROR, &error, 0x0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#385: FILE: drivers/mmc/core/ceata.c:55:
+                       mmc_fast_io(card, 0, CEATA_REG_ERROR, &error, 0x0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: drivers/mmc/core/ceata.c:55:
+                       mmc_fast_io(card, 0, CEATA_REG_ERROR, &error, 0x0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#387: FILE: drivers/mmc/core/ceata.c:57:
+                       switch (error) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: drivers/mmc/core/ceata.c:57:
+                       switch (error) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#388: FILE: drivers/mmc/core/ceata.c:58:
+                       case CEATA_ERROR_ICRC:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: drivers/mmc/core/ceata.c:58:
+                       case CEATA_ERROR_ICRC:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#389: FILE: drivers/mmc/core/ceata.c:59:
+                               type = "Interface CRC";$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: drivers/mmc/core/ceata.c:59:
+                               type = "Interface CRC";$

ERROR:CODE_INDENT: code indent should use tabs where possible
#390: FILE: drivers/mmc/core/ceata.c:60:
+                               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: drivers/mmc/core/ceata.c:60:
+                               break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#391: FILE: drivers/mmc/core/ceata.c:61:
+                       case CEATA_ERROR_UNC:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: drivers/mmc/core/ceata.c:61:
+                       case CEATA_ERROR_UNC:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#392: FILE: drivers/mmc/core/ceata.c:62:
+                               type = "Uncorrectable data";$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: drivers/mmc/core/ceata.c:62:
+                               type = "Uncorrectable data";$

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: drivers/mmc/core/ceata.c:63:
+                               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: drivers/mmc/core/ceata.c:63:
+                               break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#394: FILE: drivers/mmc/core/ceata.c:64:
+                       case CEATA_ERROR_IDNF:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: drivers/mmc/core/ceata.c:64:
+                       case CEATA_ERROR_IDNF:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#395: FILE: drivers/mmc/core/ceata.c:65:
+                               type = "Sector not found";$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: drivers/mmc/core/ceata.c:65:
+                               type = "Sector not found";$

ERROR:CODE_INDENT: code indent should use tabs where possible
#396: FILE: drivers/mmc/core/ceata.c:66:
+                               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: drivers/mmc/core/ceata.c:66:
+                               break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#397: FILE: drivers/mmc/core/ceata.c:67:
+                       case CEATA_ERROR_ABRT:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: drivers/mmc/core/ceata.c:67:
+                       case CEATA_ERROR_ABRT:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#398: FILE: drivers/mmc/core/ceata.c:68:
+                               type = "Command Aborted";$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: drivers/mmc/core/ceata.c:68:
+                               type = "Command Aborted";$

ERROR:CODE_INDENT: code indent should use tabs where possible
#399: FILE: drivers/mmc/core/ceata.c:69:
+                               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: drivers/mmc/core/ceata.c:69:
+                               break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#400: FILE: drivers/mmc/core/ceata.c:70:
+                       default:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#401: FILE: drivers/mmc/core/ceata.c:71:
+                               type = "Unknown";$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: drivers/mmc/core/ceata.c:71:
+                               type = "Unknown";$

ERROR:CODE_INDENT: code indent should use tabs where possible
#402: FILE: drivers/mmc/core/ceata.c:72:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: drivers/mmc/core/ceata.c:72:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#403: FILE: drivers/mmc/core/ceata.c:73:
+                       printk(KERN_ERR "%s: CE-ATA device error: %s\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: drivers/mmc/core/ceata.c:73:
+                       printk(KERN_ERR "%s: CE-ATA device error: %s\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#403: FILE: drivers/mmc/core/ceata.c:73:
+                       printk(KERN_ERR "%s: CE-ATA device error: %s\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#404: FILE: drivers/mmc/core/ceata.c:74:
+                                       mmc_hostname(card->host), type);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#404: FILE: drivers/mmc/core/ceata.c:74:
+                       printk(KERN_ERR "%s: CE-ATA device error: %s\n",
+                                       mmc_hostname(card->host), type);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: drivers/mmc/core/ceata.c:74:
+                                       mmc_hostname(card->host), type);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#405: FILE: drivers/mmc/core/ceata.c:75:
+                       return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#405: FILE: drivers/mmc/core/ceata.c:75:
+                       return -EIO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#407: FILE: drivers/mmc/core/ceata.c:77:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: drivers/mmc/core/ceata.c:77:
+               }$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#407: FILE: drivers/mmc/core/ceata.c:77:
+
+               }

ERROR:CODE_INDENT: code indent should use tabs where possible
#409: FILE: drivers/mmc/core/ceata.c:79:
+               if (!(status & CEATA_STATUS_BSY) &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: drivers/mmc/core/ceata.c:79:
+               if (!(status & CEATA_STATUS_BSY) &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#409: FILE: drivers/mmc/core/ceata.c:79:
+               if (!(status & CEATA_STATUS_BSY) &&
[...]
+                       goto exit;

ERROR:CODE_INDENT: code indent should use tabs where possible
#410: FILE: drivers/mmc/core/ceata.c:80:
+                               (status & CEATA_STATUS_DRDY))$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#410: FILE: drivers/mmc/core/ceata.c:80:
+               if (!(status & CEATA_STATUS_BSY) &&
+                               (status & CEATA_STATUS_DRDY))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: drivers/mmc/core/ceata.c:80:
+                               (status & CEATA_STATUS_DRDY))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#411: FILE: drivers/mmc/core/ceata.c:81:
+                       goto exit;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: drivers/mmc/core/ceata.c:81:
+                       goto exit;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#412: FILE: drivers/mmc/core/ceata.c:82:
+               mmc_delay(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: drivers/mmc/core/ceata.c:82:
+               mmc_delay(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: drivers/mmc/core/ceata.c:83:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#415: FILE: drivers/mmc/core/ceata.c:85:
+       printk(KERN_ERR "%s: after %d ms wait, CE-ATA still busy\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#415: FILE: drivers/mmc/core/ceata.c:85:
+       printk(KERN_ERR "%s: after %d ms wait, CE-ATA still busy\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#416: FILE: drivers/mmc/core/ceata.c:86:
+                       mmc_hostname(card->host), wait);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#416: FILE: drivers/mmc/core/ceata.c:86:
+       printk(KERN_ERR "%s: after %d ms wait, CE-ATA still busy\n",
+                       mmc_hostname(card->host), wait);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: drivers/mmc/core/ceata.c:86:
+                       mmc_hostname(card->host), wait);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: drivers/mmc/core/ceata.c:87:
+       return -ETIMEDOUT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#420: FILE: drivers/mmc/core/ceata.c:90:
+       if (wait > 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#420: FILE: drivers/mmc/core/ceata.c:90:
+       if (wait > 0)
+               pr_debug("%s: polled CE-ATA status during %d ms\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#421: FILE: drivers/mmc/core/ceata.c:91:
+               pr_debug("%s: polled CE-ATA status during %d ms\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: drivers/mmc/core/ceata.c:91:
+               pr_debug("%s: polled CE-ATA status during %d ms\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#422: FILE: drivers/mmc/core/ceata.c:92:
+                               mmc_hostname(card->host), wait);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#422: FILE: drivers/mmc/core/ceata.c:92:
+               pr_debug("%s: polled CE-ATA status during %d ms\n",
+                               mmc_hostname(card->host), wait);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: drivers/mmc/core/ceata.c:92:
+                               mmc_hostname(card->host), wait);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: drivers/mmc/core/ceata.c:93:
+       return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#430: FILE: drivers/mmc/core/ceata.c:100:
+               u8 reg_addr, u8 bytelen)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#430: FILE: drivers/mmc/core/ceata.c:100:
+static int ceata_cmd60(struct mmc_card *card, u8 rw, void *ptaskfile,
+               u8 reg_addr, u8 bytelen)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#430: FILE: drivers/mmc/core/ceata.c:100:
+               u8 reg_addr, u8 bytelen)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#432: FILE: drivers/mmc/core/ceata.c:102:
+       struct mmc_request mrq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: drivers/mmc/core/ceata.c:103:
+       struct mmc_command cmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: drivers/mmc/core/ceata.c:104:
+       struct mmc_data data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: drivers/mmc/core/ceata.c:105:
+       struct scatterlist sg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#437: FILE: drivers/mmc/core/ceata.c:107:
+       BUG_ON(!card);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#437: FILE: drivers/mmc/core/ceata.c:107:
+       BUG_ON(!card);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: drivers/mmc/core/ceata.c:108:
+       BUG_ON(!card->host);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#438: FILE: drivers/mmc/core/ceata.c:108:
+       BUG_ON(!card->host);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#439: FILE: drivers/mmc/core/ceata.c:109:
+       BUG_ON(!ptaskfile);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#439: FILE: drivers/mmc/core/ceata.c:109:
+       BUG_ON(!ptaskfile);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: drivers/mmc/core/ceata.c:111:
+       memset(&mrq, 0, sizeof(struct mmc_request));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: drivers/mmc/core/ceata.c:112:
+       memset(&cmd, 0, sizeof(struct mmc_command));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#443: FILE: drivers/mmc/core/ceata.c:113:
+       memset(&data, 0, sizeof(struct mmc_data));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#445: FILE: drivers/mmc/core/ceata.c:115:
+       mrq.cmd = &cmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#446: FILE: drivers/mmc/core/ceata.c:116:
+       mrq.data = &data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#448: FILE: drivers/mmc/core/ceata.c:118:
+       cmd.opcode = MMC_CEATA_RW_MULTI_REG;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: drivers/mmc/core/ceata.c:119:
+       cmd.arg = (rw << 31) | (reg_addr << 16) | (bytelen);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: drivers/mmc/core/ceata.c:120:
+       cmd.flags = MMC_CMD_ADTC | (rw ? MMC_RSP_R1B : MMC_RSP_R1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: drivers/mmc/core/ceata.c:122:
+       data.blksz = bytelen;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#453: FILE: drivers/mmc/core/ceata.c:123:
+       data.blocks = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#454: FILE: drivers/mmc/core/ceata.c:124:
+       data.flags = rw ? MMC_DATA_WRITE : MMC_DATA_READ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#455: FILE: drivers/mmc/core/ceata.c:125:
+       data.sg = &sg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#456: FILE: drivers/mmc/core/ceata.c:126:
+       data.sg_len = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#458: FILE: drivers/mmc/core/ceata.c:128:
+       sg_init_one(&sg, ptaskfile, bytelen);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: drivers/mmc/core/ceata.c:130:
+       mmc_set_data_timeout(&data, card);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: drivers/mmc/core/ceata.c:132:
+       mmc_wait_for_req(card->host, &mrq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: drivers/mmc/core/ceata.c:134:
+       if (cmd.error)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#464: FILE: drivers/mmc/core/ceata.c:134:
+       if (cmd.error)
+               return cmd.error;

ERROR:CODE_INDENT: code indent should use tabs where possible
#465: FILE: drivers/mmc/core/ceata.c:135:
+               return cmd.error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#465: FILE: drivers/mmc/core/ceata.c:135:
+               return cmd.error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#466: FILE: drivers/mmc/core/ceata.c:136:
+       if (data.error)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#466: FILE: drivers/mmc/core/ceata.c:136:
+       if (data.error)
+               return data.error;

ERROR:CODE_INDENT: code indent should use tabs where possible
#467: FILE: drivers/mmc/core/ceata.c:137:
+               return data.error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: drivers/mmc/core/ceata.c:137:
+               return data.error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#469: FILE: drivers/mmc/core/ceata.c:139:
+       return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#476: FILE: drivers/mmc/core/ceata.c:146:
+               u16 bytelen)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#476: FILE: drivers/mmc/core/ceata.c:146:
+static int ceata_cmd61(struct mmc_card *card, u8 rw, void *buffer,
+               u16 bytelen)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: drivers/mmc/core/ceata.c:146:
+               u16 bytelen)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: drivers/mmc/core/ceata.c:148:
+       struct mmc_request mrq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#479: FILE: drivers/mmc/core/ceata.c:149:
+       struct mmc_command cmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#480: FILE: drivers/mmc/core/ceata.c:150:
+       struct mmc_data data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: drivers/mmc/core/ceata.c:151:
+       struct scatterlist sg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: drivers/mmc/core/ceata.c:153:
+       BUG_ON(!card);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#483: FILE: drivers/mmc/core/ceata.c:153:
+       BUG_ON(!card);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: drivers/mmc/core/ceata.c:154:
+       BUG_ON(!card->host);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#484: FILE: drivers/mmc/core/ceata.c:154:
+       BUG_ON(!card->host);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#485: FILE: drivers/mmc/core/ceata.c:155:
+       BUG_ON(bytelen % 512);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#485: FILE: drivers/mmc/core/ceata.c:155:
+       BUG_ON(bytelen % 512);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: drivers/mmc/core/ceata.c:157:
+       memset(&mrq, 0, sizeof(struct mmc_request));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: drivers/mmc/core/ceata.c:158:
+       memset(&cmd, 0, sizeof(struct mmc_command));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: drivers/mmc/core/ceata.c:159:
+       memset(&data, 0, sizeof(struct mmc_data));$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#491: FILE: drivers/mmc/core/ceata.c:161:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: drivers/mmc/core/ceata.c:162:
+       mrq.cmd = &cmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: drivers/mmc/core/ceata.c:163:
+       mrq.data = &data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: drivers/mmc/core/ceata.c:164:
+       mrq.stop = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: drivers/mmc/core/ceata.c:167:
+       data.blksz = 512;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: drivers/mmc/core/ceata.c:168:
+       data.blocks = bytelen / 512;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#499: FILE: drivers/mmc/core/ceata.c:169:
+       data.flags = rw ? MMC_DATA_WRITE : MMC_DATA_READ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#500: FILE: drivers/mmc/core/ceata.c:170:
+       data.sg = &sg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#501: FILE: drivers/mmc/core/ceata.c:171:
+       data.sg_len = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#503: FILE: drivers/mmc/core/ceata.c:173:
+       cmd.opcode = MMC_CEATA_RW_MULTI_BLK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#504: FILE: drivers/mmc/core/ceata.c:174:
+       cmd.arg = (rw << 31) | data.blocks;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#505: FILE: drivers/mmc/core/ceata.c:175:
+       cmd.flags = MMC_CMD_ADTC | (rw ? MMC_RSP_R1B : MMC_RSP_R1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#507: FILE: drivers/mmc/core/ceata.c:177:
+       sg_init_one(&sg, buffer, bytelen);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#509: FILE: drivers/mmc/core/ceata.c:179:
+       mmc_set_data_timeout(&data, card);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#511: FILE: drivers/mmc/core/ceata.c:181:
+       mmc_wait_for_req(card->host, &mrq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#513: FILE: drivers/mmc/core/ceata.c:183:
+       if (cmd.error)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#513: FILE: drivers/mmc/core/ceata.c:183:
+       if (cmd.error)
+               return cmd.error;

ERROR:CODE_INDENT: code indent should use tabs where possible
#514: FILE: drivers/mmc/core/ceata.c:184:
+               return cmd.error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#514: FILE: drivers/mmc/core/ceata.c:184:
+               return cmd.error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#515: FILE: drivers/mmc/core/ceata.c:185:
+       if (data.error)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#515: FILE: drivers/mmc/core/ceata.c:185:
+       if (data.error)
+               return data.error;

ERROR:CODE_INDENT: code indent should use tabs where possible
#516: FILE: drivers/mmc/core/ceata.c:186:
+               return data.error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#516: FILE: drivers/mmc/core/ceata.c:186:
+               return data.error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#518: FILE: drivers/mmc/core/ceata.c:188:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: drivers/mmc/core/ceata.c:196:
+       u8      *buffer;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#527: FILE: drivers/mmc/core/ceata.c:197:
+       u8      reg_addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#528: FILE: drivers/mmc/core/ceata.c:198:
+       int     ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#530: FILE: drivers/mmc/core/ceata.c:200:
+       ret = ceata_wait_until_ready(card);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: drivers/mmc/core/ceata.c:201:
+       if (ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#531: FILE: drivers/mmc/core/ceata.c:201:
+       if (ret)
+               return ret;

ERROR:CODE_INDENT: code indent should use tabs where possible
#532: FILE: drivers/mmc/core/ceata.c:202:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#532: FILE: drivers/mmc/core/ceata.c:202:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#534: FILE: drivers/mmc/core/ceata.c:204:
+       buffer = kzalloc(CEATA_TASKFILE_BYTELEN, GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#535: FILE: drivers/mmc/core/ceata.c:205:
+       if (!buffer) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#535: FILE: drivers/mmc/core/ceata.c:205:
+       if (!buffer) {
+               printk(KERN_ERR "%s: could not allocate a buffer to hold "

ERROR:CODE_INDENT: code indent should use tabs where possible
#536: FILE: drivers/mmc/core/ceata.c:206:
+               printk(KERN_ERR "%s: could not allocate a buffer to hold "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#536: FILE: drivers/mmc/core/ceata.c:206:
+               printk(KERN_ERR "%s: could not allocate a buffer to hold "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#536: FILE: drivers/mmc/core/ceata.c:206:
+               printk(KERN_ERR "%s: could not allocate a buffer to hold "

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#536: FILE: drivers/mmc/core/ceata.c:206:
+       if (!buffer) {
+               printk(KERN_ERR "%s: could not allocate a buffer to hold "

ERROR:CODE_INDENT: code indent should use tabs where possible
#537: FILE: drivers/mmc/core/ceata.c:207:
+                       "the CE-ATA signature.\n", mmc_hostname(card->host));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#537: FILE: drivers/mmc/core/ceata.c:207:
+                       "the CE-ATA signature.\n", mmc_hostname(card->host));$

WARNING:SPLIT_STRING: quoted string split across lines
#537: FILE: drivers/mmc/core/ceata.c:207:
+               printk(KERN_ERR "%s: could not allocate a buffer to hold "
+                       "the CE-ATA signature.\n", mmc_hostname(card->host));

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:CODE_INDENT: code indent should use tabs where possible
#538: FILE: drivers/mmc/core/ceata.c:208:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#538: FILE: drivers/mmc/core/ceata.c:208:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#539: FILE: drivers/mmc/core/ceata.c:209:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#541: FILE: drivers/mmc/core/ceata.c:211:
+       reg_addr = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#542: FILE: drivers/mmc/core/ceata.c:212:
+       ret = ceata_cmd60(card, 0, buffer, reg_addr, CEATA_TASKFILE_BYTELEN);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#543: FILE: drivers/mmc/core/ceata.c:213:
+       if (ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#543: FILE: drivers/mmc/core/ceata.c:213:
+       if (ret)
+               goto err;

ERROR:CODE_INDENT: code indent should use tabs where possible
#544: FILE: drivers/mmc/core/ceata.c:214:
+               goto err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#544: FILE: drivers/mmc/core/ceata.c:214:
+               goto err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#546: FILE: drivers/mmc/core/ceata.c:216:
+       if (buffer[12] != CEATA_SIGNATURE_BYTE_12 ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#546: FILE: drivers/mmc/core/ceata.c:216:
+       if (buffer[12] != CEATA_SIGNATURE_BYTE_12 ||
[...]
+               printk(KERN_WARNING "%s: device missing CE-ATA signature\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#547: FILE: drivers/mmc/core/ceata.c:217:
+                       buffer[13] != CEATA_SIGNATURE_BYTE_13)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#547: FILE: drivers/mmc/core/ceata.c:217:
+       if (buffer[12] != CEATA_SIGNATURE_BYTE_12 ||
+                       buffer[13] != CEATA_SIGNATURE_BYTE_13)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#547: FILE: drivers/mmc/core/ceata.c:217:
+                       buffer[13] != CEATA_SIGNATURE_BYTE_13)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#548: FILE: drivers/mmc/core/ceata.c:218:
+               printk(KERN_WARNING "%s: device missing CE-ATA signature\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#548: FILE: drivers/mmc/core/ceata.c:218:
+               printk(KERN_WARNING "%s: device missing CE-ATA signature\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#548: FILE: drivers/mmc/core/ceata.c:218:
+               printk(KERN_WARNING "%s: device missing CE-ATA signature\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#549: FILE: drivers/mmc/core/ceata.c:219:
+                               mmc_hostname(card->host));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#549: FILE: drivers/mmc/core/ceata.c:219:
+               printk(KERN_WARNING "%s: device missing CE-ATA signature\n",
+                               mmc_hostname(card->host));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#549: FILE: drivers/mmc/core/ceata.c:219:
+                               mmc_hostname(card->host));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#552: FILE: drivers/mmc/core/ceata.c:222:
+       kfree(buffer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#553: FILE: drivers/mmc/core/ceata.c:223:
+       return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#561: FILE: drivers/mmc/core/ceata.c:231:
+       u8      *cmd_buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#562: FILE: drivers/mmc/core/ceata.c:232:
+       u32     *data_buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#563: FILE: drivers/mmc/core/ceata.c:233:
+       u8      reg_addr = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: drivers/mmc/core/ceata.c:235:
+       struct  ceata_card_info *info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#566: FILE: drivers/mmc/core/ceata.c:236:
+       struct  ceata_task *ptask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#567: FILE: drivers/mmc/core/ceata.c:237:
+       int     ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#569: FILE: drivers/mmc/core/ceata.c:239:
+       u16     *ptemp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#572: FILE: drivers/mmc/core/ceata.c:242:
+       cmd_buf = kzalloc(CEATA_TASKFILE_BYTELEN, GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#573: FILE: drivers/mmc/core/ceata.c:243:
+       data_buf = kzalloc(CEATA_IDENTIFY_DEV_BYTELEN, GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#574: FILE: drivers/mmc/core/ceata.c:244:
+       if (!cmd_buf | !data_buf) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#574: FILE: drivers/mmc/core/ceata.c:244:
+       if (!cmd_buf | !data_buf) {
+               printk(KERN_ERR "%s: could not allocate buffers to "

ERROR:CODE_INDENT: code indent should use tabs where possible
#575: FILE: drivers/mmc/core/ceata.c:245:
+               printk(KERN_ERR "%s: could not allocate buffers to "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#575: FILE: drivers/mmc/core/ceata.c:245:
+               printk(KERN_ERR "%s: could not allocate buffers to "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#575: FILE: drivers/mmc/core/ceata.c:245:
+               printk(KERN_ERR "%s: could not allocate buffers to "

ERROR:CODE_INDENT: code indent should use tabs where possible
#576: FILE: drivers/mmc/core/ceata.c:246:
+                       "identify CE-ATA device.\n", mmc_hostname(card->host));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#576: FILE: drivers/mmc/core/ceata.c:246:
+                       "identify CE-ATA device.\n", mmc_hostname(card->host));$

WARNING:SPLIT_STRING: quoted string split across lines
#576: FILE: drivers/mmc/core/ceata.c:246:
+               printk(KERN_ERR "%s: could not allocate buffers to "
+                       "identify CE-ATA device.\n", mmc_hostname(card->host));

ERROR:CODE_INDENT: code indent should use tabs where possible
#577: FILE: drivers/mmc/core/ceata.c:247:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: drivers/mmc/core/ceata.c:247:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#578: FILE: drivers/mmc/core/ceata.c:248:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#580: FILE: drivers/mmc/core/ceata.c:250:
+       ptask = (struct ceata_task *)cmd_buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: drivers/mmc/core/ceata.c:251:
+       ptask->cmd_status = CEATA_CMD_IDENTIFY_DEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#583: FILE: drivers/mmc/core/ceata.c:253:
+       ret = ceata_wait_until_ready(card);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#584: FILE: drivers/mmc/core/ceata.c:254:
+       if (ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#584: FILE: drivers/mmc/core/ceata.c:254:
+       if (ret)
+               goto exit;

ERROR:CODE_INDENT: code indent should use tabs where possible
#585: FILE: drivers/mmc/core/ceata.c:255:
+               goto exit;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#585: FILE: drivers/mmc/core/ceata.c:255:
+               goto exit;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#587: FILE: drivers/mmc/core/ceata.c:257:
+       ret = ceata_cmd60(card, 1, cmd_buf, reg_addr, CEATA_TASKFILE_BYTELEN);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#588: FILE: drivers/mmc/core/ceata.c:258:
+       if (ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#588: FILE: drivers/mmc/core/ceata.c:258:
+       if (ret) {
+               printk(KERN_ERR "%s: Unable to send identify command to "

ERROR:CODE_INDENT: code indent should use tabs where possible
#589: FILE: drivers/mmc/core/ceata.c:259:
+               printk(KERN_ERR "%s: Unable to send identify command to "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#589: FILE: drivers/mmc/core/ceata.c:259:
+               printk(KERN_ERR "%s: Unable to send identify command to "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#589: FILE: drivers/mmc/core/ceata.c:259:
+               printk(KERN_ERR "%s: Unable to send identify command to "

ERROR:CODE_INDENT: code indent should use tabs where possible
#590: FILE: drivers/mmc/core/ceata.c:260:
+                               "CE-ATA device\n", mmc_hostname(card->host));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#590: FILE: drivers/mmc/core/ceata.c:260:
+                               "CE-ATA device\n", mmc_hostname(card->host));$

WARNING:SPLIT_STRING: quoted string split across lines
#590: FILE: drivers/mmc/core/ceata.c:260:
+               printk(KERN_ERR "%s: Unable to send identify command to "
+                               "CE-ATA device\n", mmc_hostname(card->host));

ERROR:CODE_INDENT: code indent should use tabs where possible
#591: FILE: drivers/mmc/core/ceata.c:261:
+               goto exit;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#591: FILE: drivers/mmc/core/ceata.c:261:
+               goto exit;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#592: FILE: drivers/mmc/core/ceata.c:262:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#594: FILE: drivers/mmc/core/ceata.c:264:
+       ret = ceata_cmd61(card, 0, data_buf, CEATA_IDENTIFY_DEV_BYTELEN);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#595: FILE: drivers/mmc/core/ceata.c:265:
+       if (ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#595: FILE: drivers/mmc/core/ceata.c:265:
+       if (ret) {
+               printk(KERN_ERR "%s: Unable to receive identify data from "

ERROR:CODE_INDENT: code indent should use tabs where possible
#596: FILE: drivers/mmc/core/ceata.c:266:
+               printk(KERN_ERR "%s: Unable to receive identify data from "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#596: FILE: drivers/mmc/core/ceata.c:266:
+               printk(KERN_ERR "%s: Unable to receive identify data from "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#596: FILE: drivers/mmc/core/ceata.c:266:
+               printk(KERN_ERR "%s: Unable to receive identify data from "

ERROR:CODE_INDENT: code indent should use tabs where possible
#597: FILE: drivers/mmc/core/ceata.c:267:
+                              "CE-ATA device\n", mmc_hostname(card->host));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#597: FILE: drivers/mmc/core/ceata.c:267:
+                              "CE-ATA device\n", mmc_hostname(card->host));$

WARNING:SPLIT_STRING: quoted string split across lines
#597: FILE: drivers/mmc/core/ceata.c:267:
+               printk(KERN_ERR "%s: Unable to receive identify data from "
+                              "CE-ATA device\n", mmc_hostname(card->host));

ERROR:CODE_INDENT: code indent should use tabs where possible
#598: FILE: drivers/mmc/core/ceata.c:268:
+               goto exit;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#598: FILE: drivers/mmc/core/ceata.c:268:
+               goto exit;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#599: FILE: drivers/mmc/core/ceata.c:269:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#601: FILE: drivers/mmc/core/ceata.c:271:
+       info = kzalloc(sizeof(*info), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#602: FILE: drivers/mmc/core/ceata.c:272:
+       if (!info) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#602: FILE: drivers/mmc/core/ceata.c:272:
+       if (!info) {
+               printk(KERN_ERR "%s: could not allocate a buffer to hold "

ERROR:CODE_INDENT: code indent should use tabs where possible
#603: FILE: drivers/mmc/core/ceata.c:273:
+               printk(KERN_ERR "%s: could not allocate a buffer to hold "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#603: FILE: drivers/mmc/core/ceata.c:273:
+               printk(KERN_ERR "%s: could not allocate a buffer to hold "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#603: FILE: drivers/mmc/core/ceata.c:273:
+               printk(KERN_ERR "%s: could not allocate a buffer to hold "

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#603: FILE: drivers/mmc/core/ceata.c:273:
+       if (!info) {
+               printk(KERN_ERR "%s: could not allocate a buffer to hold "

ERROR:CODE_INDENT: code indent should use tabs where possible
#604: FILE: drivers/mmc/core/ceata.c:274:
+                       "the CE-ATA dev info.\n", mmc_hostname(card->host));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#604: FILE: drivers/mmc/core/ceata.c:274:
+                       "the CE-ATA dev info.\n", mmc_hostname(card->host));$

WARNING:SPLIT_STRING: quoted string split across lines
#604: FILE: drivers/mmc/core/ceata.c:274:
+               printk(KERN_ERR "%s: could not allocate a buffer to hold "
+                       "the CE-ATA dev info.\n", mmc_hostname(card->host));

ERROR:CODE_INDENT: code indent should use tabs where possible
#605: FILE: drivers/mmc/core/ceata.c:275:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#605: FILE: drivers/mmc/core/ceata.c:275:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#606: FILE: drivers/mmc/core/ceata.c:276:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#607: FILE: drivers/mmc/core/ceata.c:277:
+       card->ceata_info = info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#609: FILE: drivers/mmc/core/ceata.c:279:
+       ptemp = (u16 *)data_buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#611: FILE: drivers/mmc/core/ceata.c:281:
+       memcpy(info->serialnum, ptemp + 10, 20);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#612: FILE: drivers/mmc/core/ceata.c:282:
+       info->serialnum[20] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#613: FILE: drivers/mmc/core/ceata.c:283:
+       memcpy(info->fw_ver, ptemp + 23, 8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#614: FILE: drivers/mmc/core/ceata.c:284:
+       info->fw_ver[8] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#615: FILE: drivers/mmc/core/ceata.c:285:
+       memcpy(info->model_num, ptemp + 27, 40);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#616: FILE: drivers/mmc/core/ceata.c:286:
+       info->model_num[40] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#618: FILE: drivers/mmc/core/ceata.c:288:
+       info->major = ptemp[80];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#619: FILE: drivers/mmc/core/ceata.c:289:
+       info->max_lba[0] = data_buf[50];    /* units are 512-byte sectors */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#620: FILE: drivers/mmc/core/ceata.c:290:
+       info->max_lba[1] = data_buf[51];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#622: FILE: drivers/mmc/core/ceata.c:292:
+       info->seclen = ptemp[106]; /* power of 2 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: drivers/mmc/core/ceata.c:294:
+       memcpy(info->global_id, ptemp + 108, 4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#625: FILE: drivers/mmc/core/ceata.c:295:
+       info->features = ptemp[206];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#626: FILE: drivers/mmc/core/ceata.c:296:
+       info->max_writes = ptemp[207];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#628: FILE: drivers/mmc/core/ceata.c:298:
+       pr_debug("%s: CE-ATA identify device output:\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#629: FILE: drivers/mmc/core/ceata.c:299:
+                       mmc_hostname(card->host));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#629: FILE: drivers/mmc/core/ceata.c:299:
+       pr_debug("%s: CE-ATA identify device output:\n",
+                       mmc_hostname(card->host));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#629: FILE: drivers/mmc/core/ceata.c:299:
+                       mmc_hostname(card->host));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#630: FILE: drivers/mmc/core/ceata.c:300:
+       pr_debug(" serial: %s\n", info->serialnum);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#631: FILE: drivers/mmc/core/ceata.c:301:
+       pr_debug(" firmware: %s\n", info->fw_ver);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#632: FILE: drivers/mmc/core/ceata.c:302:
+       pr_debug(" model: %s\n", info->model_num);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#633: FILE: drivers/mmc/core/ceata.c:303:
+       pr_debug(" major = 0x%x, secsize = 0x%x, features = 0x%04x\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#634: FILE: drivers/mmc/core/ceata.c:304:
+                       info->major, info->seclen, info->features);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#634: FILE: drivers/mmc/core/ceata.c:304:
+       pr_debug(" major = 0x%x, secsize = 0x%x, features = 0x%04x\n",
+                       info->major, info->seclen, info->features);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#634: FILE: drivers/mmc/core/ceata.c:304:
+                       info->major, info->seclen, info->features);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#635: FILE: drivers/mmc/core/ceata.c:305:
+       pr_debug(" max_writes = %d, max_lba = 0x%08x%08x\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#636: FILE: drivers/mmc/core/ceata.c:306:
+                       info->max_writes, info->max_lba[1], info->max_lba[0]);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#636: FILE: drivers/mmc/core/ceata.c:306:
+       pr_debug(" max_writes = %d, max_lba = 0x%08x%08x\n",
+                       info->max_writes, info->max_lba[1], info->max_lba[0]);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#636: FILE: drivers/mmc/core/ceata.c:306:
+                       info->max_writes, info->max_lba[1], info->max_lba[0]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#638: FILE: drivers/mmc/core/ceata.c:308:
+       BUG_ON(info->seclen >= 32);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#638: FILE: drivers/mmc/core/ceata.c:308:
+       BUG_ON(info->seclen >= 32);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#641: FILE: drivers/mmc/core/ceata.c:311:
+       kfree(cmd_buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#642: FILE: drivers/mmc/core/ceata.c:312:
+       kfree(data_buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#644: FILE: drivers/mmc/core/ceata.c:314:
+       return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#649: FILE: drivers/mmc/core/ceata.c:319:
+       int ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#651: FILE: drivers/mmc/core/ceata.c:321:
+       mmc_fast_io(card, 1, CEATA_REG_CONTROL, NULL,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#652: FILE: drivers/mmc/core/ceata.c:322:
+                       CEATA_CONTROL_SRST | CEATA_CONTROL_NIEN);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#652: FILE: drivers/mmc/core/ceata.c:322:
+       mmc_fast_io(card, 1, CEATA_REG_CONTROL, NULL,
+                       CEATA_CONTROL_SRST | CEATA_CONTROL_NIEN);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#652: FILE: drivers/mmc/core/ceata.c:322:
+                       CEATA_CONTROL_SRST | CEATA_CONTROL_NIEN);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#653: FILE: drivers/mmc/core/ceata.c:323:
+       mmc_fast_io(card, 1, CEATA_REG_CONTROL, NULL,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#654: FILE: drivers/mmc/core/ceata.c:324:
+                       ~CEATA_CONTROL_SRST | CEATA_CONTROL_NIEN);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#654: FILE: drivers/mmc/core/ceata.c:324:
+       mmc_fast_io(card, 1, CEATA_REG_CONTROL, NULL,
+                       ~CEATA_CONTROL_SRST | CEATA_CONTROL_NIEN);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#654: FILE: drivers/mmc/core/ceata.c:324:
+                       ~CEATA_CONTROL_SRST | CEATA_CONTROL_NIEN);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#656: FILE: drivers/mmc/core/ceata.c:326:
+       ret = ceata_wait_until_ready(card);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#658: FILE: drivers/mmc/core/ceata.c:328:
+       return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#663: FILE: drivers/mmc/core/ceata.c:333:
+       u8      *cmd_buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#664: FILE: drivers/mmc/core/ceata.c:334:
+       u8      reg_addr = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#666: FILE: drivers/mmc/core/ceata.c:336:
+       struct  ceata_task *ptask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#667: FILE: drivers/mmc/core/ceata.c:337:
+       int     ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#669: FILE: drivers/mmc/core/ceata.c:339:
+       cmd_buf = kzalloc(CEATA_TASKFILE_BYTELEN, GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#670: FILE: drivers/mmc/core/ceata.c:340:
+       if (!cmd_buf) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#670: FILE: drivers/mmc/core/ceata.c:340:
+       if (!cmd_buf) {
+               printk(KERN_ERR "%s: could not allocate a buffer for the "

ERROR:CODE_INDENT: code indent should use tabs where possible
#671: FILE: drivers/mmc/core/ceata.c:341:
+               printk(KERN_ERR "%s: could not allocate a buffer for the "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#671: FILE: drivers/mmc/core/ceata.c:341:
+               printk(KERN_ERR "%s: could not allocate a buffer for the "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#671: FILE: drivers/mmc/core/ceata.c:341:
+               printk(KERN_ERR "%s: could not allocate a buffer for the "

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#671: FILE: drivers/mmc/core/ceata.c:341:
+       if (!cmd_buf) {
+               printk(KERN_ERR "%s: could not allocate a buffer for the "

ERROR:CODE_INDENT: code indent should use tabs where possible
#672: FILE: drivers/mmc/core/ceata.c:342:
+                       "flush cache command.\n", mmc_hostname(card->host));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#672: FILE: drivers/mmc/core/ceata.c:342:
+                       "flush cache command.\n", mmc_hostname(card->host));$

WARNING:SPLIT_STRING: quoted string split across lines
#672: FILE: drivers/mmc/core/ceata.c:342:
+               printk(KERN_ERR "%s: could not allocate a buffer for the "
+                       "flush cache command.\n", mmc_hostname(card->host));

ERROR:CODE_INDENT: code indent should use tabs where possible
#673: FILE: drivers/mmc/core/ceata.c:343:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#673: FILE: drivers/mmc/core/ceata.c:343:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#674: FILE: drivers/mmc/core/ceata.c:344:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#675: FILE: drivers/mmc/core/ceata.c:345:
+       ptask = (struct ceata_task *)cmd_buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#676: FILE: drivers/mmc/core/ceata.c:346:
+       ptask->cmd_status = CEATA_CMD_FLUSH_CACHE_EXT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#678: FILE: drivers/mmc/core/ceata.c:348:
+       ret = ceata_wait_until_ready(card);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#679: FILE: drivers/mmc/core/ceata.c:349:
+       if (ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#679: FILE: drivers/mmc/core/ceata.c:349:
+       if (ret)
+               return ret;

ERROR:CODE_INDENT: code indent should use tabs where possible
#680: FILE: drivers/mmc/core/ceata.c:350:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#680: FILE: drivers/mmc/core/ceata.c:350:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#682: FILE: drivers/mmc/core/ceata.c:352:
+       ret = ceata_cmd60(card, 1, cmd_buf, reg_addr, CEATA_TASKFILE_BYTELEN);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#683: FILE: drivers/mmc/core/ceata.c:353:
+       if (ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#683: FILE: drivers/mmc/core/ceata.c:353:
+       if (ret)
+               printk(KERN_ERR "%s: Error issuing CE-ATA flush cache "

ERROR:CODE_INDENT: code indent should use tabs where possible
#684: FILE: drivers/mmc/core/ceata.c:354:
+               printk(KERN_ERR "%s: Error issuing CE-ATA flush cache "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#684: FILE: drivers/mmc/core/ceata.c:354:
+               printk(KERN_ERR "%s: Error issuing CE-ATA flush cache "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#684: FILE: drivers/mmc/core/ceata.c:354:
+               printk(KERN_ERR "%s: Error issuing CE-ATA flush cache "

ERROR:CODE_INDENT: code indent should use tabs where possible
#685: FILE: drivers/mmc/core/ceata.c:355:
+                               "command\n", mmc_hostname(card->host));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#685: FILE: drivers/mmc/core/ceata.c:355:
+                               "command\n", mmc_hostname(card->host));$

WARNING:SPLIT_STRING: quoted string split across lines
#685: FILE: drivers/mmc/core/ceata.c:355:
+               printk(KERN_ERR "%s: Error issuing CE-ATA flush cache "
+                               "command\n", mmc_hostname(card->host));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#687: FILE: drivers/mmc/core/ceata.c:357:
+       return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#692: FILE: drivers/mmc/core/ceata.c:362:
+       int ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#694: FILE: drivers/mmc/core/ceata.c:364:
+       card->type = MMC_TYPE_CEATA;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#697: FILE: drivers/mmc/core/ceata.c:367:
+       ret = mmc_switch(card, EXT_CSD_CMD_SET_NORMAL,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#698: FILE: drivers/mmc/core/ceata.c:368:
+               EXT_CSD_BUS_WIDTH, EXT_CSD_BUS_WIDTH_1);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#698: FILE: drivers/mmc/core/ceata.c:368:
+       ret = mmc_switch(card, EXT_CSD_CMD_SET_NORMAL,
+               EXT_CSD_BUS_WIDTH, EXT_CSD_BUS_WIDTH_1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#698: FILE: drivers/mmc/core/ceata.c:368:
+               EXT_CSD_BUS_WIDTH, EXT_CSD_BUS_WIDTH_1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#699: FILE: drivers/mmc/core/ceata.c:369:
+       if (ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#699: FILE: drivers/mmc/core/ceata.c:369:
+       if (ret)
+               return ret;

ERROR:CODE_INDENT: code indent should use tabs where possible
#700: FILE: drivers/mmc/core/ceata.c:370:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#700: FILE: drivers/mmc/core/ceata.c:370:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#702: FILE: drivers/mmc/core/ceata.c:372:
+       mmc_set_bus_width(card->host, MMC_BUS_WIDTH_1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#705: FILE: drivers/mmc/core/ceata.c:375:
+       ret = mmc_switch(card, 0, EXT_CSD_CMD_SET, EXT_CSD_CMD_SET_CEATA);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#706: FILE: drivers/mmc/core/ceata.c:376:
+       if (ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#706: FILE: drivers/mmc/core/ceata.c:376:
+       if (ret)
+               return ret;

ERROR:CODE_INDENT: code indent should use tabs where possible
#707: FILE: drivers/mmc/core/ceata.c:377:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#707: FILE: drivers/mmc/core/ceata.c:377:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#709: FILE: drivers/mmc/core/ceata.c:379:
+       ret = ceata_sw_reset(card);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#710: FILE: drivers/mmc/core/ceata.c:380:
+       if (ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#710: FILE: drivers/mmc/core/ceata.c:380:
+       if (ret)
+               return ret;

ERROR:CODE_INDENT: code indent should use tabs where possible
#711: FILE: drivers/mmc/core/ceata.c:381:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#711: FILE: drivers/mmc/core/ceata.c:381:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#713: FILE: drivers/mmc/core/ceata.c:383:
+       ret = ceata_check_signature(card);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#714: FILE: drivers/mmc/core/ceata.c:384:
+       if (ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#714: FILE: drivers/mmc/core/ceata.c:384:
+       if (ret)
+               return ret;

ERROR:CODE_INDENT: code indent should use tabs where possible
#715: FILE: drivers/mmc/core/ceata.c:385:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#715: FILE: drivers/mmc/core/ceata.c:385:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#717: FILE: drivers/mmc/core/ceata.c:387:
+       ret = ceata_identify_dev(card);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#718: FILE: drivers/mmc/core/ceata.c:388:
+       if (ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#718: FILE: drivers/mmc/core/ceata.c:388:
+       if (ret)
+               return ret;

ERROR:CODE_INDENT: code indent should use tabs where possible
#719: FILE: drivers/mmc/core/ceata.c:389:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#719: FILE: drivers/mmc/core/ceata.c:389:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#721: FILE: drivers/mmc/core/ceata.c:391:
+       card->dev.type = type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#723: FILE: drivers/mmc/core/ceata.c:393:
+       mmc_card_set_blockaddr(card);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#725: FILE: drivers/mmc/core/ceata.c:395:
+       return ret;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#729: FILE: drivers/mmc/core/ceata.c:399:
+int ceata_read_write_cmd(struct mmc_card *card, int rw,
+       sector_t lba, u32 secs)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#729: FILE: drivers/mmc/core/ceata.c:399:
+       sector_t lba, u32 secs)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#731: FILE: drivers/mmc/core/ceata.c:401:
+       u8      *cmd_buf, *plba;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#732: FILE: drivers/mmc/core/ceata.c:402:
+       u8      reg_addr = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#733: FILE: drivers/mmc/core/ceata.c:403:
+       struct  ceata_task *ptask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#734: FILE: drivers/mmc/core/ceata.c:404:
+       int     ret;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#736: FILE: drivers/mmc/core/ceata.c:406:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#737: FILE: drivers/mmc/core/ceata.c:407:
+       if (secs == 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#737: FILE: drivers/mmc/core/ceata.c:407:
+       if (secs == 0) {
+               printk(KERN_ERR "%s: received a NULL length request\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#738: FILE: drivers/mmc/core/ceata.c:408:
+               printk(KERN_ERR "%s: received a NULL length request\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#738: FILE: drivers/mmc/core/ceata.c:408:
+               printk(KERN_ERR "%s: received a NULL length request\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#738: FILE: drivers/mmc/core/ceata.c:408:
+               printk(KERN_ERR "%s: received a NULL length request\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#739: FILE: drivers/mmc/core/ceata.c:409:
+               mmc_hostname(card->host));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#739: FILE: drivers/mmc/core/ceata.c:409:
+               printk(KERN_ERR "%s: received a NULL length request\n",
+               mmc_hostname(card->host));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#739: FILE: drivers/mmc/core/ceata.c:409:
+               mmc_hostname(card->host));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#740: FILE: drivers/mmc/core/ceata.c:410:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#740: FILE: drivers/mmc/core/ceata.c:410:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#741: FILE: drivers/mmc/core/ceata.c:411:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#743: FILE: drivers/mmc/core/ceata.c:413:
+       ret = ceata_wait_until_ready(card);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#744: FILE: drivers/mmc/core/ceata.c:414:
+       if (ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#744: FILE: drivers/mmc/core/ceata.c:414:
+       if (ret)
+               return ret;

ERROR:CODE_INDENT: code indent should use tabs where possible
#745: FILE: drivers/mmc/core/ceata.c:415:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#745: FILE: drivers/mmc/core/ceata.c:415:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#747: FILE: drivers/mmc/core/ceata.c:417:
+       cmd_buf = kzalloc(CEATA_TASKFILE_BYTELEN, GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#748: FILE: drivers/mmc/core/ceata.c:418:
+       if (!cmd_buf) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#748: FILE: drivers/mmc/core/ceata.c:418:
+       if (!cmd_buf) {
+               printk(KERN_ERR "%s: could not allocate a buffer for the "

ERROR:CODE_INDENT: code indent should use tabs where possible
#749: FILE: drivers/mmc/core/ceata.c:419:
+               printk(KERN_ERR "%s: could not allocate a buffer for the "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#749: FILE: drivers/mmc/core/ceata.c:419:
+               printk(KERN_ERR "%s: could not allocate a buffer for the "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#749: FILE: drivers/mmc/core/ceata.c:419:
+               printk(KERN_ERR "%s: could not allocate a buffer for the "

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#749: FILE: drivers/mmc/core/ceata.c:419:
+       if (!cmd_buf) {
+               printk(KERN_ERR "%s: could not allocate a buffer for the "

ERROR:CODE_INDENT: code indent should use tabs where possible
#750: FILE: drivers/mmc/core/ceata.c:420:
+                       "read/write dma command.\n", mmc_hostname(card->host));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#750: FILE: drivers/mmc/core/ceata.c:420:
+                       "read/write dma command.\n", mmc_hostname(card->host));$

WARNING:SPLIT_STRING: quoted string split across lines
#750: FILE: drivers/mmc/core/ceata.c:420:
+               printk(KERN_ERR "%s: could not allocate a buffer for the "
+                       "read/write dma command.\n", mmc_hostname(card->host));

ERROR:CODE_INDENT: code indent should use tabs where possible
#751: FILE: drivers/mmc/core/ceata.c:421:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#751: FILE: drivers/mmc/core/ceata.c:421:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#752: FILE: drivers/mmc/core/ceata.c:422:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#753: FILE: drivers/mmc/core/ceata.c:423:
+       ptask = (struct ceata_task *)cmd_buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#754: FILE: drivers/mmc/core/ceata.c:424:
+       ptask->cmd_status = rw ?$

ERROR:CODE_INDENT: code indent should use tabs where possible
#755: FILE: drivers/mmc/core/ceata.c:425:
+               CEATA_CMD_WRITE_DMA_EXT :$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#755: FILE: drivers/mmc/core/ceata.c:425:
+               CEATA_CMD_WRITE_DMA_EXT :$

ERROR:CODE_INDENT: code indent should use tabs where possible
#756: FILE: drivers/mmc/core/ceata.c:426:
+               CEATA_CMD_READ_DMA_EXT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#756: FILE: drivers/mmc/core/ceata.c:426:
+               CEATA_CMD_READ_DMA_EXT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#757: FILE: drivers/mmc/core/ceata.c:427:
+       ptask->sec = (u8)(secs & 0xff);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#758: FILE: drivers/mmc/core/ceata.c:428:
+       ptask->sec_exp = (u8)(secs & 0xff00) >> 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#760: FILE: drivers/mmc/core/ceata.c:430:
+       plba = (u8 *)&lba;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#761: FILE: drivers/mmc/core/ceata.c:431:
+       ptask->lba_low      = plba[0];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#762: FILE: drivers/mmc/core/ceata.c:432:
+       ptask->lba_mid      = plba[1];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#763: FILE: drivers/mmc/core/ceata.c:433:
+       ptask->lba_high     = plba[2];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#764: FILE: drivers/mmc/core/ceata.c:434:
+       ptask->lba_low_exp  = plba[3];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#766: FILE: drivers/mmc/core/ceata.c:436:
+       ptask->lba_mid_exp  = plba[4];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#767: FILE: drivers/mmc/core/ceata.c:437:
+       ptask->lba_high_exp = plba[5];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#770: FILE: drivers/mmc/core/ceata.c:440:
+       ret = ceata_cmd60(card, 1, cmd_buf, reg_addr, CEATA_TASKFILE_BYTELEN);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#771: FILE: drivers/mmc/core/ceata.c:441:
+       if (ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#771: FILE: drivers/mmc/core/ceata.c:441:
+       if (ret)
+               printk(KERN_ERR "%s: error during CE-ATA %s dma command\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#772: FILE: drivers/mmc/core/ceata.c:442:
+               printk(KERN_ERR "%s: error during CE-ATA %s dma command\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#772: FILE: drivers/mmc/core/ceata.c:442:
+               printk(KERN_ERR "%s: error during CE-ATA %s dma command\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#772: FILE: drivers/mmc/core/ceata.c:442:
+               printk(KERN_ERR "%s: error during CE-ATA %s dma command\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#773: FILE: drivers/mmc/core/ceata.c:443:
+                               mmc_hostname(card->host),$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#773: FILE: drivers/mmc/core/ceata.c:443:
+               printk(KERN_ERR "%s: error during CE-ATA %s dma command\n",
+                               mmc_hostname(card->host),

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#773: FILE: drivers/mmc/core/ceata.c:443:
+                               mmc_hostname(card->host),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#774: FILE: drivers/mmc/core/ceata.c:444:
+                               rw ? "write" : "read");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#774: FILE: drivers/mmc/core/ceata.c:444:
+                               rw ? "write" : "read");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#776: FILE: drivers/mmc/core/ceata.c:446:
+       kfree(cmd_buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#777: FILE: drivers/mmc/core/ceata.c:447:
+       return ret;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#786: FILE: drivers/mmc/core/ceata.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#803: FILE: drivers/mmc/core/ceata.h:18:
+ * this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#804: FILE: drivers/mmc/core/ceata.h:19:
+ * 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#823: FILE: drivers/mmc/core/core.c:251:
+        * CEATA hdds could take as long as 35 s in corner cases,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#824: FILE: drivers/mmc/core/core.c:252:
+        * according to at least one datasheet.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#825: FILE: drivers/mmc/core/core.c:253:
+        * TODO: implement longer timeout in SW, since max HW timeout$

ERROR:CODE_INDENT: code indent should use tabs where possible
#826: FILE: drivers/mmc/core/core.c:254:
+        * is just ~2 s (2^27 / 48MHz)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#827: FILE: drivers/mmc/core/core.c:255:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#828: FILE: drivers/mmc/core/core.c:256:
+       if (mmc_card_ceata(card)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#828: FILE: drivers/mmc/core/core.c:256:
+       if (mmc_card_ceata(card)) {
+               data->timeout_ns = 2000000000;

ERROR:CODE_INDENT: code indent should use tabs where possible
#829: FILE: drivers/mmc/core/core.c:257:
+               data->timeout_ns = 2000000000;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#829: FILE: drivers/mmc/core/core.c:257:
+               data->timeout_ns = 2000000000;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#830: FILE: drivers/mmc/core/core.c:258:
+               data->timeout_clks = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#830: FILE: drivers/mmc/core/core.c:258:
+               data->timeout_clks = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#831: FILE: drivers/mmc/core/core.c:259:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#831: FILE: drivers/mmc/core/core.c:259:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#832: FILE: drivers/mmc/core/core.c:260:
+       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#842: FILE: drivers/mmc/core/core.c:730:
+        *$

ERROR:CODE_INDENT: code indent should use tabs where possible
#843: FILE: drivers/mmc/core/core.c:731:
+        * Three different CEATA hdds from Toshiba, Samsung$

ERROR:CODE_INDENT: code indent should use tabs where possible
#844: FILE: drivers/mmc/core/core.c:732:
+        * and Hitachi fail when the delay is less than 20 ms, but$

ERROR:CODE_INDENT: code indent should use tabs where possible
#845: FILE: drivers/mmc/core/core.c:733:
+        * work with 40 ms (doubling just in case).$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#848: FILE: drivers/mmc/core/core.c:735:
+       mmc_delay(80);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#890: FILE: drivers/mmc/core/mmc.c:125:
+       if (csd_struct != 1 && csd_struct != 2 && csd_struct != 3) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#890: FILE: drivers/mmc/core/mmc.c:125:
+       if (csd_struct != 1 && csd_struct != 2 && csd_struct != 3) {
                printk(KERN_ERR "%s: unrecognised CSD structure version %d\n",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#898: FILE: drivers/mmc/core/mmc.c:245:
+       card->ext_csd.s_cmd_set = ext_csd[EXT_CSD_S_CMD_SET];$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#910: FILE: drivers/mmc/core/mmc.c:294:
+MMC_DEV_ATTR(globalid, "%08x%08x\n", card->ceata_info->global_id[1],
+       card->ceata_info->global_id[0]);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#910: FILE: drivers/mmc/core/mmc.c:294:
+       card->ceata_info->global_id[0]);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#915: FILE: drivers/mmc/core/mmc.c:299:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#917: FILE: drivers/mmc/core/mmc.c:301:
+       &dev_attr_capacity.attr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#918: FILE: drivers/mmc/core/mmc.c:302:
+       &dev_attr_seclen.attr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#919: FILE: drivers/mmc/core/mmc.c:303:
+       &dev_attr_globalid.attr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#920: FILE: drivers/mmc/core/mmc.c:304:
+       &dev_attr_serial2.attr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#921: FILE: drivers/mmc/core/mmc.c:305:
+       &dev_attr_fwrev2.attr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#922: FILE: drivers/mmc/core/mmc.c:306:
+       &dev_attr_model.attr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#923: FILE: drivers/mmc/core/mmc.c:307:
+       NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#927: FILE: drivers/mmc/core/mmc.c:311:
+       .attrs = mmc_ceata_attrs,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#931: FILE: drivers/mmc/core/mmc.c:315:
+       &mmc_std_attr_group,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#932: FILE: drivers/mmc/core/mmc.c:316:
+       &mmc_ceata_attr_group,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#933: FILE: drivers/mmc/core/mmc.c:317:
+       NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#937: FILE: drivers/mmc/core/mmc.c:321:
+       .groups = ceata_attr_groups,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#969: FILE: drivers/mmc/core/mmc.c:499:
+        * CEATA hdds are a subset of MMC cards$

ERROR:CODE_INDENT: code indent should use tabs where possible
#970: FILE: drivers/mmc/core/mmc.c:500:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#971: FILE: drivers/mmc/core/mmc.c:501:
+       if (card->ext_csd.s_cmd_set & EXT_CSD_CMD_SET_CEATA) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#971: FILE: drivers/mmc/core/mmc.c:501:
+       if (card->ext_csd.s_cmd_set & EXT_CSD_CMD_SET_CEATA) {
+               err = ceata_init_card(card, &ceata_type);

ERROR:CODE_INDENT: code indent should use tabs where possible
#972: FILE: drivers/mmc/core/mmc.c:502:
+               err = ceata_init_card(card, &ceata_type);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#972: FILE: drivers/mmc/core/mmc.c:502:
+               err = ceata_init_card(card, &ceata_type);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#973: FILE: drivers/mmc/core/mmc.c:503:
+               if (err)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#973: FILE: drivers/mmc/core/mmc.c:503:
+               if (err)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#973: FILE: drivers/mmc/core/mmc.c:503:
+               if (err)
+                       goto free_card;

ERROR:CODE_INDENT: code indent should use tabs where possible
#974: FILE: drivers/mmc/core/mmc.c:504:
+                       goto free_card;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#974: FILE: drivers/mmc/core/mmc.c:504:
+                       goto free_card;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#975: FILE: drivers/mmc/core/mmc.c:505:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#984: FILE: drivers/mmc/core/mmc.c:571:
+       if (mmc_card_ceata(host->card))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#984: FILE: drivers/mmc/core/mmc.c:571:
+       if (mmc_card_ceata(host->card))
+               ceata_flush_cache(host->card);

ERROR:CODE_INDENT: code indent should use tabs where possible
#985: FILE: drivers/mmc/core/mmc.c:572:
+               ceata_flush_cache(host->card);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#985: FILE: drivers/mmc/core/mmc.c:572:
+               ceata_flush_cache(host->card);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1005: FILE: drivers/mmc/core/mmc_ops.c:413:
+       int err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1006: FILE: drivers/mmc/core/mmc_ops.c:414:
+       struct mmc_command cmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1008: FILE: drivers/mmc/core/mmc_ops.c:416:
+       BUG_ON(!card);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1008: FILE: drivers/mmc/core/mmc_ops.c:416:
+       BUG_ON(!card);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1009: FILE: drivers/mmc/core/mmc_ops.c:417:
+       BUG_ON(!card->host);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1009: FILE: drivers/mmc/core/mmc_ops.c:417:
+       BUG_ON(!card->host);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1010: FILE: drivers/mmc/core/mmc_ops.c:418:
+       WARN_ON(reg_addr >= 128);   /* reg_addr only contains 7 bits */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1012: FILE: drivers/mmc/core/mmc_ops.c:420:
+       memset(&cmd, 0, sizeof(struct mmc_command));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1014: FILE: drivers/mmc/core/mmc_ops.c:422:
+       cmd.opcode = MMC_FAST_IO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1015: FILE: drivers/mmc/core/mmc_ops.c:423:
+       cmd.arg = (card->rca << 16) |$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1016: FILE: drivers/mmc/core/mmc_ops.c:424:
+               (rw << 15)|$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1016: FILE: drivers/mmc/core/mmc_ops.c:424:
+               (rw << 15)|$

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#1016: FILE: drivers/mmc/core/mmc_ops.c:424:
+               (rw << 15)|
                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#1017: FILE: drivers/mmc/core/mmc_ops.c:425:
+               (reg_addr << 8) | write;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1017: FILE: drivers/mmc/core/mmc_ops.c:425:
+               (reg_addr << 8) | write;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1018: FILE: drivers/mmc/core/mmc_ops.c:426:
+       cmd.flags = MMC_RSP_R4 | MMC_CMD_AC;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1020: FILE: drivers/mmc/core/mmc_ops.c:428:
+       err = mmc_wait_for_cmd(card->host, &cmd, MMC_CMD_RETRIES);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1021: FILE: drivers/mmc/core/mmc_ops.c:429:
+       if (err)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1021: FILE: drivers/mmc/core/mmc_ops.c:429:
+       if (err)
+               return err;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1022: FILE: drivers/mmc/core/mmc_ops.c:430:
+               return err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1022: FILE: drivers/mmc/core/mmc_ops.c:430:
+               return err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1024: FILE: drivers/mmc/core/mmc_ops.c:432:
+       if ((!rw) && read)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1024: FILE: drivers/mmc/core/mmc_ops.c:432:
+       if ((!rw) && read)
+               *read = cmd.resp[0];

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!rw'
#1024: FILE: drivers/mmc/core/mmc_ops.c:432:
+       if ((!rw) && read)

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:CODE_INDENT: code indent should use tabs where possible
#1025: FILE: drivers/mmc/core/mmc_ops.c:433:
+               *read = cmd.resp[0];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1025: FILE: drivers/mmc/core/mmc_ops.c:433:
+               *read = cmd.resp[0];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1027: FILE: drivers/mmc/core/mmc_ops.c:435:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1118: FILE: drivers/mmc/core/sdio.c:394:
+       if (card->cis.max_dtr > 24000000)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1118: FILE: drivers/mmc/core/sdio.c:394:
+       if (card->cis.max_dtr > 24000000)
+               card->cis.max_dtr = 24000000;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1119: FILE: drivers/mmc/core/sdio.c:395:
+               card->cis.max_dtr = 24000000;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1119: FILE: drivers/mmc/core/sdio.c:395:
+               card->cis.max_dtr = 24000000;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1121: FILE: drivers/mmc/core/sdio.c:397:
+       mmc_set_clock(host, card->cis.max_dtr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1138: FILE: drivers/mmc/host/sdhci-pci.c:291:
+       .quirks         = SDHCI_QUIRK_BROKEN_ADMA,$

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1141: FILE: drivers/mmc/host/sdhci-pci.c:294:
 static const struct pci_device_id pci_ids[] __devinitdata = {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1148: FILE: drivers/mmc/host/sdhci-pci.c:359:
+       {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1149: FILE: drivers/mmc/host/sdhci-pci.c:360:
+               .vendor         = PCI_VENDOR_ID_INTEL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1149: FILE: drivers/mmc/host/sdhci-pci.c:360:
+               .vendor         = PCI_VENDOR_ID_INTEL,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1150: FILE: drivers/mmc/host/sdhci-pci.c:361:
+               .device         = PCI_DEVICE_ID_INTEL_MRST_SD0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1150: FILE: drivers/mmc/host/sdhci-pci.c:361:
+               .device         = PCI_DEVICE_ID_INTEL_MRST_SD0,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1151: FILE: drivers/mmc/host/sdhci-pci.c:362:
+               .subvendor      = PCI_ANY_ID,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1151: FILE: drivers/mmc/host/sdhci-pci.c:362:
+               .subvendor      = PCI_ANY_ID,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1152: FILE: drivers/mmc/host/sdhci-pci.c:363:
+               .subdevice      = PCI_ANY_ID,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1152: FILE: drivers/mmc/host/sdhci-pci.c:363:
+               .subdevice      = PCI_ANY_ID,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1153: FILE: drivers/mmc/host/sdhci-pci.c:364:
+               .driver_data    = (kernel_ulong_t)&sdhci_intel_mrst,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1153: FILE: drivers/mmc/host/sdhci-pci.c:364:
+               .driver_data    = (kernel_ulong_t)&sdhci_intel_mrst,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1154: FILE: drivers/mmc/host/sdhci-pci.c:365:
+       },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1156: FILE: drivers/mmc/host/sdhci-pci.c:367:
+       {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1157: FILE: drivers/mmc/host/sdhci-pci.c:368:
+               .vendor         = PCI_VENDOR_ID_INTEL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1157: FILE: drivers/mmc/host/sdhci-pci.c:368:
+               .vendor         = PCI_VENDOR_ID_INTEL,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1158: FILE: drivers/mmc/host/sdhci-pci.c:369:
+               .device         = PCI_DEVICE_ID_INTEL_MRST_SD1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1158: FILE: drivers/mmc/host/sdhci-pci.c:369:
+               .device         = PCI_DEVICE_ID_INTEL_MRST_SD1,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1159: FILE: drivers/mmc/host/sdhci-pci.c:370:
+               .subvendor      = PCI_ANY_ID,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1159: FILE: drivers/mmc/host/sdhci-pci.c:370:
+               .subvendor      = PCI_ANY_ID,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1160: FILE: drivers/mmc/host/sdhci-pci.c:371:
+               .subdevice      = PCI_ANY_ID,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1160: FILE: drivers/mmc/host/sdhci-pci.c:371:
+               .subdevice      = PCI_ANY_ID,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1161: FILE: drivers/mmc/host/sdhci-pci.c:372:
+               .driver_data    = (kernel_ulong_t)&sdhci_intel_mrst,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1161: FILE: drivers/mmc/host/sdhci-pci.c:372:
+               .driver_data    = (kernel_ulong_t)&sdhci_intel_mrst,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1162: FILE: drivers/mmc/host/sdhci-pci.c:373:
+       },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1175: FILE: drivers/mmc/host/sdhci-pci.c:641:
+        * slots number is fixed to 2 by Moorestown architecture$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1176: FILE: drivers/mmc/host/sdhci-pci.c:642:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1177: FILE: drivers/mmc/host/sdhci-pci.c:643:
+       if (pdev->device == PCI_DEVICE_ID_INTEL_MRST_SD0 ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1177: FILE: drivers/mmc/host/sdhci-pci.c:643:
+       if (pdev->device == PCI_DEVICE_ID_INTEL_MRST_SD0 ||
[...]
+               slots = 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1178: FILE: drivers/mmc/host/sdhci-pci.c:644:
+               pdev->device == PCI_DEVICE_ID_INTEL_MRST_SD1) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1178: FILE: drivers/mmc/host/sdhci-pci.c:644:
+       if (pdev->device == PCI_DEVICE_ID_INTEL_MRST_SD0 ||
+               pdev->device == PCI_DEVICE_ID_INTEL_MRST_SD1) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1178: FILE: drivers/mmc/host/sdhci-pci.c:644:
+               pdev->device == PCI_DEVICE_ID_INTEL_MRST_SD1) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1179: FILE: drivers/mmc/host/sdhci-pci.c:645:
+               slots = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1179: FILE: drivers/mmc/host/sdhci-pci.c:645:
+               slots = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1180: FILE: drivers/mmc/host/sdhci-pci.c:646:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1180: FILE: drivers/mmc/host/sdhci-pci.c:646:
+       } else {
+               ret = pci_read_config_byte(pdev, PCI_SLOT_INFO, &slots);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1181: FILE: drivers/mmc/host/sdhci-pci.c:647:
+               ret = pci_read_config_byte(pdev, PCI_SLOT_INFO, &slots);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1181: FILE: drivers/mmc/host/sdhci-pci.c:647:
+               ret = pci_read_config_byte(pdev, PCI_SLOT_INFO, &slots);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1183: FILE: drivers/mmc/host/sdhci-pci.c:649:
+               if (ret)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1183: FILE: drivers/mmc/host/sdhci-pci.c:649:
+               if (ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1183: FILE: drivers/mmc/host/sdhci-pci.c:649:
+               if (ret)
+                       return ret;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1184: FILE: drivers/mmc/host/sdhci-pci.c:650:
+                       return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1184: FILE: drivers/mmc/host/sdhci-pci.c:650:
+                       return ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1186: FILE: drivers/mmc/host/sdhci-pci.c:652:
+               slots = PCI_SLOT_INFO_SLOTS(slots) + 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1186: FILE: drivers/mmc/host/sdhci-pci.c:652:
+               slots = PCI_SLOT_INFO_SLOTS(slots) + 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1187: FILE: drivers/mmc/host/sdhci-pci.c:653:
+       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1200: FILE: drivers/mmc/host/sdhci-pci.c:662:
+        * first BAR is fixed to 0 by Moorestown architecture$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1201: FILE: drivers/mmc/host/sdhci-pci.c:663:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1202: FILE: drivers/mmc/host/sdhci-pci.c:664:
+       if (pdev->device == PCI_DEVICE_ID_INTEL_MRST_SD0 ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1202: FILE: drivers/mmc/host/sdhci-pci.c:664:
+       if (pdev->device == PCI_DEVICE_ID_INTEL_MRST_SD0 ||
[...]
+               first_bar = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1203: FILE: drivers/mmc/host/sdhci-pci.c:665:
+               pdev->device == PCI_DEVICE_ID_INTEL_MRST_SD1) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1203: FILE: drivers/mmc/host/sdhci-pci.c:665:
+       if (pdev->device == PCI_DEVICE_ID_INTEL_MRST_SD0 ||
+               pdev->device == PCI_DEVICE_ID_INTEL_MRST_SD1) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1203: FILE: drivers/mmc/host/sdhci-pci.c:665:
+               pdev->device == PCI_DEVICE_ID_INTEL_MRST_SD1) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1204: FILE: drivers/mmc/host/sdhci-pci.c:666:
+               first_bar = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1204: FILE: drivers/mmc/host/sdhci-pci.c:666:
+               first_bar = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1205: FILE: drivers/mmc/host/sdhci-pci.c:667:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1205: FILE: drivers/mmc/host/sdhci-pci.c:667:
+       } else {
+               ret = pci_read_config_byte(pdev, PCI_SLOT_INFO, &first_bar);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1206: FILE: drivers/mmc/host/sdhci-pci.c:668:
+               ret = pci_read_config_byte(pdev, PCI_SLOT_INFO, &first_bar);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1206: FILE: drivers/mmc/host/sdhci-pci.c:668:
+               ret = pci_read_config_byte(pdev, PCI_SLOT_INFO, &first_bar);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1207: FILE: drivers/mmc/host/sdhci-pci.c:669:
+               if (ret)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1207: FILE: drivers/mmc/host/sdhci-pci.c:669:
+               if (ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1207: FILE: drivers/mmc/host/sdhci-pci.c:669:
+               if (ret)
+                       return ret;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1208: FILE: drivers/mmc/host/sdhci-pci.c:670:
+                       return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1208: FILE: drivers/mmc/host/sdhci-pci.c:670:
+                       return ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1211: FILE: drivers/mmc/host/sdhci-pci.c:672:
+               first_bar &= PCI_SLOT_INFO_FIRST_BAR_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1211: FILE: drivers/mmc/host/sdhci-pci.c:672:
+               first_bar &= PCI_SLOT_INFO_FIRST_BAR_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1212: FILE: drivers/mmc/host/sdhci-pci.c:673:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1225: FILE: drivers/mmc/host/sdhci.c:1126:
+       if (ios->bus_width == MMC_BUS_WIDTH_8) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1225: FILE: drivers/mmc/host/sdhci.c:1126:
+       if (ios->bus_width == MMC_BUS_WIDTH_8) {
+               ctrl |= SDHCI_CTRL_8BITBUS;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1226: FILE: drivers/mmc/host/sdhci.c:1127:
+               ctrl |= SDHCI_CTRL_8BITBUS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1226: FILE: drivers/mmc/host/sdhci.c:1127:
+               ctrl |= SDHCI_CTRL_8BITBUS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1229: FILE: drivers/mmc/host/sdhci.c:1129:
+       } else if (ios->bus_width == MMC_BUS_WIDTH_4) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1229: FILE: drivers/mmc/host/sdhci.c:1129:
+       } else if (ios->bus_width == MMC_BUS_WIDTH_4) {
+               ctrl &= ~SDHCI_CTRL_8BITBUS;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1230: FILE: drivers/mmc/host/sdhci.c:1130:
+               ctrl &= ~SDHCI_CTRL_8BITBUS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1230: FILE: drivers/mmc/host/sdhci.c:1130:
+               ctrl &= ~SDHCI_CTRL_8BITBUS;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1231: FILE: drivers/mmc/host/sdhci.c:1131:
+               ctrl |= SDHCI_CTRL_4BITBUS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1231: FILE: drivers/mmc/host/sdhci.c:1131:
+               ctrl |= SDHCI_CTRL_4BITBUS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1232: FILE: drivers/mmc/host/sdhci.c:1132:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1232: FILE: drivers/mmc/host/sdhci.c:1132:
+       } else {
+               ctrl &= ~SDHCI_CTRL_8BITBUS;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1233: FILE: drivers/mmc/host/sdhci.c:1133:
+               ctrl &= ~SDHCI_CTRL_8BITBUS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1233: FILE: drivers/mmc/host/sdhci.c:1133:
+               ctrl &= ~SDHCI_CTRL_8BITBUS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1235: FILE: drivers/mmc/host/sdhci.c:1135:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1238: FILE: drivers/mmc/host/sdhci.c:1137:
+       if (ios->timing == MMC_TIMING_SD_HS || ios->timing == MMC_TIMING_MMC_HS)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1238: FILE: drivers/mmc/host/sdhci.c:1137:
+       if (ios->timing == MMC_TIMING_SD_HS || ios->timing == MMC_TIMING_MMC_HS)
                ctrl |= SDHCI_CTRL_HISPD;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1245: FILE: drivers/mmc/host/sdhci.c:1732:
        if (caps & SDHCI_CAN_DO_HISPD)
+               mmc->caps |= MMC_CAP_SD_HIGHSPEED | MMC_CAP_MMC_HIGHSPEED;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1247: FILE: drivers/mmc/host/sdhci.c:1733:
+               mmc->caps |= MMC_CAP_SD_HIGHSPEED | MMC_CAP_MMC_HIGHSPEED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1247: FILE: drivers/mmc/host/sdhci.c:1733:
+               mmc->caps |= MMC_CAP_SD_HIGHSPEED | MMC_CAP_MMC_HIGHSPEED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1271: FILE: include/linux/mmc/card.h:45:
+       unsigned char           s_cmd_set;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1280: FILE: include/linux/mmc/card.h:77:
+       u8  serialnum[21];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1281: FILE: include/linux/mmc/card.h:78:
+       u8  fw_ver[9];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1282: FILE: include/linux/mmc/card.h:79:
+       u8  model_num[41];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1283: FILE: include/linux/mmc/card.h:80:
+       u16 major;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1284: FILE: include/linux/mmc/card.h:81:
+       u16 seclen;         /* power of 2, 12 means 4096 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1285: FILE: include/linux/mmc/card.h:82:
+       u32 max_lba[2];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1286: FILE: include/linux/mmc/card.h:83:
+       u32 global_id[2];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1287: FILE: include/linux/mmc/card.h:84:
+       u16 features;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1288: FILE: include/linux/mmc/card.h:85:
+       u16 max_writes;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1289: FILE: include/linux/mmc/card.h:86:
+       u16 integrity;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1308: FILE: include/linux/mmc/card.h:123:
+       struct ceata_card_info  *ceata_info;$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1329: FILE: include/linux/mmc/card.h:162:
+extern int ceata_read_write_cmd(struct mmc_card *card, int rw,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1330: FILE: include/linux/mmc/card.h:163:
+extern int ceata_read_write_cmd(struct mmc_card *card, int rw,
+       sector_t lba, u32 secs);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1330: FILE: include/linux/mmc/card.h:163:
+       sector_t lba, u32 secs);$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1352: FILE: include/linux/mmc/mmc.h:267:
+#define EXT_CSD_CMD_SET_SECURE_2_0     (1<<3)
                                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1352: FILE: include/linux/mmc/mmc.h:267:
+#define EXT_CSD_CMD_SET_SECURE_2_0     (1<<3)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1353: FILE: include/linux/mmc/mmc.h:268:
+#define EXT_CSD_CMD_SET_CEATA          (1<<4)
                                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1353: FILE: include/linux/mmc/mmc.h:268:
+#define EXT_CSD_CMD_SET_CEATA          (1<<4)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1362: FILE: include/linux/mmc/mmc.h:287:
+       u8  resv1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1363: FILE: include/linux/mmc/mmc.h:288:
+       u8  fexp;       /* feature exp */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1364: FILE: include/linux/mmc/mmc.h:289:
+       u8  sec_exp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1365: FILE: include/linux/mmc/mmc.h:290:
+       u8  lba_low_exp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1366: FILE: include/linux/mmc/mmc.h:291:
+       u8  lba_mid_exp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1367: FILE: include/linux/mmc/mmc.h:292:
+       u8  lba_high_exp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1368: FILE: include/linux/mmc/mmc.h:293:
+       u8  control;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1369: FILE: include/linux/mmc/mmc.h:294:
+       u8  resv2[2];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1370: FILE: include/linux/mmc/mmc.h:295:
+       u8  feature_err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1371: FILE: include/linux/mmc/mmc.h:296:
+       u8  sec;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1372: FILE: include/linux/mmc/mmc.h:297:
+       u8  lba_low;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1373: FILE: include/linux/mmc/mmc.h:298:
+       u8  lba_mid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1374: FILE: include/linux/mmc/mmc.h:299:
+       u8  lba_high;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1375: FILE: include/linux/mmc/mmc.h:300:
+       u8  dev_head;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1376: FILE: include/linux/mmc/mmc.h:301:
+       u8  cmd_status;$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1377: FILE: include/linux/mmc/mmc.h:302:
+} __attribute__((packed));

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1417: FILE: include/linux/mmc/mmc.h:342:
+#define CEATA_STATUS_BSY               (1<<7)  /* Busy */
                                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1417: FILE: include/linux/mmc/mmc.h:342:
+#define CEATA_STATUS_BSY               (1<<7)  /* Busy */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1418: FILE: include/linux/mmc/mmc.h:343:
+#define CEATA_STATUS_DRDY              (1<<6)  /* Device Ready */
                                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1418: FILE: include/linux/mmc/mmc.h:343:
+#define CEATA_STATUS_DRDY              (1<<6)  /* Device Ready */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1419: FILE: include/linux/mmc/mmc.h:344:
+#define CEATA_STATUS_DRQ               (1<<3)  /* Data Request */
                                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1419: FILE: include/linux/mmc/mmc.h:344:
+#define CEATA_STATUS_DRQ               (1<<3)  /* Data Request */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1420: FILE: include/linux/mmc/mmc.h:345:
+#define CEATA_STATUS_ERR               (1<<0)  /* Error */
                                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1420: FILE: include/linux/mmc/mmc.h:345:
+#define CEATA_STATUS_ERR               (1<<0)  /* Error */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1422: FILE: include/linux/mmc/mmc.h:347:
+#define CEATA_ERROR_ICRC               (1<<7)  /* Interface CRC error (w) */
                                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1422: FILE: include/linux/mmc/mmc.h:347:
+#define CEATA_ERROR_ICRC               (1<<7)  /* Interface CRC error (w) */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1423: FILE: include/linux/mmc/mmc.h:348:
+#define CEATA_ERROR_UNC                (1<<6)  /* Uncorrectable data error (r) */
                                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1423: FILE: include/linux/mmc/mmc.h:348:
+#define CEATA_ERROR_UNC                (1<<6)  /* Uncorrectable data error (r) */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1424: FILE: include/linux/mmc/mmc.h:349:
+#define CEATA_ERROR_IDNF               (1<<4)  /* ID (sector) not found */
                                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1424: FILE: include/linux/mmc/mmc.h:349:
+#define CEATA_ERROR_IDNF               (1<<4)  /* ID (sector) not found */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1425: FILE: include/linux/mmc/mmc.h:350:
+#define CEATA_ERROR_ABRT               (1<<2)  /* Aborted Command */
                                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1425: FILE: include/linux/mmc/mmc.h:350:
+#define CEATA_ERROR_ABRT               (1<<2)  /* Aborted Command */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1427: FILE: include/linux/mmc/mmc.h:352:
+#define CEATA_CONTROL_SRST             (1<<2)  /* ATA software reset */
                                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1427: FILE: include/linux/mmc/mmc.h:352:
+#define CEATA_CONTROL_SRST             (1<<2)  /* ATA software reset */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1428: FILE: include/linux/mmc/mmc.h:353:
+#define CEATA_CONTROL_NIEN             (1<<1)  /* Neg cmd comp int enable */
                                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1428: FILE: include/linux/mmc/mmc.h:353:
+#define CEATA_CONTROL_NIEN             (1<<1)  /* Neg cmd comp int enable */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1467: FILE: include/linux/mmc/mmc.h:392:
+
+

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Pierre Ossman'
#1476: 
To: Pierre Ossman

WARNING:BAD_SIGN_OFF: Unexpected content after email: 'linux-kernel@vger.kernel.org; Johnson, Charles F; Zhu, Daniel; Yuan, Hang; Pasrija, Geeta; Li, Jiebing', should be: 'linux-kernel@vger.kernel.org; (Johnson, Charles F; Zhu, Daniel; Yuan, Hang; Pasrija, Geeta; Li, Jiebing)'
#1477: 
Cc: linux-kernel@vger.kernel.org; Johnson, Charles F; Zhu, Daniel; Yuan, Hang; Pasrija, Geeta; Li, Jiebing

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000131951.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 217 errors, 572 warnings, 60 checks, 1270 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000131951.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
