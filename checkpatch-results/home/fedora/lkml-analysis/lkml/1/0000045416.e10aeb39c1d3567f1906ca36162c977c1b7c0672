WARNING:TYPO_SPELLING: 'actualy' may be misspelled - perhaps 'actually'?
#29: 
node->private if we are actualy dealing with a node.
                        ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#96: FILE: drivers/gpu/drm/ttm/ttm_bo.c:884:
+		node = list_entry(bo->mem.mm_node->ml_entry.prev,
+					struct drm_mm_node, ml_entry);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#102: FILE: drivers/gpu/drm/ttm/ttm_bo.c:890:
+		node = list_entry(bo->mem.mm_node->ml_entry.next,
+					struct drm_mm_node, ml_entry);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#128: FILE: drivers/gpu/drm/ttm/ttm_bo.c:916:
+static int ttm_manager_space_range(struct ttm_buffer_object *bo,
+					uint32_t mem_type,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#128: FILE: drivers/gpu/drm/ttm/ttm_bo.c:916:
+					uint32_t mem_type,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#137: FILE: drivers/gpu/drm/ttm/ttm_bo.c:925:
+	unsigned size = end - start;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#139: FILE: drivers/gpu/drm/ttm/ttm_bo.c:927:
+	unsigned wasted;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#150: FILE: drivers/gpu/drm/ttm/ttm_bo.c:938:
+			unsigned tmp = entry->start % mem->page_alignment;

WARNING:LINE_SPACING: Missing a blank line after declarations
#151: FILE: drivers/gpu/drm/ttm/ttm_bo.c:939:
+			unsigned tmp = entry->start % mem->page_alignment;
+			if (tmp)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#154: FILE: drivers/gpu/drm/ttm/ttm_bo.c:942:
+		if (entry->start < end && (entry->start+entry->size) > start) {
 		                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#156: FILE: drivers/gpu/drm/ttm/ttm_bo.c:944:
+				tbo = (struct ttm_buffer_object*)entry->private;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#162: FILE: drivers/gpu/drm/ttm/ttm_bo.c:950:
+					entry = drm_mm_get_block_atomic(entry,
+							mem->num_pages,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#177: FILE: drivers/gpu/drm/ttm/ttm_bo.c:965:
+static int ttm_bo_mem_space_range(struct ttm_buffer_object *bo,
+				uint32_t proposed_placement,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#177: FILE: drivers/gpu/drm/ttm/ttm_bo.c:965:
+				uint32_t proposed_placement,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#185: FILE: drivers/gpu/drm/ttm/ttm_bo.c:973:
+	uint32_t num_prios = bdev->driver->num_mem_type_prio;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#186: FILE: drivers/gpu/drm/ttm/ttm_bo.c:974:
+	const uint32_t *prios = bdev->driver->mem_type_prio;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#187: FILE: drivers/gpu/drm/ttm/ttm_bo.c:975:
+	uint32_t i;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#188: FILE: drivers/gpu/drm/ttm/ttm_bo.c:976:
+	uint32_t mem_type = TTM_PL_SYSTEM;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#189: FILE: drivers/gpu/drm/ttm/ttm_bo.c:977:
+	uint32_t cur_flags = 0;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#201: FILE: drivers/gpu/drm/ttm/ttm_bo.c:989:
+		type_ok = ttm_bo_mt_compatible(man,
+						bo->type == ttm_bo_type_user,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#209: FILE: drivers/gpu/drm/ttm/ttm_bo.c:997:
+		cur_flags = ttm_bo_select_caching(man, bo->mem.placement,
+							cur_flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#216: FILE: drivers/gpu/drm/ttm/ttm_bo.c:1004:
+			ret = ttm_manager_space_range(bo, mem_type, mem,
+							start, end,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mem_type == TTM_PL_SYSTEM'
#224: FILE: drivers/gpu/drm/ttm/ttm_bo.c:1012:
+	if ((type_ok && (mem_type == TTM_PL_SYSTEM)) || mem->mm_node) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#235: FILE: drivers/gpu/drm/ttm/ttm_bo.c:1023:
+		type_ok = ttm_bo_mt_compatible(man,
+						bo->type == ttm_bo_type_user,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#270: FILE: drivers/gpu/drm/ttm/ttm_bo.c:1174:
+int ttm_bo_move_buffer_range(struct ttm_buffer_object *bo,
+				uint32_t proposed_placement,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#270: FILE: drivers/gpu/drm/ttm/ttm_bo.c:1174:
+				uint32_t proposed_placement,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#278: FILE: drivers/gpu/drm/ttm/ttm_bo.c:1182:
+	BUG_ON(!atomic_read(&bo->reserved));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#302: FILE: drivers/gpu/drm/ttm/ttm_bo.c:1206:
+	ret = ttm_bo_mem_space_range(bo, proposed_placement, &mem,
+					start, end, interruptible, no_wait);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#318: FILE: drivers/gpu/drm/ttm/ttm_bo.c:1222:
+static int ttm_bo_mem_compat_range(uint32_t proposed_placement,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#319: FILE: drivers/gpu/drm/ttm/ttm_bo.c:1223:
+static int ttm_bo_mem_compat_range(uint32_t proposed_placement,
+					struct ttm_mem_reg *mem,

WARNING:LINE_SPACING: Missing a blank line after declarations
#328: FILE: drivers/gpu/drm/ttm/ttm_bo.c:1232:
+		unsigned long eend = mem->mm_node->start + mem->mm_node->size;
+		if (mem->mm_node->start < start || eend > end)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#336: FILE: drivers/gpu/drm/ttm/ttm_bo.c:1240:
+int ttm_buffer_object_validate_range(struct ttm_buffer_object *bo,
+					uint32_t proposed_placement,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#336: FILE: drivers/gpu/drm/ttm/ttm_bo.c:1240:
+					uint32_t proposed_placement,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#349: FILE: drivers/gpu/drm/ttm/ttm_bo.c:1253:
+	BUG_ON(!atomic_read(&bo->reserved));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#361: FILE: drivers/gpu/drm/ttm/ttm_bo.c:1265:
+	if (!ttm_bo_mem_compat_range(bo->proposed_placement, &bo->mem,
+					start, end)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#363: FILE: drivers/gpu/drm/ttm/ttm_bo.c:1267:
+		ret = ttm_bo_move_buffer_range(bo, bo->proposed_placement,
+						start, end,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#367: FILE: drivers/gpu/drm/ttm/ttm_bo.c:1271:
+				printk(KERN_ERR TTM_PFX

WARNING:SPLIT_STRING: quoted string split across lines
#369: FILE: drivers/gpu/drm/ttm/ttm_bo.c:1273:
+					"Failed moving buffer. "
+					"Proposed placement 0x%08x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#372: FILE: drivers/gpu/drm/ttm/ttm_bo.c:1276:
+				printk(KERN_ERR TTM_PFX

WARNING:SPLIT_STRING: quoted string split across lines
#374: FILE: drivers/gpu/drm/ttm/ttm_bo.c:1278:
+					"Out of aperture space or "
+					"DRM memory quota.\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bo->ttm"
#382: FILE: drivers/gpu/drm/ttm/ttm_bo.c:1286:
+	if (bo->mem.mem_type == TTM_PL_SYSTEM && bo->ttm == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#419: FILE: include/drm/ttm/ttm_bo_api.h:311:
+extern int ttm_buffer_object_validate_range(struct ttm_buffer_object *bo,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#420: FILE: include/drm/ttm/ttm_bo_api.h:312:
+extern int ttm_buffer_object_validate_range(struct ttm_buffer_object *bo,
+					uint32_t proposed_placement,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#420: FILE: include/drm/ttm/ttm_bo_api.h:312:
+					uint32_t proposed_placement,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000045416.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 12 warnings, 31 checks, 378 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000045416.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
