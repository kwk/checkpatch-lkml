WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
group of requests 'deserves' usage of the cache and disks at any given time.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#125: FILE: drivers/md/raid5.c:265:
+		if (dev_q->toread || dev->read || dev_q->towrite ||
+			dev->written || test_bit(R5_LOCKED, &dev_q->flags)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#145: FILE: drivers/md/raid5.c:293:
+static sector_t compute_blocknr(raid5_conf_t *conf, int raid_disks,
+	sector_t sector, int pd_idx, int i);

CHECK:CAMELCASE: Avoid CamelCase: <R5_Wantwrite>
#165: FILE: drivers/md/raid5.c:406:
+		if (test_and_clear_bit(R5_Wantwrite, &sq->dev[i].flags))

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <R5_Wantread>
#168: FILE: drivers/md/raid5.c:408:
+		else if (test_and_clear_bit(R5_Wantread, &sq->dev[i].flags))

CHECK:CAMELCASE: Avoid CamelCase: <R5_ReWrite>
#177: FILE: drivers/md/raid5.c:451:
+			    test_bit(R5_ReWrite, &sq->dev[i].flags))

CHECK:CAMELCASE: Avoid CamelCase: <R5_Wantfill>
#215: FILE: drivers/md/raid5.c:538:
+		if (test_bit(R5_Wantfill, &dev_q->flags) && !dev_q->toread) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#250: FILE: drivers/md/raid5.c:586:
+		struct r5_queue_dev *dev_q = &sh->sq->dev[i];
+		if (test_bit(R5_Wantfill, &dev_q->flags)) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#255: FILE: drivers/md/raid5.c:589:
+			dev->read = rbi = dev_q->toread;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#294: FILE: drivers/md/raid5.c:638:
+	BUG_ON(!test_bit(R5_Wantcompute, &sh->sq->dev[target].flags));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:CAMELCASE: Avoid CamelCase: <R5_Wantcompute>
#294: FILE: drivers/md/raid5.c:638:
+	BUG_ON(!test_bit(R5_Wantcompute, &sh->sq->dev[target].flags));

CHECK:CAMELCASE: Avoid CamelCase: <R5_Wantprexor>
#315: FILE: drivers/md/raid5.c:690:
+		if (dev_q->towrite && test_bit(R5_Wantprexor, &dev_q->flags))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#348: FILE: drivers/md/raid5.c:729:
+			if (i != pd_idx && dev_q->towrite &&
+				test_bit(R5_LOCKED, &dev_q->flags))

WARNING:LINE_SPACING: Missing a blank line after declarations
#442: FILE: drivers/md/raid5.c:932:
+			struct r5_queue_dev *dev_q = &sq->dev[i];
+			if (test_and_clear_bit(R5_Overlap, &dev_q->flags))

CHECK:CAMELCASE: Avoid CamelCase: <R5_Overlap>
#442: FILE: drivers/md/raid5.c:932:
+			if (test_and_clear_bit(R5_Overlap, &dev_q->flags))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#467: FILE: drivers/md/raid5.c:954:
+		(conf->raid_disks-1) * sizeof(struct r5_queue_dev));
 		                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#515: FILE: drivers/md/raid5.c:997:
+	sc = kmem_cache_create(conf->sq_cache_name[conf->active_name],
+		sizeof(struct stripe_queue) +

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#516: FILE: drivers/md/raid5.c:998:
+		(devs-1)*sizeof(struct r5_queue_dev), 0, 0, NULL, NULL);
 		     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#516: FILE: drivers/md/raid5.c:998:
+		(devs-1)*sizeof(struct r5_queue_dev), 0, 0, NULL, NULL);
 		        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#539: FILE: drivers/md/raid5.c:1049:
+	sc = kmem_cache_create(conf->sh_cache_name[1-conf->active_name],
 	                                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#545: FILE: drivers/md/raid5.c:1055:
+	sc_q = kmem_cache_create(conf->sh_cache_name[1-conf->active_name],
 	                                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#546: FILE: drivers/md/raid5.c:1056:
+	sc_q = kmem_cache_create(conf->sh_cache_name[1-conf->active_name],
+		    sizeof(struct stripe_queue) +

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#547: FILE: drivers/md/raid5.c:1057:
+		    (newsize-1)*sizeof(struct r5_queue_dev), 0, 0, NULL, NULL);
 		            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#547: FILE: drivers/md/raid5.c:1057:
+		    (newsize-1)*sizeof(struct r5_queue_dev), 0, 0, NULL, NULL);
 		               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#568: FILE: drivers/md/raid5.c:1078:
+			(newsize-1)*sizeof(struct r5_queue_dev));
 			        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#568: FILE: drivers/md/raid5.c:1078:
+			(newsize-1)*sizeof(struct r5_queue_dev));
 			           ^

WARNING:NEEDLESS_IF: kmem_cache_destroy(NULL) is safe and this check is probably not required
#632: FILE: drivers/md/raid5.c:1183:
+	if (conf->sh_slab_cache)
+		kmem_cache_destroy(conf->sh_slab_cache);

WARNING:NEEDLESS_IF: kmem_cache_destroy(NULL) is safe and this check is probably not required
#636: FILE: drivers/md/raid5.c:1187:
+	if (conf->sq_slab_cache)
+		kmem_cache_destroy(conf->sq_slab_cache);

CHECK:CAMELCASE: Avoid CamelCase: <R5_ReadError>
#661: FILE: drivers/md/raid5.c:1219:
+		if (test_bit(R5_ReadError, &sq->dev[i].flags)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#750: FILE: drivers/md/raid5.c:1323:
+	dev_q->sector = compute_blocknr(sh->sq->raid_conf, sh->disks,
+			sh->sector, sh->sq->pd_idx, i);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#761: FILE: drivers/md/raid5.c:1460:
+compute_blocknr(raid5_conf_t *conf, int raid_disks, sector_t sector,
+	int pd_idx, int i)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#811: FILE: drivers/md/raid5.c:1503:
+			if (pd_idx == raid_disks-1)
 			                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#819: FILE: drivers/md/raid5.c:1510:
+			if (pd_idx == raid_disks-1)
 			                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#865: FILE: drivers/md/raid5.c:1620:
+				if (test_and_clear_bit(R5_Overlap,
+							&sq->dev[i].flags))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#896: FILE: drivers/md/raid5.c:1654:
+			if (count <= disks-2 &&
 			                  ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1023: FILE: drivers/md/raid5.c:1815:
+		BUG_ON(!(test_bit(R5_UPTODATE, &sq->dev[pd_idx].flags) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1024: FILE: drivers/md/raid5.c:1816:
+		BUG_ON(!(test_bit(R5_UPTODATE, &sq->dev[pd_idx].flags) ||
+			test_bit(R5_Wantcompute, &sq->dev[pd_idx].flags)));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1109: FILE: drivers/md/raid5.c:1907:
+		sq->bm_seq = conf->seq_flush+1;
 		                            ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1119: FILE: drivers/md/raid5.c:1914:
+		sector_t sector = sq->dev[dd_idx].sector;
+		for (bi = sq->dev[dd_idx].towrite;

CHECK:CAMELCASE: Avoid CamelCase: <R5_Insync>
#1205: FILE: drivers/md/raid5.c:2019:
+		    (!test_bit(R5_Insync, &sq->dev[i].flags) ||

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'disk_idx == sq->pd_idx'
#1235: FILE: drivers/md/raid5.c:2059:
+	if ((disk_idx == sq->pd_idx) &&
 	     test_bit(STRIPE_OP_CHECK, &sh->ops.pending))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1236: FILE: drivers/md/raid5.c:2060:
+	if ((disk_idx == sq->pd_idx) &&
 	     test_bit(STRIPE_OP_CHECK, &sh->ops.pending))

WARNING:LINE_SPACING: Missing a blank line after declarations
#1287: FILE: drivers/md/raid5.c:2154:
+		struct r5_queue_dev *dev_q = &sq->dev[i];
+		if (!test_bit(R5_LOCKED, &dev_q->flags) &&

WARNING:LINE_SPACING: Missing a blank line after declarations
#1338: FILE: drivers/md/raid5.c:2219:
+			struct r5_queue_dev *dev_q = &sq->dev[i];
+			if (!test_bit(R5_LOCKED, &dev_q->flags) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1339: FILE: drivers/md/raid5.c:2220:
+			if (!test_bit(R5_LOCKED, &dev_q->flags) &&
+				test_bit(R5_UPTODATE, &dev_q->flags)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev_q->towrite"
#1359: FILE: drivers/md/raid5.c:2238:
+				if (dev_q->towrite == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#1377: FILE: drivers/md/raid5.c:2259:
+		struct r5_queue_dev *dev_q = &sq->dev[i];
+		if ((dev_q->towrite || i == sq->pd_idx) &&

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1396: FILE: drivers/md/raid5.c:2273:
+			if (test_bit(R5_Insync, &dev_q->flags)) rcw++;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1411: FILE: drivers/md/raid5.c:2285:
+			struct r5_queue_dev *dev_q = &sq->dev[i];
+			if ((dev_q->towrite || i == sq->pd_idx) &&

WARNING:LINE_SPACING: Missing a blank line after declarations
#1439: FILE: drivers/md/raid5.c:2310:
+			struct r5_queue_dev *dev_q = &sq->dev[i];
+			if (!test_bit(R5_OVERWRITE, &dev_q->flags) &&

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1473: FILE: drivers/md/raid5.c:2362:
 		    && i != pd_idx && i != qd_idx
+		    && (!test_bit(R5_LOCKED, &dev_q->flags)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1478: FILE: drivers/md/raid5.c:2365:
+			if (test_bit(R5_Insync, &dev_q->flags)) rcw++;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1478: FILE: drivers/md/raid5.c:2365:
+			if (test_bit(R5_Insync, &dev_q->flags)) rcw++;
[...]
 			else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPLIT_STRING: quoted string split across lines
#1482: FILE: drivers/md/raid5.c:2368:
 				pr_debug("raid6: must_compute: "
+				   "disk %d flags=%#lx\n", i, dev_q->flags);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LINE_SPACING: Missing a blank line after declarations
#1493: FILE: drivers/md/raid5.c:2381:
+			struct r5_queue_dev *dev_q = &sq->dev[i];
+			if (!test_bit(R5_OVERWRITE, &dev_q->flags)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1498: FILE: drivers/md/raid5.c:2383:
 			    && !(s->failed == 0 && (i == pd_idx || i == qd_idx))
+			    && !test_bit(R5_LOCKED, &dev_q->flags) &&

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1578: FILE: drivers/md/raid5.c:2520:
+		BUG_ON(!test_bit(R5_UPTODATE, &dev_q->flags));

CHECK:CAMELCASE: Avoid CamelCase: <R5_Expanded>
#1670: FILE: drivers/md/raid5.c:2660:
+			  test_bit(R5_Expanded, &sh2->sq->dev[dd_idx].flags)) {

WARNING:SPLIT_STRING: quoted string split across lines
#1730: FILE: drivers/md/raid5.c:2744:
 		pr_debug("check %d: state 0x%lx toread %p read %p write %p "
+			"written %p\n",	i, dev_q->flags, dev_q->toread,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1740: FILE: drivers/md/raid5.c:2753:
+		if (test_bit(R5_UPTODATE, &dev_q->flags) && dev_q->toread &&
 			!test_bit(STRIPE_OP_BIOFILL, &sh->ops.pending))

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1748: FILE: drivers/md/raid5.c:2757:
+		if (test_bit(R5_LOCKED, &dev_q->flags)) s.locked++;

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1749: FILE: drivers/md/raid5.c:2758:
+		if (test_bit(R5_UPTODATE, &dev_q->flags)) s.uptodate++;
 		                                            ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1749: FILE: drivers/md/raid5.c:2758:
+		if (test_bit(R5_UPTODATE, &dev_q->flags)) s.uptodate++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1750: FILE: drivers/md/raid5.c:2759:
+		if (test_bit(R5_Wantcompute, &dev_q->flags)) s.compute++;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1777: FILE: drivers/md/raid5.c:2779:
 		if (!rdev || !test_bit(In_sync, &rdev->flags)
+		    || test_bit(R5_ReadError, &dev_q->flags)) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1818: FILE: drivers/md/raid5.c:2859:
+		BUG_ON(!test_bit(R5_UPTODATE, &sq->dev[sq->pd_idx].flags));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1827: FILE: drivers/md/raid5.c:2865:
+			if (test_bit(R5_LOCKED, &dev_q->flags) &&
+				(i == sq->pd_idx || dev->written)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1849: FILE: drivers/md/raid5.c:2916:
+	    test_bit(R5_ReadError, &sq->dev[s.failed_num].flags)
+	    && !test_bit(R5_LOCKED, &sq->dev[s.failed_num].flags)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1850: FILE: drivers/md/raid5.c:2917:
+	    && !test_bit(R5_LOCKED, &sq->dev[s.failed_num].flags)
+	    && test_bit(R5_UPTODATE, &sq->dev[s.failed_num].flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1891: FILE: drivers/md/raid5.c:2961:
+		sq->pd_idx = stripe_to_pdidx(sh->sector, conf,
 			conf->raid_disks);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1975: FILE: drivers/md/raid5.c:3049:
+		if (test_bit(R5_LOCKED, &dev_q->flags)) s.locked++;

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1976: FILE: drivers/md/raid5.c:3050:
+		if (test_bit(R5_UPTODATE, &dev_q->flags)) s.uptodate++;
 		                                            ^^^^^^^^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1976: FILE: drivers/md/raid5.c:3050:
+		if (test_bit(R5_UPTODATE, &dev_q->flags)) s.uptodate++;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2001: FILE: drivers/md/raid5.c:3069:
 		if (!rdev || !test_bit(In_sync, &rdev->flags)
+		    || test_bit(R5_ReadError, &dev_q->flags)) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#2031: FILE: drivers/md/raid5.c:3105:
+	     ( r6s.p_failed || ((test_bit(R5_Insync, &pdev_q->flags)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2032: FILE: drivers/md/raid5.c:3106:
+	     ( r6s.p_failed || ((test_bit(R5_Insync, &pdev_q->flags)
+			     && !test_bit(R5_LOCKED, &pdev_q->flags)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2033: FILE: drivers/md/raid5.c:3107:
+			     && !test_bit(R5_LOCKED, &pdev_q->flags)
+			     && test_bit(R5_UPTODATE, &pdev_q->flags)))) &&

ERROR:SPACING: space prohibited after that open parenthesis '('
#2034: FILE: drivers/md/raid5.c:3108:
+	     ( r6s.q_failed || ((test_bit(R5_Insync, &qdev_q->flags)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2035: FILE: drivers/md/raid5.c:3109:
+	     ( r6s.q_failed || ((test_bit(R5_Insync, &qdev_q->flags)
+			     && !test_bit(R5_LOCKED, &qdev_q->flags)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2036: FILE: drivers/md/raid5.c:3110:
+			     && !test_bit(R5_LOCKED, &qdev_q->flags)
+			     && test_bit(R5_UPTODATE, &qdev_q->flags)))))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2050: FILE: drivers/md/raid5.c:3144:
+			if (test_bit(R5_ReadError, &dev_q->flags)
+			    && !test_bit(R5_LOCKED, &dev_q->flags)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2051: FILE: drivers/md/raid5.c:3145:
+			    && !test_bit(R5_LOCKED, &dev_q->flags)
+			    && test_bit(R5_UPTODATE, &dev_q->flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2158: FILE: drivers/md/raid5.c:3800:
+			s = compute_blocknr(conf, sh->disks, sh->sector,
+					pd_idx, j);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000410769.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 20 warnings, 54 checks, 2110 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000410769.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
