WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#288: FILE: include/linux/relay.h:117:
+struct relay_page_callbacks
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#313: FILE: include/linux/relay.h:135:
+	void (*page_released) (struct page *page, void *private_data);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#338: FILE: include/linux/relay.h:154:
+	void (*page_stolen) (struct page *page, void *private_data);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#355: FILE: include/linux/relay.h:170:
+extern void relay_add_page(struct rchan *chan,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#520: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#525: FILE: include/linux/relay_pagewriter.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#526: FILE: include/linux/relay_pagewriter.h:2:
+ * linux/include/linux/relay_pagewriter.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#552: FILE: include/linux/relay_pagewriter.h:28:
+struct pagewriter_buf
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#567: FILE: include/linux/relay_pagewriter.h:43:
+struct pagewriter
+{

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#579: FILE: include/linux/relay_pagewriter.h:55:
+extern size_t pagewriter_switch_page_default_callback(struct pagewriter_buf *buf,

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#601: FILE: include/linux/relay_pagewriter.h:77:
+struct pagewriter_callbacks
+{

WARNING:SPACING: Unnecessary space before function pointer arguments
#619: FILE: include/linux/relay_pagewriter.h:95:
+	void (*new_page) (struct pagewriter_buf *buf,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#729: FILE: include/linux/relay_pagewriter.h:205:
+	BUG_ON(length >= PAGE_SIZE - 1);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#733: FILE: include/linux/relay_pagewriter.h:209:
+extern struct pagewriter *pagewriter_open(const char *base_filename,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#740: FILE: include/linux/relay_pagewriter.h:216:
+extern void pagewriter_close(struct pagewriter *pagewriter);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#741: FILE: include/linux/relay_pagewriter.h:217:
+extern void pagewriter_flush(struct pagewriter *pagewriter);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#742: FILE: include/linux/relay_pagewriter.h:218:
+extern void pagewriter_reset(struct pagewriter *pagewriter);

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#869: FILE: kernel/relay.c:110:
+	    (waitqueue_active(&buf->read_wait)))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1047: FILE: kernel/relay.c:290:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#1286: FILE: kernel/relay.c:837:
+		struct relay_page *rpage;
+		rpage = list_first_entry(&buf->pages, struct relay_page, list);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1312: FILE: kernel/relay.c:967:
+ * ^Irelay_hotcpu_callback - CPU hotplug callback$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1313: FILE: kernel/relay.c:968:
+ * ^I@nb: notifier block$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1314: FILE: kernel/relay.c:969:
+ * ^I@action: hotplug action to take$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1315: FILE: kernel/relay.c:970:
+ * ^I@hcpu: CPU number$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1317: FILE: kernel/relay.c:972:
+ * ^IReturns the success/failure of the operation. (%NOTIFY_OK, %NOTIFY_BAD)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1320: FILE: kernel/relay.c:975:
+static int __cpuinit relay_hotcpu_callback(struct notifier_block *nb,
+				unsigned long action,

ERROR:SPACING: space required before the open parenthesis '('
#1326: FILE: kernel/relay.c:981:
+	switch(action) {

ERROR:SPACING: space required before the open parenthesis '('
#1334: FILE: kernel/relay.c:989:
+			if(!chan->buf[hotcpu]) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1335: FILE: kernel/relay.c:990:
+				printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'relay_hotcpu_callback', this function's name, in a string
#1336: FILE: kernel/relay.c:991:
+					"relay_hotcpu_callback: cpu %d buffer "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#1337: FILE: kernel/relay.c:992:
+					"relay_hotcpu_callback: cpu %d buffer "
+					"creation failed\n", hotcpu);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1347: FILE: kernel/relay.c:1002:
+		 * final relay_flush() call. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1364: FILE: kernel/relay_pagewriter.c:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1375: FILE: kernel/relay_pagewriter.c:12:
+ * ^I(mathieu.desnoyers@polymtl.ca)$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*rpage)...) over kmalloc(sizeof(struct relay_page)...)
#1462: FILE: kernel/relay_pagewriter.c:99:
+		rpage = kmalloc(sizeof(struct relay_page), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*buf)...) over kzalloc(sizeof(struct pagewriter_buf)...)
#1490: FILE: kernel/relay_pagewriter.c:127:
+	struct pagewriter_buf *buf = kzalloc(sizeof(struct pagewriter_buf),

WARNING:TYPO_SPELLING: 'fileystem' may be misspelled - perhaps 'filesystem'?
#1566: FILE: kernel/relay_pagewriter.c:203:
+ *	Removes the file from the fileystem, which also frees the
   	                          ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1583: FILE: kernel/relay_pagewriter.c:220:
+static struct pagewriter_buf *pagewriter_open_buf(struct pagewriter *pagewriter,
+					     unsigned int cpu)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1585: FILE: kernel/relay_pagewriter.c:222:
+ ^Istruct pagewriter_buf *buf = NULL;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1585: FILE: kernel/relay_pagewriter.c:222:
+ ^Istruct pagewriter_buf *buf = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1585: FILE: kernel/relay_pagewriter.c:222:
+ ^Istruct pagewriter_buf *buf = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1591: FILE: kernel/relay_pagewriter.c:228:
+ ^Ibuf->cpu = cpu;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1591: FILE: kernel/relay_pagewriter.c:228:
+ ^Ibuf->cpu = cpu;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1591: FILE: kernel/relay_pagewriter.c:228:
+ ^Ibuf->cpu = cpu;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1593: FILE: kernel/relay_pagewriter.c:230:
+ ^I__pagewriter_reset(buf, 1);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1593: FILE: kernel/relay_pagewriter.c:230:
+ ^I__pagewriter_reset(buf, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1593: FILE: kernel/relay_pagewriter.c:230:
+ ^I__pagewriter_reset(buf, 1);$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*pagewriter)...) over kzalloc(sizeof(struct pagewriter)...)
#1676: FILE: kernel/relay_pagewriter.c:313:
+	pagewriter = kzalloc(sizeof(struct pagewriter), GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1825: FILE: kernel/relay_pagewriter.c:462:
+		printk(KERN_WARNING "pagewriter: one or more items not logged "

WARNING:SPLIT_STRING: quoted string split across lines
#1826: FILE: kernel/relay_pagewriter.c:463:
+		printk(KERN_WARNING "pagewriter: one or more items not logged "
+		       "[item size (%Zd) > PAGE_SIZE (%lu)]\n",

WARNING:PRINTF_Z: %Zd is non-standard C, use %zd
#1826: FILE: kernel/relay_pagewriter.c:463:
+		       "[item size (%Zd) > PAGE_SIZE (%lu)]\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1857: FILE: kernel/relay_pagewriter.c:494:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1859: FILE: kernel/relay_pagewriter.c:496:
+ * ^Ipagewriter_hotcpu_callback - CPU hotplug callback$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1860: FILE: kernel/relay_pagewriter.c:497:
+ * ^I@nb: notifier block$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1861: FILE: kernel/relay_pagewriter.c:498:
+ * ^I@action: hotplug action to take$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1862: FILE: kernel/relay_pagewriter.c:499:
+ * ^I@hcpu: CPU number$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1864: FILE: kernel/relay_pagewriter.c:501:
+ * ^IReturns the success/failure of the operation. (%NOTIFY_OK, %NOTIFY_BAD)$

ERROR:SPACING: space required before the open parenthesis '('
#1873: FILE: kernel/relay_pagewriter.c:510:
+	switch(action) {

ERROR:SPACING: space required before the open parenthesis '('
#1882: FILE: kernel/relay_pagewriter.c:519:
+			if(!pagewriter->buf[hotcpu]) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1883: FILE: kernel/relay_pagewriter.c:520:
+				printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pagewriter_hotcpu_callback', this function's name, in a string
#1884: FILE: kernel/relay_pagewriter.c:521:
+					"pagewriter_hotcpu_callback: cpu %d "

ERROR:CODE_INDENT: code indent should use tabs where possible
#1885: FILE: kernel/relay_pagewriter.c:522:
+^I^I^I^I        "buffer creation failed\n", hotcpu);$

WARNING:SPLIT_STRING: quoted string split across lines
#1885: FILE: kernel/relay_pagewriter.c:522:
+					"pagewriter_hotcpu_callback: cpu %d "
+				        "buffer creation failed\n", hotcpu);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1895: FILE: kernel/relay_pagewriter.c:532:
+		 * final relay_flush() call. */

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1903: FILE: kernel/relay_pagewriter.c:540:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000216498.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 12 errors, 40 warnings, 14 checks, 1894 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000216498.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
