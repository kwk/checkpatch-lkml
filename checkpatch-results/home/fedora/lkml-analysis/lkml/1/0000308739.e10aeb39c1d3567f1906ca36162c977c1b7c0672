CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#159: FILE: include/linux/bitops.h:77:
+extern unsigned long __find_next_bit(const unsigned long *addr,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#160: FILE: include/linux/bitops.h:78:
+extern unsigned long __find_next_bit(const unsigned long *addr,
+		unsigned long size, unsigned long offset);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#170: FILE: include/linux/bitops.h:88:
+find_next_bit(const unsigned long *addr, unsigned long size,
+		unsigned long offset)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'size < BITS_PER_LONG'
#179: FILE: include/linux/bitops.h:97:
+	if (__builtin_constant_p(size) && (size < BITS_PER_LONG)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'size == BITS_PER_LONG'
#187: FILE: include/linux/bitops.h:105:
+	if (__builtin_constant_p(size) && (size == BITS_PER_LONG)) {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#196: FILE: include/linux/bitops.h:114:
+extern unsigned long __find_next_zero_bit(const unsigned long *addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#197: FILE: include/linux/bitops.h:115:
+extern unsigned long __find_next_zero_bit(const unsigned long *addr,
+		unsigned long size, unsigned long offset);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#207: FILE: include/linux/bitops.h:125:
+find_next_zero_bit(const unsigned long *addr, unsigned long size,
+		unsigned long offset)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'size < BITS_PER_LONG'
#216: FILE: include/linux/bitops.h:134:
+	if (__builtin_constant_p(size) && (size < BITS_PER_LONG)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'size == BITS_PER_LONG'
#224: FILE: include/linux/bitops.h:142:
+	if (__builtin_constant_p(size) && (size == BITS_PER_LONG)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#258: FILE: lib/find_next_bit.c:23:
+unsigned long __find_next_bit(const unsigned long *addr,
+		unsigned long size, unsigned long offset)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#277: FILE: lib/find_next_bit.c:67:
+unsigned long __find_next_zero_bit(const unsigned long *addr,
+		unsigned long size, unsigned long offset)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000308739.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 0 warnings, 12 checks, 163 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000308739.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
