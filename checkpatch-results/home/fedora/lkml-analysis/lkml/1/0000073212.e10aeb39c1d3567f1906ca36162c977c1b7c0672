WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#43: 
MSM_ADSP is neccessary for camera to link and I can't see how to
            ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#64: FILE: arch/arm/mach-msm/include/mach/board.h:39:
+	uint32_t mdcphy;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#65: FILE: arch/arm/mach-msm/include/mach/board.h:40:
+	uint32_t mdcsz;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#66: FILE: arch/arm/mach-msm/include/mach/board.h:41:
+	uint32_t appphy;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#67: FILE: arch/arm/mach-msm/include/mach/board.h:42:
+	uint32_t appsz;

WARNING:SPACING: Unnecessary space before function pointer arguments
#71: FILE: arch/arm/mach-msm/include/mach/board.h:46:
+	void (*camera_gpio_on) (void);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#81: FILE: arch/arm/mach-msm/include/mach/board.h:56:
+	void (*config_gpio_on) (void);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#101: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#106: FILE: arch/arm/mach-msm/include/mach/camera.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#123: FILE: arch/arm/mach-msm/include/mach/camera.h:18:
+#define CDBG(fmt, args...) printk(KERN_INFO "msm_camera: " fmt, ##args)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#153: FILE: arch/arm/mach-msm/include/mach/camera.h:48:
+	uint32_t sbuf_phy;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#154: FILE: arch/arm/mach-msm/include/mach/camera.h:49:
+	uint32_t y_phy;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#155: FILE: arch/arm/mach-msm/include/mach/camera.h:50:
+	uint32_t cbcr_phy;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#163: FILE: arch/arm/mach-msm/include/mach/camera.h:58:
+	int32_t extlen;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct msm_vfe_resp *' should also have an identifier name
#167: FILE: arch/arm/mach-msm/include/mach/camera.h:62:
+	void (*vfe_resp)(struct msm_vfe_resp *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#168: FILE: arch/arm/mach-msm/include/mach/camera.h:63:
+	void (*vfe_resp)(struct msm_vfe_resp *,
+		enum msm_queue, void *syncdata);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#169: FILE: arch/arm/mach-msm/include/mach/camera.h:64:
+	void* (*vfe_alloc)(int, void *syncdata);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct msm_vfe_callback *' should also have an identifier name
#173: FILE: arch/arm/mach-msm/include/mach/camera.h:68:
+	int (*vfe_init)(struct msm_vfe_callback *, struct platform_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct platform_device *' should also have an identifier name
#173: FILE: arch/arm/mach-msm/include/mach/camera.h:68:
+	int (*vfe_init)(struct msm_vfe_callback *, struct platform_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct camera_enable_cmd *' should also have an identifier name
#174: FILE: arch/arm/mach-msm/include/mach/camera.h:69:
+	int (*vfe_enable)(struct camera_enable_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct msm_vfe_cfg_cmd *' should also have an identifier name
#175: FILE: arch/arm/mach-msm/include/mach/camera.h:70:
+	int (*vfe_config)(struct msm_vfe_cfg_cmd *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#175: FILE: arch/arm/mach-msm/include/mach/camera.h:70:
+	int (*vfe_config)(struct msm_vfe_cfg_cmd *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct camera_enable_cmd *' should also have an identifier name
#176: FILE: arch/arm/mach-msm/include/mach/camera.h:71:
+	int (*vfe_disable)(struct camera_enable_cmd *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#177: FILE: arch/arm/mach-msm/include/mach/camera.h:72:
+	int (*vfe_disable)(struct camera_enable_cmd *,
+		struct platform_device *dev);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct platform_device *' should also have an identifier name
#178: FILE: arch/arm/mach-msm/include/mach/camera.h:73:
+	void (*vfe_release)(struct platform_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct msm_camera_sensor_info *' should also have an identifier name
#182: FILE: arch/arm/mach-msm/include/mach/camera.h:77:
+	int (*s_init)(const struct msm_camera_sensor_info *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#184: FILE: arch/arm/mach-msm/include/mach/camera.h:79:
+	int (*s_config)(void __user *);

WARNING:REPEATED_WORD: Possible repeated word: 'in'
#202: FILE: arch/arm/mach-msm/include/mach/camera.h:97:
+	/* This queue contains preview frames. It is accessed by the DSP (in
+	 * in interrupt context, and by the frame thread.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#220: FILE: arch/arm/mach-msm/include/mach/camera.h:115:
+	uint8_t opencnt;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#223: FILE: arch/arm/mach-msm/include/mach/camera.h:118:
+	unsigned pict_pp;

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#227: FILE: arch/arm/mach-msm/include/mach/camera.h:122:
+	struct mutex lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#245: FILE: arch/arm/mach-msm/include/mach/camera.h:140:
+	spinlock_t ctrl_status_q_lock;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#267: FILE: arch/arm/mach-msm/include/mach/camera.h:162:
+	uint16_t register_address;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#268: FILE: arch/arm/mach-msm/include/mach/camera.h:163:
+	uint16_t register_value;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#278: FILE: arch/arm/mach-msm/include/mach/camera.h:173:
+	uint32_t y_off;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#279: FILE: arch/arm/mach-msm/include/mach/camera.h:174:
+	uint32_t cbcr_off;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#281: FILE: arch/arm/mach-msm/include/mach/camera.h:176:
+	uint8_t  active;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#285: FILE: arch/arm/mach-msm/include/mach/camera.h:180:
+	uint32_t bufnum1;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#286: FILE: arch/arm/mach-msm/include/mach/camera.h:181:
+	uint32_t bufnum2;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#291: FILE: arch/arm/mach-msm/include/mach/camera.h:186:
+int msm_camera_flash_set_led_state(unsigned led_state);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#293: FILE: arch/arm/mach-msm/include/mach/camera.h:188:
+static inline int msm_camera_flash_set_led_state(unsigned led_state)

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#295: FILE: arch/arm/mach-msm/include/mach/camera.h:190:
+	return -ENOTSUPP;

ENOTSUPP is not a standard error code and should be avoided in new patches.
EOPNOTSUPP should be used instead.

See: https://lore.kernel.org/netdev/20200510182252.GA411829@lunn.ch/

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct msm_sync *' should also have an identifier name
#302: FILE: arch/arm/mach-msm/include/mach/camera.h:197:
+	int (*open)(struct msm_sync *, const char *apps_id);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct msm_sync *' should also have an identifier name
#303: FILE: arch/arm/mach-msm/include/mach/camera.h:198:
+	int (*release)(struct msm_sync *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct msm_sync *' should also have an identifier name
#304: FILE: arch/arm/mach-msm/include/mach/camera.h:199:
+	int (*ctrl)(struct msm_sync *, struct msm_ctrl_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct msm_ctrl_cmd *' should also have an identifier name
#304: FILE: arch/arm/mach-msm/include/mach/camera.h:199:
+	int (*ctrl)(struct msm_sync *, struct msm_ctrl_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct msm_sync *' should also have an identifier name
#305: FILE: arch/arm/mach-msm/include/mach/camera.h:200:
+	int (*reg_pmem)(struct msm_sync *, struct msm_pmem_info *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct msm_pmem_info *' should also have an identifier name
#305: FILE: arch/arm/mach-msm/include/mach/camera.h:200:
+	int (*reg_pmem)(struct msm_sync *, struct msm_pmem_info *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#306: FILE: arch/arm/mach-msm/include/mach/camera.h:201:
+	int (*get_frame) (struct msm_sync *, struct msm_frame *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct msm_sync *' should also have an identifier name
#306: FILE: arch/arm/mach-msm/include/mach/camera.h:201:
+	int (*get_frame) (struct msm_sync *, struct msm_frame *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct msm_frame *' should also have an identifier name
#306: FILE: arch/arm/mach-msm/include/mach/camera.h:201:
+	int (*get_frame) (struct msm_sync *, struct msm_frame *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#307: FILE: arch/arm/mach-msm/include/mach/camera.h:202:
+	int (*put_frame) (struct msm_sync *, struct msm_frame *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct msm_sync *' should also have an identifier name
#307: FILE: arch/arm/mach-msm/include/mach/camera.h:202:
+	int (*put_frame) (struct msm_sync *, struct msm_frame *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct msm_frame *' should also have an identifier name
#307: FILE: arch/arm/mach-msm/include/mach/camera.h:202:
+	int (*put_frame) (struct msm_sync *, struct msm_frame *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#308: FILE: arch/arm/mach-msm/include/mach/camera.h:203:
+	int (*get_pict) (struct msm_sync *, struct msm_ctrl_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct msm_sync *' should also have an identifier name
#308: FILE: arch/arm/mach-msm/include/mach/camera.h:203:
+	int (*get_pict) (struct msm_sync *, struct msm_ctrl_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct msm_ctrl_cmd *' should also have an identifier name
#308: FILE: arch/arm/mach-msm/include/mach/camera.h:203:
+	int (*get_pict) (struct msm_sync *, struct msm_ctrl_cmd *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#309: FILE: arch/arm/mach-msm/include/mach/camera.h:204:
+	unsigned int (*drv_poll) (struct msm_sync *, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct msm_sync *' should also have an identifier name
#309: FILE: arch/arm/mach-msm/include/mach/camera.h:204:
+	unsigned int (*drv_poll) (struct msm_sync *, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#309: FILE: arch/arm/mach-msm/include/mach/camera.h:204:
+	unsigned int (*drv_poll) (struct msm_sync *, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct poll_table_struct *' should also have an identifier name
#309: FILE: arch/arm/mach-msm/include/mach/camera.h:204:
+	unsigned int (*drv_poll) (struct msm_sync *, struct file *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#310: FILE: arch/arm/mach-msm/include/mach/camera.h:205:
+	unsigned int (*drv_poll) (struct msm_sync *, struct file *,
+				struct poll_table_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct msm_v4l2_driver *' should also have an identifier name
#313: FILE: arch/arm/mach-msm/include/mach/camera.h:208:
+int msm_v4l2_register(struct msm_v4l2_driver *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct msm_v4l2_driver *' should also have an identifier name
#314: FILE: arch/arm/mach-msm/include/mach/camera.h:209:
+int msm_v4l2_unregister(struct msm_v4l2_driver *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#317: FILE: arch/arm/mach-msm/include/mach/camera.h:212:
+int msm_camvfe_check(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct msm_camvfe_fn *' should also have an identifier name
#318: FILE: arch/arm/mach-msm/include/mach/camera.h:213:
+void msm_camvfe_fn_init(struct msm_camvfe_fn *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#318: FILE: arch/arm/mach-msm/include/mach/camera.h:213:
+void msm_camvfe_fn_init(struct msm_camvfe_fn *, void *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#320: FILE: arch/arm/mach-msm/include/mach/camera.h:215:
+int msm_camera_drv_start(struct platform_device *dev,
+		int (*sensor_probe)(const struct msm_camera_sensor_info *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#321: FILE: arch/arm/mach-msm/include/mach/camera.h:216:
+		int (*sensor_probe)(const struct msm_camera_sensor_info *,
+					struct msm_sensor_ctrl *));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct platform_device *' should also have an identifier name
#381: FILE: arch/arm/mach-msm/include/mach/camera.h:276:
+void msm_camio_disable(struct platform_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct platform_device *' should also have an identifier name
#382: FILE: arch/arm/mach-msm/include/mach/camera.h:277:
+int msm_camio_probe_on(struct platform_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct platform_device *' should also have an identifier name
#383: FILE: arch/arm/mach-msm/include/mach/camera.h:278:
+int msm_camio_probe_off(struct platform_device *);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#391: FILE: arch/arm/mach-msm/include/mach/gpio.h:1:
+/* linux/include/asm-arm/arch-msm/gpio.h

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#412: FILE: arch/arm/mach-msm/include/mach/gpio.h:22:
+int gpio_request(unsigned gpio, const char *label);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#413: FILE: arch/arm/mach-msm/include/mach/gpio.h:23:
+void gpio_free(unsigned gpio);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#414: FILE: arch/arm/mach-msm/include/mach/gpio.h:24:
+int gpio_direction_input(unsigned gpio);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#415: FILE: arch/arm/mach-msm/include/mach/gpio.h:25:
+int gpio_direction_output(unsigned gpio, int value);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#416: FILE: arch/arm/mach-msm/include/mach/gpio.h:26:
+int gpio_get_value(unsigned gpio);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#417: FILE: arch/arm/mach-msm/include/mach/gpio.h:27:
+void gpio_set_value(unsigned gpio, int value);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#418: FILE: arch/arm/mach-msm/include/mach/gpio.h:28:
+int gpio_to_irq(unsigned gpio);

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#425: FILE: arch/arm/mach-msm/include/mach/gpio.h:35:
+#define GPIOF_IRQF_TRIGGER_NONE 0x00010000 /* IRQF_TRIGGER_NONE is 0 which also means "as already configured" */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#433: FILE: arch/arm/mach-msm/include/mach/gpio.h:43:
+extern int gpio_configure(unsigned int gpio, unsigned long flags);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#434: FILE: arch/arm/mach-msm/include/mach/gpio.h:44:
+extern int gpio_read_detect_status(unsigned int gpio);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#435: FILE: arch/arm/mach-msm/include/mach/gpio.h:45:
+extern int gpio_clear_detect_status(unsigned int gpio);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#444: FILE: arch/arm/mach-msm/include/mach/msm_adsp.h:1:
+/* include/asm-arm/arch-msm/msm_adsp.h

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#470: FILE: arch/arm/mach-msm/include/mach/msm_adsp.h:27:
+	void (*event)(void *driver_data, unsigned id, size_t len,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#489: FILE: arch/arm/mach-msm/include/mach/msm_adsp.h:46:
+		   unsigned queue_id,

CHECK:CAMELCASE: Avoid CamelCase: <QDSP_lpmCommandQueue>
#494: FILE: arch/arm/mach-msm/include/mach/msm_adsp.h:51:
+#define QDSP_lpmCommandQueue              0

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <QDSP_mpuAfeQueue>
#495: FILE: arch/arm/mach-msm/include/mach/msm_adsp.h:52:
+#define QDSP_mpuAfeQueue                  1

CHECK:CAMELCASE: Avoid CamelCase: <QDSP_mpuGraphicsCmdQueue>
#496: FILE: arch/arm/mach-msm/include/mach/msm_adsp.h:53:
+#define QDSP_mpuGraphicsCmdQueue          2

CHECK:CAMELCASE: Avoid CamelCase: <QDSP_mpuModmathCmdQueue>
#497: FILE: arch/arm/mach-msm/include/mach/msm_adsp.h:54:
+#define QDSP_mpuModmathCmdQueue           3

CHECK:CAMELCASE: Avoid CamelCase: <QDSP_mpuVDecCmdQueue>
#498: FILE: arch/arm/mach-msm/include/mach/msm_adsp.h:55:
+#define QDSP_mpuVDecCmdQueue              4

CHECK:CAMELCASE: Avoid CamelCase: <QDSP_mpuVDecPktQueue>
#499: FILE: arch/arm/mach-msm/include/mach/msm_adsp.h:56:
+#define QDSP_mpuVDecPktQueue              5

CHECK:CAMELCASE: Avoid CamelCase: <QDSP_mpuVEncCmdQueue>
#500: FILE: arch/arm/mach-msm/include/mach/msm_adsp.h:57:
+#define QDSP_mpuVEncCmdQueue              6

CHECK:CAMELCASE: Avoid CamelCase: <QDSP_rxMpuDecCmdQueue>
#501: FILE: arch/arm/mach-msm/include/mach/msm_adsp.h:58:
+#define QDSP_rxMpuDecCmdQueue             7

CHECK:CAMELCASE: Avoid CamelCase: <QDSP_rxMpuDecPktQueue>
#502: FILE: arch/arm/mach-msm/include/mach/msm_adsp.h:59:
+#define QDSP_rxMpuDecPktQueue             8

CHECK:CAMELCASE: Avoid CamelCase: <QDSP_txMpuEncQueue>
#503: FILE: arch/arm/mach-msm/include/mach/msm_adsp.h:60:
+#define QDSP_txMpuEncQueue                9

CHECK:CAMELCASE: Avoid CamelCase: <QDSP_uPAudPPCmd1Queue>
#504: FILE: arch/arm/mach-msm/include/mach/msm_adsp.h:61:
+#define QDSP_uPAudPPCmd1Queue             10

CHECK:CAMELCASE: Avoid CamelCase: <QDSP_uPAudPPCmd2Queue>
#505: FILE: arch/arm/mach-msm/include/mach/msm_adsp.h:62:
+#define QDSP_uPAudPPCmd2Queue             11

CHECK:CAMELCASE: Avoid CamelCase: <QDSP_uPAudPPCmd3Queue>
#506: FILE: arch/arm/mach-msm/include/mach/msm_adsp.h:63:
+#define QDSP_uPAudPPCmd3Queue             12

CHECK:CAMELCASE: Avoid CamelCase: <QDSP_uPAudPlay0BitStreamCtrlQueue>
#507: FILE: arch/arm/mach-msm/include/mach/msm_adsp.h:64:
+#define QDSP_uPAudPlay0BitStreamCtrlQueue 13

CHECK:CAMELCASE: Avoid CamelCase: <QDSP_uPAudPlay1BitStreamCtrlQueue>
#508: FILE: arch/arm/mach-msm/include/mach/msm_adsp.h:65:
+#define QDSP_uPAudPlay1BitStreamCtrlQueue 14

CHECK:CAMELCASE: Avoid CamelCase: <QDSP_uPAudPlay2BitStreamCtrlQueue>
#509: FILE: arch/arm/mach-msm/include/mach/msm_adsp.h:66:
+#define QDSP_uPAudPlay2BitStreamCtrlQueue 15

CHECK:CAMELCASE: Avoid CamelCase: <QDSP_uPAudPlay3BitStreamCtrlQueue>
#510: FILE: arch/arm/mach-msm/include/mach/msm_adsp.h:67:
+#define QDSP_uPAudPlay3BitStreamCtrlQueue 16

CHECK:CAMELCASE: Avoid CamelCase: <QDSP_uPAudPlay4BitStreamCtrlQueue>
#511: FILE: arch/arm/mach-msm/include/mach/msm_adsp.h:68:
+#define QDSP_uPAudPlay4BitStreamCtrlQueue 17

CHECK:CAMELCASE: Avoid CamelCase: <QDSP_uPAudPreProcCmdQueue>
#512: FILE: arch/arm/mach-msm/include/mach/msm_adsp.h:69:
+#define QDSP_uPAudPreProcCmdQueue         18

CHECK:CAMELCASE: Avoid CamelCase: <QDSP_uPAudRecBitStreamQueue>
#513: FILE: arch/arm/mach-msm/include/mach/msm_adsp.h:70:
+#define QDSP_uPAudRecBitStreamQueue       19

CHECK:CAMELCASE: Avoid CamelCase: <QDSP_uPAudRecCmdQueue>
#514: FILE: arch/arm/mach-msm/include/mach/msm_adsp.h:71:
+#define QDSP_uPAudRecCmdQueue             20

CHECK:CAMELCASE: Avoid CamelCase: <QDSP_uPDiagQueue>
#515: FILE: arch/arm/mach-msm/include/mach/msm_adsp.h:72:
+#define QDSP_uPDiagQueue                  21

CHECK:CAMELCASE: Avoid CamelCase: <QDSP_uPJpegActionCmdQueue>
#516: FILE: arch/arm/mach-msm/include/mach/msm_adsp.h:73:
+#define QDSP_uPJpegActionCmdQueue         22

CHECK:CAMELCASE: Avoid CamelCase: <QDSP_uPJpegCfgCmdQueue>
#517: FILE: arch/arm/mach-msm/include/mach/msm_adsp.h:74:
+#define QDSP_uPJpegCfgCmdQueue            23

CHECK:CAMELCASE: Avoid CamelCase: <QDSP_uPVocProcQueue>
#518: FILE: arch/arm/mach-msm/include/mach/msm_adsp.h:75:
+#define QDSP_uPVocProcQueue               24

CHECK:CAMELCASE: Avoid CamelCase: <QDSP_vfeCommandQueue>
#519: FILE: arch/arm/mach-msm/include/mach/msm_adsp.h:76:
+#define QDSP_vfeCommandQueue              25

CHECK:CAMELCASE: Avoid CamelCase: <QDSP_vfeCommandScaleQueue>
#520: FILE: arch/arm/mach-msm/include/mach/msm_adsp.h:77:
+#define QDSP_vfeCommandScaleQueue         26

CHECK:CAMELCASE: Avoid CamelCase: <QDSP_vfeCommandTableQueue>
#521: FILE: arch/arm/mach-msm/include/mach/msm_adsp.h:78:
+#define QDSP_vfeCommandTableQueue         27

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#607: FILE: include/linux/android_pmem.h:1:
+/* include/linux/android_pmem.h

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#607: FILE: include/linux/android_pmem.h:1:
+/* include/linux/android_pmem.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#616: FILE: include/linux/android_pmem.h:10:
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#632: FILE: include/linux/android_pmem.h:26:
+ * to the ioctl */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#639: FILE: include/linux/android_pmem.h:33:
+ * struct (with offset set to 0). $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#650: FILE: include/linux/android_pmem.h:44:
+		  unsigned long *end, struct file **filp);
 		                                    ^^^^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#653: FILE: include/linux/android_pmem.h:47:
+void put_pmem_file(struct file* file);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#657: FILE: include/linux/android_pmem.h:51:
+struct android_pmem_platform_data
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#658: FILE: include/linux/android_pmem.h:52:
+	const char* name;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#664: FILE: include/linux/android_pmem.h:58:
+	unsigned no_allocator;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#667: FILE: include/linux/android_pmem.h:61:
+	 * O_SYNC to get an uncached region */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#668: FILE: include/linux/android_pmem.h:62:
+	unsigned cached;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#670: FILE: include/linux/android_pmem.h:64:
+	unsigned buffered;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#683: FILE: include/linux/android_pmem.h:77:
+	       unsigned operation);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#693: FILE: include/linux/msm_adsp.h:1:
+/* include/linux/msm_adsp.h

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#693: FILE: include/linux/msm_adsp.h:1:
+/* include/linux/msm_adsp.h

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#719: FILE: include/linux/msm_adsp.h:27:
+	uint16_t queue;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#720: FILE: include/linux/msm_adsp.h:28:
+	uint32_t len;		/* bytes */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#721: FILE: include/linux/msm_adsp.h:29:
+	uint8_t *data;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#726: FILE: include/linux/msm_adsp.h:34:
+	uint16_t type;		/* 1 == event (RPC), 0 == message (adsp) */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#727: FILE: include/linux/msm_adsp.h:35:
+	uint32_t timeout_ms;	/* -1 for infinite, 0 for immediate return */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#728: FILE: include/linux/msm_adsp.h:36:
+	uint16_t msg_id;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#729: FILE: include/linux/msm_adsp.h:37:
+	uint16_t flags;		/* 1 == 16--bit event, 0 == 32-bit event */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#730: FILE: include/linux/msm_adsp.h:38:
+	uint32_t len;		/* size in, number of bytes out */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#731: FILE: include/linux/msm_adsp.h:39:
+	uint8_t *data;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#735: FILE: include/linux/msm_adsp.h:43:
+	_IOR(ADSP_IOCTL_MAGIC, 1, unsigned)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#738: FILE: include/linux/msm_adsp.h:46:
+	_IOR(ADSP_IOCTL_MAGIC, 2, unsigned)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#741: FILE: include/linux/msm_adsp.h:49:
+	_IOR(ADSP_IOCTL_MAGIC, 3, unsigned)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#750: FILE: include/linux/msm_adsp.h:58:
+	_IOR(ADSP_IOCTL_MAGIC, 6, unsigned)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#753: FILE: include/linux/msm_adsp.h:61:
+	_IOR(ADSP_IOCTL_MAGIC, 10, unsigned)

ERROR:CODE_INDENT: code indent should use tabs where possible
#756: FILE: include/linux/msm_adsp.h:64:
+        int fd;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#756: FILE: include/linux/msm_adsp.h:64:
+        int fd;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#757: FILE: include/linux/msm_adsp.h:65:
+        void *vaddr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#757: FILE: include/linux/msm_adsp.h:65:
+        void *vaddr;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#761: FILE: include/linux/msm_adsp.h:69:
+	_IOW(ADSP_IOCTL_MAGIC, 13, unsigned)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#764: FILE: include/linux/msm_adsp.h:72:
+	_IOW(ADSP_IOCTL_MAGIC, 14, unsigned)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#771: FILE: include/linux/msm_adsp.h:79:
+	_IOW(ADSP_IOCTL_MAGIC, 15, unsigned)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#774: FILE: include/linux/msm_adsp.h:82:
+	_IOW(ADSP_IOCTL_MAGIC, 16, unsigned)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#783: FILE: include/media/msm_camera.h:1:
+/*

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#802: FILE: include/media/msm_camera.h:20:
+	_IOW(MSM_CAM_IOCTL_MAGIC, 3, unsigned)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#863: FILE: include/media/msm_camera.h:81:
+	_IOW(MSM_CAM_IOCTL_MAGIC, 22, unsigned *)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#890: FILE: include/media/msm_camera.h:108:
+	uint16_t type;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#891: FILE: include/media/msm_camera.h:109:
+	uint16_t length;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#893: FILE: include/media/msm_camera.h:111:
+	uint16_t status;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#894: FILE: include/media/msm_camera.h:112:
+	uint32_t timeout_ms;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#914: FILE: include/media/msm_camera.h:132:
+	 * 2 - V4L control or read request */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#925: FILE: include/media/msm_camera.h:143:
+	 * 1 - sensor config, 2 - vfe config */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#926: FILE: include/media/msm_camera.h:144:
+	uint16_t cfg_type;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#929: FILE: include/media/msm_camera.h:147:
+	uint16_t cmd_type;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#930: FILE: include/media/msm_camera.h:148:
+	uint16_t queue;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#931: FILE: include/media/msm_camera.h:149:
+	uint16_t length;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#958: FILE: include/media/msm_camera.h:176:
+	uint16_t length;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#988: FILE: include/media/msm_camera.h:206:
+	uint32_t y_off;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#989: FILE: include/media/msm_camera.h:207:
+	uint32_t cbcr_off;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#990: FILE: include/media/msm_camera.h:208:
+	uint8_t active;

CHECK:CAMELCASE: Avoid CamelCase: <outputCfg>
#993: FILE: include/media/msm_camera.h:211:
+struct outputCfg {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#994: FILE: include/media/msm_camera.h:212:
+	uint32_t height;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#995: FILE: include/media/msm_camera.h:213:
+	uint32_t width;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#997: FILE: include/media/msm_camera.h:215:
+	uint32_t window_height_firstline;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#998: FILE: include/media/msm_camera.h:216:
+	uint32_t window_height_lastline;

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1007: FILE: include/media/msm_camera.h:225:
+#define LAST_AXI_OUTPUT_MODE_ENUM = OUTPUT_2_AND_CAMIF_TO_AXI_VIA_OUTPUT_1 6

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1016: FILE: include/media/msm_camera.h:234:
+	uint32_t y_off;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1017: FILE: include/media/msm_camera.h:235:
+	uint32_t cbcr_off;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1116: FILE: include/media/msm_camera.h:334:
+	uint16_t prevfps;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1117: FILE: include/media/msm_camera.h:335:
+	uint16_t pictfps;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1121: FILE: include/media/msm_camera.h:339:
+	uint16_t gain;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1122: FILE: include/media/msm_camera.h:340:
+	uint32_t line;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#1126: FILE: include/media/msm_camera.h:344:
+	int32_t steps;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1131: FILE: include/media/msm_camera.h:349:
+	uint16_t f_mult;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1132: FILE: include/media/msm_camera.h:350:
+	uint16_t fps_div;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1133: FILE: include/media/msm_camera.h:351:
+	uint32_t pict_fps_div;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1140: FILE: include/media/msm_camera.h:358:
+	uint8_t max_steps;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's8' over 'int8_t'
#1143: FILE: include/media/msm_camera.h:361:
+		int8_t effect;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1144: FILE: include/media/msm_camera.h:362:
+		uint8_t lens_shading;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1145: FILE: include/media/msm_camera.h:363:
+		uint16_t prevl_pf;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1146: FILE: include/media/msm_camera.h:364:
+		uint16_t prevp_pl;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1147: FILE: include/media/msm_camera.h:365:
+		uint16_t pictl_pf;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1148: FILE: include/media/msm_camera.h:366:
+		uint16_t pictp_pl;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1149: FILE: include/media/msm_camera.h:367:
+		uint32_t pict_max_exp_lc;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1150: FILE: include/media/msm_camera.h:368:
+		uint16_t p_fps;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1168: FILE: include/media/msm_camera.h:386:
+	uint8_t flash_enabled;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000073212.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 88 warnings, 100 checks, 1066 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000073212.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
