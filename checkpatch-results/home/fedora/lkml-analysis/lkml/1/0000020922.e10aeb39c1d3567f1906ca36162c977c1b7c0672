WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
Removed legacy XEN layer from hypervisor setup, and made sure only Hyper-V is

WARNING:BAD_SIGN_OFF: Unexpected content after email: 'Haiyang Zhang <haiyangz@microsoft.com>.', should be: 'Haiyang Zhang <haiyangz@microsoft.com>'
#41: 
Cc: Haiyang Zhang <haiyangz@microsoft.com>.

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:CAMELCASE: Avoid CamelCase: <gHvContext>
#66: FILE: drivers/staging/hv/Hv.c:215:
+	if (gHvContext.GuestId != 0) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <GuestId>
#66: FILE: drivers/staging/hv/Hv.c:215:
+	if (gHvContext.GuestId != 0) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#68: FILE: drivers/staging/hv/Hv.c:217:
+		DPRINT_ERR(VMBUS, "Unknown guest id (0x%llx)!!",
+				gHvContext.GuestId);

CHECK:CAMELCASE: Avoid CamelCase: <Cleanup>
#69: FILE: drivers/staging/hv/Hv.c:218:
+		goto Cleanup;

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#95: FILE: drivers/staging/hv/Hv.c:229:
+	/*
+	* Allocate the hypercall page memory

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:CAMELCASE: Avoid CamelCase: <virtAddr>
#98: FILE: drivers/staging/hv/Hv.c:232:
+	virtAddr = osd_VirtualAllocExec(PAGE_SIZE);

CHECK:CAMELCASE: Avoid CamelCase: <osd_VirtualAllocExec>
#98: FILE: drivers/staging/hv/Hv.c:232:
+	virtAddr = osd_VirtualAllocExec(PAGE_SIZE);

CHECK:CAMELCASE: Avoid CamelCase: <hypercallMsr>
#117: FILE: drivers/staging/hv/Hv.c:240:
+	hypercallMsr.Enable = 1;

CHECK:CAMELCASE: Avoid CamelCase: <Enable>
#117: FILE: drivers/staging/hv/Hv.c:240:
+	hypercallMsr.Enable = 1;

CHECK:CAMELCASE: Avoid CamelCase: <GuestPhysicalAddress>
#119: FILE: drivers/staging/hv/Hv.c:242:
+	hypercallMsr.GuestPhysicalAddress = vmalloc_to_pfn(virtAddr);

CHECK:CAMELCASE: Avoid CamelCase: <AsUINT64>
#120: FILE: drivers/staging/hv/Hv.c:243:
+	wrmsrl(HV_X64_MSR_HYPERCALL, hypercallMsr.AsUINT64);

CHECK:CAMELCASE: Avoid CamelCase: <HypercallPage>
#131: FILE: drivers/staging/hv/Hv.c:254:
+	gHvContext.HypercallPage = virtAddr;

CHECK:CAMELCASE: Avoid CamelCase: <synICMessagePage>
#216: FILE: drivers/staging/hv/Hv.c:408:
+	gHvContext.synICMessagePage[cpu] = (void *)get_zeroed_page(GFP_ATOMIC);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!gHvContext.synICMessagePage[cpu]"
#224: FILE: drivers/staging/hv/Hv.c:410:
+	if (gHvContext.synICMessagePage[cpu] == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:CAMELCASE: Avoid CamelCase: <synICEventPage>
#235: FILE: drivers/staging/hv/Hv.c:416:
+	gHvContext.synICEventPage[cpu] = (void *)get_zeroed_page(GFP_ATOMIC);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!gHvContext.synICEventPage[cpu]"
#239: FILE: drivers/staging/hv/Hv.c:418:
+	if (gHvContext.synICEventPage[cpu] == NULL) {

CHECK:CAMELCASE: Avoid CamelCase: <SimpEnabled>
#248: FILE: drivers/staging/hv/Hv.c:426:
+	simp.SimpEnabled = 1;

CHECK:CAMELCASE: Avoid CamelCase: <BaseSimpGpa>
#249: FILE: drivers/staging/hv/Hv.c:427:
+	simp.BaseSimpGpa = virt_to_phys(gHvContext.synICMessagePage[cpu])

CHECK:CAMELCASE: Avoid CamelCase: <SiefpEnabled>
#267: FILE: drivers/staging/hv/Hv.c:436:
+	siefp.SiefpEnabled = 1;

CHECK:CAMELCASE: Avoid CamelCase: <BaseSiefpGpa>
#268: FILE: drivers/staging/hv/Hv.c:437:
+	siefp.BaseSiefpGpa = virt_to_phys(gHvContext.synICEventPage[cpu])

CHECK:CAMELCASE: Avoid CamelCase: <osd_PageFree>
#285: FILE: drivers/staging/hv/Hv.c:475:
+		osd_PageFree(gHvContext.synICEventPage[cpu], 1);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#356: FILE: drivers/staging/hv/Hv.h:101:
+	/* We only support running on top of Hyper-V
+	* So at this point this really can only contain the Hyper-V ID

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000020922.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 20 checks, 296 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000020922.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
