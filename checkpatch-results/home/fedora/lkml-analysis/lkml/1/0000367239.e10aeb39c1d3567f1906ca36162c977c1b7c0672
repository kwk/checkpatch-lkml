WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
wait_on_work() - uses the barrier to wait on the completion of the currently

CHECK:BRACES: braces {} should be used on all arms of this statement
#125: FILE: lib/plist.c:95:
+	if (likely(tail))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#127: FILE: lib/plist.c:97:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#129: FILE: lib/plist.c:99:
+		iter = list_entry(iter->plist.prio_list.prev,
+				struct plist_node, plist.prio_list);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#199: FILE: kernel/workqueue.c:265:
+^Istruct wq_full_barrier ^I^I*prev_barrier;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#201: FILE: kernel/workqueue.c:267:
+^Istruct cpu_workqueue_struct ^I*cwq;$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#255: FILE: kernel/workqueue.c:322:
+		BUG_ON(!barrier);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: braces {} should be used on all arms of this statement
#287: FILE: kernel/workqueue.c:399:
+	if (cwq->barrier) {
[...]
+	} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#289: FILE: kernel/workqueue.c:401:
+		barrier->prev_prio = min(cwq->barrier->prev_prio,
+				plist_first(&cwq->barrier->worklist)->prio);

CHECK:BRACES: Unbalanced braces around else statement
#290: FILE: kernel/workqueue.c:402:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#297: FILE: kernel/workqueue.c:409:
+static void insert_wq_full_barrier(struct cpu_workqueue_struct *cwq,
+		struct wq_full_barrier *barr)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000367239.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 7 checks, 229 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000367239.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
