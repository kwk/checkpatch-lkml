WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#63: 
   git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip.git x86-v28-for-linus-phase4-B

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#383: FILE: arch/x86/Kconfig:1692:
+config INTR_REMAP
+	bool "Support for Interrupt Remapping (EXPERIMENTAL)"
+	depends on X86_64 && X86_IO_APIC && PCI_MSI && ACPI && EXPERIMENTAL
+	help
+	 Supports Interrupt remapping for IO-APIC and MSI devices.
+	 To use x2apic mode in the CPU's which support x2APIC enhancements or
+	 to support platforms with CPU's having > 8 bit APIC ID, say Y.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#396: 
rename from arch/x86/mach-es7000/Makefile

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'VALUE' may be better as '(VALUE)' to avoid precedence issues
#428: FILE: arch/x86/es7000/es7000.h:44:
+#define	MIP_RD_LO(VALUE)	(VALUE & 0xffffffff)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'VALUE' may be better as '(VALUE)' to avoid precedence issues
#466: FILE: arch/x86/es7000/es7000.h:109:
+#define	MIP_FUNC(VALUE)		(VALUE & 0xff)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'gsi < 16'
#482: FILE: arch/x86/es7000/es7000plat.c:75:
+	if (!ioapic && (gsi < 16))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#764: FILE: arch/x86/kernel/apic_32.c:617:
+		printk(KERN_INFO "Disabling APIC timer\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#875: FILE: arch/x86/kernel/apic_32.c:854:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#944: FILE: arch/x86/kernel/apic_32.c:999:
+			printk(KERN_INFO "Leaving ESR disabled.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#964: FILE: arch/x86/kernel/apic_32.c:1022:
+		printk(KERN_INFO "No ESR for 82489DX.\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1313: FILE: arch/x86/kernel/apic_32.c:1743:
 }
+early_param("disableapic", setup_disableapic);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1324: FILE: arch/x86/kernel/apic_32.c:1750:
 }
+early_param("nolapic", setup_nolapic);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1337: FILE: arch/x86/kernel/apic_32.c:1764:
+}
+early_param("noapictimer", parse_disable_apic_timer);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1344: FILE: arch/x86/kernel/apic_32.c:1771:
+}
+early_param("nolapic_timer", parse_nolapic_timer);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1359: FILE: arch/x86/kernel/apic_32.c:1784:
+	if (strcmp("debug", arg) == 0)
[...]
-	else if (strcmp(arg, "verbose") == 0)
[...]
 		apic_verbosity = APIC_VERBOSE;
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1364: FILE: arch/x86/kernel/apic_32.c:1788:
+	else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1365: FILE: arch/x86/kernel/apic_32.c:1789:
+		printk(KERN_WARNING "APIC Verbosity level %s not recognised"

WARNING:SPLIT_STRING: quoted string split across lines
#1366: FILE: arch/x86/kernel/apic_32.c:1790:
+		printk(KERN_WARNING "APIC Verbosity level %s not recognised"
+			" use apic=verbose or apic=debug\n", arg);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:RETURN_VOID: void function return statements are not generally useful
#1489: FILE: arch/x86/kernel/apic_64.c:195:
+	return;
+}

CHECK:SPACING: No space is necessary after a cast
#1499: FILE: arch/x86/kernel/apic_64.c:205:
+	wrmsrl(APIC_BASE_MSR + (APIC_ICR >> 4), ((__u64) id) << 32 | low);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1592: FILE: arch/x86/kernel/apic_64.c:298:
+	apic_write(APIC_TDCR,
+		(tmp_value & ~(APIC_TDR_DIV_1 | APIC_TDR_DIV_TMBASE)) |

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'boot_cpu_data.x86_vendor == X86_VENDOR_INTEL'
#1794: FILE: arch/x86/kernel/apic_64.c:854:
+	if ((boot_cpu_data.x86_vendor == X86_VENDOR_INTEL) &&
+	    (boot_cpu_data.x86 == 15))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'boot_cpu_data.x86 == 15'
#1794: FILE: arch/x86/kernel/apic_64.c:854:
+	if ((boot_cpu_data.x86_vendor == X86_VENDOR_INTEL) &&
+	    (boot_cpu_data.x86 == 15))

WARNING:LINE_SPACING: Missing a blank line after declarations
#1815: FILE: arch/x86/kernel/apic_64.c:876:
+	unsigned long oldvalue, value, maxlvt;
+	if (lapic_is_integrated() && !esr_disable) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1823: FILE: arch/x86/kernel/apic_64.c:884:
+			printk(KERN_INFO "Leaving ESR disabled.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#1843: FILE: arch/x86/kernel/apic_64.c:904:
+			apic_printk(APIC_VERBOSE, "ESR value before enabling "
+				"vector: 0x%08lx  after: 0x%08lx\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1846: FILE: arch/x86/kernel/apic_64.c:907:
+		printk(KERN_INFO "No ESR for 82489DX.\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1850: FILE: arch/x86/kernel/apic_64.c:911:
+
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1895: FILE: arch/x86/kernel/apic_64.c:1042:
+		printk("x2apic enabled by BIOS, switching to x2apic ops\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1896: FILE: arch/x86/kernel/apic_64.c:1043:
+		x2apic_preenabled = x2apic = 1;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1907: FILE: arch/x86/kernel/apic_64.c:1054:
+		printk("Enabling x2apic\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1922: FILE: arch/x86/kernel/apic_64.c:1069:
+		printk(KERN_INFO

WARNING:SPLIT_STRING: quoted string split across lines
#1924: FILE: arch/x86/kernel/apic_64.c:1071:
+		       "Skipped enabling x2apic and Interrupt-remapping "
+		       "because of nox2apic\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1932: FILE: arch/x86/kernel/apic_64.c:1079:
+		printk(KERN_INFO

WARNING:SPLIT_STRING: quoted string split across lines
#1934: FILE: arch/x86/kernel/apic_64.c:1081:
+		       "Skipped enabling x2apic and Interrupt-remapping "
+		       "because of skipping io-apic setup\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1940: FILE: arch/x86/kernel/apic_64.c:1087:
+		printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1946: FILE: arch/x86/kernel/apic_64.c:1093:
+			printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1984: FILE: arch/x86/kernel/apic_64.c:1131:
+			printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1987: FILE: arch/x86/kernel/apic_64.c:1134:
+			printk(KERN_INFO

CHECK:BRACES: Unbalanced braces around else statement
#1989: FILE: arch/x86/kernel/apic_64.c:1136:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1990: FILE: arch/x86/kernel/apic_64.c:1137:
+		printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#1998: FILE: arch/x86/kernel/apic_64.c:1145:
+		panic("x2apic enabled prior OS handover,"
+		      " enable CONFIG_INTR_REMAP");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2000: FILE: arch/x86/kernel/apic_64.c:1147:
+	printk(KERN_INFO "Enable CONFIG_INTR_REMAP for enabling intr-remapping "

WARNING:SPLIT_STRING: quoted string split across lines
#2001: FILE: arch/x86/kernel/apic_64.c:1148:
+	printk(KERN_INFO "Enable CONFIG_INTR_REMAP for enabling intr-remapping "
+	       " and x2apic\n");

WARNING:RETURN_VOID: void function return statements are not generally useful
#2005: FILE: arch/x86/kernel/apic_64.c:1152:
+	return;
+}

WARNING:SPLIT_STRING: quoted string split across lines
#2079: FILE: arch/x86/kernel/apic_64.c:1350:
+		apic_printk(APIC_VERBOSE, "leaving PIC mode, "
+				"enabling APIC mode.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#2107: FILE: arch/x86/kernel/apic_64.c:1378:
+		apic_printk(APIC_VERBOSE, "disabling APIC mode, "
+				"entering PIC mode.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2139: FILE: arch/x86/kernel/apic_64.c:1433:
+		printk(KERN_WARNING "BIOS bug, APIC version is 0 for CPU#%d! "

WARNING:SPLIT_STRING: quoted string split across lines
#2140: FILE: arch/x86/kernel/apic_64.c:1434:
+		printk(KERN_WARNING "BIOS bug, APIC version is 0 for CPU#%d! "
+				"fixing up to 0x10. (tell your hw vendor)\n",

WARNING:SPLIT_STRING: quoted string split across lines
#2149: FILE: arch/x86/kernel/apic_64.c:1442:
 		printk(KERN_WARNING "WARNING: NR_CPUS limit of %i reached."
+			"  Processor ignored.\n", NR_CPUS);

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#2149: FILE: arch/x86/kernel/apic_64.c:1442:
+			"  Processor ignored.\n", NR_CPUS);

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#2172: FILE: arch/x86/kernel/apic_64.c:1477:
+			/* If P4 and above fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2324: FILE: arch/x86/kernel/apic_64.c:1752:
 }
+early_param("nox2apic", setup_nox2apic);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2361: FILE: arch/x86/kernel/apic_64.c:1785:
 }
+early_param("noapictimer", parse_disable_apic_timer);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2368: FILE: arch/x86/kernel/apic_64.c:1792:
+}
+early_param("nolapic_timer", parse_nolapic_timer);

CHECK:BRACES: braces {} should be used on all arms of this statement
#2387: FILE: arch/x86/kernel/apic_64.c:1813:
+	if (strcmp("debug", arg) == 0)
[...]
+	else if (strcmp("verbose", arg) == 0)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2391: FILE: arch/x86/kernel/apic_64.c:1817:
+	else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2392: FILE: arch/x86/kernel/apic_64.c:1818:
+		printk(KERN_WARNING "APIC Verbosity level %s not recognised"

WARNING:SPLIT_STRING: quoted string split across lines
#2393: FILE: arch/x86/kernel/apic_64.c:1819:
+		printk(KERN_WARNING "APIC Verbosity level %s not recognised"
+			" use apic=verbose or apic=debug\n", arg);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2399: FILE: arch/x86/kernel/apic_64.c:1825:
+}
+early_param("apic", apic_set_verbosity);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2450: FILE: arch/x86/kernel/genapic_64.c:26:
+extern struct genapic apic_physflat;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2451: FILE: arch/x86/kernel/genapic_64.c:27:
+extern struct genapic apic_x2xpic_uv_x;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2452: FILE: arch/x86/kernel/genapic_64.c:28:
+extern struct genapic apic_x2apic_phys;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2453: FILE: arch/x86/kernel/genapic_64.c:29:
+extern struct genapic apic_x2apic_cluster;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2499: FILE: arch/x86/kernel/genapic_64.c:54:
+		printk(KERN_INFO "Setting APIC routing to %s\n", genapic->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2525: FILE: arch/x86/kernel/genapic_64.c:72:
+			printk(KERN_INFO "Setting APIC routing to %s.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2526: FILE: arch/x86/kernel/genapic_64.c:73:
+			printk(KERN_INFO "Setting APIC routing to %s.\n",
+				genapic->name);

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#2587: FILE: arch/x86/kernel/genapic_flat_64.c:113:
+	id = (((x)>>24) & 0xFFu);
 	          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2595: FILE: arch/x86/kernel/genapic_flat_64.c:121:
+	x = ((id & 0xFFu)<<24);
 	                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2631: FILE: arch/x86/kernel/genapic_flat_64.c:165:
+	.apic_id_mask = (0xFFu<<24),
 	                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2648: FILE: arch/x86/kernel/genapic_flat_64.c:182:
+	if (acpi_gbl_FADT.header.revision > FADT2_REVISION_ID &&
+		(acpi_gbl_FADT.flags & ACPI_FADT_APIC_PHYSICAL))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2674: FILE: arch/x86/kernel/genapic_flat_64.c:249:
+	.apic_id_mask = (0xFFu<<24),
 	                      ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2682: FILE: arch/x86/kernel/genx2apic_cluster.c:1:
+#include <linux/threads.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/smp.h> instead of <asm/smp.h>
#2690: FILE: arch/x86/kernel/genx2apic_cluster.c:9:
+#include <asm/smp.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:LINE_SPACING: Missing a blank line after declarations
#2717: FILE: arch/x86/kernel/genx2apic_cluster.c:36:
+	cpumask_t domain = CPU_MASK_NONE;
+	cpu_set(cpu, domain);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2782: FILE: arch/x86/kernel/genx2apic_cluster.c:101:
+	if ((unsigned)cpu < NR_CPUS)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#2782: FILE: arch/x86/kernel/genx2apic_cluster.c:101:
+	if ((unsigned)cpu < NR_CPUS)

WARNING:RETURN_VOID: void function return statements are not generally useful
#2825: FILE: arch/x86/kernel/genx2apic_cluster.c:144:
+	return;
+}

CHECK:CAMELCASE: Avoid CamelCase: <dest_LowestPrio>
#2830: FILE: arch/x86/kernel/genx2apic_cluster.c:149:
+	.int_delivery_mode = dest_LowestPrio,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2852: FILE: arch/x86/kernel/genx2apic_phys.c:1:
+#include <linux/threads.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/smp.h> instead of <asm/smp.h>
#2860: FILE: arch/x86/kernel/genx2apic_phys.c:9:
+#include <asm/smp.h>

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2871: FILE: arch/x86/kernel/genx2apic_phys.c:20:
+}
+early_param("x2apic_phys", set_x2apic_phys_mode);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2891: FILE: arch/x86/kernel/genx2apic_phys.c:40:
+	cpumask_t domain = CPU_MASK_NONE;
+	cpu_set(cpu, domain);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2950: FILE: arch/x86/kernel/genx2apic_phys.c:99:
+	if ((unsigned)cpu < NR_CPUS)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#2950: FILE: arch/x86/kernel/genx2apic_phys.c:99:
+	if ((unsigned)cpu < NR_CPUS)

WARNING:RETURN_VOID: void function return statements are not generally useful
#2990: FILE: arch/x86/kernel/genx2apic_phys.c:139:
+	return;
+}

CHECK:CAMELCASE: Avoid CamelCase: <dest_Fixed>
#2995: FILE: arch/x86/kernel/genx2apic_phys.c:144:
+	.int_delivery_mode = dest_Fixed,

CHECK:BRACES: braces {} should be used on all arms of this statement
#3040: FILE: arch/x86/kernel/genx2apic_uv_x.c:36:
+		if (!strcmp(oem_table_id, "UVL"))
[...]
+		else if (!strcmp(oem_table_id, "UVX"))
[...]
+		else if (!strcmp(oem_table_id, "UVH")) {
[...]

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#3102: FILE: arch/x86/kernel/genx2apic_uv_x.c:196:
+{
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3141: FILE: arch/x86/kernel/genx2apic_uv_x.c:469:
+
+

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3190: FILE: arch/x86/kernel/io_apic_32.c:54:
+#define __apicdebuginit(type) static type __init

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3200: FILE: arch/x86/kernel/io_apic_32.c:1347:
 
+

CHECK:SPACING: No space is necessary after a cast
#3201: FILE: arch/x86/kernel/io_apic_32.c:1348:
+__apicdebuginit(void) print_IO_APIC(void)

CHECK:SPACING: No space is necessary after a cast
#3212: FILE: arch/x86/kernel/io_apic_32.c:1463:
+__apicdebuginit(void) print_APIC_bitfield(int base)

CHECK:SPACING: No space is necessary after a cast
#3221: FILE: arch/x86/kernel/io_apic_32.c:1484:
+__apicdebuginit(void) print_local_APIC(void *dummy)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3246: FILE: arch/x86/kernel/io_apic_32.c:1539:
+	printk(KERN_DEBUG "... APIC ICR: %08x\n", icr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3247: FILE: arch/x86/kernel/io_apic_32.c:1540:
+	printk(KERN_DEBUG "... APIC ICR2: %08x\n", icr >> 32);

CHECK:SPACING: No space is necessary after a cast
#3256: FILE: arch/x86/kernel/io_apic_32.c:1568:
+__apicdebuginit(void) print_all_local_APICs(void)

CHECK:CAMELCASE: Avoid CamelCase: <print_all_local_APICs>
#3256: FILE: arch/x86/kernel/io_apic_32.c:1568:
+__apicdebuginit(void) print_all_local_APICs(void)

CHECK:SPACING: No space is necessary after a cast
#3262: FILE: arch/x86/kernel/io_apic_32.c:1573:
+__apicdebuginit(void) print_PIC(void)

CHECK:SPACING: No space is necessary after a cast
#3271: FILE: arch/x86/kernel/io_apic_32.c:1605:
+__apicdebuginit(int) print_all_ICs(void)

CHECK:CAMELCASE: Avoid CamelCase: <print_all_ICs>
#3271: FILE: arch/x86/kernel/io_apic_32.c:1605:
+__apicdebuginit(int) print_all_ICs(void)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3337: FILE: arch/x86/kernel/io_apic_64.c:58:
+#define __apicdebuginit(type) static type __init

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3371: FILE: arch/x86/kernel/io_apic_64.c:316:
+			io_apic_write(apic, 0x11 + pin*2, dest);
 			                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3395: FILE: arch/x86/kernel/io_apic_64.c:469:
+		nr_ioapic_registers[apic] = reg_01.bits.entries+1;
 		                                               ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#3399: FILE: arch/x86/kernel/io_apic_64.c:473:
+		early_ioapic_entries[apic] =
+			kzalloc(sizeof(struct IO_APIC_route_entry) *
+				nr_ioapic_registers[apic], GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#3410: FILE: arch/x86/kernel/io_apic_64.c:484:
+			entry = early_ioapic_entries[apic][pin] =

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3494: FILE: arch/x86/kernel/io_apic_64.c:956:
+	memset(entry,0,sizeof(*entry));
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3494: FILE: arch/x86/kernel/io_apic_64.c:956:
+	memset(entry,0,sizeof(*entry));
 	              ^

CHECK:SPACING: No space is necessary after a cast
#3501: FILE: arch/x86/kernel/io_apic_64.c:963:
+			(struct IR_IO_APIC_route_entry *) entry;

CHECK:BRACES: Unbalanced braces around else statement
#3526: FILE: arch/x86/kernel/io_apic_64.c:988:
+	} else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3573: FILE: arch/x86/kernel/io_apic_64.c:1035:
+		printk("Failed to setup ioapic entry for ioapic  %d, pin %d\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3596: FILE: arch/x86/kernel/io_apic_64.c:1120:
 
+

CHECK:SPACING: No space is necessary after a cast
#3597: FILE: arch/x86/kernel/io_apic_64.c:1121:
+__apicdebuginit(void) print_IO_APIC(void)

CHECK:SPACING: No space is necessary after a cast
#3608: FILE: arch/x86/kernel/io_apic_64.c:1215:
+__apicdebuginit(void) print_APIC_bitfield(int base)

CHECK:SPACING: No space is necessary after a cast
#3617: FILE: arch/x86/kernel/io_apic_64.c:1236:
+__apicdebuginit(void) print_local_APIC(void *dummy)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3629: FILE: arch/x86/kernel/io_apic_64.c:1247:
+	printk(KERN_INFO "... APIC ID:      %08x (%01x)\n", v, read_apic_id());

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3642: FILE: arch/x86/kernel/io_apic_64.c:1284:
+	printk(KERN_DEBUG "... APIC ICR: %08x\n", icr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3643: FILE: arch/x86/kernel/io_apic_64.c:1285:
+	printk(KERN_DEBUG "... APIC ICR2: %08x\n", icr >> 32);

CHECK:SPACING: No space is necessary after a cast
#3652: FILE: arch/x86/kernel/io_apic_64.c:1313:
+__apicdebuginit(void) print_all_local_APICs(void)

CHECK:SPACING: No space is necessary after a cast
#3658: FILE: arch/x86/kernel/io_apic_64.c:1318:
+__apicdebuginit(void) print_PIC(void)

CHECK:SPACING: No space is necessary after a cast
#3667: FILE: arch/x86/kernel/io_apic_64.c:1350:
+__apicdebuginit(int) print_all_ICs(void)

WARNING:TYPO_SPELLING: 'aswell' may be misspelled - perhaps 'as well'?
#3706: FILE: arch/x86/kernel/io_apic_64.c:1568:
+ * For level triggered, we need to modify the io-apic RTE aswell with the update
                                                           ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#3774: FILE: arch/x86/kernel/io_apic_64.c:1636:
+^I ^I * Interrupt in progress. Migrating irq now will change the$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3774: FILE: arch/x86/kernel/io_apic_64.c:1636:
+^I ^I * Interrupt in progress. Migrating irq now will change the$

WARNING:TYPO_SPELLING: 'everthing' may be misspelled - perhaps 'everything'?
#3783: FILE: arch/x86/kernel/io_apic_64.c:1645:
+	/* everthing is clear. we have right of way */
 	   ^^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#3801: FILE: arch/x86/kernel/io_apic_64.c:1663:
+		struct irq_desc *desc = irq_desc + irq;
+		if (desc->status & IRQ_MOVE_PENDING) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#3813: FILE: arch/x86/kernel/io_apic_64.c:1675:
+^I^I^I^I^I         irq_desc[irq].pending_mask);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3862: FILE: arch/x86/kernel/io_apic_64.c:1840:
+^I.name ^I^I= "IR-IO-APIC",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3863: FILE: arch/x86/kernel/io_apic_64.c:1841:
+^I.startup ^I= startup_ioapic_irq,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3864: FILE: arch/x86/kernel/io_apic_64.c:1842:
+^I.mask^I ^I= mask_IO_APIC_irq,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3865: FILE: arch/x86/kernel/io_apic_64.c:1843:
+^I.unmask^I ^I= unmask_IO_APIC_irq,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3866: FILE: arch/x86/kernel/io_apic_64.c:1844:
+^I.ack ^I^I= ack_x2apic_edge,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3867: FILE: arch/x86/kernel/io_apic_64.c:1845:
+^I.eoi ^I^I= ack_x2apic_level,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3869: FILE: arch/x86/kernel/io_apic_64.c:1847:
+^I.set_affinity ^I= set_ir_ioapic_affinity_irq,$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3935: FILE: arch/x86/kernel/io_apic_64.c:2339:
+		BUG_ON(ir_index == -1);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3937: FILE: arch/x86/kernel/io_apic_64.c:2341:
+		memset (&irte, 0, sizeof(irte));

CHECK:BRACES: Unbalanced braces around else statement
#3954: FILE: arch/x86/kernel/io_apic_64.c:2358:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4046: FILE: arch/x86/kernel/io_apic_64.c:2501:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4053: FILE: arch/x86/kernel/io_apic_64.c:2508:
+		printk(KERN_ERR

ERROR:CODE_INDENT: code indent should use tabs where possible
#4055: FILE: arch/x86/kernel/io_apic_64.c:2510:
+^I^I        pci_name(dev));$

CHECK:BRACES: Unbalanced braces around else statement
#4082: FILE: arch/x86/kernel/io_apic_64.c:2537:
+	} else

ERROR:CODE_INDENT: code indent should use tabs where possible
#4318: FILE: arch/x86/kernel/setup.c:761:
+ ^Iif (cpu_has_x2apic)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4318: FILE: arch/x86/kernel/setup.c:761:
+ ^Iif (cpu_has_x2apic)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4318: FILE: arch/x86/kernel/setup.c:761:
+ ^Iif (cpu_has_x2apic)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4319: FILE: arch/x86/kernel/setup.c:762:
+ ^I^Icheck_x2apic();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4319: FILE: arch/x86/kernel/setup.c:762:
+ ^I^Icheck_x2apic();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4319: FILE: arch/x86/kernel/setup.c:762:
+ ^I^Icheck_x2apic();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4471: FILE: arch/x86/kernel/vmi_32.c:908:
+       para_fill(apic_ops->read, APICRead);$

CHECK:CAMELCASE: Avoid CamelCase: <APICRead>
#4471: FILE: arch/x86/kernel/vmi_32.c:908:
+       para_fill(apic_ops->read, APICRead);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4472: FILE: arch/x86/kernel/vmi_32.c:909:
+       para_fill(apic_ops->write, APICWrite);$

CHECK:CAMELCASE: Avoid CamelCase: <APICWrite>
#4472: FILE: arch/x86/kernel/vmi_32.c:909:
+       para_fill(apic_ops->write, APICWrite);

WARNING:RETURN_VOID: void function return statements are not generally useful
#4517: FILE: arch/x86/lguest/boot.c:810:
+	return;
+}

ERROR:CODE_INDENT: code indent should use tabs where possible
#4762: FILE: arch/x86/xen/enlighten.c:608:
+        return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4762: FILE: arch/x86/xen/enlighten.c:608:
+        return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4767: FILE: arch/x86/xen/enlighten.c:613:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4767: FILE: arch/x86/xen/enlighten.c:613:
+        return 0;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4824: FILE: drivers/pci/dma_remapping.h:1:
+#ifndef _DMA_REMAPPING_H

CHECK:BIT_MACRO: Prefer using the BIT macro
#4832: FILE: drivers/pci/dma_remapping.h:9:
+#define PAGE_SIZE_4K		(1UL << PAGE_SHIFT_4K)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4840: FILE: drivers/pci/dma_remapping.h:17:
+
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4851: FILE: drivers/pci/dma_remapping.h:28:
+};
+#define ROOT_ENTRY_NR (PAGE_SIZE_4K/sizeof(struct root_entry))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4851: FILE: drivers/pci/dma_remapping.h:28:
+#define ROOT_ENTRY_NR (PAGE_SIZE_4K/sizeof(struct root_entry))
                                    ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4856: FILE: drivers/pci/dma_remapping.h:33:
+}
+static inline void set_root_present(struct root_entry *root)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4860: FILE: drivers/pci/dma_remapping.h:37:
+}
+static inline void set_root_value(struct root_entry *root, unsigned long value)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#4870: FILE: drivers/pci/dma_remapping.h:47:
+		(root_present(root)?phys_to_virt(

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#4870: FILE: drivers/pci/dma_remapping.h:47:
+		(root_present(root)?phys_to_virt(
 		                   ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#4871: FILE: drivers/pci/dma_remapping.h:48:
+		root->val & PAGE_MASK_4K):
 		                         ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4890: FILE: drivers/pci/dma_remapping.h:67:
+};
+#define context_present(c) ((c).lo & 1)

ERROR:SPACING: space required after that ';' (ctx:VxV)
#4897: FILE: drivers/pci/dma_remapping.h:74:
+#define context_set_present(c) do {(c).lo |= 1;} while (0)
                                               ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#4897: FILE: drivers/pci/dma_remapping.h:74:
+#define context_set_present(c) do {(c).lo |= 1;} while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#4898: FILE: drivers/pci/dma_remapping.h:75:
+#define context_set_fault_enable(c) \
+	do {(c).lo &= (((u64)-1) << 2) | 1;} while (0)

ERROR:SPACING: space required after that ';' (ctx:VxV)
#4899: FILE: drivers/pci/dma_remapping.h:76:
+	do {(c).lo &= (((u64)-1) << 2) | 1;} while (0)
 	                                  ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'c' - possible side-effects?
#4900: FILE: drivers/pci/dma_remapping.h:77:
+#define context_set_translation_type(c, val) \
+	do { \
+		(c).lo &= (((u64)-1) << 4) | 3; \
+		(c).lo |= ((val) & 3) << 2; \
+	} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#4906: FILE: drivers/pci/dma_remapping.h:83:
+#define context_set_address_root(c, val) \
+	do {(c).lo |= (val) & PAGE_MASK_4K;} while (0)

ERROR:SPACING: space required after that ';' (ctx:VxV)
#4907: FILE: drivers/pci/dma_remapping.h:84:
+	do {(c).lo |= (val) & PAGE_MASK_4K;} while (0)
 	                                  ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#4908: FILE: drivers/pci/dma_remapping.h:85:
+#define context_set_address_width(c, val) do {(c).hi |= (val) & 7;} while (0)
                                                                  ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#4908: FILE: drivers/pci/dma_remapping.h:85:
+#define context_set_address_width(c, val) do {(c).hi |= (val) & 7;} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#4909: FILE: drivers/pci/dma_remapping.h:86:
+#define context_set_domain_id(c, val) \
+	do {(c).hi |= ((val) & ((1 << 16) - 1)) << 8;} while (0)

ERROR:SPACING: space required after that ';' (ctx:VxV)
#4910: FILE: drivers/pci/dma_remapping.h:87:
+	do {(c).hi |= ((val) & ((1 << 16) - 1)) << 8;} while (0)
 	                                            ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#4911: FILE: drivers/pci/dma_remapping.h:88:
+#define context_clear_entry(c) do {(c).lo = 0; (c).hi = 0;} while (0)
                                                          ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'c' - possible side-effects?
#4911: FILE: drivers/pci/dma_remapping.h:88:
+#define context_clear_entry(c) do {(c).lo = 0; (c).hi = 0;} while (0)

WARNING:TYPO_SPELLING: 'physcial' may be misspelled - perhaps 'physical'?
#4919: FILE: drivers/pci/dma_remapping.h:96:
+ * 12-63: Host physcial address
                ^^^^^^^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4924: FILE: drivers/pci/dma_remapping.h:101:
+};
+#define dma_clear_pte(p)	do {(p).val = 0;} while (0)

ERROR:SPACING: space required after that ';' (ctx:VxV)
#4924: FILE: drivers/pci/dma_remapping.h:101:
+#define dma_clear_pte(p)	do {(p).val = 0;} while (0)
                         	               ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#4924: FILE: drivers/pci/dma_remapping.h:101:
+#define dma_clear_pte(p)	do {(p).val = 0;} while (0)

ERROR:SPACING: space required after that ';' (ctx:VxV)
#4929: FILE: drivers/pci/dma_remapping.h:106:
+#define dma_set_pte_readable(p) do {(p).val |= DMA_PTE_READ;} while (0)
                                                            ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#4929: FILE: drivers/pci/dma_remapping.h:106:
+#define dma_set_pte_readable(p) do {(p).val |= DMA_PTE_READ;} while (0)

ERROR:SPACING: space required after that ';' (ctx:VxV)
#4930: FILE: drivers/pci/dma_remapping.h:107:
+#define dma_set_pte_writable(p) do {(p).val |= DMA_PTE_WRITE;} while (0)
                                                             ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#4930: FILE: drivers/pci/dma_remapping.h:107:
+#define dma_set_pte_writable(p) do {(p).val |= DMA_PTE_WRITE;} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#4931: FILE: drivers/pci/dma_remapping.h:108:
+#define dma_set_pte_prot(p, prot) \
+		do {(p).val = ((p).val & ~3) | ((prot) & 3); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#4931: FILE: drivers/pci/dma_remapping.h:108:
+#define dma_set_pte_prot(p, prot) \
+		do {(p).val = ((p).val & ~3) | ((prot) & 3); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#4934: FILE: drivers/pci/dma_remapping.h:111:
+#define dma_set_pte_addr(p, addr) do {\
+		(p).val |= ((addr) & PAGE_MASK_4K); } while (0)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#4935: FILE: drivers/pci/dma_remapping.h:112:
+		(p).val |= ((addr) & PAGE_MASK_4K); } while (0)

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4944: FILE: drivers/pci/dma_remapping.h:121:
+^Istruct list_head devices; ^I/* all devices' list */$

WARNING:TYPO_SPELLING: 'numer' may be misspelled - perhaps 'number'?
#4962: FILE: drivers/pci/dma_remapping.h:139:
+	u8 bus;			/* PCI bus numer */
 	       			           ^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4968: FILE: drivers/pci/dma_remapping.h:145:
+extern int init_dmars(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4969: FILE: drivers/pci/dma_remapping.h:146:
+extern void free_dmar_iommu(struct intel_iommu *iommu);

WARNING:RETURN_VOID: void function return statements are not generally useful
#4977: FILE: drivers/pci/dma_remapping.h:154:
+	return;
+}

CHECK:SPACING: No space is necessary after a cast
#5054: FILE: drivers/pci/dmar.c:198:
+	drhd = (struct acpi_dmar_hardware_unit *) dmaru->hdr;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5085: FILE: drivers/pci/dmar.c:230:
+
+

CHECK:SPACING: No space is necessary after a cast
#5112: FILE: drivers/pci/dmar.c:256:
+	rmrr = (struct acpi_dmar_reserved_memory *) rmrru->hdr;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rmrru->devices_cnt == 0'
#5119: FILE: drivers/pci/dmar.c:261:
+	if (ret || (rmrru->devices_cnt == 0)) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5135: FILE: drivers/pci/dmar.c:292:
 
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5178: FILE: drivers/pci/dmar.c:367:
+		if (drhd->include_all || dmar_pci_device_match(drhd->devices,
+						drhd->devices_cnt, dev))

WARNING:LINE_SPACING: Missing a blank line after declarations
#5199: FILE: drivers/pci/dmar.c:388:
+		struct dmar_rmrr_unit *rmrr;
+		for_each_rmrr_units(rmrr) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5210: FILE: drivers/pci/dmar.c:399:
 
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#5225: FILE: drivers/pci/dmar.c:413:
+			printk(KERN_INFO PREFIX "parse DMAR table failure.\n");

CHECK:SPACING: No space is necessary after a cast
#5264: FILE: drivers/pci/dmar.c:467:
+		dmar = (struct acpi_table_dmar *) dmar_tbl;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#5266: FILE: drivers/pci/dmar.c:469:
+			printk(KERN_INFO

WARNING:SPLIT_STRING: quoted string split across lines
#5268: FILE: drivers/pci/dmar.c:471:
+			       "Queued invalidation will be enabled to support "
+			       "x2apic and Intr-remapping.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#5269: FILE: drivers/pci/dmar.c:472:
+			printk(KERN_INFO

WARNING:SPLIT_STRING: quoted string split across lines
#5271: FILE: drivers/pci/dmar.c:474:
+			       "Disabling IOMMU detection, because of missing "
+			       "queued invalidation support for IOTLB "

WARNING:SPLIT_STRING: quoted string split across lines
#5272: FILE: drivers/pci/dmar.c:475:
+			       "queued invalidation support for IOTLB "
+			       "invalidation\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#5273: FILE: drivers/pci/dmar.c:476:
+			printk(KERN_INFO

WARNING:SPLIT_STRING: quoted string split across lines
#5275: FILE: drivers/pci/dmar.c:478:
+			       "Use \"nox2apic\", if you want to use Intel "
+			       " IOMMU for DMA-remapping and don't care about "

WARNING:SPLIT_STRING: quoted string split across lines
#5276: FILE: drivers/pci/dmar.c:479:
+			       " IOMMU for DMA-remapping and don't care about "
+			       " x2apic support\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5289: FILE: drivers/pci/dmar.c:492:
+
+

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#5295: FILE: drivers/pci/dmar.c:498:
+	static int iommu_allocated = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5305: FILE: drivers/pci/dmar.c:508:
+		printk(KERN_ERR "IOMMU: can't map the region\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5313: FILE: drivers/pci/dmar.c:516:
+	map_size = max_t(int, ecap_max_iotlb_offset(iommu->ecap),
+		cap_max_fault_reg_offset(iommu->cap));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5319: FILE: drivers/pci/dmar.c:522:
+			printk(KERN_ERR "IOMMU: can't map the region\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5326: FILE: drivers/pci/dmar.c:529:
+	pr_debug("IOMMU %llx: ver %d:%d cap %llx ecap %llx\n",
+		drhd->reg_base_addr, DMAR_VER_MAJOR(ver), DMAR_VER_MINOR(ver),

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#5390: FILE: drivers/pci/dmar.c:593:
+	qi->desc_status[index] = qi->desc_status[wait_index] = QI_IN_USE;

CHECK:SPACING: No space is necessary after a cast
#5473: FILE: drivers/pci/dmar.c:676:
+		free_page((unsigned long) qi->desc);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#5479: FILE: drivers/pci/dmar.c:682:
+	qi->free_head = qi->free_tail = 0;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#5803: FILE: drivers/pci/intel-iommu.c:2291:
+^I^Ireturn ^I-ENODEV;$

WARNING:INCLUDE_LINUX: Use #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#5836: FILE: drivers/pci/intel-iommu.h:30:
+#include <asm/cacheflush.h>

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'e' may be better as '(e)' to avoid precedence issues
#5858: FILE: drivers/pci/intel-iommu.h:124:
+#define ecap_eim_support(e)	((e >> 4) & 0x1)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'e' may be better as '(e)' to avoid precedence issues
#5859: FILE: drivers/pci/intel-iommu.h:125:
+#define ecap_ir_support(e)	((e >> 3) & 0x1)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'e' may be better as '(e)' to avoid precedence issues
#5860: FILE: drivers/pci/intel-iommu.h:126:
+#define ecap_max_handle_mask(e) ((e >> 20) & 0xf)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'id' may be better as '(id)' to avoid precedence issues
#5874: FILE: drivers/pci/intel-iommu.h:148:
+#define DMA_ID_TLB_DID(id)	(((u64)((id & 0xffff) << 16)))

CHECK:SPACING: No space is necessary after a cast
#5888: FILE: drivers/pci/intel-iommu.h:165:
+#define DMA_GCMD_IRE (((u32) 1) << 25)

CHECK:SPACING: No space is necessary after a cast
#5928: FILE: drivers/pci/intel-iommu.h:205:
+#define DMAR_OPERATION_TIMEOUT ((cycles_t) tsc_khz*10*1000) /* 10sec */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#5928: FILE: drivers/pci/intel-iommu.h:205:
+#define DMAR_OPERATION_TIMEOUT ((cycles_t) tsc_khz*10*1000) /* 10sec */
                                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#5928: FILE: drivers/pci/intel-iommu.h:205:
+#define DMAR_OPERATION_TIMEOUT ((cycles_t) tsc_khz*10*1000) /* 10sec */
                                                      ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'iommu' may be better as '(iommu)' to avoid precedence issues
#5930: FILE: drivers/pci/intel-iommu.h:207:
+#define IOMMU_WAIT_OP(iommu, offset, op, cond, sts) \
+{\
+	cycles_t start_time = get_cycles();\
+	while (1) {\
+		sts = op (iommu->reg + offset);\
+		if (cond)\
+			break;\
+		if (DMAR_OPERATION_TIMEOUT < (get_cycles() - start_time))\
+			panic("DMAR hardware is malfunctioning\n");\
+		cpu_relax();\
+	}\
 }

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offset' may be better as '(offset)' to avoid precedence issues
#5930: FILE: drivers/pci/intel-iommu.h:207:
+#define IOMMU_WAIT_OP(iommu, offset, op, cond, sts) \
+{\
+	cycles_t start_time = get_cycles();\
+	while (1) {\
+		sts = op (iommu->reg + offset);\
+		if (cond)\
+			break;\
+		if (DMAR_OPERATION_TIMEOUT < (get_cycles() - start_time))\
+			panic("DMAR hardware is malfunctioning\n");\
+		cpu_relax();\
+	}\
 }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5934: FILE: drivers/pci/intel-iommu.h:211:
+		sts = op (iommu->reg + offset);\

ERROR:SPACING: space required after that close brace '}'
#5940: FILE: drivers/pci/intel-iommu.h:217:
+	}\

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'idx' may be better as '(idx)' to avoid precedence issues
#6028: FILE: drivers/pci/intel-iommu.h:235:
+#define QI_IEC_IIDEX(idx)	(((u64)(idx & 0xffff) << 32))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'm' may be better as '(m)' to avoid precedence issues
#6029: FILE: drivers/pci/intel-iommu.h:236:
+#define QI_IEC_IM(m)		(((u64)(m & 0x1f) << 27))

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#6047: FILE: drivers/pci/intel-iommu.h:246:
+	spinlock_t      q_lock;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#6095: FILE: drivers/pci/intel-iommu.h:276:
+^Iunsigned long ^I*domain_ids; /* bitmap of domains */$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#6113: FILE: drivers/pci/intel-iommu.h:292:
+static inline void __iommu_flush_cache(

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#6122: FILE: drivers/pci/intel-iommu.h:299:
+extern struct dmar_drhd_unit * dmar_find_matched_drhd_unit(struct pci_dev *dev);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6122: FILE: drivers/pci/intel-iommu.h:299:
+extern struct dmar_drhd_unit * dmar_find_matched_drhd_unit(struct pci_dev *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6124: FILE: drivers/pci/intel-iommu.h:301:
+extern int alloc_iommu(struct dmar_drhd_unit *drhd);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6125: FILE: drivers/pci/intel-iommu.h:302:
+extern void free_iommu(struct intel_iommu *iommu);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6126: FILE: drivers/pci/intel-iommu.h:303:
+extern int dmar_enable_qi(struct intel_iommu *iommu);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6127: FILE: drivers/pci/intel-iommu.h:304:
+extern void qi_global_iec(struct intel_iommu *iommu);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6129: FILE: drivers/pci/intel-iommu.h:306:
+extern void qi_submit_sync(struct qi_desc *desc, struct intel_iommu *iommu);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6137: FILE: drivers/pci/intr_remapping.c:1:
+#include <linux/dmar.h>

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#6203: FILE: drivers/pci/intr_remapping.c:67:
+	index = start_index = 0;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#6211: FILE: drivers/pci/intr_remapping.c:75:
+		printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#6213: FILE: drivers/pci/intr_remapping.c:77:
+		       "Requested mask %x exceeds the max invalidation handle"
+		       " mask value %Lx\n", mask,

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#6213: FILE: drivers/pci/intr_remapping.c:77:
+		       " mask value %Lx\n", mask,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#6231: FILE: drivers/pci/intr_remapping.c:95:
+			printk(KERN_ERR "can't allocate an IRTE\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6453: FILE: drivers/pci/intr_remapping.c:317:
+
+

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#6459: FILE: drivers/pci/intr_remapping.c:323:
+	ir_table = iommu->ir_table = kzalloc(sizeof(struct ir_table),

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*iommu->ir_table)...) over kzalloc(sizeof(struct ir_table)...)
#6459: FILE: drivers/pci/intr_remapping.c:323:
+	ir_table = iommu->ir_table = kzalloc(sizeof(struct ir_table),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#6468: FILE: drivers/pci/intr_remapping.c:332:
+		printk(KERN_ERR "failed to allocate pages of order %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6495: FILE: drivers/pci/intr_remapping.c:359:
+			printk(KERN_INFO "DRHD %Lx: EIM not supported by DRHD, "

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#6495: FILE: drivers/pci/intr_remapping.c:359:
+			printk(KERN_INFO "DRHD %Lx: EIM not supported by DRHD, "

WARNING:SPLIT_STRING: quoted string split across lines
#6496: FILE: drivers/pci/intr_remapping.c:360:
+			printk(KERN_INFO "DRHD %Lx: EIM not supported by DRHD, "
+			       " ecap %Lx\n", drhd->reg_base_addr, iommu->ecap);

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#6496: FILE: drivers/pci/intr_remapping.c:360:
+			       " ecap %Lx\n", drhd->reg_base_addr, iommu->ecap);

WARNING:LINE_SPACING: Missing a blank line after declarations
#6507: FILE: drivers/pci/intr_remapping.c:371:
+		struct intel_iommu *iommu = drhd->iommu;
+		ret = dmar_enable_qi(iommu);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#6510: FILE: drivers/pci/intr_remapping.c:374:
+			printk(KERN_ERR "DRHD %Lx: failed to enable queued, "

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#6510: FILE: drivers/pci/intr_remapping.c:374:
+			printk(KERN_ERR "DRHD %Lx: failed to enable queued, "

WARNING:SPLIT_STRING: quoted string split across lines
#6511: FILE: drivers/pci/intr_remapping.c:375:
+			printk(KERN_ERR "DRHD %Lx: failed to enable queued, "
+			       " invalidation, ecap %Lx, ret %d\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#6511: FILE: drivers/pci/intr_remapping.c:375:
+			       " invalidation, ecap %Lx, ret %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#6562: FILE: drivers/pci/intr_remapping.c:426:
+				printk(KERN_WARNING "Exceeded Max IO APICS\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6566: FILE: drivers/pci/intr_remapping.c:430:
+			printk(KERN_INFO "IOAPIC id %d under DRHD base"

WARNING:SPLIT_STRING: quoted string split across lines
#6567: FILE: drivers/pci/intr_remapping.c:431:
+			printk(KERN_INFO "IOAPIC id %d under DRHD base"
+			       " 0x%Lx\n", scope->enumeration_id,

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#6567: FILE: drivers/pci/intr_remapping.c:431:
+			       " 0x%Lx\n", scope->enumeration_id,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#6601: FILE: drivers/pci/intr_remapping.c:465:
+		printk(KERN_WARNING

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6614: FILE: drivers/pci/intr_remapping.h:1:
+#include "intel-iommu.h"

WARNING:INCLUDE_LINUX: Use #include <linux/cpufeature.h> instead of <asm/cpufeature.h>
#6630: FILE: include/asm-x86/apic.h:12:
+#include <asm/cpufeature.h>

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6687: FILE: include/asm-x86/apic.h:99:
+extern void check_x2apic(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6688: FILE: include/asm-x86/apic.h:100:
+extern void enable_x2apic(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6689: FILE: include/asm-x86/apic.h:101:
+extern void enable_IR_x2apic(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6690: FILE: include/asm-x86/apic.h:102:
+extern void x2apic_icr_write(u32 low, u32 id);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6721: FILE: include/asm-x86/apic.h:133:
+
+

CHECK:BIT_MACRO: Prefer using the BIT macro
#6742: FILE: include/asm-x86/apicdef.h:133:
+#define X2APIC_ENABLE	(1UL << 10)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6769: FILE: include/asm-x86/bigsmp/apic.h:1:
+#ifndef __ASM_MACH_APIC_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6804: FILE: include/asm-x86/bigsmp/apicdef.h:1:
+#ifndef __ASM_MACH_APICDEF_H

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#6807: FILE: include/asm-x86/bigsmp/apicdef.h:4:
+#define		APIC_ID_MASK		(0xFF<<24)
        		            		     ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#6809: FILE: include/asm-x86/bigsmp/apicdef.h:6:
+static inline unsigned get_apic_id(unsigned long x)

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#6811: FILE: include/asm-x86/bigsmp/apicdef.h:8:
+	return (((x)>>24)&0xFF);
 	            ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#6811: FILE: include/asm-x86/bigsmp/apicdef.h:8:
+	return (((x)>>24)&0xFF);
 	                 ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6827: FILE: include/asm-x86/bigsmp/ipi.h:1:
+#ifndef __ASM_MACH_IPI_H

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#6846: FILE: include/asm-x86/cpufeature.h:96:
+#define X86_FEATURE_X2APIC	(4*32+21) /* x2APIC */
                           	  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#6846: FILE: include/asm-x86/cpufeature.h:96:
+#define X86_FEATURE_X2APIC	(4*32+21) /* x2APIC */
                           	     ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6877: FILE: include/asm-x86/es7000/apic.h:1:
+#ifndef __ASM_ES7000_APIC_H

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#6917: FILE: include/asm-x86/es7000/apic.h:43:
+}
+static inline unsigned long check_apicid_present(int bit)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6981: FILE: include/asm-x86/es7000/apicdef.h:1:
+#ifndef __ASM_ES7000_APICDEF_H

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#6984: FILE: include/asm-x86/es7000/apicdef.h:4:
+#define		APIC_ID_MASK		(0xFF<<24)
        		            		     ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#6986: FILE: include/asm-x86/es7000/apicdef.h:6:
+static inline unsigned get_apic_id(unsigned long x)

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#6988: FILE: include/asm-x86/es7000/apicdef.h:8:
+	return (((x)>>24)&0xFF);
 	            ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#6988: FILE: include/asm-x86/es7000/apicdef.h:8:
+	return (((x)>>24)&0xFF);
 	                 ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#7004: FILE: include/asm-x86/es7000/ipi.h:1:
+#ifndef __ASM_ES7000_IPI_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#7025: FILE: include/asm-x86/es7000/mpparse.h:1:
+#ifndef __ASM_ES7000_MPPARSE_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#7046: FILE: include/asm-x86/es7000/wakecpu.h:1:
+#ifndef __ASM_ES7000_WAKECPU_H

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#7093: FILE: include/asm-x86/genapic_64.h:45:
+extern void apic_send_IPI_self(int vector);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#7127: FILE: include/asm-x86/i8259.h:60:
+extern void mask_8259A(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#7128: FILE: include/asm-x86/i8259.h:61:
+extern void unmask_8259A(void);

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#7151: FILE: include/asm-x86/io_apic.h:122:
+} __attribute__ ((packed));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#7161: FILE: include/asm-x86/io_apic.h:201:
+extern int save_mask_IO_APIC_setup(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#7162: FILE: include/asm-x86/io_apic.h:202:
+extern void restore_IO_APIC_setup(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#7163: FILE: include/asm-x86/io_apic.h:203:
+extern void reinit_intr_remapped_IO_APIC(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#7163: FILE: include/asm-x86/io_apic.h:203:
+extern void reinit_intr_remapped_IO_APIC(int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#7235: FILE: include/asm-x86/irq_remapping.h:1:
+#ifndef _ASM_IRQ_REMAPPING_H

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dest' - possible side-effects?
#7240: FILE: include/asm-x86/irq_remapping.h:6:
+#define IRTE_DEST(dest) ((x2apic) ? dest : dest << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#7378: FILE: include/asm-x86/msidef.h:51:
+#define MSI_ADDR_IR_EXT_INT		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#7379: FILE: include/asm-x86/msidef.h:52:
+#define MSI_ADDR_IR_SHV			(1 << 3)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'index' may be better as '(index)' to avoid precedence issues
#7380: FILE: include/asm-x86/msidef.h:53:
+#define MSI_ADDR_IR_INDEX1(index)	((index & 0x8000) >> 13)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'index' may be better as '(index)' to avoid precedence issues
#7381: FILE: include/asm-x86/msidef.h:54:
+#define MSI_ADDR_IR_INDEX2(index)	((index & 0x7fff) << 5)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#7393: FILE: include/asm-x86/numaq/apic.h:1:
+#ifndef __ASM_NUMAQ_APIC_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#7414: FILE: include/asm-x86/numaq/apicdef.h:1:
+#ifndef __ASM_NUMAQ_APICDEF_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#7435: FILE: include/asm-x86/numaq/ipi.h:1:
+#ifndef __ASM_NUMAQ_IPI_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#7452: FILE: include/asm-x86/numaq/mpparse.h:1:
+#ifndef __ASM_NUMAQ_MPPARSE_H

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#7455: FILE: include/asm-x86/numaq/mpparse.h:4:
+extern void numaq_mps_oem_check(struct mp_config_table *mpc, char *oem,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#7469: FILE: include/asm-x86/numaq/wakecpu.h:1:
+#ifndef __ASM_NUMAQ_WAKECPU_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#7584: FILE: include/asm-x86/summit/apic.h:1:
+#ifndef __ASM_SUMMIT_APIC_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#7660: FILE: include/asm-x86/summit/apicdef.h:1:
+#ifndef __ASM_SUMMIT_APICDEF_H

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#7663: FILE: include/asm-x86/summit/apicdef.h:4:
+#define		APIC_ID_MASK		(0xFF<<24)
        		            		     ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#7665: FILE: include/asm-x86/summit/apicdef.h:6:
+static inline unsigned get_apic_id(unsigned long x)

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#7667: FILE: include/asm-x86/summit/apicdef.h:8:
+	return (x>>24)&0xFF;
 	         ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#7667: FILE: include/asm-x86/summit/apicdef.h:8:
+	return (x>>24)&0xFF;
 	              ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#7683: FILE: include/asm-x86/summit/ipi.h:1:
+#ifndef __ASM_SUMMIT_IPI_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#7704: FILE: include/asm-x86/summit/irq_vectors_limits.h:1:
+#ifndef _ASM_IRQ_VECTORS_LIMITS_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#7725: FILE: include/asm-x86/summit/mpparse.h:1:
+#ifndef __ASM_SUMMIT_MPPARSE_H

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7738: FILE: include/asm-x86/summit/mpparse.h:15:
+static inline int mps_oem_check(struct mp_config_table *mpc, char *oem,
 		char *productid)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7743: FILE: include/asm-x86/summit/mpparse.h:18:
+	if (!strncmp(oem, "IBM ENSW", 8) &&
+			(!strncmp(productid, "VIGIL SMP", 9)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#7769: FILE: include/linux/dmar.h:35:
+^Istruct^Ipci_dev **devices; ^I/* target device array^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#7771: FILE: include/linux/dmar.h:37:
+^Iu8^Iignored:1; ^I^I/* ignore drhd^I^I*/$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#7781: FILE: include/linux/dmar.h:47:
+extern int dmar_table_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#7782: FILE: include/linux/dmar.h:48:
+extern int early_dmar_detect(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#7783: FILE: include/linux/dmar.h:49:
+extern int dmar_dev_scope_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#7786: FILE: include/linux/dmar.h:52:
+extern void detect_intel_iommu(void);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#7788: FILE: include/linux/dmar.h:54:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#7789: FILE: include/linux/dmar.h:55:
+extern int parse_ioapics_under_ir(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#7790: FILE: include/linux/dmar.h:56:
+extern int alloc_iommu(struct dmar_drhd_unit *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dmar_drhd_unit *' should also have an identifier name
#7790: FILE: include/linux/dmar.h:56:
+extern int alloc_iommu(struct dmar_drhd_unit *);

WARNING:RETURN_VOID: void function return statements are not generally useful
#7795: FILE: include/linux/dmar.h:61:
+	return;
+}

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#7805: FILE: include/linux/dmar.h:71:
+extern int enable_intr_remapping(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#7805: FILE: include/linux/dmar.h:71:
+extern int enable_intr_remapping(int);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#7810: FILE: include/linux/dmar.h:76:
+^I^I^I__u64^Ipresent ^I: 1,$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#7835: FILE: include/linux/dmar.h:101:
+};
+extern int get_irte(int irq, struct irte *entry);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#7835: FILE: include/linux/dmar.h:101:
+extern int get_irte(int irq, struct irte *entry);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#7836: FILE: include/linux/dmar.h:102:
+extern int modify_irte(int irq, struct irte *irte_modified);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#7837: FILE: include/linux/dmar.h:103:
+extern int alloc_irte(struct intel_iommu *iommu, int irq, u16 count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#7838: FILE: include/linux/dmar.h:104:
+extern int set_irte_irq(int irq, struct intel_iommu *iommu, u16 index,

ERROR:CODE_INDENT: code indent should use tabs where possible
#7839: FILE: include/linux/dmar.h:105:
+   ^I^I^Iu16 sub_handle);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#7839: FILE: include/linux/dmar.h:105:
+   ^I^I^Iu16 sub_handle);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7839: FILE: include/linux/dmar.h:105:
+extern int set_irte_irq(int irq, struct intel_iommu *iommu, u16 index,
+   			u16 sub_handle);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#7839: FILE: include/linux/dmar.h:105:
+   ^I^I^Iu16 sub_handle);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#7840: FILE: include/linux/dmar.h:106:
+extern int map_irq_to_irte_handle(int irq, u16 *sub_handle);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#7841: FILE: include/linux/dmar.h:107:
+extern int clear_irte_irq(int irq, struct intel_iommu *iommu, u16 index);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#7842: FILE: include/linux/dmar.h:108:
+extern int flush_irte(int irq);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#7843: FILE: include/linux/dmar.h:109:
+extern int free_irte(int irq);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#7845: FILE: include/linux/dmar.h:111:
+extern int irq_remapped(int irq);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#7846: FILE: include/linux/dmar.h:112:
+extern struct intel_iommu *map_dev_to_ir(struct pci_dev *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#7847: FILE: include/linux/dmar.h:113:
+extern struct intel_iommu *map_ioapic_to_ir(int apic);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#7897: FILE: include/linux/dmar.h:147:
+extern int intel_iommu_init(void);

CHECK:BRACES: braces {} should be used on all arms of this statement
#7936: FILE: kernel/irq/manage.c:92:
+	if (desc->status & IRQ_MOVE_PCNTXT) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#7942: FILE: kernel/irq/manage.c:98:
+	} else

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000218539.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 26 errors, 169 warnings, 171 checks, 6811 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000218539.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
