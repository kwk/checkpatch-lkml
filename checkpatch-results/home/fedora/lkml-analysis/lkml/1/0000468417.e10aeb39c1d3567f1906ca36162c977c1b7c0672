WARNING:INLINE: plain inline is preferred over __inline__
#80: FILE: include/asm-alpha/atomic.h:194:
+static __inline__ int atomic_add_unless(atomic_t *v, int a, int u)

WARNING:LINE_SPACING: Missing a blank line after declarations
#83: FILE: include/asm-alpha/atomic.h:197:
+	int c, old;
+	c = atomic_read(v);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INLINE: plain inline is preferred over __inline__
#116: FILE: include/asm-alpha/atomic.h:220:
+static __inline__ int atomic64_add_unless(atomic64_t *v, long a, long u)

WARNING:LINE_SPACING: Missing a blank line after declarations
#119: FILE: include/asm-alpha/atomic.h:223:
+	long c, old;
+	c = atomic64_read(v);

WARNING:INLINE: plain inline is preferred over __inline__
#254: FILE: include/asm-frv/atomic.h:265:
+static __inline__ int atomic_add_unless(atomic_t *v, int a, int u)

WARNING:LINE_SPACING: Missing a blank line after declarations
#257: FILE: include/asm-frv/atomic.h:268:
+	int c, old;
+	c = atomic_read(v);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#296: FILE: include/asm-frv/system.h:207:
+#define cmpxchg(ptr, test, new)							\
+({										\
+	__typeof__(ptr) __xg_ptr = (ptr);					\
+	__typeof__(*(ptr)) __xg_orig, __xg_tmp;					\
+	__typeof__(*(ptr)) __xg_test = (test);					\
+	__typeof__(*(ptr)) __xg_new = (new);					\
+										\
+	switch (sizeof(__xg_orig)) {						\
+	case 4:									\
+		asm volatile(							\
+			"0:						\n"	\
+			"	orcc		gr0,gr0,gr0,icc3	\n"	\
+			"	ckeq		icc3,cc7		\n"	\
+			"	ld.p		%M0,%1			\n"	\
+			"	orcr		cc7,cc7,cc3		\n"	\
+			"	sub%I4cc	%1,%4,%2,icc0		\n"	\
+			"	bne		icc0,#0,1f		\n"	\
+			"	cst.p		%3,%M0		,cc3,#1	\n"	\
+			"	corcc		gr29,gr29,gr0	,cc3,#1	\n"	\
+			"	beq		icc3,#0,0b		\n"	\
+			"1:						\n"	\
+			: "+U"(*__xg_ptr), "=&r"(__xg_orig), "=&r"(__xg_tmp)	\
+			: "r"(__xg_new), "NPr"(__xg_test)			\
+			: "memory", "cc7", "cc3", "icc3", "icc0"		\
+			);							\
+		break;								\
+										\
+	default:								\
+		__xg_orig = 0;							\
+		asm volatile("break");						\
+		break;								\
+	}									\
+										\
+	__xg_orig;								\
+})

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#306: FILE: include/asm-frv/system.h:217:
+			"0:						\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#307: FILE: include/asm-frv/system.h:218:
+			"	orcc		gr0,gr0,gr0,icc3	\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#308: FILE: include/asm-frv/system.h:219:
+			"	ckeq		icc3,cc7		\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#309: FILE: include/asm-frv/system.h:220:
+			"	ld.p		%M0,%1			\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#310: FILE: include/asm-frv/system.h:221:
+			"	orcr		cc7,cc7,cc3		\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#311: FILE: include/asm-frv/system.h:222:
+			"	sub%I4cc	%1,%4,%2,icc0		\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#312: FILE: include/asm-frv/system.h:223:
+			"	bne		icc0,#0,1f		\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#313: FILE: include/asm-frv/system.h:224:
+			"	cst.p		%3,%M0		,cc3,#1	\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#314: FILE: include/asm-frv/system.h:225:
+			"	corcc		gr29,gr29,gr0	,cc3,#1	\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#315: FILE: include/asm-frv/system.h:226:
+			"	beq		icc3,#0,0b		\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#316: FILE: include/asm-frv/system.h:227:
+			"1:						\n"	\

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#334: FILE: include/asm-frv/system.h:245:
+extern uint32_t __cmpxchg_32(uint32_t *v, uint32_t test, uint32_t new);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#334: FILE: include/asm-frv/system.h:245:
+extern uint32_t __cmpxchg_32(uint32_t *v, uint32_t test, uint32_t new);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#336: FILE: include/asm-frv/system.h:247:
+#define cmpxchg(ptr, test, new)							\
+({										\
+	__typeof__(ptr) __xg_ptr = (ptr);					\
+	__typeof__(*(ptr)) __xg_orig;						\
+	__typeof__(*(ptr)) __xg_test = (test);					\
+	__typeof__(*(ptr)) __xg_new = (new);					\
+										\
+	switch (sizeof(__xg_orig)) {						\
+	case 4: __xg_orig = __cmpxchg_32(__xg_ptr, __xg_test, __xg_new); break;	\
+	default:								\
+		__xg_orig = 0;							\
+		asm volatile("break");						\
+		break;								\
+	}									\
+										\
+	__xg_orig;								\
+})

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#344: FILE: include/asm-frv/system.h:255:
+	case 4: __xg_orig = __cmpxchg_32(__xg_ptr, __xg_test, __xg_new); break;	\

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#356: FILE: include/asm-frv/system.h:267:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#379: FILE: include/asm-generic/atomic.h:128:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#394: FILE: include/asm-generic/atomic.h:245:
+^I$

WARNING:INLINE: plain inline is preferred over __inline__
#422: FILE: include/asm-i386/atomic.h:222:
+static __inline__ int atomic_add_unless(atomic_t *v, int a, int u)

WARNING:LINE_SPACING: Missing a blank line after declarations
#425: FILE: include/asm-i386/atomic.h:225:
+	int c, old;
+	c = atomic_read(v);

WARNING:INLINE: plain inline is preferred over __inline__
#470: FILE: include/asm-ia64/atomic.h:99:
+static __inline__ int atomic_add_unless(atomic_t *v, int a, int u)

WARNING:LINE_SPACING: Missing a blank line after declarations
#473: FILE: include/asm-ia64/atomic.h:102:
+	int c, old;
+	c = atomic_read(v);

WARNING:INLINE: plain inline is preferred over __inline__
#501: FILE: include/asm-ia64/atomic.h:116:
+static __inline__ int atomic64_add_unless(atomic64_t *v, long a, long u)

WARNING:LINE_SPACING: Missing a blank line after declarations
#504: FILE: include/asm-ia64/atomic.h:119:
+	long c, old;
+	c = atomic64_read(v);

WARNING:INLINE: plain inline is preferred over __inline__
#535: FILE: include/asm-m32r/atomic.h:256:
+static __inline__ int atomic_add_unless(atomic_t *v, int a, int u)

WARNING:LINE_SPACING: Missing a blank line after declarations
#538: FILE: include/asm-m32r/atomic.h:259:
+	int c, old;
+	c = atomic_read(v);

WARNING:INLINE: plain inline is preferred over __inline__
#584: FILE: include/asm-m68k/atomic.h:173:
+static __inline__ int atomic_add_unless(atomic_t *v, int a, int u)

WARNING:LINE_SPACING: Missing a blank line after declarations
#587: FILE: include/asm-m68k/atomic.h:176:
+	int c, old;
+	c = atomic_read(v);

WARNING:INLINE: plain inline is preferred over __inline__
#627: FILE: include/asm-m68knommu/atomic.h:134:
+static __inline__ int atomic_add_unless(atomic_t *v, int a, int u)

WARNING:LINE_SPACING: Missing a blank line after declarations
#630: FILE: include/asm-m68knommu/atomic.h:137:
+	int c, old;
+	c = atomic_read(v);

WARNING:INLINE: plain inline is preferred over __inline__
#669: FILE: include/asm-mips/atomic.h:307:
+static __inline__ int atomic_add_unless(atomic_t *v, int a, int u)

WARNING:LINE_SPACING: Missing a blank line after declarations
#672: FILE: include/asm-mips/atomic.h:310:
+	int c, old;
+	c = atomic_read(v);

WARNING:INLINE: plain inline is preferred over __inline__
#698: FILE: include/asm-mips/atomic.h:674:
+static __inline__ int atomic64_add_unless(atomic64_t *v, long a, long u)

WARNING:LINE_SPACING: Missing a blank line after declarations
#701: FILE: include/asm-mips/atomic.h:677:
+	long c, old;
+	c = atomic64_read(v);

WARNING:INLINE: plain inline is preferred over __inline__
#740: FILE: include/asm-parisc/atomic.h:178:
+static __inline__ int atomic_add_unless(atomic_t *v, int a, int u)

WARNING:LINE_SPACING: Missing a blank line after declarations
#743: FILE: include/asm-parisc/atomic.h:181:
+	int c, old;
+	c = atomic_read(v);

WARNING:INLINE: plain inline is preferred over __inline__
#770: FILE: include/asm-parisc/atomic.h:294:
+static __inline__ int atomic64_add_unless(atomic64_t *v, long a, long u)

WARNING:LINE_SPACING: Missing a blank line after declarations
#773: FILE: include/asm-parisc/atomic.h:297:
+	long c, old;
+	c = atomic64_read(v);

WARNING:INLINE: plain inline is preferred over __inline__
#842: FILE: include/asm-sparc64/atomic.h:77:
+static __inline__ int atomic_add_unless(atomic_t *v, int a, int u)

WARNING:LINE_SPACING: Missing a blank line after declarations
#845: FILE: include/asm-sparc64/atomic.h:80:
+	int c, old;
+	c = atomic_read(v);

WARNING:INLINE: plain inline is preferred over __inline__
#877: FILE: include/asm-sparc64/atomic.h:98:
+static __inline__ int atomic64_add_unless(atomic64_t *v, long a, long u)

WARNING:LINE_SPACING: Missing a blank line after declarations
#880: FILE: include/asm-sparc64/atomic.h:101:
+	long c, old;
+	c = atomic64_read(v);

WARNING:INLINE: plain inline is preferred over __inline__
#925: FILE: include/asm-x86_64/atomic.h:407:
+static __inline__ int atomic_add_unless(atomic_t *v, int a, int u)

WARNING:LINE_SPACING: Missing a blank line after declarations
#928: FILE: include/asm-x86_64/atomic.h:410:
+	int c, old;
+	c = atomic_read(v);

WARNING:INLINE: plain inline is preferred over __inline__
#961: FILE: include/asm-x86_64/atomic.h:433:
+static __inline__ int atomic64_add_unless(atomic64_t *v, long a, long u)

WARNING:LINE_SPACING: Missing a blank line after declarations
#964: FILE: include/asm-x86_64/atomic.h:436:
+	long c, old;
+	c = atomic64_read(v);

WARNING:INLINE: plain inline is preferred over __inline__
#995: FILE: include/asm-xtensa/atomic.h:237:
+static __inline__ int atomic_add_unless(atomic_t *v, int a, int u)

WARNING:LINE_SPACING: Missing a blank line after declarations
#998: FILE: include/asm-xtensa/atomic.h:240:
+	int c, old;
+	c = atomic_read(v);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000468417.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 47 warnings, 5 checks, 855 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000468417.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
