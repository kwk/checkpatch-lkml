WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#106: FILE: fs/unionfs/copyup.c:108:
+	if (unlikely(err == -ENOTSUPP || err == -EOPNOTSUPP))

ENOTSUPP is not a standard error code and should be avoided in new patches.
EOPNOTSUPP should be used instead.

See: https://lore.kernel.org/netdev/20200510182252.GA411829@lunn.ch/

WARNING:LIKELY_MISUSE: nested (un)?likely() calls, IS_ERR already uses unlikely() internally
#163: FILE: fs/unionfs/copyup.c:243:
+	if (unlikely(IS_ERR(input_file))) {

WARNING:LIKELY_MISUSE: nested (un)?likely() calls, IS_ERR already uses unlikely() internally
#178: FILE: fs/unionfs/copyup.c:259:
+	if (unlikely(IS_ERR(output_file))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'write_bytes < 0'
#200: FILE: fs/unionfs/copyup.c:305:
+		if (unlikely((write_bytes < 0) || (write_bytes < read_bytes))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'write_bytes < read_bytes'
#200: FILE: fs/unionfs/copyup.c:305:
+		if (unlikely((write_bytes < 0) || (write_bytes < read_bytes))) {

WARNING:LIKELY_MISUSE: nested (un)?likely() calls, IS_ERR already uses unlikely() internally
#223: FILE: fs/unionfs/copyup.c:402:
+	if (unlikely(IS_ERR(new_lower_dentry))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#269: FILE: fs/unionfs/copyup.c:462:
+	if (unlikely((err = copyup_permissions(sb, old_lower_dentry,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#276: FILE: fs/unionfs/copyup.c:468:
+	if (unlikely((err = copyup_xattrs(old_lower_dentry, new_lower_dentry))))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#344: FILE: fs/unionfs/copyup.c:682:
+	if (unlikely((err = is_robranch_super(dir->i_sb, bindex)))) {

WARNING:LIKELY_MISUSE: nested (un)?likely() calls, IS_ERR already uses unlikely() internally
#378: FILE: fs/unionfs/copyup.c:760:
+		if (unlikely(IS_ERR(lower_dentry)))

WARNING:LIKELY_MISUSE: nested (un)?likely() calls, IS_ERR already uses unlikely() internally
#387: FILE: fs/unionfs/copyup.c:769:
+		if (unlikely(IS_ERR(lower_dentry)))

WARNING:LIKELY_MISUSE: nested (un)?likely() calls, IS_ERR already uses unlikely() internally
#410: FILE: fs/unionfs/copyup.c:839:
+	if (unlikely(IS_ERR(lower_dentry)))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000376452.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 8 warnings, 2 checks, 355 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000376452.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
