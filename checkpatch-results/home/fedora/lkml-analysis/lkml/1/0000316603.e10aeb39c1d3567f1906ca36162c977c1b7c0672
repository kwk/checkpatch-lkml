WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#63: FILE: drivers/misc/Kconfig:25:
+config ATMEL_TCLIB
+	bool "Atmel AT32/AT91 Timer/Counter Library"
+	depends on (AVR32 || ARCH_AT91)
+	help
+	  Select this if you want a library to allocate the Timer/Counter
+	  blocks found on many Atmel processors.  This facilitates using
+	  these blocks by different drivers despite processor differences.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#87: FILE: drivers/misc/atmel_tclib.c:1:
+#include <linux/init.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#94: FILE: drivers/misc/atmel_tclib.c:8:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#116: FILE: drivers/misc/atmel_tclib.c:30:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#132: FILE: drivers/misc/atmel_tclib.c:46:
+struct platform_device *atmel_tc_alloc(unsigned block, struct resource **iomem)

WARNING:MISPLACED_INIT: __initdata should be placed after e2big[]
#174: FILE: drivers/misc/atmel_tclib.c:88:
+	static char __initdata e2big[] =

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#178: FILE: drivers/misc/atmel_tclib.c:92:
+		printk(e2big, pdev->id);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#197: FILE: include/linux/atmel_tc.h:1:
+/*

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#226: FILE: include/linux/atmel_tc.h:30:
+extern struct platform_device *atmel_tc_alloc(unsigned block,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#226: FILE: include/linux/atmel_tc.h:30:
+extern struct platform_device *atmel_tc_alloc(unsigned block,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#227: FILE: include/linux/atmel_tc.h:31:
+extern struct platform_device *atmel_tc_alloc(unsigned block,
+		struct resource **iomem);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#228: FILE: include/linux/atmel_tc.h:32:
+extern void atmel_tc_free(struct platform_device *tc);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#233: FILE: include/linux/atmel_tc.h:37:
+
+

CHECK:BIT_MACRO: Prefer using the BIT macro
#245: FILE: include/linux/atmel_tc.h:49:
+#define     ATMEL_TC_SYNC	(1 << 0)	/* synchronize timers */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#250: FILE: include/linux/atmel_tc.h:54:
+#define        ATMEL_TC_TC0XC0S_NONE	(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#255: FILE: include/linux/atmel_tc.h:59:
+#define        ATMEL_TC_TC1XC1S_NONE	(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#260: FILE: include/linux/atmel_tc.h:64:
+#define        ATMEL_TC_TC2XC2S_NONE	(1 << 4)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#264: FILE: include/linux/atmel_tc.h:68:
+
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#283: FILE: include/linux/atmel_tc.h:87:
+#define ATMEL_TC_CHAN(idx)	((idx)*0x40)
                           	      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#287: FILE: include/linux/atmel_tc.h:91:
+#define     ATMEL_TC_CLKEN	(1 << 0)	/* clock enable */

CHECK:BIT_MACRO: Prefer using the BIT macro
#288: FILE: include/linux/atmel_tc.h:92:
+#define     ATMEL_TC_CLKDIS	(1 << 1)	/* clock disable */

CHECK:BIT_MACRO: Prefer using the BIT macro
#289: FILE: include/linux/atmel_tc.h:93:
+#define     ATMEL_TC_SWTRG	(1 << 2)	/* software trigger */

CHECK:BIT_MACRO: Prefer using the BIT macro
#296: FILE: include/linux/atmel_tc.h:100:
+#define        ATMEL_TC_TIMER_CLOCK2	(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#303: FILE: include/linux/atmel_tc.h:107:
+#define     ATMEL_TC_CLKI	(1 << 3)	/* clock invert */

CHECK:BIT_MACRO: Prefer using the BIT macro
#306: FILE: include/linux/atmel_tc.h:110:
+#define        ATMEL_TC_GATE_XC0	(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#309: FILE: include/linux/atmel_tc.h:113:
+#define     ATMEL_TC_WAVE	(1 << 15)	/* true = Waveform mode */

CHECK:BIT_MACRO: Prefer using the BIT macro
#312: FILE: include/linux/atmel_tc.h:116:
+#define     ATMEL_TC_LDBSTOP	(1 << 6)	/* counter stops on RB load */

CHECK:BIT_MACRO: Prefer using the BIT macro
#313: FILE: include/linux/atmel_tc.h:117:
+#define     ATMEL_TC_LDBDIS	(1 << 7)	/* counter disable on RB load */

CHECK:BIT_MACRO: Prefer using the BIT macro
#316: FILE: include/linux/atmel_tc.h:120:
+#define        ATMEL_TC_ETRGEDG_RISING	(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#319: FILE: include/linux/atmel_tc.h:123:
+#define     ATMEL_TC_ABETRG	(1 << 10)	/* external trigger is TIOA? */

CHECK:BIT_MACRO: Prefer using the BIT macro
#320: FILE: include/linux/atmel_tc.h:124:
+#define     ATMEL_TC_CPCTRG	(1 << 14)	/* RC compare trigger enable */

CHECK:BIT_MACRO: Prefer using the BIT macro
#323: FILE: include/linux/atmel_tc.h:127:
+#define        ATMEL_TC_LDRA_RISING	(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#328: FILE: include/linux/atmel_tc.h:132:
+#define        ATMEL_TC_LDRB_RISING	(1 << 18)

CHECK:BIT_MACRO: Prefer using the BIT macro
#333: FILE: include/linux/atmel_tc.h:137:
+#define     ATMEL_TC_CPCSTOP	(1 <<  6)	/* RC compare stops counter */

CHECK:BIT_MACRO: Prefer using the BIT macro
#334: FILE: include/linux/atmel_tc.h:138:
+#define     ATMEL_TC_CPCDIS	(1 <<  7)	/* RC compare disables counter */

CHECK:BIT_MACRO: Prefer using the BIT macro
#337: FILE: include/linux/atmel_tc.h:141:
+#define        ATMEL_TC_EEVTEDG_RISING	(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#342: FILE: include/linux/atmel_tc.h:146:
+#define        ATMEL_TC_EEVT_XC0	(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#345: FILE: include/linux/atmel_tc.h:149:
+#define     ATMEL_TC_ENETRG	(1 << 12)	/* external event is trigger */

CHECK:BIT_MACRO: Prefer using the BIT macro
#348: FILE: include/linux/atmel_tc.h:152:
+#define        ATMEL_TC_WAVESEL_UPDOWN	(1 << 13)

CHECK:BIT_MACRO: Prefer using the BIT macro
#353: FILE: include/linux/atmel_tc.h:157:
+#define        ATMEL_TC_ACPA_SET	(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#358: FILE: include/linux/atmel_tc.h:162:
+#define        ATMEL_TC_ACPC_SET	(1 << 18)

CHECK:BIT_MACRO: Prefer using the BIT macro
#363: FILE: include/linux/atmel_tc.h:167:
+#define        ATMEL_TC_AEEVT_SET	(1 << 20)

CHECK:BIT_MACRO: Prefer using the BIT macro
#368: FILE: include/linux/atmel_tc.h:172:
+#define        ATMEL_TC_ASWTRG_SET	(1 << 22)

CHECK:BIT_MACRO: Prefer using the BIT macro
#373: FILE: include/linux/atmel_tc.h:177:
+#define        ATMEL_TC_BCPB_SET	(1 << 24)

CHECK:BIT_MACRO: Prefer using the BIT macro
#378: FILE: include/linux/atmel_tc.h:182:
+#define        ATMEL_TC_BCPC_SET	(1 << 26)

CHECK:BIT_MACRO: Prefer using the BIT macro
#383: FILE: include/linux/atmel_tc.h:187:
+#define        ATMEL_TC_BEEVT_SET	(1 << 28)

CHECK:BIT_MACRO: Prefer using the BIT macro
#388: FILE: include/linux/atmel_tc.h:192:
+#define        ATMEL_TC_BSWTRG_SET	(1 << 30)

CHECK:BIT_MACRO: Prefer using the BIT macro
#399: FILE: include/linux/atmel_tc.h:203:
+#define     ATMEL_TC_CLKSTA	(1 << 16)	/* clock enabled */

CHECK:BIT_MACRO: Prefer using the BIT macro
#400: FILE: include/linux/atmel_tc.h:204:
+#define     ATMEL_TC_MTIOA	(1 << 17)	/* TIOA mirror */

CHECK:BIT_MACRO: Prefer using the BIT macro
#401: FILE: include/linux/atmel_tc.h:205:
+#define     ATMEL_TC_MTIOB	(1 << 18)	/* TIOB mirror */

CHECK:BIT_MACRO: Prefer using the BIT macro
#408: FILE: include/linux/atmel_tc.h:212:
+#define     ATMEL_TC_COVFS	(1 <<  0)	/* counter overflow */

CHECK:BIT_MACRO: Prefer using the BIT macro
#409: FILE: include/linux/atmel_tc.h:213:
+#define     ATMEL_TC_LOVRS	(1 <<  1)	/* load overrun */

CHECK:BIT_MACRO: Prefer using the BIT macro
#410: FILE: include/linux/atmel_tc.h:214:
+#define     ATMEL_TC_CPAS	(1 <<  2)	/* RA compare */

CHECK:BIT_MACRO: Prefer using the BIT macro
#411: FILE: include/linux/atmel_tc.h:215:
+#define     ATMEL_TC_CPBS	(1 <<  3)	/* RB compare */

CHECK:BIT_MACRO: Prefer using the BIT macro
#412: FILE: include/linux/atmel_tc.h:216:
+#define     ATMEL_TC_CPCS	(1 <<  4)	/* RC compare */

CHECK:BIT_MACRO: Prefer using the BIT macro
#413: FILE: include/linux/atmel_tc.h:217:
+#define     ATMEL_TC_LDRAS	(1 <<  5)	/* RA loading */

CHECK:BIT_MACRO: Prefer using the BIT macro
#414: FILE: include/linux/atmel_tc.h:218:
+#define     ATMEL_TC_LDRBS	(1 <<  6)	/* RB loading */

CHECK:BIT_MACRO: Prefer using the BIT macro
#415: FILE: include/linux/atmel_tc.h:219:
+#define     ATMEL_TC_ETRGS	(1 <<  7)	/* external trigger */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000316603.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 51 checks, 349 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000316603.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
