WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
recommended attribute which makes use of the LSM hooks added earlier. It also

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#55: FILE: fs/nfs/inode.c:146:
+	nfsi->cache_validity |= NFS_INO_INVALID_ATTR| \
 	                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#55: FILE: fs/nfs/inode.c:146:
+	nfsi->cache_validity |= NFS_INO_INVALID_ATTR| \

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#56: FILE: fs/nfs/inode.c:147:
+				NFS_INO_INVALID_LABEL| \
 				                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#57: FILE: fs/nfs/inode.c:148:
+				NFS_INO_INVALID_ACCESS| \
 				                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#58: FILE: fs/nfs/inode.c:149:
+				NFS_INO_INVALID_ACL| \
 				                   ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'fattr->label != NULL'
#79: FILE: fs/nfs/inode.c:248:
+	if ((fattr->valid & NFS_ATTR_FATTR_V4) &&
+	    (fattr->bitmap[1] & FATTR4_WORD1_SECURITY_LABEL) &&
+	    (fattr->label != NULL) &&
+	    (inode->i_security != NULL)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'inode->i_security != NULL'
#79: FILE: fs/nfs/inode.c:248:
+	if ((fattr->valid & NFS_ATTR_FATTR_V4) &&
+	    (fattr->bitmap[1] & FATTR4_WORD1_SECURITY_LABEL) &&
+	    (fattr->label != NULL) &&
+	    (inode->i_security != NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "fattr->label"
#81: FILE: fs/nfs/inode.c:250:
+	    (fattr->label != NULL) &&

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "inode->i_security"
#82: FILE: fs/nfs/inode.c:251:
+	    (inode->i_security != NULL)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#84: FILE: fs/nfs/inode.c:253:
+		error = security_inode_notifysecctx(inode, fattr->label,
+						   fattr->label_len);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#87: FILE: fs/nfs/inode.c:256:
+			printk(KERN_ERR "%s() %s %d "

WARNING:SPLIT_STRING: quoted string split across lines
#88: FILE: fs/nfs/inode.c:257:
+			printk(KERN_ERR "%s() %s %d "
+				"security_inode_notifysecctx() %d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#115: FILE: fs/nfs/inode.c:824:
+	if (!(NFS_I(inode)->cache_validity & (NFS_INO_INVALID_ATTR|NFS_INO_INVALID_LABEL))
 	                                                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#134: FILE: fs/nfs/inode.c:1194:
+	if (invalid & (NFS_INO_INVALID_ATTR|NFS_INO_INVALID_LABEL)) {
 	                                   ^

WARNING:LONG_LINE: line length of 168 exceeds 100 columns
#199: FILE: fs/nfs/nfs4proc.c:1050:
+static int _nfs4_do_open(struct inode *dir, struct path *path, int flags, struct iattr *sattr, struct nfs4_label *label, struct rpc_cred *cred, struct nfs4_state **res)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 157 exceeds 100 columns
#217: FILE: fs/nfs/nfs4proc.c:1107:
+static struct nfs4_state *nfs4_do_open(struct inode *dir, struct path *path, int flags, struct iattr *sattr, struct nfs4_label *label, struct rpc_cred *cred)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#242: FILE: fs/nfs/nfs4proc.c:1165:
+^I^I.bitmask ^I= server->attr_bitmask,$

WARNING:LINE_SPACING: Missing a blank line after declarations
#285: FILE: fs/nfs/nfs4proc.c:1432:
+			int error;
+			error = security_dentry_init_security(dentry,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#286: FILE: fs/nfs/nfs4proc.c:1433:
+			error = security_dentry_init_security(dentry,
+					attr.ia_mode, &l.label, &l.len);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "label"
#302: FILE: fs/nfs/nfs4proc.c:1449:
+	if (label != NULL)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#325: FILE: fs/nfs/nfs4proc.c:1528:
+		} else
[...]
+		server->attr_bitmask[1] &= ~FATTR4_WORD1_SECURITY_LABEL;

CHECK:BRACES: Unbalanced braces around else statement
#325: FILE: fs/nfs/nfs4proc.c:1528:
+		} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#360: FILE: fs/nfs/nfs4proc.c:1952:
+	if (((nd->flags & LOOKUP_CREATE) != 0) &&
+	      nfs_server_capable(dir, NFS_CAP_SECURITY_LABEL)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#362: FILE: fs/nfs/nfs4proc.c:1954:
+		status = security_dentry_init_security(dentry,
+				sattr->ia_mode, &l.label, &l.len);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "label"
#394: FILE: fs/nfs/nfs4proc.c:1992:
+	if (label != NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#428: FILE: fs/nfs/nfs4proc.c:2293:
+		err = security_dentry_init_security(dentry,
+				sattr->ia_mode, &l.label, &l.len);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "label"
#442: FILE: fs/nfs/nfs4proc.c:2306:
+	if (label != NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#472: FILE: fs/nfs/nfs4proc.c:2340:
+		err = security_dentry_init_security(dentry,
+				sattr->ia_mode, &l.label, &l.len);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "label"
#485: FILE: fs/nfs/nfs4proc.c:2352:
+	if (label != NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#519: FILE: fs/nfs/nfs4proc.c:2452:
+		err = security_dentry_init_security(dentry,
+				sattr->ia_mode, &l.label, &l.len);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "label"
#532: FILE: fs/nfs/nfs4proc.c:2464:
+	if (label != NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#592: FILE: fs/nfs/nfs4proc.c:2964:
+		err = nfs4_handle_exception(NFS_SERVER(inode),
+				_nfs4_get_security_label(inode, buf, buflen),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#599: FILE: fs/nfs/nfs4proc.c:2971:
+static int _nfs4_do_set_security_label(struct inode *inode,
+				      struct nfs4_label *label,

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#603: FILE: fs/nfs/nfs4proc.c:2975:
+{
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#628: FILE: fs/nfs/nfs4proc.c:3000:
+	if (nfs4_copy_delegation_stateid(&args.stateid, inode)) {
[...]
+	} else if (state != NULL) {
[...]
+	} else
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "state"
#630: FILE: fs/nfs/nfs4proc.c:3002:
+	} else if (state != NULL) {

CHECK:BRACES: Unbalanced braces around else statement
#633: FILE: fs/nfs/nfs4proc.c:3005:
+	} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "state"
#637: FILE: fs/nfs/nfs4proc.c:3009:
+	if (status == 0 && state != NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#643: FILE: fs/nfs/nfs4proc.c:3015:
+static int nfs4_do_set_security_label(struct inode *inode,
+				     struct nfs4_label *label,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#652: FILE: fs/nfs/nfs4proc.c:3024:
+		err = nfs4_handle_exception(NFS_SERVER(inode),
+			_nfs4_do_set_security_label(inode, label, fattr, state),

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ctx"
#685: FILE: fs/nfs/nfs4proc.c:3057:
+	if (ctx != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ctx"
#691: FILE: fs/nfs/nfs4proc.c:3063:
+	if (ctx != NULL)

WARNING:LONG_LINE: line length of 137 exceeds 100 columns
#711: FILE: fs/nfs/nfs4xdr.c:604:
+static int encode_attrs(struct xdr_stream *xdr, const struct iattr *iap, const struct nfs4_label *label, const struct nfs_server *server)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "label"
#720: FILE: fs/nfs/nfs4xdr.c:655:
+	if (label != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "label"
#731: FILE: fs/nfs/nfs4xdr.c:717:
+	if (label != NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#763: FILE: fs/nfs/nfs4xdr.c:1315:
+        if ((status = encode_attrs(xdr, arg->iap, arg->label, server)))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#763: FILE: fs/nfs/nfs4xdr.c:1315:
+        if ((status = encode_attrs(xdr, arg->iap, arg->label, server)))$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#763: FILE: fs/nfs/nfs4xdr.c:1315:
+        if ((status = encode_attrs(xdr, arg->iap, arg->label, server)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#771: FILE: fs/nfs/nfs4xdr.c:2968:
+static int decode_attr_security_label(struct xdr_stream *xdr, uint32_t *bitmap, char **ctx, u32 *ctxlen)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ctx"
#784: FILE: fs/nfs/nfs4xdr.c:2981:
+			if (*ctx != NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#786: FILE: fs/nfs/nfs4xdr.c:2983:
+					printk(KERN_ERR

CHECK:BRACES: Unbalanced braces around else statement
#796: FILE: fs/nfs/nfs4xdr.c:2993:
+		} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#797: FILE: fs/nfs/nfs4xdr.c:2994:
+			printk(KERN_WARNING "%s: label too long (%u)!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#798: FILE: fs/nfs/nfs4xdr.c:2995:
+			printk(KERN_WARNING "%s: label too long (%u)!\n",
+					__FUNCTION__, len);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#798: FILE: fs/nfs/nfs4xdr.c:2995:
+					__FUNCTION__, len);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#811: FILE: fs/nfs/nfs4xdr.c:3235:
+	if ((status = decode_attr_security_label(xdr, bitmap,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#812: FILE: fs/nfs/nfs4xdr.c:3236:
+	if ((status = decode_attr_security_label(xdr, bitmap,
+				&fattr->label, &fattr->label_len)) != 0)

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#830: FILE: fs/nfs/super.c:561:
+			seq_printf(m, ",security_label");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#842: FILE: fs/nfs/super.c:622:
+			seq_printf(m, ",security_label");

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#875: FILE: include/linux/nfs_fs.h:345:
+extern void nfs_setsecurity(struct inode *inode, struct nfs_fattr *fattr);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000227894.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 17 warnings, 41 checks, 782 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000227894.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
