WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#46: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#51: FILE: fs/ubifs/journal.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#66: FILE: fs/ubifs/journal.c:16:
+ * this program; if not, write to the Free Software Foundation, Inc., 51$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#476: FILE: fs/ubifs/journal.c:426:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: braces {} should be used on all arms of this statement
#635: FILE: fs/ubifs/journal.c:585:
+	if (deletion) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#640: FILE: fs/ubifs/journal.c:590:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#858: FILE: fs/ubifs/journal.c:808:
+	if (new_inode) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#862: FILE: fs/ubifs/journal.c:812:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#907: FILE: fs/ubifs/journal.c:857:
+	if (old_dir == new_dir)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#909: FILE: fs/ubifs/journal.c:859:
+	else {

WARNING:TYPO_SPELLING: 'trun' may be misspelled - perhaps 'turn'?
#1044: FILE: fs/ubifs/journal.c:994:
+	struct ubifs_trun_node *trun;
 	                        ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'trun' may be misspelled - perhaps 'turn'?
#1052: FILE: fs/ubifs/journal.c:1002:
+	trun = kmalloc(sz, GFP_NOFS);
 	^^^^

WARNING:TYPO_SPELLING: 'trun' may be misspelled - perhaps 'turn'?
#1053: FILE: fs/ubifs/journal.c:1003:
+	if (!trun)
 	     ^^^^

WARNING:TYPO_SPELLING: 'trun' may be misspelled - perhaps 'turn'?
#1060: FILE: fs/ubifs/journal.c:1010:
+	ubifs_prepare_node(c, trun, UBIFS_TRUN_NODE_SZ, 0);
 	                      ^^^^

WARNING:TYPO_SPELLING: 'trun' may be misspelled - perhaps 'turn'?
#1066: FILE: fs/ubifs/journal.c:1016:
+		dn = (void *)trun + ALIGN(UBIFS_TRUN_NODE_SZ, 8);
 		             ^^^^

CHECK:BRACES: Unbalanced braces around else statement
#1075: FILE: fs/ubifs/journal.c:1025:
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#1078: FILE: fs/ubifs/journal.c:1028:
+			else {

WARNING:TYPO_SPELLING: 'trun' may be misspelled - perhaps 'turn'?
#1104: FILE: fs/ubifs/journal.c:1054:
+	err = write_head(c, BASEHD, trun, len, &lnum, &offs, 0);
 	                            ^^^^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1129: FILE: fs/ubifs/journal.c:1079:
+	blk = old_size / UBIFS_BLOCK_SIZE - (bit ? 0: 1);
 	                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'trun' may be misspelled - perhaps 'turn'?
#1137: FILE: fs/ubifs/journal.c:1087:
+	kfree(trun);
 	      ^^^^

WARNING:TYPO_SPELLING: 'trun' may be misspelled - perhaps 'turn'?
#1144: FILE: fs/ubifs/journal.c:1094:
+	kfree(trun);
 	      ^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1321: FILE: fs/ubifs/log.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1336: FILE: fs/ubifs/log.c:16:
+ * this program; if not, write to the Free Software Foundation, Inc., 51$

CHECK:BRACES: braces {} should be used on all arms of this statement
#1375: FILE: fs/ubifs/log.c:55:
+		if (lnum < bud->lnum)
[...]
+		else if (lnum > bud->lnum)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1379: FILE: fs/ubifs/log.c:59:
+		else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1408: FILE: fs/ubifs/log.c:88:
+		if (lnum < bud->lnum)
[...]
+		else if (lnum > bud->lnum)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1412: FILE: fs/ubifs/log.c:92:
+		else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1478: FILE: fs/ubifs/log.c:158:
+	if (c->jheads) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1481: FILE: fs/ubifs/log.c:161:
+	} else

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*bud)...) over kmalloc(sizeof(struct ubifs_bud)...)
#1536: FILE: fs/ubifs/log.c:216:
+	bud = kmalloc(sizeof(struct ubifs_bud), GFP_NOFS);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#1556: FILE: fs/ubifs/log.c:236:
+	 * Make sure the the amount of space in buds will not exceed

WARNING:SPLIT_STRING: quoted string split across lines
#1670: FILE: fs/ubifs/log.c:350:
+			dbg_log("preserve %d:%d, jhead %d, bud bytes %d, "
+				"cmt_bud_bytes %lld", bud->lnum, bud->start,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#1677: FILE: fs/ubifs/log.c:357:
+			dbg_log("remove %d:%d, jhead %d, bud bytes %d, "
+				"cmt_bud_bytes %lld", bud->lnum, bud->start,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1721: FILE: fs/ubifs/log.c:401:
+	buf = cs = kmalloc(max_len, GFP_NOFS);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dr)...) over kzalloc(sizeof(struct done_ref)...)
#1912: FILE: fs/ubifs/log.c:592:
+	dr = kzalloc(sizeof(struct done_ref), GFP_NOFS);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000284707.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 15 warnings, 17 checks, 2063 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000284707.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
