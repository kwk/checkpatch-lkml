WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#297: FILE: drivers/s390/cio/qdio_debug.h:42:
+#define DBF_HEX(addr, len) \
+	do { \
+		debug_event(qdio_dbf_setup, DBF_ERR, (void*)(addr), len); \
+	} while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#299: FILE: drivers/s390/cio/qdio_debug.h:44:
+		debug_event(qdio_dbf_setup, DBF_ERR, (void*)(addr), len); \

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#311: FILE: drivers/s390/cio/qdio_debug.h:54:
+#define DBF_ERROR_HEX(addr, len) \
+	do { \
+		debug_event(qdio_dbf_error, DBF_ERR, (void*)(addr), len); \
+	} while (0)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#313: FILE: drivers/s390/cio/qdio_debug.h:56:
+		debug_event(qdio_dbf_error, DBF_ERR, (void*)(addr), len); \

CHECK:LINE_SPACING: Please don't use multiple blank lines
#316: FILE: drivers/s390/cio/qdio_debug.h:59:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'level' - possible side-effects?
#317: FILE: drivers/s390/cio/qdio_debug.h:60:
+#define DBF_DEV_EVENT(level, device, text...) \
+	do { \
+		char debug_buffer[QDIO_DBF_LEN]; \
+		if (qdio_dbf_passes(device->debug_area, level)) { \
+			snprintf(debug_buffer, QDIO_DBF_LEN, text); \
+			debug_text_event(device->debug_area, level, debug_buffer); \
+		} \
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'device' - possible side-effects?
#317: FILE: drivers/s390/cio/qdio_debug.h:60:
+#define DBF_DEV_EVENT(level, device, text...) \
+	do { \
+		char debug_buffer[QDIO_DBF_LEN]; \
+		if (qdio_dbf_passes(device->debug_area, level)) { \
+			snprintf(debug_buffer, QDIO_DBF_LEN, text); \
+			debug_text_event(device->debug_area, level, debug_buffer); \
+		} \
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'device' may be better as '(device)' to avoid precedence issues
#317: FILE: drivers/s390/cio/qdio_debug.h:60:
+#define DBF_DEV_EVENT(level, device, text...) \
+	do { \
+		char debug_buffer[QDIO_DBF_LEN]; \
+		if (qdio_dbf_passes(device->debug_area, level)) { \
+			snprintf(debug_buffer, QDIO_DBF_LEN, text); \
+			debug_text_event(device->debug_area, level, debug_buffer); \
+		} \
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'device' may be better as '(device)' to avoid precedence issues
#326: FILE: drivers/s390/cio/qdio_debug.h:69:
+#define DBF_DEV_HEX(level, device, addr, len) \
+	do { \
+		debug_event(device->debug_area, level, (void*)(addr), len); \
+	} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#326: FILE: drivers/s390/cio/qdio_debug.h:69:
+#define DBF_DEV_HEX(level, device, addr, len) \
+	do { \
+		debug_event(device->debug_area, level, (void*)(addr), len); \
+	} while (0)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#328: FILE: drivers/s390/cio/qdio_debug.h:71:
+		debug_event(device->debug_area, level, (void*)(addr), len); \

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'q' may be better as '(q)' to avoid precedence issues
#363: FILE: drivers/s390/cio/qdio.h:310:
+#define SCH_NO(q)	(q->irq_ptr->schid.sch_no)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "irq_ptr->debug_area"
#953: FILE: drivers/s390/cio/qdio_main.c:1189:
+	if (irq_ptr->debug_area != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPLIT_STRING: quoted string split across lines
#1336: FILE: drivers/s390/cio/qdio_setup.c:450:
+	snprintf(s, 80, "qdio: %s %s on SC %x using "
+		 "AI:%d QEBSM:%d PCI:%d TDD:%d SIGA:%s%s%s%s%s%s\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000198822.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 4 warnings, 7 checks, 1292 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000198822.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
