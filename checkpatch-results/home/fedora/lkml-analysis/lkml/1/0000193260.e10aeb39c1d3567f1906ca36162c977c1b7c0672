WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
Subject: [PATCH] [Target_Core_Mod] Add generic target portal group infrastructure

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#79: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#84: FILE: drivers/lio-core/target_core_tpg.c:1:
+/*********************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#90: FILE: drivers/lio-core/target_core_tpg.c:7:
+ * Copyright (c) 2005, 2006, 2007 SBE, Inc. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#107: FILE: drivers/lio-core/target_core_tpg.c:24:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#108: FILE: drivers/lio-core/target_core_tpg.c:25:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#112: FILE: drivers/lio-core/target_core_tpg.c:29:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#148: FILE: drivers/lio-core/target_core_tpg.c:65:
+static void core_clear_initiator_node_from_tpg (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#148: FILE: drivers/lio-core/target_core_tpg.c:65:
+static void core_clear_initiator_node_from_tpg (

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#165: FILE: drivers/lio-core/target_core_tpg.c:82:
+			printk(KERN_ERR "%s device entries device pointer is"

WARNING:SPLIT_STRING: quoted string split across lines
#166: FILE: drivers/lio-core/target_core_tpg.c:83:
+			printk(KERN_ERR "%s device entries device pointer is"
+				" NULL, but Initiator has access.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#174: FILE: drivers/lio-core/target_core_tpg.c:91:
+		core_update_device_list_for_node(lun, deve->mapped_lun,
+			TRANSPORT_LUNFLAGS_NO_ACCESS, nacl, tpg, 0);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'acl->mapped_lun == deve->mapped_lun'
#178: FILE: drivers/lio-core/target_core_tpg.c:95:
+			if (!(strcmp(acl->initiatorname, nacl->initiatorname)) &&
+			     (acl->mapped_lun == deve->mapped_lun))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#179: FILE: drivers/lio-core/target_core_tpg.c:96:
+			if (!(strcmp(acl->initiatorname, nacl->initiatorname)) &&
+			     (acl->mapped_lun == deve->mapped_lun))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#184: FILE: drivers/lio-core/target_core_tpg.c:101:
+			printk(KERN_ERR "Unable to locate se_lun_acl_t for %s, mapped_lun: %u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#185: FILE: drivers/lio-core/target_core_tpg.c:102:
+			printk(KERN_ERR "Unable to locate se_lun_acl_t for %s, mapped_lun: %u\n",
+				nacl->initiatorname, deve->mapped_lun);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#190: FILE: drivers/lio-core/target_core_tpg.c:107:
+^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#196: FILE: drivers/lio-core/target_core_tpg.c:113:
+        }$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: drivers/lio-core/target_core_tpg.c:113:
+        }$

WARNING:RETURN_VOID: void function return statements are not generally useful
#200: FILE: drivers/lio-core/target_core_tpg.c:117:
+	return;
+}

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#206: FILE: drivers/lio-core/target_core_tpg.c:123:
+static se_node_acl_t *__core_tpg_get_initiator_node_acl (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#206: FILE: drivers/lio-core/target_core_tpg.c:123:
+static se_node_acl_t *__core_tpg_get_initiator_node_acl (

ERROR:TRAILING_WHITESPACE: trailing whitespace
#211: FILE: drivers/lio-core/target_core_tpg.c:128:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#223: FILE: drivers/lio-core/target_core_tpg.c:140:
+ */     $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#224: FILE: drivers/lio-core/target_core_tpg.c:141:
+extern se_node_acl_t *core_tpg_get_initiator_node_acl (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#224: FILE: drivers/lio-core/target_core_tpg.c:141:
+extern se_node_acl_t *core_tpg_get_initiator_node_acl (

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#224: FILE: drivers/lio-core/target_core_tpg.c:141:
+extern se_node_acl_t *core_tpg_get_initiator_node_acl (

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#227: FILE: drivers/lio-core/target_core_tpg.c:144:
+{               $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#229: FILE: drivers/lio-core/target_core_tpg.c:146:
+^I^I                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: drivers/lio-core/target_core_tpg.c:146:
+^I^I                $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#233: FILE: drivers/lio-core/target_core_tpg.c:150:
+		if (!(strcmp(acl->initiatorname, initiatorname)) &&
+		   (!(acl->nodeacl_flags & NAF_DYNAMIC_NODE_ACL))) {

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#235: FILE: drivers/lio-core/target_core_tpg.c:152:
+			return(acl);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#240: FILE: drivers/lio-core/target_core_tpg.c:157:
+	return(NULL);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#247: FILE: drivers/lio-core/target_core_tpg.c:164:
+extern void core_tpg_add_node_to_devs (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#247: FILE: drivers/lio-core/target_core_tpg.c:164:
+extern void core_tpg_add_node_to_devs (

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#264: FILE: drivers/lio-core/target_core_tpg.c:181:
+		 * By default in LIO-Target $FABRIC_MOD, demo_mode_write_protect is ON, or READ_ONLY;

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:BRACES: braces {} should be used on all arms of this statement
#267: FILE: drivers/lio-core/target_core_tpg.c:184:
+			if (LUN_OBJ_API(lun)->get_device_access) {
[...]
+			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: drivers/lio-core/target_core_tpg.c:187:
+^I                        else$

ERROR:CODE_INDENT: code indent should use tabs where possible
#271: FILE: drivers/lio-core/target_core_tpg.c:188:
+                ^I                lun_access = TRANSPORT_LUNFLAGS_READ_WRITE;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#271: FILE: drivers/lio-core/target_core_tpg.c:188:
+                ^I                lun_access = TRANSPORT_LUNFLAGS_READ_WRITE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: drivers/lio-core/target_core_tpg.c:188:
+                ^I                lun_access = TRANSPORT_LUNFLAGS_READ_WRITE;$

CHECK:BRACES: Unbalanced braces around else statement
#272: FILE: drivers/lio-core/target_core_tpg.c:189:
+			} else

ERROR:CODE_INDENT: code indent should use tabs where possible
#275: FILE: drivers/lio-core/target_core_tpg.c:192:
+                        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#276: FILE: drivers/lio-core/target_core_tpg.c:193:
+                         * Allow only optical drives to issue R/W in default RO demo mode.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#277: FILE: drivers/lio-core/target_core_tpg.c:194:
+                         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: drivers/lio-core/target_core_tpg.c:195:
+                        if (LUN_OBJ_API(lun)->get_device_type(lun->lun_type_ptr) == TYPE_DISK)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: drivers/lio-core/target_core_tpg.c:195:
+                        if (LUN_OBJ_API(lun)->get_device_type(lun->lun_type_ptr) == TYPE_DISK)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#279: FILE: drivers/lio-core/target_core_tpg.c:196:
+                                lun_access = TRANSPORT_LUNFLAGS_READ_ONLY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: drivers/lio-core/target_core_tpg.c:196:
+                                lun_access = TRANSPORT_LUNFLAGS_READ_ONLY;$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#284: FILE: drivers/lio-core/target_core_tpg.c:201:
+		printk("TARGET_CORE[%s]->TPG[%u]_LUN[%u] - Adding %s access"

WARNING:SPLIT_STRING: quoted string split across lines
#285: FILE: drivers/lio-core/target_core_tpg.c:202:
+		printk("TARGET_CORE[%s]->TPG[%u]_LUN[%u] - Adding %s access"
+			" for LUN in Demo Mode\n", TPG_TFO(tpg)->get_fabric_name(),

ERROR:CODE_INDENT: code indent should use tabs where possible
#286: FILE: drivers/lio-core/target_core_tpg.c:203:
+ ^I^I^ITPG_TFO(tpg)->tpg_get_tag(tpg), lun->unpacked_lun,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#286: FILE: drivers/lio-core/target_core_tpg.c:203:
+ ^I^I^ITPG_TFO(tpg)->tpg_get_tag(tpg), lun->unpacked_lun,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: drivers/lio-core/target_core_tpg.c:203:
+ ^I^I^ITPG_TFO(tpg)->tpg_get_tag(tpg), lun->unpacked_lun,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#291: FILE: drivers/lio-core/target_core_tpg.c:208:
+		core_update_device_list_for_node(lun, lun->unpacked_lun,
+				lun_access, acl, tpg, 1);

WARNING:RETURN_VOID: void function return statements are not generally useful
#297: FILE: drivers/lio-core/target_core_tpg.c:214:
+	return;
+}

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#303: FILE: drivers/lio-core/target_core_tpg.c:220:
+static int core_set_queue_depth_for_node (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#303: FILE: drivers/lio-core/target_core_tpg.c:220:
+static int core_set_queue_depth_for_node (

ERROR:CODE_INDENT: code indent should use tabs where possible
#304: FILE: drivers/lio-core/target_core_tpg.c:221:
+        se_portal_group_t *tpg,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: drivers/lio-core/target_core_tpg.c:221:
+        se_portal_group_t *tpg,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#305: FILE: drivers/lio-core/target_core_tpg.c:222:
+        se_node_acl_t *acl)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: drivers/lio-core/target_core_tpg.c:222:
+        se_node_acl_t *acl)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#307: FILE: drivers/lio-core/target_core_tpg.c:224:
+        if (!acl->queue_depth) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: drivers/lio-core/target_core_tpg.c:224:
+        if (!acl->queue_depth) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#308: FILE: drivers/lio-core/target_core_tpg.c:225:
+                printk(KERN_ERR "Queue depth for %s Initiator Node: %s is 0,"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: drivers/lio-core/target_core_tpg.c:225:
+                printk(KERN_ERR "Queue depth for %s Initiator Node: %s is 0,"$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#308: FILE: drivers/lio-core/target_core_tpg.c:225:
+                printk(KERN_ERR "Queue depth for %s Initiator Node: %s is 0,"

WARNING:SPLIT_STRING: quoted string split across lines
#309: FILE: drivers/lio-core/target_core_tpg.c:226:
+                printk(KERN_ERR "Queue depth for %s Initiator Node: %s is 0,"
+			"defaulting to 1.\n", TPG_TFO(tpg)->get_fabric_name(),

ERROR:CODE_INDENT: code indent should use tabs where possible
#311: FILE: drivers/lio-core/target_core_tpg.c:228:
+                acl->queue_depth = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: drivers/lio-core/target_core_tpg.c:228:
+                acl->queue_depth = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#312: FILE: drivers/lio-core/target_core_tpg.c:229:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: drivers/lio-core/target_core_tpg.c:229:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#314: FILE: drivers/lio-core/target_core_tpg.c:231:
+        return(0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: drivers/lio-core/target_core_tpg.c:231:
+        return(0);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#321: FILE: drivers/lio-core/target_core_tpg.c:238:
+static int core_create_device_list_for_node (se_node_acl_t *nacl)

ERROR:CODE_INDENT: code indent should use tabs where possible
#323: FILE: drivers/lio-core/target_core_tpg.c:240:
+        if (!(nacl->device_list = (se_dev_entry_t *) kzalloc($

CHECK:SPACING: No space is necessary after a cast
#323: FILE: drivers/lio-core/target_core_tpg.c:240:
+        if (!(nacl->device_list = (se_dev_entry_t *) kzalloc(

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: drivers/lio-core/target_core_tpg.c:240:
+        if (!(nacl->device_list = (se_dev_entry_t *) kzalloc($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#323: FILE: drivers/lio-core/target_core_tpg.c:240:
+        if (!(nacl->device_list = (se_dev_entry_t *) kzalloc(

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#323: FILE: drivers/lio-core/target_core_tpg.c:240:
+        if (!(nacl->device_list = (se_dev_entry_t *) kzalloc(

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#323: FILE: drivers/lio-core/target_core_tpg.c:240:
+        if (!(nacl->device_list = (se_dev_entry_t *) kzalloc(

ERROR:CODE_INDENT: code indent should use tabs where possible
#324: FILE: drivers/lio-core/target_core_tpg.c:241:
+                        sizeof(se_dev_entry_t) * TRANSPORT_MAX_LUNS_PER_TPG, GFP_KERNEL))) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: drivers/lio-core/target_core_tpg.c:241:
+                        sizeof(se_dev_entry_t) * TRANSPORT_MAX_LUNS_PER_TPG, GFP_KERNEL))) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#325: FILE: drivers/lio-core/target_core_tpg.c:242:
+                printk(KERN_ERR "Unable to allocate memory for se_node_acl_t->device_list\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: drivers/lio-core/target_core_tpg.c:242:
+                printk(KERN_ERR "Unable to allocate memory for se_node_acl_t->device_list\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#325: FILE: drivers/lio-core/target_core_tpg.c:242:
+                printk(KERN_ERR "Unable to allocate memory for se_node_acl_t->device_list\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#326: FILE: drivers/lio-core/target_core_tpg.c:243:
+                return(-1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: drivers/lio-core/target_core_tpg.c:243:
+                return(-1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#327: FILE: drivers/lio-core/target_core_tpg.c:244:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: drivers/lio-core/target_core_tpg.c:244:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#328: FILE: drivers/lio-core/target_core_tpg.c:245:
+        memset(nacl->device_list, 0, sizeof(se_dev_entry_t) *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: drivers/lio-core/target_core_tpg.c:245:
+        memset(nacl->device_list, 0, sizeof(se_dev_entry_t) *$

ERROR:CODE_INDENT: code indent should use tabs where possible
#329: FILE: drivers/lio-core/target_core_tpg.c:246:
+                        TRANSPORT_MAX_LUNS_PER_TPG);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: drivers/lio-core/target_core_tpg.c:246:
+                        TRANSPORT_MAX_LUNS_PER_TPG);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#331: FILE: drivers/lio-core/target_core_tpg.c:248:
+        return(0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: drivers/lio-core/target_core_tpg.c:248:
+        return(0);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#331: FILE: drivers/lio-core/target_core_tpg.c:248:
+        return(0);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#338: FILE: drivers/lio-core/target_core_tpg.c:255:
+extern se_node_acl_t *core_tpg_check_initiator_node_acl (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#338: FILE: drivers/lio-core/target_core_tpg.c:255:
+extern se_node_acl_t *core_tpg_check_initiator_node_acl (

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#338: FILE: drivers/lio-core/target_core_tpg.c:255:
+extern se_node_acl_t *core_tpg_check_initiator_node_acl (

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#344: FILE: drivers/lio-core/target_core_tpg.c:261:
+	if ((acl = core_tpg_get_initiator_node_acl(tpg, initiatorname)))

CHECK:SPACING: No space is necessary after a cast
#350: FILE: drivers/lio-core/target_core_tpg.c:267:
+	if (!(acl = (se_node_acl_t *) kzalloc(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#350: FILE: drivers/lio-core/target_core_tpg.c:267:
+	if (!(acl = (se_node_acl_t *) kzalloc(

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#350: FILE: drivers/lio-core/target_core_tpg.c:267:
+	if (!(acl = (se_node_acl_t *) kzalloc(

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#350: FILE: drivers/lio-core/target_core_tpg.c:267:
+	if (!(acl = (se_node_acl_t *) kzalloc(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#352: FILE: drivers/lio-core/target_core_tpg.c:269:
+		printk(KERN_ERR "Unable to allocate memory for se_node_acl_t.\n");

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#353: FILE: drivers/lio-core/target_core_tpg.c:270:
+		return(NULL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#362: FILE: drivers/lio-core/target_core_tpg.c:279:
+        acl->acl_index = scsi_get_new_index(SCSI_AUTH_INTR_INDEX);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: drivers/lio-core/target_core_tpg.c:279:
+        acl->acl_index = scsi_get_new_index(SCSI_AUTH_INTR_INDEX);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#363: FILE: drivers/lio-core/target_core_tpg.c:280:
+        spin_lock_init(&acl->stats_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: drivers/lio-core/target_core_tpg.c:280:
+        spin_lock_init(&acl->stats_lock);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#371: FILE: drivers/lio-core/target_core_tpg.c:288:
+		return(NULL);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#377: FILE: drivers/lio-core/target_core_tpg.c:294:
+		return(NULL);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#387: FILE: drivers/lio-core/target_core_tpg.c:304:
+	printk("%s_TPG[%u] - Added DYNAMIC ACL with TCQ Depth: %d for %s"

WARNING:SPLIT_STRING: quoted string split across lines
#388: FILE: drivers/lio-core/target_core_tpg.c:305:
+	printk("%s_TPG[%u] - Added DYNAMIC ACL with TCQ Depth: %d for %s"
+		" Initiator Node: %s\n", TPG_TFO(tpg)->get_fabric_name(),

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#392: FILE: drivers/lio-core/target_core_tpg.c:309:
+	return(acl);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#399: FILE: drivers/lio-core/target_core_tpg.c:316:
+extern void core_tpg_free_node_acls (se_portal_group_t *tpg)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#421: FILE: drivers/lio-core/target_core_tpg.c:338:
+	tpg->acl_node_head = tpg->acl_node_tail = NULL;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#425: FILE: drivers/lio-core/target_core_tpg.c:342:
+}^I$

WARNING:RETURN_VOID: void function return statements are not generally useful
#425: FILE: drivers/lio-core/target_core_tpg.c:342:
+	return;
+}	

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#427: FILE: drivers/lio-core/target_core_tpg.c:344:
+EXPORT_SYMBOL(core_tpg_free_node_acls);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#429: FILE: drivers/lio-core/target_core_tpg.c:346:
+extern void core_tpg_clear_object_luns (se_portal_group_t *tpg)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lun->lun_status != TRANSPORT_LUN_STATUS_ACTIVE'
#438: FILE: drivers/lio-core/target_core_tpg.c:355:
+		if ((lun->lun_status != TRANSPORT_LUN_STATUS_ACTIVE) ||
+		    (lun->lun_type_ptr == NULL))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lun->lun_type_ptr == NULL'
#438: FILE: drivers/lio-core/target_core_tpg.c:355:
+		if ((lun->lun_status != TRANSPORT_LUN_STATUS_ACTIVE) ||
+		    (lun->lun_type_ptr == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lun->lun_type_ptr"
#439: FILE: drivers/lio-core/target_core_tpg.c:356:
+		    (lun->lun_type_ptr == NULL))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:RETURN_VOID: void function return statements are not generally useful
#449: FILE: drivers/lio-core/target_core_tpg.c:366:
+	return;
+}

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#451: FILE: drivers/lio-core/target_core_tpg.c:368:
+EXPORT_SYMBOL(core_tpg_clear_object_luns);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#457: FILE: drivers/lio-core/target_core_tpg.c:374:
+extern se_node_acl_t *core_tpg_add_initiator_node_acl (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#457: FILE: drivers/lio-core/target_core_tpg.c:374:
+extern se_node_acl_t *core_tpg_add_initiator_node_acl (

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#457: FILE: drivers/lio-core/target_core_tpg.c:374:
+extern se_node_acl_t *core_tpg_add_initiator_node_acl (

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#467: FILE: drivers/lio-core/target_core_tpg.c:384:
+	if ((acl = __core_tpg_get_initiator_node_acl(tpg, initiatorname))) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#470: FILE: drivers/lio-core/target_core_tpg.c:387:
+			printk("%s_TPG[%u] - Replacing dynamic ACL for"

WARNING:SPLIT_STRING: quoted string split across lines
#471: FILE: drivers/lio-core/target_core_tpg.c:388:
+			printk("%s_TPG[%u] - Replacing dynamic ACL for"
+				" %s\n", TPG_TFO(tpg)->get_fabric_name(),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#477: FILE: drivers/lio-core/target_core_tpg.c:394:
+		printk(KERN_ERR "ACL entry for %s Initiator"

WARNING:SPLIT_STRING: quoted string split across lines
#478: FILE: drivers/lio-core/target_core_tpg.c:395:
+		printk(KERN_ERR "ACL entry for %s Initiator"
+			" Node %s already exists for TPG %u, ignoring"

WARNING:SPLIT_STRING: quoted string split across lines
#479: FILE: drivers/lio-core/target_core_tpg.c:396:
+			" Node %s already exists for TPG %u, ignoring"
+			" request.\n",  TPG_TFO(tpg)->get_fabric_name(),

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#483: FILE: drivers/lio-core/target_core_tpg.c:400:
+		return(NULL);

CHECK:SPACING: No space is necessary after a cast
#487: FILE: drivers/lio-core/target_core_tpg.c:404:
+	if (!(acl = (se_node_acl_t *) kzalloc(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#487: FILE: drivers/lio-core/target_core_tpg.c:404:
+	if (!(acl = (se_node_acl_t *) kzalloc(

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#487: FILE: drivers/lio-core/target_core_tpg.c:404:
+	if (!(acl = (se_node_acl_t *) kzalloc(

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#487: FILE: drivers/lio-core/target_core_tpg.c:404:
+	if (!(acl = (se_node_acl_t *) kzalloc(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#489: FILE: drivers/lio-core/target_core_tpg.c:406:
+		printk(KERN_ERR "Unable to allocate memory for senode_acl_t.\n");

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#491: FILE: drivers/lio-core/target_core_tpg.c:408:
+		return(NULL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#504: FILE: drivers/lio-core/target_core_tpg.c:421:
+      $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#504: FILE: drivers/lio-core/target_core_tpg.c:421:
+      $

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#508: FILE: drivers/lio-core/target_core_tpg.c:425:
+		return(NULL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#510: FILE: drivers/lio-core/target_core_tpg.c:427:
+^I$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#515: FILE: drivers/lio-core/target_core_tpg.c:432:
+		return(NULL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#517: FILE: drivers/lio-core/target_core_tpg.c:434:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#524: FILE: drivers/lio-core/target_core_tpg.c:441:
+	printk("%s_TPG[%hu] - Added ACL with TCQ Depth: %d for %s"

WARNING:SPLIT_STRING: quoted string split across lines
#525: FILE: drivers/lio-core/target_core_tpg.c:442:
+	printk("%s_TPG[%hu] - Added ACL with TCQ Depth: %d for %s"
+		" Initiator Node: %s\n", TPG_TFO(tpg)->get_fabric_name(),

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#529: FILE: drivers/lio-core/target_core_tpg.c:446:
+	return(acl);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#532: FILE: drivers/lio-core/target_core_tpg.c:449:
+EXPORT_SYMBOL(core_tpg_add_initiator_node_acl);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#539: FILE: drivers/lio-core/target_core_tpg.c:456:
+extern int core_tpg_del_initiator_node_acl (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#539: FILE: drivers/lio-core/target_core_tpg.c:456:
+extern int core_tpg_del_initiator_node_acl (

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#549: FILE: drivers/lio-core/target_core_tpg.c:466:
+	if (!(acl = __core_tpg_get_initiator_node_acl(tpg, initiatorname))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#550: FILE: drivers/lio-core/target_core_tpg.c:467:
+		printk(KERN_ERR "Access Control List entry for %s Initiator"

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#550: FILE: drivers/lio-core/target_core_tpg.c:467:
+		printk(KERN_ERR "Access Control List entry for %s Initiator"
+			" Node %s does not exists for TPG %hu, ignoring"
+			" request.\n", TPG_TFO(tpg)->get_fabric_name(),
+			initiatorname, TPG_TFO(tpg)->tpg_get_tag(tpg));

WARNING:SPLIT_STRING: quoted string split across lines
#551: FILE: drivers/lio-core/target_core_tpg.c:468:
+		printk(KERN_ERR "Access Control List entry for %s Initiator"
+			" Node %s does not exists for TPG %hu, ignoring"

WARNING:SPLIT_STRING: quoted string split across lines
#552: FILE: drivers/lio-core/target_core_tpg.c:469:
+			" Node %s does not exists for TPG %hu, ignoring"
+			" request.\n", TPG_TFO(tpg)->get_fabric_name(),

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#555: FILE: drivers/lio-core/target_core_tpg.c:472:
+		return(ERR_INITIATORACL_DOES_NOT_EXIST);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#562: FILE: drivers/lio-core/target_core_tpg.c:479:
+#if 0^I$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#562: FILE: drivers/lio-core/target_core_tpg.c:479:
+#if 0	

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#569: FILE: drivers/lio-core/target_core_tpg.c:486:
+			printk(KERN_ERR "Unable to delete Access Control List for"

WARNING:SPLIT_STRING: quoted string split across lines
#570: FILE: drivers/lio-core/target_core_tpg.c:487:
+			printk(KERN_ERR "Unable to delete Access Control List for"
+			" iSCSI Initiator Node: %s while session is operational."

WARNING:SPLIT_STRING: quoted string split across lines
#571: FILE: drivers/lio-core/target_core_tpg.c:488:
+			" iSCSI Initiator Node: %s while session is operational."
+			"  To forcefully delete the session use the \"force=1\""

WARNING:SPLIT_STRING: quoted string split across lines
#572: FILE: drivers/lio-core/target_core_tpg.c:489:
+			"  To forcefully delete the session use the \"force=1\""
+				" parameter.\n", initiatorname);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#578: FILE: drivers/lio-core/target_core_tpg.c:495:
+			return(ERR_INITIATORACL_SESSION_EXISTS);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#600: FILE: drivers/lio-core/target_core_tpg.c:517:
+#if 0^I$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#600: FILE: drivers/lio-core/target_core_tpg.c:517:
+#if 0	

ERROR:TRAILING_WHITESPACE: trailing whitespace
#610: FILE: drivers/lio-core/target_core_tpg.c:527:
+#endif^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#617: FILE: drivers/lio-core/target_core_tpg.c:534:
+	printk("%s_TPG[%hu] - Deleted ACL with TCQ Depth: %d for %s"

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#617: FILE: drivers/lio-core/target_core_tpg.c:534:
+	printk("%s_TPG[%hu] - Deleted ACL with TCQ Depth: %d for %s"
+		" Initiator Node: %s\n", TPG_TFO(tpg)->get_fabric_name(),
+		TPG_TFO(tpg)->tpg_get_tag(tpg), acl->queue_depth,
+		TPG_TFO(tpg)->get_fabric_name(), initiatorname);

WARNING:SPLIT_STRING: quoted string split across lines
#618: FILE: drivers/lio-core/target_core_tpg.c:535:
+	printk("%s_TPG[%hu] - Deleted ACL with TCQ Depth: %d for %s"
+		" Initiator Node: %s\n", TPG_TFO(tpg)->get_fabric_name(),

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#623: FILE: drivers/lio-core/target_core_tpg.c:540:
+	return(0);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#626: FILE: drivers/lio-core/target_core_tpg.c:543:
+EXPORT_SYMBOL(core_tpg_del_initiator_node_acl);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#633: FILE: drivers/lio-core/target_core_tpg.c:550:
+extern int core_tpg_set_initiator_node_queue_depth (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#633: FILE: drivers/lio-core/target_core_tpg.c:550:
+extern int core_tpg_set_initiator_node_queue_depth (

ERROR:TRAILING_WHITESPACE: trailing whitespace
#642: FILE: drivers/lio-core/target_core_tpg.c:559:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#644: FILE: drivers/lio-core/target_core_tpg.c:561:
+	if (!(acl = __core_tpg_get_initiator_node_acl(tpg, initiatorname))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#645: FILE: drivers/lio-core/target_core_tpg.c:562:
+		printk(KERN_ERR "Access Control List entry for %s Initiator"

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#645: FILE: drivers/lio-core/target_core_tpg.c:562:
+		printk(KERN_ERR "Access Control List entry for %s Initiator"
+			" Node %s does not exists for TPG %hu, ignoring"
+			" request.\n", TPG_TFO(tpg)->get_fabric_name(),
+			initiatorname, TPG_TFO(tpg)->tpg_get_tag(tpg));

WARNING:SPLIT_STRING: quoted string split across lines
#646: FILE: drivers/lio-core/target_core_tpg.c:563:
+		printk(KERN_ERR "Access Control List entry for %s Initiator"
+			" Node %s does not exists for TPG %hu, ignoring"

WARNING:SPLIT_STRING: quoted string split across lines
#647: FILE: drivers/lio-core/target_core_tpg.c:564:
+			" Node %s does not exists for TPG %hu, ignoring"
+			" request.\n", TPG_TFO(tpg)->get_fabric_name(),

ERROR:TRAILING_WHITESPACE: trailing whitespace
#657: FILE: drivers/lio-core/target_core_tpg.c:574:
+#if 0^I$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#657: FILE: drivers/lio-core/target_core_tpg.c:574:
+#if 0	

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#664: FILE: drivers/lio-core/target_core_tpg.c:581:
+			printk(KERN_ERR "Unable to change queue depth for %s Initiator"

WARNING:SPLIT_STRING: quoted string split across lines
#665: FILE: drivers/lio-core/target_core_tpg.c:582:
+			printk(KERN_ERR "Unable to change queue depth for %s Initiator"
+				" Node: %s while session is operational.  To forcefully"

WARNING:SPLIT_STRING: quoted string split across lines
#666: FILE: drivers/lio-core/target_core_tpg.c:583:
+				" Node: %s while session is operational.  To forcefully"
+				" change the queue depth and force session reinstatement"

WARNING:SPLIT_STRING: quoted string split across lines
#667: FILE: drivers/lio-core/target_core_tpg.c:584:
+				" change the queue depth and force session reinstatement"
+				" use the \"force=1\" parameter.\n",

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#703: FILE: drivers/lio-core/target_core_tpg.c:620:
+#if 0

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#714: FILE: drivers/lio-core/target_core_tpg.c:631:
+#if 0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#719: FILE: drivers/lio-core/target_core_tpg.c:636:
+^I}^I$

WARNING:TYPO_SPELLING: 'Successfuly' may be misspelled - perhaps 'Successfully'?
#721: FILE: drivers/lio-core/target_core_tpg.c:638:
+	printk("Successfuly changed queue depth to: %d for Initiator Node:"
 	        ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#721: FILE: drivers/lio-core/target_core_tpg.c:638:
+	printk("Successfuly changed queue depth to: %d for Initiator Node:"

WARNING:SPLIT_STRING: quoted string split across lines
#722: FILE: drivers/lio-core/target_core_tpg.c:639:
+	printk("Successfuly changed queue depth to: %d for Initiator Node:"
+		" %s on %s Target Portal Group: %u\n", queue_depth,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#730: FILE: drivers/lio-core/target_core_tpg.c:647:
+^I^I$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#731: FILE: drivers/lio-core/target_core_tpg.c:648:
+	return(0);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#734: FILE: drivers/lio-core/target_core_tpg.c:651:
+extern se_portal_group_t *core_tpg_register (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#734: FILE: drivers/lio-core/target_core_tpg.c:651:
+extern se_portal_group_t *core_tpg_register (

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#734: FILE: drivers/lio-core/target_core_tpg.c:651:
+extern se_portal_group_t *core_tpg_register (

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#742: FILE: drivers/lio-core/target_core_tpg.c:659:
+	if (!(se_tpg = kzalloc(sizeof(se_portal_group_t), GFP_KERNEL))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#743: FILE: drivers/lio-core/target_core_tpg.c:660:
+		printk(KERN_ERR "Unable to allocate se_portal_group_t\n");

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#744: FILE: drivers/lio-core/target_core_tpg.c:661:
+		return(ERR_PTR(-ENOMEM));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#747: FILE: drivers/lio-core/target_core_tpg.c:664:
+	if (!(se_tpg->tpg_lun_list = kzalloc((sizeof(se_lun_t) *

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#749: FILE: drivers/lio-core/target_core_tpg.c:666:
+		printk(KERN_ERR "Unable to allocate se_portal_group_t->tpg_lun_list\n");

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#751: FILE: drivers/lio-core/target_core_tpg.c:668:
+		return(ERR_PTR(-ENOMEM));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#776: FILE: drivers/lio-core/target_core_tpg.c:693:
+	printk("TARGET_CORE[%s]: Allocated se_portal_group_t for endpoint %s %u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#777: FILE: drivers/lio-core/target_core_tpg.c:694:
+	printk("TARGET_CORE[%s]: Allocated se_portal_group_t for endpoint %s %u\n",
+		tfo->get_fabric_name(), tfo->tpg_get_wwn(se_tpg),

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#780: FILE: drivers/lio-core/target_core_tpg.c:697:
+	return(se_tpg);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#783: FILE: drivers/lio-core/target_core_tpg.c:700:
+EXPORT_SYMBOL(core_tpg_register);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#785: FILE: drivers/lio-core/target_core_tpg.c:702:
+extern int core_tpg_deregister (se_portal_group_t *se_tpg)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#787: FILE: drivers/lio-core/target_core_tpg.c:704:
+	printk("TARGET_CORE[%s]: Deallocating se_portal_group_t for endpoint %s %u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#788: FILE: drivers/lio-core/target_core_tpg.c:705:
+	printk("TARGET_CORE[%s]: Deallocating se_portal_group_t for endpoint %s %u\n",
+		TPG_TFO(se_tpg)->get_fabric_name(), TPG_TFO(se_tpg)->tpg_get_wwn(se_tpg),

ERROR:TRAILING_WHITESPACE: trailing whitespace
#792: FILE: drivers/lio-core/target_core_tpg.c:709:
+^I$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#796: FILE: drivers/lio-core/target_core_tpg.c:713:
+	return(0);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#799: FILE: drivers/lio-core/target_core_tpg.c:716:
+EXPORT_SYMBOL(core_tpg_deregister);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#801: FILE: drivers/lio-core/target_core_tpg.c:718:
+extern se_lun_t *core_tpg_pre_addlun (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#801: FILE: drivers/lio-core/target_core_tpg.c:718:
+extern se_lun_t *core_tpg_pre_addlun (

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#801: FILE: drivers/lio-core/target_core_tpg.c:718:
+extern se_lun_t *core_tpg_pre_addlun (

ERROR:TRAILING_WHITESPACE: trailing whitespace
#807: FILE: drivers/lio-core/target_core_tpg.c:724:
+^I$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#808: FILE: drivers/lio-core/target_core_tpg.c:725:
+	if (unpacked_lun > (TRANSPORT_MAX_LUNS_PER_TPG-1)) {
 	                                              ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#809: FILE: drivers/lio-core/target_core_tpg.c:726:
+		printk(KERN_ERR "%s LUN: %u exceeds TRANSPORT_MAX_LUNS_PER_TPG-1:"

WARNING:SPLIT_STRING: quoted string split across lines
#810: FILE: drivers/lio-core/target_core_tpg.c:727:
+		printk(KERN_ERR "%s LUN: %u exceeds TRANSPORT_MAX_LUNS_PER_TPG-1:"
+			" %u for Target Portal Group: %u\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#812: FILE: drivers/lio-core/target_core_tpg.c:729:
+			unpacked_lun, TRANSPORT_MAX_LUNS_PER_TPG-1,
 			                                        ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#815: FILE: drivers/lio-core/target_core_tpg.c:732:
+		return(NULL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#821: FILE: drivers/lio-core/target_core_tpg.c:738:
+		printk(KERN_ERR "TPG Logical Unit Number: %u is already active"

WARNING:SPLIT_STRING: quoted string split across lines
#822: FILE: drivers/lio-core/target_core_tpg.c:739:
+		printk(KERN_ERR "TPG Logical Unit Number: %u is already active"
+			" on %s Target Portal Group: %u, ignoring request.\n",

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#827: FILE: drivers/lio-core/target_core_tpg.c:744:
+		return(NULL);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#831: FILE: drivers/lio-core/target_core_tpg.c:748:
+	return(lun);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#834: FILE: drivers/lio-core/target_core_tpg.c:751:
+EXPORT_SYMBOL(core_tpg_pre_addlun);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#835: FILE: drivers/lio-core/target_core_tpg.c:752:
+^I$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#836: FILE: drivers/lio-core/target_core_tpg.c:753:
+extern int core_tpg_post_addlun (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#836: FILE: drivers/lio-core/target_core_tpg.c:753:
+extern int core_tpg_post_addlun (

ERROR:TRAILING_WHITESPACE: trailing whitespace
#851: FILE: drivers/lio-core/target_core_tpg.c:768:
+^I$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#858: FILE: drivers/lio-core/target_core_tpg.c:775:
+	return(0);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#861: FILE: drivers/lio-core/target_core_tpg.c:778:
+EXPORT_SYMBOL(core_tpg_post_addlun);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#863: FILE: drivers/lio-core/target_core_tpg.c:780:
+extern se_lun_t *core_tpg_pre_dellun (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#863: FILE: drivers/lio-core/target_core_tpg.c:780:
+extern se_lun_t *core_tpg_pre_dellun (

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#863: FILE: drivers/lio-core/target_core_tpg.c:780:
+extern se_lun_t *core_tpg_pre_dellun (

ERROR:TRAILING_WHITESPACE: trailing whitespace
#870: FILE: drivers/lio-core/target_core_tpg.c:787:
+^I$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#871: FILE: drivers/lio-core/target_core_tpg.c:788:
+	if (unpacked_lun > (TRANSPORT_MAX_LUNS_PER_TPG-1)) {
 	                                              ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#872: FILE: drivers/lio-core/target_core_tpg.c:789:
+		printk(KERN_ERR "%s LUN: %u exceeds TRANSPORT_MAX_LUNS_PER_TPG-1:"

WARNING:SPLIT_STRING: quoted string split across lines
#873: FILE: drivers/lio-core/target_core_tpg.c:790:
+		printk(KERN_ERR "%s LUN: %u exceeds TRANSPORT_MAX_LUNS_PER_TPG-1:"
+			" %u for Target Portal Group: %u\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#875: FILE: drivers/lio-core/target_core_tpg.c:792:
+			TRANSPORT_MAX_LUNS_PER_TPG-1,
 			                          ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#878: FILE: drivers/lio-core/target_core_tpg.c:795:
+		return(NULL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#884: FILE: drivers/lio-core/target_core_tpg.c:801:
+		printk(KERN_ERR "%s Logical Unit Number: %u is not active on"

WARNING:SPLIT_STRING: quoted string split across lines
#885: FILE: drivers/lio-core/target_core_tpg.c:802:
+		printk(KERN_ERR "%s Logical Unit Number: %u is not active on"
+			" Target Portal Group: %u, ignoring request.\n",

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#890: FILE: drivers/lio-core/target_core_tpg.c:807:
+		return(NULL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#894: FILE: drivers/lio-core/target_core_tpg.c:811:
+		printk(KERN_ERR "%s Logical Unit Number: %u type: %d does not"

WARNING:SPLIT_STRING: quoted string split across lines
#895: FILE: drivers/lio-core/target_core_tpg.c:812:
+		printk(KERN_ERR "%s Logical Unit Number: %u type: %d does not"
+			" match passed type: %d\n",

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#900: FILE: drivers/lio-core/target_core_tpg.c:817:
+		return(NULL);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#906: FILE: drivers/lio-core/target_core_tpg.c:823:
+	return(lun);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#909: FILE: drivers/lio-core/target_core_tpg.c:826:
+EXPORT_SYMBOL(core_tpg_pre_dellun);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#911: FILE: drivers/lio-core/target_core_tpg.c:828:
+extern int core_tpg_post_dellun (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#911: FILE: drivers/lio-core/target_core_tpg.c:828:
+extern int core_tpg_post_dellun (

ERROR:TRAILING_WHITESPACE: trailing whitespace
#916: FILE: drivers/lio-core/target_core_tpg.c:833:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#921: FILE: drivers/lio-core/target_core_tpg.c:838:
+^I$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#935: FILE: drivers/lio-core/target_core_tpg.c:852:
+	lun->lun_acl_head = lun->lun_acl_tail = NULL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#938: FILE: drivers/lio-core/target_core_tpg.c:855:
+^Ireturn(0);^I$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#938: FILE: drivers/lio-core/target_core_tpg.c:855:
+	return(0);	

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#941: FILE: drivers/lio-core/target_core_tpg.c:858:
+EXPORT_SYMBOL(core_tpg_post_dellun);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#948: FILE: drivers/lio-core/target_core_tpg.h:1:
+/*********************************************************************************

ERROR:TRAILING_WHITESPACE: trailing whitespace
#954: FILE: drivers/lio-core/target_core_tpg.h:7:
+ * Copyright (c) 2005, 2006, 2007 SBE, Inc. $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#971: FILE: drivers/lio-core/target_core_tpg.h:24:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#972: FILE: drivers/lio-core/target_core_tpg.h:25:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#976: FILE: drivers/lio-core/target_core_tpg.h:29:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#980: FILE: drivers/lio-core/target_core_tpg.h:33:
+extern se_node_acl_t *core_tpg_get_initiator_node_acl (se_portal_group_t *tpg, unsigned char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#980: FILE: drivers/lio-core/target_core_tpg.h:33:
+extern se_node_acl_t *core_tpg_get_initiator_node_acl (se_portal_group_t *tpg, unsigned char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#980: FILE: drivers/lio-core/target_core_tpg.h:33:
+extern se_node_acl_t *core_tpg_get_initiator_node_acl (se_portal_group_t *tpg, unsigned char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#981: FILE: drivers/lio-core/target_core_tpg.h:34:
+extern void core_tpg_add_node_to_devs (struct se_node_acl_s *, struct se_portal_group_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#981: FILE: drivers/lio-core/target_core_tpg.h:34:
+extern void core_tpg_add_node_to_devs (struct se_node_acl_s *, struct se_portal_group_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_node_acl_s *' should also have an identifier name
#981: FILE: drivers/lio-core/target_core_tpg.h:34:
+extern void core_tpg_add_node_to_devs (struct se_node_acl_s *, struct se_portal_group_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#981: FILE: drivers/lio-core/target_core_tpg.h:34:
+extern void core_tpg_add_node_to_devs (struct se_node_acl_s *, struct se_portal_group_s *);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#982: FILE: drivers/lio-core/target_core_tpg.h:35:
+extern struct se_node_acl_s *core_tpg_check_initiator_node_acl (struct se_portal_group_s *, unsigned char *);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#982: FILE: drivers/lio-core/target_core_tpg.h:35:
+extern struct se_node_acl_s *core_tpg_check_initiator_node_acl (struct se_portal_group_s *, unsigned char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#982: FILE: drivers/lio-core/target_core_tpg.h:35:
+extern struct se_node_acl_s *core_tpg_check_initiator_node_acl (struct se_portal_group_s *, unsigned char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#982: FILE: drivers/lio-core/target_core_tpg.h:35:
+extern struct se_node_acl_s *core_tpg_check_initiator_node_acl (struct se_portal_group_s *, unsigned char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#982: FILE: drivers/lio-core/target_core_tpg.h:35:
+extern struct se_node_acl_s *core_tpg_check_initiator_node_acl (struct se_portal_group_s *, unsigned char *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#983: FILE: drivers/lio-core/target_core_tpg.h:36:
+extern void core_tpg_free_node_acls (struct se_portal_group_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#983: FILE: drivers/lio-core/target_core_tpg.h:36:
+extern void core_tpg_free_node_acls (struct se_portal_group_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#983: FILE: drivers/lio-core/target_core_tpg.h:36:
+extern void core_tpg_free_node_acls (struct se_portal_group_s *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#984: FILE: drivers/lio-core/target_core_tpg.h:37:
+extern void core_tpg_clear_object_luns (struct se_portal_group_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#984: FILE: drivers/lio-core/target_core_tpg.h:37:
+extern void core_tpg_clear_object_luns (struct se_portal_group_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#984: FILE: drivers/lio-core/target_core_tpg.h:37:
+extern void core_tpg_clear_object_luns (struct se_portal_group_s *);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#985: FILE: drivers/lio-core/target_core_tpg.h:38:
+extern se_node_acl_t *core_tpg_add_initiator_node_acl (se_portal_group_t *, const char *, u32, int *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#985: FILE: drivers/lio-core/target_core_tpg.h:38:
+extern se_node_acl_t *core_tpg_add_initiator_node_acl (se_portal_group_t *, const char *, u32, int *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#985: FILE: drivers/lio-core/target_core_tpg.h:38:
+extern se_node_acl_t *core_tpg_add_initiator_node_acl (se_portal_group_t *, const char *, u32, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_portal_group_t *' should also have an identifier name
#985: FILE: drivers/lio-core/target_core_tpg.h:38:
+extern se_node_acl_t *core_tpg_add_initiator_node_acl (se_portal_group_t *, const char *, u32, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#985: FILE: drivers/lio-core/target_core_tpg.h:38:
+extern se_node_acl_t *core_tpg_add_initiator_node_acl (se_portal_group_t *, const char *, u32, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#985: FILE: drivers/lio-core/target_core_tpg.h:38:
+extern se_node_acl_t *core_tpg_add_initiator_node_acl (se_portal_group_t *, const char *, u32, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#985: FILE: drivers/lio-core/target_core_tpg.h:38:
+extern se_node_acl_t *core_tpg_add_initiator_node_acl (se_portal_group_t *, const char *, u32, int *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#986: FILE: drivers/lio-core/target_core_tpg.h:39:
+extern int core_tpg_del_initiator_node_acl (se_portal_group_t *, const char *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#986: FILE: drivers/lio-core/target_core_tpg.h:39:
+extern int core_tpg_del_initiator_node_acl (se_portal_group_t *, const char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_portal_group_t *' should also have an identifier name
#986: FILE: drivers/lio-core/target_core_tpg.h:39:
+extern int core_tpg_del_initiator_node_acl (se_portal_group_t *, const char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#986: FILE: drivers/lio-core/target_core_tpg.h:39:
+extern int core_tpg_del_initiator_node_acl (se_portal_group_t *, const char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#986: FILE: drivers/lio-core/target_core_tpg.h:39:
+extern int core_tpg_del_initiator_node_acl (se_portal_group_t *, const char *, int);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#987: FILE: drivers/lio-core/target_core_tpg.h:40:
+extern int core_tpg_set_initiator_node_queue_depth (se_portal_group_t *, unsigned char *, u32, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#987: FILE: drivers/lio-core/target_core_tpg.h:40:
+extern int core_tpg_set_initiator_node_queue_depth (se_portal_group_t *, unsigned char *, u32, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_portal_group_t *' should also have an identifier name
#987: FILE: drivers/lio-core/target_core_tpg.h:40:
+extern int core_tpg_set_initiator_node_queue_depth (se_portal_group_t *, unsigned char *, u32, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#987: FILE: drivers/lio-core/target_core_tpg.h:40:
+extern int core_tpg_set_initiator_node_queue_depth (se_portal_group_t *, unsigned char *, u32, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#987: FILE: drivers/lio-core/target_core_tpg.h:40:
+extern int core_tpg_set_initiator_node_queue_depth (se_portal_group_t *, unsigned char *, u32, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#987: FILE: drivers/lio-core/target_core_tpg.h:40:
+extern int core_tpg_set_initiator_node_queue_depth (se_portal_group_t *, unsigned char *, u32, int);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#988: FILE: drivers/lio-core/target_core_tpg.h:41:
+extern se_portal_group_t *core_tpg_register (struct target_core_fabric_ops *, void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#988: FILE: drivers/lio-core/target_core_tpg.h:41:
+extern se_portal_group_t *core_tpg_register (struct target_core_fabric_ops *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct target_core_fabric_ops *' should also have an identifier name
#988: FILE: drivers/lio-core/target_core_tpg.h:41:
+extern se_portal_group_t *core_tpg_register (struct target_core_fabric_ops *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#988: FILE: drivers/lio-core/target_core_tpg.h:41:
+extern se_portal_group_t *core_tpg_register (struct target_core_fabric_ops *, void *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#989: FILE: drivers/lio-core/target_core_tpg.h:42:
+extern int core_tpg_deregister (struct se_portal_group_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#989: FILE: drivers/lio-core/target_core_tpg.h:42:
+extern int core_tpg_deregister (struct se_portal_group_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#989: FILE: drivers/lio-core/target_core_tpg.h:42:
+extern int core_tpg_deregister (struct se_portal_group_s *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#990: FILE: drivers/lio-core/target_core_tpg.h:43:
+extern se_lun_t *core_tpg_pre_addlun (se_portal_group_t *, u32, int *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#990: FILE: drivers/lio-core/target_core_tpg.h:43:
+extern se_lun_t *core_tpg_pre_addlun (se_portal_group_t *, u32, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_portal_group_t *' should also have an identifier name
#990: FILE: drivers/lio-core/target_core_tpg.h:43:
+extern se_lun_t *core_tpg_pre_addlun (se_portal_group_t *, u32, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#990: FILE: drivers/lio-core/target_core_tpg.h:43:
+extern se_lun_t *core_tpg_pre_addlun (se_portal_group_t *, u32, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#990: FILE: drivers/lio-core/target_core_tpg.h:43:
+extern se_lun_t *core_tpg_pre_addlun (se_portal_group_t *, u32, int *);

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#991: FILE: drivers/lio-core/target_core_tpg.h:44:
+extern int core_tpg_post_addlun (se_portal_group_t *, se_lun_t *, int, u32, void *, struct se_obj_lun_type_s *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#991: FILE: drivers/lio-core/target_core_tpg.h:44:
+extern int core_tpg_post_addlun (se_portal_group_t *, se_lun_t *, int, u32, void *, struct se_obj_lun_type_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#991: FILE: drivers/lio-core/target_core_tpg.h:44:
+extern int core_tpg_post_addlun (se_portal_group_t *, se_lun_t *, int, u32, void *, struct se_obj_lun_type_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_portal_group_t *' should also have an identifier name
#991: FILE: drivers/lio-core/target_core_tpg.h:44:
+extern int core_tpg_post_addlun (se_portal_group_t *, se_lun_t *, int, u32, void *, struct se_obj_lun_type_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_lun_t *' should also have an identifier name
#991: FILE: drivers/lio-core/target_core_tpg.h:44:
+extern int core_tpg_post_addlun (se_portal_group_t *, se_lun_t *, int, u32, void *, struct se_obj_lun_type_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#991: FILE: drivers/lio-core/target_core_tpg.h:44:
+extern int core_tpg_post_addlun (se_portal_group_t *, se_lun_t *, int, u32, void *, struct se_obj_lun_type_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#991: FILE: drivers/lio-core/target_core_tpg.h:44:
+extern int core_tpg_post_addlun (se_portal_group_t *, se_lun_t *, int, u32, void *, struct se_obj_lun_type_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#991: FILE: drivers/lio-core/target_core_tpg.h:44:
+extern int core_tpg_post_addlun (se_portal_group_t *, se_lun_t *, int, u32, void *, struct se_obj_lun_type_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_obj_lun_type_s *' should also have an identifier name
#991: FILE: drivers/lio-core/target_core_tpg.h:44:
+extern int core_tpg_post_addlun (se_portal_group_t *, se_lun_t *, int, u32, void *, struct se_obj_lun_type_s *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#992: FILE: drivers/lio-core/target_core_tpg.h:45:
+extern se_lun_t *core_tpg_pre_dellun (se_portal_group_t *, u32, int, int *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#992: FILE: drivers/lio-core/target_core_tpg.h:45:
+extern se_lun_t *core_tpg_pre_dellun (se_portal_group_t *, u32, int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_portal_group_t *' should also have an identifier name
#992: FILE: drivers/lio-core/target_core_tpg.h:45:
+extern se_lun_t *core_tpg_pre_dellun (se_portal_group_t *, u32, int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#992: FILE: drivers/lio-core/target_core_tpg.h:45:
+extern se_lun_t *core_tpg_pre_dellun (se_portal_group_t *, u32, int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#992: FILE: drivers/lio-core/target_core_tpg.h:45:
+extern se_lun_t *core_tpg_pre_dellun (se_portal_group_t *, u32, int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#992: FILE: drivers/lio-core/target_core_tpg.h:45:
+extern se_lun_t *core_tpg_pre_dellun (se_portal_group_t *, u32, int, int *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#993: FILE: drivers/lio-core/target_core_tpg.h:46:
+extern int core_tpg_post_dellun (se_portal_group_t *, se_lun_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#993: FILE: drivers/lio-core/target_core_tpg.h:46:
+extern int core_tpg_post_dellun (se_portal_group_t *, se_lun_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_portal_group_t *' should also have an identifier name
#993: FILE: drivers/lio-core/target_core_tpg.h:46:
+extern int core_tpg_post_dellun (se_portal_group_t *, se_lun_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_lun_t *' should also have an identifier name
#993: FILE: drivers/lio-core/target_core_tpg.h:46:
+extern int core_tpg_post_dellun (se_portal_group_t *, se_lun_t *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000193260.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 95 errors, 184 warnings, 55 checks, 906 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000193260.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
