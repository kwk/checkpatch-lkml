ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#75: FILE: drivers/isdn/i4l/isdnhdlc.c:20:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#76: FILE: drivers/isdn/i4l/isdnhdlc.c:21:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#117: FILE: drivers/isdn/i4l/isdnhdlc.c:70:
+void isdnhdlc_out_init(struct isdnhdlc_vars *hdlc, int is_d_channel,
+	int do_adapt56)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#144: FILE: drivers/isdn/i4l/isdnhdlc.c:106:
+^Iif (hdlc->dstpos < 2) ^I/* too small - framing error */$

CHECK:BRACES: Unbalanced braces around else statement
#148: FILE: drivers/isdn/i4l/isdnhdlc.c:110:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#166: FILE: drivers/isdn/i4l/isdnhdlc.c:147:
+int isdnhdlc_decode(struct isdnhdlc_vars *hdlc, const u8 *src, int slen,
+	int *count, u8 *dst, int dsize)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'h' - possible side-effects?
#189: FILE: drivers/isdn/i4l/isdnhdlc.c:163:
+#define handle_fast_flag(h) \
+	do {\
+		if (h->cbin == fast_flag[h->bit_shift]) {\
+			h->ffvalue = fast_flag_value[h->bit_shift];\
+			h->state = HDLC_FAST_FLAG;\
+			h->ffbit_shift = h->bit_shift;\
+			h->bit_shift = 1;\
+		} else {\
+			h->state = HDLC_GET_DATA;\
+			h->data_received = 0;\
+		} \
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'h' may be better as '(h)' to avoid precedence issues
#189: FILE: drivers/isdn/i4l/isdnhdlc.c:163:
+#define handle_fast_flag(h) \
+	do {\
+		if (h->cbin == fast_flag[h->bit_shift]) {\
+			h->ffvalue = fast_flag_value[h->bit_shift];\
+			h->state = HDLC_FAST_FLAG;\
+			h->ffbit_shift = h->bit_shift;\
+			h->bit_shift = 1;\
+		} else {\
+			h->state = HDLC_GET_DATA;\
+			h->data_received = 0;\
+		} \
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'h' - possible side-effects?
#202: FILE: drivers/isdn/i4l/isdnhdlc.c:176:
+#define handle_abort(h) \
+	do {\
+		h->shift_reg = fast_abort[h->ffbit_shift - 1];\
+		h->hdlc_bits1 = h->ffbit_shift - 2;\
+		if (h->hdlc_bits1 < 0)\
+			h->hdlc_bits1 = 0;\
+		h->data_bits = h->ffbit_shift - 1;\
+		h->state = HDLC_GET_DATA;\
+		h->data_received = 0;\
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'h' may be better as '(h)' to avoid precedence issues
#202: FILE: drivers/isdn/i4l/isdnhdlc.c:176:
+#define handle_abort(h) \
+	do {\
+		h->shift_reg = fast_abort[h->ffbit_shift - 1];\
+		h->hdlc_bits1 = h->ffbit_shift - 2;\
+		if (h->hdlc_bits1 < 0)\
+			h->hdlc_bits1 = 0;\
+		h->data_bits = h->ffbit_shift - 1;\
+		h->state = HDLC_GET_DATA;\
+		h->data_received = 0;\
+	} while (0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 48)
#250: FILE: drivers/isdn/i4l/isdnhdlc.c:215:
+				if ((!hdlc->do_adapt56) &&
[...]
 						hdlc->state = HDLC_FAST_IDLE;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!hdlc->do_adapt56'
#250: FILE: drivers/isdn/i4l/isdnhdlc.c:215:
+				if ((!hdlc->do_adapt56) &&
+				    (++hdlc->hdlc_bits1 >= 8) &&
+				    (hdlc->bit_shift == 1))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hdlc->bit_shift == 1'
#250: FILE: drivers/isdn/i4l/isdnhdlc.c:215:
+				if ((!hdlc->do_adapt56) &&
+				    (++hdlc->hdlc_bits1 >= 8) &&
+				    (hdlc->bit_shift == 1))

CHECK:BRACES: braces {} should be used on all arms of this statement
#263: FILE: drivers/isdn/i4l/isdnhdlc.c:224:
+			if (hdlc->cbin & 0x80) {
[...]
 					hdlc->state = HDLC_GETFLAG_B7;
[...]

CHECK:BRACES: Unbalanced braces around else statement
#270: FILE: drivers/isdn/i4l/isdnhdlc.c:228:
+			} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#312: FILE: drivers/isdn/i4l/isdnhdlc.c:257:
+					if (!hdlc->do_adapt56) {
[...]
-					} else {
[...]

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#313: FILE: drivers/isdn/i4l/isdnhdlc.c:258:
+						if (hdlc->cbin == fast_abort

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

CHECK:BRACES: Unbalanced braces around else statement
#321: FILE: drivers/isdn/i4l/isdnhdlc.c:265:
+					} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#367: FILE: drivers/isdn/i4l/isdnhdlc.c:284:
+					if (!hdlc->do_adapt56)
[...]
+					else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#369: FILE: drivers/isdn/i4l/isdnhdlc.c:286:
+					else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#390: FILE: drivers/isdn/i4l/isdnhdlc.c:309:
+				hdlc->crc = crc_ccitt_byte(hdlc->crc,
+						hdlc->shift_reg);

CHECK:BRACES: braces {} should be used on all arms of this statement
#395: FILE: drivers/isdn/i4l/isdnhdlc.c:312:
+				if (hdlc->dstpos < dsize)
[...]
-				} else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#399: FILE: drivers/isdn/i4l/isdnhdlc.c:314:
+				else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#414: FILE: drivers/isdn/i4l/isdnhdlc.c:328:
+				if (hdlc->cbin == 0xff) {
[...]
-				} else if(hdlc->ffbit_shift==8){
[...]
 					hdlc->state = HDLC_GETFLAG_B7;
[...]

CHECK:BRACES: Unbalanced braces around else statement
#430: FILE: drivers/isdn/i4l/isdnhdlc.c:334:
+				} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#452: FILE: drivers/isdn/i4l/isdnhdlc.c:366:
+int isdnhdlc_encode(struct isdnhdlc_vars *hdlc, const u8 *src, u16 slen,
+	int *count, u8 *dst, int dsize)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#585: FILE: drivers/isdn/i4l/isdnhdlc.c:484:
+				hdlc->crc = crc_ccitt_byte(hdlc->crc,
+					hdlc->shift_reg);

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#781: FILE: include/linux/isdn/hdlc.h:24:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#782: FILE: include/linux/isdn/hdlc.h:25:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#825: FILE: include/linux/isdn/hdlc.h:65:
+extern void	isdnhdlc_rcv_init(struct isdnhdlc_vars *hdlc, int do_adapt56);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#829: FILE: include/linux/isdn/hdlc.h:67:
+extern int	isdnhdlc_decode(struct isdnhdlc_vars *hdlc, const u8 *src,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#830: FILE: include/linux/isdn/hdlc.h:68:
+extern int	isdnhdlc_decode(struct isdnhdlc_vars *hdlc, const u8 *src,
+			int slen, int *count, u8 *dst, int dsize);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#833: FILE: include/linux/isdn/hdlc.h:70:
+extern void	isdnhdlc_out_init(struct isdnhdlc_vars *hdlc, int is_d_channel,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#834: FILE: include/linux/isdn/hdlc.h:71:
+extern void	isdnhdlc_out_init(struct isdnhdlc_vars *hdlc, int is_d_channel,
+			int do_adapt56);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#838: FILE: include/linux/isdn/hdlc.h:73:
+extern int	isdnhdlc_encode(struct isdnhdlc_vars *hdlc, const u8 *src,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#839: FILE: include/linux/isdn/hdlc.h:74:
+extern int	isdnhdlc_encode(struct isdnhdlc_vars *hdlc, const u8 *src,
+			u16 slen, int *count, u8 *dst, int dsize);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000092590.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 3 warnings, 29 checks, 767 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000092590.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
