CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#61: FILE: arch/um/include/arch.h:12:
+extern int arch_fixup(unsigned long address, union uml_pt_regs *regs);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: space required before the open parenthesis '('
#88: FILE: arch/um/kernel/trap.c:75:
+	if(!is_write && !(vma->vm_flags & (VM_READ | VM_EXEC)))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open brace '{'
#113: FILE: arch/um/kernel/trap.c:169:
+	if(!is_user && (address >= start_vm) && (address < end_vm)){

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'address >= start_vm'
#113: FILE: arch/um/kernel/trap.c:169:
+	if(!is_user && (address >= start_vm) && (address < end_vm)){

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'address < end_vm'
#113: FILE: arch/um/kernel/trap.c:169:
+	if(!is_user && (address >= start_vm) && (address < end_vm)){

ERROR:SPACING: space required before the open parenthesis '('
#113: FILE: arch/um/kernel/trap.c:169:
+	if(!is_user && (address >= start_vm) && (address < end_vm)){

CHECK:BRACES: braces {} should be used on all arms of this statement
#113: FILE: arch/um/kernel/trap.c:169:
+	if(!is_user && (address >= start_vm) && (address < end_vm)){
[...]
 	else if(current->mm == NULL)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#134: FILE: arch/um/kernel/trap.c:194:
+	else if(!is_user && arch_fixup(ip, regs))

ERROR:SPACING: space required before the open parenthesis '('
#138: FILE: arch/um/kernel/trap.c:197:
+	if(!is_user)

ERROR:SPACING: space required before the open brace '{'
#290: FILE: arch/um/sys-x86_64/fault.c:22:
+	if(fixup != 0){

ERROR:SPACING: space required before the open parenthesis '('
#290: FILE: arch/um/sys-x86_64/fault.c:22:
+	if(fixup != 0){

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#292: FILE: arch/um/sys-x86_64/fault.c:24:
+		return(1);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: arch/um/sys-x86_64/signal.c:54:
+       return err;$

WARNING:SPLIT_STRING: quoted string split across lines
#338: FILE: arch/um/sys-i386/signal.c:53:
 	  	printk("copy_sc_from_user_skas - PTRACE_SETFPREGS failed, "
+		       "errno = %d\n", -err);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:CODE_INDENT: code indent should use tabs where possible
#359: FILE: arch/um/sys-i386/signal.c:99:
+^I  ^Ireturn err;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#359: FILE: arch/um/sys-i386/signal.c:99:
+^I  ^Ireturn err;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#392: FILE: arch/um/sys-i386/signal.c:175:
+                           copy_sc_to_user_skas(to, fp, from, sp));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: arch/um/sys-i386/signal.c:175:
+                           copy_sc_to_user_skas(to, fp, from, sp));$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000448545.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 4 warnings, 4 checks, 297 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000448545.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
