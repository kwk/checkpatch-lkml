WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
This LP3971 PMIC controller has 3 DC/DC voltage converters and 5 low drop-out

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#53: FILE: drivers/regulator/Kconfig:94:
+config REGULATOR_LP3971
+       tristate "National Semiconductors LP3971 PMIC regulator driver"
+       depends on I2C
+       help
+        Say Y here to support the voltage regulators and convertors
+        on National Semiconductors LP3971 PMIC
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:TYPO_SPELLING: 'convertors' may be misspelled - perhaps 'converters'?
#57: FILE: drivers/regulator/Kconfig:98:
+        Say Y here to support the voltage regulators and convertors
                                                          ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#74: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#79: FILE: drivers/regulator/lp3971.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: drivers/regulator/lp3971.c:23:
+       struct device *dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: drivers/regulator/lp3971.c:24:
+       struct mutex io_lock;$

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#102: FILE: drivers/regulator/lp3971.c:24:
+       struct mutex io_lock;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: drivers/regulator/lp3971.c:25:
+       struct i2c_client *i2c;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: drivers/regulator/lp3971.c:26:
+       int num_regulators;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: drivers/regulator/lp3971.c:27:
+       struct regulator_dev **rdev;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#117: FILE: drivers/regulator/lp3971.c:39:
+/*     Voltage control registers shift:
+       LP3971_BUCK1 -> 0

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#121: FILE: drivers/regulator/lp3971.c:43:
+#define BUCK_VOL_CHANGE_SHIFT(x) (((1 << x) & ~0x01) << 1)

WARNING:STATIC_CONST: Move const after static - use 'static const int '
#130: FILE: drivers/regulator/lp3971.c:52:
+const static int buck_base_addr[] = {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: drivers/regulator/lp3971.c:53:
+       LP3971_BUCK1_BASE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: drivers/regulator/lp3971.c:54:
+       LP3971_BUCK2_BASE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: drivers/regulator/lp3971.c:55:
+       LP3971_BUCK3_BASE,$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#137: FILE: drivers/regulator/lp3971.c:59:
+#define LP3971_BUCK_TARGET_VOL2_REG(x) (buck_base_addr[x]+1)
                                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:STATIC_CONST: Move const after static - use 'static const int '
#139: FILE: drivers/regulator/lp3971.c:61:
+const static int buck_voltage_map[] = {

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: drivers/regulator/lp3971.c:62:
+          0,  800,  850,  900,  950, 1000, 1050, 1100,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: drivers/regulator/lp3971.c:62:
+          0,  800,  850,  900,  950, 1000, 1050, 1100,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: drivers/regulator/lp3971.c:63:
+       1150, 1200, 1250, 1300, 1350, 1400, 1450, 1500,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: drivers/regulator/lp3971.c:64:
+       1550, 1600, 1650, 1700, 1800, 1900, 2500, 2800,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: drivers/regulator/lp3971.c:65:
+       3000, 3300,$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#150: FILE: drivers/regulator/lp3971.c:72:
+#define LP3971_BUCK_RAMP_REG(x)        (buck_base_addr[x]+2)
                                                          ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#156: FILE: drivers/regulator/lp3971.c:78:
+/*     Voltage control registers:
+       LP3971_LDO1 -> LP3971_LDO_VOL_CONTR_BASE + 0

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#162: FILE: drivers/regulator/lp3971.c:84:
+#define LP3971_LDO_VOL_CONTR_REG(x)    (LP3971_LDO_VOL_CONTR_BASE + (x >> 1))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#165: FILE: drivers/regulator/lp3971.c:87:
+/*     Voltage control registers shift:
+       LP3971_LDO1 -> 0, LP3971_LDO2 -> 4

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#169: FILE: drivers/regulator/lp3971.c:91:
+#define LDO_VOL_CONTR_SHIFT(x) ((x & 1) << 2)

WARNING:STATIC_CONST: Move const after static - use 'static const int '
#172: FILE: drivers/regulator/lp3971.c:94:
+const static int ldo45_voltage_map1[] = {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: drivers/regulator/lp3971.c:95:
+       1000, 1050, 1100, 1150, 1200, 1250, 1300, 1350,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: drivers/regulator/lp3971.c:96:
+       1400, 1500, 1800, 1900, 2500, 2800, 3000, 3300,$

WARNING:STATIC_CONST: Move const after static - use 'static const int '
#177: FILE: drivers/regulator/lp3971.c:99:
+const static int ldo123_voltage_map[] = {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: drivers/regulator/lp3971.c:100:
+       1800, 1900, 2000, 2100, 2200, 2300, 2400, 2500,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: drivers/regulator/lp3971.c:101:
+       2600, 2700, 2800, 2900, 3000, 3100, 3200, 3300,$

WARNING:STATIC_CONST: Move const after static - use 'static const int *'
#182: FILE: drivers/regulator/lp3971.c:104:
+const static int *ldo_voltage_map[] = {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: drivers/regulator/lp3971.c:105:
+       ldo123_voltage_map, /* LDO1 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: drivers/regulator/lp3971.c:106:
+       ldo123_voltage_map, /* LDO2 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: drivers/regulator/lp3971.c:107:
+       ldo123_voltage_map, /* LDO3 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: drivers/regulator/lp3971.c:108:
+       ldo45_voltage_map1, /* LDO4 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: drivers/regulator/lp3971.c:109:
+       ldo45_voltage_map1, /* LDO5 */$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#190: FILE: drivers/regulator/lp3971.c:112:
+#define LDO_VOL_VALUE_MAP(x) (ldo_voltage_map[(x - LP3971_LDO1)])

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: drivers/regulator/lp3971.c:119:
+       struct lp3971 *lp3971 = rdev_get_drvdata(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: drivers/regulator/lp3971.c:120:
+       int ldo = rdev_get_id(dev) - LP3971_LDO1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: drivers/regulator/lp3971.c:121:
+       u16 mask = 1 << (1 + ldo);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: drivers/regulator/lp3971.c:122:
+       u16 val;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: drivers/regulator/lp3971.c:124:
+       val = lp3971_reg_read(lp3971, LP3971_LDO_ENABLE_REG);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: drivers/regulator/lp3971.c:125:
+       return (val & mask) != 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: drivers/regulator/lp3971.c:130:
+       struct lp3971 *lp3971 = rdev_get_drvdata(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: drivers/regulator/lp3971.c:131:
+       int ldo = rdev_get_id(dev) - LP3971_LDO1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: drivers/regulator/lp3971.c:132:
+       u16 mask = 1 << (1 + ldo);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: drivers/regulator/lp3971.c:134:
+       return lp3971_set_bits(lp3971, LP3971_LDO_ENABLE_REG, mask, mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: drivers/regulator/lp3971.c:139:
+       struct lp3971 *lp3971 = rdev_get_drvdata(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: drivers/regulator/lp3971.c:140:
+       int ldo = rdev_get_id(dev) - LP3971_LDO1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: drivers/regulator/lp3971.c:141:
+       u16 mask = 1 << (1 + ldo);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: drivers/regulator/lp3971.c:143:
+       return lp3971_set_bits(lp3971, LP3971_LDO_ENABLE_REG, mask, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: drivers/regulator/lp3971.c:148:
+       struct lp3971 *lp3971 = rdev_get_drvdata(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: drivers/regulator/lp3971.c:149:
+       int ldo = rdev_get_id(dev) - LP3971_LDO1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: drivers/regulator/lp3971.c:150:
+       u16 val, reg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: drivers/regulator/lp3971.c:152:
+       reg = lp3971_reg_read(lp3971, LP3971_LDO_VOL_CONTR_REG(ldo));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: drivers/regulator/lp3971.c:153:
+       val = (reg >> LDO_VOL_CONTR_SHIFT(ldo)) & LDO_VOL_CONTR_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: drivers/regulator/lp3971.c:155:
+       return 1000 * LDO_VOL_VALUE_MAP(ldo)[val];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: drivers/regulator/lp3971.c:159:
+                                 int min_uV, int max_uV)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: drivers/regulator/lp3971.c:159:
+static int lp3971_ldo_set_voltage(struct regulator_dev *dev,
+                                 int min_uV, int max_uV)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: drivers/regulator/lp3971.c:159:
+                                 int min_uV, int max_uV)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: drivers/regulator/lp3971.c:161:
+       struct lp3971 *lp3971 = rdev_get_drvdata(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: drivers/regulator/lp3971.c:162:
+       int ldo = rdev_get_id(dev) - LP3971_LDO1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: drivers/regulator/lp3971.c:163:
+       int min_vol = min_uV / 1000, max_vol = max_uV / 1000;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: drivers/regulator/lp3971.c:164:
+       const int *vol_map = LDO_VOL_VALUE_MAP(ldo);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: drivers/regulator/lp3971.c:165:
+       u16 val;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: drivers/regulator/lp3971.c:167:
+       if (min_vol < vol_map[LDO_VOL_MIN_IDX] ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#245: FILE: drivers/regulator/lp3971.c:167:
+       if (min_vol < vol_map[LDO_VOL_MIN_IDX] ||
[...]
+               return -EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: drivers/regulator/lp3971.c:168:
+           min_vol > vol_map[LDO_VOL_MAX_IDX])$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: drivers/regulator/lp3971.c:168:
+           min_vol > vol_map[LDO_VOL_MAX_IDX])$

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: drivers/regulator/lp3971.c:169:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: drivers/regulator/lp3971.c:169:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: drivers/regulator/lp3971.c:171:
+       for (val = LDO_VOL_MIN_IDX; val <= LDO_VOL_MAX_IDX; val++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#249: FILE: drivers/regulator/lp3971.c:171:
+       for (val = LDO_VOL_MIN_IDX; val <= LDO_VOL_MAX_IDX; val++)
+               if (vol_map[val] >= min_vol)

ERROR:CODE_INDENT: code indent should use tabs where possible
#250: FILE: drivers/regulator/lp3971.c:172:
+               if (vol_map[val] >= min_vol)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: drivers/regulator/lp3971.c:172:
+               if (vol_map[val] >= min_vol)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#250: FILE: drivers/regulator/lp3971.c:172:
+               if (vol_map[val] >= min_vol)
+                       break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#251: FILE: drivers/regulator/lp3971.c:173:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: drivers/regulator/lp3971.c:173:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: drivers/regulator/lp3971.c:175:
+       if (vol_map[val] > max_vol)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#253: FILE: drivers/regulator/lp3971.c:175:
+       if (vol_map[val] > max_vol)
+               return -EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: drivers/regulator/lp3971.c:176:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: drivers/regulator/lp3971.c:176:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: drivers/regulator/lp3971.c:178:
+       return lp3971_set_bits(lp3971, LP3971_LDO_VOL_CONTR_REG(ldo),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#257: FILE: drivers/regulator/lp3971.c:179:
+               LDO_VOL_CONTR_MASK << LDO_VOL_CONTR_SHIFT(ldo), val);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: drivers/regulator/lp3971.c:179:
+               LDO_VOL_CONTR_MASK << LDO_VOL_CONTR_SHIFT(ldo), val);$

WARNING:CONST_STRUCT: struct regulator_ops should normally be const
#260: FILE: drivers/regulator/lp3971.c:182:
+static struct regulator_ops lp3971_ldo_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: drivers/regulator/lp3971.c:183:
+       .is_enabled = lp3971_ldo_is_enabled,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: drivers/regulator/lp3971.c:184:
+       .enable = lp3971_ldo_enable,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: drivers/regulator/lp3971.c:185:
+       .disable = lp3971_ldo_disable,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: drivers/regulator/lp3971.c:186:
+       .get_voltage = lp3971_ldo_get_voltage,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: drivers/regulator/lp3971.c:187:
+       .set_voltage = lp3971_ldo_set_voltage,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: drivers/regulator/lp3971.c:192:
+       struct lp3971 *lp3971 = rdev_get_drvdata(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: drivers/regulator/lp3971.c:193:
+       int buck = rdev_get_id(dev) - LP3971_DCDC1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: drivers/regulator/lp3971.c:194:
+       u16 mask = 1 << (buck * 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: drivers/regulator/lp3971.c:195:
+       u16 val;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: drivers/regulator/lp3971.c:197:
+       val = lp3971_reg_read(lp3971, LP3971_BUCK_VOL_ENABLE_REG);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: drivers/regulator/lp3971.c:198:
+       return (val & mask) != 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: drivers/regulator/lp3971.c:203:
+       struct lp3971 *lp3971 = rdev_get_drvdata(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: drivers/regulator/lp3971.c:204:
+       int buck = rdev_get_id(dev) - LP3971_DCDC1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: drivers/regulator/lp3971.c:205:
+       u16 mask = 1 << (buck * 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: drivers/regulator/lp3971.c:207:
+       return lp3971_set_bits(lp3971, LP3971_BUCK_VOL_ENABLE_REG, mask, mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: drivers/regulator/lp3971.c:212:
+       struct lp3971 *lp3971 = rdev_get_drvdata(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: drivers/regulator/lp3971.c:213:
+       int buck = rdev_get_id(dev) - LP3971_DCDC1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: drivers/regulator/lp3971.c:214:
+       u16 mask = 1 << (buck * 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: drivers/regulator/lp3971.c:216:
+       return lp3971_set_bits(lp3971, LP3971_BUCK_VOL_ENABLE_REG, mask, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: drivers/regulator/lp3971.c:221:
+       struct lp3971 *lp3971 = rdev_get_drvdata(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: drivers/regulator/lp3971.c:222:
+       int buck = rdev_get_id(dev) - LP3971_DCDC1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: drivers/regulator/lp3971.c:223:
+       u16 reg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: drivers/regulator/lp3971.c:224:
+       int val;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: drivers/regulator/lp3971.c:226:
+       reg = lp3971_reg_read(lp3971, LP3971_BUCK_TARGET_VOL1_REG(buck));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: drivers/regulator/lp3971.c:227:
+       reg &= BUCK_TARGET_VOL_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: drivers/regulator/lp3971.c:229:
+       if (reg <= BUCK_TARGET_VOL_MAX_IDX)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#307: FILE: drivers/regulator/lp3971.c:229:
+       if (reg <= BUCK_TARGET_VOL_MAX_IDX)
+               val = 1000 * buck_voltage_map[reg];

ERROR:CODE_INDENT: code indent should use tabs where possible
#308: FILE: drivers/regulator/lp3971.c:230:
+               val = 1000 * buck_voltage_map[reg];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: drivers/regulator/lp3971.c:230:
+               val = 1000 * buck_voltage_map[reg];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: drivers/regulator/lp3971.c:231:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#309: FILE: drivers/regulator/lp3971.c:231:
+       else
+               val = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#310: FILE: drivers/regulator/lp3971.c:232:
+               val = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: drivers/regulator/lp3971.c:232:
+               val = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: drivers/regulator/lp3971.c:234:
+       return val;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#316: FILE: drivers/regulator/lp3971.c:238:
+                                 int min_uV, int max_uV)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#316: FILE: drivers/regulator/lp3971.c:238:
+static int lp3971_dcdc_set_voltage(struct regulator_dev *dev,
+                                 int min_uV, int max_uV)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: drivers/regulator/lp3971.c:238:
+                                 int min_uV, int max_uV)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: drivers/regulator/lp3971.c:240:
+       struct lp3971 *lp3971 = rdev_get_drvdata(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: drivers/regulator/lp3971.c:241:
+       int buck = rdev_get_id(dev) - LP3971_DCDC1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: drivers/regulator/lp3971.c:242:
+       int min_vol = min_uV / 1000, max_vol = max_uV / 1000;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: drivers/regulator/lp3971.c:243:
+       const int *vol_map = buck_voltage_map;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: drivers/regulator/lp3971.c:244:
+       u16 val;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: drivers/regulator/lp3971.c:245:
+       int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: drivers/regulator/lp3971.c:247:
+       if (min_vol < vol_map[BUCK_TARGET_VOL_MIN_IDX] ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#325: FILE: drivers/regulator/lp3971.c:247:
+       if (min_vol < vol_map[BUCK_TARGET_VOL_MIN_IDX] ||
[...]
+               return -EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#326: FILE: drivers/regulator/lp3971.c:248:
+           min_vol > vol_map[BUCK_TARGET_VOL_MAX_IDX])$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: drivers/regulator/lp3971.c:248:
+           min_vol > vol_map[BUCK_TARGET_VOL_MAX_IDX])$

ERROR:CODE_INDENT: code indent should use tabs where possible
#327: FILE: drivers/regulator/lp3971.c:249:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: drivers/regulator/lp3971.c:249:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: drivers/regulator/lp3971.c:251:
+       for (val = BUCK_TARGET_VOL_MIN_IDX; val <= BUCK_TARGET_VOL_MAX_IDX;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#329: FILE: drivers/regulator/lp3971.c:251:
+       for (val = BUCK_TARGET_VOL_MIN_IDX; val <= BUCK_TARGET_VOL_MAX_IDX;
[...]
+               if (vol_map[val] >= min_vol)

ERROR:CODE_INDENT: code indent should use tabs where possible
#330: FILE: drivers/regulator/lp3971.c:252:
+            val++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: drivers/regulator/lp3971.c:252:
+            val++)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#331: FILE: drivers/regulator/lp3971.c:253:
+               if (vol_map[val] >= min_vol)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: drivers/regulator/lp3971.c:253:
+               if (vol_map[val] >= min_vol)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#331: FILE: drivers/regulator/lp3971.c:253:
+               if (vol_map[val] >= min_vol)
+                       break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#332: FILE: drivers/regulator/lp3971.c:254:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: drivers/regulator/lp3971.c:254:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: drivers/regulator/lp3971.c:256:
+       if (vol_map[val] > max_vol)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#334: FILE: drivers/regulator/lp3971.c:256:
+       if (vol_map[val] > max_vol)
+               return -EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#335: FILE: drivers/regulator/lp3971.c:257:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: drivers/regulator/lp3971.c:257:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: drivers/regulator/lp3971.c:259:
+       ret = lp3971_set_bits(lp3971, LP3971_BUCK_TARGET_VOL1_REG(buck),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#338: FILE: drivers/regulator/lp3971.c:260:
+              BUCK_TARGET_VOL_MASK, val);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#338: FILE: drivers/regulator/lp3971.c:260:
+       ret = lp3971_set_bits(lp3971, LP3971_BUCK_TARGET_VOL1_REG(buck),
+              BUCK_TARGET_VOL_MASK, val);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: drivers/regulator/lp3971.c:260:
+              BUCK_TARGET_VOL_MASK, val);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: drivers/regulator/lp3971.c:261:
+       if (ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#339: FILE: drivers/regulator/lp3971.c:261:
+       if (ret)
+               return ret;

ERROR:CODE_INDENT: code indent should use tabs where possible
#340: FILE: drivers/regulator/lp3971.c:262:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: drivers/regulator/lp3971.c:262:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: drivers/regulator/lp3971.c:264:
+       ret = lp3971_set_bits(lp3971, LP3971_BUCK_VOL_CHANGE_REG,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#343: FILE: drivers/regulator/lp3971.c:265:
+              BUCK_VOL_CHANGE_FLAG_MASK << BUCK_VOL_CHANGE_SHIFT(buck),$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#343: FILE: drivers/regulator/lp3971.c:265:
+       ret = lp3971_set_bits(lp3971, LP3971_BUCK_VOL_CHANGE_REG,
+              BUCK_VOL_CHANGE_FLAG_MASK << BUCK_VOL_CHANGE_SHIFT(buck),

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: drivers/regulator/lp3971.c:265:
+              BUCK_VOL_CHANGE_FLAG_MASK << BUCK_VOL_CHANGE_SHIFT(buck),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: drivers/regulator/lp3971.c:266:
+              BUCK_VOL_CHANGE_FLAG_GO << BUCK_VOL_CHANGE_SHIFT(buck));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: drivers/regulator/lp3971.c:266:
+              BUCK_VOL_CHANGE_FLAG_GO << BUCK_VOL_CHANGE_SHIFT(buck));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: drivers/regulator/lp3971.c:267:
+       if (ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#345: FILE: drivers/regulator/lp3971.c:267:
+       if (ret)
+               return ret;

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: drivers/regulator/lp3971.c:268:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: drivers/regulator/lp3971.c:268:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: drivers/regulator/lp3971.c:270:
+       return lp3971_set_bits(lp3971, LP3971_BUCK_VOL_CHANGE_REG,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#349: FILE: drivers/regulator/lp3971.c:271:
+              BUCK_VOL_CHANGE_FLAG_MASK << BUCK_VOL_CHANGE_SHIFT(buck),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: drivers/regulator/lp3971.c:271:
+              BUCK_VOL_CHANGE_FLAG_MASK << BUCK_VOL_CHANGE_SHIFT(buck),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#350: FILE: drivers/regulator/lp3971.c:272:
+              0 << BUCK_VOL_CHANGE_SHIFT(buck));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: drivers/regulator/lp3971.c:272:
+              0 << BUCK_VOL_CHANGE_SHIFT(buck));$

WARNING:CONST_STRUCT: struct regulator_ops should normally be const
#353: FILE: drivers/regulator/lp3971.c:275:
+static struct regulator_ops lp3971_dcdc_ops = {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: drivers/regulator/lp3971.c:276:
+       .is_enabled = lp3971_dcdc_is_enabled,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: drivers/regulator/lp3971.c:277:
+       .enable = lp3971_dcdc_enable,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: drivers/regulator/lp3971.c:278:
+       .disable = lp3971_dcdc_disable,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#357: FILE: drivers/regulator/lp3971.c:279:
+       .get_voltage = lp3971_dcdc_get_voltage,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: drivers/regulator/lp3971.c:280:
+       .set_voltage = lp3971_dcdc_set_voltage,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: drivers/regulator/lp3971.c:284:
+       {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#363: FILE: drivers/regulator/lp3971.c:285:
+               .name = "LDO1",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: drivers/regulator/lp3971.c:285:
+               .name = "LDO1",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#364: FILE: drivers/regulator/lp3971.c:286:
+               .id = LP3971_LDO1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: drivers/regulator/lp3971.c:286:
+               .id = LP3971_LDO1,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#365: FILE: drivers/regulator/lp3971.c:287:
+               .ops = &lp3971_ldo_ops,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: drivers/regulator/lp3971.c:287:
+               .ops = &lp3971_ldo_ops,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#366: FILE: drivers/regulator/lp3971.c:288:
+               .type = REGULATOR_VOLTAGE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: drivers/regulator/lp3971.c:288:
+               .type = REGULATOR_VOLTAGE,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#367: FILE: drivers/regulator/lp3971.c:289:
+               .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: drivers/regulator/lp3971.c:289:
+               .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: drivers/regulator/lp3971.c:290:
+       },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: drivers/regulator/lp3971.c:291:
+       {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#370: FILE: drivers/regulator/lp3971.c:292:
+               .name = "LDO2",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: drivers/regulator/lp3971.c:292:
+               .name = "LDO2",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#371: FILE: drivers/regulator/lp3971.c:293:
+               .id = LP3971_LDO2,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: drivers/regulator/lp3971.c:293:
+               .id = LP3971_LDO2,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#372: FILE: drivers/regulator/lp3971.c:294:
+               .ops = &lp3971_ldo_ops,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: drivers/regulator/lp3971.c:294:
+               .ops = &lp3971_ldo_ops,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#373: FILE: drivers/regulator/lp3971.c:295:
+               .type = REGULATOR_VOLTAGE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: drivers/regulator/lp3971.c:295:
+               .type = REGULATOR_VOLTAGE,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#374: FILE: drivers/regulator/lp3971.c:296:
+               .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: drivers/regulator/lp3971.c:296:
+               .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: drivers/regulator/lp3971.c:297:
+       },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: drivers/regulator/lp3971.c:298:
+       {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#377: FILE: drivers/regulator/lp3971.c:299:
+               .name = "LDO3",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: drivers/regulator/lp3971.c:299:
+               .name = "LDO3",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#378: FILE: drivers/regulator/lp3971.c:300:
+               .id = LP3971_LDO3,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: drivers/regulator/lp3971.c:300:
+               .id = LP3971_LDO3,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#379: FILE: drivers/regulator/lp3971.c:301:
+               .ops = &lp3971_ldo_ops,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: drivers/regulator/lp3971.c:301:
+               .ops = &lp3971_ldo_ops,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#380: FILE: drivers/regulator/lp3971.c:302:
+               .type = REGULATOR_VOLTAGE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: drivers/regulator/lp3971.c:302:
+               .type = REGULATOR_VOLTAGE,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#381: FILE: drivers/regulator/lp3971.c:303:
+               .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: drivers/regulator/lp3971.c:303:
+               .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: drivers/regulator/lp3971.c:304:
+       },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: drivers/regulator/lp3971.c:305:
+       {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#384: FILE: drivers/regulator/lp3971.c:306:
+               .name = "LDO4",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: drivers/regulator/lp3971.c:306:
+               .name = "LDO4",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#385: FILE: drivers/regulator/lp3971.c:307:
+               .id = LP3971_LDO4,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: drivers/regulator/lp3971.c:307:
+               .id = LP3971_LDO4,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#386: FILE: drivers/regulator/lp3971.c:308:
+               .ops = &lp3971_ldo_ops,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: drivers/regulator/lp3971.c:308:
+               .ops = &lp3971_ldo_ops,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#387: FILE: drivers/regulator/lp3971.c:309:
+               .type = REGULATOR_VOLTAGE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: drivers/regulator/lp3971.c:309:
+               .type = REGULATOR_VOLTAGE,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#388: FILE: drivers/regulator/lp3971.c:310:
+               .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: drivers/regulator/lp3971.c:310:
+               .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: drivers/regulator/lp3971.c:311:
+       },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: drivers/regulator/lp3971.c:312:
+       {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#391: FILE: drivers/regulator/lp3971.c:313:
+               .name = "LDO5",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: drivers/regulator/lp3971.c:313:
+               .name = "LDO5",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#392: FILE: drivers/regulator/lp3971.c:314:
+               .id = LP3971_LDO5,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: drivers/regulator/lp3971.c:314:
+               .id = LP3971_LDO5,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: drivers/regulator/lp3971.c:315:
+               .ops = &lp3971_ldo_ops,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: drivers/regulator/lp3971.c:315:
+               .ops = &lp3971_ldo_ops,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#394: FILE: drivers/regulator/lp3971.c:316:
+               .type = REGULATOR_VOLTAGE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: drivers/regulator/lp3971.c:316:
+               .type = REGULATOR_VOLTAGE,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#395: FILE: drivers/regulator/lp3971.c:317:
+               .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: drivers/regulator/lp3971.c:317:
+               .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: drivers/regulator/lp3971.c:318:
+       },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: drivers/regulator/lp3971.c:319:
+       {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#398: FILE: drivers/regulator/lp3971.c:320:
+               .name = "DCDC1",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: drivers/regulator/lp3971.c:320:
+               .name = "DCDC1",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#399: FILE: drivers/regulator/lp3971.c:321:
+               .id = LP3971_DCDC1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: drivers/regulator/lp3971.c:321:
+               .id = LP3971_DCDC1,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#400: FILE: drivers/regulator/lp3971.c:322:
+               .ops = &lp3971_dcdc_ops,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: drivers/regulator/lp3971.c:322:
+               .ops = &lp3971_dcdc_ops,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#401: FILE: drivers/regulator/lp3971.c:323:
+               .type = REGULATOR_VOLTAGE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: drivers/regulator/lp3971.c:323:
+               .type = REGULATOR_VOLTAGE,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#402: FILE: drivers/regulator/lp3971.c:324:
+               .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: drivers/regulator/lp3971.c:324:
+               .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: drivers/regulator/lp3971.c:325:
+       },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: drivers/regulator/lp3971.c:326:
+       {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#405: FILE: drivers/regulator/lp3971.c:327:
+               .name = "DCDC2",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#405: FILE: drivers/regulator/lp3971.c:327:
+               .name = "DCDC2",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#406: FILE: drivers/regulator/lp3971.c:328:
+               .id = LP3971_DCDC2,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#406: FILE: drivers/regulator/lp3971.c:328:
+               .id = LP3971_DCDC2,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#407: FILE: drivers/regulator/lp3971.c:329:
+               .ops = &lp3971_dcdc_ops,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: drivers/regulator/lp3971.c:329:
+               .ops = &lp3971_dcdc_ops,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#408: FILE: drivers/regulator/lp3971.c:330:
+               .type = REGULATOR_VOLTAGE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: drivers/regulator/lp3971.c:330:
+               .type = REGULATOR_VOLTAGE,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#409: FILE: drivers/regulator/lp3971.c:331:
+               .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: drivers/regulator/lp3971.c:331:
+               .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: drivers/regulator/lp3971.c:332:
+       },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: drivers/regulator/lp3971.c:333:
+       {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#412: FILE: drivers/regulator/lp3971.c:334:
+               .name = "DCDC3",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: drivers/regulator/lp3971.c:334:
+               .name = "DCDC3",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#413: FILE: drivers/regulator/lp3971.c:335:
+               .id = LP3971_DCDC3,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: drivers/regulator/lp3971.c:335:
+               .id = LP3971_DCDC3,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#414: FILE: drivers/regulator/lp3971.c:336:
+               .ops = &lp3971_dcdc_ops,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: drivers/regulator/lp3971.c:336:
+               .ops = &lp3971_dcdc_ops,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#415: FILE: drivers/regulator/lp3971.c:337:
+               .type = REGULATOR_VOLTAGE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#415: FILE: drivers/regulator/lp3971.c:337:
+               .type = REGULATOR_VOLTAGE,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#416: FILE: drivers/regulator/lp3971.c:338:
+               .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: drivers/regulator/lp3971.c:338:
+               .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: drivers/regulator/lp3971.c:339:
+       },$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#421: FILE: drivers/regulator/lp3971.c:343:
+static int lp3971_i2c_read(struct i2c_client *i2c, char reg, int count,
+       u16 *dest)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: drivers/regulator/lp3971.c:343:
+       u16 *dest)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: drivers/regulator/lp3971.c:345:
+       int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: drivers/regulator/lp3971.c:347:
+       if (count != 1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#425: FILE: drivers/regulator/lp3971.c:347:
+       if (count != 1)
+               return -EIO;

ERROR:CODE_INDENT: code indent should use tabs where possible
#426: FILE: drivers/regulator/lp3971.c:348:
+               return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: drivers/regulator/lp3971.c:348:
+               return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#427: FILE: drivers/regulator/lp3971.c:349:
+       ret = i2c_smbus_read_byte_data(i2c, reg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: drivers/regulator/lp3971.c:350:
+       if (ret < 0 || count != 1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#428: FILE: drivers/regulator/lp3971.c:350:
+       if (ret < 0 || count != 1)
+               return -EIO;

ERROR:CODE_INDENT: code indent should use tabs where possible
#429: FILE: drivers/regulator/lp3971.c:351:
+               return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#429: FILE: drivers/regulator/lp3971.c:351:
+               return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#431: FILE: drivers/regulator/lp3971.c:353:
+       *dest = ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#432: FILE: drivers/regulator/lp3971.c:354:
+       return 0;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#436: FILE: drivers/regulator/lp3971.c:358:
+static int lp3971_i2c_write(struct i2c_client *i2c, char reg, int count,
+       const u16 *src)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: drivers/regulator/lp3971.c:358:
+       const u16 *src)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: drivers/regulator/lp3971.c:360:
+       int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#440: FILE: drivers/regulator/lp3971.c:362:
+       if (count != 1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#440: FILE: drivers/regulator/lp3971.c:362:
+       if (count != 1)
+               return -EIO;

ERROR:CODE_INDENT: code indent should use tabs where possible
#441: FILE: drivers/regulator/lp3971.c:363:
+               return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: drivers/regulator/lp3971.c:363:
+               return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: drivers/regulator/lp3971.c:364:
+       ret = i2c_smbus_write_byte_data(i2c, reg, *src);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#443: FILE: drivers/regulator/lp3971.c:365:
+       if (ret >= 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#443: FILE: drivers/regulator/lp3971.c:365:
+       if (ret >= 0)
+               return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#444: FILE: drivers/regulator/lp3971.c:366:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#444: FILE: drivers/regulator/lp3971.c:366:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#446: FILE: drivers/regulator/lp3971.c:368:
+       return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#451: FILE: drivers/regulator/lp3971.c:373:
+       u16 val = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#453: FILE: drivers/regulator/lp3971.c:375:
+       mutex_lock(&lp3971->io_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#455: FILE: drivers/regulator/lp3971.c:377:
+       lp3971_i2c_read(lp3971->i2c, reg, 1, &val);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#457: FILE: drivers/regulator/lp3971.c:379:
+       dev_dbg(lp3971->dev, "reg read 0x%02x -> 0x%02x\n", (int)reg,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#458: FILE: drivers/regulator/lp3971.c:380:
+               (unsigned)val&0xff);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#458: FILE: drivers/regulator/lp3971.c:380:
+               (unsigned)val&0xff);$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#458: FILE: drivers/regulator/lp3971.c:380:
+               (unsigned)val&0xff);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#458: FILE: drivers/regulator/lp3971.c:380:
+               (unsigned)val&0xff);
                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: drivers/regulator/lp3971.c:382:
+       mutex_unlock(&lp3971->io_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: drivers/regulator/lp3971.c:384:
+       return val & 0xff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: drivers/regulator/lp3971.c:389:
+       u16 tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: drivers/regulator/lp3971.c:390:
+       int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: drivers/regulator/lp3971.c:392:
+       mutex_lock(&lp3971->io_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: drivers/regulator/lp3971.c:394:
+       ret = lp3971_i2c_read(lp3971->i2c, reg, 1, &tmp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#473: FILE: drivers/regulator/lp3971.c:395:
+       tmp = (tmp & ~mask) | val;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: drivers/regulator/lp3971.c:396:
+       if (ret == 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#474: FILE: drivers/regulator/lp3971.c:396:
+       if (ret == 0) {
+               ret = lp3971_i2c_write(lp3971->i2c, reg, 1, &tmp);

ERROR:CODE_INDENT: code indent should use tabs where possible
#475: FILE: drivers/regulator/lp3971.c:397:
+               ret = lp3971_i2c_write(lp3971->i2c, reg, 1, &tmp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#475: FILE: drivers/regulator/lp3971.c:397:
+               ret = lp3971_i2c_write(lp3971->i2c, reg, 1, &tmp);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#476: FILE: drivers/regulator/lp3971.c:398:
+               dev_dbg(lp3971->dev, "reg write 0x%02x -> 0x%02x\n", (int)reg,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: drivers/regulator/lp3971.c:398:
+               dev_dbg(lp3971->dev, "reg write 0x%02x -> 0x%02x\n", (int)reg,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#477: FILE: drivers/regulator/lp3971.c:399:
+                       (unsigned)val&0xff);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#477: FILE: drivers/regulator/lp3971.c:399:
+                       (unsigned)val&0xff);$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#477: FILE: drivers/regulator/lp3971.c:399:
+                       (unsigned)val&0xff);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#477: FILE: drivers/regulator/lp3971.c:399:
+                       (unsigned)val&0xff);
                                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: drivers/regulator/lp3971.c:400:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#479: FILE: drivers/regulator/lp3971.c:401:
+       mutex_unlock(&lp3971->io_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: drivers/regulator/lp3971.c:403:
+       return ret;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#485: FILE: drivers/regulator/lp3971.c:407:
+static int setup_regulators(struct lp3971 *lp3971,
+       struct lp3971_platform_data *pdata)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#485: FILE: drivers/regulator/lp3971.c:407:
+       struct lp3971_platform_data *pdata)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: drivers/regulator/lp3971.c:409:
+       int i, err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: drivers/regulator/lp3971.c:410:
+       int num_regulators = pdata->num_regulators;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#489: FILE: drivers/regulator/lp3971.c:411:
+       int num_regulators = pdata->num_regulators;
+       lp3971->num_regulators = num_regulators;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: drivers/regulator/lp3971.c:411:
+       lp3971->num_regulators = num_regulators;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: drivers/regulator/lp3971.c:412:
+       lp3971->rdev = kzalloc(sizeof(struct regulator_dev *) * num_regulators,$

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#490: FILE: drivers/regulator/lp3971.c:412:
+       lp3971->rdev = kzalloc(sizeof(struct regulator_dev *) * num_regulators,
+               GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

ERROR:CODE_INDENT: code indent should use tabs where possible
#491: FILE: drivers/regulator/lp3971.c:413:
+               GFP_KERNEL);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#491: FILE: drivers/regulator/lp3971.c:413:
+       lp3971->rdev = kzalloc(sizeof(struct regulator_dev *) * num_regulators,
+               GFP_KERNEL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: drivers/regulator/lp3971.c:413:
+               GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: drivers/regulator/lp3971.c:416:
+       for (i = 0; i < num_regulators; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#494: FILE: drivers/regulator/lp3971.c:416:
+       for (i = 0; i < num_regulators; i++) {
+               int id = pdata->regulators[i].id;

ERROR:CODE_INDENT: code indent should use tabs where possible
#495: FILE: drivers/regulator/lp3971.c:417:
+               int id = pdata->regulators[i].id;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#495: FILE: drivers/regulator/lp3971.c:417:
+               int id = pdata->regulators[i].id;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#496: FILE: drivers/regulator/lp3971.c:418:
+               lp3971->rdev[i] = regulator_register(&regulators[id],$

WARNING:LINE_SPACING: Missing a blank line after declarations
#496: FILE: drivers/regulator/lp3971.c:418:
+               int id = pdata->regulators[i].id;
+               lp3971->rdev[i] = regulator_register(&regulators[id],

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: drivers/regulator/lp3971.c:418:
+               lp3971->rdev[i] = regulator_register(&regulators[id],$

ERROR:CODE_INDENT: code indent should use tabs where possible
#497: FILE: drivers/regulator/lp3971.c:419:
+                       lp3971->dev, pdata->regulators[i].initdata, lp3971);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#497: FILE: drivers/regulator/lp3971.c:419:
+               lp3971->rdev[i] = regulator_register(&regulators[id],
+                       lp3971->dev, pdata->regulators[i].initdata, lp3971);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: drivers/regulator/lp3971.c:419:
+                       lp3971->dev, pdata->regulators[i].initdata, lp3971);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#499: FILE: drivers/regulator/lp3971.c:421:
+               err = IS_ERR(lp3971->rdev[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#499: FILE: drivers/regulator/lp3971.c:421:
+               err = IS_ERR(lp3971->rdev[i]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#500: FILE: drivers/regulator/lp3971.c:422:
+               if (err) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#500: FILE: drivers/regulator/lp3971.c:422:
+               if (err) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#500: FILE: drivers/regulator/lp3971.c:422:
+               if (err) {
+                       dev_err(lp3971->dev, "regulator init failed: %d\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#501: FILE: drivers/regulator/lp3971.c:423:
+                       dev_err(lp3971->dev, "regulator init failed: %d\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#501: FILE: drivers/regulator/lp3971.c:423:
+                       dev_err(lp3971->dev, "regulator init failed: %d\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#502: FILE: drivers/regulator/lp3971.c:424:
+                               err);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#502: FILE: drivers/regulator/lp3971.c:424:
+                               err);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#503: FILE: drivers/regulator/lp3971.c:425:
+                       goto error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#503: FILE: drivers/regulator/lp3971.c:425:
+                       goto error;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#504: FILE: drivers/regulator/lp3971.c:426:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#504: FILE: drivers/regulator/lp3971.c:426:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#505: FILE: drivers/regulator/lp3971.c:427:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#507: FILE: drivers/regulator/lp3971.c:429:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#509: FILE: drivers/regulator/lp3971.c:431:
+       for (i = 0; i < num_regulators; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#509: FILE: drivers/regulator/lp3971.c:431:
+       for (i = 0; i < num_regulators; i++)
+               if (lp3971->rdev[i])

ERROR:CODE_INDENT: code indent should use tabs where possible
#510: FILE: drivers/regulator/lp3971.c:432:
+               if (lp3971->rdev[i])$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: drivers/regulator/lp3971.c:432:
+               if (lp3971->rdev[i])$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#510: FILE: drivers/regulator/lp3971.c:432:
+               if (lp3971->rdev[i])
+                       regulator_unregister(lp3971->rdev[i]);

ERROR:CODE_INDENT: code indent should use tabs where possible
#511: FILE: drivers/regulator/lp3971.c:433:
+                       regulator_unregister(lp3971->rdev[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#511: FILE: drivers/regulator/lp3971.c:433:
+                       regulator_unregister(lp3971->rdev[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#512: FILE: drivers/regulator/lp3971.c:434:
+       kfree(lp3971->rdev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#513: FILE: drivers/regulator/lp3971.c:435:
+       lp3971->rdev = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#514: FILE: drivers/regulator/lp3971.c:436:
+       return err;$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#517: FILE: drivers/regulator/lp3971.c:439:
+static int __devinit lp3971_i2c_probe(struct i2c_client *i2c,

ERROR:CODE_INDENT: code indent should use tabs where possible
#518: FILE: drivers/regulator/lp3971.c:440:
+                           const struct i2c_device_id *id)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#518: FILE: drivers/regulator/lp3971.c:440:
+static int __devinit lp3971_i2c_probe(struct i2c_client *i2c,
+                           const struct i2c_device_id *id)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#518: FILE: drivers/regulator/lp3971.c:440:
+                           const struct i2c_device_id *id)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#520: FILE: drivers/regulator/lp3971.c:442:
+       struct lp3971 *lp3971;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#521: FILE: drivers/regulator/lp3971.c:443:
+       struct lp3971_platform_data *pdata = i2c->dev.platform_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: drivers/regulator/lp3971.c:444:
+       int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#523: FILE: drivers/regulator/lp3971.c:445:
+       u16 val;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: drivers/regulator/lp3971.c:447:
+       lp3971 = kzalloc(sizeof(struct lp3971), GFP_KERNEL);$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*lp3971)...) over kzalloc(sizeof(struct lp3971)...)
#525: FILE: drivers/regulator/lp3971.c:447:
+       lp3971 = kzalloc(sizeof(struct lp3971), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: drivers/regulator/lp3971.c:448:
+       if (lp3971 == NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#526: FILE: drivers/regulator/lp3971.c:448:
+       if (lp3971 == NULL) {
+               ret = -ENOMEM;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lp3971"
#526: FILE: drivers/regulator/lp3971.c:448:
+       if (lp3971 == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#527: FILE: drivers/regulator/lp3971.c:449:
+               ret = -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#527: FILE: drivers/regulator/lp3971.c:449:
+               ret = -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#528: FILE: drivers/regulator/lp3971.c:450:
+               goto err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#528: FILE: drivers/regulator/lp3971.c:450:
+               goto err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#529: FILE: drivers/regulator/lp3971.c:451:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: drivers/regulator/lp3971.c:453:
+       lp3971->i2c = i2c;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#532: FILE: drivers/regulator/lp3971.c:454:
+       lp3971->dev = &i2c->dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: drivers/regulator/lp3971.c:455:
+       i2c_set_clientdata(i2c, lp3971);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#535: FILE: drivers/regulator/lp3971.c:457:
+       mutex_init(&lp3971->io_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#538: FILE: drivers/regulator/lp3971.c:460:
+       ret = lp3971_i2c_read(i2c, LP3971_SYS_CONTROL1_REG, 1, &val);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#539: FILE: drivers/regulator/lp3971.c:461:
+       if (ret < 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#539: FILE: drivers/regulator/lp3971.c:461:
+       if (ret < 0) {
+               dev_err(&i2c->dev, "failed to detect device\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#540: FILE: drivers/regulator/lp3971.c:462:
+               dev_err(&i2c->dev, "failed to detect device\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#540: FILE: drivers/regulator/lp3971.c:462:
+               dev_err(&i2c->dev, "failed to detect device\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#541: FILE: drivers/regulator/lp3971.c:463:
+               goto err_detect;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#541: FILE: drivers/regulator/lp3971.c:463:
+               goto err_detect;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#542: FILE: drivers/regulator/lp3971.c:464:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#544: FILE: drivers/regulator/lp3971.c:466:
+       if (pdata) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#544: FILE: drivers/regulator/lp3971.c:466:
+       if (pdata) {
+               ret = setup_regulators(lp3971, pdata);

CHECK:BRACES: braces {} should be used on all arms of this statement
#544: FILE: drivers/regulator/lp3971.c:466:
+       if (pdata) {
[...]
+       } else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#545: FILE: drivers/regulator/lp3971.c:467:
+               ret = setup_regulators(lp3971, pdata);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#545: FILE: drivers/regulator/lp3971.c:467:
+               ret = setup_regulators(lp3971, pdata);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#546: FILE: drivers/regulator/lp3971.c:468:
+               if (ret < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#546: FILE: drivers/regulator/lp3971.c:468:
+               if (ret < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#546: FILE: drivers/regulator/lp3971.c:468:
+               if (ret < 0)
+                       goto err_detect;

ERROR:CODE_INDENT: code indent should use tabs where possible
#547: FILE: drivers/regulator/lp3971.c:469:
+                       goto err_detect;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#547: FILE: drivers/regulator/lp3971.c:469:
+                       goto err_detect;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#548: FILE: drivers/regulator/lp3971.c:470:
+       } else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#548: FILE: drivers/regulator/lp3971.c:470:
+       } else
+               dev_warn(lp3971->dev, "No platform init data supplied\n");

CHECK:BRACES: Unbalanced braces around else statement
#548: FILE: drivers/regulator/lp3971.c:470:
+       } else

ERROR:CODE_INDENT: code indent should use tabs where possible
#549: FILE: drivers/regulator/lp3971.c:471:
+               dev_warn(lp3971->dev, "No platform init data supplied\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#549: FILE: drivers/regulator/lp3971.c:471:
+               dev_warn(lp3971->dev, "No platform init data supplied\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#551: FILE: drivers/regulator/lp3971.c:473:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#554: FILE: drivers/regulator/lp3971.c:476:
+       i2c_set_clientdata(i2c, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: drivers/regulator/lp3971.c:477:
+       kfree(lp3971);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#557: FILE: drivers/regulator/lp3971.c:479:
+       return ret;$

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#560: FILE: drivers/regulator/lp3971.c:482:
+static int __devexit lp3971_i2c_remove(struct i2c_client *i2c)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#562: FILE: drivers/regulator/lp3971.c:484:
+       struct lp3971 *lp3971 = i2c_get_clientdata(i2c);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#563: FILE: drivers/regulator/lp3971.c:485:
+       int i;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#564: FILE: drivers/regulator/lp3971.c:486:
+       int i;
+       for (i = 0; i < lp3971->num_regulators; i++)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: drivers/regulator/lp3971.c:486:
+       for (i = 0; i < lp3971->num_regulators; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#564: FILE: drivers/regulator/lp3971.c:486:
+       for (i = 0; i < lp3971->num_regulators; i++)
+               if (lp3971->rdev[i])

ERROR:CODE_INDENT: code indent should use tabs where possible
#565: FILE: drivers/regulator/lp3971.c:487:
+               if (lp3971->rdev[i])$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: drivers/regulator/lp3971.c:487:
+               if (lp3971->rdev[i])$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#565: FILE: drivers/regulator/lp3971.c:487:
+               if (lp3971->rdev[i])
+                       regulator_unregister(lp3971->rdev[i]);

ERROR:CODE_INDENT: code indent should use tabs where possible
#566: FILE: drivers/regulator/lp3971.c:488:
+                       regulator_unregister(lp3971->rdev[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#566: FILE: drivers/regulator/lp3971.c:488:
+                       regulator_unregister(lp3971->rdev[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#567: FILE: drivers/regulator/lp3971.c:489:
+       kfree(lp3971->rdev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#568: FILE: drivers/regulator/lp3971.c:490:
+       i2c_set_clientdata(i2c, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#569: FILE: drivers/regulator/lp3971.c:491:
+       kfree(lp3971);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#571: FILE: drivers/regulator/lp3971.c:493:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#575: FILE: drivers/regulator/lp3971.c:497:
+       { "lp3971", 0 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#576: FILE: drivers/regulator/lp3971.c:498:
+       { }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: drivers/regulator/lp3971.c:503:
+       .driver = {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#582: FILE: drivers/regulator/lp3971.c:504:
+               .name = "LP3971",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#582: FILE: drivers/regulator/lp3971.c:504:
+               .name = "LP3971",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#583: FILE: drivers/regulator/lp3971.c:505:
+               .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#583: FILE: drivers/regulator/lp3971.c:505:
+               .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#584: FILE: drivers/regulator/lp3971.c:506:
+       },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#585: FILE: drivers/regulator/lp3971.c:507:
+       .probe    = lp3971_i2c_probe,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#586: FILE: drivers/regulator/lp3971.c:508:
+       .remove   = lp3971_i2c_remove,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#587: FILE: drivers/regulator/lp3971.c:509:
+       .id_table = lp3971_i2c_id,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#592: FILE: drivers/regulator/lp3971.c:514:
+       int ret = -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#594: FILE: drivers/regulator/lp3971.c:516:
+       ret = i2c_add_driver(&lp3971_i2c_driver);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#595: FILE: drivers/regulator/lp3971.c:517:
+       if (ret != 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#595: FILE: drivers/regulator/lp3971.c:517:
+       if (ret != 0)
+               pr_err("Failed to register I2C driver: %d\n", ret);

ERROR:CODE_INDENT: code indent should use tabs where possible
#596: FILE: drivers/regulator/lp3971.c:518:
+               pr_err("Failed to register I2C driver: %d\n", ret);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#596: FILE: drivers/regulator/lp3971.c:518:
+               pr_err("Failed to register I2C driver: %d\n", ret);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#598: FILE: drivers/regulator/lp3971.c:520:
+       return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#604: FILE: drivers/regulator/lp3971.c:526:
+       i2c_del_driver(&lp3971_i2c_driver);$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#617: FILE: include/linux/regulator/lp3971.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#636: FILE: include/linux/regulator/lp3971.h:20:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#637: FILE: include/linux/regulator/lp3971.h:21:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#658: FILE: include/linux/regulator/lp3971.h:42:
+       int id;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#659: FILE: include/linux/regulator/lp3971.h:43:
+       struct regulator_init_data *initdata;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#663: FILE: include/linux/regulator/lp3971.h:47:
+       int num_regulators;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#664: FILE: include/linux/regulator/lp3971.h:48:
+       struct lp3971_regulator_subdev *regulators;$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000125231.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 100 errors, 346 warnings, 23 checks, 601 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000125231.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
