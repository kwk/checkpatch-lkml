ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#35: FILE: lib/string.c:622:
void *memchr(const void *s, int c, size_t n)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#41: FILE: lib/string.c:624:
+       while (n != 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#41: FILE: lib/string.c:624:
+       while (n != 0) {
+               if ((unsigned char)c == *p) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#42: FILE: lib/string.c:625:
+               if ((unsigned char)c == *p) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#42: FILE: lib/string.c:625:
+               if ((unsigned char)c == *p) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#42: FILE: lib/string.c:625:
+               if ((unsigned char)c == *p) {
+                       return (void *)p;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#42: FILE: lib/string.c:625:
+               if ((unsigned char)c == *p) {
+                       return (void *)p;
                }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#43: FILE: lib/string.c:626:
+                       return (void *)p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#43: FILE: lib/string.c:626:
+                       return (void *)p;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#45: FILE: lib/string.c:628:
+               n--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#45: FILE: lib/string.c:628:
+               n--;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#46: FILE: lib/string.c:629:
+               p++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#46: FILE: lib/string.c:629:
+               p++;$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000388276.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 8 warnings, 0 checks, 20 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000388276.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
