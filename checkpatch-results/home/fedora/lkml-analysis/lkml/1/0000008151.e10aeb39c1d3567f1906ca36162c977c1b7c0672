WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#127: FILE: arch/x86/kernel/smpboot.c:707:
+	*((volatile unsigned short *)phys_to_virt(apic->trampoline_phys_high)) =

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#130: FILE: arch/x86/kernel/smpboot.c:710:
+	*((volatile unsigned short *)phys_to_virt(apic->trampoline_phys_low)) =

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#148: FILE: arch/x86/kernel/smpboot.c:728:
+	*((volatile long *)phys_to_virt(apic->trampoline_phys_low)) = 0;

CHECK:BRACES: braces {} should be used on all arms of this statement
#197: FILE: arch/x86/kernel/smpboot.c:1108:
+	if (!skip_ioapic_setup && nr_ioapics)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#199: FILE: arch/x86/kernel/smpboot.c:1110:
+	else {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000008151.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 2 checks, 93 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000008151.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
