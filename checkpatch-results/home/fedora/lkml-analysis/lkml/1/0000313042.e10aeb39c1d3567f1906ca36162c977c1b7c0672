WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#117: FILE: include/linux/debugobjects.h:1:
+#ifndef _LINUX_DEBUGOBJECTS_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#143: FILE: include/linux/debugobjects.h:27:
+extern void debug_object_op(struct debug_obj *obj, enum debug_obj_op op);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#144: FILE: include/linux/debugobjects.h:28:
+extern void debug_objects_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#157: FILE: include/linux/debugobjects.h:41:
+extern void debug_check_no_obj_freed(const void *address, unsigned long size);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#204: FILE: lib/Kconfig.debug:186:
+config DEBUG_OBJECT_OPS
+       bool "Debug object operations"
+       depends on DEBUG_KERNEL
+       help
+	 If you say Y here, additional code will be inserted into the
+	 kernel to validate operations on various objects.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#240: FILE: lib/debugobjects.c:1:
+/*

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#260: FILE: lib/debugobjects.c:21:
+	spinlock_t lock;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#293: FILE: lib/debugobjects.c:54:
+static const char * const obj_types[ODEBUG_MAX_TYPES] = {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#306: FILE: lib/debugobjects.c:67:
+		printk(KERN_ERR "ODEBUG: %s: %p %s\n", msg, obj,

CHECK:SPACING: No space is necessary after a cast
#329: FILE: lib/debugobjects.c:90:
+	struct odebug *od = object_get_hash((unsigned long) obj);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#346: FILE: lib/debugobjects.c:107:
+	if (dobj != obj ) {

CHECK:SPACING: No space is necessary after a cast
#414: FILE: lib/debugobjects.c:175:
+	saddr = (unsigned long) address;

ERROR:SPACING: space required after that ';' (ctx:BxV)
#418: FILE: lib/debugobjects.c:179:
+	for (;pages > 0; pages--, paddr += PAGE_SIZE) {
 	     ^

CHECK:SPACING: No space is necessary after a cast
#424: FILE: lib/debugobjects.c:185:
+			oaddr = (unsigned long) dobj;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#454: FILE: lib/debugobjects.c:215:
+static int debug_objects_open(struct inode *inode, struct file *filp)
                                                                 ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#456: FILE: lib/debugobjects.c:217:
+	return single_open(filp, debug_objects_show, NULL);
 	                   ^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#492: FILE: lib/debugobjects.c:253:
+	printk(KERN_INFO "ODEBUG: Selftest pass\n");

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#495: FILE: lib/debugobjects.c:256:
+__initcall(debug_objects_do_selftest);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#508: FILE: mm/page_alloc.c:530:
+		debug_check_no_obj_freed(page_address(page),
+					   PAGE_SIZE << order);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000313042.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 8 warnings, 9 checks, 412 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000313042.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
