CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ubuf"
#94: FILE: arch/um/os-Linux/file.c:47:
+	if (ubuf != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ubuf"
#112: FILE: arch/um/os-Linux/file.c:61:
+	if (ubuf != NULL)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'errno != EACCES'
#228: FILE: arch/um/os-Linux/file.c:160:
+	if (err && (errno != EACCES))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'errno != EACCES'
#236: FILE: arch/um/os-Linux/file.c:166:
+	if (err && (errno != EACCES))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#331: FILE: arch/um/os-Linux/file.c:276:
+		printk(UM_KERN_ERR "Couldn't stat \"%s\" : err = %d\n", file,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#347: FILE: arch/um/os-Linux/file.c:288:
+			printk(UM_KERN_ERR "Couldn't open \"%s\", "

WARNING:SPLIT_STRING: quoted string split across lines
#348: FILE: arch/um/os-Linux/file.c:289:
+			printk(UM_KERN_ERR "Couldn't open \"%s\", "
+			       "errno = %d\n", file, errno);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#356: FILE: arch/um/os-Linux/file.c:294:
+			printk(UM_KERN_ERR "Couldn't get the block size of "

WARNING:SPLIT_STRING: quoted string split across lines
#357: FILE: arch/um/os-Linux/file.c:295:
+			printk(UM_KERN_ERR "Couldn't get the block size of "
+			       "\"%s\", errno = %d\n", file, errno);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#368: FILE: arch/um/os-Linux/file.c:314:
+		printk(UM_KERN_ERR "Couldn't stat \"%s\" : err = %d\n", file,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#408: FILE: arch/um/os-Linux/file.c:356:
+	printk(UM_KERN_ERR "os_pipe : Setting FD_CLOEXEC failed, err = %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'os_pipe', this function's name, in a string
#408: FILE: arch/um/os-Linux/file.c:356:
+	printk(UM_KERN_ERR "os_pipe : Setting FD_CLOEXEC failed, err = %d\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#419: FILE: arch/um/os-Linux/file.c:374:
+		printk(UM_KERN_ERR "os_set_fd_async : failed to set O_ASYNC "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'os_set_fd_async', this function's name, in a string
#419: FILE: arch/um/os-Linux/file.c:374:
+		printk(UM_KERN_ERR "os_set_fd_async : failed to set O_ASYNC "

WARNING:SPLIT_STRING: quoted string split across lines
#420: FILE: arch/um/os-Linux/file.c:375:
+		printk(UM_KERN_ERR "os_set_fd_async : failed to set O_ASYNC "
+		       "and O_NONBLOCK on fd # %d, errno = %d\n", fd, errno);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#428: FILE: arch/um/os-Linux/file.c:382:
+		printk(UM_KERN_ERR "os_set_fd_async : Failed to fcntl F_SETOWN "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'os_set_fd_async', this function's name, in a string
#428: FILE: arch/um/os-Linux/file.c:382:
+		printk(UM_KERN_ERR "os_set_fd_async : Failed to fcntl F_SETOWN "

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cmsg"
#516: FILE: arch/um/os-Linux/file.c:489:
+	if (cmsg == NULL) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#517: FILE: arch/um/os-Linux/file.c:490:
+		printk(UM_KERN_ERR "rcv_fd didn't receive anything, "

WARNING:SPLIT_STRING: quoted string split across lines
#518: FILE: arch/um/os-Linux/file.c:491:
+		printk(UM_KERN_ERR "rcv_fd didn't receive anything, "
+		       "error = %d\n", errno);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmsg->cmsg_level != SOL_SOCKET'
#524: FILE: arch/um/os-Linux/file.c:494:
+	if ((cmsg->cmsg_level != SOL_SOCKET) ||
+	    (cmsg->cmsg_type != SCM_RIGHTS)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmsg->cmsg_type != SCM_RIGHTS'
#524: FILE: arch/um/os-Linux/file.c:494:
+	if ((cmsg->cmsg_level != SOL_SOCKET) ||
+	    (cmsg->cmsg_type != SCM_RIGHTS)) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#526: FILE: arch/um/os-Linux/file.c:496:
+		printk(UM_KERN_ERR "rcv_fd didn't receive a descriptor\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#545: FILE: arch/um/os-Linux/file.c:516:
+			printk(UM_KERN_ERR "create_unix_socket : "

WARNING:SPLIT_STRING: quoted string split across lines
#546: FILE: arch/um/os-Linux/file.c:517:
+			printk(UM_KERN_ERR "create_unix_socket : "
+			       "close_on_exec failed, err = %d", -err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#577: FILE: arch/um/os-Linux/file.c:556:
+	printk(UM_KERN_ERR "F_SETLK failed, file already locked by pid %d\n",

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000350198.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 19 warnings, 7 checks, 503 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000350198.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
