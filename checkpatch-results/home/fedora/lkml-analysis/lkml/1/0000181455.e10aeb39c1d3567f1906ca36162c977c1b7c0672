WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
Subject: [PATCH 1/2] [Target_Core_Mod]: Complete conversion to generic REPORT_LUNS functionality

WARNING:TYPO_SPELLING: 'reponse' may be misspelled - perhaps 'response'?
#76: 
would overflow the REPORT_LUNS reponse buffer by 1 LUN Listing (8 bytes)
                               ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#157: FILE: drivers/lio-core/target_core_base.h:416:
+	int (*transport_emulate_cdb)(struct se_cmd_s *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#200: FILE: drivers/lio-core/target_core_device.c:493:
+extern int transport_core_report_lun_response (se_cmd_t *se_cmd)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#212: FILE: drivers/lio-core/target_core_device.c:505:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#214: FILE: drivers/lio-core/target_core_device.c:507:
+		printk(KERN_ERR "Unable to locate se_task_t for se_cmd_t\n");

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#215: FILE: drivers/lio-core/target_core_device.c:508:
+		return(PYX_TRANSPORT_LOGICAL_UNIT_COMMUNICATION_FAILURE);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: drivers/lio-core/target_core_device.c:527:
+^I^Igoto done;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#242: FILE: drivers/lio-core/target_core_device.c:535:
+^I^Ise_lun = deve->se_lun; $

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#278: FILE: drivers/lio-core/target_core_device.c:571:
+	return(PYX_TRANSPORT_SENT_TO_TRANSPORT);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#307: FILE: drivers/lio-core/target_core_device.h:43:
+extern int transport_core_report_lun_response (se_cmd_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#307: FILE: drivers/lio-core/target_core_device.h:43:
+extern int transport_core_report_lun_response (se_cmd_t *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_cmd_t *' should also have an identifier name
#307: FILE: drivers/lio-core/target_core_device.h:43:
+extern int transport_core_report_lun_response (se_cmd_t *);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#312: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#753: FILE: drivers/lio-core/target_core_transport.c:3562:
+		if ((error = cmd->transport_emulate_cdb(cmd)) != 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#761: FILE: drivers/lio-core/target_core_transport.c:3570:
+		if ((error = TRANSPORT(dev)->do_task(task)) != 0) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000181455.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 8 warnings, 1 checks, 253 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000181455.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
