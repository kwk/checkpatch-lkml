WARNING:TYPO_SPELLING: 'usefull' may be misspelled - perhaps 'useful'?
#32: 
Enable user-id based fair group scheduling. This is usefull for anyone
                                                    ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
A separate scheduling group (i.e struct task_grp) is automatically created for 

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#78: FILE: init/Kconfig:292:
+choice
+	depends on FAIR_GROUP_SCHED
+	prompt "Basis for grouping tasks"
+	default FAIR_USER_SCHED
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#83: FILE: init/Kconfig:297:
+ 	config FAIR_USER_SCHED
+ 		bool "user id"
+ 		help
+ 		  This option will choose userid as the basis for grouping
+		  tasks, thus providing equal cpu bandwidth to each user.
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#103: FILE: kernel/sched.c:203:
+#define INIT_TASK_GRP_LOAD	2*NICE_0_LOAD
                           	 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#103: FILE: kernel/sched.c:203:
+#define INIT_TASK_GRP_LOAD	2*NICE_0_LOAD

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#137: FILE: kernel/sched_debug.c:223:
+root_user_share_read_proc(char *page, char **start, off_t off, int count,
+				 int *eof, void *data)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#148: FILE: kernel/sched_debug.c:234:
+root_user_share_write_proc(struct file *file, const char __user *buffer,
+				 unsigned long count, void *data)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#151: FILE: kernel/sched_debug.c:237:
+	char kbuf[sizeof(unsigned long)+1];
 	                               ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#157: FILE: kernel/sched_debug.c:243:
+	shares = simple_strtoul(kbuf, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000377214.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 5 warnings, 4 checks, 191 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000377214.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
