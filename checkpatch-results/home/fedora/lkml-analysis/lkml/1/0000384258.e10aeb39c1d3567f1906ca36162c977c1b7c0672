WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#59: FILE: drivers/mtd/nand/Kconfig:134:
+config MTD_NAND_BF54X
+	tristate "NAND Flash support for Blackfin BF54X SoC DSP"
+	depends on BF54x && MTD_NAND
+	help
+	  This enables the NAND flash controller on the BF54X SoC DPSs
+
+	  No board specific support is done by this driver, each board
+	  must advertise a platform_device for the driver to attach.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#93: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#98: FILE: drivers/mtd/nand/bf54x_nand.c:1:
+/* linux/drivers/mtd/nand/bf54x_nand.c

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#98: FILE: drivers/mtd/nand/bf54x_nand.c:1:
+/* linux/drivers/mtd/nand/bf54x_nand.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:TYPO_SPELLING: 'controler' may be misspelled - perhaps 'controller'?
#104: FILE: drivers/mtd/nand/bf54x_nand.c:7:
+ * Blackfin BF54x on-chip NAND flash controler driver
                                      ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#121: FILE: drivers/mtd/nand/bf54x_nand.c:24:
+ * ^IEnable JFFS2 over NAND as rootfs$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#134: FILE: drivers/mtd/nand/bf54x_nand.c:37:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#135: FILE: drivers/mtd/nand/bf54x_nand.c:38:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#136: FILE: drivers/mtd/nand/bf54x_nand.c:39:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:INCLUDE_LINUX: Use #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#158: FILE: drivers/mtd/nand/bf54x_nand.c:61:
+#include <asm/cacheflush.h>

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#170: FILE: drivers/mtd/nand/bf54x_nand.c:73:
+int hardware_ecc = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#214: FILE: drivers/mtd/nand/bf54x_nand.c:117:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#225: FILE: drivers/mtd/nand/bf54x_nand.c:128:
+static void bf54x_nand_hwcontrol(struct mtd_info *mtd, int cmd,
+				   unsigned int ctrl)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: drivers/mtd/nand/bf54x_nand.c:177:
+static int bf54x_nand_correct_data_256(struct mtd_info *mtd, u_char *dat,
+					u_char *read_ecc, u_char *calc_ecc)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#349: FILE: drivers/mtd/nand/bf54x_nand.c:252:
+static int bf54x_nand_correct_data(struct mtd_info *mtd, u_char *dat,
+					u_char *read_ecc, u_char *calc_ecc)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#378: FILE: drivers/mtd/nand/bf54x_nand.c:281:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#381: FILE: drivers/mtd/nand/bf54x_nand.c:284:
+static int bf54x_nand_calculate_ecc(struct mtd_info *mtd,
+		const u_char *dat, u_char *ecc_code)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#449: FILE: drivers/mtd/nand/bf54x_nand.c:352:
+	uint8_t val;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#457: FILE: drivers/mtd/nand/bf54x_nand.c:360:
+static void bf54x_nand_write_buf(struct mtd_info *mtd,
+				const uint8_t *buf, int len)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#457: FILE: drivers/mtd/nand/bf54x_nand.c:360:
+				const uint8_t *buf, int len)

CHECK:SPACING: No space is necessary after a cast
#473: FILE: drivers/mtd/nand/bf54x_nand.c:376:
+	u16 *p = (u16 *) buf;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#474: FILE: drivers/mtd/nand/bf54x_nand.c:377:
+	u16 *p = (u16 *) buf;
+	len >>= 1;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#489: FILE: drivers/mtd/nand/bf54x_nand.c:392:
+static void bf54x_nand_write_buf16(struct mtd_info *mtd,
+				const uint8_t *buf, int len)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#489: FILE: drivers/mtd/nand/bf54x_nand.c:392:
+				const uint8_t *buf, int len)

CHECK:SPACING: No space is necessary after a cast
#492: FILE: drivers/mtd/nand/bf54x_nand.c:395:
+	u16 *p = (u16 *) buf;

WARNING:LINE_SPACING: Missing a blank line after declarations
#493: FILE: drivers/mtd/nand/bf54x_nand.c:396:
+	u16 *p = (u16 *) buf;
+	len >>= 1;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#504: FILE: drivers/mtd/nand/bf54x_nand.c:407:
+static irqreturn_t bf54x_nand_dma_irq (int irq, void *dev_id)

CHECK:SPACING: No space is necessary after a cast
#506: FILE: drivers/mtd/nand/bf54x_nand.c:409:
+	struct bf54x_nand_info *info = (struct bf54x_nand_info *) dev_id;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#516: FILE: drivers/mtd/nand/bf54x_nand.c:419:
+static int bf54x_nand_dma_rw(struct mtd_info *mtd,
+				uint8_t *buf, int is_read)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#516: FILE: drivers/mtd/nand/bf54x_nand.c:419:
+				uint8_t *buf, int is_read)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#524: FILE: drivers/mtd/nand/bf54x_nand.c:427:
+	dev_dbg(info->device, " mtd->%p, buf->%p, len %d, is_read %d\n",
+			mtd, buf, is_read);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#528: FILE: drivers/mtd/nand/bf54x_nand.c:431:
+		invalidate_dcache_range((unsigned int)buf,
+				(unsigned int)(buf + page_size));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#531: FILE: drivers/mtd/nand/bf54x_nand.c:434:
+		flush_dcache_range((unsigned int)buf,
+				(unsigned int)(buf + page_size));

CHECK:SPACING: No space is necessary after a cast
#541: FILE: drivers/mtd/nand/bf54x_nand.c:444:
+	set_dma_start_addr(CH_NFC, (unsigned long) buf);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#563: FILE: drivers/mtd/nand/bf54x_nand.c:466:
+static void bf54x_nand_dma_read_buf(struct mtd_info *mtd,
+					uint8_t *buf, int len)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#563: FILE: drivers/mtd/nand/bf54x_nand.c:466:
+					uint8_t *buf, int len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#578: FILE: drivers/mtd/nand/bf54x_nand.c:481:
+static void bf54x_nand_dma_write_buf(struct mtd_info *mtd,
+				const uint8_t *buf, int len)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#578: FILE: drivers/mtd/nand/bf54x_nand.c:481:
+				const uint8_t *buf, int len)

CHECK:SPACING: No space is necessary after a cast
#620: FILE: drivers/mtd/nand/bf54x_nand.c:523:
+	set_dma_callback(CH_NFC, (void *) bf54x_nand_dma_irq, (void *) info);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#643: FILE: drivers/mtd/nand/bf54x_nand.c:546:
+	dev_info(info->device,
+		"page_size=%d, data_width=%d, wr_dly=%d, rd_dly=%d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#665: FILE: drivers/mtd/nand/bf54x_nand.c:568:
+		printk(KERN_ERR DRV_NAME

CHECK:LINE_SPACING: Please don't use multiple blank lines
#670: FILE: drivers/mtd/nand/bf54x_nand.c:573:
+
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#672: FILE: drivers/mtd/nand/bf54x_nand.c:575:
+	if (bf54x_nand_dma_init(info)) {
+		err = -ENXIO;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info"
#748: FILE: drivers/mtd/nand/bf54x_nand.c:651:
+	if (info == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#749: FILE: drivers/mtd/nand/bf54x_nand.c:652:
+	if (info == NULL) {
+		dev_err(&pdev->dev, "no memory for flash info\n");

CHECK:SPACING: No space is necessary after a cast
#783: FILE: drivers/mtd/nand/bf54x_nand.c:686:
+	chip->IO_ADDR_R    = (void __iomem *) NFC_READ;

CHECK:SPACING: No space is necessary after a cast
#784: FILE: drivers/mtd/nand/bf54x_nand.c:687:
+	chip->IO_ADDR_W    = (void __iomem *) NFC_DATA_WR;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#789: FILE: drivers/mtd/nand/bf54x_nand.c:692:
+^Imtd ^I^I= &info->mtd;$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#877: FILE: drivers/mtd/nand/bf54x_nand.c:780:
+	printk(KERN_INFO "%s, Version %s (c) 2007 Analog Devices, Inc.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#878: FILE: drivers/mtd/nand/bf54x_nand.c:781:
+	printk(KERN_INFO "%s, Version %s (c) 2007 Analog Devices, Inc.\n",
+		DRV_DESC, DRV_VERSION);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#912: FILE: include/asm-blackfin/mach-bf548/nand.h:1:
+/* linux/include/asm-blackfin/mach-bf548/nand.h

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#912: FILE: include/asm-blackfin/mach-bf548/nand.h:1:
+/* linux/include/asm-blackfin/mach-bf548/nand.h

WARNING:TYPO_SPELLING: 'platfrom' may be misspelled - perhaps 'platform'?
#926: FILE: include/asm-blackfin/mach-bf548/nand.h:15:
+ * define a interface between platfrom board specific code and
                               ^^^^^^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000384258.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 19 warnings, 31 checks, 881 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000384258.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
