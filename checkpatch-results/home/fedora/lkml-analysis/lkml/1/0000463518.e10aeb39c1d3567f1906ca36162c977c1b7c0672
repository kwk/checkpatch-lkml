CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#108: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:93:
+	int32_t lro;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#145: FILE: drivers/net/cxgb3/cxgb3_main.c:1636:
+^I^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#176: FILE: drivers/net/cxgb3/sge.c:1714:
+#define IPH_OFFSET (2 + sizeof (struct cpl_rx_pkt) + ETH_HLEN)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'skb' may be better as '(skb)' to avoid precedence issues
#177: FILE: drivers/net/cxgb3/sge.c:1715:
+#define SKB_HASHVAL(skb) (skb->priority)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'hash' may be better as '(hash)' to avoid precedence issues
#179: FILE: drivers/net/cxgb3/sge.c:1717:
+#define LRO_SESSION_IDX_HINT_HASH(hash) (hash & (MAX_LRO_PER_QSET - 1))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#180: FILE: drivers/net/cxgb3/sge.c:1718:
+#define LRO_IDX_INC(idx) idx = (idx + 1) & (MAX_LRO_PER_QSET - 1)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'idx' - possible side-effects?
#180: FILE: drivers/net/cxgb3/sge.c:1718:
+#define LRO_IDX_INC(idx) idx = (idx + 1) & (MAX_LRO_PER_QSET - 1)

CHECK:SPACING: No space is necessary after a cast
#193: FILE: drivers/net/cxgb3/sge.c:1731:
+	return *(u32 *) & tcph->source == *(u32 *) & s_tcph->source &&

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#193: FILE: drivers/net/cxgb3/sge.c:1731:
+	return *(u32 *) & tcph->source == *(u32 *) & s_tcph->source &&
 	                ^

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#193: FILE: drivers/net/cxgb3/sge.c:1731:
+	return *(u32 *) & tcph->source == *(u32 *) & s_tcph->source &&
 	                                           ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#264: FILE: drivers/net/cxgb3/sge.c:1802:
+	BUG_ON(l->num_active > MAX_LRO_PER_QSET);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: No space is necessary after a cast
#310: FILE: drivers/net/cxgb3/sge.c:1848:
+		     (*((u8 *) cpl + 1) & 0x90) != 0x10 ||

CHECK:SPACING: No space is necessary after a cast
#322: FILE: drivers/net/cxgb3/sge.c:1860:
+	u8 control_bits = *((u8 *) th + 13);

CHECK:SPACING: No space is necessary after a cast
#328: FILE: drivers/net/cxgb3/sge.c:1866:
+		u32 *ptr = (u32 *) (th + 1);

WARNING:LINE_SPACING: Missing a blank line after declarations
#329: FILE: drivers/net/cxgb3/sge.c:1867:
+		u32 *ptr = (u32 *) (th + 1);
+		if (unlikely(olen != TCPOLEN_TSTAMP_ALIGNED ||

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#365: FILE: drivers/net/cxgb3/sge.c:1903:
+		u32 *ptr = (u32 *) (th + 1), *nptr = (u32 *) (nth + 1);

WARNING:LINE_SPACING: Missing a blank line after declarations
#397: FILE: drivers/net/cxgb3/sge.c:1935:
+		int nr = skb_shinfo(s->skb)->nr_frags;
+		skb_shinfo(s->skb)->frags[nr].page = frag->page;

CHECK:BRACES: braces {} should be used on all arms of this statement
#470: FILE: drivers/net/cxgb3/sge.c:2008:
+	if (unlikely(!can_lro_tcpsegment(th)))
[...]
+	else if (unlikely(!s))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#474: FILE: drivers/net/cxgb3/sge.c:2012:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#510: FILE: drivers/net/cxgb3/sge.c:2283:
+^I^I^I^I^I$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000463518.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 4 warnings, 11 checks, 504 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000463518.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
