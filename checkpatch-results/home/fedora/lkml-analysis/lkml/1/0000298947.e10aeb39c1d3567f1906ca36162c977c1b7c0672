WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#54: FILE: xpmem_test/A1.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: No space is necessary after a cast
#96: FILE: xpmem_test/A1.c:43:
+	make_info.vaddr = (__u64) data_block;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#99: FILE: xpmem_test/A1.c:46:
+	make_info.permit_value = (__u64) 0600;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#123: FILE: xpmem_test/A2.c:1:
+/*

CHECK:SPACING: No space is necessary after a cast
#159: FILE: xpmem_test/A2.c:37:
+	segid = (__s64) atoi(argv[1]) << 48;

CHECK:SPACING: No space is necessary after a cast
#160: FILE: xpmem_test/A2.c:38:
+	segid |= (__s64) atoi(argv[2]) << 32;

CHECK:SPACING: No space is necessary after a cast
#161: FILE: xpmem_test/A2.c:39:
+	segid |= (__s64) atoi(argv[3]) << 16;

CHECK:SPACING: No space is necessary after a cast
#162: FILE: xpmem_test/A2.c:40:
+	segid |= (__s64) atoi(argv[4]);

CHECK:SPACING: No space is necessary after a cast
#166: FILE: xpmem_test/A2.c:44:
+	get_info.permit_value = (__u64) NULL;

CHECK:SPACING: No space is necessary after a cast
#177: FILE: xpmem_test/A2.c:55:
+	attach_info.vaddr = (__u64) NULL;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#217: FILE: xpmem_test/xpmem.h:1:
+/*

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#243: FILE: xpmem_test/xpmem.h:27:
+#define XPMEM_MAXADDR_SIZE	(size_t)(-1L)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#334: FILE: xpmem_test/xpmem.h:118:
+extern int xpmem_version(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#335: FILE: xpmem_test/xpmem.h:119:
+extern __s64 xpmem_make(void *, size_t, int, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#335: FILE: xpmem_test/xpmem.h:119:
+extern __s64 xpmem_make(void *, size_t, int, void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#335: FILE: xpmem_test/xpmem.h:119:
+extern __s64 xpmem_make(void *, size_t, int, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#335: FILE: xpmem_test/xpmem.h:119:
+extern __s64 xpmem_make(void *, size_t, int, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#335: FILE: xpmem_test/xpmem.h:119:
+extern __s64 xpmem_make(void *, size_t, int, void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#336: FILE: xpmem_test/xpmem.h:120:
+extern int xpmem_remove(__s64);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__s64' should also have an identifier name
#336: FILE: xpmem_test/xpmem.h:120:
+extern int xpmem_remove(__s64);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#337: FILE: xpmem_test/xpmem.h:121:
+extern __s64 xpmem_get(__s64, int, int, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__s64' should also have an identifier name
#337: FILE: xpmem_test/xpmem.h:121:
+extern __s64 xpmem_get(__s64, int, int, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#337: FILE: xpmem_test/xpmem.h:121:
+extern __s64 xpmem_get(__s64, int, int, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#337: FILE: xpmem_test/xpmem.h:121:
+extern __s64 xpmem_get(__s64, int, int, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#337: FILE: xpmem_test/xpmem.h:121:
+extern __s64 xpmem_get(__s64, int, int, void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#338: FILE: xpmem_test/xpmem.h:122:
+extern int xpmem_release(__s64);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__s64' should also have an identifier name
#338: FILE: xpmem_test/xpmem.h:122:
+extern int xpmem_release(__s64);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#339: FILE: xpmem_test/xpmem.h:123:
+extern void *xpmem_attach(struct xpmem_addr, size_t, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct xpmem_addr' should also have an identifier name
#339: FILE: xpmem_test/xpmem.h:123:
+extern void *xpmem_attach(struct xpmem_addr, size_t, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#339: FILE: xpmem_test/xpmem.h:123:
+extern void *xpmem_attach(struct xpmem_addr, size_t, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#339: FILE: xpmem_test/xpmem.h:123:
+extern void *xpmem_attach(struct xpmem_addr, size_t, void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#340: FILE: xpmem_test/xpmem.h:124:
+extern void *xpmem_attach_wc(struct xpmem_addr, size_t, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct xpmem_addr' should also have an identifier name
#340: FILE: xpmem_test/xpmem.h:124:
+extern void *xpmem_attach_wc(struct xpmem_addr, size_t, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#340: FILE: xpmem_test/xpmem.h:124:
+extern void *xpmem_attach_wc(struct xpmem_addr, size_t, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#340: FILE: xpmem_test/xpmem.h:124:
+extern void *xpmem_attach_wc(struct xpmem_addr, size_t, void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#341: FILE: xpmem_test/xpmem.h:125:
+extern void *xpmem_attach_getspace(struct xpmem_addr, size_t, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct xpmem_addr' should also have an identifier name
#341: FILE: xpmem_test/xpmem.h:125:
+extern void *xpmem_attach_getspace(struct xpmem_addr, size_t, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#341: FILE: xpmem_test/xpmem.h:125:
+extern void *xpmem_attach_getspace(struct xpmem_addr, size_t, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#341: FILE: xpmem_test/xpmem.h:125:
+extern void *xpmem_attach_getspace(struct xpmem_addr, size_t, void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#342: FILE: xpmem_test/xpmem.h:126:
+extern int xpmem_detach(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#342: FILE: xpmem_test/xpmem.h:126:
+extern int xpmem_detach(void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#343: FILE: xpmem_test/xpmem.h:127:
+extern int xpmem_bcopy(struct xpmem_addr, struct xpmem_addr, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct xpmem_addr' should also have an identifier name
#343: FILE: xpmem_test/xpmem.h:127:
+extern int xpmem_bcopy(struct xpmem_addr, struct xpmem_addr, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct xpmem_addr' should also have an identifier name
#343: FILE: xpmem_test/xpmem.h:127:
+extern int xpmem_bcopy(struct xpmem_addr, struct xpmem_addr, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#343: FILE: xpmem_test/xpmem.h:127:
+extern int xpmem_bcopy(struct xpmem_addr, struct xpmem_addr, size_t);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000298947.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 26 warnings, 18 checks, 278 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000298947.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
