CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ph' may be better as '(ph)' to avoid precedence issues
#61: FILE: kernel/pid.c:45:
+#define pid_hashfn(ph, nr) hash_long((unsigned long)nr, ph->shift)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#65: FILE: kernel/pid.c:49:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#81: FILE: kernel/pid.c:213:
+	BUG_ON(old == new);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#92: FILE: kernel/pid.c:224:
+			hlist_add_head_rcu(&pid->pid_chain,
+					&new->table[pid_hashfn(new, pid->nr)]);

WARNING:LINE_SPACING: Missing a blank line after declarations
#123: FILE: kernel/pid.c:255:
+		unsigned int idx = ph_cur_idx ^ 1;
+		ph = &pid_hashes[idx];

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#128: FILE: kernel/pid.c:260:
+			BUG_ON(ret == ph);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#129: FILE: kernel/pid.c:261:
+			BUG_ON(ret != &pid_hashes[idx ^ 1]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#215: FILE: kernel/pid.c:483:
+	printk("PID hash table entries: %d (order: %d, %Zd bytes)\n",

WARNING:PRINTF_Z: %Zd is non-standard C, use %zd
#215: FILE: kernel/pid.c:483:
+	printk("PID hash table entries: %d (order: %d, %Zd bytes)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#216: FILE: kernel/pid.c:484:
+	printk("PID hash table entries: %d (order: %d, %Zd bytes)\n",
+		pidhash_size, pidhash_shift,

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#219: FILE: kernel/pid.c:487:
+	ph->table = kmalloc(pidhash_size * sizeof(struct hlist_head), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#221: FILE: kernel/pid.c:489:
+		printk("Could not alloc pidhash!\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#221: FILE: kernel/pid.c:489:
+	if (!ph->table) {
+		printk("Could not alloc pidhash!\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000384404.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 4 checks, 220 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000384404.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
