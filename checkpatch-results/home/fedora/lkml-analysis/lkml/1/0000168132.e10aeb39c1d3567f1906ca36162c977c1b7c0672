WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
Change RomFS so that it can use MTD devices directly - without the intercession

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#131: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#807: FILE: fs/romfs/internal.h:1:
+/* RomFS internal definitions

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: No space is necessary after a cast
#828: FILE: fs/romfs/internal.h:22:
+	return (size_t) (unsigned long) sb->s_fs_info;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#848: FILE: fs/romfs/internal.h:42:
+extern int romfs_dev_read(struct super_block *sb, unsigned long pos,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#850: FILE: fs/romfs/internal.h:44:
+extern ssize_t romfs_dev_strnlen(struct super_block *sb,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#852: FILE: fs/romfs/internal.h:46:
+extern int romfs_dev_strncmp(struct super_block *sb, unsigned long pos,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#860: FILE: fs/romfs/mmap-nommu.c:1:
+/* NOMMU mmap support for RomFS on MTD devices

CHECK:SPACING: No space is necessary after a cast
#897: FILE: fs/romfs/mmap-nommu.c:38:
+		return (unsigned long) -EINVAL;

CHECK:SPACING: No space is necessary after a cast
#902: FILE: fs/romfs/mmap-nommu.c:43:
+			return (unsigned long) -EINVAL;

CHECK:SPACING: No space is necessary after a cast
#905: FILE: fs/romfs/mmap-nommu.c:46:
+			return (unsigned long) -EINVAL;

CHECK:SPACING: No space is necessary after a cast
#909: FILE: fs/romfs/mmap-nommu.c:50:
+			return (unsigned long) -EINVAL;

CHECK:SPACING: No space is necessary after a cast
#915: FILE: fs/romfs/mmap-nommu.c:56:
+	return (unsigned long) -ENOSYS;

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#915: FILE: fs/romfs/mmap-nommu.c:56:
+	return (unsigned long) -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#924: FILE: fs/romfs/mmap-nommu.c:65:
+	return vma->vm_flags & (VM_SHARED | VM_MAYSHARE) ? 0 : -ENOSYS;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#941: FILE: fs/romfs/storage.c:1:
+/* RomFS storage access routines

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'sb' - possible side-effects?
#962: FILE: fs/romfs/storage.c:22:
+#define ROMFS_MTD_READ(sb, ...) ((sb)->s_mtd->read((sb)->s_mtd, ##__VA_ARGS__))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1208: FILE: fs/romfs/super.c:1:
+/* Block- or MTD-based romfs

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1238: FILE: fs/romfs/super.c:31:
+ *					  readlink shouldn't iput()
   					                     ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1250: FILE: fs/romfs/super.c:43:
+ *					  (error, uptodate, locking) in
   					          ^^^^^^^^

WARNING:REPEATED_WORD: Possible repeated word: 'in'
#1251: FILE: fs/romfs/super.c:44:
+ *					  (error, uptodate, locking) in
+ *					  in readpage

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1355: FILE: fs/romfs/super.c:148:
+static int romfs_readdir(struct file *filp, void *dirent, filldir_t filldir)
                                       ^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1420: FILE: fs/romfs/super.c:213:
+				   struct nameidata *nd)
 				                     ^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1434: FILE: fs/romfs/super.c:227:
+	 * pointed to by the directory's special data */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#1494: FILE: fs/romfs/super.c:287:
+static struct inode_operations romfs_dir_inode_operations = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1508: FILE: fs/romfs/super.c:301:
+	unsigned nextfh, ret;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1512: FILE: fs/romfs/super.c:305:
+	 * to the actual file */

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1547: FILE: fs/romfs/super.c:340:
+	i->i_mtime.tv_sec = i->i_atime.tv_sec = i->i_ctime.tv_sec = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1548: FILE: fs/romfs/super.c:341:
+	i->i_mtime.tv_nsec = i->i_atime.tv_nsec = i->i_ctime.tv_nsec = 0;

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IXUGO' are not preferred. Consider using octal permissions '0111'.
#1559: FILE: fs/romfs/super.c:352:
+			mode |= S_IXUGO;

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IXUGO' are not preferred. Consider using octal permissions '0111'.
#1568: FILE: fs/romfs/super.c:361:
+			mode |= S_IXUGO;

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#1573: FILE: fs/romfs/super.c:366:
+		mode |= S_IRWXUGO;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1591: FILE: fs/romfs/super.c:384:
+	printk(KERN_ERR "ROMFS: read error for inode 0x%lx\n", pos);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1601: FILE: fs/romfs/super.c:394:
+	struct romfs_inode_info *inode;
+	inode = kmem_cache_alloc(romfs_inode_cachep, GFP_KERNEL);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1621: FILE: fs/romfs/super.c:414:
+	buf->f_bfree = buf->f_bavail = buf->f_ffree;

CHECK:SPACING: No space is necessary after a cast
#1691: FILE: fs/romfs/super.c:484:
+	sb->s_fs_info = (void *) 512;

CHECK:SPACING: No space is necessary after a cast
#1701: FILE: fs/romfs/super.c:494:
+	sb->s_fs_info = (void *) img_size;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1706: FILE: fs/romfs/super.c:499:
+			printk(KERN_WARNING "VFS:"

WARNING:SPLIT_STRING: quoted string split across lines
#1707: FILE: fs/romfs/super.c:500:
+			printk(KERN_WARNING "VFS:"
+			       " Can't find a romfs filesystem on dev %s.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1713: FILE: fs/romfs/super.c:506:
+		printk(KERN_ERR "ROMFS: bad initial checksum on dev %s.\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1722: FILE: fs/romfs/super.c:515:
+		printk(KERN_NOTICE "ROMFS: Mounting image '%*.*s' through %s\n",

CHECK:SPACING: No space is necessary after a cast
#1723: FILE: fs/romfs/super.c:516:
+		       (unsigned) len, (unsigned) len, rsb->name, storage);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1723: FILE: fs/romfs/super.c:516:
+		       (unsigned) len, (unsigned) len, rsb->name, storage);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1723: FILE: fs/romfs/super.c:516:
+		       (unsigned) len, (unsigned) len, rsb->name, storage);

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1742: FILE: fs/romfs/super.c:535:
+	iput(root);
 	^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1816: FILE: fs/romfs/super.c:609:
+	printk(KERN_INFO "ROMFS MTD (C) 2007 Red Hat, Inc.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1825: FILE: fs/romfs/super.c:618:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1831: FILE: fs/romfs/super.c:624:
+		printk(KERN_ERR "ROMFS error: Failed to register filesystem\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000168132.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 32 warnings, 16 checks, 1072 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000168132.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
