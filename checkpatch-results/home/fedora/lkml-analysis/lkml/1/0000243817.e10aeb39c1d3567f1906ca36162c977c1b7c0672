WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
SELinux's flush_unauthorized_files() pass the appropriate creds back to itself

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#216: FILE: fs/nfsctl.c:44:
+		return dentry_open(nd.path.dentry, nd.path.mnt, flags,
 		                   ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#216: FILE: fs/nfsctl.c:44:
+		return dentry_open(nd.path.dentry, nd.path.mnt, flags,
 		                                   ^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#230: FILE: fs/nfsd/nfs4recover.c:229:
+	filp = dentry_open(dget(dir), mntget(rec_dir.path.mnt), O_RDONLY,
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#350: FILE: fs/xfs/linux-2.6/xfs_ioctl.c:326:
+	filp = dentry_open(dentry, parfilp->f_path.mnt, hreq.oflags, cred);
 	^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#371: FILE: include/linux/fs.h:1621:
+extern struct file * dentry_open(struct dentry *, struct vfsmount *, int,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#371: FILE: include/linux/fs.h:1621:
+extern struct file * dentry_open(struct dentry *, struct vfsmount *, int,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#371: FILE: include/linux/fs.h:1621:
+extern struct file * dentry_open(struct dentry *, struct vfsmount *, int,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#371: FILE: include/linux/fs.h:1621:
+extern struct file * dentry_open(struct dentry *, struct vfsmount *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#371: FILE: include/linux/fs.h:1621:
+extern struct file * dentry_open(struct dentry *, struct vfsmount *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct cred *' should also have an identifier name
#371: FILE: include/linux/fs.h:1621:
+extern struct file * dentry_open(struct dentry *, struct vfsmount *, int,

WARNING:SPACING: Unnecessary space before function pointer arguments
#385: FILE: include/linux/security.h:1401:
+	int (*dentry_open) (struct file *file, const struct cred *cred);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#501: FILE: security/selinux/hooks.c:2223:
+						devnull = dentry_open(

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000243817.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 10 warnings, 2 checks, 364 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000243817.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
