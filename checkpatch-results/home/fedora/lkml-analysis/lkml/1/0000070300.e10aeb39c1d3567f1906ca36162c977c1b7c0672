WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
target_core_mod to group the same subsystem storage objects types until a single

WARNING:TYPO_SPELLING: 'boths' may be misspelled - perhaps 'both'?
#50: 
/sys/kernel/config/target/core/$HBA directory.  The HBA code supports boths
                                                                      ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#57: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#62: FILE: drivers/target/target_core_hba.c:1:
+/*******************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#85: FILE: drivers/target/target_core_hba.c:24:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#86: FILE: drivers/target/target_core_hba.c:25:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#90: FILE: drivers/target/target_core_hba.c:29:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#126: FILE: drivers/target/target_core_hba.c:65:
+		printk(KERN_ERR "Unable to allocate se_hba_t\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#154: FILE: drivers/target/target_core_hba.c:93:
+int se_core_add_hba(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#184: FILE: drivers/target/target_core_hba.c:123:
+	printk(KERN_INFO "CORE_HBA[%d] - Attached HBA to Generic Target"

WARNING:SPLIT_STRING: quoted string split across lines
#185: FILE: drivers/target/target_core_hba.c:124:
+	printk(KERN_INFO "CORE_HBA[%d] - Attached HBA to Generic Target"
+			" Core\n", hba->hba_id);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#191: FILE: drivers/target/target_core_hba.c:130:
+static int se_core_shutdown_hba(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#212: FILE: drivers/target/target_core_hba.c:151:
+int se_core_del_hba(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#218: FILE: drivers/target/target_core_hba.c:157:
+		printk(KERN_ERR "HBA ID: %d Status: INACTIVE, ignoring"

WARNING:SPLIT_STRING: quoted string split across lines
#219: FILE: drivers/target/target_core_hba.c:158:
+		printk(KERN_ERR "HBA ID: %d Status: INACTIVE, ignoring"
+			" delhbafromtarget request\n", hba->hba_id);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#228: FILE: drivers/target/target_core_hba.c:167:
+		printk(KERN_ERR "CORE_HBA[%u] - **ERROR** - Unable to release"

WARNING:SPLIT_STRING: quoted string split across lines
#229: FILE: drivers/target/target_core_hba.c:168:
+		printk(KERN_ERR "CORE_HBA[%u] - **ERROR** - Unable to release"
+			" HBA with active LUNs\n", hba->hba_id);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#235: FILE: drivers/target/target_core_hba.c:174:
+	list_for_each_entry_safe(dev, dev_tmp, &hba->hba_dev_list, dev_list) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#256: FILE: drivers/target/target_core_hba.c:195:
+	printk(KERN_INFO "CORE_HBA[%d] - Detached HBA from Generic Target"

WARNING:SPLIT_STRING: quoted string split across lines
#257: FILE: drivers/target/target_core_hba.c:196:
+	printk(KERN_INFO "CORE_HBA[%d] - Detached HBA from Generic Target"
+			" Core\n", hba->hba_id);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#269: FILE: include/target/target_core_hba.h:1:
+/*******************************************************************************

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#292: FILE: include/target/target_core_hba.h:24:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#293: FILE: include/target/target_core_hba.h:25:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#297: FILE: include/target/target_core_hba.h:29:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#305: FILE: include/target/target_core_hba.h:37:
+extern int core_get_hba(struct se_hba_s *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_hba_s *' should also have an identifier name
#305: FILE: include/target/target_core_hba.h:37:
+extern int core_get_hba(struct se_hba_s *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#306: FILE: include/target/target_core_hba.h:38:
+extern se_hba_t *core_alloc_hba(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#306: FILE: include/target/target_core_hba.h:38:
+extern se_hba_t *core_alloc_hba(int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#307: FILE: include/target/target_core_hba.h:39:
+extern void core_put_hba(struct se_hba_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_hba_s *' should also have an identifier name
#307: FILE: include/target/target_core_hba.h:39:
+extern void core_put_hba(struct se_hba_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#308: FILE: include/target/target_core_hba.h:40:
+extern int se_core_add_hba(struct se_hba_s *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_hba_s *' should also have an identifier name
#308: FILE: include/target/target_core_hba.h:40:
+extern int se_core_add_hba(struct se_hba_s *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#308: FILE: include/target/target_core_hba.h:40:
+extern int se_core_add_hba(struct se_hba_s *, u32);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#309: FILE: include/target/target_core_hba.h:41:
+extern int se_core_del_hba(struct se_hba_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_hba_s *' should also have an identifier name
#309: FILE: include/target/target_core_hba.h:41:
+extern int se_core_del_hba(struct se_hba_s *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000070300.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 20 warnings, 11 checks, 244 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000070300.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
