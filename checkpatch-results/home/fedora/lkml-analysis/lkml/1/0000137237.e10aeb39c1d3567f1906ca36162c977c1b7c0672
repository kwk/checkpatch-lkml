WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '861c7c88e1eca795fdd879ac703d5d52fc18a837', maybe rebased or not pulled?
#29: 
commit 861c7c88e1eca795fdd879ac703d5d52fc18a837

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#35: 
    Signed-off-by: Jeff Garzik <jgarzik@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#200: FILE: block/blk-core.c:2117:
+	rq->bio_list.head = rq->bio_list.tail = bio;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: braces {} should be used on all arms of this statement
#213: FILE: block/blk-map.c:15:
+	if (bio_list_empty(&rq->bio_list))
[...]
 	else if (!ll_back_merge_fn(q, rq, bio))
[...]
 	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rq->cmd_type == REQ_TYPE_ATA_PC'
#463: FILE: drivers/ide/ide-cd.c:842:
+	if (!bio_list_empty(&rq->bio_list) ||
+	    ((rq->cmd_type == REQ_TYPE_ATA_PC) && rq->data_len)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPLIT_STRING: quoted string split across lines
#644: FILE: drivers/scsi/mpt2sas/mpt2sas_transport.c:1044:
 		printk(MPT2SAS_ERR_FMT "%s: multiple segments req %u %u, "
+		    "rsp %u %u\n", ioc->name, __func__, req->bio_list.head->bi_vcnt,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#655: FILE: drivers/scsi/mpt2sas/mpt2sas_transport.c:1116:
+	dma_addr_out = pci_map_single(ioc->pdev, bio_data(req->bio_list.head),
 	      req->data_len, PCI_DMA_BIDIRECTIONAL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#664: FILE: drivers/scsi/mpt2sas/mpt2sas_transport.c:1134:
+	dma_addr_in =  pci_map_single(ioc->pdev, bio_data(rsp->bio_list.head),
 	      rsp->data_len, PCI_DMA_BIDIRECTIONAL);

CHECK:CAMELCASE: Avoid CamelCase: <SRpnt>
#708: FILE: drivers/scsi/osst.c:395:
+		SRpnt->bio = req->bio_list.head;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <SCpnt>
#773: FILE: drivers/scsi/sr.c:287:
+			if (!bio_list_empty(&SCpnt->request->bio_list))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000137237.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 7 checks, 597 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000137237.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
