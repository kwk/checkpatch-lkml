CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#57: FILE: include/linux/kernel.h:167:
+extern int get_map_option(const char *str, const char *key, int *pint);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#100: FILE: lib/cmdline.c:141:
+	/* We must copy the string to the stack, because strsep()
+	   changes it.*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#100: FILE: lib/cmdline.c:141:
+	   changes it.*/

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#102: FILE: lib/cmdline.c:143:
+	buf[COMMAND_LINE_SIZE-1] = '\0';
 	                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "substr"
#106: FILE: lib/cmdline.c:147:
+	while ((!found) && (substr != NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!key"
#108: FILE: lib/cmdline.c:149:
+			if (key == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!strchr"
#110: FILE: lib/cmdline.c:151:
+				if (strchr(substr, ':') == NULL) {

WARNING:NAKED_SSCANF: unchecked sscanf return value
#111: FILE: lib/cmdline.c:152:
+					sscanf(substr, "%d", pint);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#111: FILE: lib/cmdline.c:152:
+					sscanf(substr, "%d", pint);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#119: FILE: lib/cmdline.c:160:
+					/* Now the next char must be a ':',
+					   if not, search for the next match */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#119: FILE: lib/cmdline.c:160:
+					   if not, search for the next match */

WARNING:NAKED_SSCANF: unchecked sscanf return value
#122: FILE: lib/cmdline.c:163:
+						sscanf(substr, "%d", pint);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#122: FILE: lib/cmdline.c:163:
+						sscanf(substr, "%d", pint);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000345158.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 5 checks, 77 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000345158.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
