WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#64: 
ln -s $TARGET/iblock_0/lvm_test0 "$FABRIC/$DEF_IQN/tpgt_1/lun/lun_0/lio_west_port"

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Nicholas A. Bellinger'
#68: 
Signed-off-by: Nicholas A. Bellinger

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Nicholas A. Bellinger'
#130: 
Signed-off-by: Nicholas A. Bellinger

WARNING:BAD_SIGN_OFF: Duplicate signature
#130: 
Signed-off-by: Nicholas A. Bellinger

WARNING:DEPRECATED_VARIABLE: Use of EXTRA_CFLAGS is deprecated, please use `ccflags-y instead.
#161: FILE: drivers/lio-core/Makefile:113:
+EXTRA_CFLAGS			+=	-DCONFIGFS_SYSFS_SYMLINKS

EXTRA_{A,C,CPP,LD}FLAGS are deprecated and should be replaced by the new
flags added via commit f77bf01425b1 ("kbuild: introduce ccflags-y,
asflags-y and ldflags-y").

The following conversion scheme maybe used::

  EXTRA_AFLAGS    ->  asflags-y
  EXTRA_CFLAGS    ->  ccflags-y
  EXTRA_CPPFLAGS  ->  cppflags-y
  EXTRA_LDFLAGS   ->  ldflags-y

See:

  1. https://lore.kernel.org/lkml/20070930191054.GA15876@uranus.ravnborg.org/
  2. https://lore.kernel.org/lkml/1313384834-24433-12-git-send-email-lacombar@gmail.com/
  3. https://www.kernel.org/doc/html/latest/kbuild/makefiles.html#compilation-flags

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'se_dev->se_dev_ptr'
#174: FILE: drivers/lio-core/target_core_configfs.c:589:
+	if ((se_dev->se_dev_ptr)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#175: FILE: drivers/lio-core/target_core_configfs.c:590:
+		printk(KERN_ERR "se_dev->se_dev_ptr already set for storage object\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#177: FILE: drivers/lio-core/target_core_configfs.c:592:
+^I}^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#187: FILE: drivers/lio-core/target_core_configfs.c:655:
+static int target_core_dev_link_kobject (struct config_item *item,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#190: FILE: drivers/lio-core/target_core_configfs.c:658:
+	se_subsystem_dev_t *se_dev = container_of(

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#196: FILE: drivers/lio-core/target_core_configfs.c:664:
+	if (!(hba = core_get_hba_from_id(hba_p->hba_id, 0)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'se_dev->se_dev_ptr'
#199: FILE: drivers/lio-core/target_core_configfs.c:667:
+	if ((se_dev->se_dev_ptr)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#200: FILE: drivers/lio-core/target_core_configfs.c:668:
+		printk(KERN_ERR "se_dev->se_dev_ptr already set for this storage object\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#204: FILE: drivers/lio-core/target_core_configfs.c:672:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret != 0'
#206: FILE: drivers/lio-core/target_core_configfs.c:674:
+	if (!t || (ret != 0))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: drivers/lio-core/target_core_configfs.c:677:
+^Iif (!(t->kobject_link)) {^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#210: FILE: drivers/lio-core/target_core_configfs.c:678:
+		printk(KERN_ERR "Missing se_subsystem_api_t->kobject_link()\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#215: FILE: drivers/lio-core/target_core_configfs.c:683:
+	if (!(se_dev->se_dev_ptr = t->kobject_link(se_dev, item, kobj))) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#220: FILE: drivers/lio-core/target_core_configfs.c:688:
+	printk("Target_Core_ConfigFS: Linking %s -> %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#221: FILE: drivers/lio-core/target_core_configfs.c:689:
+	printk("Target_Core_ConfigFS: Linking %s -> %s\n",
+		config_item_name(item), kobject_name(kobj));

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#224: FILE: drivers/lio-core/target_core_configfs.c:692:
+	return(0);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#227: FILE: drivers/lio-core/target_core_configfs.c:695:
+	return(ret);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#230: FILE: drivers/lio-core/target_core_configfs.c:698:
+static int target_core_dev_unlink_kobject (struct config_item *item,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#233: FILE: drivers/lio-core/target_core_configfs.c:701:
+	se_subsystem_dev_t *se_dev = container_of(

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#238: FILE: drivers/lio-core/target_core_configfs.c:706:
+	if (!(hba = core_get_hba_from_id(hba_p->hba_id, 0)))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#242: FILE: drivers/lio-core/target_core_configfs.c:710:
+		printk(KERN_ERR "Unable to locate se_subsystem_dev_t>se_dev_su_ptr\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#247: FILE: drivers/lio-core/target_core_configfs.c:715:
+	printk("Target_Core_ConfigFS: Calling se_free_virtual_device() for"

WARNING:SPLIT_STRING: quoted string split across lines
#248: FILE: drivers/lio-core/target_core_configfs.c:716:
+	printk("Target_Core_ConfigFS: Calling se_free_virtual_device() for"
+			" se_dev_ptr: %p\n", se_dev->se_dev_ptr);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#250: FILE: drivers/lio-core/target_core_configfs.c:718:
+	if ((ret = se_free_virtual_device(se_dev->se_dev_ptr, hba)) < 0)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#258: FILE: drivers/lio-core/target_core_configfs.c:726:
+	printk("Target_Core_ConfigFS: Unlinking %s from %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#259: FILE: drivers/lio-core/target_core_configfs.c:727:
+	printk("Target_Core_ConfigFS: Unlinking %s from %s\n",
+		config_item_name(item), kobject_name(kobj));

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#262: FILE: drivers/lio-core/target_core_configfs.c:730:
+	return(0);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#265: FILE: drivers/lio-core/target_core_configfs.c:733:
+	return(ret);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#298: FILE: drivers/lio-core/target_core_iblock.c:639:
+extern se_device_t *iblock_kobject_link (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#298: FILE: drivers/lio-core/target_core_iblock.c:639:
+extern se_device_t *iblock_kobject_link (

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#298: FILE: drivers/lio-core/target_core_iblock.c:639:
+extern se_device_t *iblock_kobject_link (

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#308: FILE: drivers/lio-core/target_core_iblock.c:649:
+^Iibd->ibd_major = gd->major;^I$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#313: FILE: drivers/lio-core/target_core_iblock.c:654:
+	return(iblock_create_virtdevice(se_hba, (void *)ibd));

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#327: FILE: drivers/lio-core/target_core_iblock.h:69:
+extern se_device_t *iblock_kobject_link (se_subsystem_dev_t *, struct config_item *, struct kobject *);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#327: FILE: drivers/lio-core/target_core_iblock.h:69:
+extern se_device_t *iblock_kobject_link (se_subsystem_dev_t *, struct config_item *, struct kobject *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#327: FILE: drivers/lio-core/target_core_iblock.h:69:
+extern se_device_t *iblock_kobject_link (se_subsystem_dev_t *, struct config_item *, struct kobject *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_subsystem_dev_t *' should also have an identifier name
#327: FILE: drivers/lio-core/target_core_iblock.h:69:
+extern se_device_t *iblock_kobject_link (se_subsystem_dev_t *, struct config_item *, struct kobject *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct config_item *' should also have an identifier name
#327: FILE: drivers/lio-core/target_core_iblock.h:69:
+extern se_device_t *iblock_kobject_link (se_subsystem_dev_t *, struct config_item *, struct kobject *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kobject *' should also have an identifier name
#327: FILE: drivers/lio-core/target_core_iblock.h:69:
+extern se_device_t *iblock_kobject_link (se_subsystem_dev_t *, struct config_item *, struct kobject *);

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#335: FILE: drivers/lio-core/target_core_iblock.h:164:
+	kobject_link:		iblock_kobject_link,		\
 	            ^

WARNING:INDENTED_LABEL: labels should not be indented
#335: FILE: drivers/lio-core/target_core_iblock.h:164:
+	kobject_link:		iblock_kobject_link,		\

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#360: FILE: drivers/lio-core/target_core_pscsi.c:1014:
+extern se_device_t *pscsi_kobject_link (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#360: FILE: drivers/lio-core/target_core_pscsi.c:1014:
+extern se_device_t *pscsi_kobject_link (

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#360: FILE: drivers/lio-core/target_core_pscsi.c:1014:
+extern se_device_t *pscsi_kobject_link (

CHECK:SPACING: No space is necessary after a cast
#365: FILE: drivers/lio-core/target_core_pscsi.c:1019:
+	pscsi_dev_virt_t *pdv = (pscsi_dev_virt_t *) se_dev->se_dev_su_ptr;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#370: FILE: drivers/lio-core/target_core_pscsi.c:1024:
+^Ipdv->pdv_channel_id = sd->channel;^I$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#377: FILE: drivers/lio-core/target_core_pscsi.c:1031:
+	return(pscsi_create_virtdevice(se_hba, (void *)pdv));

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#391: FILE: drivers/lio-core/target_core_pscsi.h:78:
+extern se_device_t *pscsi_kobject_link (se_subsystem_dev_t *, struct config_item *, struct kobject *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#391: FILE: drivers/lio-core/target_core_pscsi.h:78:
+extern se_device_t *pscsi_kobject_link (se_subsystem_dev_t *, struct config_item *, struct kobject *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#391: FILE: drivers/lio-core/target_core_pscsi.h:78:
+extern se_device_t *pscsi_kobject_link (se_subsystem_dev_t *, struct config_item *, struct kobject *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_subsystem_dev_t *' should also have an identifier name
#391: FILE: drivers/lio-core/target_core_pscsi.h:78:
+extern se_device_t *pscsi_kobject_link (se_subsystem_dev_t *, struct config_item *, struct kobject *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct config_item *' should also have an identifier name
#391: FILE: drivers/lio-core/target_core_pscsi.h:78:
+extern se_device_t *pscsi_kobject_link (se_subsystem_dev_t *, struct config_item *, struct kobject *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kobject *' should also have an identifier name
#391: FILE: drivers/lio-core/target_core_pscsi.h:78:
+extern se_device_t *pscsi_kobject_link (se_subsystem_dev_t *, struct config_item *, struct kobject *);

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#399: FILE: drivers/lio-core/target_core_pscsi.h:170:
+	kobject_link:		pscsi_kobject_link,		\
 	            ^

WARNING:INDENTED_LABEL: labels should not be indented
#399: FILE: drivers/lio-core/target_core_pscsi.h:170:
+	kobject_link:		pscsi_kobject_link,		\

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_subsystem_dev_t *' should also have an identifier name
#413: FILE: drivers/lio-core/target_core_transport.h:432:
+	se_device_t *(*kobject_link)(se_subsystem_dev_t *, struct config_item *, struct kobject *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct config_item *' should also have an identifier name
#413: FILE: drivers/lio-core/target_core_transport.h:432:
+	se_device_t *(*kobject_link)(se_subsystem_dev_t *, struct config_item *, struct kobject *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kobject *' should also have an identifier name
#413: FILE: drivers/lio-core/target_core_transport.h:432:
+	se_device_t *(*kobject_link)(se_subsystem_dev_t *, struct config_item *, struct kobject *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000215917.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 19 errors, 32 warnings, 12 checks, 226 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000215917.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
