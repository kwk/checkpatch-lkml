WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#37: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#42: FILE: fs/aufs/super.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#56: FILE: fs/aufs/super.h:15:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#57: FILE: fs/aufs/super.h:16:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#63: FILE: fs/aufs/super.h:22:
+ * $Id: super.h,v 1.4 2008/05/04 23:52:41 sfjro Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:TYPO_SPELLING: 'unnecesary' may be misspelled - perhaps 'unnecessary'?
#109: FILE: fs/aufs/super.h:68:
+ * if it is false, refreshing dirs at access time is unnecesary
                                                      ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:CAMELCASE: Avoid CamelCase: <AuSi_FAILED_REFRESH_DIRS>
#111: FILE: fs/aufs/super.h:70:
+#define AuSi_FAILED_REFRESH_DIRS	1

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <AuSi_FAILED_INIT>
#112: FILE: fs/aufs/super.h:71:
+#define AuSi_FAILED_INIT		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#112: FILE: fs/aufs/super.h:71:
+#define AuSi_FAILED_INIT		(1 << 1)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:CAMELCASE: Avoid CamelCase: <AuSi_##name>
#113: FILE: fs/aufs/super.h:72:
+#define au_ftest_si(sbinfo, name)	((sbinfo)->au_si_status & AuSi_##name)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#179: FILE: fs/aufs/super.h:138:
+	/* pseudo_link list */ // dirty
+	spinlock_t		si_plink_lock;

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'particulary' may be misspelled - perhaps 'particularly'?
#189: FILE: fs/aufs/super.h:148:
+	 * of sysfs is disabled, particulary when many aufs-es are mounted.
 	                         ^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#199: FILE: fs/aufs/super.h:158:
+	/* locked vma list for mmap() */ // dirty
+	spinlock_t		si_lvma_lock;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#210: FILE: fs/aufs/super.h:169:
+#define AuWbrCopyup(sbinfo, args... ) \

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <AuWbrCopyup>
#210: FILE: fs/aufs/super.h:169:
+#define AuWbrCopyup(sbinfo, args... ) \

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#210: FILE: fs/aufs/super.h:169:
+#define AuWbrCopyup(sbinfo, args... ) \
+	(sbinfo)->si_wbr_copyup_ops->copyup(args)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#212: FILE: fs/aufs/super.h:171:
+#define AuWbrCreate(sbinfo, args... ) \

CHECK:CAMELCASE: Avoid CamelCase: <AuWbrCreate>
#212: FILE: fs/aufs/super.h:171:
+#define AuWbrCreate(sbinfo, args... ) \

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#212: FILE: fs/aufs/super.h:171:
+#define AuWbrCreate(sbinfo, args... ) \
+	(sbinfo)->si_wbr_create_ops->create(args)

CHECK:CAMELCASE: Avoid CamelCase: <AuLock_DW>
#216: FILE: fs/aufs/super.h:175:
+#define AuLock_DW		1		/* write-lock dentry */

CHECK:CAMELCASE: Avoid CamelCase: <AuLock_IR>
#217: FILE: fs/aufs/super.h:176:
+#define AuLock_IR		(1 << 1)	/* read-lock inode */

CHECK:BIT_MACRO: Prefer using the BIT macro
#217: FILE: fs/aufs/super.h:176:
+#define AuLock_IR		(1 << 1)	/* read-lock inode */

CHECK:CAMELCASE: Avoid CamelCase: <AuLock_IW>
#218: FILE: fs/aufs/super.h:177:
+#define AuLock_IW		(1 << 2)	/* write-lock inode */

CHECK:BIT_MACRO: Prefer using the BIT macro
#218: FILE: fs/aufs/super.h:177:
+#define AuLock_IW		(1 << 2)	/* write-lock inode */

CHECK:CAMELCASE: Avoid CamelCase: <AuLock_FLUSH>
#219: FILE: fs/aufs/super.h:178:
+#define AuLock_FLUSH		(1 << 3)	/* wait for 'nowait' tasks */

CHECK:BIT_MACRO: Prefer using the BIT macro
#219: FILE: fs/aufs/super.h:178:
+#define AuLock_FLUSH		(1 << 3)	/* wait for 'nowait' tasks */

CHECK:CAMELCASE: Avoid CamelCase: <AuLock_DIR>
#220: FILE: fs/aufs/super.h:179:
+#define AuLock_DIR		(1 << 4)	/* target is a dir */

CHECK:BIT_MACRO: Prefer using the BIT macro
#220: FILE: fs/aufs/super.h:179:
+#define AuLock_DIR		(1 << 4)	/* target is a dir */

CHECK:CAMELCASE: Avoid CamelCase: <AuLock_##name>
#221: FILE: fs/aufs/super.h:180:
+#define au_ftest_lock(flags, name)	((flags) & AuLock_##name)

WARNING:LINE_SPACING: Missing a blank line after declarations
#374: FILE: fs/aufs/super.h:333:
+	int err = 0;
+	if (unlikely(au_test_aufs(h_sb))) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <AuTraceErr>
#376: FILE: fs/aufs/super.h:335:
+		AuTraceErr(err);

CHECK:CAMELCASE: Avoid CamelCase: <AuSimpleLockRwsemFuncs>
#394: FILE: fs/aufs/super.h:353:
+AuSimpleLockRwsemFuncs(si_noflush, struct super_block *sb,

CHECK:CAMELCASE: Avoid CamelCase: <AuSimpleUnlockRwsemFuncs>
#396: FILE: fs/aufs/super.h:355:
+AuSimpleUnlockRwsemFuncs(si, struct super_block *sb, au_sbi(sb)->si_rwsem);

CHECK:CAMELCASE: Avoid CamelCase: <SiMustReadLock>
#426: FILE: fs/aufs/super.h:385:
+#define SiMustReadLock(sb)	AuRwMustReadLock(&au_sbi(sb)->si_rwsem)

CHECK:CAMELCASE: Avoid CamelCase: <AuRwMustReadLock>
#426: FILE: fs/aufs/super.h:385:
+#define SiMustReadLock(sb)	AuRwMustReadLock(&au_sbi(sb)->si_rwsem)

CHECK:CAMELCASE: Avoid CamelCase: <SiMustWriteLock>
#427: FILE: fs/aufs/super.h:386:
+#define SiMustWriteLock(sb)	AuRwMustWriteLock(&au_sbi(sb)->si_rwsem)

CHECK:CAMELCASE: Avoid CamelCase: <AuRwMustWriteLock>
#427: FILE: fs/aufs/super.h:386:
+#define SiMustWriteLock(sb)	AuRwMustWriteLock(&au_sbi(sb)->si_rwsem)

CHECK:CAMELCASE: Avoid CamelCase: <SiMustAnyLock>
#428: FILE: fs/aufs/super.h:387:
+#define SiMustAnyLock(sb)	AuRwMustAnyLock(&au_sbi(sb)->si_rwsem)

CHECK:CAMELCASE: Avoid CamelCase: <AuRwMustAnyLock>
#428: FILE: fs/aufs/super.h:387:
+#define SiMustAnyLock(sb)	AuRwMustAnyLock(&au_sbi(sb)->si_rwsem)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000279909.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 8 warnings, 25 checks, 410 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000279909.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
