WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#38: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#43: FILE: net/9p/srv/socksrv.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#44: FILE: net/9p/srv/socksrv.c:2:
+ * net/9p/srv/socksrv.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#62: FILE: net/9p/srv/socksrv.c:20:
+ *  51 Franklin Street, Fifth Floor$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ss)...) over kmalloc(sizeof(struct p9srv_socksrv)...)
#104: FILE: net/9p/srv/socksrv.c:62:
+	ss = kmalloc(sizeof(struct p9srv_socksrv), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: No space is necessary after a cast
#120: FILE: net/9p/srv/socksrv.c:78:
+	err = ss->sock->ops->bind(ss->sock, (struct sockaddr *) &ss->saddr,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#127: FILE: net/9p/srv/socksrv.c:85:
+	err = kernel_setsockopt(ss->sock, SOL_SOCKET, SO_REUSEADDR, (char *) &n,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#128: FILE: net/9p/srv/socksrv.c:86:
+	err = kernel_setsockopt(ss->sock, SOL_SOCKET, SO_REUSEADDR, (char *) &n,
+		sizeof(n));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#149: FILE: net/9p/srv/socksrv.c:107:
+	P9_DPRINTK(P9SRV_DEBUG_SRV, "server %p on port %d created\n",
+		srv, port);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#247: FILE: net/9p/srv/socksrv.c:205:
+		P9_EPRINTK(KERN_ERR,
+			"p9srv_socksrv_accept: fd transport not registered\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'p9srv_socksrv_accept', this function's name, in a string
#247: FILE: net/9p/srv/socksrv.c:205:
+			"p9srv_socksrv_accept: fd transport not registered\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#254: FILE: net/9p/srv/socksrv.c:212:
+		P9_EPRINTK(KERN_ERR,
+			"p9srv_socksrv_accept: cannot create socket %d\n", err);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'p9srv_socksrv_accept', this function's name, in a string
#254: FILE: net/9p/srv/socksrv.c:212:
+			"p9srv_socksrv_accept: cannot create socket %d\n", err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#263: FILE: net/9p/srv/socksrv.c:221:
+		P9_EPRINTK(KERN_ERR,
+			"p9srv_socksrv_accept: cannot accept %d\n", err);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'p9srv_socksrv_accept', this function's name, in a string
#263: FILE: net/9p/srv/socksrv.c:221:
+			"p9srv_socksrv_accept: cannot accept %d\n", err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: net/9p/srv/socksrv.c:232:
+		P9_EPRINTK(KERN_ERR,
+			"p9srv_socksrv_accept: cannot map fd %d\n", fd);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'p9srv_socksrv_accept', this function's name, in a string
#274: FILE: net/9p/srv/socksrv.c:232:
+			"p9srv_socksrv_accept: cannot map fd %d\n", fd);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#282: FILE: net/9p/srv/socksrv.c:240:
+		P9_EPRINTK(KERN_ERR,
+			"p9srv_socksrv_accept: cannot create trans %ld\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'p9srv_socksrv_accept', this function's name, in a string
#282: FILE: net/9p/srv/socksrv.c:240:
+			"p9srv_socksrv_accept: cannot create trans %ld\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#290: FILE: net/9p/srv/socksrv.c:248:
+		P9_EPRINTK(KERN_ERR,
+			"p9srv_socksrv_accept: cannot create conn %ld\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'p9srv_socksrv_accept', this function's name, in a string
#290: FILE: net/9p/srv/socksrv.c:248:
+			"p9srv_socksrv_accept: cannot create conn %ld\n",

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000374807.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 9 warnings, 11 checks, 252 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000374807.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
