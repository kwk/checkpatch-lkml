WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#54: FILE: arch/x86/mm/highmem_32.c:42:
+EXPORT_SYMBOL(kmap);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#55: FILE: arch/x86/mm/highmem_32.c:43:
+EXPORT_SYMBOL(kunmap);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#56: FILE: arch/x86/mm/highmem_32.c:44:
+EXPORT_SYMBOL(kunmap_virt);

CHECK:BRACES: braces {} should be used on all arms of this statement
#87: FILE: arch/x86/mm/highmem_32.c:173:
+	if (!PageHighMem(page))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#89: FILE: arch/x86/mm/highmem_32.c:175:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: arch/x86/mm/highmem_32.c:197:
+       $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: arch/x86/mm/highmem_32.c:197:
+       $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#114: FILE: arch/x86/mm/highmem_32.c:200:
+	if (vaddr == __fix_to_virt(FIX_KMAP_BEGIN+idx)) {
 	                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#120: FILE: arch/x86/mm/highmem_32.c:206:
+		BUG_ON(vaddr < PAGE_OFFSET);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#121: FILE: arch/x86/mm/highmem_32.c:207:
+		BUG_ON(vaddr >= (unsigned long)high_memory);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#138: FILE: arch/x86/mm/highmem_32.c:224:
+	idx = type + KM_TYPE_NR*smp_processor_id();
 	                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#145: FILE: arch/x86/mm/highmem_32.c:231:
+	set_pte(kmap_pte-idx, pte);
 	                ^

CHECK:SPACING: No space is necessary after a cast
#149: FILE: arch/x86/mm/highmem_32.c:235:
+	return (void*) vaddr;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#149: FILE: arch/x86/mm/highmem_32.c:235:
+	return (void*) vaddr;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#260: FILE: kernel/sched.c:2628:
+extern void arch_kmap_atomic_restore(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000206837.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 7 warnings, 6 checks, 214 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000206837.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
