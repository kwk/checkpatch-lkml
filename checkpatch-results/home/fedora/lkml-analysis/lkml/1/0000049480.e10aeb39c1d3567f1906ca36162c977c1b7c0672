WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#93: FILE: kernel/vbus/devices/venet/Kconfig:23:
+config VBUS_VENETMACV
+       tristate "Virtual-Bus Ethernet MACVLAN Device"
+       depends on VBUS_DEVICES && MACVLAN
+       select VBUS_VENETDEV
+       default n
+       help
+        Provides a vbus based virtual ethernet adapter with a macvlan
+        device as its backend.
+
+	If unsure, say N
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#157: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#162: FILE: kernel/vbus/devices/venet/macvlan.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#180: FILE: kernel/vbus/devices/venet/macvlan.c:19:
+ * along with this program; if not, write to the Free Software Foundation,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#181: FILE: kernel/vbus/devices/venet/macvlan.c:20:
+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#219: FILE: kernel/vbus/devices/venet/macvlan.c:58:
+#  define PDEBUG(fmt, args...) printk(KERN_DEBUG "venet-tap: " fmt, ## args)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'venetmacv_receive', this function's name, in a string
#268: FILE: kernel/vbus/devices/venet/macvlan.c:107:
+		PDEBUG("venetmacv_receive: queue congested - dropping..\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#274: FILE: kernel/vbus/devices/venet/macvlan.c:113:
+		printk(KERN_WARNING "venetmacv_receive: linearize failure\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'venetmacv_receive', this function's name, in a string
#274: FILE: kernel/vbus/devices/venet/macvlan.c:113:
+		printk(KERN_WARNING "venetmacv_receive: linearize failure\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#286: FILE: kernel/vbus/devices/venet/macvlan.c:125:
+	struct venetmacv *macv = conn_to_macv(conn);
+	macvlan_unlink_lowerdev(macv->mdev.dev);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#301: FILE: kernel/vbus/devices/venet/macvlan.c:140:
+			printk(KERN_ERR "macvlanopen failed %d!\n", ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#316: FILE: kernel/vbus/devices/venet/macvlan.c:155:
+			printk(KERN_ERR "macvlan close failed %d!\n", ret);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#322: FILE: kernel/vbus/devices/venet/macvlan.c:161:
+venetmacv_vlink_call(struct vbus_connection *conn,
+					 unsigned long func,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#359: FILE: kernel/vbus/devices/venet/macvlan.c:198:
+venetmacv_intf_connect(struct vbus_device_interface *intf,
+					   struct vbus_memctx *ctx,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#397: FILE: kernel/vbus/devices/venet/macvlan.c:236:
+		printk(KERN_ERR "macvlan_link_lowerdev: failed\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#491: FILE: kernel/vbus/devices/venet/macvlan.c:330:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#501: FILE: kernel/vbus/devices/venet/macvlan.c:340:
+ll_ifname_store(struct vbus_device *dev, struct vbus_device_attribute *attr,
+				const char *buf, size_t count)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#514: FILE: kernel/vbus/devices/venet/macvlan.c:353:
+	strncpy(priv->ll_ifname, buf, count-1);
 	                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#522: FILE: kernel/vbus/devices/venet/macvlan.c:361:
+	priv->mdev.lowerdev = dev_get_by_name(dev_net(priv->mdev.dev),
+						priv->ll_ifname);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#532: FILE: kernel/vbus/devices/venet/macvlan.c:371:
+ll_ifname_show(struct vbus_device *dev, struct vbus_device_attribute *attr,
+			   char *buf)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#540: FILE: kernel/vbus/devices/venet/macvlan.c:379:
+__ATTR(ll_ifname, S_IRUGO | S_IWUSR, ll_ifname_show, ll_ifname_store);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#558: FILE: kernel/vbus/devices/venet/macvlan.c:397:
+	__ATTR(client_mac, S_IRUGO | S_IWUSR, client_mac_show, clientmac_store);

WARNING:LINE_SPACING: Missing a blank line after declarations
#620: FILE: kernel/vbus/devices/venet/macvlan.c:459:
+	struct venetmacv *macv = venetdev_to_macv(vdev);
+	skb->dev = macv->mdev.lowerdev;

WARNING:LINE_SPACING: Missing a blank line after declarations
#638: FILE: kernel/vbus/devices/venet/macvlan.c:477:
+	struct venetmacv *priv = netdev_priv(dev);
+	return venetdev_get_stats(&priv->dev);

WARNING:CONST_STRUCT: struct net_device_ops should normally be const
#675: FILE: kernel/vbus/devices/venet/macvlan.c:514:
+static struct net_device_ops venetmacv_netdev_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#689: FILE: kernel/vbus/devices/venet/macvlan.c:528:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#696: FILE: kernel/vbus/devices/venet/macvlan.c:535:
+venetmacv_device_create(struct vbus_devclass *dc,
+						struct vbus_device **vdev)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#703: FILE: kernel/vbus/devices/venet/macvlan.c:542:
+	dev = alloc_netdev(sizeof(struct venetmacv), "macvenet%d",
+					   macvlan_setup);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#769: FILE: kernel/vbus/devices/venet/venetdevice.h:177:
+ssize_t cmac_store(struct vbus_device *dev,
+		struct vbus_device_attribute *attr,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#774: FILE: kernel/vbus/devices/venet/venetdevice.h:182:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000049480.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 16 warnings, 12 checks, 688 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000049480.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
