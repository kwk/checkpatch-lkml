WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#37: FILE: Makefile:4:
+EXTRAVERSION = .5
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: braces {} should be used on all arms of this statement
#188: FILE: arch/x86/mm/pageattr.c:593:
+	if (cpa->flags & CPA_PAGES_ARRAY) {
[...]
+	} else if (cpa->flags & CPA_ARRAY)
[...]
 	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#190: FILE: arch/x86/mm/pageattr.c:595:
+		struct page *page = cpa->pages[cpa->curpage];
+		if (unlikely(PageHighMem(page)))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#204: FILE: arch/x86/mm/pageattr.c:701:
+	if (cpa->flags & CPA_PAGES_ARRAY) {
[...]
+	} else if (cpa->flags & CPA_ARRAY)
[...]
 	else
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#206: FILE: arch/x86/mm/pageattr.c:703:
+		struct page *page = cpa->pages[cpa->curpage];
+		if (unlikely(PageHighMem(page)))

CHECK:CAMELCASE: Avoid CamelCase: <saveCURACNTR>
#386: FILE: drivers/gpu/drm/i915/i915_drv.h:288:
+	u32 saveCURACNTR;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <saveCURAPOS>
#387: FILE: drivers/gpu/drm/i915/i915_drv.h:289:
+	u32 saveCURAPOS;

CHECK:CAMELCASE: Avoid CamelCase: <saveCURABASE>
#388: FILE: drivers/gpu/drm/i915/i915_drv.h:290:
+	u32 saveCURABASE;

CHECK:CAMELCASE: Avoid CamelCase: <saveCURBCNTR>
#389: FILE: drivers/gpu/drm/i915/i915_drv.h:291:
+	u32 saveCURBCNTR;

CHECK:CAMELCASE: Avoid CamelCase: <saveCURBPOS>
#390: FILE: drivers/gpu/drm/i915/i915_drv.h:292:
+	u32 saveCURBPOS;

CHECK:CAMELCASE: Avoid CamelCase: <saveCURBBASE>
#391: FILE: drivers/gpu/drm/i915/i915_drv.h:293:
+	u32 saveCURBBASE;

CHECK:CAMELCASE: Avoid CamelCase: <saveCURSIZE>
#392: FILE: drivers/gpu/drm/i915/i915_drv.h:294:
+	u32 saveCURSIZE;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#400: FILE: drivers/gpu/drm/i915/i915_drv.h:652:
+void i915_gem_release(struct drm_device * dev, struct drm_file *file_priv);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#539: FILE: drivers/gpu/drm/i915/intel_fb.c:864:
+}
+static DECLARE_WORK(intelfb_restore_work, intelfb_restore_work_fn);

ERROR:CODE_INDENT: code indent should use tabs where possible
#544: FILE: drivers/gpu/drm/i915/intel_fb.c:868:
+        schedule_work(&intelfb_restore_work);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#544: FILE: drivers/gpu/drm/i915/intel_fb.c:868:
+        schedule_work(&intelfb_restore_work);$

WARNING:SPLIT_STRING: quoted string split across lines
#621: FILE: drivers/hwmon/smsc47m1.c:457:
+			pr_debug(DRVNAME ": "
+				 "Found SMSC LPC47M233, unsupported\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:BRACES: braces {} should be used on all arms of this statement
#649: FILE: drivers/i2c/chips/tsl2550.c:193:
+		if (c0) {
[...]
+		} else
[...]
 	else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#654: FILE: drivers/i2c/chips/tsl2550.c:198:
+		} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hwif"
#744: FILE: drivers/ide/ide-probe.c:839:
+		if (hwif == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#829: FILE: drivers/md/md.c:1417:
+		bmask = queue_hardsect_size(rdev->bdev->bd_disk->queue)-1;
 		                                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <In_sync>
#852: FILE: drivers/md/md.c:2773:
+			clear_bit(In_sync, &rdev->flags);

CHECK:SPACING: No space is necessary after a cast
#985: FILE: drivers/net/benet/be.h:76:
+#define BE_MAX_FRAGS_PER_FRAME  (min((u32) 16, (u32) MAX_SKB_FRAGS))

WARNING:MINMAX: min() should probably be min_t(u32, 16, MAX_SKB_FRAGS)
#985: FILE: drivers/net/benet/be.h:76:
+#define BE_MAX_FRAGS_PER_FRAME  (min((u32) 16, (u32) MAX_SKB_FRAGS))


WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1052: FILE: drivers/net/benet/be_main.c:754:
+	BUG_ON(j > MAX_SKB_FRAGS);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1096: FILE: drivers/net/benet/be_main.c:846:
+	BUG_ON(j > MAX_SKB_FRAGS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1141: FILE: drivers/net/usb/cdc_subset.c:313:
+	USB_DEVICE (0x0525, 0xa4a2),

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1275: FILE: drivers/scsi/libsas/sas_port.c:81:
+			if (*(u64 *)port->sas_addr == 0
+				&& port->num_phys == 0) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1277: FILE: drivers/scsi/libsas/sas_port.c:83:
+				memcpy(port->sas_addr, phy->sas_addr,
+					SAS_ADDR_SIZE);

CHECK:CAMELCASE: Avoid CamelCase: <pObj>
#1295: FILE: drivers/staging/rt2870/2870_main_dev.c:268:
+	pObj->MLMEThr_pid = THREAD_PID_INIT_VALUE;

CHECK:CAMELCASE: Avoid CamelCase: <MLMEThr_pid>
#1295: FILE: drivers/staging/rt2870/2870_main_dev.c:268:
+	pObj->MLMEThr_pid = THREAD_PID_INIT_VALUE;

CHECK:CAMELCASE: Avoid CamelCase: <RTUSBCmdThr_pid>
#1304: FILE: drivers/staging/rt2870/2870_main_dev.c:376:
+	pObj->RTUSBCmdThr_pid = THREAD_PID_INIT_VALUE;

CHECK:CAMELCASE: Avoid CamelCase: <TimerQThr_pid>
#1313: FILE: drivers/staging/rt2870/2870_main_dev.c:470:
+	pObj->TimerQThr_pid = THREAD_PID_INIT_VALUE;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1329: FILE: drivers/staging/rt2870/2870_main_dev.c:951:
+		printk("Terminate the TimerQThr_pid=%d!\n", GET_PID_NUMBER(pObj->TimerQThr_pid));

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1336: FILE: drivers/staging/rt2870/2870_main_dev.c:956:
+		if (ret)
+		{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1338: FILE: drivers/staging/rt2870/2870_main_dev.c:958:
+			printk(KERN_WARNING "%s: unable to stop TimerQThread, pid=%d, ret=%d!\n",

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1339: FILE: drivers/staging/rt2870/2870_main_dev.c:959:
+					pAd->net_dev->name, GET_PID_NUMBER(pObj->TimerQThr_pid), ret);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1339: FILE: drivers/staging/rt2870/2870_main_dev.c:959:
+			printk(KERN_WARNING "%s: unable to stop TimerQThread, pid=%d, ret=%d!\n",
+					pAd->net_dev->name, GET_PID_NUMBER(pObj->TimerQThr_pid), ret);

CHECK:CAMELCASE: Avoid CamelCase: <pAd>
#1339: FILE: drivers/staging/rt2870/2870_main_dev.c:959:
+					pAd->net_dev->name, GET_PID_NUMBER(pObj->TimerQThr_pid), ret);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1341: FILE: drivers/staging/rt2870/2870_main_dev.c:961:
+		else
+		{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1341: FILE: drivers/staging/rt2870/2870_main_dev.c:961:
+		}
+		else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <TimerQComplete>
#1343: FILE: drivers/staging/rt2870/2870_main_dev.c:963:
+			wait_for_completion(&pAd->TimerQComplete);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1354: FILE: drivers/staging/rt2870/2870_main_dev.c:970:
+		printk("Terminate the MLMEThr_pid=%d!\n", GET_PID_NUMBER(pObj->MLMEThr_pid));

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1362: FILE: drivers/staging/rt2870/2870_main_dev.c:976:
+		if (ret)
+		{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1364: FILE: drivers/staging/rt2870/2870_main_dev.c:978:
+			printk (KERN_WARNING "%s: unable to Mlme thread, pid=%d, ret=%d!\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1364: FILE: drivers/staging/rt2870/2870_main_dev.c:978:
+			printk (KERN_WARNING "%s: unable to Mlme thread, pid=%d, ret=%d!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1365: FILE: drivers/staging/rt2870/2870_main_dev.c:979:
+			printk (KERN_WARNING "%s: unable to Mlme thread, pid=%d, ret=%d!\n",
+					pAd->net_dev->name, GET_PID_NUMBER(pObj->MLMEThr_pid), ret);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1367: FILE: drivers/staging/rt2870/2870_main_dev.c:981:
+		else
+		{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1367: FILE: drivers/staging/rt2870/2870_main_dev.c:981:
+		}
+		else

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1370: FILE: drivers/staging/rt2870/2870_main_dev.c:984:
+			wait_for_completion (&pAd->mlmeComplete);

CHECK:CAMELCASE: Avoid CamelCase: <mlmeComplete>
#1370: FILE: drivers/staging/rt2870/2870_main_dev.c:984:
+			wait_for_completion (&pAd->mlmeComplete);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1381: FILE: drivers/staging/rt2870/2870_main_dev.c:991:
+		printk("Terminate the RTUSBCmdThr_pid=%d!\n", GET_PID_NUMBER(pObj->RTUSBCmdThr_pid));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1381: FILE: drivers/staging/rt2870/2870_main_dev.c:991:
+		printk("Terminate the RTUSBCmdThr_pid=%d!\n", GET_PID_NUMBER(pObj->RTUSBCmdThr_pid));

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1391: FILE: drivers/staging/rt2870/2870_main_dev.c:999:
+		if (ret)
+		{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1393: FILE: drivers/staging/rt2870/2870_main_dev.c:1001:
+			printk(KERN_WARNING "%s: unable to RTUSBCmd thread, pid=%d, ret=%d!\n",

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1394: FILE: drivers/staging/rt2870/2870_main_dev.c:1002:
+					pAd->net_dev->name, GET_PID_NUMBER(pObj->RTUSBCmdThr_pid), ret);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1394: FILE: drivers/staging/rt2870/2870_main_dev.c:1002:
+			printk(KERN_WARNING "%s: unable to RTUSBCmd thread, pid=%d, ret=%d!\n",
+					pAd->net_dev->name, GET_PID_NUMBER(pObj->RTUSBCmdThr_pid), ret);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1396: FILE: drivers/staging/rt2870/2870_main_dev.c:1004:
+		else
+		{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1396: FILE: drivers/staging/rt2870/2870_main_dev.c:1004:
+		}
+		else

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1399: FILE: drivers/staging/rt2870/2870_main_dev.c:1007:
+			wait_for_completion (&pAd->CmdQComplete);

CHECK:CAMELCASE: Avoid CamelCase: <CmdQComplete>
#1399: FILE: drivers/staging/rt2870/2870_main_dev.c:1007:
+			wait_for_completion (&pAd->CmdQComplete);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1410: FILE: drivers/staging/rt2870/2870_main_dev.c:1070:
+			printk("rt2870: idVendor = 0x%x, idProduct = 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1411: FILE: drivers/staging/rt2870/2870_main_dev.c:1071:
+			printk("rt2870: idVendor = 0x%x, idProduct = 0x%x\n",
 					dev_p->descriptor.idVendor, dev_p->descriptor.idProduct);

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#1446: FILE: drivers/staging/rt2870/common/2870_rtmp_init.c:782:
+	pObj->MLMEThr_pid= THREAD_PID_INIT_VALUE;
 	                 ^

CHECK:CAMELCASE: Avoid CamelCase: <MlmeThread>
#1447: FILE: drivers/staging/rt2870/common/2870_rtmp_init.c:783:
+	pid_number = kernel_thread(MlmeThread, pAd, CLONE_VM);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1448: FILE: drivers/staging/rt2870/common/2870_rtmp_init.c:784:
+	if (pid_number < 0)
+	{

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#1464: FILE: drivers/staging/rt2870/common/2870_rtmp_init.c:794:
+	pObj->RTUSBCmdThr_pid= THREAD_PID_INIT_VALUE;
 	                     ^

CHECK:CAMELCASE: Avoid CamelCase: <RTUSBCmdThread>
#1465: FILE: drivers/staging/rt2870/common/2870_rtmp_init.c:795:
+	pid_number = kernel_thread(RTUSBCmdThread, pAd, CLONE_VM);

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#1479: FILE: drivers/staging/rt2870/common/2870_rtmp_init.c:804:
+	pObj->TimerQThr_pid= THREAD_PID_INIT_VALUE;
 	                   ^

CHECK:CAMELCASE: Avoid CamelCase: <TimerQThread>
#1480: FILE: drivers/staging/rt2870/common/2870_rtmp_init.c:805:
+	pid_number = kernel_thread(TimerQThread, pAd, CLONE_VM);

CHECK:CAMELCASE: Avoid CamelCase: <FillTxBlkErr>
#1500: FILE: drivers/staging/rt2870/common/cmm_data.c:713:
+FillTxBlkErr:

CHECK:CAMELCASE: Avoid CamelCase: <AtePid>
#1514: FILE: drivers/staging/rt2870/common/rtmp_init.c:3658:
+	pAd->ate.AtePid = THREAD_PID_INIT_VALUE;

CHECK:CAMELCASE: Avoid CamelCase: <pUsb_Dev>
#1587: FILE: drivers/staging/rt2870/rt_linux.h:191:
+	struct usb_device		*pUsb_Dev;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1681: FILE: drivers/usb/storage/transport.c:964:
+				 0, us->ifnum, us->iobuf, 1, 10*HZ);
 				                               ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1694: FILE: drivers/usb/storage/unusual_devs.h:842:
+UNUSUAL_DEV( 0x067b, 0x2317, 0x0001, 0x001,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1695: FILE: drivers/usb/storage/unusual_devs.h:843:
+UNUSUAL_DEV( 0x067b, 0x2317, 0x0001, 0x001,
+		"Prolific Technology, Inc.",

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1698: FILE: drivers/usb/storage/unusual_devs.h:846:
+		US_FL_NOT_LOCKABLE ),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2023: FILE: fs/proc/base.c:244:
+	if (mm && mm != current->mm &&
+			!ptrace_may_access(task, PTRACE_MODE_READ)) {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2143: FILE: include/linux/nfs_fs.h:508:
+extern void nfs_writedata_free(struct nfs_write_data *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfs_write_data *' should also have an identifier name
#2143: FILE: include/linux/nfs_fs.h:508:
+extern void nfs_writedata_free(struct nfs_write_data *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2159: FILE: include/linux/nfs_fs.h:524:
+extern void nfs_readdata_free(struct nfs_read_data *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfs_read_data *' should also have an identifier name
#2159: FILE: include/linux/nfs_fs.h:524:
+extern void nfs_readdata_free(struct nfs_read_data *);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#2219: FILE: include/net/sock.h:133:
+	volatile unsigned char	skc_state;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2278: FILE: kernel/fork.c:580:
+			sys_futex(tsk->clear_child_tid, FUTEX_WAKE,
+					1, NULL, NULL, 0);

CHECK:BRACES: braces {} should be used on all arms of this statement
#2516: FILE: net/core/dev.c:2789:
+			if (unlikely(napi_disable_pending(n))) {
[...]
+			} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2520: FILE: net/core/dev.c:2793:
+			} else

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2533: FILE: net/core/sock.c:919:
+/*
+ * Copy all fields from osk to nsk but nsk->sk_refcnt must not change yet,

WARNING:TYPO_SPELLING: 'temporarly' may be misspelled - perhaps 'temporarily'?
#2534: FILE: net/core/sock.c:920:
+ * even temporarly, because of RCU lookups. sk_node should also be left as is.
         ^^^^^^^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#2556: FILE: net/core/sock.c:944:
+	if (slab != NULL) {
[...]
 	else
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "slab"
#2556: FILE: net/core/sock.c:944:
+	if (slab != NULL) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2562: FILE: net/core/sock.c:950:
+			/*
+			 * caches using SLAB_DESTROY_BY_RCU should let

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2581: FILE: net/core/sock.c:1128:
+		/*
+		 * Before updating sk_refcnt, we must commit prior changes to memory

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2593: FILE: net/core/sock.c:1824:
+	/*
+	 * Before updating sk_refcnt, we must commit prior changes to memory

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000083813.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 17 errors, 31 warnings, 46 checks, 2137 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000083813.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
