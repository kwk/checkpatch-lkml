WARNING:LINE_SPACING: Missing a blank line after declarations
#86: FILE: arch/x86_64/kernel/mce.c:174:
+	int events = atomic_read(&mce_events);
+	if (events != atomic_read(&mce_logged) && trigger[0]) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#103: FILE: arch/x86_64/kernel/mce.c:256:
+		/* Normal interrupt context here. Call trigger for any new
+		   events. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#103: FILE: arch/x86_64/kernel/mce.c:256:
+		   events. */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#132: FILE: arch/x86_64/kernel/mce.c:645:
+static ssize_t set_trigger(struct sys_device *s,const char *buf,size_t siz)
                                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#132: FILE: arch/x86_64/kernel/mce.c:645:
+static ssize_t set_trigger(struct sys_device *s,const char *buf,size_t siz)
                                                                ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#136: FILE: arch/x86_64/kernel/mce.c:649:
+	int len;
+	strncpy(trigger, buf, sizeof(trigger));

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#137: FILE: arch/x86_64/kernel/mce.c:650:
+	trigger[sizeof(trigger)-1] = 0;
 	                       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#140: FILE: arch/x86_64/kernel/mce.c:653:
+	if (*p) *p = 0;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#193: FILE: arch/x86_64/kernel/mce_amd.c:224:
+			/* Log the machine check that caused the threshold
+			   event. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#193: FILE: arch/x86_64/kernel/mce_amd.c:224:
+			   event. */

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*sub_info)...) over kzalloc(sizeof(struct subprocess_info)...)
#260: FILE: kernel/kmod.c:286:
+	sub_info = kzalloc(sizeof(struct subprocess_info),  GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#291: FILE: include/asm-x86_64/mce.h:106:
+extern void do_machine_check(struct pt_regs *, long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#291: FILE: include/asm-x86_64/mce.h:106:
+extern void do_machine_check(struct pt_regs *, long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long' should also have an identifier name
#291: FILE: include/asm-x86_64/mce.h:106:
+extern void do_machine_check(struct pt_regs *, long);

WARNING:TYPO_SPELLING: 'hexademical' may be misspelled - perhaps 'hexadecimal'?
#339: FILE: Documentation/x86_64/machinecheck:39:
+	(Note output is hexademical). Default 5 minutes.
 	                ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000468588.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 9 warnings, 3 checks, 288 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000468588.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
