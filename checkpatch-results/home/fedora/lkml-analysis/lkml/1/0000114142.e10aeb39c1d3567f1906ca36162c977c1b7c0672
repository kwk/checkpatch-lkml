ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#51: FILE: drivers/pci/pcie/aer/aerdrv_core.c:149:
+		e_info->dev[e_info->error_dev_num ++] = dev;
 		                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#53: FILE: drivers/pci/pcie/aer/aerdrv_core.c:151:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'e_info->id != 0'
#75: FILE: drivers/pci/pcie/aer/aerdrv_core.c:181:
+		if ((e_info->id != 0) &&
+			!(e_info->flags & AER_MULTI_ERROR_VALID_FLAG))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#76: FILE: drivers/pci/pcie/aer/aerdrv_core.c:182:
+		if ((e_info->id != 0) &&
+			!(e_info->flags & AER_MULTI_ERROR_VALID_FLAG))

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#105: FILE: drivers/pci/pcie/aer/aerdrv_core.c:237:
+	if (e_info->flags & AER_MULTI_ERROR_VALID_FLAG) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#107: FILE: drivers/pci/pcie/aer/aerdrv_core.c:239:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#117: FILE: drivers/pci/pcie/aer/aerdrv_core.c:722:
+static inline void aer_process_err_devices(struct pcie_device *p_device,
+			struct aer_err_info *e_info)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!e_info->dev[0]"
#121: FILE: drivers/pci/pcie/aer/aerdrv_core.c:726:
+	if (e_info->dev[0] == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#122: FILE: drivers/pci/pcie/aer/aerdrv_core.c:727:
+		printk(KERN_DEBUG "%s->can't find device of ID%04x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: drivers/pci/pcie/aer/aerdrv_core.c:728:
+		printk(KERN_DEBUG "%s->can't find device of ID%04x\n",
+				__func__, e_info->id);

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#126: FILE: drivers/pci/pcie/aer/aerdrv_core.c:731:
+	for (i = 0; i < e_info->error_dev_num; i ++) {
 	                                         ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!e_info->dev[i]"
#127: FILE: drivers/pci/pcie/aer/aerdrv_core.c:732:
+		if (e_info->dev[i] == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#134: FILE: drivers/pci/pcie/aer/aerdrv_core.c:739:
+			handle_error_source(p_device,
+					e_info->dev[i],

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000114142.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 2 warnings, 9 checks, 124 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000114142.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
