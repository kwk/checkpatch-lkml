WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#37: FILE: Makefile:4:
+EXTRAVERSION = .10
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#178: FILE: drivers/ata/pata_hpt3x2n.c:276:
+	iowrite8(ioread8(bmdma+0x70) | 0x32, bmdma+0x70);
 	                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#178: FILE: drivers/ata/pata_hpt3x2n.c:276:
+	iowrite8(ioread8(bmdma+0x70) | 0x32, bmdma+0x70);
 	                                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#179: FILE: drivers/ata/pata_hpt3x2n.c:277:
+	iowrite8(ioread8(bmdma+0x74) | 0x32, bmdma+0x74);
 	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#179: FILE: drivers/ata/pata_hpt3x2n.c:277:
+	iowrite8(ioread8(bmdma+0x74) | 0x32, bmdma+0x74);
 	                                          ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#393: FILE: drivers/md/md.c:281:
+		 * so destroy it */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#480: FILE: drivers/net/e100.c:2831:
+	nic->cbs_pool = pci_pool_create(netdev->name,
+			   nic->pdev,

WARNING:SPLIT_STRING: quoted string split across lines
#591: FILE: drivers/s390/block/dasd_diag.c:152:
+				 "The access mode of a DIAG device changed"
+				 " to read-only");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rc != 4'
#604: FILE: drivers/s390/block/dasd_diag.c:445:
+	if (rc && (rc != 4)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:CAMELCASE: Avoid CamelCase: <cifsSesInfo>
#754: FILE: fs/cifs/connect.c:2273:
+	struct cifsSesInfo *pSesInfo;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <pSesInfo>
#754: FILE: fs/cifs/connect.c:2273:
+	struct cifsSesInfo *pSesInfo;

CHECK:CAMELCASE: Avoid CamelCase: <cifsTconInfo>
#755: FILE: fs/cifs/connect.c:2274:
+	struct cifsTconInfo *tcon;

CHECK:CAMELCASE: Avoid CamelCase: <srvTcp>
#756: FILE: fs/cifs/connect.c:2275:
+	struct TCP_Server_Info *srvTcp;

CHECK:CAMELCASE: Avoid CamelCase: <FreeXid>
#775: FILE: fs/cifs/connect.c:2584:
+			FreeXid(xid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#799: FILE: fs/ext4/ext4.h:1446:
+extern qsize_t *ext4_get_reserved_space(struct inode *inode);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#922: FILE: fs/quota/dquot.c:1394:
+static qsize_t *inode_reserved_space(struct inode * inode)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#925: FILE: fs/quota/dquot.c:1397:
+	 * quota reservation interface */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#926: FILE: fs/quota/dquot.c:1398:
+	BUG_ON(!inode->i_sb->dq_op->get_reserved_space);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LINE_SPACING: Please don't use multiple blank lines
#937: FILE: fs/quota/dquot.c:1409:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#956: FILE: fs/quota/dquot.c:1428:
+	qsize_t ret;
+	spin_lock(&inode->i_lock);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#963: FILE: fs/quota/dquot.c:1435:
+static void inode_incr_space(struct inode *inode, qsize_t number,
+				int reserve)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1205: FILE: fs/quota/dquot.c:1679:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <partitionReferenceNum>
#1291: FILE: fs/udf/super.c:1093:
+	ino.partitionReferenceNum = type1_index;

CHECK:CAMELCASE: Avoid CamelCase: <logicalBlockNum>
#1296: FILE: fs/udf/super.c:1098:
+		ino.logicalBlockNum = vat_block - map->s_partition_root;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1375: FILE: include/linux/quota.h:317:
+	 * quota code only */

WARNING:SPACING: Unnecessary space before function pointer arguments
#1376: FILE: include/linux/quota.h:318:
+	qsize_t *(*get_reserved_space) (struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1376: FILE: include/linux/quota.h:318:
+	qsize_t *(*get_reserved_space) (struct inode *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1409: FILE: include/net/netfilter/ipv6/nf_conntrack_ipv6.h:12:
+extern struct sk_buff *nf_ct_frag6_gather(struct sk_buff *skb, u32 user);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1443: FILE: kernel/time/clockevents.c:262:
+				BUG_ON(dev->mode != CLOCK_EVT_MODE_UNUSED);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1498: FILE: net/ipv6/netfilter/nf_conntrack_l3proto_ipv6.c:194:
+
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1569: FILE: net/ipv6/reassembly.c:146:
+	return (fq->id == arg->id && fq->user == arg->user &&
 			ipv6_addr_equal(&fq->saddr, arg->src) &&

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000026729.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 11 warnings, 20 checks, 1327 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000026729.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
