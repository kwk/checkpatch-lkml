WARNING:REPEATED_WORD: Possible repeated word: 'as'
#28: 
GPIOs and exports the function as as platform_driver.

WARNING:BAD_SIGN_OFF: Duplicate signature
#37: 
Signed-off-by: Daniel Mack <daniel@caiaq.de>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#77: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#82: FILE: drivers/leds/leds-lt3593.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/gpio.h> instead of <asm/gpio.h>
#107: FILE: drivers/leds/leds-lt3593.c:26:
+#include <asm/gpio.h>

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#111: FILE: drivers/leds/leds-lt3593.c:30:
+	unsigned gpio;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#156: FILE: drivers/leds/leds-lt3593.c:75:
+static void lt3593_led_set(struct led_classdev *led_cdev,
+	enum led_brightness value)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#165: FILE: drivers/leds/leds-lt3593.c:84:
+static int __devinit create_lt3593_led(const struct gpio_led *template,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#166: FILE: drivers/leds/leds-lt3593.c:85:
+static int __devinit create_lt3593_led(const struct gpio_led *template,
+	struct lt3593_led_data *led_dat, struct device *parent)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#172: FILE: drivers/leds/leds-lt3593.c:91:
+		printk(KERN_INFO "%s: skipping unavailable LT3593 LED at gpio %d (%s)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#173: FILE: drivers/leds/leds-lt3593.c:92:
+		printk(KERN_INFO "%s: skipping unavailable LT3593 LED at gpio %d (%s)\n",
+				KBUILD_MODNAME, template->gpio, template->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#203: FILE: drivers/leds/leds-lt3593.c:122:
+	printk(KERN_INFO "%s: registered LT3593 LED '%s' at GPIO %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#204: FILE: drivers/leds/leds-lt3593.c:123:
+	printk(KERN_INFO "%s: registered LT3593 LED '%s' at GPIO %d\n",
+		KBUILD_MODNAME, template->name, template->gpio);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#223: FILE: drivers/leds/leds-lt3593.c:142:
+static int __devinit lt3593_led_probe(struct platform_device *pdev)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*leds_data)...) over kzalloc(sizeof(struct lt3593_led_data)...)
#232: FILE: drivers/leds/leds-lt3593.c:151:
+	leds_data = kzalloc(sizeof(struct lt3593_led_data) * pdata->num_leds,

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#232: FILE: drivers/leds/leds-lt3593.c:151:
+	leds_data = kzalloc(sizeof(struct lt3593_led_data) * pdata->num_leds,
+				GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#233: FILE: drivers/leds/leds-lt3593.c:152:
+	leds_data = kzalloc(sizeof(struct lt3593_led_data) * pdata->num_leds,
+				GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: drivers/leds/leds-lt3593.c:158:
+		ret = create_lt3593_led(&pdata->leds[i], &leds_data[i],
+				      &pdev->dev);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#257: FILE: drivers/leds/leds-lt3593.c:176:
+static int __devexit lt3593_led_remove(struct platform_device *pdev)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000063125.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 12 warnings, 7 checks, 239 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000063125.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
