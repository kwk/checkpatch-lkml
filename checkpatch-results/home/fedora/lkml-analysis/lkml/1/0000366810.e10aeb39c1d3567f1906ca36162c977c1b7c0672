CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#157: FILE: include/asm-i386/desc.h:82:
+static inline fastcall void write_dt_entry(struct desc_struct *dt,
 				  int entry, u32 entry_low, u32 entry_high)

CHECK:CAMELCASE: Avoid CamelCase: <Xgt_desc_struct>
#179: FILE: include/asm-i386/desc.h:110:
+static fastcall inline void native_load_gdt(const struct Xgt_desc_struct *dtr)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#302: FILE: include/asm-i386/msr.h:21:
+static fastcall inline unsigned long long native_read_msr_safe(unsigned int msr,
 						      int *err)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#317: FILE: include/asm-i386/msr.h:46:
+static fastcall inline int native_write_msr_safe(unsigned int msr,
 					unsigned long long val)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#425: FILE: include/asm-i386/paravirt.h:74:
+	unsigned long (fastcall *get_wallclock)(void);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#431: FILE: include/asm-i386/paravirt.h:79:
+	void (fastcall *cpuid)(unsigned int *eax, unsigned int *ebx,
 		      unsigned int *ecx, unsigned int *edx);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#444: FILE: include/asm-i386/paravirt.h:87:
+	unsigned long (fastcall *read_cr0)(void);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#449: FILE: include/asm-i386/paravirt.h:90:
+	unsigned long (fastcall *read_cr2)(void);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#454: FILE: include/asm-i386/paravirt.h:93:
+	unsigned long (fastcall *read_cr3)(void);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#460: FILE: include/asm-i386/paravirt.h:96:
+	unsigned long (fastcall *read_cr4_safe)(void);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#461: FILE: include/asm-i386/paravirt.h:97:
+	unsigned long (fastcall *read_cr4)(void);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#476: FILE: include/asm-i386/paravirt.h:106:
+	unsigned long (fastcall *save_fl)(void);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#515: FILE: include/asm-i386/paravirt.h:131:
+	void (fastcall *set_ldt)(const void *desc, unsigned entries);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#516: FILE: include/asm-i386/paravirt.h:132:
+	unsigned long (fastcall *store_tr)(void);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#519: FILE: include/asm-i386/paravirt.h:135:
+	void (fastcall *write_ldt_entry)(struct desc_struct *,
 				int entrynum, u32 low, u32 high);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#522: FILE: include/asm-i386/paravirt.h:137:
+	void (fastcall *write_gdt_entry)(struct desc_struct *,
 				int entrynum, u32 low, u32 high);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#525: FILE: include/asm-i386/paravirt.h:139:
+	void (fastcall *write_idt_entry)(struct desc_struct *,
 				int entrynum, u32 low, u32 high);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#531: FILE: include/asm-i386/paravirt.h:142:
+	void (fastcall *set_iopl_mask)(unsigned mask);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#561: FILE: include/asm-i386/paravirt.h:176:
+	void (fastcall *flush_tlb_others)(const cpumask_t *cpus, struct mm_struct *mm,
 				 unsigned long va);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#580: FILE: include/asm-i386/paravirt.h:188:
+	void (fastcall *set_pte_at)(struct mm_struct *mm, unsigned long addr,
 			   pte_t *ptep, pte_t pteval);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#587: FILE: include/asm-i386/paravirt.h:192:
+	void (fastcall *pte_update_defer)(struct mm_struct *mm,
 				 unsigned long addr, pte_t *ptep);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#609: FILE: include/asm-i386/paravirt.h:200:
+ 	void (fastcall *set_pte_present)(struct mm_struct *mm, unsigned long addr, pte_t *ptep, pte_t pte);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#609: FILE: include/asm-i386/paravirt.h:200:
+ ^Ivoid (fastcall *set_pte_present)(struct mm_struct *mm, unsigned long addr, pte_t *ptep, pte_t pte);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#609: FILE: include/asm-i386/paravirt.h:200:
+ ^Ivoid (fastcall *set_pte_present)(struct mm_struct *mm, unsigned long addr, pte_t *ptep, pte_t pte);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#609: FILE: include/asm-i386/paravirt.h:200:
+ ^Ivoid (fastcall *set_pte_present)(struct mm_struct *mm, unsigned long addr, pte_t *ptep, pte_t pte);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#611: FILE: include/asm-i386/paravirt.h:202:
+ ^Ivoid (fastcall *pte_clear)(struct mm_struct *mm, unsigned long addr, pte_t *ptep);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#611: FILE: include/asm-i386/paravirt.h:202:
+ ^Ivoid (fastcall *pte_clear)(struct mm_struct *mm, unsigned long addr, pte_t *ptep);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#611: FILE: include/asm-i386/paravirt.h:202:
+ ^Ivoid (fastcall *pte_clear)(struct mm_struct *mm, unsigned long addr, pte_t *ptep);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pte_t' should also have an identifier name
#614: FILE: include/asm-i386/paravirt.h:205:
+	unsigned long long (fastcall *pte_val)(pte_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pmd_t' should also have an identifier name
#615: FILE: include/asm-i386/paravirt.h:206:
+	unsigned long long (fastcall *pmd_val)(pmd_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pgd_t' should also have an identifier name
#616: FILE: include/asm-i386/paravirt.h:207:
+	unsigned long long (fastcall *pgd_val)(pgd_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pgd_t' should also have an identifier name
#625: FILE: include/asm-i386/paravirt.h:214:
+	unsigned long (fastcall *pgd_val)(pgd_t);

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#663: FILE: include/asm-i386/pgtable-2level.h:14:
+static fastcall inline void native_set_pte(pte_t *ptep , pte_t pte)
                                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#668: FILE: include/asm-i386/pgtable-2level.h:18:
 }
+static fastcall inline void native_set_pte_at(struct mm_struct *mm, unsigned long addr,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#669: FILE: include/asm-i386/pgtable-2level.h:19:
+static fastcall inline void native_set_pte_at(struct mm_struct *mm, unsigned long addr,
 				     pte_t *ptep , pte_t pte)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#674: FILE: include/asm-i386/pgtable-2level.h:23:
 }
+static fastcall inline void native_set_pmd(pmd_t *pmdp, pmd_t pmd)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#710: FILE: include/asm-i386/pgtable-3level.h:42:
 }
+static fastcall inline void native_set_pte_at(struct mm_struct *mm, unsigned long addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#711: FILE: include/asm-i386/pgtable-3level.h:43:
+static fastcall inline void native_set_pte_at(struct mm_struct *mm, unsigned long addr,
 				     pte_t *ptep , pte_t pte)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#720: FILE: include/asm-i386/pgtable-3level.h:55:
+static fastcall inline void native_set_pte_present(struct mm_struct *mm, unsigned long addr,
 					  pte_t *ptep, pte_t pte)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#733: FILE: include/asm-i386/pgtable-3level.h:68:
 }
+static fastcall inline void native_set_pmd(pmd_t *pmdp, pmd_t pmd)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#738: FILE: include/asm-i386/pgtable-3level.h:72:
 }
+static fastcall inline void native_set_pud(pud_t *pudp, pud_t pud)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#817: FILE: include/asm-i386/processor.h:558:
+static inline void fastcall native_set_iopl_mask(unsigned mask)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#937: FILE: include/asm-i386/tlbflush.h:120:
+static fastcall inline void native_flush_tlb_others(const cpumask_t *cpumask,
 					   struct mm_struct *mm, unsigned long va)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#946: FILE: include/asm-i386/tlbflush.h:144:
+void fastcall native_flush_tlb_others(const cpumask_t *cpumask, struct mm_struct *mm,
 			     unsigned long va);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000366810.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 20 warnings, 21 checks, 762 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000366810.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
