WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
Subject: [PATCH 2/2] [Target_Core_Mod/Persistent_Reservations]: Add UNIT ATTENTION support for PROUT SAs

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#71: FILE: drivers/lio-core/target_core_pr.c:536:
+static int core_scsi3_check_implict_release(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#121: FILE: drivers/lio-core/target_core_pr.c:780:
+			pr_holder = core_scsi3_check_implict_release(

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type == PR_TYPE_WRITE_EXCLUSIVE_REGONLY'
#140: FILE: drivers/lio-core/target_core_pr.c:799:
+			if (pr_holder &&
+			   ((type == PR_TYPE_WRITE_EXCLUSIVE_REGONLY) ||
+			    (type == PR_TYPE_EXCLUSIVE_ACCESS_REGONLY))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type == PR_TYPE_EXCLUSIVE_ACCESS_REGONLY'
#140: FILE: drivers/lio-core/target_core_pr.c:799:
+			if (pr_holder &&
+			   ((type == PR_TYPE_WRITE_EXCLUSIVE_REGONLY) ||
+			    (type == PR_TYPE_EXCLUSIVE_ACCESS_REGONLY))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#141: FILE: drivers/lio-core/target_core_pr.c:800:
+			if (pr_holder &&
+			   ((type == PR_TYPE_WRITE_EXCLUSIVE_REGONLY) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#144: FILE: drivers/lio-core/target_core_pr.c:803:
+				list_for_each_entry(pr_reg_p,
+						&pr_tmpl->registration_list,

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#146: FILE: drivers/lio-core/target_core_pr.c:805:
+						pr_reg_list) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#147: FILE: drivers/lio-core/target_core_pr.c:806:
+					core_scsi3_ua_allocate(

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type != PR_TYPE_WRITE_EXCLUSIVE_REGONLY'
#189: FILE: drivers/lio-core/target_core_pr.c:1195:
+	if ((type != PR_TYPE_WRITE_EXCLUSIVE_REGONLY) &&
+	    (type != PR_TYPE_EXCLUSIVE_ACCESS_REGONLY) &&
+	    (type != PR_TYPE_WRITE_EXCLUSIVE_ALLREG) &&
+	    (type != PR_TYPE_EXCLUSIVE_ACCESS_ALLREG)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type != PR_TYPE_EXCLUSIVE_ACCESS_REGONLY'
#189: FILE: drivers/lio-core/target_core_pr.c:1195:
+	if ((type != PR_TYPE_WRITE_EXCLUSIVE_REGONLY) &&
+	    (type != PR_TYPE_EXCLUSIVE_ACCESS_REGONLY) &&
+	    (type != PR_TYPE_WRITE_EXCLUSIVE_ALLREG) &&
+	    (type != PR_TYPE_EXCLUSIVE_ACCESS_ALLREG)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type != PR_TYPE_WRITE_EXCLUSIVE_ALLREG'
#189: FILE: drivers/lio-core/target_core_pr.c:1195:
+	if ((type != PR_TYPE_WRITE_EXCLUSIVE_REGONLY) &&
+	    (type != PR_TYPE_EXCLUSIVE_ACCESS_REGONLY) &&
+	    (type != PR_TYPE_WRITE_EXCLUSIVE_ALLREG) &&
+	    (type != PR_TYPE_EXCLUSIVE_ACCESS_ALLREG)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type != PR_TYPE_EXCLUSIVE_ACCESS_ALLREG'
#189: FILE: drivers/lio-core/target_core_pr.c:1195:
+	if ((type != PR_TYPE_WRITE_EXCLUSIVE_REGONLY) &&
+	    (type != PR_TYPE_EXCLUSIVE_ACCESS_REGONLY) &&
+	    (type != PR_TYPE_WRITE_EXCLUSIVE_ALLREG) &&
+	    (type != PR_TYPE_EXCLUSIVE_ACCESS_ALLREG)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#201: FILE: drivers/lio-core/target_core_pr.c:1207:
+	list_for_each_entry(pr_reg_p, &pr_tmpl->registration_list,
+			pr_reg_list) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#210: FILE: drivers/lio-core/target_core_pr.c:1216:
+		core_scsi3_ua_allocate(pr_reg_p->pr_reg_nacl, cmd->orig_fe_lun,
+				0x2A, ASCQ_2AH_RESERVATIONS_RELEASED);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#236: FILE: drivers/lio-core/target_core_pr.c:1280:
 			&pr_tmpl->registration_list, pr_reg_list) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#249: FILE: drivers/lio-core/target_core_pr.c:1293:
+			core_scsi3_ua_allocate(pr_reg_nacl, cmd->orig_fe_lun,
+				0x2A, ASCQ_2AH_RESERVATIONS_PREEMPTED);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000149831.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 1 warnings, 16 checks, 185 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000149831.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
