WARNING:TYPO_SPELLING: 'miscelaneous' may be misspelled - perhaps 'miscellaneous'?
#20: 
Subject: [PATCH 4/4] autofs4 - add miscelaneous device for ioctls
                                   ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Ian Kent < raven@themaw.net>'
#35: 
Signed-off-by: Ian Kent < raven@themaw.net>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:SPACING: space required after that ',' (ctx:VxV)
#113: FILE: fs/autofs4/autofs_i.h:44:
+#define WARN(fmt,args...) \
                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#113: FILE: fs/autofs4/autofs_i.h:44:
+#define WARN(fmt,args...) \
+do {			  \
+	printk("KERN_WARNING pid %d: %s: " fmt "\n" , current->pid , __FUNCTION__ , ##args); \
+} while(0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#115: FILE: fs/autofs4/autofs_i.h:46:
+	printk("KERN_WARNING pid %d: %s: " fmt "\n" , current->pid , __FUNCTION__ , ##args); \

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#115: FILE: fs/autofs4/autofs_i.h:46:
+	printk("KERN_WARNING pid %d: %s: " fmt "\n" , current->pid , __FUNCTION__ , ##args); \
 	                                            ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#115: FILE: fs/autofs4/autofs_i.h:46:
+	printk("KERN_WARNING pid %d: %s: " fmt "\n" , current->pid , __FUNCTION__ , ##args); \
 	                                                           ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#115: FILE: fs/autofs4/autofs_i.h:46:
+	printk("KERN_WARNING pid %d: %s: " fmt "\n" , current->pid , __FUNCTION__ , ##args); \
 	                                                                          ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#115: FILE: fs/autofs4/autofs_i.h:46:
+	printk("KERN_WARNING pid %d: %s: " fmt "\n" , current->pid , __FUNCTION__ , ##args); \

ERROR:SPACING: space required before the open parenthesis '('
#116: FILE: fs/autofs4/autofs_i.h:47:
+} while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#118: FILE: fs/autofs4/autofs_i.h:49:
+#define ERROR(fmt,args...) \
                  ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#118: FILE: fs/autofs4/autofs_i.h:49:
+#define ERROR(fmt,args...) \
+do {			  \
+	printk("KERN_ERR pid %d: %s: " fmt "\n" , current->pid , __FUNCTION__ , ##args); \
+} while(0)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#120: FILE: fs/autofs4/autofs_i.h:51:
+	printk("KERN_ERR pid %d: %s: " fmt "\n" , current->pid , __FUNCTION__ , ##args); \

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#120: FILE: fs/autofs4/autofs_i.h:51:
+	printk("KERN_ERR pid %d: %s: " fmt "\n" , current->pid , __FUNCTION__ , ##args); \
 	                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#120: FILE: fs/autofs4/autofs_i.h:51:
+	printk("KERN_ERR pid %d: %s: " fmt "\n" , current->pid , __FUNCTION__ , ##args); \
 	                                                       ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#120: FILE: fs/autofs4/autofs_i.h:51:
+	printk("KERN_ERR pid %d: %s: " fmt "\n" , current->pid , __FUNCTION__ , ##args); \
 	                                                                      ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#120: FILE: fs/autofs4/autofs_i.h:51:
+	printk("KERN_ERR pid %d: %s: " fmt "\n" , current->pid , __FUNCTION__ , ##args); \

ERROR:SPACING: space required before the open parenthesis '('
#121: FILE: fs/autofs4/autofs_i.h:52:
+} while(0)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#157: FILE: fs/autofs4/dev-ioctl.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#158: FILE: fs/autofs4/dev-ioctl.c:2:
+ * linux/fs/autofs4/dev-ioctl.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#182: FILE: fs/autofs4/dev-ioctl.c:26:
+#include <asm/uaccess.h>

WARNING:REPEATED_WORD: Possible repeated word: 'at'
#195: FILE: fs/autofs4/dev-ioctl.c:39:
+ * which have been left busy at at service shutdown.

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#201: FILE: fs/autofs4/dev-ioctl.c:45:
+#define AUTOFS_DEV_IOCTL_IOC_COUNT AUTOFS_IOC_COUNT - 11

CHECK:SPACING: No space is necessary after a cast
#220: FILE: fs/autofs4/dev-ioctl.c:64:
+	while ((void *) str <= end)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'AUTOFS_DEV_IOCTL_VERSION_MAJOR != param->ver_major'
#237: FILE: fs/autofs4/dev-ioctl.c:81:
+	if ((AUTOFS_DEV_IOCTL_VERSION_MAJOR != param->ver_major) ||
+	    (AUTOFS_DEV_IOCTL_VERSION_MINOR < param->ver_minor)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'AUTOFS_DEV_IOCTL_VERSION_MINOR < param->ver_minor'
#237: FILE: fs/autofs4/dev-ioctl.c:81:
+	if ((AUTOFS_DEV_IOCTL_VERSION_MAJOR != param->ver_major) ||
+	    (AUTOFS_DEV_IOCTL_VERSION_MINOR < param->ver_minor)) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#237: FILE: fs/autofs4/dev-ioctl.c:81:
+	if ((AUTOFS_DEV_IOCTL_VERSION_MAJOR != param->ver_major) ||

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#238: FILE: fs/autofs4/dev-ioctl.c:82:
+	    (AUTOFS_DEV_IOCTL_VERSION_MINOR < param->ver_minor)) {

WARNING:SPLIT_STRING: quoted string split across lines
#240: FILE: fs/autofs4/dev-ioctl.c:84:
+		WARN("ioctl control interface version mismatch: "
+		     "kernel(%u.%u), user(%u.%u), cmd(%d)",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:RETURN_VOID: void function return statements are not generally useful
#284: FILE: fs/autofs4/dev-ioctl.c:128:
+	return;
+}

WARNING:SPLIT_STRING: quoted string split across lines
#296: FILE: fs/autofs4/dev-ioctl.c:140:
+		WARN("invalid device control module version "
+		     "supplied for cmd(0x%08x)", cmd);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#308: FILE: fs/autofs4/dev-ioctl.c:152:
+		err = invalid_str(param->path,
+				 (void *) ((size_t) param + param->size));

CHECK:SPACING: No space is necessary after a cast
#308: FILE: fs/autofs4/dev-ioctl.c:152:
+				 (void *) ((size_t) param + param->size));

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#359: FILE: fs/autofs4/dev-ioctl.c:203:
+static int autofs_dev_ioctl_find_super(struct nameidata *nd, dev_t devno)
                                                          ^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#411: FILE: fs/autofs4/dev-ioctl.c:255:
+	BUG_ON(fdt->fd[fd] != NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "fdt->fd[fd]"
#411: FILE: fs/autofs4/dev-ioctl.c:255:
+	BUG_ON(fdt->fd[fd] != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#423: FILE: fs/autofs4/dev-ioctl.c:267:
+	struct file *filp;
 	             ^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#424: FILE: fs/autofs4/dev-ioctl.c:268:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#430: FILE: fs/autofs4/dev-ioctl.c:274:
+		err = path_lookup(path, LOOKUP_PARENT, &nd);
 		                                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#439: FILE: fs/autofs4/dev-ioctl.c:283:
+		err = autofs_dev_ioctl_find_super(&nd, devid);
 		                                   ^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#442: FILE: fs/autofs4/dev-ioctl.c:286:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#443: FILE: fs/autofs4/dev-ioctl.c:287:
+		filp = dentry_open(nd.path.dentry, nd.path.mnt, O_RDONLY);
 		^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#443: FILE: fs/autofs4/dev-ioctl.c:287:
+		filp = dentry_open(nd.path.dentry, nd.path.mnt, O_RDONLY);
 		                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#443: FILE: fs/autofs4/dev-ioctl.c:287:
+		filp = dentry_open(nd.path.dentry, nd.path.mnt, O_RDONLY);
 		                                   ^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#444: FILE: fs/autofs4/dev-ioctl.c:288:
+		if (IS_ERR(filp)) {
 		           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#445: FILE: fs/autofs4/dev-ioctl.c:289:
+			err = PTR_ERR(filp);
 			              ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#449: FILE: fs/autofs4/dev-ioctl.c:293:
+		autofs_dev_ioctl_fd_install(fd, filp);
 		                                ^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#455: FILE: fs/autofs4/dev-ioctl.c:299:
+	path_put(&nd.path);
 	          ^^

CHECK:SPACING: No space is necessary after a cast
#508: FILE: fs/autofs4/dev-ioctl.c:352:
+	token = (autofs_wqt_t) param->arg1;

CHECK:SPACING: No space is necessary after a cast
#523: FILE: fs/autofs4/dev-ioctl.c:367:
+	token = (autofs_wqt_t) param->arg1;

CHECK:BRACES: braces {} should be used on all arms of this statement
#552: FILE: fs/autofs4/dev-ioctl.c:396:
+	if (!sbi->catatonic)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#554: FILE: fs/autofs4/dev-ioctl.c:398:
+		return -EBUSY;
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#554: FILE: fs/autofs4/dev-ioctl.c:398:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#556: FILE: fs/autofs4/dev-ioctl.c:400:
+		struct file *pipe = fget(pipefd);
+		if (!pipe->f_op || !pipe->f_op->write) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#609: FILE: fs/autofs4/dev-ioctl.c:453:
+	struct nameidata nd;
 	                 ^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#622: FILE: fs/autofs4/dev-ioctl.c:466:
+	param->arg1 = param->arg2 = -1;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#625: FILE: fs/autofs4/dev-ioctl.c:469:
+	err = path_lookup(path, LOOKUP_PARENT, &nd);
 	                                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#629: FILE: fs/autofs4/dev-ioctl.c:473:
+	err = autofs_dev_ioctl_find_super(&nd, devid);
 	                                   ^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#632: FILE: fs/autofs4/dev-ioctl.c:476:
+^I$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#633: FILE: fs/autofs4/dev-ioctl.c:477:
+	ino = autofs4_dentry_ino(nd.path.dentry);
 	                         ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#641: FILE: fs/autofs4/dev-ioctl.c:485:
+	path_put(&nd.path);
 	          ^^

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#673: FILE: fs/autofs4/dev-ioctl.c:517:
+		 * little easier
+		*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#714: FILE: fs/autofs4/dev-ioctl.c:558:
+	struct nameidata nd;
 	                 ^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#725: FILE: fs/autofs4/dev-ioctl.c:569:
+	param->arg1 = param->arg2 = 0;

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#730: FILE: fs/autofs4/dev-ioctl.c:574:
+		err = path_lookup(path, LOOKUP_FOLLOW, &nd);
 		                                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#734: FILE: fs/autofs4/dev-ioctl.c:578:
+		magic = nd.path.dentry->d_inode->i_sb->s_magic;
 		        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#736: FILE: fs/autofs4/dev-ioctl.c:580:
+		if (follow_up(&nd.path.mnt, &nd.path.dentry)) {
 		               ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#736: FILE: fs/autofs4/dev-ioctl.c:580:
+		if (follow_up(&nd.path.mnt, &nd.path.dentry)) {
 		                             ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#737: FILE: fs/autofs4/dev-ioctl.c:581:
+			struct inode *inode = nd.path.dentry->d_inode;
 			                      ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#738: FILE: fs/autofs4/dev-ioctl.c:582:
+			struct inode *inode = nd.path.dentry->d_inode;
+			if (magic == AUTOFS_SUPER_MAGIC ||

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#747: FILE: fs/autofs4/dev-ioctl.c:591:
+		err = path_lookup(path, LOOKUP_PARENT, &nd);
 		                                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#751: FILE: fs/autofs4/dev-ioctl.c:595:
+		err = autofs_dev_ioctl_find_super(&nd, devid);
 		                                   ^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#754: FILE: fs/autofs4/dev-ioctl.c:598:
+^I$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#755: FILE: fs/autofs4/dev-ioctl.c:599:
+		param->arg1 = have_submounts(nd.path.dentry);
 		                             ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#757: FILE: fs/autofs4/dev-ioctl.c:601:
+		if (d_mountpoint(nd.path.dentry)) {
 		                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#758: FILE: fs/autofs4/dev-ioctl.c:602:
+			if (follow_down(&nd.path.mnt, &nd.path.dentry)) {
 			                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#758: FILE: fs/autofs4/dev-ioctl.c:602:
+			if (follow_down(&nd.path.mnt, &nd.path.dentry)) {
 			                               ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#759: FILE: fs/autofs4/dev-ioctl.c:603:
+				struct inode *inode = nd.path.dentry->d_inode;
 				                      ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#760: FILE: fs/autofs4/dev-ioctl.c:604:
+				struct inode *inode = nd.path.dentry->d_inode;
+				param->arg2 = inode->i_sb->s_magic;

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#766: FILE: fs/autofs4/dev-ioctl.c:610:
+	path_put(&nd.path);
 	          ^^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'cmd' may be better as '(cmd)' to avoid precedence issues
#776: FILE: fs/autofs4/dev-ioctl.c:620:
+#define cmd_idx(cmd)	(cmd - _IOC_NR(AUTOFS_DEV_IOCTL_IOC_FIRST))

CHECK:SPACING: No space is necessary after a cast
#899: FILE: fs/autofs4/dev-ioctl.c:743:
+	return (long) _autofs_dev_ioctl(command, (struct autofs_dev_ioctl __user *) u);

CHECK:SPACING: No space is necessary after a cast
#905: FILE: fs/autofs4/dev-ioctl.c:749:
+	return (long) autofs_dev_ioctl(file, command, (ulong) compat_ptr(u));

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#918: FILE: fs/autofs4/dev-ioctl.c:762:
+^I.minor ^I^I= MISC_DYNAMIC_MINOR,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#919: FILE: fs/autofs4/dev-ioctl.c:763:
+^I.name  ^I^I= AUTOFS_DEVICE_NAME,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#920: FILE: fs/autofs4/dev-ioctl.c:764:
+^I.fops  ^I^I= &_dev_ioctl_fops$

WARNING:RETURN_VOID: void function return statements are not generally useful
#943: FILE: fs/autofs4/dev-ioctl.c:787:
+	return;
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#961: FILE: include/linux/auto_dev-ioctl.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#962: FILE: include/linux/auto_dev-ioctl.h:2:
+ * linux/include/linux/auto_dev-ioctl.h

WARNING:REPEATED_WORD: Possible repeated word: 'is'
#989: FILE: include/linux/auto_dev-ioctl.h:29:
+ * of the chunk of memory otherwise is is the size of the

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#997: FILE: include/linux/auto_dev-ioctl.h:37:
+				 * including this struct */

WARNING:RETURN_VOID: void function return statements are not generally useful
#1015: FILE: include/linux/auto_dev-ioctl.h:55:
+	return;
+}

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#1059: FILE: include/linux/auto_dev-ioctl.h:99:
+#define AUTOFS_DEV_IOCTL_VERSION	_IOWR(AUTOFS_IOCTL, AUTOFS_DEV_IOCTL_VERSION_CMD, struct autofs_dev_ioctl)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#1060: FILE: include/linux/auto_dev-ioctl.h:100:
+#define AUTOFS_DEV_IOCTL_PROTOVER	_IOWR(AUTOFS_IOCTL, AUTOFS_DEV_IOCTL_PROTOVER_CMD, struct autofs_dev_ioctl)

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#1061: FILE: include/linux/auto_dev-ioctl.h:101:
+#define AUTOFS_DEV_IOCTL_PROTOSUBVER	_IOWR(AUTOFS_IOCTL, AUTOFS_DEV_IOCTL_PROTOSUBVER_CMD, struct autofs_dev_ioctl)

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#1062: FILE: include/linux/auto_dev-ioctl.h:102:
+#define AUTOFS_DEV_IOCTL_OPENMOUNT	_IOWR(AUTOFS_IOCTL, AUTOFS_DEV_IOCTL_OPENMOUNT_CMD, struct autofs_dev_ioctl)

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#1063: FILE: include/linux/auto_dev-ioctl.h:103:
+#define AUTOFS_DEV_IOCTL_CLOSEMOUNT	_IOWR(AUTOFS_IOCTL, AUTOFS_DEV_IOCTL_CLOSEMOUNT_CMD, struct autofs_dev_ioctl)

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#1064: FILE: include/linux/auto_dev-ioctl.h:104:
+#define AUTOFS_DEV_IOCTL_READY		_IOWR(AUTOFS_IOCTL, AUTOFS_DEV_IOCTL_READY_CMD, struct autofs_dev_ioctl)

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#1065: FILE: include/linux/auto_dev-ioctl.h:105:
+#define AUTOFS_DEV_IOCTL_FAIL		_IOWR(AUTOFS_IOCTL, AUTOFS_DEV_IOCTL_FAIL_CMD, struct autofs_dev_ioctl)

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#1066: FILE: include/linux/auto_dev-ioctl.h:106:
+#define AUTOFS_DEV_IOCTL_SETPIPEFD	_IOWR(AUTOFS_IOCTL, AUTOFS_DEV_IOCTL_SETPIPEFD_CMD, struct autofs_dev_ioctl)

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#1067: FILE: include/linux/auto_dev-ioctl.h:107:
+#define AUTOFS_DEV_IOCTL_CATATONIC	_IOWR(AUTOFS_IOCTL, AUTOFS_DEV_IOCTL_CATATONIC_CMD, struct autofs_dev_ioctl)

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#1068: FILE: include/linux/auto_dev-ioctl.h:108:
+#define AUTOFS_DEV_IOCTL_TIMEOUT	_IOWR(AUTOFS_IOCTL, AUTOFS_DEV_IOCTL_TIMEOUT_CMD, struct autofs_dev_ioctl)

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#1069: FILE: include/linux/auto_dev-ioctl.h:109:
+#define AUTOFS_DEV_IOCTL_REQUESTOR	_IOWR(AUTOFS_IOCTL, AUTOFS_DEV_IOCTL_REQUESTOR_CMD, struct autofs_dev_ioctl)

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#1070: FILE: include/linux/auto_dev-ioctl.h:110:
+#define AUTOFS_DEV_IOCTL_EXPIRE		_IOWR(AUTOFS_IOCTL, AUTOFS_DEV_IOCTL_EXPIRE_CMD, struct autofs_dev_ioctl)

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#1071: FILE: include/linux/auto_dev-ioctl.h:111:
+#define AUTOFS_DEV_IOCTL_ASKUMOUNT	_IOWR(AUTOFS_IOCTL, AUTOFS_DEV_IOCTL_ASKUMOUNT_CMD, struct autofs_dev_ioctl)

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#1072: FILE: include/linux/auto_dev-ioctl.h:112:
+#define AUTOFS_DEV_IOCTL_ISMOUNTPOINT	_IOWR(AUTOFS_IOCTL, AUTOFS_DEV_IOCTL_ISMOUNTPOINT_CMD, struct autofs_dev_ioctl)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000315352.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 15 errors, 76 warnings, 15 checks, 1004 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000315352.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
