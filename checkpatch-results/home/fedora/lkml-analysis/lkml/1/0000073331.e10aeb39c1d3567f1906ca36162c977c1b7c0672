WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#48: 
which then can be viewed with any SVG view; inkscape works well enough for me.

WARNING:TYPO_SPELLING: 'infinitly' may be misspelled - perhaps 'infinitely'?
#50: 
The idea behind timechart is to create a "infinitly zoomable" picture;
                                          ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#91: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#96: FILE: tools/perf/builtin-timechart.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:STATIC_CONST: Move const after static - use 'static const char'
#129: FILE: tools/perf/builtin-timechart.c:34:
+static char		const *input_name = "perf.data";

WARNING:STATIC_CONST: Move const after static - use 'static const char'
#130: FILE: tools/perf/builtin-timechart.c:35:
+static char		const *output_name = "output.svg";

CHECK:LINE_SPACING: Please don't use multiple blank lines
#132: FILE: tools/perf/builtin-timechart.c:37:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#139: FILE: tools/perf/builtin-timechart.c:44:
+static u64 ^I^Imax_freq;^I/* Highest CPU frequency seen */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#142: FILE: tools/perf/builtin-timechart.c:47:
+static u64 ^I^Ifirst_time, last_time;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#144: FILE: tools/perf/builtin-timechart.c:49:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#175: FILE: tools/perf/builtin-timechart.c:80:
+^Iint ^I^Idisplay;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#183: FILE: tools/perf/builtin-timechart.c:88:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#209: FILE: tools/perf/builtin-timechart.c:114:
+#define TYPE_NONE ^I0$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#210: FILE: tools/perf/builtin-timechart.c:115:
+#define TYPE_RUNNING ^I1$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cursor"
#259: FILE: tools/perf/builtin-timechart.c:164:
+	assert(cursor != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#271: FILE: tools/perf/builtin-timechart.c:176:
+	struct per_pidcomm *c;
+	p = find_create_pid(pid);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "c"
#286: FILE: tools/perf/builtin-timechart.c:191:
+	assert(c != NULL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#297: FILE: tools/perf/builtin-timechart.c:202:
+	struct per_pid *p, *pp;
+	p = find_create_pid(pid);

WARNING:LINE_SPACING: Missing a blank line after declarations
#313: FILE: tools/perf/builtin-timechart.c:218:
+	struct per_pid *p;
+	p = find_create_pid(pid);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "c"
#330: FILE: tools/perf/builtin-timechart.c:235:
+		assert(c != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sample"
#338: FILE: tools/perf/builtin-timechart.c:243:
+	assert(sample != NULL);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#348: FILE: tools/perf/builtin-timechart.c:253:
+		c->total_time += (end-start);
 		                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#349: FILE: tools/perf/builtin-timechart.c:254:
+		p->total_time += (end-start);
 		                     ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#374: FILE: tools/perf/builtin-timechart.c:279:
+}
+static int

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#398: FILE: tools/perf/builtin-timechart.c:303:
+	struct trace_entry te;
 	                   ^^

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#405: FILE: tools/perf/builtin-timechart.c:310:
+	struct trace_entry te;
 	                   ^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#429: FILE: tools/perf/builtin-timechart.c:334:
+
+

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#432: FILE: tools/perf/builtin-timechart.c:337:
+	struct trace_entry te;
 	                   ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#451: FILE: tools/perf/builtin-timechart.c:356:
+	struct power_event *pwr;
+	pwr = malloc(sizeof(struct power_event));

WARNING:LINE_SPACING: Missing a blank line after declarations
#469: FILE: tools/perf/builtin-timechart.c:374:
+	struct power_event *pwr;
+	pwr = malloc(sizeof(struct power_event));

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#499: FILE: tools/perf/builtin-timechart.c:404:
+	if (new_freq == max_freq - 1000)
+			turbo_frequency = max_freq;

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#504: FILE: tools/perf/builtin-timechart.c:409:
+sched_wakeup(int cpu, u64 timestamp, int pid, struct trace_entry *te)
                                                                   ^^

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#508: FILE: tools/perf/builtin-timechart.c:413:
+	struct wakeup_entry *wake = (void *)te;
 	                                    ^^

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#537: FILE: tools/perf/builtin-timechart.c:442:
+static void sched_switch(int cpu, u64 timestamp, struct trace_entry *te)
                                                                      ^^

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#540: FILE: tools/perf/builtin-timechart.c:445:
+	struct sched_switch *sw = (void *)te;
 	                                  ^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#542: FILE: tools/perf/builtin-timechart.c:447:
+
+

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#548: FILE: tools/perf/builtin-timechart.c:453:
+		pid_put_sample(sw->prev_pid, TYPE_RUNNING, cpu, prev_p->current->state_since, timestamp);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#551: FILE: tools/perf/builtin-timechart.c:456:
+			pid_put_sample(sw->next_pid, p->current->state, cpu, p->current->state_since, timestamp);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#567: FILE: tools/perf/builtin-timechart.c:472:
+
+

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#576: FILE: tools/perf/builtin-timechart.c:481:
+	struct trace_entry *te;
 	                    ^^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#582: FILE: tools/perf/builtin-timechart.c:487:
+		pid = event->sample.array[cursor]>>32;
 		                                 ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#593: FILE: tools/perf/builtin-timechart.c:498:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#605: FILE: tools/perf/builtin-timechart.c:510:
+	te = (void *)&event->sample.array[cursor];
 	^^

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#611: FILE: tools/perf/builtin-timechart.c:516:
+		pe = (void *)te;
 		             ^^

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#628: FILE: tools/perf/builtin-timechart.c:533:
+			sched_wakeup(cpu, stamp, pid, te);
 			                              ^^

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#631: FILE: tools/perf/builtin-timechart.c:536:
+			sched_switch(cpu, stamp, te);
 			                         ^^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#652: FILE: tools/perf/builtin-timechart.c:557:
+#if 0

CHECK:LINE_SPACING: Please don't use multiple blank lines
#698: FILE: tools/perf/builtin-timechart.c:603:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new_list"
#782: FILE: tools/perf/builtin-timechart.c:687:
+		if (new_list == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#791: FILE: tools/perf/builtin-timechart.c:696:
+			if (cursor->ppid > p->ppid ||
+				(cursor->ppid == p->ppid && cursor->pid > p->pid)) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#815: FILE: tools/perf/builtin-timechart.c:720:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#819: FILE: tools/perf/builtin-timechart.c:724:
+	struct power_event *pwr;
+	pwr = power_events;

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#857: FILE: tools/perf/builtin-timechart.c:762:
+					if (c->Y && c->start_time <= we->time && c->end_time >= we->time) {

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#858: FILE: tools/perf/builtin-timechart.c:763:
+						if (p->pid == we->waker)

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#860: FILE: tools/perf/builtin-timechart.c:765:
+						if (p->pid == we->wakee)

WARNING:LINE_SPACING: Missing a blank line after declarations
#884: FILE: tools/perf/builtin-timechart.c:789:
+	struct cpu_sample *sample;
+	p = all_data;

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#891: FILE: tools/perf/builtin-timechart.c:796:
+					svg_process(sample->cpu, sample->start_time, sample->end_time, "sample", c->comm);

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#924: FILE: tools/perf/builtin-timechart.c:829:
+					svg_sample(Y, sample->cpu, sample->start_time, sample->end_time, "sample");

WARNING:LINE_SPACING: Missing a blank line after declarations
#934: FILE: tools/perf/builtin-timechart.c:839:
+				char comm[256];
+				if (c->total_time > 5000000000) /* 5 seconds */

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#935: FILE: tools/perf/builtin-timechart.c:840:
+					sprintf(comm, "%s:%i (%2.2fs)", c->comm, p->pid, c->total_time / 1000000000.0);

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#937: FILE: tools/perf/builtin-timechart.c:842:
+					sprintf(comm, "%s:%i (%3.1fms)", c->comm, p->pid, c->total_time / 1000000.0);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#990: FILE: tools/perf/builtin-timechart.c:895:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1001: FILE: tools/perf/builtin-timechart.c:906:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1027: FILE: tools/perf/builtin-timechart.c:932:
+{
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1029: FILE: tools/perf/builtin-timechart.c:934:
+	switch (event->header.type) {
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1069: FILE: tools/perf/builtin-timechart.c:974:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1141: FILE: tools/perf/builtin-timechart.c:1046:
+	if (!size || process_event(event) < 0) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1143: FILE: tools/perf/builtin-timechart.c:1048:
+		printf("%p [%p]: skipping unknown header type: %d\n",
+			(void *)(offset + head),

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1170: FILE: tools/perf/builtin-timechart.c:1075:
+
+

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#1179: FILE: tools/perf/builtin-timechart.c:1084:
+	printf("Written %2.1f seconds of trace to %s.\n", (last_time - first_time) / 1000000000.0, output_name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1191: FILE: tools/perf/builtin-timechart.c:1096:
+	OPT_STRING('i', "input", &input_name, "file",
+		    "input file name"),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1193: FILE: tools/perf/builtin-timechart.c:1098:
+	OPT_STRING('o', "output", &output_name, "file",
+		    "output file name"),

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1197: FILE: tools/perf/builtin-timechart.c:1102:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1224: FILE: tools/perf/builtin.h:22:
+extern int cmd_timechart(int argc, const char **argv, const char *prefix);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000073331.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 43 warnings, 31 checks, 1153 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000073331.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
