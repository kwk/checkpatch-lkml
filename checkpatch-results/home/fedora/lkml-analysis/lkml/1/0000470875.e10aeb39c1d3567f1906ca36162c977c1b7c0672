WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#119: FILE: drivers/block/floppy.c:279:
+	printk("DMA memory shortage. "

WARNING:SPLIT_STRING: quoted string split across lines
#120: FILE: drivers/block/floppy.c:280:
+	printk("DMA memory shortage. "
+		"Temporarily falling back on virtual DMA\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#130: FILE: drivers/block/floppy.c:315:
+	printk(DEVICE_NAME "%d: " format, current_drive , ## args)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#130: FILE: drivers/block/floppy.c:315:
+	printk(DEVICE_NAME "%d: " format, current_drive , ## args)
 	                                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#172: FILE: drivers/block/floppy.c:548:
+					 * of the main command */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#183: FILE: drivers/block/floppy.c:571:
+#define CHECK_RESET { if (FDCS->reset) { reset_fdc(); return; } }

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#210: FILE: drivers/block/floppy.c:647:
+static void (*do_floppy)(void) = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#269: FILE: drivers/block/floppy.c:1196:
+#define LAST_OUT(x) if (output_byte(x) < 0) { reset_fdc(); return; }

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#269: FILE: drivers/block/floppy.c:1196:
+#define LAST_OUT(x) if (output_byte(x) < 0) { reset_fdc(); return; }

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#288: FILE: drivers/block/floppy.c:1262:
+						 * (deep stack et al. */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#324: FILE: drivers/block/floppy.c:1475:
+				printk("unknown error. ST[0..2] are: "

WARNING:SPLIT_STRING: quoted string split across lines
#325: FILE: drivers/block/floppy.c:1476:
+				printk("unknown error. ST[0..2] are: "
+					"0x%x 0x%x 0x%x", ST0, ST1, ST2);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#456: FILE: drivers/block/floppy.c:2604:
+						 * points to end of transfer */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#528: FILE: drivers/block/floppy.c:2770:
+		if (!direct || (indirect * 2 > direct * 3 &&
 		     *errors < DP->max_errors.read_track &&

WARNING:SPLIT_STRING: quoted string split across lines
#541: FILE: drivers/block/floppy.c:2780:
+				DPRINT("zero dma transfer attempted from "
+					"make_raw_request\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#551: FILE: drivers/block/floppy.c:2786:
+			/* check_dma_crossing(raw_cmd->kernel_data,
+					   raw_cmd->length,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#552: FILE: drivers/block/floppy.c:2787:
+					   "end of make_raw_request [1]"); */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#624: FILE: drivers/block/floppy.c:3346:
+			 * we lose our settings immediately */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#752: FILE: drivers/block/floppy.c:3986:
+		printk(KERN_INFO "FDC %d is a National Semiconductor "

WARNING:SPLIT_STRING: quoted string split across lines
#753: FILE: drivers/block/floppy.c:3987:
+		printk(KERN_INFO "FDC %d is a National Semiconductor "
+			"PC87306\n", fdc);

WARNING:SPLIT_STRING: quoted string split across lines
#760: FILE: drivers/block/floppy.c:3992:
+		       "FDC %d init: 82078 variant with unknown "
+		       "PARTID=%d.\n", fdc, reply_buffer[0] >> 5);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#836: FILE: drivers/block/floppy.c:4507:
+		for (ptr = cfg; *cfg && *cfg != ' ' && *cfg != '\t'; cfg++);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000470875.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 17 warnings, 1 checks, 709 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000470875.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
