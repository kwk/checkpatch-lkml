WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
   http://mirrors.kernel.org/fedora/releases/12/Fedora/source/SRPMS/gcc-4.4.2-7.fc12.src.rpm

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#51: FILE: gcc/c-opts.c:749:
+    case OPT_fprofile_before_prolog:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#52: FILE: gcc/c-opts.c:750:
+      flag_profile_before_prolog = value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#53: FILE: gcc/c-opts.c:751:
+      break;$

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#63: FILE: gcc/c.opt:719:
C ObjC C++ ObjC++

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: gcc/config/i386/i386.c:7498:
+  if (crtl->profile && !crtl->profile_before_prolog)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#82: FILE: gcc/config/i386/i386.c:7498:
+  if (crtl->profile && !crtl->profile_before_prolog)
     return 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: gcc/final.c:1514:
+  if (crtl->profile && crtl->profile_before_prolog)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#111: FILE: gcc/final.c:1514:
+  if (crtl->profile && crtl->profile_before_prolog)
     profile_function (file);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: gcc/final.c:1555:
+  if (crtl->profile && !crtl->profile_before_prolog)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#123: FILE: gcc/final.c:1555:
+  if (crtl->profile && !crtl->profile_before_prolog)
     profile_function (file);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: gcc/final.c:3894:
+  if ((crtl->profile && !crtl->profile_before_prolog) || profile_arc_flag)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#134: FILE: gcc/final.c:3894:
+  if ((crtl->profile && !crtl->profile_before_prolog) || profile_arc_flag)
     return 0;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#161: FILE: gcc/function.c:4366:
+  /* flag_profile_before_prolog: also set ->profile as temporary hack
+     to evade conflict between -pg and -fomit-frame-pointer. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#161: FILE: gcc/function.c:4366:
+     to evade conflict between -pg and -fomit-frame-pointer. */

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#164: FILE: gcc/function.c:4368:
   crtl->profile
+    = ((profile_flag || flag_profile_before_prolog)

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: gcc/function.c:4368:
+    = ((profile_flag || flag_profile_before_prolog)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: gcc/function.c:4370:
+  crtl->profile_before_prolog$

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#167: FILE: gcc/function.c:4371:
+  crtl->profile_before_prolog
+    = (crtl->profile && flag_profile_before_prolog);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: gcc/function.c:4371:
+    = (crtl->profile && flag_profile_before_prolog);$

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#188: FILE: gcc/function.h:5029:
+++ b/gcc/function.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: gcc/function.h:400:
+  bool profile_before_prolog;$

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#208: FILE: gcc/toplev.c:293:
+int flag_profile_before_prolog = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: gcc/toplev.c:1695:
+  flag_profile_before_prolog = 1;$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000032668.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 20 warnings, 2 checks, 144 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000032668.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
