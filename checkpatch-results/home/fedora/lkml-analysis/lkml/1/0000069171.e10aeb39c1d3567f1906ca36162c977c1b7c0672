WARNING:UNKNOWN_COMMIT_ID: Unknown commit id 'd7831a0bdf06b9f722b947bb0c205ff7d77cebd8', maybe rebased or not pulled?
#43: 
> Commit d7831a0bdf06b9f722b947bb0c205ff7d77cebd8 causes disk io regression

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
> My system has 12 disks, each disk has two partitions. System runs fio sequence

WARNING:TYPO_SPELLING: 'partion' may be misspelled - perhaps 'partition'?
#46: 
> write on all partitions, each partion has 8 jobs.
                                ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'Unfortunatelly' may be misspelled - perhaps 'Unfortunately'?
#64: 
> Unfortunatelly I can't figure out a fix for this issue, hopefully
  ^^^^^^^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#86: FILE: fs/fs-writeback.c:31:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#94: FILE: fs/fs-writeback.c:192:
+#define redirty_tail(inode)						\
+	do {								\
+		__redirty_tail(inode, __LINE__);			\
+	} while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#112: FILE: fs/fs-writeback.c:211:
+		printk(KERN_DEBUG "redirty_tail +%d: inode %lu\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#113: FILE: fs/fs-writeback.c:212:
+		printk(KERN_DEBUG "redirty_tail +%d: inode %lu\n",
+				line, inode->i_ino);

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#123: FILE: fs/fs-writeback.c:226:
+#define requeue_io(inode)						\
+	do {								\
+		__requeue_io(inode, __LINE__);				\
+	} while (0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#137: FILE: fs/fs-writeback.c:239:
+		printk(KERN_DEBUG "requeue_io +%d: inode %lu\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#138: FILE: fs/fs-writeback.c:240:
+		printk(KERN_DEBUG "requeue_io +%d: inode %lu\n",
+				line, inode->i_ino);

ERROR:SPACING: space required before the open parenthesis '('
#176: FILE: mm/page-writeback.c:120:
+	if(sysctl_dirty_debug)						\

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#178: FILE: mm/page-writeback.c:122:
+				__FILE__, __LINE__, __FUNCTION__);	\

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#183: FILE: mm/page-writeback.c:127:
+	printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#185: FILE: mm/page-writeback.c:129:
+			"global dirty=%lu writeback=%lu nfs=%lu "
+			"flags=%c%c towrite=%ld skipped=%ld\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#189: FILE: mm/page-writeback.c:133:
+			wbc->encountered_congestion ? 'C':'_',
 			                                 ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#190: FILE: mm/page-writeback.c:134:
+			wbc->more_io ? 'M':'_',
 			                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#196: FILE: mm/page-writeback.c:140:
+void __writeback_debug_report(long n, struct writeback_control *wbc,
+		const char *file, int line, const char *func)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#198: FILE: mm/page-writeback.c:142:
+	printk(KERN_DEBUG "%s %d %s: comm=%s pid=%d n=%ld\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#199: FILE: mm/page-writeback.c:143:
+	printk(KERN_DEBUG "%s %d %s: comm=%s pid=%d n=%ld\n",
+			file, line, func,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#213: FILE: mm/page-writeback.c:584:
+		printk("bdi_nr_reclaimable=%lu, bdi_thresh=%lu, "

WARNING:SPLIT_STRING: quoted string split across lines
#214: FILE: mm/page-writeback.c:585:
+		printk("bdi_nr_reclaimable=%lu, bdi_thresh=%lu, "
+		       "background_thresh=%lu, dirty_thresh=%lu\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#224: FILE: mm/page-writeback.c:707:
+		printk(KERN_DEBUG "throttle_vm_writeout: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'throttle_vm_writeout', this function's name, in a string
#224: FILE: mm/page-writeback.c:707:
+		printk(KERN_DEBUG "throttle_vm_writeout: "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#225: FILE: mm/page-writeback.c:708:
+		printk(KERN_DEBUG "throttle_vm_writeout: "
+				"congestion_wait on %lu+%lu > %lu\n",

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000069171.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 17 warnings, 7 checks, 155 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000069171.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
