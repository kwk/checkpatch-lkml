WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
> The code is based on the info in the Intel Software Developer's Manual Vol 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: arch/x86/kernel/cpu/perf_counter.c:75:
+  [PERF_COUNT_HW_CACHE_REFERENCES]^I= 0x0000,$

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#340: FILE: tools/perf/perf.h:4:
+#if defined(__i386__)

Architecture specific defines should be avoided wherever
possible.

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#342: FILE: tools/perf/perf.h:6:
+#define rmb()		asm volatile("" ::: "memory")

WARNING:MEMORY_BARRIER: memory barrier without comment
#342: FILE: tools/perf/perf.h:6:
+#define rmb()		asm volatile("" ::: "memory")

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#343: FILE: tools/perf/perf.h:7:
+#define cpu_relax()	asm volatile("rep; nop" ::: "memory");

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#343: FILE: tools/perf/perf.h:7:
+#define cpu_relax()	asm volatile("rep; nop" ::: "memory");

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000098906.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 4 warnings, 1 checks, 235 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000098906.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
