WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#58: FILE: include/linux/page_cgroup.h:1:
+#ifndef __LINUX_PAGE_CGROUP_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:CAMELCASE: Avoid CamelCase: <Pcg_CACHE>
#89: FILE: include/linux/page_cgroup.h:32:
+	Pcg_CACHE, /* charged as cache */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Pcg_OBSOLETE>
#90: FILE: include/linux/page_cgroup.h:33:
+	Pcg_OBSOLETE,	/* this page cgroup is invalid (unused) */

CHECK:CAMELCASE: Avoid CamelCase: <Pcg_ACTIVE>
#92: FILE: include/linux/page_cgroup.h:35:
+	Pcg_ACTIVE, /* page is active in this cgroup */

CHECK:CAMELCASE: Avoid CamelCase: <Pcg_FILE>
#93: FILE: include/linux/page_cgroup.h:36:
+	Pcg_FILE, /* page is file system backed */

CHECK:CAMELCASE: Avoid CamelCase: <Pcg_UNEVICTABLE>
#94: FILE: include/linux/page_cgroup.h:37:
+	Pcg_UNEVICTABLE, /* page is unevictableable */

CHECK:CAMELCASE: Avoid CamelCase: <Pcg##uname>
#98: FILE: include/linux/page_cgroup.h:41:
+static inline int Pcg##uname(struct page_cgroup *pc)	\

CHECK:CAMELCASE: Avoid CamelCase: <Pcg_##lname>
#99: FILE: include/linux/page_cgroup.h:42:
+	{ return test_bit(Pcg_##lname, &pc->flags); }

CHECK:CAMELCASE: Avoid CamelCase: <SetPcg##uname>
#102: FILE: include/linux/page_cgroup.h:45:
+static inline void SetPcg##uname(struct page_cgroup *pc)\

CHECK:CAMELCASE: Avoid CamelCase: <ClearPcg##uname>
#106: FILE: include/linux/page_cgroup.h:49:
+static inline void ClearPcg##uname(struct page_cgroup *pc)	\

CHECK:CAMELCASE: Avoid CamelCase: <__SetPcg##uname>
#110: FILE: include/linux/page_cgroup.h:53:
+static inline void __SetPcg##uname(struct page_cgroup *pc)\

CHECK:CAMELCASE: Avoid CamelCase: <__ClearPcg##uname>
#114: FILE: include/linux/page_cgroup.h:57:
+static inline void __ClearPcg##uname(struct page_cgroup *pc)	\

CHECK:CAMELCASE: Avoid CamelCase: <Cache>
#118: FILE: include/linux/page_cgroup.h:61:
+TESTPCGFLAG(Cache, CACHE)

CHECK:CAMELCASE: Avoid CamelCase: <Obsolete>
#122: FILE: include/linux/page_cgroup.h:65:
+TESTPCGFLAG(Obsolete, OBSOLETE);

CHECK:CAMELCASE: Avoid CamelCase: <File>
#126: FILE: include/linux/page_cgroup.h:69:
+TESTPCGFLAG(File, FILE)

CHECK:CAMELCASE: Avoid CamelCase: <Active>
#131: FILE: include/linux/page_cgroup.h:74:
+TESTPCGFLAG(Active, ACTIVE)

CHECK:CAMELCASE: Avoid CamelCase: <Unevictable>
#136: FILE: include/linux/page_cgroup.h:79:
+TESTPCGFLAG(Unevictable, UNEVICTABLE)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#140: FILE: include/linux/page_cgroup.h:83:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#156: FILE: include/linux/page_cgroup.h:99:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000237681.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 1 warnings, 18 checks, 200 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000237681.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
