WARNING:TYPO_SPELLING: 'continous' may be misspelled - perhaps 'continuous'?
#21: 
Subject: [tip:x86/mtrr] x86: print the continous part of fixed mtrrs together
                                       ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
Gitweb:     http://git.kernel.org/tip/d4c90e37a21154c1910b2646e9544bdd32d5bc3a

WARNING:TYPO_SPELLING: 'continous' may be misspelled - perhaps 'continuous'?
#40: 
x86: print the continous part of fixed mtrrs together
               ^^^^^^^^^

WARNING:MISPLACED_INIT: __initdata should be placed after last_fixed_start
#65: FILE: arch/x86/kernel/cpu/mtrr/generic.c:211:
+static unsigned __initdata last_fixed_start;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:MISPLACED_INIT: __initdata should be placed after last_fixed_end
#66: FILE: arch/x86/kernel/cpu/mtrr/generic.c:212:
+static unsigned __initdata last_fixed_end;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#74: FILE: arch/x86/kernel/cpu/mtrr/generic.c:220:
+	printk(KERN_DEBUG "  %05X-%05X %s\n", last_fixed_start,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#75: FILE: arch/x86/kernel/cpu/mtrr/generic.c:221:
+	printk(KERN_DEBUG "  %05X-%05X %s\n", last_fixed_start,
+		last_fixed_end - 1, mtrr_attrib_to_str(last_fixed_type));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#80: FILE: arch/x86/kernel/cpu/mtrr/generic.c:226:
+static void __init update_fixed_last(unsigned base, unsigned end,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#80: FILE: arch/x86/kernel/cpu/mtrr/generic.c:226:
+static void __init update_fixed_last(unsigned base, unsigned end,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#81: FILE: arch/x86/kernel/cpu/mtrr/generic.c:227:
+static void __init update_fixed_last(unsigned base, unsigned end,
+				       mtrr_type type)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#88: FILE: arch/x86/kernel/cpu/mtrr/generic.c:234:
+static void __init print_fixed(unsigned base, unsigned step,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#88: FILE: arch/x86/kernel/cpu/mtrr/generic.c:234:
+static void __init print_fixed(unsigned base, unsigned step,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#117: FILE: arch/x86/kernel/cpu/mtrr/generic.c:262:
+	printk(KERN_DEBUG "MTRR default type: %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#118: FILE: arch/x86/kernel/cpu/mtrr/generic.c:263:
+	printk(KERN_DEBUG "MTRR default type: %s\n",
+			 mtrr_attrib_to_str(mtrr_state.def_type));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#121: FILE: arch/x86/kernel/cpu/mtrr/generic.c:265:
+		printk(KERN_DEBUG "MTRR fixed ranges %sabled:\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#133: FILE: arch/x86/kernel/cpu/mtrr/generic.c:276:
+	printk(KERN_DEBUG "MTRR variable ranges %sabled:\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#139: FILE: arch/x86/kernel/cpu/mtrr/generic.c:281:
+			printk(KERN_DEBUG "  %u base %0*X%05X000 mask %0*X%05X000 %s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#148: FILE: arch/x86/kernel/cpu/mtrr/generic.c:291:
+			printk(KERN_DEBUG "  %u disabled\n", i);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#152: FILE: arch/x86/kernel/cpu/mtrr/generic.c:294:
+		printk(KERN_DEBUG "TOM2: %016llx aka %lldM\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: arch/x86/kernel/cpu/mtrr/generic.c:295:
+		printk(KERN_DEBUG "TOM2: %016llx aka %lldM\n",
 				  mtrr_tom2, mtrr_tom2>>20);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000154768.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 16 warnings, 4 checks, 93 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000154768.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
