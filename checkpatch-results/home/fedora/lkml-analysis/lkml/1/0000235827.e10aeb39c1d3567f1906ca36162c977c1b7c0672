WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#37: 
 arch/x86/kernel/{apic_32.c => apic.c} |    0 

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4696: FILE: arch/x86/kernel/apic.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/atomic.h> instead of <asm/atomic.h>
#4729: FILE: arch/x86/kernel/apic.c:34:
+#include <asm/atomic.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/smp.h> instead of <asm/smp.h>
#4730: FILE: arch/x86/kernel/apic.c:35:
+#include <asm/smp.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/nmi.h> instead of <asm/nmi.h>
#4738: FILE: arch/x86/kernel/apic.c:43:
+#include <asm/nmi.h>

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4771: FILE: arch/x86/kernel/apic.c:76:
+}
+early_param("lapic", parse_lapic);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#4785: FILE: arch/x86/kernel/apic.c:90:
+__setup("apicpmtimer", setup_apicpmtimer);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4803: FILE: arch/x86/kernel/apic.c:108:
+}
+early_param("nox2apic", setup_nox2apic);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#4816: FILE: arch/x86/kernel/apic.c:121:
+char system_vectors[NR_VECTORS] = { [0 ... NR_VECTORS-1] = SYS_VECTOR_FREE};
                                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4856: FILE: arch/x86/kernel/apic.c:161:
+};
+static DEFINE_PER_CPU(struct clock_event_device, lapic_events);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#4913: FILE: arch/x86/kernel/apic.c:218:
+		udelay(100);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:RETURN_VOID: void function return statements are not generally useful
#4952: FILE: arch/x86/kernel/apic.c:257:
+	return;
+}

CHECK:SPACING: No space is necessary after a cast
#4962: FILE: arch/x86/kernel/apic.c:267:
+	wrmsrl(APIC_BASE_MSR + (APIC_ICR >> 4), ((__u64) id) << 32 | low);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5066: FILE: arch/x86/kernel/apic.c:371:
+	apic_write(APIC_TDCR,
+		(tmp_value & ~(APIC_TDR_DIV_1 | APIC_TDR_DIV_TMBASE)) |

WARNING:TYPO_SPELLING: 'initilized' may be misspelled - perhaps 'initialized'?
#5163: FILE: arch/x86/kernel/apic.c:468:
+ * Setup the local APIC timer for this CPU. Copy the initilized values
                                                      ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#5194: FILE: arch/x86/kernel/apic.c:499:
+	unsigned apic, apic_start;

CHECK:BRACES: Unbalanced braces around else statement
#5215: FILE: arch/x86/kernel/apic.c:520:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5232: FILE: arch/x86/kernel/apic.c:537:
+	printk(KERN_DEBUG "APIC timer calibration result %d\n", result);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#5234: FILE: arch/x86/kernel/apic.c:539:
+	printk(KERN_INFO "Detected %d.%03d MHz APIC timer.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5235: FILE: arch/x86/kernel/apic.c:540:
+	printk(KERN_INFO "Detected %d.%03d MHz APIC timer.\n",
+		result / 1000 / 1000, result / 1000 % 1000);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5251: FILE: arch/x86/kernel/apic.c:556:
+		printk(KERN_WARNING

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#5281: FILE: arch/x86/kernel/apic.c:586:
+#define LAPIC_CAL_LOOPS		(HZ/10)
                        		   ^

WARNING:MISPLACED_INIT: __initdata should be placed after lapic_cal_loops
#5283: FILE: arch/x86/kernel/apic.c:588:
+static __initdata int lapic_cal_loops = -1;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#5323: FILE: arch/x86/kernel/apic.c:628:
+	const long pm_100ms = PMTMR_TICKS_PER_SEC/10;
 	                                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#5324: FILE: arch/x86/kernel/apic.c:629:
+	const long pm_thresh = pm_100ms/100;
 	                               ^

CHECK:SPACING: No space is necessary after a cast
#5371: FILE: arch/x86/kernel/apic.c:676:
+			res = (((u64) deltapm) *  mult) >> 22;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5373: FILE: arch/x86/kernel/apic.c:678:
+			printk(KERN_WARNING "APIC calibration not consistent "

WARNING:SPLIT_STRING: quoted string split across lines
#5374: FILE: arch/x86/kernel/apic.c:679:
+			printk(KERN_WARNING "APIC calibration not consistent "
+			       "with PM Timer: %ldms instead of 100ms\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#5377: FILE: arch/x86/kernel/apic.c:682:
+			res = (((u64) delta) * pm_100ms);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#5379: FILE: arch/x86/kernel/apic.c:684:
+			printk(KERN_INFO "APIC delta adjusted to PM-Timer: "

CHECK:SPACING: No space is necessary after a cast
#5380: FILE: arch/x86/kernel/apic.c:685:
+			       "%lu (%ld)\n", (unsigned long) res, delta);

WARNING:SPLIT_STRING: quoted string split across lines
#5380: FILE: arch/x86/kernel/apic.c:685:
+			printk(KERN_INFO "APIC delta adjusted to PM-Timer: "
+			       "%lu (%ld)\n", (unsigned long) res, delta);

CHECK:SPACING: No space is necessary after a cast
#5381: FILE: arch/x86/kernel/apic.c:686:
+			delta = (long) res;

WARNING:SPLIT_STRING: quoted string split across lines
#5404: FILE: arch/x86/kernel/apic.c:709:
+		apic_printk(APIC_VERBOSE, "..... CPU clock speed is "
+			    "%ld.%04ld MHz.\n",

WARNING:SPLIT_STRING: quoted string split across lines
#5410: FILE: arch/x86/kernel/apic.c:715:
+	apic_printk(APIC_VERBOSE, "..... host bus clock speed is "
+		    "%u.%04u MHz.\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5419: FILE: arch/x86/kernel/apic.c:724:
+		printk(KERN_WARNING

CHECK:BRACES: braces {} should be used on all arms of this statement
#5427: FILE: arch/x86/kernel/apic.c:732:
+	if (!pm_referenced) {
[...]
+	} else
[...]

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#5455: FILE: arch/x86/kernel/apic.c:760:
+		if (deltaj >= LAPIC_CAL_LOOPS-2 && deltaj <= LAPIC_CAL_LOOPS+2)
 		                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5455: FILE: arch/x86/kernel/apic.c:760:
+		if (deltaj >= LAPIC_CAL_LOOPS-2 && deltaj <= LAPIC_CAL_LOOPS+2)
 		                                                            ^

CHECK:BRACES: Unbalanced braces around else statement
#5459: FILE: arch/x86/kernel/apic.c:764:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5463: FILE: arch/x86/kernel/apic.c:768:
+		printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#5487: FILE: arch/x86/kernel/apic.c:792:
+		printk(KERN_INFO "Disabling APIC timer\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5514: FILE: arch/x86/kernel/apic.c:819:
+		printk(KERN_WARNING "APIC timer registered as dummy,"

WARNING:SPLIT_STRING: quoted string split across lines
#5515: FILE: arch/x86/kernel/apic.c:820:
+		printk(KERN_WARNING "APIC timer registered as dummy,"
+			" due to nmi_watchdog=%d!\n", nmi_watchdog);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5546: FILE: arch/x86/kernel/apic.c:851:
+		printk(KERN_WARNING

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5727: FILE: arch/x86/kernel/apic.c:1032:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <sync_Arb_IDs>
#5795: FILE: arch/x86/kernel/apic.c:1100:
+void __init sync_Arb_IDs(void)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'boot_cpu_data.x86_vendor == X86_VENDOR_INTEL'
#5842: FILE: arch/x86/kernel/apic.c:1147:
+	if ((boot_cpu_data.x86_vendor == X86_VENDOR_INTEL) &&
+	    (boot_cpu_data.x86 == 15))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'boot_cpu_data.x86 == 15'
#5842: FILE: arch/x86/kernel/apic.c:1147:
+	if ((boot_cpu_data.x86_vendor == X86_VENDOR_INTEL) &&
+	    (boot_cpu_data.x86 == 15))

WARNING:LINE_SPACING: Missing a blank line after declarations
#5864: FILE: arch/x86/kernel/apic.c:1169:
+	unsigned long oldvalue, value, maxlvt;
+	if (lapic_is_integrated() && !esr_disable) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#5872: FILE: arch/x86/kernel/apic.c:1177:
+			printk(KERN_INFO "Leaving ESR disabled.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#5892: FILE: arch/x86/kernel/apic.c:1197:
+			apic_printk(APIC_VERBOSE, "ESR value before enabling "
+				"vector: 0x%08lx  after: 0x%08lx\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#5895: FILE: arch/x86/kernel/apic.c:1200:
+		printk(KERN_INFO "No ESR for 82489DX.\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5899: FILE: arch/x86/kernel/apic.c:1204:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#5925: FILE: arch/x86/kernel/apic.c:1230:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:TYPO_SPELLING: 'ExtInt' may be misspelled - perhaps 'Extinct'?
#5948: FILE: arch/x86/kernel/apic.c:1253:
+	 * interrupt came from i8259 as ExtInt. LAPIC did not get EOI so it
 	                                ^^^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#5954: FILE: arch/x86/kernel/apic.c:1259:
+		value = apic_read(APIC_ISR + i*0x10);
 		                              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#5956: FILE: arch/x86/kernel/apic.c:1261:
+			if (value & (1<<j))
 			              ^

WARNING:TYPO_SPELLING: 'ExtINT' may be misspelled - perhaps 'Extinct'?
#6019: FILE: arch/x86/kernel/apic.c:1324:
+		apic_printk(APIC_VERBOSE, "enabled ExtINT on CPU#%d\n",
 		                                   ^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6020: FILE: arch/x86/kernel/apic.c:1325:
+		apic_printk(APIC_VERBOSE, "enabled ExtINT on CPU#%d\n",
+				smp_processor_id());

WARNING:TYPO_SPELLING: 'ExtINT' may be misspelled - perhaps 'Extinct'?
#6023: FILE: arch/x86/kernel/apic.c:1328:
+		apic_printk(APIC_VERBOSE, "masked ExtINT on CPU#%d\n",
 		                                  ^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6024: FILE: arch/x86/kernel/apic.c:1329:
+		apic_printk(APIC_VERBOSE, "masked ExtINT on CPU#%d\n",
+				smp_processor_id());

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#6068: FILE: arch/x86/kernel/apic.c:1373:
+		printk("x2apic enabled by BIOS, switching to x2apic ops\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#6069: FILE: arch/x86/kernel/apic.c:1374:
+		x2apic_preenabled = x2apic = 1;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#6080: FILE: arch/x86/kernel/apic.c:1385:
+		printk("Enabling x2apic\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6095: FILE: arch/x86/kernel/apic.c:1400:
+		printk(KERN_INFO

WARNING:SPLIT_STRING: quoted string split across lines
#6097: FILE: arch/x86/kernel/apic.c:1402:
+		       "Skipped enabling x2apic and Interrupt-remapping "
+		       "because of nox2apic\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6105: FILE: arch/x86/kernel/apic.c:1410:
+		printk(KERN_INFO

WARNING:SPLIT_STRING: quoted string split across lines
#6107: FILE: arch/x86/kernel/apic.c:1412:
+		       "Skipped enabling x2apic and Interrupt-remapping "
+		       "because of skipping io-apic setup\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6113: FILE: arch/x86/kernel/apic.c:1418:
+		printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6119: FILE: arch/x86/kernel/apic.c:1424:
+			printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6157: FILE: arch/x86/kernel/apic.c:1462:
+			printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6160: FILE: arch/x86/kernel/apic.c:1465:
+			printk(KERN_INFO

CHECK:BRACES: Unbalanced braces around else statement
#6162: FILE: arch/x86/kernel/apic.c:1467:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#6163: FILE: arch/x86/kernel/apic.c:1468:
+		printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#6171: FILE: arch/x86/kernel/apic.c:1476:
+		panic("x2apic enabled prior OS handover,"
+		      " enable CONFIG_INTR_REMAP");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6173: FILE: arch/x86/kernel/apic.c:1478:
+	printk(KERN_INFO "Enable CONFIG_INTR_REMAP for enabling intr-remapping "

WARNING:SPLIT_STRING: quoted string split across lines
#6174: FILE: arch/x86/kernel/apic.c:1479:
+	printk(KERN_INFO "Enable CONFIG_INTR_REMAP for enabling intr-remapping "
+	       " and x2apic\n");

WARNING:RETURN_VOID: void function return statements are not generally useful
#6178: FILE: arch/x86/kernel/apic.c:1483:
+	return;
+}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6191: FILE: arch/x86/kernel/apic.c:1496:
+		printk(KERN_INFO "No local APIC present\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'boot_cpu_data.x86 == 15'
#6213: FILE: arch/x86/kernel/apic.c:1518:
+		if ((boot_cpu_data.x86 == 6 && boot_cpu_data.x86_model > 1) ||
+		    (boot_cpu_data.x86 == 15))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6232: FILE: arch/x86/kernel/apic.c:1537:
+			printk(KERN_INFO "Local APIC disabled by BIOS -- "

WARNING:SPLIT_STRING: quoted string split across lines
#6233: FILE: arch/x86/kernel/apic.c:1538:
+			printk(KERN_INFO "Local APIC disabled by BIOS -- "
+			       "you can enable it with \"lapic\"\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6243: FILE: arch/x86/kernel/apic.c:1548:
+			printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#6257: FILE: arch/x86/kernel/apic.c:1562:
+		printk(KERN_WARNING "Could not enable APIC!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6268: FILE: arch/x86/kernel/apic.c:1573:
+	printk(KERN_INFO "Found and enabled local APIC!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6275: FILE: arch/x86/kernel/apic.c:1580:
+	printk(KERN_INFO "No local APIC present or hardware disabled\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#6323: FILE: arch/x86/kernel/apic.c:1628:
+	if (!smp_found_config && detect_init_APIC()) {
[...]
+	} else
[...]

CHECK:SPACING: No space is necessary after a cast
#6324: FILE: arch/x86/kernel/apic.c:1629:
+		apic_phys = (unsigned long) alloc_bootmem_pages(PAGE_SIZE);

CHECK:BRACES: Unbalanced braces around else statement
#6326: FILE: arch/x86/kernel/apic.c:1631:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6331: FILE: arch/x86/kernel/apic.c:1636:
+	apic_printk(APIC_VERBOSE, "mapped APIC to %16lx (%16lx)\n",
+				APIC_BASE, apic_phys);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6351: FILE: arch/x86/kernel/apic.c:1656:
+		printk(KERN_INFO "Apic disabled\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6356: FILE: arch/x86/kernel/apic.c:1661:
+		printk(KERN_INFO "Apic disabled by BIOS\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#6368: FILE: arch/x86/kernel/apic.c:1673:
+		printk(KERN_ERR "BIOS bug, local APIC #%d not detected!...\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6466: FILE: arch/x86/kernel/apic.c:1771:
+	printk(KERN_INFO "spurious APIC interrupt on CPU#%d, "

WARNING:SPLIT_STRING: quoted string split across lines
#6467: FILE: arch/x86/kernel/apic.c:1772:
+	printk(KERN_INFO "spurious APIC interrupt on CPU#%d, "
+	       "should never happen.\n", smp_processor_id());

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6496: FILE: arch/x86/kernel/apic.c:1801:
+	/* Here is what the APIC error bits mean:
+	   0: Send CS error

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#6505: FILE: arch/x86/kernel/apic.c:1810:
+	printk(KERN_DEBUG "APIC error on CPU%d: %02x(%02x)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6506: FILE: arch/x86/kernel/apic.c:1811:
+	printk(KERN_DEBUG "APIC error on CPU%d: %02x(%02x)\n",
+		smp_processor_id(), v , v1);

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#6506: FILE: arch/x86/kernel/apic.c:1811:
+		smp_processor_id(), v , v1);
 		                      ^

WARNING:SPLIT_STRING: quoted string split across lines
#6526: FILE: arch/x86/kernel/apic.c:1831:
+		apic_printk(APIC_VERBOSE, "leaving PIC mode, "
+				"enabling APIC mode.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#6554: FILE: arch/x86/kernel/apic.c:1859:
+		apic_printk(APIC_VERBOSE, "disabling APIC mode, "
+				"entering PIC mode.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#6609: FILE: arch/x86/kernel/apic.c:1914:
+		printk(KERN_WARNING "BIOS bug, APIC version is 0 for CPU#%d! "

WARNING:SPLIT_STRING: quoted string split across lines
#6610: FILE: arch/x86/kernel/apic.c:1915:
+		printk(KERN_WARNING "BIOS bug, APIC version is 0 for CPU#%d! "
+				"fixing up to 0x10. (tell your hw vendor)\n",

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#6616: FILE: arch/x86/kernel/apic.c:1921:
+	if (num_processors >= NR_CPUS) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#6617: FILE: arch/x86/kernel/apic.c:1922:
+		printk(KERN_WARNING "WARNING: NR_CPUS limit of %i reached."

WARNING:SPLIT_STRING: quoted string split across lines
#6618: FILE: arch/x86/kernel/apic.c:1923:
+		printk(KERN_WARNING "WARNING: NR_CPUS limit of %i reached."
+			"  Processor ignored.\n", NR_CPUS);

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#6618: FILE: arch/x86/kernel/apic.c:1923:
+			"  Processor ignored.\n", NR_CPUS);

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#6653: FILE: arch/x86/kernel/apic.c:1958:
+			/* If P4 and above fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#6861: FILE: arch/x86/kernel/apic.c:2166:
+	unsigned id;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'boot_cpu_data.x86_vendor == X86_VENDOR_AMD'
#6871: FILE: arch/x86/kernel/apic.c:2176:
+	if ((boot_cpu_data.x86_vendor == X86_VENDOR_AMD) && !is_vsmp_box())

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#6877: FILE: arch/x86/kernel/apic.c:2182:
+	for (i = 0; i < NR_CPUS; i++) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#6879: FILE: arch/x86/kernel/apic.c:2184:
+		if (bios_cpu_apicid) {
[...]
+		else if (i < nr_cpu_ids) {
[...]
+		else
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#6882: FILE: arch/x86/kernel/apic.c:2187:
+		}
+		else if (i < nr_cpu_ids) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#6888: FILE: arch/x86/kernel/apic.c:2193:
+		}
+		else

CHECK:BRACES: braces {} should be used on all arms of this statement
#6904: FILE: arch/x86/kernel/apic.c:2209:
+		if (test_bit(i, clustermap)) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#6907: FILE: arch/x86/kernel/apic.c:2212:
+		} else

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#6935: FILE: arch/x86/kernel/apic.c:2240:
+}
+early_param("disableapic", setup_disableapic);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#6942: FILE: arch/x86/kernel/apic.c:2247:
+}
+early_param("nolapic", setup_nolapic);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#6949: FILE: arch/x86/kernel/apic.c:2254:
+}
+early_param("lapic_timer_c2_ok", parse_lapic_timer_c2_ok);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#6956: FILE: arch/x86/kernel/apic.c:2261:
+}
+early_param("noapictimer", parse_disable_apic_timer);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#6963: FILE: arch/x86/kernel/apic.c:2268:
+}
+early_param("nolapic_timer", parse_nolapic_timer);

CHECK:BRACES: braces {} should be used on all arms of this statement
#6975: FILE: arch/x86/kernel/apic.c:2280:
+	if (strcmp("debug", arg) == 0)
[...]
+	else if (strcmp("verbose", arg) == 0)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#6979: FILE: arch/x86/kernel/apic.c:2284:
+	else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#6980: FILE: arch/x86/kernel/apic.c:2285:
+		printk(KERN_WARNING "APIC Verbosity level %s not recognised"

WARNING:SPLIT_STRING: quoted string split across lines
#6981: FILE: arch/x86/kernel/apic.c:2286:
+		printk(KERN_WARNING "APIC Verbosity level %s not recognised"
+			" use apic=verbose or apic=debug\n", arg);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#6987: FILE: arch/x86/kernel/apic.c:2292:
+}
+early_param("apic", apic_set_verbosity);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000235827.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 72 warnings, 53 checks, 2319 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000235827.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
