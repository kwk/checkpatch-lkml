WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
> I've recently encountered a problem which could be a bug in the nfs implementation.

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#99: FILE: fs/nfs/inode.c:350:
+#define NFS_VALID_ATTRS (ATTR_MODE|ATTR_UID|ATTR_GID|ATTR_SIZE|ATTR_ATIME|ATTR_ATIME_SET|ATTR_MTIME|ATTR_MTIME_SET|ATTR_FILE)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#99: FILE: fs/nfs/inode.c:350:
+#define NFS_VALID_ATTRS (ATTR_MODE|ATTR_UID|ATTR_GID|ATTR_SIZE|ATTR_ATIME|ATTR_ATIME_SET|ATTR_MTIME|ATTR_MTIME_SET|ATTR_FILE)
                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#99: FILE: fs/nfs/inode.c:350:
+#define NFS_VALID_ATTRS (ATTR_MODE|ATTR_UID|ATTR_GID|ATTR_SIZE|ATTR_ATIME|ATTR_ATIME_SET|ATTR_MTIME|ATTR_MTIME_SET|ATTR_FILE)
                                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#99: FILE: fs/nfs/inode.c:350:
+#define NFS_VALID_ATTRS (ATTR_MODE|ATTR_UID|ATTR_GID|ATTR_SIZE|ATTR_ATIME|ATTR_ATIME_SET|ATTR_MTIME|ATTR_MTIME_SET|ATTR_FILE)
                                                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#99: FILE: fs/nfs/inode.c:350:
+#define NFS_VALID_ATTRS (ATTR_MODE|ATTR_UID|ATTR_GID|ATTR_SIZE|ATTR_ATIME|ATTR_ATIME_SET|ATTR_MTIME|ATTR_MTIME_SET|ATTR_FILE)
                                                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#99: FILE: fs/nfs/inode.c:350:
+#define NFS_VALID_ATTRS (ATTR_MODE|ATTR_UID|ATTR_GID|ATTR_SIZE|ATTR_ATIME|ATTR_ATIME_SET|ATTR_MTIME|ATTR_MTIME_SET|ATTR_FILE)
                                                                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#99: FILE: fs/nfs/inode.c:350:
+#define NFS_VALID_ATTRS (ATTR_MODE|ATTR_UID|ATTR_GID|ATTR_SIZE|ATTR_ATIME|ATTR_ATIME_SET|ATTR_MTIME|ATTR_MTIME_SET|ATTR_FILE)
                                                                                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#99: FILE: fs/nfs/inode.c:350:
+#define NFS_VALID_ATTRS (ATTR_MODE|ATTR_UID|ATTR_GID|ATTR_SIZE|ATTR_ATIME|ATTR_ATIME_SET|ATTR_MTIME|ATTR_MTIME_SET|ATTR_FILE)
                                                                                                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#99: FILE: fs/nfs/inode.c:350:
+#define NFS_VALID_ATTRS (ATTR_MODE|ATTR_UID|ATTR_GID|ATTR_SIZE|ATTR_ATIME|ATTR_ATIME_SET|ATTR_MTIME|ATTR_MTIME_SET|ATTR_FILE)
                                                                                                                   ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#238: FILE: fs/nfs/nfs4proc.c:1659:
+	if (cred == NULL) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cred"
#238: FILE: fs/nfs/nfs4proc.c:1659:
+	if (cred == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: Unbalanced braces around else statement
#242: FILE: fs/nfs/nfs4proc.c:1663:
+	} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ctx"
#251: FILE: fs/nfs/nfs4proc.c:1669:
+		if (ctx != NULL)

WARNING:SPACING: Unnecessary space before function pointer arguments
#322: FILE: include/linux/nfs_xdr.h:795:
+	int	(*setattr) (struct dentry *, struct rpc_cred *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#322: FILE: include/linux/nfs_xdr.h:795:
+	int	(*setattr) (struct dentry *, struct rpc_cred *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rpc_cred *' should also have an identifier name
#322: FILE: include/linux/nfs_xdr.h:795:
+	int	(*setattr) (struct dentry *, struct rpc_cred *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfs_fattr *' should also have an identifier name
#322: FILE: include/linux/nfs_xdr.h:795:
+	int	(*setattr) (struct dentry *, struct rpc_cred *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct iattr *' should also have an identifier name
#322: FILE: include/linux/nfs_xdr.h:795:
+	int	(*setattr) (struct dentry *, struct rpc_cred *,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000268828.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 12 checks, 201 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000268828.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
