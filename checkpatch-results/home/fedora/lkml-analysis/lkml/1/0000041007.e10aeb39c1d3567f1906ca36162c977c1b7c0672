WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
Gitweb:     http://git.kernel.org/tip/50656eec82684d03add0f4f4b4875a20bd8f9755

WARNING:BAD_SIGN_OFF: Duplicate signature
#68: 
Cc: Frederic Weisbecker <fweisbec@gmail.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#394: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#399: FILE: tools/perf/util/probe-event.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#415: FILE: tools/perf/util/probe-event.c:17:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#416: FILE: tools/perf/util/probe-event.c:18:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pp->file"
#465: FILE: tools/perf/util/probe-event.c:67:
+	DIE_IF(pp->file == NULL && pp->function == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pp->function"
#465: FILE: tools/perf/util/probe-event.c:67:
+	DIE_IF(pp->file == NULL && pp->function == NULL);

WARNING:TYPO_SPELLING: 'charactor' may be misspelled - perhaps 'character'?
#480: FILE: tools/perf/util/probe-event.c:82:
+				semantic_error("There is non-digit charactor"
 				                                   ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPLIT_STRING: quoted string split across lines
#481: FILE: tools/perf/util/probe-event.c:83:
+				semantic_error("There is non-digit charactor"
+						" in line number.");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'charactor' may be misspelled - perhaps 'character'?
#486: FILE: tools/perf/util/probe-event.c:88:
+				semantic_error("There is non-digit charactor"
 				                                   ^^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#487: FILE: tools/perf/util/probe-event.c:89:
+				semantic_error("There is non-digit charactor"
+						" in offset.");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pp->file"
#493: FILE: tools/perf/util/probe-event.c:95:
+			DIE_IF(pp->file == NULL);

WARNING:SPLIT_STRING: quoted string split across lines
#496: FILE: tools/perf/util/probe-event.c:98:
+				semantic_error("@SRC must be the last "
+					       "option.");

CHECK:BRACES: braces {} should be used on all arms of this statement
#499: FILE: tools/perf/util/probe-event.c:101:
+			if (strcmp(arg, "return") == 0) {
[...]
+			} else	/* Others not supported yet */
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#501: FILE: tools/perf/util/probe-event.c:103:
+			} else	/* Others not supported yet */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!argv[argc]"
#556: FILE: tools/perf/util/probe-event.c:158:
+			if (argv[argc] == NULL)

WARNING:SPLIT_STRING: quoted string split across lines
#585: FILE: tools/perf/util/probe-event.c:187:
+				semantic_error("You can't specify local"
+						" variable for kretprobe");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#597: FILE: tools/perf/util/probe-event.c:199:
+	pp->probes[0] = buf = zalloc(MAX_CMDLEN);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SPLIT_STRING: quoted string split across lines
#647: FILE: tools/perf/util/probe-event.c:249:
+			die("kprobe_events file does not exist -"
+			    " please rebuild with CONFIG_KPROBE_TRACER.");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#657: FILE: tools/perf/util/probe-event.c:259:
+			snprintf(buf, MAX_CMDLEN, "%c:%s/%s_%x %s\n",
+				pp->retprobe ? 'r' : 'p', PERFPROBE_GROUP,

CHECK:BRACES: Unbalanced braces around else statement
#660: FILE: tools/perf/util/probe-event.c:262:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#663: FILE: tools/perf/util/probe-event.c:265:
+				snprintf(buf, MAX_CMDLEN, "%c:%s/%s_%x_%d %s\n",
+					pp->retprobe ? 'r' : 'p',

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#678: FILE: tools/perf/util/probe-event.h:1:
+#ifndef _PROBE_EVENT_H

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#683: FILE: tools/perf/util/probe-event.h:6:
+extern int parse_perf_probe_event(const char *str, struct probe_point *pp);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#684: FILE: tools/perf/util/probe-event.h:7:
+extern int synthesize_trace_kprobe_event(struct probe_point *pp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#685: FILE: tools/perf/util/probe-event.h:8:
+extern void add_trace_kprobe_events(struct probe_point *probes, int nr_probes);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000041007.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 12 warnings, 13 checks, 582 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000041007.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
