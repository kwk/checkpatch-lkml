WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
#if defined(CONFIG_TCP_ZERO_COPY_TRANSFER_COMPLETION_NOTIFICATION),

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#80: 
You can find how it used in the iSCSI-SCST patch (number 21 in this series).

WARNING:TABSTOP: Statements should start on a tabstop
#143: FILE: include/linux/mm_types.h:104:
+	 void *net_priv;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#172: FILE: include/linux/net.h:365:
+extern int net_set_get_put_page_callbacks(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#172: FILE: include/linux/net.h:365:
+extern int net_set_get_put_page_callbacks(

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#186: FILE: include/linux/net.h:379:
+}
+static inline void net_put_page(struct page *page)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#197: FILE: include/linux/net.h:390:
+}
+static inline void net_put_page(struct page *page)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#352: FILE: net/ipv4/tcp_zero_copy.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#371: FILE: net/ipv4/tcp_zero_copy.c:20:
+/*
+ * Caller of this function must ensure that at the moment when it's called

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#376: FILE: net/ipv4/tcp_zero_copy.c:25:
+int net_set_get_put_page_callbacks(

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'net_get_page_callback != NULL'
#382: FILE: net/ipv4/tcp_zero_copy.c:31:
+	if ((net_get_page_callback != NULL) && (get_callback != NULL) &&
+	    (net_get_page_callback != get_callback)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'get_callback != NULL'
#382: FILE: net/ipv4/tcp_zero_copy.c:31:
+	if ((net_get_page_callback != NULL) && (get_callback != NULL) &&
+	    (net_get_page_callback != get_callback)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'net_get_page_callback != get_callback'
#382: FILE: net/ipv4/tcp_zero_copy.c:31:
+	if ((net_get_page_callback != NULL) && (get_callback != NULL) &&
+	    (net_get_page_callback != get_callback)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "net_get_page_callback"
#382: FILE: net/ipv4/tcp_zero_copy.c:31:
+	if ((net_get_page_callback != NULL) && (get_callback != NULL) &&

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "get_callback"
#382: FILE: net/ipv4/tcp_zero_copy.c:31:
+	if ((net_get_page_callback != NULL) && (get_callback != NULL) &&

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'net_put_page_callback != NULL'
#388: FILE: net/ipv4/tcp_zero_copy.c:37:
+	if ((net_put_page_callback != NULL) && (put_callback != NULL) &&
+	    (net_put_page_callback != put_callback)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'put_callback != NULL'
#388: FILE: net/ipv4/tcp_zero_copy.c:37:
+	if ((net_put_page_callback != NULL) && (put_callback != NULL) &&
+	    (net_put_page_callback != put_callback)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'net_put_page_callback != put_callback'
#388: FILE: net/ipv4/tcp_zero_copy.c:37:
+	if ((net_put_page_callback != NULL) && (put_callback != NULL) &&
+	    (net_put_page_callback != put_callback)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "net_put_page_callback"
#388: FILE: net/ipv4/tcp_zero_copy.c:37:
+	if ((net_put_page_callback != NULL) && (put_callback != NULL) &&

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "put_callback"
#388: FILE: net/ipv4/tcp_zero_copy.c:37:
+	if ((net_put_page_callback != NULL) && (put_callback != NULL) &&

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#420: FILE: net/Kconfig:62:
+config TCP_ZERO_COPY_TRANSFER_COMPLETION_NOTIFICATION
+	bool "TCP/IP zero-copy transfer completion notification"
+        depends on INET
+        default SCST_ISCSI
+	---help---
+	  Adds support for sending a notification upon completion of a
+          zero-copy TCP/IP transfer. This can speed up certain TCP/IP
+          software. Currently this is only used by the iSCSI target driver
+          iSCSI-SCST.
+
+          If unsure, say N.
+

Kconfig symbols should have a help text which fully describes
it.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000193960.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 15 checks, 258 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000193960.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
