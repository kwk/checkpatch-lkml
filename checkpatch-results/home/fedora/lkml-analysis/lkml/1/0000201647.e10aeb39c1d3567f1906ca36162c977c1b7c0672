WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
invalidation of pages marked with PG_fscache (aka PG_private_2) and waiting for

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#152: FILE: fs/nfs/fscache.c:349:
+		BUG_ON(!nfsi->fscache);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#173: FILE: fs/nfs/fscache.c:370:
+	BUG_ON(!nfsi->fscache);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#180: FILE: fs/nfs/fscache.c:377:
+	BUG_ON(!PageLocked(page));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#193: FILE: fs/nfs/fscache.h:86:
+extern void __nfs_fscache_invalidate_page(struct page *, struct inode *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#193: FILE: fs/nfs/fscache.h:86:
+extern void __nfs_fscache_invalidate_page(struct page *, struct inode *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#193: FILE: fs/nfs/fscache.h:86:
+extern void __nfs_fscache_invalidate_page(struct page *, struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#194: FILE: fs/nfs/fscache.h:87:
+extern int nfs_fscache_release_page(struct page *, gfp_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#194: FILE: fs/nfs/fscache.h:87:
+extern int nfs_fscache_release_page(struct page *, gfp_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gfp_t' should also have an identifier name
#194: FILE: fs/nfs/fscache.h:87:
+extern int nfs_fscache_release_page(struct page *, gfp_t);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#207: FILE: fs/nfs/fscache.h:100:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#219: FILE: fs/nfs/fscache.h:126:
+}
+static inline void nfs_fscache_invalidate_page(struct page *page,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000201647.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 4 checks, 156 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000201647.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
