WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#97: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#102: FILE: drivers/pci/iov.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#103: FILE: drivers/pci/iov.c:2:
+ * drivers/pci/iov.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#118: FILE: drivers/pci/iov.c:17:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'field' may be better as '(field)' to avoid precedence issues
#119: FILE: drivers/pci/iov.c:18:
+#define pci_iov_attr(field)					\
+static ssize_t iov_##field##_show(struct device *dev,		\
+		struct device_attribute *attr, char *buf)	\
+{								\
+	struct pci_dev *pdev = to_pci_dev(dev);			\
+	return sprintf(buf, "%d\n", pdev->iov->field);		\
+}

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#157: FILE: drivers/pci/iov.c:56:
+	BUG_ON(!virtfn->bus);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#193: FILE: drivers/pci/iov.c:92:
+		BUG_ON(rc);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#215: FILE: drivers/pci/iov.c:114:
+	BUG_ON(!bus);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#217: FILE: drivers/pci/iov.c:116:
+	BUG_ON(!virtfn);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#253: FILE: drivers/pci/iov.c:152:
+		BUG_ON(!child);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#342: FILE: drivers/pci/iov.c:241:
+static ssize_t iov_set_nr_virtfn(struct device *dev,
+			struct device_attribute *attr,

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#349: FILE: drivers/pci/iov.c:248:
+	rc = strict_strtol(buf, 0, &nr_virtfn);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'iov_total_show' to 'total_virtfn_show'
#367: FILE: drivers/pci/iov.c:266:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#369: FILE: drivers/pci/iov.c:268:
+static DEVICE_ATTR(total_virtfn, S_IRUGO, iov_total_show, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'iov_initial_show' to 'initial_virtfn_show'
#370: FILE: drivers/pci/iov.c:269:
+static DEVICE_ATTR(initial_virtfn, S_IRUGO, iov_initial_show, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#370: FILE: drivers/pci/iov.c:269:
+static DEVICE_ATTR(initial_virtfn, S_IRUGO, iov_initial_show, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'iov_nr_virtfn_show' to 'nr_virtfn_show' 'iov_set_nr_virtfn' to 'nr_virtfn_store'
#371: FILE: drivers/pci/iov.c:270:
+static DEVICE_ATTR(nr_virtfn, S_IWUSR | S_IRUGO,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#371: FILE: drivers/pci/iov.c:270:
+static DEVICE_ATTR(nr_virtfn, S_IWUSR | S_IRUGO,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#520: FILE: drivers/pci/iov.c:419:
+	BUG_ON(!dev->iov);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#685: FILE: drivers/pci/pci.h:201:
+extern int pci_iov_init(struct pci_dev *dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#686: FILE: drivers/pci/pci.h:202:
+extern void pci_iov_release(struct pci_dev *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#687: FILE: drivers/pci/pci.h:203:
+extern int pci_iov_resource_bar(struct pci_dev *dev, int resno,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#689: FILE: drivers/pci/pci.h:205:
+extern int pci_iov_register(struct pci_dev *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#690: FILE: drivers/pci/pci.h:206:
+extern void pci_iov_unregister(struct pci_dev *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#691: FILE: drivers/pci/pci.h:207:
+extern void pci_restore_iov_state(struct pci_dev *dev);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#697: FILE: drivers/pci/pci.h:213:
+}
+static inline void pci_iov_release(struct pci_dev *dev)

WARNING:SPACING: Unnecessary space before function pointer arguments
#781: FILE: include/linux/pci.h:437:
+	int (*virtual) (struct pci_dev *dev, int nr_virtfn);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000201014.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 17 warnings, 10 checks, 713 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000201014.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
