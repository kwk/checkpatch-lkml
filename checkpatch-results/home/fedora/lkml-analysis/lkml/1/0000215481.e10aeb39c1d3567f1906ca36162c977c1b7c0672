WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
Functions to restart process, restore its state, fpu and registers are added.

CHECK:SPACING: No space is necessary after a cast
#94: FILE: arch/x86/kernel/process_32.c:62:
+asmlinkage void i386_ret_from_resume(void) __asm__("i386_ret_from_resume");

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#134: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#139: FILE: checkpoint/rst_process.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#169: FILE: checkpoint/rst_process.c:31:
+int local_kernel_thread(int (*fn)(void *), void * arg, unsigned long flags, pid_t pid)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!current->fs"
#173: FILE: checkpoint/rst_process.c:35:
+	if (current->fs == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'local_kernel_thread', this function's name, in a string
#175: FILE: checkpoint/rst_process.c:37:
+		eprintk("local_kernel_thread: current->fs==NULL\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: checkpoint/rst_process.c:62:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#202: FILE: checkpoint/rst_process.c:64:
+^I^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#203: FILE: checkpoint/rst_process.c:65:
+		
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: checkpoint/rst_process.c:107:
+		memcpy(&tsk->thread.xstate, buf,
+				sizeof(struct i387_fxsave_struct));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#251: FILE: checkpoint/rst_process.c:113:
+^I^I^I!cpu_has_fxsr) {^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#251: FILE: checkpoint/rst_process.c:113:
+	else if (hdr.cpt_content == CPT_CONTENT_X86_FPUSTATE_OLD &&
+			!cpu_has_fxsr) {		

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#253: FILE: checkpoint/rst_process.c:115:
+		memcpy(&tsk->thread.xstate, buf,
+				sizeof(struct i387_fsave_struct));

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#291: FILE: checkpoint/rst_process.c:153:
+	extern char i386_ret_from_resume;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: No space is necessary after a cast
#298: FILE: checkpoint/rst_process.c:160:
+	tsk->thread.sp = (unsigned long) regs;

CHECK:SPACING: No space is necessary after a cast
#299: FILE: checkpoint/rst_process.c:161:
+	tsk->thread.sp0 = (unsigned long) (regs+1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#299: FILE: checkpoint/rst_process.c:161:
+	tsk->thread.sp0 = (unsigned long) (regs+1);
 	                                       ^

CHECK:SPACING: No space is necessary after a cast
#300: FILE: checkpoint/rst_process.c:162:
+	tsk->thread.ip = (unsigned long) &i386_ret_from_resume;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#329: FILE: checkpoint/rst_process.c:191:
+	memset((void*)tsk->thread.sp, 0, HOOK_RESERVE);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#360: FILE: checkpoint/rst_process.c:222:
+	if (!err && (ti->cpt_state & (EXIT_ZOMBIE|EXIT_DEAD))) {
 	                                         ^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#360: FILE: checkpoint/rst_process.c:222:
+	if (!err && (ti->cpt_state & (EXIT_ZOMBIE|EXIT_DEAD))) {
[...]
+	} else {
[...]

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#375: FILE: checkpoint/rst_process.c:237:
+}
+static int create_root_task(struct cpt_context *ctx,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#385: FILE: checkpoint/rst_process.c:247:
+^I/* We should also create container here */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#387: FILE: checkpoint/rst_process.c:249:
+^I^I^ICLONE_NEWNS | CLONE_NEWUTS | CLONE_NEWIPC | $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#387: FILE: checkpoint/rst_process.c:249:
+	pid = local_kernel_thread(restart_thread, thr_ctx,
+			CLONE_NEWNS | CLONE_NEWUTS | CLONE_NEWIPC | 

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tsk"
#396: FILE: checkpoint/rst_process.c:258:
+	if (tsk == NULL)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000215481.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 6 warnings, 14 checks, 345 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000215481.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
