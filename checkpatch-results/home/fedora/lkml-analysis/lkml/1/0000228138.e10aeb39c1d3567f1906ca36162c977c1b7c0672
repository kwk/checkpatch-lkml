WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#55: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#60: FILE: fs/nilfs2/sufile.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#76: FILE: fs/nilfs2/sufile.c:17:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#77: FILE: fs/nilfs2/sufile.c:18:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#91: FILE: fs/nilfs2/sufile.c:32:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#102: FILE: fs/nilfs2/sufile.c:43:
+	__u64 t = segnum + NILFS_MDT(sufile)->mi_first_entry_offset;
+	do_div(t, nilfs_sufile_segment_usages_per_block(sufile));

WARNING:LINE_SPACING: Missing a blank line after declarations
#110: FILE: fs/nilfs2/sufile.c:51:
+	__u64 t = segnum + NILFS_MDT(sufile)->mi_first_entry_offset;
+	return do_div(t, nilfs_sufile_segment_usages_per_block(sufile));

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#211: FILE: fs/nilfs2/sufile.c:152:
+		su = nilfs_sufile_block_get_segment_usage(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#214: FILE: fs/nilfs2/sufile.c:155:
+		nsus = nilfs_sufile_segment_usages_in_block(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#225: FILE: fs/nilfs2/sufile.c:166:
+			header = nilfs_sufile_block_get_header(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#291: FILE: fs/nilfs2/sufile.c:232:
+	su = nilfs_sufile_block_get_segment_usage(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#294: FILE: fs/nilfs2/sufile.c:235:
+		printk(KERN_CRIT "%s: segment %llu must be clean\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#296: FILE: fs/nilfs2/sufile.c:237:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: braces {} should be used on all arms of this statement
#354: FILE: fs/nilfs2/sufile.c:295:
+	if (nsegs <= NILFS_SUFILE_FREEV_PREALLOC)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#356: FILE: fs/nilfs2/sufile.c:297:
+	else {

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#357: FILE: fs/nilfs2/sufile.c:298:
+		su_bh = kmalloc(sizeof(*su_bh) * nsegs, GFP_NOFS);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!su_bh"
#358: FILE: fs/nilfs2/sufile.c:299:
+		if (su_bh == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#377: FILE: fs/nilfs2/sufile.c:318:
+		su = nilfs_sufile_block_get_segment_usage(

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#379: FILE: fs/nilfs2/sufile.c:320:
+		BUG_ON(nilfs_segment_usage_error(su));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#447: FILE: fs/nilfs2/sufile.c:388:
+	BUG_ON(segnum >= nilfs_sufile_get_nsegments(sufile));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sup"
#462: FILE: fs/nilfs2/sufile.c:403:
+	if (sup != NULL)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#582: FILE: fs/nilfs2/sufile.c:523:
+	BUG_ON(segnum >= nilfs_sufile_get_nsegments(sufile));

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#671: FILE: fs/nilfs2/sufile.c:612:
+		su = nilfs_sufile_block_get_segment_usage(

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#693: FILE: fs/nilfs2/sufile.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#709: FILE: fs/nilfs2/sufile.h:17:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#710: FILE: fs/nilfs2/sufile.h:18:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#731: FILE: fs/nilfs2/sufile.h:39:
+int nilfs_sufile_cancel_free(struct inode *, __u64);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u64' should also have an identifier name
#731: FILE: fs/nilfs2/sufile.h:39:
+int nilfs_sufile_cancel_free(struct inode *, __u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#732: FILE: fs/nilfs2/sufile.h:40:
+int nilfs_sufile_freev(struct inode *, __u64 *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u64 *' should also have an identifier name
#732: FILE: fs/nilfs2/sufile.h:40:
+int nilfs_sufile_freev(struct inode *, __u64 *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#732: FILE: fs/nilfs2/sufile.h:40:
+int nilfs_sufile_freev(struct inode *, __u64 *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#733: FILE: fs/nilfs2/sufile.h:41:
+int nilfs_sufile_free(struct inode *, __u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u64' should also have an identifier name
#733: FILE: fs/nilfs2/sufile.h:41:
+int nilfs_sufile_free(struct inode *, __u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#734: FILE: fs/nilfs2/sufile.h:42:
+int nilfs_sufile_get_segment_usage(struct inode *, __u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u64' should also have an identifier name
#734: FILE: fs/nilfs2/sufile.h:42:
+int nilfs_sufile_get_segment_usage(struct inode *, __u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_segment_usage **' should also have an identifier name
#734: FILE: fs/nilfs2/sufile.h:42:
+int nilfs_sufile_get_segment_usage(struct inode *, __u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct buffer_head **' should also have an identifier name
#734: FILE: fs/nilfs2/sufile.h:42:
+int nilfs_sufile_get_segment_usage(struct inode *, __u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#737: FILE: fs/nilfs2/sufile.h:45:
+void nilfs_sufile_put_segment_usage(struct inode *, __u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u64' should also have an identifier name
#737: FILE: fs/nilfs2/sufile.h:45:
+void nilfs_sufile_put_segment_usage(struct inode *, __u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct buffer_head *' should also have an identifier name
#737: FILE: fs/nilfs2/sufile.h:45:
+void nilfs_sufile_put_segment_usage(struct inode *, __u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#739: FILE: fs/nilfs2/sufile.h:47:
+int nilfs_sufile_get_stat(struct inode *, struct nilfs_sustat *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_sustat *' should also have an identifier name
#739: FILE: fs/nilfs2/sufile.h:47:
+int nilfs_sufile_get_stat(struct inode *, struct nilfs_sustat *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#740: FILE: fs/nilfs2/sufile.h:48:
+int nilfs_sufile_get_ncleansegs(struct inode *, unsigned long *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long *' should also have an identifier name
#740: FILE: fs/nilfs2/sufile.h:48:
+int nilfs_sufile_get_ncleansegs(struct inode *, unsigned long *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#741: FILE: fs/nilfs2/sufile.h:49:
+int nilfs_sufile_set_error(struct inode *, __u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u64' should also have an identifier name
#741: FILE: fs/nilfs2/sufile.h:49:
+int nilfs_sufile_set_error(struct inode *, __u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#742: FILE: fs/nilfs2/sufile.h:50:
+ssize_t nilfs_sufile_get_suinfo(struct inode *, __u64, struct nilfs_suinfo *,

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u64' should also have an identifier name
#742: FILE: fs/nilfs2/sufile.h:50:
+ssize_t nilfs_sufile_get_suinfo(struct inode *, __u64, struct nilfs_suinfo *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_suinfo *' should also have an identifier name
#742: FILE: fs/nilfs2/sufile.h:50:
+ssize_t nilfs_sufile_get_suinfo(struct inode *, __u64, struct nilfs_suinfo *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#742: FILE: fs/nilfs2/sufile.h:50:
+ssize_t nilfs_sufile_get_suinfo(struct inode *, __u64, struct nilfs_suinfo *,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#745: FILE: fs/nilfs2/sufile.h:53:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000228138.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 35 warnings, 12 checks, 681 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000228138.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
