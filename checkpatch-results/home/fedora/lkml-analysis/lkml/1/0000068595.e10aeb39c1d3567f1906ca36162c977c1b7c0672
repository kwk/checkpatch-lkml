WARNING:TYPO_SPELLING: 'initilized' may be misspelled - perhaps 'initialized'?
#34: 
the console is initilized.
               ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
2. Move all platform data into arch specific board files. Register and probe

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#79: FILE: drivers/serial/Kconfig:1421:
+config SERIAL_BFIN_SPORT_CONSOLE
+	bool "Console on Blackfin sport emulated uart"
+	depends on SERIAL_BFIN_SPORT=y
+	select SERIAL_CORE_CONSOLE
 
+config SERIAL_BFIN_SPORT0_UART
+config SERIAL_BFIN_SPORT0_UART

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#86: FILE: drivers/serial/Kconfig:1426:
+config SERIAL_BFIN_SPORT0_UART
+	bool "Enable UART over SPORT0"
+	depends on SERIAL_BFIN_SPORT && !(BF542 || BF542M || BF544 || BF544M)
+	help
+	  Enable UART over SPORT0
 
+config SERIAL_BFIN_SPORT1_UART
+config SERIAL_BFIN_SPORT1_UART

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#94: FILE: drivers/serial/Kconfig:1432:
+config SERIAL_BFIN_SPORT1_UART
+	bool "Enable UART over SPORT1"
+	depends on SERIAL_BFIN_SPORT
+	help
+	  Enable UART over SPORT1
 
+config SERIAL_BFIN_SPORT2_UART
+config SERIAL_BFIN_SPORT2_UART
+config SERIAL_BFIN_SPORT2_UART

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#103: FILE: drivers/serial/Kconfig:1438:
+config SERIAL_BFIN_SPORT2_UART
+	bool "Enable UART over SPORT2"
+	depends on SERIAL_BFIN_SPORT && (BF54x || BF538 || BF539)
+	help
+	  Enable UART over SPORT2
 
+config SERIAL_BFIN_SPORT3_UART
+config SERIAL_BFIN_SPORT3_UART
+config SERIAL_BFIN_SPORT3_UART
+config SERIAL_BFIN_SPORT3_UART
+config SERIAL_BFIN_SPORT3_UART
+config SERIAL_BFIN_SPORT3_UART
+config SERIAL_BFIN_SPORT3_UART
+config SERIAL_BFIN_SPORT3_UART

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#117: FILE: drivers/serial/Kconfig:1444:
+config SERIAL_BFIN_SPORT3_UART
+	bool "Enable UART over SPORT3"
+	depends on SERIAL_BFIN_SPORT && (BF54x || BF538 || BF539)
+	help
+	  Enable UART over SPORT3
 

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#226: FILE: drivers/serial/bfin_sport_uart.c:53:
+unsigned short bfin_uart_pin_req_sport2[] =
+	{P_SPORT2_TFS, P_SPORT2_DTPRI, P_SPORT2_TSCLK, P_SPORT2_RFS, \

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#226: FILE: drivers/serial/bfin_sport_uart.c:53:
+	{P_SPORT2_TFS, P_SPORT2_DTPRI, P_SPORT2_TSCLK, P_SPORT2_RFS, \

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#231: FILE: drivers/serial/bfin_sport_uart.c:58:
+unsigned short bfin_uart_pin_req_sport3[] =
+	{P_SPORT3_TFS, P_SPORT3_DTPRI, P_SPORT3_TSCLK, P_SPORT3_RFS, \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#231: FILE: drivers/serial/bfin_sport_uart.c:58:
+	{P_SPORT3_TFS, P_SPORT3_DTPRI, P_SPORT3_TSCLK, P_SPORT3_RFS, \

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#258: FILE: drivers/serial/bfin_sport_uart.c:79:
+	pr_debug("%s value:%x, mask1=0x%x, mask2=0x%x\n", __func__, value,
+		up->txmask1, up->txmask2);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#298: FILE: drivers/serial/bfin_sport_uart.c:107:
+	pr_debug("%s value:%x, cs=%d, mask=0x%x\n", __func__, value,
+		up->csize, up->rxmask);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#361: FILE: drivers/serial/bfin_sport_uart.c:154:
+	pr_debug("%s sclk:%d, baud_rate:%d, tclkdiv:%d, rclkdiv:%d\n",
+			__func__, sclk, baud_rate, tclkdiv, rclkdiv);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#446: FILE: drivers/serial/bfin_sport_uart.c:229:
+	ret = request_irq(up->port.irq, sport_uart_rx_irq, 0,
+		"SPORT_UART_RX", up);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#456: FILE: drivers/serial/bfin_sport_uart.c:235:
+	ret = request_irq(up->port.irq+1, sport_uart_tx_irq, 0,
 	                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#457: FILE: drivers/serial/bfin_sport_uart.c:236:
+	ret = request_irq(up->port.irq+1, sport_uart_tx_irq, 0,
+		"SPORT_UART_TX", up);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#468: FILE: drivers/serial/bfin_sport_uart.c:243:
+	ret = request_irq(up->err_irq, sport_uart_err_irq, 0,
+		"SPORT_UART_STATUS", up);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#490: FILE: drivers/serial/bfin_sport_uart.c:251:
+	free_irq(up->port.irq+1, up);
 	                     ^

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#552: FILE: drivers/serial/bfin_sport_uart.c:377:
+	dev_dbg(port->dev, "%s enter\n", __func__);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#568: FILE: drivers/serial/bfin_sport_uart.c:385:
+	free_irq(up->port.irq+1, up);
 	                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#594: FILE: drivers/serial/bfin_sport_uart.c:423:
+static void sport_set_termios(struct uart_port *port,
+		struct ktermios *termios, struct ktermios *old)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#619: FILE: drivers/serial/bfin_sport_uart.c:448:
+	if (termios->c_cflag & CSTOPB) {
+		up->stopb = 1;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#656: FILE: drivers/serial/bfin_sport_uart.c:485:
+		up->txmask1 |= (1<<i);
 		                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#657: FILE: drivers/serial/bfin_sport_uart.c:486:
+	up->txmask2 = (1<<i);
 	                ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#660: FILE: drivers/serial/bfin_sport_uart.c:489:
+		up->txmask2 |= (1<<i);
 		                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#665: FILE: drivers/serial/bfin_sport_uart.c:494:
+	port->uartclk = uart_get_baud_rate(port, termios, old, 0, get_sclk()/16);
 	                                                                    ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#786: FILE: drivers/serial/bfin_sport_uart.c:594:
+	if (SPORT_GET_TCR1(up) & TSPEN)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#788: FILE: drivers/serial/bfin_sport_uart.c:596:
+	else {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#835: FILE: drivers/serial/bfin_sport_uart.c:643:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#858: FILE: drivers/serial/bfin_sport_uart.c:659:
+	dev_dbg(dev, "%s enter\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#872: FILE: drivers/serial/bfin_sport_uart.c:670:
+	dev_dbg(dev, "%s enter\n", __func__);

WARNING:CONST_STRUCT: struct dev_pm_ops should normally be const
#880: FILE: drivers/serial/bfin_sport_uart.c:677:
+static struct dev_pm_ops bfin_sport_uart_dev_pm_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#886: FILE: drivers/serial/bfin_sport_uart.c:683:
+static int __devinit sport_uart_probe(struct platform_device *pdev)

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#897: FILE: drivers/serial/bfin_sport_uart.c:689:
+	dev_dbg(&pdev->dev, "%s enter\n", __func__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bfin_sport_uart_ports[pdev->id]"
#904: FILE: drivers/serial/bfin_sport_uart.c:696:
+	if (bfin_sport_uart_ports[pdev->id] == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#914: FILE: drivers/serial/bfin_sport_uart.c:706:
+		ret = peripheral_request_list(

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#923: FILE: drivers/serial/bfin_sport_uart.c:715:
+		sport->port.fifosize  = SPORT_TX_FIFO_SIZE,
+		sport->port.ops       = &sport_uart_ops;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!res"
#930: FILE: drivers/serial/bfin_sport_uart.c:722:
+		if (res == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#937: FILE: drivers/serial/bfin_sport_uart.c:729:
+		sport->port.membase = ioremap(res->start,
+			res->end - res->start);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#976: FILE: drivers/serial/bfin_sport_uart.c:768:
+		peripheral_free_list(

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#987: FILE: drivers/serial/bfin_sport_uart.c:778:
+static int __devexit sport_uart_remove(struct platform_device *pdev)

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#994: FILE: drivers/serial/bfin_sport_uart.c:782:
+	dev_dbg(&pdev->dev, "%s enter\n", __func__);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1001: FILE: drivers/serial/bfin_sport_uart.c:788:
+		peripheral_free_list(

WARNING:MISPLACED_INIT: __initdata should be placed after early_sport_uart_driver
#1025: FILE: drivers/serial/bfin_sport_uart.c:809:
+static __initdata struct early_platform_driver early_sport_uart_driver = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1056: FILE: drivers/serial/bfin_sport_uart.c:837:
+		pr_err("failed to register %s:%d\n",
 				sport_uart_reg.driver_name, ret);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000068595.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 20 warnings, 24 checks, 1055 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000068595.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
