CHECK:LINE_SPACING: Please don't use multiple blank lines
#115: FILE: mm/memcontrol.c:166:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#124: FILE: mm/memcontrol.c:175:
+};
+/* we may have to check status under racy situation. use global mutex. */

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#174: FILE: mm/memcontrol.c:1158:
+			congestion_wait(WRITE, HZ/10);
 			                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#183: FILE: mm/memcontrol.c:1266:
 
+

ERROR:SPACING: space required after that ';' (ctx:VxV)
#196: FILE: mm/memcontrol.c:1279:
+	for (; *c && isspace(*c);c++);
 	                        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#196: FILE: mm/memcontrol.c:1279:
+	for (; *c && isspace(*c);c++);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required after that ';' (ctx:VxV)
#202: FILE: mm/memcontrol.c:1285:
+	for (; *c && !isspace(*c);c++);
 	                         ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#202: FILE: mm/memcontrol.c:1285:
+	for (; *c && !isspace(*c);c++);

ERROR:SPACING: space required after that ';' (ctx:VxV)
#204: FILE: mm/memcontrol.c:1287:
+	for (; *c && isspace(*c);c++);
 	                        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#204: FILE: mm/memcontrol.c:1287:
+	for (; *c && isspace(*c);c++);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#207: FILE: mm/memcontrol.c:1290:
+	for (; *c; c++);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#211: FILE: mm/memcontrol.c:1294:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#224: FILE: mm/memcontrol.c:1307:
+	ret = parse_attr_option((char*)buffer, &attr, &option, &end);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#229: FILE: mm/memcontrol.c:1312:
+	for (i = 0; i < MEMCG_LAST_ATTR; i++) {
+

ERROR:SPACING: space required before the open parenthesis '('
#240: FILE: mm/memcontrol.c:1323:
+	switch(i) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#258: FILE: mm/memcontrol.c:1341:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#268: FILE: mm/memcontrol.c:1351:
+		seq_printf(m, "%s drop\n",s);
 		                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#270: FILE: mm/memcontrol.c:1353:
+		seq_printf(m, "%s keep\n",s);
 		                         ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#275: FILE: mm/memcontrol.c:1358:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000206097.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 11 errors, 0 warnings, 8 checks, 260 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000206097.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
