WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#37: FILE: Makefile:4:
+EXTRAVERSION = .6
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: No space is necessary after a cast
#61: FILE: arch/s390/kernel/ptrace.c:180:
+	} else if (addr < (addr_t) &dummy->regs.fp_regs) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#75: FILE: arch/s390/kernel/ptrace.c:278:
+	} else if (addr < (addr_t) &dummy->regs.fp_regs) {

CHECK:SPACING: No space is necessary after a cast
#89: FILE: arch/s390/kernel/ptrace.c:426:
+	} else if (addr < (addr_t) &dummy32->regs.fp_regs) {

CHECK:SPACING: No space is necessary after a cast
#103: FILE: arch/s390/kernel/ptrace.c:512:
+	} else if (addr < (addr_t) &dummy32->regs.fp_regs) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#567: FILE: arch/x86/kernel/genapic_64.c:51:
 	else
[...]
+	if (max_physical_apicid < 8)

CHECK:SPACING: No space is necessary after a cast
#614: FILE: arch/x86/kernel/hpet.c:291:
+	cnt += (u32) delta;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#658: FILE: arch/x86/kernel/mpparse.c:407:
+       generic_bigsmp_probe();$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#726: FILE: arch/x86/kernel/signal_64.c:69:
+		printk("save_i387: bad fpstate %p\n", buf);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'save_i387', this function's name, in a string
#726: FILE: arch/x86/kernel/signal_64.c:69:
+		printk("save_i387: bad fpstate %p\n", buf);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:CODE_INDENT: code indent should use tabs where possible
#787: FILE: arch/x86/kernel/traps_64.c:1144:
+ ^I/*$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#787: FILE: arch/x86/kernel/traps_64.c:1144:
+ ^I/*$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#787: FILE: arch/x86/kernel/traps_64.c:1144:
+ ^I/*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#788: FILE: arch/x86/kernel/traps_64.c:1145:
+ ^I * Paranoid restore. send a SIGSEGV if we fail to restore the state.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#788: FILE: arch/x86/kernel/traps_64.c:1145:
+ ^I * Paranoid restore. send a SIGSEGV if we fail to restore the state.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#789: FILE: arch/x86/kernel/traps_64.c:1146:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#789: FILE: arch/x86/kernel/traps_64.c:1146:
+ ^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#790: FILE: arch/x86/kernel/traps_64.c:1147:
+ ^Iif (unlikely(restore_fpu_checking(&me->thread.xstate->fxsave))) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#790: FILE: arch/x86/kernel/traps_64.c:1147:
+ ^Iif (unlikely(restore_fpu_checking(&me->thread.xstate->fxsave))) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#790: FILE: arch/x86/kernel/traps_64.c:1147:
+ ^Iif (unlikely(restore_fpu_checking(&me->thread.xstate->fxsave))) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#791: FILE: arch/x86/kernel/traps_64.c:1148:
+ ^I^Istts();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#791: FILE: arch/x86/kernel/traps_64.c:1148:
+ ^I^Istts();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#791: FILE: arch/x86/kernel/traps_64.c:1148:
+ ^I^Istts();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#792: FILE: arch/x86/kernel/traps_64.c:1149:
+ ^I^Iforce_sig(SIGSEGV, me);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#792: FILE: arch/x86/kernel/traps_64.c:1149:
+ ^I^Iforce_sig(SIGSEGV, me);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#792: FILE: arch/x86/kernel/traps_64.c:1149:
+ ^I^Iforce_sig(SIGSEGV, me);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#793: FILE: arch/x86/kernel/traps_64.c:1150:
+ ^I^Ireturn;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#793: FILE: arch/x86/kernel/traps_64.c:1150:
+ ^I^Ireturn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#793: FILE: arch/x86/kernel/traps_64.c:1150:
+ ^I^Ireturn;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#794: FILE: arch/x86/kernel/traps_64.c:1151:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#794: FILE: arch/x86/kernel/traps_64.c:1151:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#794: FILE: arch/x86/kernel/traps_64.c:1151:
+ ^I}$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#821: FILE: arch/x86/kernel/vsmp_64.c:62:
+static unsigned __init_or_module vsmp_patch(u8 type, u16 clobbers, void *ibuf,
 				  unsigned long addr, unsigned len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#895: FILE: arch/x86/mm/pageattr.c:812:
+	if (reserve_memtype(__pa(addr), __pa(addr) + numpages * PAGE_SIZE,
 		_PAGE_CACHE_WC, NULL))

WARNING:LINE_SPACING: Missing a blank line after declarations
#934: FILE: arch/x86/oprofile/nmi_int.c:43:
+	int cpu = (unsigned long)data;
+	switch (action) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1045: FILE: drivers/acpi/ec.c:199:
+		if (acpi_ec_check_status(ec,event))
 		                           ^

CHECK:SPACING: No space is necessary after a cast
#1134: FILE: drivers/net/niu.c:5995:
+						(struct page *) page->mapping;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1136: FILE: drivers/net/niu.c:5997:
+					u64 base = page->index;
+					base = base >> RBR_DESCR_ADDR_SHIFT;

CHECK:SPACING: No space is necessary after a cast
#1159: FILE: drivers/net/niu.c:6020:
+					(void) release_tx_packet(np, rp, j);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1338: FILE: drivers/rtc/rtc-dev.c:407:
+	struct rtc_device *rtc = file->private_data;
+	return fasync_helper(fd, file, on, &rtc->async_queue);

CHECK:BRACES: Unbalanced braces around else statement
#1428: FILE: drivers/spi/pxa2xx_spi.c:419:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1447: FILE: drivers/spi/pxa2xx_spi.c:438:
+			next_msg = list_entry(drv_data->queue.next,
+					struct spi_message, queue);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1517: FILE: drivers/spi/pxa2xx_spi.c:894:
+	if (transfer->len > MAX_DMA_LEN && chip->enable_dma) {
+

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1520: FILE: drivers/spi/pxa2xx_spi.c:897:
+		if (message->is_dma_mapped
+				|| transfer->rx_dma || transfer->tx_dma) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pump_transfers', this function's name, in a string
#1522: FILE: drivers/spi/pxa2xx_spi.c:899:
+				"pump_transfers: mapped transfer length "

WARNING:SPLIT_STRING: quoted string split across lines
#1523: FILE: drivers/spi/pxa2xx_spi.c:900:
+				"pump_transfers: mapped transfer length "
+				"of %u is greater than %d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#1531: FILE: drivers/spi/pxa2xx_spi.c:908:
+		if (printk_ratelimit())

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pump_transfers', this function's name, in a string
#1532: FILE: drivers/spi/pxa2xx_spi.c:909:
+			dev_warn(&message->spi->dev, "pump_transfers: "

WARNING:SPLIT_STRING: quoted string split across lines
#1533: FILE: drivers/spi/pxa2xx_spi.c:910:
+			dev_warn(&message->spi->dev, "pump_transfers: "
+				"DMA disabled for transfer length %ld "

WARNING:SPLIT_STRING: quoted string split across lines
#1534: FILE: drivers/spi/pxa2xx_spi.c:911:
+				"DMA disabled for transfer length %ld "
+				"greater than %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pump_transfers', this function's name, in a string
#1552: FILE: drivers/spi/pxa2xx_spi.c:980:
+						"pump_transfers: "

WARNING:REPEATED_WORD: Possible repeated word: 'have'
#1567: FILE: drivers/spi/pxa2xx_spi.c:999:
+	 * have have been passed with buffers that are already dma mapped.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1895: FILE: include/linux/clockchips.h:130:
+extern void clockevents_handle_noop(struct clock_event_device *dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1958: FILE: include/linux/sched.h:1480:
+extern cputime_t task_utime(struct task_struct *p);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1959: FILE: include/linux/sched.h:1481:
+extern cputime_t task_stime(struct task_struct *p);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1960: FILE: include/linux/sched.h:1482:
+extern cputime_t task_gtime(struct task_struct *p);

CHECK:SPACING: No space is necessary after a cast
#1988: FILE: include/net/netlink.h:705:
+	return remaining >= (int) sizeof(*nla) &&

WARNING:TYPO_SPELLING: 'alrady' may be misspelled - perhaps 'already'?
#2180: FILE: kernel/time/tick-broadcast.c:190:
+	 * when the event alrady expired. clockevents_program_event()
 	                  ^^^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#2289: FILE: kernel/time/tick-broadcast.c:533:
+		if (was_periodic && !cpus_empty(mask)) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2292: FILE: kernel/time/tick-broadcast.c:536:
+		} else

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2318: FILE: kernel/time/tick-internal.h:20:
+extern int tick_dev_program_event(struct clock_event_device *dev,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2361: FILE: kernel/time/tick-oneshot.c:52:
+			printk(KERN_WARNING

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2547: FILE: net/ipv4/udp.c:958:
+	if ((rc = sock_queue_rcv_skb(sk, skb)) < 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2682: FILE: net/ipv6/ip6_output.c:938:
+	/*
+	 * Here if the dst entry we've looked up

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2703: FILE: net/ipv6/ip6_output.c:959:
+			/*
+			 * We need to get the dst entry for the

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2710: FILE: net/ipv6/ip6_output.c:966:
+			if ((err = (*dst)->error))

WARNING:TABSTOP: Statements should start on a tabstop
#2813: FILE: net/sctp/sm_make_chunk.c:1889:
+			    if (sctp_auth_enable)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (28, 36)
#2813: FILE: net/sctp/sm_make_chunk.c:1889:
+			    if (sctp_auth_enable)
+				    asoc->peer.auth_capable = 1;

WARNING:TABSTOP: Statements should start on a tabstop
#2819: FILE: net/sctp/sm_make_chunk.c:1894:
+			    if (sctp_addip_enable)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (28, 36)
#2819: FILE: net/sctp/sm_make_chunk.c:1894:
+			    if (sctp_addip_enable)
+				    asoc->peer.asconf_capable = 1;

CHECK:BRACES: braces {} should be used on all arms of this statement
#2861: FILE: net/xfrm/xfrm_output.c:30:
+	if (nhead <= 0) {
[...]
+	} else if (ntail < 0)
[...]

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2968: FILE: sound/pci/oxygen/hifier.c:17:
  *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#2980: FILE: sound/pci/oxygen/hifier.c:100:
+	msleep(1); /* wait for the new MCLK to become stable */

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#3002: FILE: sound/pci/oxygen/oxygen.c:178:
+	msleep(1); /* wait for the new MCLK to become stable */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000219339.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 12 errors, 41 warnings, 22 checks, 2573 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000219339.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
