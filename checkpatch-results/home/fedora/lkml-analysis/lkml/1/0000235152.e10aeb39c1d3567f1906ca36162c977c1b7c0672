WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
graphics device through new ioctls for managing execution of commands on the

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mem"
#125: FILE: drivers/gpu/drm/drm_agpsupport.c:476:
+	if (mem == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#155: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#160: FILE: drivers/gpu/drm/drm_cache.c:1:
+/**************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#196: FILE: drivers/gpu/drm/drm_cache.c:37:
+	uint8_t *page_virtual;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!page"
#199: FILE: drivers/gpu/drm/drm_cache.c:40:
+	if (unlikely(page == NULL))

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#218: FILE: drivers/gpu/drm/drm_cache.c:59:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:MEMORY_BARRIER: memory barrier without comment
#223: FILE: drivers/gpu/drm/drm_cache.c:64:
+		mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#226: FILE: drivers/gpu/drm/drm_cache.c:67:
+		mb();

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#281: FILE: drivers/gpu/drm/drm_gem.c:1:
+/*

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#373: FILE: drivers/gpu/drm/drm_gem.c:93:
+	BUG_ON((size & (PAGE_SIZE - 1)) != 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#378: FILE: drivers/gpu/drm/drm_gem.c:98:
+	obj->filp = shmem_file_setup("drm mm object", size, 0);
 	     ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#379: FILE: drivers/gpu/drm/drm_gem.c:99:
+	if (IS_ERR(obj->filp)) {
 	                ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->driver->gem_init_object"
#387: FILE: drivers/gpu/drm/drm_gem.c:107:
+	if (dev->driver->gem_init_object != NULL &&

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#389: FILE: drivers/gpu/drm/drm_gem.c:109:
+		fput(obj->filp);
 		          ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#400: FILE: drivers/gpu/drm/drm_gem.c:120:
+ * Removes the mapping from handle to filp for this object.
                                       ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#403: FILE: drivers/gpu/drm/drm_gem.c:123:
+drm_gem_handle_delete(struct drm_file *filp, int handle)
                                        ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!obj"
#421: FILE: drivers/gpu/drm/drm_gem.c:141:
+	if (obj == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#445: FILE: drivers/gpu/drm/drm_gem.c:165:
+drm_gem_handle_create(struct drm_file *file_priv,
+		       struct drm_gem_object *obj,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#475: FILE: drivers/gpu/drm/drm_gem.c:195:
+drm_gem_object_lookup(struct drm_device *dev, struct drm_file *filp,
                                                                ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!obj"
#484: FILE: drivers/gpu/drm/drm_gem.c:204:
+	if (obj == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!obj"
#533: FILE: drivers/gpu/drm/drm_gem.c:253:
+	if (obj == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#546: FILE: drivers/gpu/drm/drm_gem.c:266:
+	ret = idr_get_new_above(&dev->object_name_idr, obj, 1,
+				 &obj->name);

CHECK:SPACING: No space is necessary after a cast
#562: FILE: drivers/gpu/drm/drm_gem.c:282:
+	args->name = (uint64_t) obj->name;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#586: FILE: drivers/gpu/drm/drm_gem.c:306:
+	obj = idr_find(&dev->object_name_idr, (int) args->name);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#632: FILE: drivers/gpu/drm/drm_gem.c:352:
+ * Called at close time when the filp is going away.
                                  ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#634: FILE: drivers/gpu/drm/drm_gem.c:354:
+ * Releases any remaining references on objects by this filp.
                                                         ^^^^

CHECK:SPACING: No space is necessary after a cast
#655: FILE: drivers/gpu/drm/drm_gem.c:375:
+	struct drm_gem_object *obj = (struct drm_gem_object *) kref;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#658: FILE: drivers/gpu/drm/drm_gem.c:378:
+	BUG_ON(!mutex_is_locked(&dev->struct_mutex));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->driver->gem_free_object"
#660: FILE: drivers/gpu/drm/drm_gem.c:380:
+	if (dev->driver->gem_free_object != NULL)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#663: FILE: drivers/gpu/drm/drm_gem.c:383:
+	fput(obj->filp);
 	          ^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#687: FILE: drivers/gpu/drm/drm_gem.c:407:
+	if (obj->name) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#695: FILE: drivers/gpu/drm/drm_gem.c:415:
+	} else

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#698: FILE: drivers/gpu/drm/drm_gem.c:418:
+
+}

WARNING:SPLIT_STRING: quoted string split across lines
#839: FILE: drivers/gpu/drm/drm_proc.c:135:
+			DRM_ERROR("DRM: Driver failed to initialize "
+				  "/proc/dri.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#878: FILE: drivers/gpu/drm/drm_proc.c:515:
+       int                     len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#879: FILE: drivers/gpu/drm/drm_proc.c:516:
+       char                    *buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#880: FILE: drivers/gpu/drm/drm_proc.c:517:
+       int                     eof;$

CHECK:SPACING: No space is necessary after a cast
#907: FILE: drivers/gpu/drm/drm_proc.c:544:
+	struct drm_minor *minor = (struct drm_minor *) data;

CHECK:SPACING: No space is necessary after a cast
#932: FILE: drivers/gpu/drm/drm_proc.c:569:
+	struct drm_minor *minor = (struct drm_minor *) data;

WARNING:SPLIT_STRING: quoted string split across lines
#970: FILE: drivers/gpu/drm/drm_stub.c:159:
+			DRM_ERROR("Cannot initialize graphics execution "
+				  "manager (GEM)\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev_priv->ring.ring_obj"
#1016: FILE: drivers/gpu/drm/i915/i915_dma.c:174:
+		if (dev_priv->ring.ring_obj != NULL) {

WARNING:SPLIT_STRING: quoted string split across lines
#1019: FILE: drivers/gpu/drm/i915/i915_dma.c:177:
+			DRM_ERROR("Client tried to initialize ringbuffer in "
+				  "GEM mode\n");

CHECK:CAMELCASE: Avoid CamelCase: <Size>
#1028: FILE: drivers/gpu/drm/i915/i915_dma.c:181:
+		dev_priv->ring.Size = init->ring_size;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev_priv->ring.map.handle"
#1045: FILE: drivers/gpu/drm/i915/i915_dma.c:192:
+		if (dev_priv->ring.map.handle == NULL) {

WARNING:SPLIT_STRING: quoted string split across lines
#1048: FILE: drivers/gpu/drm/i915/i915_dma.c:195:
+			DRM_ERROR("can not ioremap virtual address for"
+				  " ring buffer\n");

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1150: FILE: drivers/gpu/drm/i915/i915_dma.c:921:
+	DRM_IOCTL_DEF(DRM_I915_GEM_PIN, i915_gem_pin_ioctl, DRM_AUTH|DRM_ROOT_ONLY),
 	                                                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1151: FILE: drivers/gpu/drm/i915/i915_dma.c:922:
+	DRM_IOCTL_DEF(DRM_I915_GEM_UNPIN, i915_gem_unpin_ioctl, DRM_AUTH|DRM_ROOT_ONLY),
 	                                                                ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1311: FILE: drivers/gpu/drm/i915/i915_drv.h:278:
+		uint32_t next_gem_seqno;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1316: FILE: drivers/gpu/drm/i915/i915_drv.h:283:
+		uint32_t waiting_gem_seqno;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1321: FILE: drivers/gpu/drm/i915/i915_drv.h:288:
+		uint32_t irq_gem_seqno;

WARNING:TYPO_SPELLING: 'occuring' may be misspelled - perhaps 'occurring'?
#1337: FILE: drivers/gpu/drm/i915/i915_drv.h:304:
+		 * It prevents command submission from occuring and makes
 		                                       ^^^^^^^^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1343: FILE: drivers/gpu/drm/i915/i915_drv.h:310:
+		uint32_t bit_6_swizzle_x;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1345: FILE: drivers/gpu/drm/i915/i915_drv.h:312:
+		uint32_t bit_6_swizzle_y;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1382: FILE: drivers/gpu/drm/i915/i915_drv.h:349:
+	uint32_t gtt_offset;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1391: FILE: drivers/gpu/drm/i915/i915_drv.h:358:
+	uint32_t last_rendering_seqno;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1394: FILE: drivers/gpu/drm/i915/i915_drv.h:361:
+	uint32_t tiling_mode;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1400: FILE: drivers/gpu/drm/i915/i915_drv.h:367:
+	uint8_t *page_cpu_valid;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1415: FILE: drivers/gpu/drm/i915/i915_drv.h:382:
+	uint32_t seqno;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1421: FILE: drivers/gpu/drm/i915/i915_drv.h:388:
+	uint32_t flush_domains;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1428: FILE: drivers/gpu/drm/i915/i915_drv.h:395:
+		uint32_t last_gem_seqno;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1429: FILE: drivers/gpu/drm/i915/i915_drv.h:396:
+		uint32_t last_gem_throttle_seqno;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1440: FILE: drivers/gpu/drm/i915/i915_drv.h:407:
+extern int i915_driver_open(struct drm_device *dev, struct drm_file *file_priv);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1444: FILE: drivers/gpu/drm/i915/i915_drv.h:411:
+extern void i915_driver_postclose(struct drm_device *dev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1449: FILE: drivers/gpu/drm/i915/i915_drv.h:416:
+extern int i915_emit_box(struct drm_device *dev,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1545: FILE: drivers/gpu/drm/i915/i915_gem.c:1:
+/*

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1580: FILE: drivers/gpu/drm/i915/i915_gem.c:36:
+i915_gem_object_set_domain(struct drm_gem_object *obj,
+			    uint32_t read_domains,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1580: FILE: drivers/gpu/drm/i915/i915_gem.c:36:
+			    uint32_t read_domains,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#1584: FILE: drivers/gpu/drm/i915/i915_gem.c:40:
+				 uint64_t offset,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#1585: FILE: drivers/gpu/drm/i915/i915_gem.c:41:
+				 uint64_t size,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1586: FILE: drivers/gpu/drm/i915/i915_gem.c:42:
+				 uint32_t read_domains,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1591: FILE: drivers/gpu/drm/i915/i915_gem.c:47:
+		    uint32_t read_domains,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1614: FILE: drivers/gpu/drm/i915/i915_gem.c:70:
+	drm_mm_init(&dev_priv->mm.gtt_space, args->gtt_start,
+	    args->gtt_end - args->gtt_start);

CHECK:SPACING: No space is necessary after a cast
#1616: FILE: drivers/gpu/drm/i915/i915_gem.c:72:
+	dev->gtt_total = (uint32_t) (args->gtt_end - args->gtt_start);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1623: FILE: drivers/gpu/drm/i915/i915_gem.c:79:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!obj"
#1639: FILE: drivers/gpu/drm/i915/i915_gem.c:95:
+	if (obj == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!obj"
#1672: FILE: drivers/gpu/drm/i915/i915_gem.c:128:
+	if (obj == NULL)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1697: FILE: drivers/gpu/drm/i915/i915_gem.c:153:
+	read = vfs_read(obj->filp, (char __user *)(uintptr_t)args->data_ptr,
 	                     ^^^^

CHECK:SPACING: No space is necessary after a cast
#1729: FILE: drivers/gpu/drm/i915/i915_gem.c:185:
+	user_data = (char __user *) (uintptr_t) args->data_ptr;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1734: FILE: drivers/gpu/drm/i915/i915_gem.c:190:
+
+

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1758: FILE: drivers/gpu/drm/i915/i915_gem.c:214:
+		o = offset & (PAGE_SIZE-1);
 		                       ^

WARNING:SPLIT_STRING: quoted string split across lines
#1783: FILE: drivers/gpu/drm/i915/i915_gem.c:239:
+			DRM_INFO("pwrite slow i %d o %d l %d "
+				 "pfn %ld vaddr %p\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vaddr"
#1786: FILE: drivers/gpu/drm/i915/i915_gem.c:242:
+			if (vaddr == NULL) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1838: FILE: drivers/gpu/drm/i915/i915_gem.c:294:
+	written = vfs_write(obj->filp,
 	                         ^^^^

CHECK:SPACING: No space is necessary after a cast
#1839: FILE: drivers/gpu/drm/i915/i915_gem.c:295:
+			    (char __user *)(uintptr_t) args->data_ptr,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!obj"
#1869: FILE: drivers/gpu/drm/i915/i915_gem.c:325:
+	if (obj == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!obj"
#1920: FILE: drivers/gpu/drm/i915/i915_gem.c:376:
+	if (obj == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1940: FILE: drivers/gpu/drm/i915/i915_gem.c:396:
+i915_gem_sw_finish_ioctl(struct drm_device *dev, void *data,
+		      struct drm_file *file_priv)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!obj"
#1952: FILE: drivers/gpu/drm/i915/i915_gem.c:408:
+	if (obj == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1982: FILE: drivers/gpu/drm/i915/i915_gem.c:438:
+i915_gem_mmap_ioctl(struct drm_device *dev, void *data,
+		   struct drm_file *file_priv)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!obj"
#1993: FILE: drivers/gpu/drm/i915/i915_gem.c:449:
+	if (obj == NULL)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1999: FILE: drivers/gpu/drm/i915/i915_gem.c:455:
+	addr = do_mmap(obj->filp, 0, args->size,
 	                    ^^^^

CHECK:SPACING: No space is necessary after a cast
#2009: FILE: drivers/gpu/drm/i915/i915_gem.c:465:
+	args->addr_ptr = (uint64_t) addr;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!obj_priv->page_list"
#2021: FILE: drivers/gpu/drm/i915/i915_gem.c:477:
+	if (obj_priv->page_list == NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2024: FILE: drivers/gpu/drm/i915/i915_gem.c:480:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "obj_priv->page_list[i]"
#2026: FILE: drivers/gpu/drm/i915/i915_gem.c:482:
+		if (obj_priv->page_list[i] != NULL) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2057: FILE: drivers/gpu/drm/i915/i915_gem.c:513:
+
+

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2091: FILE: drivers/gpu/drm/i915/i915_gem.c:547:
+	uint32_t seqno;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2093: FILE: drivers/gpu/drm/i915/i915_gem.c:549:
+	int was_empty;
+	RING_LOCALS;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!request"
#2096: FILE: drivers/gpu/drm/i915/i915_gem.c:552:
+	if (request == NULL)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2138: FILE: drivers/gpu/drm/i915/i915_gem.c:594:
+	uint32_t cmd = MI_FLUSH | MI_NO_WRITE_FLUSH;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2139: FILE: drivers/gpu/drm/i915/i915_gem.c:595:
+	uint32_t flush_domains = 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2140: FILE: drivers/gpu/drm/i915/i915_gem.c:596:
+	uint32_t flush_domains = 0;
+	RING_LOCALS;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2209: FILE: drivers/gpu/drm/i915/i915_gem.c:665:
+
+	}

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2216: FILE: drivers/gpu/drm/i915/i915_gem.c:672:
+i915_seqno_passed(uint32_t seq1, uint32_t seq2)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2236: FILE: drivers/gpu/drm/i915/i915_gem.c:692:
+	uint32_t seqno;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2242: FILE: drivers/gpu/drm/i915/i915_gem.c:698:
+		uint32_t retiring_seqno;

CHECK:BRACES: braces {} should be used on all arms of this statement
#2249: FILE: drivers/gpu/drm/i915/i915_gem.c:705:
+		if (i915_seqno_passed(seqno, retiring_seqno) ||
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2255: FILE: drivers/gpu/drm/i915/i915_gem.c:711:
+		} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2287: FILE: drivers/gpu/drm/i915/i915_gem.c:743:
+	BUG_ON(seqno == 0);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2319: FILE: drivers/gpu/drm/i915/i915_gem.c:775:
+	       uint32_t invalidate_domains,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2323: FILE: drivers/gpu/drm/i915/i915_gem.c:779:
+	uint32_t cmd;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2324: FILE: drivers/gpu/drm/i915/i915_gem.c:780:
+	uint32_t cmd;
+	RING_LOCALS;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2328: FILE: drivers/gpu/drm/i915/i915_gem.c:784:
+	DRM_INFO("%s: invalidate %08x flush %08x\n", __func__,
+		  invalidate_domains, flush_domains);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2365: FILE: drivers/gpu/drm/i915/i915_gem.c:821:
+		if ((invalidate_domains|flush_domains) &
 		                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2403: FILE: drivers/gpu/drm/i915/i915_gem.c:859:
+	if (obj->write_domain & ~(I915_GEM_DOMAIN_CPU|I915_GEM_DOMAIN_GTT)) {
 	                                             ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2404: FILE: drivers/gpu/drm/i915/i915_gem.c:860:
+		uint32_t write_domain = obj->write_domain;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2407: FILE: drivers/gpu/drm/i915/i915_gem.c:863:
+		DRM_INFO("%s: flushing object %p from write domain %08x\n",
+			  __func__, obj, write_domain);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2414: FILE: drivers/gpu/drm/i915/i915_gem.c:870:
+		BUG_ON(obj_priv->last_rendering_seqno == 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2426: FILE: drivers/gpu/drm/i915/i915_gem.c:882:
+		DRM_INFO("%s: object %p wait for seqno %08x\n",
+			  __func__, obj, obj_priv->last_rendering_seqno);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!obj_priv->gtt_space"
#2450: FILE: drivers/gpu/drm/i915/i915_gem.c:906:
+	if (obj_priv->gtt_space == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "obj_priv->agp_mem"
#2479: FILE: drivers/gpu/drm/i915/i915_gem.c:935:
+	if (obj_priv->agp_mem != NULL) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2485: FILE: drivers/gpu/drm/i915/i915_gem.c:941:
+	BUG_ON(obj_priv->active);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2521: FILE: drivers/gpu/drm/i915/i915_gem.c:977:
+			BUG_ON(obj_priv->pin_count != 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2525: FILE: drivers/gpu/drm/i915/i915_gem.c:981:
+			BUG_ON(obj_priv->active);

WARNING:SPLIT_STRING: quoted string split across lines
#2578: FILE: drivers/gpu/drm/i915/i915_gem.c:1034:
+		DRM_ERROR("inactive empty %d request empty %d "
+			  "flushing empty %d\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2607: FILE: drivers/gpu/drm/i915/i915_gem.c:1063:
+	BUG_ON(obj_priv->page_list != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "obj_priv->page_list"
#2607: FILE: drivers/gpu/drm/i915/i915_gem.c:1063:
+	BUG_ON(obj_priv->page_list != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!obj_priv->page_list"
#2610: FILE: drivers/gpu/drm/i915/i915_gem.c:1066:
+	if (obj_priv->page_list == NULL) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2634: FILE: drivers/gpu/drm/i915/i915_gem.c:1090:
+i915_gem_object_bind_to_gtt(struct drm_gem_object *obj, unsigned alignment)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "free_space"
#2652: FILE: drivers/gpu/drm/i915/i915_gem.c:1108:
+	if (free_space != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "obj_priv->gtt_space"
#2655: FILE: drivers/gpu/drm/i915/i915_gem.c:1111:
+		if (obj_priv->gtt_space != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!obj_priv->gtt_space"
#2660: FILE: drivers/gpu/drm/i915/i915_gem.c:1116:
+	if (obj_priv->gtt_space == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!obj_priv->agp_mem"
#2701: FILE: drivers/gpu/drm/i915/i915_gem.c:1157:
+	if (obj_priv->agp_mem == NULL) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2714: FILE: drivers/gpu/drm/i915/i915_gem.c:1170:
+	BUG_ON(obj->read_domains & ~(I915_GEM_DOMAIN_CPU|I915_GEM_DOMAIN_GTT));

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2714: FILE: drivers/gpu/drm/i915/i915_gem.c:1170:
+	BUG_ON(obj->read_domains & ~(I915_GEM_DOMAIN_CPU|I915_GEM_DOMAIN_GTT));
 	                                                ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2715: FILE: drivers/gpu/drm/i915/i915_gem.c:1171:
+	BUG_ON(obj->write_domain & ~(I915_GEM_DOMAIN_CPU|I915_GEM_DOMAIN_GTT));

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2715: FILE: drivers/gpu/drm/i915/i915_gem.c:1171:
+	BUG_ON(obj->write_domain & ~(I915_GEM_DOMAIN_CPU|I915_GEM_DOMAIN_GTT));
 	                                                ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!obj_priv->page_list"
#2729: FILE: drivers/gpu/drm/i915/i915_gem.c:1185:
+	if (obj_priv->page_list == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2848: FILE: drivers/gpu/drm/i915/i915_gem.c:1304:
+i915_gem_object_set_domain(struct drm_gem_object *obj,
+			    uint32_t read_domains,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2848: FILE: drivers/gpu/drm/i915/i915_gem.c:1304:
+			    uint32_t read_domains,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2853: FILE: drivers/gpu/drm/i915/i915_gem.c:1309:
+	uint32_t			invalidate_domains = 0;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2854: FILE: drivers/gpu/drm/i915/i915_gem.c:1310:
+	uint32_t			flush_domains = 0;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "obj_priv->page_cpu_valid"
#2913: FILE: drivers/gpu/drm/i915/i915_gem.c:1369:
+	if (obj_priv->page_cpu_valid != NULL &&

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2939: FILE: drivers/gpu/drm/i915/i915_gem.c:1395:
+				 uint64_t offset,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2940: FILE: drivers/gpu/drm/i915/i915_gem.c:1396:
+				 uint64_t size,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2941: FILE: drivers/gpu/drm/i915/i915_gem.c:1397:
+				 uint32_t read_domains,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!obj_priv->page_cpu_valid"
#2962: FILE: drivers/gpu/drm/i915/i915_gem.c:1418:
+	if (obj_priv->page_cpu_valid == NULL) {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2991: FILE: drivers/gpu/drm/i915/i915_gem.c:1447:
+	uint32_t flush_domains = dev->flush_domains;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3000: FILE: drivers/gpu/drm/i915/i915_gem.c:1456:
+		DRM_INFO("%s: invalidate_domains %08x flush_domains %08x\n",
+			  __func__,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3027: FILE: drivers/gpu/drm/i915/i915_gem.c:1483:
+	uint32_t last_reloc_offset = -1;

CHECK:SPACING: No space is necessary after a cast
#3031: FILE: drivers/gpu/drm/i915/i915_gem.c:1487:
+	ret = i915_gem_object_pin(obj, (uint32_t) entry->alignment);

CHECK:SPACING: No space is necessary after a cast
#3038: FILE: drivers/gpu/drm/i915/i915_gem.c:1494:
+		 (uintptr_t) entry->relocs_ptr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3045: FILE: drivers/gpu/drm/i915/i915_gem.c:1501:
+		uint32_t reloc_val, reloc_offset, *reloc_entry;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!target_obj"
#3056: FILE: drivers/gpu/drm/i915/i915_gem.c:1512:
+		if (target_obj == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!target_obj_priv->gtt_space"
#3065: FILE: drivers/gpu/drm/i915/i915_gem.c:1521:
+		if (target_obj_priv->gtt_space == NULL) {

WARNING:SPLIT_STRING: quoted string split across lines
#3075: FILE: drivers/gpu/drm/i915/i915_gem.c:1531:
+			DRM_ERROR("Relocation beyond object bounds: "
+				  "obj %p target %d offset %d size %d.\n",

CHECK:SPACING: No space is necessary after a cast
#3077: FILE: drivers/gpu/drm/i915/i915_gem.c:1533:
+				  (int) reloc.offset, (int) obj->size);

WARNING:SPLIT_STRING: quoted string split across lines
#3084: FILE: drivers/gpu/drm/i915/i915_gem.c:1540:
+			DRM_ERROR("Relocation not 4-byte aligned: "
+				  "obj %p target %d offset %d.\n",

CHECK:SPACING: No space is necessary after a cast
#3086: FILE: drivers/gpu/drm/i915/i915_gem.c:1542:
+				  (int) reloc.offset);

WARNING:SPLIT_STRING: quoted string split across lines
#3095: FILE: drivers/gpu/drm/i915/i915_gem.c:1551:
+			DRM_ERROR("Write domain conflict: "
+				  "obj %p target %d offset %d "

WARNING:SPLIT_STRING: quoted string split across lines
#3096: FILE: drivers/gpu/drm/i915/i915_gem.c:1552:
+				  "obj %p target %d offset %d "
+				  "new %08x old %08x\n",

CHECK:SPACING: No space is necessary after a cast
#3098: FILE: drivers/gpu/drm/i915/i915_gem.c:1554:
+				  (int) reloc.offset,

WARNING:SPLIT_STRING: quoted string split across lines
#3108: FILE: drivers/gpu/drm/i915/i915_gem.c:1564:
+		DRM_INFO("%s: obj %p offset %08x target %d "
+			 "read %08x write %08x gtt %08x "

WARNING:SPLIT_STRING: quoted string split across lines
#3109: FILE: drivers/gpu/drm/i915/i915_gem.c:1565:
+			 "read %08x write %08x gtt %08x "
+			 "presumed %08x delta %08x\n",

CHECK:SPACING: No space is necessary after a cast
#3112: FILE: drivers/gpu/drm/i915/i915_gem.c:1568:
+			 (int) reloc.offset,

CHECK:SPACING: No space is necessary after a cast
#3113: FILE: drivers/gpu/drm/i915/i915_gem.c:1569:
+			 (int) reloc.target_handle,

CHECK:SPACING: No space is necessary after a cast
#3114: FILE: drivers/gpu/drm/i915/i915_gem.c:1570:
+			 (int) reloc.read_domains,

CHECK:SPACING: No space is necessary after a cast
#3115: FILE: drivers/gpu/drm/i915/i915_gem.c:1571:
+			 (int) reloc.write_domain,

CHECK:SPACING: No space is necessary after a cast
#3116: FILE: drivers/gpu/drm/i915/i915_gem.c:1572:
+			 (int) target_obj_priv->gtt_offset,

CHECK:SPACING: No space is necessary after a cast
#3117: FILE: drivers/gpu/drm/i915/i915_gem.c:1573:
+			 (int) reloc.presumed_offset,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!reloc_page"
#3151: FILE: drivers/gpu/drm/i915/i915_gem.c:1607:
+		if (reloc_page == NULL ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "reloc_page"
#3154: FILE: drivers/gpu/drm/i915/i915_gem.c:1610:
+			if (reloc_page != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!reloc_page"
#3161: FILE: drivers/gpu/drm/i915/i915_gem.c:1617:
+			if (reloc_page == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3174: FILE: drivers/gpu/drm/i915/i915_gem.c:1630:
+		DRM_INFO("Applied relocation: %p@0x%08x %08x -> %08x\n",
+			  obj, (unsigned int) reloc.offset,

CHECK:SPACING: No space is necessary after a cast
#3174: FILE: drivers/gpu/drm/i915/i915_gem.c:1630:
+			  obj, (unsigned int) reloc.offset,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "reloc_page"
#3193: FILE: drivers/gpu/drm/i915/i915_gem.c:1649:
+	if (reloc_page != NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3207: FILE: drivers/gpu/drm/i915/i915_gem.c:1663:
+i915_dispatch_gem_execbuffer(struct drm_device *dev,
+			      struct drm_i915_gem_execbuffer *exec,

CHECK:SPACING: No space is necessary after a cast
#3212: FILE: drivers/gpu/drm/i915/i915_gem.c:1668:
+					     (uintptr_t) exec->cliprects_ptr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3215: FILE: drivers/gpu/drm/i915/i915_gem.c:1671:
+	uint32_t	exec_start, exec_len;

WARNING:LINE_SPACING: Missing a blank line after declarations
#3216: FILE: drivers/gpu/drm/i915/i915_gem.c:1672:
+	uint32_t	exec_start, exec_len;
+	RING_LOCALS;

CHECK:SPACING: No space is necessary after a cast
#3218: FILE: drivers/gpu/drm/i915/i915_gem.c:1674:
+	exec_start = (uint32_t) exec_offset + exec->batch_start_offset;

CHECK:SPACING: No space is necessary after a cast
#3219: FILE: drivers/gpu/drm/i915/i915_gem.c:1675:
+	exec_len = (uint32_t) exec->batch_len;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3277: FILE: drivers/gpu/drm/i915/i915_gem.c:1733:
+	uint32_t seqno;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#3300: FILE: drivers/gpu/drm/i915/i915_gem.c:1756:
+	uint64_t exec_offset;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3301: FILE: drivers/gpu/drm/i915/i915_gem.c:1757:
+	uint32_t seqno, flush_domains, pre_flush_domains;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3305: FILE: drivers/gpu/drm/i915/i915_gem.c:1761:
+	DRM_INFO("buffers_ptr %d buffer_count %d len %08x\n",
+		  (int) args->buffers_ptr, args->buffer_count, args->batch_len);

CHECK:SPACING: No space is necessary after a cast
#3305: FILE: drivers/gpu/drm/i915/i915_gem.c:1761:
+		  (int) args->buffers_ptr, args->buffer_count, args->batch_len);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!exec_list"
#3313: FILE: drivers/gpu/drm/i915/i915_gem.c:1769:
+	if (exec_list == NULL || object_list == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!object_list"
#3313: FILE: drivers/gpu/drm/i915/i915_gem.c:1769:
+	if (exec_list == NULL || object_list == NULL) {

WARNING:SPLIT_STRING: quoted string split across lines
#3315: FILE: drivers/gpu/drm/i915/i915_gem.c:1771:
+		DRM_ERROR("Failed to allocate exec or object list "
+			  "for %d buffers\n",

CHECK:SPACING: No space is necessary after a cast
#3322: FILE: drivers/gpu/drm/i915/i915_gem.c:1778:
+			     (uintptr_t) args->buffers_ptr,

WARNING:TYPO_SPELLING: 'gloabl' may be misspelled - perhaps 'global'?
#3346: FILE: drivers/gpu/drm/i915/i915_gem.c:1802:
+	/* Zero the gloabl flush/invalidate flags. These
 	            ^^^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!object_list[i]"
#3357: FILE: drivers/gpu/drm/i915/i915_gem.c:1813:
+		if (object_list[i] == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3359: FILE: drivers/gpu/drm/i915/i915_gem.c:1815:
+			DRM_ERROR("Invalid object handle %d at index %d\n",
+				   exec_list[i].handle, i);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3377: FILE: drivers/gpu/drm/i915/i915_gem.c:1833:
+	batch_obj = object_list[args->buffer_count-1];
 	                                          ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!obj_priv->gtt_space"
#3387: FILE: drivers/gpu/drm/i915/i915_gem.c:1843:
+		if (obj_priv->gtt_space == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3423: FILE: drivers/gpu/drm/i915/i915_gem.c:1879:
+	i915_gem_dump_object(object_list[args->buffer_count - 1],
+			      args->batch_len,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3453: FILE: drivers/gpu/drm/i915/i915_gem.c:1909:
+	BUG_ON(seqno == 0);

WARNING:SPLIT_STRING: quoted string split across lines
#3469: FILE: drivers/gpu/drm/i915/i915_gem.c:1925:
+			DRM_ERROR("Going to lose the write domain on "
+				  "obj %d size %d\n",

CHECK:SPACING: No space is necessary after a cast
#3487: FILE: drivers/gpu/drm/i915/i915_gem.c:1943:
+			   (uintptr_t) args->buffers_ptr,

WARNING:SPLIT_STRING: quoted string split across lines
#3492: FILE: drivers/gpu/drm/i915/i915_gem.c:1948:
+		DRM_ERROR("failed to copy %d exec entries "
+			  "back to user (%d)\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "object_list"
#3495: FILE: drivers/gpu/drm/i915/i915_gem.c:1951:
+	if (object_list != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!obj_priv->gtt_space"
#3521: FILE: drivers/gpu/drm/i915/i915_gem.c:1977:
+	if (obj_priv->gtt_space == NULL) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3556: FILE: drivers/gpu/drm/i915/i915_gem.c:2012:
+	BUG_ON(obj_priv->pin_count < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3557: FILE: drivers/gpu/drm/i915/i915_gem.c:2013:
+	BUG_ON(obj_priv->gtt_space == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!obj_priv->gtt_space"
#3557: FILE: drivers/gpu/drm/i915/i915_gem.c:2013:
+	BUG_ON(obj_priv->gtt_space == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!obj"
#3587: FILE: drivers/gpu/drm/i915/i915_gem.c:2043:
+	if (obj == NULL) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'i915_gem_pin_ioctl', this function's name, in a string
#3588: FILE: drivers/gpu/drm/i915/i915_gem.c:2044:
+		DRM_ERROR("Bad handle in i915_gem_pin_ioctl(): %d\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!obj"
#3627: FILE: drivers/gpu/drm/i915/i915_gem.c:2083:
+	if (obj == NULL) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'i915_gem_unpin_ioctl', this function's name, in a string
#3628: FILE: drivers/gpu/drm/i915/i915_gem.c:2084:
+		DRM_ERROR("Bad handle in i915_gem_unpin_ioctl(): %d\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!obj"
#3651: FILE: drivers/gpu/drm/i915/i915_gem.c:2107:
+	if (obj == NULL) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'i915_gem_busy_ioctl', this function's name, in a string
#3652: FILE: drivers/gpu/drm/i915/i915_gem.c:2108:
+		DRM_ERROR("Bad handle in i915_gem_busy_ioctl(): %d\n",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3670: FILE: drivers/gpu/drm/i915/i915_gem.c:2126:
+    return i915_gem_ring_throttle(dev, file_priv);$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!obj_priv"
#3678: FILE: drivers/gpu/drm/i915/i915_gem.c:2134:
+	if (obj_priv == NULL)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3712: FILE: drivers/gpu/drm/i915/i915_gem.c:2168:
+		    uint32_t read_domains,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3717: FILE: drivers/gpu/drm/i915/i915_gem.c:2173:
+	uint32_t flush_domains;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3719: FILE: drivers/gpu/drm/i915/i915_gem.c:2175:
+	BUG_ON(!mutex_is_locked(&dev->struct_mutex));

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3726: FILE: drivers/gpu/drm/i915/i915_gem.c:2182:
+	if (flush_domains & ~(I915_GEM_DOMAIN_CPU|I915_GEM_DOMAIN_GTT))
 	                                         ^

CHECK:SPACING: No space is necessary after a cast
#3727: FILE: drivers/gpu/drm/i915/i915_gem.c:2183:
+		(void) i915_add_request(dev, flush_domains);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3761: FILE: drivers/gpu/drm/i915/i915_gem.c:2217:
+
+

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3769: FILE: drivers/gpu/drm/i915/i915_gem.c:2225:
+	uint32_t seqno, cur_seqno, last_seqno;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3784: FILE: drivers/gpu/drm/i915/i915_gem.c:2240:
+	i915_gem_flush(dev, ~(I915_GEM_DOMAIN_CPU|I915_GEM_DOMAIN_GTT),
 	                                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3785: FILE: drivers/gpu/drm/i915/i915_gem.c:2241:
+		       ~(I915_GEM_DOMAIN_CPU|I915_GEM_DOMAIN_GTT));
 		                            ^

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#3809: FILE: drivers/gpu/drm/i915/i915_gem.c:2265:
+		msleep(10);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3819: FILE: drivers/gpu/drm/i915/i915_gem.c:2275:
+	BUG_ON(!list_empty(&dev_priv->mm.active_list));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3820: FILE: drivers/gpu/drm/i915/i915_gem.c:2276:
+	BUG_ON(!list_empty(&dev_priv->mm.flushing_list));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3825: FILE: drivers/gpu/drm/i915/i915_gem.c:2281:
+	BUG_ON(!list_empty(&dev_priv->mm.request_list));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3832: FILE: drivers/gpu/drm/i915/i915_gem.c:2288:
+	BUG_ON(!list_empty(&dev_priv->mm.active_list));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3833: FILE: drivers/gpu/drm/i915/i915_gem.c:2289:
+	BUG_ON(!list_empty(&dev_priv->mm.flushing_list));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3834: FILE: drivers/gpu/drm/i915/i915_gem.c:2290:
+	BUG_ON(!list_empty(&dev_priv->mm.inactive_list));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3835: FILE: drivers/gpu/drm/i915/i915_gem.c:2291:
+	BUG_ON(!list_empty(&dev_priv->mm.request_list));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!obj"
#3854: FILE: drivers/gpu/drm/i915/i915_gem.c:2310:
+	if (obj == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev_priv->hws_map.handle"
#3874: FILE: drivers/gpu/drm/i915/i915_gem.c:2330:
+	if (dev_priv->hws_map.handle == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!obj"
#3902: FILE: drivers/gpu/drm/i915/i915_gem.c:2358:
+	if (obj == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev_priv->ring.map.handle"
#3925: FILE: drivers/gpu/drm/i915/i915_gem.c:2381:
+	if (dev_priv->ring.map.handle == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev_priv->ring.ring_obj"
#3958: FILE: drivers/gpu/drm/i915/i915_gem.c:2414:
+	if (dev_priv->ring.ring_obj == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev_priv->hws_obj"
#3968: FILE: drivers/gpu/drm/i915/i915_gem.c:2424:
+	if (dev_priv->hws_obj != NULL) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3996: FILE: drivers/gpu/drm/i915/i915_gem.c:2452:
+	BUG_ON(!list_empty(&dev_priv->mm.active_list));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3997: FILE: drivers/gpu/drm/i915/i915_gem.c:2453:
+	BUG_ON(!list_empty(&dev_priv->mm.flushing_list));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3998: FILE: drivers/gpu/drm/i915/i915_gem.c:2454:
+	BUG_ON(!list_empty(&dev_priv->mm.inactive_list));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3999: FILE: drivers/gpu/drm/i915/i915_gem.c:2455:
+	BUG_ON(!list_empty(&dev_priv->mm.request_list));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev_priv->ring.ring_obj"
#4028: FILE: drivers/gpu/drm/i915/i915_gem.c:2484:
+	if (dev_priv->ring.ring_obj != NULL) {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4060: FILE: drivers/gpu/drm/i915/i915_gem_debug.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4113: FILE: drivers/gpu/drm/i915/i915_gem_debug.c:54:
+
+

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4117: FILE: drivers/gpu/drm/i915/i915_gem_debug.c:58:
+		   uint32_t bias, uint32_t mark)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4119: FILE: drivers/gpu/drm/i915/i915_gem_debug.c:60:
+	uint32_t *mem = kmap_atomic(page, KM_USER0);

WARNING:LINE_SPACING: Missing a blank line after declarations
#4121: FILE: drivers/gpu/drm/i915/i915_gem_debug.c:62:
+	int i;
+	for (i = start; i < end; i += 4)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4123: FILE: drivers/gpu/drm/i915/i915_gem_debug.c:64:
+		DRM_INFO("%08x: %08x%s\n",
+			  (int) (bias + i), mem[i / 4],

CHECK:SPACING: No space is necessary after a cast
#4123: FILE: drivers/gpu/drm/i915/i915_gem_debug.c:64:
+			  (int) (bias + i), mem[i / 4],

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#4127: FILE: drivers/gpu/drm/i915/i915_gem_debug.c:68:
+	msleep(1);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#4138: FILE: drivers/gpu/drm/i915/i915_gem_debug.c:79:
+	for (page = 0; page < (len + PAGE_SIZE-1) / PAGE_SIZE; page++) {
 	                                      ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#4167: FILE: drivers/gpu/drm/i915/i915_gem_debug.c:108:
+	list_for_each_entry(obj_priv, &dev_priv->mm.active_list,
+			    list)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#4175: FILE: drivers/gpu/drm/i915/i915_gem_debug.c:116:
+	list_for_each_entry(obj_priv, &dev_priv->mm.flushing_list,
+			    list)
+	{

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4191: FILE: drivers/gpu/drm/i915/i915_gem_debug.c:132:
+
+

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4199: FILE: drivers/gpu/drm/i915/i915_gem_debug.c:140:
+	uint32_t *gtt_mapping;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4200: FILE: drivers/gpu/drm/i915/i915_gem_debug.c:141:
+	uint32_t *backing_map = NULL;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!gtt_mapping"
#4209: FILE: drivers/gpu/drm/i915/i915_gem_debug.c:150:
+	if (gtt_mapping == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!backing_map"
#4219: FILE: drivers/gpu/drm/i915/i915_gem_debug.c:160:
+		if (backing_map == NULL) {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4225: FILE: drivers/gpu/drm/i915/i915_gem_debug.c:166:
+			uint32_t cpuval = backing_map[i];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4226: FILE: drivers/gpu/drm/i915/i915_gem_debug.c:167:
+			uint32_t gttval = readl(gtt_mapping +

WARNING:SPLIT_STRING: quoted string split across lines
#4231: FILE: drivers/gpu/drm/i915/i915_gem_debug.c:172:
+				DRM_INFO("incoherent CPU vs GPU at 0x%08x: "
+					 "0x%08x vs 0x%08x\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "backing_map"
#4246: FILE: drivers/gpu/drm/i915/i915_gem_debug.c:187:
+	if (backing_map != NULL)

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#4251: FILE: drivers/gpu/drm/i915/i915_gem_debug.c:192:
+	msleep(1);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4267: FILE: drivers/gpu/drm/i915/i915_gem_proc.c:1:
+/*

CHECK:SPACING: No space is necessary after a cast
#4303: FILE: drivers/gpu/drm/i915/i915_gem_proc.c:37:
+	struct drm_minor *minor = (struct drm_minor *) data;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#4317: FILE: drivers/gpu/drm/i915/i915_gem_proc.c:51:
+	list_for_each_entry(obj_priv, &dev_priv->mm.active_list,
+			    list)
+	{

WARNING:LINE_SPACING: Missing a blank line after declarations
#4321: FILE: drivers/gpu/drm/i915/i915_gem_proc.c:55:
+		struct drm_gem_object *obj = obj_priv->obj;
+		if (obj->name) {

CHECK:SPACING: No space is necessary after a cast
#4342: FILE: drivers/gpu/drm/i915/i915_gem_proc.c:76:
+	struct drm_minor *minor = (struct drm_minor *) data;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#4356: FILE: drivers/gpu/drm/i915/i915_gem_proc.c:90:
+	list_for_each_entry(obj_priv, &dev_priv->mm.flushing_list,
+			    list)
+	{

WARNING:LINE_SPACING: Missing a blank line after declarations
#4360: FILE: drivers/gpu/drm/i915/i915_gem_proc.c:94:
+		struct drm_gem_object *obj = obj_priv->obj;
+		if (obj->name) {

CHECK:SPACING: No space is necessary after a cast
#4380: FILE: drivers/gpu/drm/i915/i915_gem_proc.c:114:
+	struct drm_minor *minor = (struct drm_minor *) data;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#4394: FILE: drivers/gpu/drm/i915/i915_gem_proc.c:128:
+	list_for_each_entry(obj_priv, &dev_priv->mm.inactive_list,
+			    list)
+	{

WARNING:LINE_SPACING: Missing a blank line after declarations
#4398: FILE: drivers/gpu/drm/i915/i915_gem_proc.c:132:
+		struct drm_gem_object *obj = obj_priv->obj;
+		if (obj->name) {

CHECK:SPACING: No space is necessary after a cast
#4418: FILE: drivers/gpu/drm/i915/i915_gem_proc.c:152:
+	struct drm_minor *minor = (struct drm_minor *) data;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#4432: FILE: drivers/gpu/drm/i915/i915_gem_proc.c:166:
+	list_for_each_entry(gem_request, &dev_priv->mm.request_list,
+			    list)
+	{

CHECK:SPACING: No space is necessary after a cast
#4437: FILE: drivers/gpu/drm/i915/i915_gem_proc.c:171:
+			       (int) (jiffies - gem_request->emitted_jiffies),

CHECK:SPACING: No space is necessary after a cast
#4449: FILE: drivers/gpu/drm/i915/i915_gem_proc.c:183:
+	struct drm_minor *minor = (struct drm_minor *) data;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4471: FILE: drivers/gpu/drm/i915/i915_gem_proc.c:205:
+
+

CHECK:SPACING: No space is necessary after a cast
#4475: FILE: drivers/gpu/drm/i915/i915_gem_proc.c:209:
+	struct drm_minor *minor = (struct drm_minor *) data;

WARNING:SPACING: Unnecessary space before function pointer arguments
#4515: FILE: drivers/gpu/drm/i915/i915_gem_proc.c:249:
+	int (*f) (char *, char **, off_t, int, int *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#4515: FILE: drivers/gpu/drm/i915/i915_gem_proc.c:249:
+	int (*f) (char *, char **, off_t, int, int *, void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char **' should also have an identifier name
#4515: FILE: drivers/gpu/drm/i915/i915_gem_proc.c:249:
+	int (*f) (char *, char **, off_t, int, int *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'off_t' should also have an identifier name
#4515: FILE: drivers/gpu/drm/i915/i915_gem_proc.c:249:
+	int (*f) (char *, char **, off_t, int, int *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#4515: FILE: drivers/gpu/drm/i915/i915_gem_proc.c:249:
+	int (*f) (char *, char **, off_t, int, int *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#4515: FILE: drivers/gpu/drm/i915/i915_gem_proc.c:249:
+	int (*f) (char *, char **, off_t, int, int *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#4515: FILE: drivers/gpu/drm/i915/i915_gem_proc.c:249:
+	int (*f) (char *, char **, off_t, int, int *, void *);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#4534: FILE: drivers/gpu/drm/i915/i915_gem_proc.c:268:
+					S_IFREG | S_IRUGO, minor->dev_root);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4565: FILE: drivers/gpu/drm/i915/i915_gem_tiling.c:1:
+/*

WARNING:TYPO_SPELLING: 'objet' may be misspelled - perhaps 'object'?
#4634: FILE: drivers/gpu/drm/i915/i915_gem_tiling.c:70:
+ * 17 is not just a page offset, so as we page an objet out and back in,
                                                   ^^^^^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4654: FILE: drivers/gpu/drm/i915/i915_gem_tiling.c:90:
+	uint32_t swizzle_x = I915_BIT_6_SWIZZLE_UNKNOWN;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4655: FILE: drivers/gpu/drm/i915/i915_gem_tiling.c:91:
+	uint32_t swizzle_y = I915_BIT_6_SWIZZLE_UNKNOWN;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4664: FILE: drivers/gpu/drm/i915/i915_gem_tiling.c:100:
+		uint32_t dcc;

WARNING:SPLIT_STRING: quoted string split across lines
#4700: FILE: drivers/gpu/drm/i915/i915_gem_tiling.c:136:
+			DRM_ERROR("Couldn't read from MCHBAR.  "
+				  "Disabling tiling.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4744: FILE: drivers/gpu/drm/i915/i915_gem_tiling.c:180:
+i915_gem_set_tiling(struct drm_device *dev, void *data,
+		   struct drm_file *file_priv)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!obj"
#4752: FILE: drivers/gpu/drm/i915/i915_gem_tiling.c:188:
+	if (obj == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4786: FILE: drivers/gpu/drm/i915/i915_gem_tiling.c:222:
+i915_gem_get_tiling(struct drm_device *dev, void *data,
+		   struct drm_file *file_priv)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!obj"
#4794: FILE: drivers/gpu/drm/i915/i915_gem_tiling.c:230:
+	if (obj == NULL)

CHECK:BIT_MACRO: Prefer using the BIT macro
#4898: FILE: drivers/gpu/drm/i915/i915_reg.h:521:
+#define DCC_ADDRESSING_MODE_DUAL_CHANNEL_ASYMMETRIC	(1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#4901: FILE: drivers/gpu/drm/i915/i915_reg.h:524:
+#define DCC_CHANNEL_XOR_DISABLE				(1 << 10)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4921: FILE: include/drm/drm.h:579:
+	uint32_t handle;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4922: FILE: include/drm/drm.h:580:
+	uint32_t pad;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4928: FILE: include/drm/drm.h:586:
+	uint32_t handle;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4931: FILE: include/drm/drm.h:589:
+	uint32_t name;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4937: FILE: include/drm/drm.h:595:
+	uint32_t name;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4940: FILE: include/drm/drm.h:598:
+	uint32_t handle;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#4943: FILE: include/drm/drm.h:601:
+	uint64_t size;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#4953: FILE: include/drm/drm.h:618:
+#define DRM_IOCTL_GEM_CLOSE		DRM_IOW (0x09, struct drm_gem_close)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#4953: FILE: include/drm/drm.h:618:
+#define DRM_IOCTL_GEM_CLOSE		DRM_IOW (0x09, struct drm_gem_close)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#5000: FILE: include/drm/drmP.h:580:
+	struct file *filp;
 	             ^^^^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5020: FILE: include/drm/drmP.h:600:
+	uint32_t read_domains;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5021: FILE: include/drm/drmP.h:601:
+	uint32_t write_domain;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5029: FILE: include/drm/drmP.h:609:
+	uint32_t pending_read_domains;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5030: FILE: include/drm/drmP.h:610:
+	uint32_t pending_write_domain;

WARNING:SPACING: Unnecessary space before function pointer arguments
#5052: FILE: include/drm/drmP.h:681:
+	int (*gem_init_object) (struct drm_gem_object *obj);

WARNING:SPACING: Unnecessary space before function pointer arguments
#5053: FILE: include/drm/drmP.h:682:
+	void (*gem_free_object) (struct drm_gem_object *obj);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5073: FILE: include/drm/drmP.h:852:
+	uint32_t gtt_total;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5074: FILE: include/drm/drmP.h:853:
+	uint32_t invalidate_domains;    /* domains pending invalidation */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5075: FILE: include/drm/drmP.h:854:
+	uint32_t flush_domains;         /* domains pending flush */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5085: FILE: include/drm/drmP.h:953:
+extern DRM_AGP_MEM *drm_agp_bind_pages(struct drm_device *dev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5106: FILE: include/drm/drmP.h:1119:
+extern void drm_agp_chipset_flush(struct drm_device *dev);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!obj"
#5130: FILE: include/drm/drmP.h:1198:
+	if (obj == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!obj"
#5150: FILE: include/drm/drmP.h:1218:
+	if (obj == NULL)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#5163: FILE: include/drm/drmP.h:1231:
+					     struct drm_file *filp,
 					                      ^^^^

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#5208: FILE: include/drm/i915_drm.h:179:
+#define DRM_IOCTL_I915_GEM_PIN		DRM_IOWR(DRM_COMMAND_BASE + DRM_I915_GEM_PIN, struct drm_i915_gem_pin)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#5209: FILE: include/drm/i915_drm.h:180:
+#define DRM_IOCTL_I915_GEM_UNPIN	DRM_IOW(DRM_COMMAND_BASE + DRM_I915_GEM_UNPIN, struct drm_i915_gem_unpin)

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#5210: FILE: include/drm/i915_drm.h:181:
+#define DRM_IOCTL_I915_GEM_BUSY		DRM_IOWR(DRM_COMMAND_BASE + DRM_I915_GEM_BUSY, struct drm_i915_gem_busy)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5211: FILE: include/drm/i915_drm.h:182:
+#define DRM_IOCTL_I915_GEM_THROTTLE	DRM_IO ( DRM_COMMAND_BASE + DRM_I915_GEM_THROTTLE)

ERROR:SPACING: space prohibited after that open parenthesis '('
#5211: FILE: include/drm/i915_drm.h:182:
+#define DRM_IOCTL_I915_GEM_THROTTLE	DRM_IO ( DRM_COMMAND_BASE + DRM_I915_GEM_THROTTLE)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#5211: FILE: include/drm/i915_drm.h:182:
+#define DRM_IOCTL_I915_GEM_THROTTLE	DRM_IO ( DRM_COMMAND_BASE + DRM_I915_GEM_THROTTLE)

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#5214: FILE: include/drm/i915_drm.h:185:
+#define DRM_IOCTL_I915_GEM_CREATE	DRM_IOWR(DRM_COMMAND_BASE + DRM_I915_GEM_CREATE, struct drm_i915_gem_create)

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#5215: FILE: include/drm/i915_drm.h:186:
+#define DRM_IOCTL_I915_GEM_PREAD	DRM_IOW (DRM_COMMAND_BASE + DRM_I915_GEM_PREAD, struct drm_i915_gem_pread)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5215: FILE: include/drm/i915_drm.h:186:
+#define DRM_IOCTL_I915_GEM_PREAD	DRM_IOW (DRM_COMMAND_BASE + DRM_I915_GEM_PREAD, struct drm_i915_gem_pread)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#5215: FILE: include/drm/i915_drm.h:186:
+#define DRM_IOCTL_I915_GEM_PREAD	DRM_IOW (DRM_COMMAND_BASE + DRM_I915_GEM_PREAD, struct drm_i915_gem_pread)

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#5216: FILE: include/drm/i915_drm.h:187:
+#define DRM_IOCTL_I915_GEM_PWRITE	DRM_IOW (DRM_COMMAND_BASE + DRM_I915_GEM_PWRITE, struct drm_i915_gem_pwrite)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5216: FILE: include/drm/i915_drm.h:187:
+#define DRM_IOCTL_I915_GEM_PWRITE	DRM_IOW (DRM_COMMAND_BASE + DRM_I915_GEM_PWRITE, struct drm_i915_gem_pwrite)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#5216: FILE: include/drm/i915_drm.h:187:
+#define DRM_IOCTL_I915_GEM_PWRITE	DRM_IOW (DRM_COMMAND_BASE + DRM_I915_GEM_PWRITE, struct drm_i915_gem_pwrite)

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#5217: FILE: include/drm/i915_drm.h:188:
+#define DRM_IOCTL_I915_GEM_MMAP		DRM_IOWR(DRM_COMMAND_BASE + DRM_I915_GEM_MMAP, struct drm_i915_gem_mmap)

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#5218: FILE: include/drm/i915_drm.h:189:
+#define DRM_IOCTL_I915_GEM_SET_DOMAIN	DRM_IOW (DRM_COMMAND_BASE + DRM_I915_GEM_SET_DOMAIN, struct drm_i915_gem_set_domain)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5218: FILE: include/drm/i915_drm.h:189:
+#define DRM_IOCTL_I915_GEM_SET_DOMAIN	DRM_IOW (DRM_COMMAND_BASE + DRM_I915_GEM_SET_DOMAIN, struct drm_i915_gem_set_domain)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#5218: FILE: include/drm/i915_drm.h:189:
+#define DRM_IOCTL_I915_GEM_SET_DOMAIN	DRM_IOW (DRM_COMMAND_BASE + DRM_I915_GEM_SET_DOMAIN, struct drm_i915_gem_set_domain)

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#5219: FILE: include/drm/i915_drm.h:190:
+#define DRM_IOCTL_I915_GEM_SW_FINISH	DRM_IOW (DRM_COMMAND_BASE + DRM_I915_GEM_SW_FINISH, struct drm_i915_gem_sw_finish)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5219: FILE: include/drm/i915_drm.h:190:
+#define DRM_IOCTL_I915_GEM_SW_FINISH	DRM_IOW (DRM_COMMAND_BASE + DRM_I915_GEM_SW_FINISH, struct drm_i915_gem_sw_finish)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#5219: FILE: include/drm/i915_drm.h:190:
+#define DRM_IOCTL_I915_GEM_SW_FINISH	DRM_IOW (DRM_COMMAND_BASE + DRM_I915_GEM_SW_FINISH, struct drm_i915_gem_sw_finish)

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#5220: FILE: include/drm/i915_drm.h:191:
+#define DRM_IOCTL_I915_GEM_SET_TILING	DRM_IOWR (DRM_COMMAND_BASE + DRM_I915_GEM_SET_TILING, struct drm_i915_gem_set_tiling)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5220: FILE: include/drm/i915_drm.h:191:
+#define DRM_IOCTL_I915_GEM_SET_TILING	DRM_IOWR (DRM_COMMAND_BASE + DRM_I915_GEM_SET_TILING, struct drm_i915_gem_set_tiling)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#5220: FILE: include/drm/i915_drm.h:191:
+#define DRM_IOCTL_I915_GEM_SET_TILING	DRM_IOWR (DRM_COMMAND_BASE + DRM_I915_GEM_SET_TILING, struct drm_i915_gem_set_tiling)

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#5221: FILE: include/drm/i915_drm.h:192:
+#define DRM_IOCTL_I915_GEM_GET_TILING	DRM_IOWR (DRM_COMMAND_BASE + DRM_I915_GEM_GET_TILING, struct drm_i915_gem_get_tiling)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5221: FILE: include/drm/i915_drm.h:192:
+#define DRM_IOCTL_I915_GEM_GET_TILING	DRM_IOWR (DRM_COMMAND_BASE + DRM_I915_GEM_GET_TILING, struct drm_i915_gem_get_tiling)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#5221: FILE: include/drm/i915_drm.h:192:
+#define DRM_IOCTL_I915_GEM_GET_TILING	DRM_IOWR (DRM_COMMAND_BASE + DRM_I915_GEM_GET_TILING, struct drm_i915_gem_get_tiling)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#5242: FILE: include/drm/i915_drm.h:306:
+	uint64_t gtt_start;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#5247: FILE: include/drm/i915_drm.h:311:
+	uint64_t gtt_end;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#5256: FILE: include/drm/i915_drm.h:320:
+	uint64_t size;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5262: FILE: include/drm/i915_drm.h:326:
+	uint32_t handle;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5263: FILE: include/drm/i915_drm.h:327:
+	uint32_t pad;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5268: FILE: include/drm/i915_drm.h:332:
+	uint32_t handle;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5269: FILE: include/drm/i915_drm.h:333:
+	uint32_t pad;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#5271: FILE: include/drm/i915_drm.h:335:
+	uint64_t offset;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#5273: FILE: include/drm/i915_drm.h:337:
+	uint64_t size;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#5279: FILE: include/drm/i915_drm.h:343:
+	uint64_t data_ptr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5284: FILE: include/drm/i915_drm.h:348:
+	uint32_t handle;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5285: FILE: include/drm/i915_drm.h:349:
+	uint32_t pad;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#5287: FILE: include/drm/i915_drm.h:351:
+	uint64_t offset;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#5289: FILE: include/drm/i915_drm.h:353:
+	uint64_t size;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#5295: FILE: include/drm/i915_drm.h:359:
+	uint64_t data_ptr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5300: FILE: include/drm/i915_drm.h:364:
+	uint32_t handle;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5301: FILE: include/drm/i915_drm.h:365:
+	uint32_t pad;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#5303: FILE: include/drm/i915_drm.h:367:
+	uint64_t offset;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#5309: FILE: include/drm/i915_drm.h:373:
+	uint64_t size;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#5315: FILE: include/drm/i915_drm.h:379:
+	uint64_t addr_ptr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5320: FILE: include/drm/i915_drm.h:384:
+	uint32_t handle;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5323: FILE: include/drm/i915_drm.h:387:
+	uint32_t read_domains;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5326: FILE: include/drm/i915_drm.h:390:
+	uint32_t write_domain;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5331: FILE: include/drm/i915_drm.h:395:
+	uint32_t handle;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5343: FILE: include/drm/i915_drm.h:407:
+	uint32_t target_handle;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5349: FILE: include/drm/i915_drm.h:413:
+	uint32_t delta;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#5352: FILE: include/drm/i915_drm.h:416:
+	uint64_t offset;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#5362: FILE: include/drm/i915_drm.h:426:
+	uint64_t presumed_offset;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5367: FILE: include/drm/i915_drm.h:431:
+	uint32_t read_domains;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5376: FILE: include/drm/i915_drm.h:440:
+	uint32_t write_domain;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5407: FILE: include/drm/i915_drm.h:471:
+	uint32_t handle;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5410: FILE: include/drm/i915_drm.h:474:
+	uint32_t relocation_count;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#5415: FILE: include/drm/i915_drm.h:479:
+	uint64_t relocs_ptr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#5418: FILE: include/drm/i915_drm.h:482:
+	uint64_t alignment;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#5424: FILE: include/drm/i915_drm.h:488:
+	uint64_t offset;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#5438: FILE: include/drm/i915_drm.h:502:
+	uint64_t buffers_ptr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5439: FILE: include/drm/i915_drm.h:503:
+	uint32_t buffer_count;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5442: FILE: include/drm/i915_drm.h:506:
+	uint32_t batch_start_offset;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5444: FILE: include/drm/i915_drm.h:508:
+	uint32_t batch_len;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5445: FILE: include/drm/i915_drm.h:509:
+	uint32_t DR1;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5446: FILE: include/drm/i915_drm.h:510:
+	uint32_t DR4;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5447: FILE: include/drm/i915_drm.h:511:
+	uint32_t num_cliprects;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#5449: FILE: include/drm/i915_drm.h:513:
+	uint64_t cliprects_ptr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5454: FILE: include/drm/i915_drm.h:518:
+	uint32_t handle;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5455: FILE: include/drm/i915_drm.h:519:
+	uint32_t pad;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#5458: FILE: include/drm/i915_drm.h:522:
+	uint64_t alignment;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#5461: FILE: include/drm/i915_drm.h:525:
+	uint64_t offset;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5466: FILE: include/drm/i915_drm.h:530:
+	uint32_t handle;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5467: FILE: include/drm/i915_drm.h:531:
+	uint32_t pad;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5472: FILE: include/drm/i915_drm.h:536:
+	uint32_t handle;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5475: FILE: include/drm/i915_drm.h:539:
+	uint32_t busy;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5492: FILE: include/drm/i915_drm.h:556:
+	uint32_t handle;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5506: FILE: include/drm/i915_drm.h:570:
+	uint32_t tiling_mode;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5512: FILE: include/drm/i915_drm.h:576:
+	uint32_t stride;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5518: FILE: include/drm/i915_drm.h:582:
+	uint32_t swizzle_mode;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5523: FILE: include/drm/i915_drm.h:587:
+	uint32_t handle;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5529: FILE: include/drm/i915_drm.h:593:
+	uint32_t tiling_mode;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#5535: FILE: include/drm/i915_drm.h:599:
+	uint32_t swizzle_mode;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000235152.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 15 errors, 117 warnings, 276 checks, 5302 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000235152.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
