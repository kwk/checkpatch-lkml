WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
This patch registers ACPI OperationRegions (only SystemIO, SystemMemory might

WARNING:TYPO_SPELLING: 'beloning' may be misspelled - perhaps 'belonging'?
#35: 
request space beloning to these regions via acpi_request_region (e.g. also
              ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:IF_1: Consider removing the #if 1 and its #endif
#73: FILE: drivers/acpi/osl.c:50:
+#if 1

ERROR:SPACING: space required after that ',' (ctx:VxV)
#76: FILE: drivers/acpi/osl.c:53:
+#define dprintk(format,args...)
                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: missing space after struct definition
#85: FILE: drivers/acpi/osl.c:85:
+struct ioport_res_list{

CHECK:LINE_SPACING: Please don't use multiple blank lines
#93: FILE: drivers/acpi/osl.c:93:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#106: FILE: drivers/acpi/osl.c:110:
+/*
+  type: We have three mappings:

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#114: FILE: drivers/acpi/osl.c:118:
+int acpi_request_region (resource_size_t addr, unsigned int length,

CHECK:SPACING: No space is necessary after a cast
#121: FILE: drivers/acpi/osl.c:125:
+	new_res = (struct resource*) kzalloc(sizeof (struct resource), GFP_KERNEL);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#121: FILE: drivers/acpi/osl.c:125:
+	new_res = (struct resource*) kzalloc(sizeof (struct resource), GFP_KERNEL);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#121: FILE: drivers/acpi/osl.c:125:
+	new_res = (struct resource*) kzalloc(sizeof (struct resource), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#121: FILE: drivers/acpi/osl.c:125:
+	new_res = (struct resource*) kzalloc(sizeof (struct resource), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*new_res)...) over kzalloc(sizeof (struct resource)...)
#121: FILE: drivers/acpi/osl.c:125:
+	new_res = (struct resource*) kzalloc(sizeof (struct resource), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:SPACING: space required before the open brace '{'
#138: FILE: drivers/acpi/osl.c:136:
+	if (!addr || !length){

ERROR:SPACING: space required before the open brace '{'
#144: FILE: drivers/acpi/osl.c:142:
+	list_for_each_entry(io_res_list, &ioport_res_list, res_list){

ERROR:SPACING: space required before the open brace '{'
#145: FILE: drivers/acpi/osl.c:143:
+		if (new_res->start < io_res_list->res.start){

ERROR:SPACING: space required before the open brace '{'
#151: FILE: drivers/acpi/osl.c:149:
+		else if (new_res->end > io_res_list->res.end){

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#151: FILE: drivers/acpi/osl.c:149:
+		}
+		else if (new_res->end > io_res_list->res.end){

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open brace '{'
#161: FILE: drivers/acpi/osl.c:159:
+	if (port){

ERROR:SPACING: space required before the open brace '{'
#162: FILE: drivers/acpi/osl.c:160:
+		if (par_res){

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#167: FILE: drivers/acpi/osl.c:165:
+				dprintk (KERN_ERR "Insert ACPI resource success:"

WARNING:SPLIT_STRING: quoted string split across lines
#168: FILE: drivers/acpi/osl.c:166:
+				dprintk (KERN_ERR "Insert ACPI resource success:"
+					 " %s->%s\n", io_res_list->res.name,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space required before the open brace '{'
#171: FILE: drivers/acpi/osl.c:169:
+		else{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#171: FILE: drivers/acpi/osl.c:169:
+		}
+		else{

CHECK:BRACES: Unbalanced braces around else statement
#171: FILE: drivers/acpi/osl.c:169:
+		else{

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#173: FILE: drivers/acpi/osl.c:171:
+				dprintk ("Added io reg: start: %lX, end: %lX, name: %s\n",

WARNING:MISORDERED_TYPE: type 'long unsigned int' should be specified in [[un]signed] [short|int|long|long long] order
#174: FILE: drivers/acpi/osl.c:172:
+					 (long unsigned int)new_res->start,

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'long unsigned int' as the int is unnecessary
#174: FILE: drivers/acpi/osl.c:172:
+					 (long unsigned int)new_res->start,

WARNING:MISORDERED_TYPE: type 'long unsigned int' should be specified in [[un]signed] [short|int|long|long long] order
#175: FILE: drivers/acpi/osl.c:173:
+					 (long unsigned int)new_res->end, new_res->name);

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'long unsigned int' as the int is unnecessary
#175: FILE: drivers/acpi/osl.c:173:
+					 (long unsigned int)new_res->end, new_res->name);

ERROR:SPACING: space required before the open brace '{'
#180: FILE: drivers/acpi/osl.c:178:
+	else{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#180: FILE: drivers/acpi/osl.c:178:
+	}
+	else{

CHECK:BRACES: Unbalanced braces around else statement
#180: FILE: drivers/acpi/osl.c:178:
+	else{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#182: FILE: drivers/acpi/osl.c:180:
+			dprintk ("Added mem reg: start: %lX, end: %lX, name: %s\n",

WARNING:MISORDERED_TYPE: type 'long unsigned int' should be specified in [[un]signed] [short|int|long|long long] order
#183: FILE: drivers/acpi/osl.c:181:
+				 (long unsigned int)new_res->start,

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'long unsigned int' as the int is unnecessary
#183: FILE: drivers/acpi/osl.c:181:
+				 (long unsigned int)new_res->start,

WARNING:MISORDERED_TYPE: type 'long unsigned int' should be specified in [[un]signed] [short|int|long|long long] order
#184: FILE: drivers/acpi/osl.c:182:
+				 (long unsigned int)new_res->end, new_res->name);

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'long unsigned int' as the int is unnecessary
#184: FILE: drivers/acpi/osl.c:182:
+				 (long unsigned int)new_res->end, new_res->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#196: FILE: drivers/acpi/osl.c:194:
+	printk (KERN_ERR  "Could not add %s reg: start: %lX, end: %lX, name: "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#196: FILE: drivers/acpi/osl.c:194:
+	printk (KERN_ERR  "Could not add %s reg: start: %lX, end: %lX, name: "

WARNING:MISORDERED_TYPE: type 'long unsigned int' should be specified in [[un]signed] [short|int|long|long long] order
#197: FILE: drivers/acpi/osl.c:195:
+		"%s\n", port ? "IO" : "mem", (long unsigned int)new_res->start,

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'long unsigned int' as the int is unnecessary
#197: FILE: drivers/acpi/osl.c:195:
+		"%s\n", port ? "IO" : "mem", (long unsigned int)new_res->start,

WARNING:SPLIT_STRING: quoted string split across lines
#197: FILE: drivers/acpi/osl.c:195:
+	printk (KERN_ERR  "Could not add %s reg: start: %lX, end: %lX, name: "
+		"%s\n", port ? "IO" : "mem", (long unsigned int)new_res->start,

WARNING:MISORDERED_TYPE: type 'long unsigned int' should be specified in [[un]signed] [short|int|long|long long] order
#198: FILE: drivers/acpi/osl.c:196:
+		(long unsigned int)new_res->end, new_res->name);

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'long unsigned int' as the int is unnecessary
#198: FILE: drivers/acpi/osl.c:196:
+		(long unsigned int)new_res->end, new_res->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#200: FILE: drivers/acpi/osl.c:198:
+		printk (KERN_ERR  "Could not add %s reg to parent: start: %lX,"

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#200: FILE: drivers/acpi/osl.c:198:
+		printk (KERN_ERR  "Could not add %s reg to parent: start: %lX,"

WARNING:SPLIT_STRING: quoted string split across lines
#201: FILE: drivers/acpi/osl.c:199:
+		printk (KERN_ERR  "Could not add %s reg to parent: start: %lX,"
+			" end: %lX, name: %s\n", port ? "IO" : "mem",

WARNING:MISORDERED_TYPE: type 'long unsigned int' should be specified in [[un]signed] [short|int|long|long long] order
#202: FILE: drivers/acpi/osl.c:200:
+			(long unsigned int)par_res->start,

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'long unsigned int' as the int is unnecessary
#202: FILE: drivers/acpi/osl.c:200:
+			(long unsigned int)par_res->start,

WARNING:MISORDERED_TYPE: type 'long unsigned int' should be specified in [[un]signed] [short|int|long|long long] order
#203: FILE: drivers/acpi/osl.c:201:
+			(long unsigned int)par_res->end, par_res->name);

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'long unsigned int' as the int is unnecessary
#203: FILE: drivers/acpi/osl.c:201:
+			(long unsigned int)par_res->end, par_res->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#214: FILE: drivers/acpi/osl.c:210:
+	acpi_request_region(acpi_gbl_FADT.xpm1a_event_block.address, acpi_gbl_FADT.pm1_event_length,
+		"ACPI PM1a_EVT_BLK", 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#219: FILE: drivers/acpi/osl.c:213:
+	acpi_request_region(acpi_gbl_FADT.xpm1b_event_block.address, acpi_gbl_FADT.pm1_event_length,
+		"ACPI PM1b_EVT_BLK", 1);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#223: FILE: drivers/acpi/osl.c:215:
+	acpi_request_region(acpi_gbl_FADT.xpm1a_control_block.address, acpi_gbl_FADT.pm1_control_length,

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#224: FILE: drivers/acpi/osl.c:216:
+	acpi_request_region(acpi_gbl_FADT.xpm1a_control_block.address, acpi_gbl_FADT.pm1_control_length,
+		"ACPI PM1a_CNT_BLK", 1);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#228: FILE: drivers/acpi/osl.c:218:
+	acpi_request_region(acpi_gbl_FADT.xpm1b_control_block.address, acpi_gbl_FADT.pm1_control_length,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#229: FILE: drivers/acpi/osl.c:219:
+	acpi_request_region(acpi_gbl_FADT.xpm1b_control_block.address, acpi_gbl_FADT.pm1_control_length,
+		"ACPI PM1b_CNT_BLK", 1);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#237: FILE: drivers/acpi/osl.c:224:
+	acpi_request_region(acpi_gbl_FADT.xpm2_control_block.address, acpi_gbl_FADT.pm2_control_length,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#238: FILE: drivers/acpi/osl.c:225:
+	acpi_request_region(acpi_gbl_FADT.xpm2_control_block.address, acpi_gbl_FADT.pm2_control_length,
+		"ACPI PM2_CNT_BLK", 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: drivers/acpi/osl.c:231:
+		acpi_request_region(acpi_gbl_FADT.xgpe0_block.address,
+			       acpi_gbl_FADT.gpe0_block_length, "ACPI GPE0_BLK", 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#252: FILE: drivers/acpi/osl.c:235:
+		acpi_request_region(acpi_gbl_FADT.xgpe1_block.address,
+			       acpi_gbl_FADT.gpe1_block_length, "ACPI GPE1_BLK", 1);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#285: FILE: drivers/acpi/osl.c:1178:
+{
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!str"
#288: FILE: drivers/acpi/osl.c:1181:
+	if (str == NULL || *str == '\0')

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required before the open brace '{'
#291: FILE: drivers/acpi/osl.c:1184:
+	if (!strcmp("strict", str)){

ERROR:SPACING: space required before the open brace '{'
#295: FILE: drivers/acpi/osl.c:1188:
+	else if (!strcmp("lax", str)){

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#295: FILE: drivers/acpi/osl.c:1188:
+	}
+	else if (!strcmp("lax", str)){

ERROR:SPACING: space required before the open brace '{'
#299: FILE: drivers/acpi/osl.c:1192:
+	else if (!strcmp("no", str)){

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#299: FILE: drivers/acpi/osl.c:1192:
+	}
+	else if (!strcmp("no", str)){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#304: FILE: drivers/acpi/osl.c:1197:
+	printk(KERN_INFO "%s\n", msg);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#308: FILE: drivers/acpi/osl.c:1201:
+__setup("acpi_enforce_resources=", acpi_enforce_resources_setup);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: drivers/acpi/osl.c:1375:
+    acpi_size               length,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: drivers/acpi/osl.c:1376:
+    char *name)$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#329: FILE: drivers/acpi/osl.c:1385:
+	/*
+	   This will never ever get freed again...

CHECK:SPACING: No space is necessary after a cast
#333: FILE: drivers/acpi/osl.c:1389:
+	res = (struct ioport_res_list*) kzalloc(sizeof(struct ioport_res_list), GFP_KERNEL);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#333: FILE: drivers/acpi/osl.c:1389:
+	res = (struct ioport_res_list*) kzalloc(sizeof(struct ioport_res_list), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#333: FILE: drivers/acpi/osl.c:1389:
+	res = (struct ioport_res_list*) kzalloc(sizeof(struct ioport_res_list), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*res)...) over kzalloc(sizeof(struct ioport_res_list)...)
#333: FILE: drivers/acpi/osl.c:1389:
+	res = (struct ioport_res_list*) kzalloc(sizeof(struct ioport_res_list), GFP_KERNEL);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#334: FILE: drivers/acpi/osl.c:1390:
+	buf = (char*)kzalloc(strlen(name) + 6, GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#334: FILE: drivers/acpi/osl.c:1390:
+	buf = (char*)kzalloc(strlen(name) + 6, GFP_KERNEL);

ERROR:SPACING: space required before the open parenthesis '('
#337: FILE: drivers/acpi/osl.c:1392:
+	if(!buf || !res)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#344: FILE: drivers/acpi/osl.c:1399:
+	sprintf (buf, "ACPI %s", name);

ERROR:SPACING: space required before the open brace '{'
#345: FILE: drivers/acpi/osl.c:1400:
+	switch (space_id){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#354: FILE: drivers/acpi/osl.c:1409:
+			printk(KERN_ERR "Could not insert resource: %s\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#357: FILE: drivers/acpi/osl.c:1412:
+			dprintk ("Added %s %s: IO reg: start: %lX, end: %lX, "

WARNING:SPLIT_STRING: quoted string split across lines
#358: FILE: drivers/acpi/osl.c:1413:
+			dprintk ("Added %s %s: IO reg: start: %lX, end: %lX, "
+				 "name: %s\n",

WARNING:TYPO_SPELLING: 'sharable' may be misspelled - perhaps 'shareable'?
#360: FILE: drivers/acpi/osl.c:1415:
+				 ? "sharable" : "",
 				    ^^^^^^^^

WARNING:MISORDERED_TYPE: type 'long unsigned int' should be specified in [[un]signed] [short|int|long|long long] order
#363: FILE: drivers/acpi/osl.c:1418:
+				 (long unsigned int)res->res.start,

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'long unsigned int' as the int is unnecessary
#363: FILE: drivers/acpi/osl.c:1418:
+				 (long unsigned int)res->res.start,

WARNING:MISORDERED_TYPE: type 'long unsigned int' should be specified in [[un]signed] [short|int|long|long long] order
#364: FILE: drivers/acpi/osl.c:1419:
+				 (long unsigned int)res->res.end,

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'long unsigned int' as the int is unnecessary
#364: FILE: drivers/acpi/osl.c:1419:
+				 (long unsigned int)res->res.end,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#370: FILE: drivers/acpi/osl.c:1425:
+		printk ("%s - %s\n", __FUNCTION__, buf);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#370: FILE: drivers/acpi/osl.c:1425:
+		printk ("%s - %s\n", __FUNCTION__, buf);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#370: FILE: drivers/acpi/osl.c:1425:
+		printk ("%s - %s\n", __FUNCTION__, buf);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#376: FILE: drivers/acpi/osl.c:1431:
+			printk(KERN_ERR "Could not insert resource: %s\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#379: FILE: drivers/acpi/osl.c:1434:
+			dprintk ("Added %s %s: mem reg: start: %lX, end: %lX, "

WARNING:SPLIT_STRING: quoted string split across lines
#380: FILE: drivers/acpi/osl.c:1435:
+			dprintk ("Added %s %s: mem reg: start: %lX, end: %lX, "
+				 "name: %s\n",

WARNING:TYPO_SPELLING: 'sharable' may be misspelled - perhaps 'shareable'?
#382: FILE: drivers/acpi/osl.c:1437:
+				 ? "sharable" : "",
 				    ^^^^^^^^

WARNING:MISORDERED_TYPE: type 'long unsigned int' should be specified in [[un]signed] [short|int|long|long long] order
#385: FILE: drivers/acpi/osl.c:1440:
+				 (long unsigned int)res->res.start,

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'long unsigned int' as the int is unnecessary
#385: FILE: drivers/acpi/osl.c:1440:
+				 (long unsigned int)res->res.start,

WARNING:MISORDERED_TYPE: type 'long unsigned int' should be specified in [[un]signed] [short|int|long|long long] order
#386: FILE: drivers/acpi/osl.c:1441:
+				 (long unsigned int)res->res.end,

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'long unsigned int' as the int is unnecessary
#386: FILE: drivers/acpi/osl.c:1441:
+				 (long unsigned int)res->res.end,

ERROR:CODE_INDENT: code indent should use tabs where possible
#389: FILE: drivers/acpi/osl.c:1444:
+ ^Icase ACPI_ADR_SPACE_PCI_CONFIG:$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#389: FILE: drivers/acpi/osl.c:1444:
+ ^Icase ACPI_ADR_SPACE_PCI_CONFIG:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: drivers/acpi/osl.c:1444:
+ ^Icase ACPI_ADR_SPACE_PCI_CONFIG:$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#431: FILE: kernel/resource.c:84:
+	seq_printf(m, "%*s%0*llx-%0*llx : %s%s - %p\n",
 			depth * 2, "",

ERROR:CODE_INDENT: code indent should use tabs where possible
#436: FILE: kernel/resource.c:88:
+^I^I        IORESOURCE_SHARED ? "*" : "",r);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#436: FILE: kernel/resource.c:88:
+		        IORESOURCE_SHARED ? "*" : "",r);
 		                                    ^

ERROR:SPACING: space required before the open brace '{'
#445: FILE: kernel/resource.c:386:
+		if (next->start < new->start || next->end > new->end){

ERROR:SPACING: space required before the open brace '{'
#456: FILE: kernel/resource.c:509:
+				if (conflict->flags & IORESOURCE_SHARED){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#457: FILE: kernel/resource.c:510:
+					printk(KERN_ERR "IO region [%s]"

WARNING:SPLIT_STRING: quoted string split across lines
#458: FILE: kernel/resource.c:511:
+					printk(KERN_ERR "IO region [%s]"
+					       " conflicts with [%s]. "

WARNING:SPLIT_STRING: quoted string split across lines
#459: FILE: kernel/resource.c:512:
+					       " conflicts with [%s]. "
+					       " Ignoring.., system might run"

WARNING:SPLIT_STRING: quoted string split across lines
#460: FILE: kernel/resource.c:513:
+					       " Ignoring.., system might run"
+					       " unstable.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#476: FILE: drivers/pnp/system.c:26:
+int pnp_reserve_range(resource_size_t start, unsigned int length,
+		  const char *pnpid, int port)

ERROR:CODE_INDENT: code indent should use tabs where possible
#503: FILE: drivers/pnp/system.c:47:
+                (unsigned long long)start, (unsigned long long)start+length,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#503: FILE: drivers/pnp/system.c:47:
+                (unsigned long long)start, (unsigned long long)start+length,$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#503: FILE: drivers/pnp/system.c:47:
+                (unsigned long long)start, (unsigned long long)start+length,
                                                                     ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!regionid"
#522: FILE: drivers/pnp/system.c:76:
+		if (regionid == NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#526: FILE: drivers/pnp/system.c:80:
+   ^I^Iif (dev->protocol->request_sys_resource(pnp_port_start(dev, i),$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#526: FILE: drivers/pnp/system.c:80:
+   ^I^Iif (dev->protocol->request_sys_resource(pnp_port_start(dev, i),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: drivers/pnp/system.c:80:
+   ^I^Iif (dev->protocol->request_sys_resource(pnp_port_start(dev, i),$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!regionid"
#540: FILE: drivers/pnp/system.c:92:
+		if (regionid == NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#544: FILE: drivers/pnp/system.c:96:
+   ^I^Iif (dev->protocol->request_sys_resource(pnp_port_start(dev, i),$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#544: FILE: drivers/pnp/system.c:96:
+   ^I^Iif (dev->protocol->request_sys_resource(pnp_port_start(dev, i),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#544: FILE: drivers/pnp/system.c:96:
+   ^I^Iif (dev->protocol->request_sys_resource(pnp_port_start(dev, i),$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#656: FILE: include/linux/acpi.h:177:
+int acpi_request_region (resource_size_t addr, unsigned int length,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000406708.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 30 errors, 75 warnings, 22 checks, 541 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000406708.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
