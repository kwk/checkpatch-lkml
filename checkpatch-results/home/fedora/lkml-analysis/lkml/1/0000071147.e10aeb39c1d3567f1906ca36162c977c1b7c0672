WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
Gitweb:     http://git.kernel.org/tip/05ffa2d02066c2cb169c02d5417308ee8ecab638

WARNING:TYPO_SPELLING: 'corrent' may be misspelled - perhaps 'correct'?
#42: 
Make sure F_printk() has corrent format and args, and make sure
                         ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#62: FILE: kernel/trace/trace_export.c:26:
+#define __field(type, item)				type item;

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#62: FILE: kernel/trace/trace_export.c:26:
+#define __field(type, item)				type item;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#65: FILE: kernel/trace/trace_export.c:29:
+#define __field_desc(type, container, item)		type item;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#65: FILE: kernel/trace/trace_export.c:29:
+#define __field_desc(type, container, item)		type item;

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#68: FILE: kernel/trace/trace_export.c:32:
+#define __array(type, item, size)			type item[size];

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#68: FILE: kernel/trace/trace_export.c:32:
+#define __array(type, item, size)			type item[size];

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#71: FILE: kernel/trace/trace_export.c:35:
+#define __array_desc(type, container, item, size)	type item[size];

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#71: FILE: kernel/trace/trace_export.c:35:
+#define __array_desc(type, container, item, size)	type item[size];

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#74: FILE: kernel/trace/trace_export.c:38:
+#define __dynamic_array(type, item)			type item[];

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#74: FILE: kernel/trace/trace_export.c:38:
+#define __dynamic_array(type, item)			type item[];

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#80: FILE: kernel/trace/trace_export.c:44:
+#define F_printk(fmt, args...) fmt, args

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#92: FILE: kernel/trace/trace_export.c:56:
+	printk(print);						\

CHECK:LINE_SPACING: Please don't use multiple blank lines
#101: FILE: kernel/trace/trace_export.c:65:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000071147.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 8 warnings, 1 checks, 57 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000071147.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
