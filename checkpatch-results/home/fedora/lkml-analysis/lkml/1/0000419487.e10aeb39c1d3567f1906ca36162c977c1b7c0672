CHECK:BRACES: Unbalanced braces around else statement
#85: FILE: arch/i386/mm/pageattr.c:38:
+		} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#112: FILE: arch/i386/mm/pageattr.c:103:
+		if (info[CACHE].count < 0)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#114: FILE: arch/i386/mm/pageattr.c:105:
+		else {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#167: FILE: arch/i386/mm/pageattr.c:166:
+		 & ~(_PAGE_ACCESSED|_PAGE_DIRTY));
 		                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#186: FILE: arch/i386/mm/pageattr.c:185:
+	if (!pgprot_match(prot, ref_prot)) {
[...]
+			if (!kpte_page)
[...]
+		if (!PageReserved(kpte_page)
[...]

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#198: FILE: arch/i386/mm/pageattr.c:189:
+			BUG_ON(!pgprot_match(old_prot, ref_prot));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#208: FILE: arch/i386/mm/pageattr.c:197:
+		if (!PageReserved(kpte_page)
+		    && pgprot_match(old_prot, ref_prot))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#211: FILE: arch/i386/mm/pageattr.c:200:
+		BUG_ON(pte_huge(*kpte));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#214: FILE: arch/i386/mm/pageattr.c:203:
+			BUG_ON(page_private(kpte_page) == 0);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#226: FILE: arch/i386/mm/pageattr.c:209:
+	if ((pgprot_val(prot) ^ pgprot_val(old_prot)) & (_PAGE_PCD|_PAGE_PWT)) {
 	                                                          ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#242: FILE: arch/i386/mm/pageattr.c:223:
+			unsigned i;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#291: FILE: arch/i386/mm/pageattr.c:277:
+	 * uses __flush_tlb_all(). */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#314: FILE: arch/i386/mm/pageattr.c:298:
+	unsigned i;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#346: FILE: arch/x86_64/mm/ioremap.c:51:
+		err = change_page_attr_addr(vaddr,npages,MAKE_GLOBAL(__PAGE_KERNEL|flags));
 		                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#346: FILE: arch/x86_64/mm/ioremap.c:51:
+		err = change_page_attr_addr(vaddr,npages,MAKE_GLOBAL(__PAGE_KERNEL|flags));
 		                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#346: FILE: arch/x86_64/mm/ioremap.c:51:
+		err = change_page_attr_addr(vaddr,npages,MAKE_GLOBAL(__PAGE_KERNEL|flags));
 		                                                                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#373: FILE: arch/x86_64/mm/pageattr.c:68:
+};
+#define TLB 0

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#388: FILE: arch/x86_64/mm/pageattr.c:83:
+		} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#405: FILE: arch/x86_64/mm/pageattr.c:99:
+	if (info[TLB].count < 0)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#407: FILE: arch/x86_64/mm/pageattr.c:101:
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#431: FILE: arch/x86_64/mm/pageattr.c:119:
+	else {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#435: FILE: arch/x86_64/mm/pageattr.c:123:
+		BUG_ON(!cpu_has_clflush);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#467: FILE: arch/x86_64/mm/pageattr.c:143:
+};
+#define kref_prot(kaddr) kref_prot[((kaddr) - __START_KERNEL_map) >> PMD_SHIFT]

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#499: FILE: arch/x86_64/mm/pageattr.c:175:
+		 & __supported_pte_mask & ~(_PAGE_ACCESSED|_PAGE_DIRTY));
 		                                          ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#517: FILE: arch/x86_64/mm/pageattr.c:188:
+	if (!pgprot_match(prot, ref_prot)) {
[...]
+			BUG_ON(!pgprot_match(old_prot, ref_prot));
[...]
-			kpte_page = split;
[...]

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#529: FILE: arch/x86_64/mm/pageattr.c:192:
+			BUG_ON(!pgprot_match(old_prot, ref_prot));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#542: FILE: arch/x86_64/mm/pageattr.c:201:
+		BUG_ON(pte_huge(*kpte));

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#550: FILE: arch/x86_64/mm/pageattr.c:208:
+	if ((pgprot_val(prot) ^ pgprot_val(old_prot)) & (_PAGE_PCD|_PAGE_PWT)) {
 	                                                          ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#565: FILE: arch/x86_64/mm/pageattr.c:219:
+	if (page_private(kpte_page) == PTRS_PER_PTE
+	    && address >= __START_KERNEL_map

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#566: FILE: arch/x86_64/mm/pageattr.c:220:
+	    && address >= __START_KERNEL_map
+	    && address < __START_KERNEL_map + KERNEL_TEXT_SIZE) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#567: FILE: arch/x86_64/mm/pageattr.c:221:
+		unsigned i;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#637: FILE: arch/x86_64/mm/pageattr.c:307:
+	unsigned i;

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#727: FILE: include/asm-x86_64/system.h:112:
+	__asm__ __volatile__ ("wbinvd": : :"memory")
 	                              ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#727: FILE: include/asm-x86_64/system.h:112:
+	__asm__ __volatile__ ("wbinvd": : :"memory")
 	                                  ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000419487.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 11 warnings, 19 checks, 645 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000419487.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
