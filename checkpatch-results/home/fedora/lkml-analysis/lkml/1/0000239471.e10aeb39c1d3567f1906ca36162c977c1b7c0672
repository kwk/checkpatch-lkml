WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#83: FILE: arch/cris/arch-v10/kernel/io_interface_mux.c:653:
+			BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#92: FILE: arch/cris/arch-v10/kernel/io_interface_mux.c:802:
+			BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#101: FILE: arch/cris/arch-v10/kernel/io_interface_mux.c:894:
+			BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#106: FILE: arch/cris/arch-v10/kernel/io_interface_mux.c:898:
+			BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#129: FILE: drivers/infiniband/core/cma.c:1255:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#140: FILE: drivers/infiniband/core/mad.c:2252:
+				BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#151: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:259:
+			BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#162: FILE: drivers/infiniband/hw/cxgb3/cxio_hal.c:112:
+				BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#173: FILE: drivers/infiniband/hw/cxgb3/iwch_cm.c:1496:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#182: FILE: drivers/infiniband/hw/cxgb3/iwch_cm.c:1593:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#191: FILE: drivers/infiniband/hw/cxgb3/iwch_cm.c:1656:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#202: FILE: drivers/mmc/host/wbsd.c:1419:
+	BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#212: FILE: drivers/net/wireless/b43legacy/b43legacy.h:345:
+# define B43legacy_BUG()	BUG()

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#454: FILE: drivers/scsi/device_handler/scsi_dh_emc.c:301:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#484: FILE: drivers/ssb/ssb_private.h:26:
+# define SSB_BUG()		BUG()

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#500: FILE: fs/jbd2/journal.c:734:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#511: FILE: include/asm-generic/bug.h:31:
+#define BUG_ON(condition)						\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'condition' - possible side-effects?
#511: FILE: include/asm-generic/bug.h:31:
+#define BUG_ON(condition)						\
+	do {								\
+		if (__builtin_constant_p(condition))			\
+			(void)sizeof(char[1 - 2 * !!(condition)]);	\
+		else if (unlikely(condition))				\
+			BUG();						\
+	} while (0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#516: FILE: include/asm-generic/bug.h:36:
+			BUG();						\

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#542: FILE: kernel/sched.c:2801:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#553: FILE: net/bluetooth/rfcomm/tty.c:334:
+		BUG();

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000239471.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 20 warnings, 1 checks, 393 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000239471.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
