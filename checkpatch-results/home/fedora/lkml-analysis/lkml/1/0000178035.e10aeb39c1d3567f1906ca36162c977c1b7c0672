ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#61: FILE: drivers/regulator/core.c:708:
regulator_dev *rdev,

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: drivers/regulator/core.c:713:
+    if (constraints->always_on && constraints->disable_on_boot) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#68: FILE: drivers/regulator/core.c:714:
+        printk(KERN_ERR "%s: always on and disable at boot both set for$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: drivers/regulator/core.c:714:
+        printk(KERN_ERR "%s: always on and disable at boot both set for$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#68: FILE: drivers/regulator/core.c:714:
+        printk(KERN_ERR "%s: always on and disable at boot both set for

ERROR:CODE_INDENT: code indent should use tabs where possible
#70: FILE: drivers/regulator/core.c:715:
+               __func__, name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: drivers/regulator/core.c:715:
+               __func__, name);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#71: FILE: drivers/regulator/core.c:716:
+        rdev->constraints = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: drivers/regulator/core.c:716:
+        rdev->constraints = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#72: FILE: drivers/regulator/core.c:717:
+        ret = -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: drivers/regulator/core.c:717:
+        ret = -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#73: FILE: drivers/regulator/core.c:718:
+        goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: drivers/regulator/core.c:718:
+        goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: drivers/regulator/core.c:719:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: drivers/regulator/core.c:732:
+    } else if (constraints->disable_on_boot && ops->disable &&$

ERROR:CODE_INDENT: code indent should use tabs where possible
#84: FILE: drivers/regulator/core.c:733:
+           ((ops->is_enabled && ops->is_enabled(rdev)) ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: drivers/regulator/core.c:733:
+           ((ops->is_enabled && ops->is_enabled(rdev)) ||$

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: drivers/regulator/core.c:734:
+            (!ops->is_enabled && constraints->boot_on))) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: drivers/regulator/core.c:734:
+            (!ops->is_enabled && constraints->boot_on))) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#86: FILE: drivers/regulator/core.c:735:
+        ret = ops->disable(rdev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: drivers/regulator/core.c:735:
+        ret = ops->disable(rdev);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#87: FILE: drivers/regulator/core.c:736:
+        if (ret < 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: drivers/regulator/core.c:736:
+        if (ret < 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#87: FILE: drivers/regulator/core.c:736:
+        if (ret < 0) {
+            printk(KERN_ERR "%s: failed to disable %s\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#88: FILE: drivers/regulator/core.c:737:
+            printk(KERN_ERR "%s: failed to disable %s\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: drivers/regulator/core.c:737:
+            printk(KERN_ERR "%s: failed to disable %s\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#88: FILE: drivers/regulator/core.c:737:
+            printk(KERN_ERR "%s: failed to disable %s\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: drivers/regulator/core.c:738:
+                   __func__, name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: drivers/regulator/core.c:738:
+                   __func__, name);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: drivers/regulator/core.c:739:
+            rdev->constraints = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: drivers/regulator/core.c:739:
+            rdev->constraints = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#91: FILE: drivers/regulator/core.c:740:
+            goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: drivers/regulator/core.c:740:
+            goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#92: FILE: drivers/regulator/core.c:741:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: drivers/regulator/core.c:741:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: include/linux/regulator/machine.h:115:
+    unsigned always_on:1;        /* regulator never off when system on */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: include/linux/regulator/machine.h:116:
+    unsigned boot_on:1;        /* bootloader/firmware enabled reg */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: include/linux/regulator/machine.h:117:
+    unsigned disable_on_boot:1;    /* regulator to be disabled at boot */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: include/linux/regulator/machine.h:118:
+    unsigned apply_uV:1;        /* apply uV constraint iff min == max */$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000178035.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 15 errors, 24 warnings, 0 checks, 47 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000178035.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
