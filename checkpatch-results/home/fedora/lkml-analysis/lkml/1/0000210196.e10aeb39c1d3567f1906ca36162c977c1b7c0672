WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
While there are no functional changes, the diff is quite large because we need

CHECK:CAMELCASE: Avoid CamelCase: <pRxBufferAddress>
#56: FILE: drivers/staging/winbond/wb35rx.c:17:
+static void packet_came(struct ieee80211_hw *hw, char *pRxBufferAddress, int PacketSize)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <PacketSize>
#56: FILE: drivers/staging/winbond/wb35rx.c:17:
+static void packet_came(struct ieee80211_hw *hw, char *pRxBufferAddress, int PacketSize)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#75: FILE: drivers/staging/winbond/wb35rx.c:28:
+		printk("Not enough memory for packet, FIXME\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#75: FILE: drivers/staging/winbond/wb35rx.c:28:
+	if (!skb) {
+		printk("Not enough memory for packet, FIXME\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#84: FILE: drivers/staging/winbond/wb35rx.c:37:
+/*
+	rx_status.rate = 10;

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:CAMELCASE: Avoid CamelCase: <Wb35Rx_adjust>
#95: FILE: drivers/staging/winbond/wb35rx.c:46:
+static void Wb35Rx_adjust(PDESCRIPTOR pRxDes)

CHECK:CAMELCASE: Avoid CamelCase: <pRxDes>
#95: FILE: drivers/staging/winbond/wb35rx.c:46:
+static void Wb35Rx_adjust(PDESCRIPTOR pRxDes)

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#97: FILE: drivers/staging/winbond/wb35rx.c:48:
+	u32 *	pRxBufferAddress;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <DecryptionMethod>
#98: FILE: drivers/staging/winbond/wb35rx.c:49:
+	u32	DecryptionMethod;

CHECK:CAMELCASE: Avoid CamelCase: <BufferSize>
#100: FILE: drivers/staging/winbond/wb35rx.c:51:
+	u16	BufferSize;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#114: FILE: drivers/staging/winbond/wb35rx.c:65:
+	if (DecryptionMethod == 1) // For WEP
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#116: FILE: drivers/staging/winbond/wb35rx.c:67:
+		for( i=6; i>0; i-- )
 		      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#116: FILE: drivers/staging/winbond/wb35rx.c:67:
+		for( i=6; i>0; i-- )
 		           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#116: FILE: drivers/staging/winbond/wb35rx.c:67:
+		for( i=6; i>0; i-- )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#116: FILE: drivers/staging/winbond/wb35rx.c:67:
+		for( i=6; i>0; i-- )

ERROR:SPACING: space required before the open parenthesis '('
#116: FILE: drivers/staging/winbond/wb35rx.c:67:
+		for( i=6; i>0; i-- )

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#117: FILE: drivers/staging/winbond/wb35rx.c:68:
+			pRxBufferAddress[i] = pRxBufferAddress[i-1];
 			                                        ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#121: FILE: drivers/staging/winbond/wb35rx.c:72:
+	else if( DecryptionMethod ) // For TKIP and CCMP
+	{

ERROR:SPACING: space prohibited after that open parenthesis '('
#121: FILE: drivers/staging/winbond/wb35rx.c:72:
+	else if( DecryptionMethod ) // For TKIP and CCMP

ERROR:SPACING: space prohibited before that close parenthesis ')'
#121: FILE: drivers/staging/winbond/wb35rx.c:72:
+	else if( DecryptionMethod ) // For TKIP and CCMP

ERROR:SPACING: space required before the open parenthesis '('
#121: FILE: drivers/staging/winbond/wb35rx.c:72:
+	else if( DecryptionMethod ) // For TKIP and CCMP

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#121: FILE: drivers/staging/winbond/wb35rx.c:72:
+	}
+	else if( DecryptionMethod ) // For TKIP and CCMP

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#123: FILE: drivers/staging/winbond/wb35rx.c:74:
+		for (i=7; i>1; i--)
 		      ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#123: FILE: drivers/staging/winbond/wb35rx.c:74:
+		for (i=7; i>1; i--)
 		           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#124: FILE: drivers/staging/winbond/wb35rx.c:75:
+			pRxBufferAddress[i] = pRxBufferAddress[i-2];
 			                                        ^

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#125: FILE: drivers/staging/winbond/wb35rx.c:76:
+		pRxDes->buffer_address[0] = pRxBufferAddress + 2;//Update the descriptor, shift 8 byte

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <Wb35Rx_indicate>
#131: FILE: drivers/staging/winbond/wb35rx.c:82:
+static u16 Wb35Rx_indicate(struct ieee80211_hw *hw)

CHECK:CAMELCASE: Avoid CamelCase: <RxDes>
#135: FILE: drivers/staging/winbond/wb35rx.c:86:
+	DESCRIPTOR	RxDes;

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#141: FILE: drivers/staging/winbond/wb35rx.c:88:
+	u8 *		pRxBufferAddress;

CHECK:CAMELCASE: Avoid CamelCase: <RxBufferId>
#144: FILE: drivers/staging/winbond/wb35rx.c:91:
+	u32		RxBufferId;

CHECK:CAMELCASE: Avoid CamelCase: <pWb35Rx>
#153: FILE: drivers/staging/winbond/wb35rx.c:95:
+		RxBufferId = pWb35Rx->RxProcessIndex;

CHECK:CAMELCASE: Avoid CamelCase: <RxProcessIndex>
#153: FILE: drivers/staging/winbond/wb35rx.c:95:
+		RxBufferId = pWb35Rx->RxProcessIndex;

ERROR:SPACING: space prohibited after that open square bracket '['
#154: FILE: drivers/staging/winbond/wb35rx.c:96:
+		if (pWb35Rx->RxOwner[ RxBufferId ]) //Owner by VM

ERROR:SPACING: space prohibited before that close square bracket ']'
#154: FILE: drivers/staging/winbond/wb35rx.c:96:
+		if (pWb35Rx->RxOwner[ RxBufferId ]) //Owner by VM

CHECK:CAMELCASE: Avoid CamelCase: <RxOwner>
#154: FILE: drivers/staging/winbond/wb35rx.c:96:
+		if (pWb35Rx->RxOwner[ RxBufferId ]) //Owner by VM

CHECK:CAMELCASE: Avoid CamelCase: <pDRx>
#171: FILE: drivers/staging/winbond/wb35rx.c:102:
+		pRxBufferAddress = pWb35Rx->pDRx;

ERROR:SPACING: space prohibited after that open square bracket '['
#172: FILE: drivers/staging/winbond/wb35rx.c:103:
+		BufferSize = pWb35Rx->RxBufferSize[ RxBufferId ];

ERROR:SPACING: space prohibited before that close square bracket ']'
#172: FILE: drivers/staging/winbond/wb35rx.c:103:
+		BufferSize = pWb35Rx->RxBufferSize[ RxBufferId ];

CHECK:CAMELCASE: Avoid CamelCase: <RxBufferSize>
#172: FILE: drivers/staging/winbond/wb35rx.c:103:
+		BufferSize = pWb35Rx->RxBufferSize[ RxBufferId ];

WARNING:LONG_LINE_COMMENT: line length of 119 exceeds 100 columns
#179: FILE: drivers/staging/winbond/wb35rx.c:107:
+			if ((cpu_to_le32(*(u32 *)pRxBufferAddress) & 0x0fffffff) == RX_END_TAG) //Is ending? 921002.9.a

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#186: FILE: drivers/staging/winbond/wb35rx.c:113:
+			RxDes.R01.value = le32_to_cpu(*((u32 *)(pRxBufferAddress+4)));
 			                                                        ^

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#200: FILE: drivers/staging/winbond/wb35rx.c:121:
+				WBDEBUG(("Serious ERROR : Rx data size too long, size =%d\n", PacketSize));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <Ep3ErrorCount2>
#208: FILE: drivers/staging/winbond/wb35rx.c:125:
+				pWb35Rx->Ep3ErrorCount2++;

WARNING:LONG_LINE_COMMENT: line length of 125 exceeds 100 columns
#214: FILE: drivers/staging/winbond/wb35rx.c:130:
+//			RxDes.Descriptor_ID = RxBufferId; // Due to synchronous indicate, the field doesn't necessary to use.

ERROR:SPACING: space prohibited after that open square bracket '['
#246: FILE: drivers/staging/winbond/wb35rx.c:152:
+		pWb35Rx->RxOwner[ RxBufferId ] = 1;

ERROR:SPACING: space prohibited before that close square bracket ']'
#246: FILE: drivers/staging/winbond/wb35rx.c:152:
+		pWb35Rx->RxOwner[ RxBufferId ] = 1;

CHECK:CAMELCASE: Avoid CamelCase: <Wb35Rx>
#253: FILE: drivers/staging/winbond/wb35rx.c:158:
+static void Wb35Rx(struct ieee80211_hw *hw);

CHECK:CAMELCASE: Avoid CamelCase: <Wb35Rx_Complete>
#255: FILE: drivers/staging/winbond/wb35rx.c:160:
+static void Wb35Rx_Complete(struct urb *urb)

CHECK:CAMELCASE: Avoid CamelCase: <pHwData>
#273: FILE: drivers/staging/winbond/wb35rx.c:242:
+	phw_data_t pHwData = &priv->sHwData;

CHECK:CAMELCASE: Avoid CamelCase: <sHwData>
#273: FILE: drivers/staging/winbond/wb35rx.c:242:
+	phw_data_t pHwData = &priv->sHwData;

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#275: FILE: drivers/staging/winbond/wb35rx.c:244:
+	u8 *	pRxBufferAddress;

CHECK:CAMELCASE: Avoid CamelCase: <RxUrb>
#276: FILE: drivers/staging/winbond/wb35rx.c:245:
+	struct urb *urb = pWb35Rx->RxUrb;

CHECK:CAMELCASE: Avoid CamelCase: <SurpriseRemove>
#286: FILE: drivers/staging/winbond/wb35rx.c:252:
+	if (pHwData->SurpriseRemove || pHwData->HwStop)

CHECK:CAMELCASE: Avoid CamelCase: <HwStop>
#286: FILE: drivers/staging/winbond/wb35rx.c:252:
+	if (pHwData->SurpriseRemove || pHwData->HwStop)

CHECK:CAMELCASE: Avoid CamelCase: <CurrentRxBufferId>
#313: FILE: drivers/staging/winbond/wb35rx.c:272:
+	pWb35Rx->CurrentRxBufferId = RxBufferId;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#317: FILE: drivers/staging/winbond/wb35rx.c:276:
+		printk("w35und: Rx memory alloc failed\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#317: FILE: drivers/staging/winbond/wb35rx.c:276:
+	if (!pWb35Rx->pDRx) {
+		printk("w35und: Rx memory alloc failed\n");

CHECK:CAMELCASE: Avoid CamelCase: <WbUsb>
#322: FILE: drivers/staging/winbond/wb35rx.c:281:
+	usb_fill_bulk_urb(urb, pHwData->WbUsb.udev,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#332: FILE: drivers/staging/winbond/wb35rx.c:291:
+		printk("Rx URB sending error\n");

CHECK:CAMELCASE: Avoid CamelCase: <RxFireCounter>
#340: FILE: drivers/staging/winbond/wb35rx.c:299:
+	atomic_dec(&pWb35Rx->RxFireCounter);

CHECK:CAMELCASE: Avoid CamelCase: <Wb35Rx_start>
#345: FILE: drivers/staging/winbond/wb35rx.c:302:
+void Wb35Rx_start(struct ieee80211_hw *hw)

CHECK:BRACES: Unbalanced braces around else statement
#365: FILE: drivers/staging/winbond/wb35rx.c:312:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#371: FILE: drivers/staging/winbond/wb35rx.c:317:
+static void Wb35Rx_reset_descriptor(  phw_data_t pHwData )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#371: FILE: drivers/staging/winbond/wb35rx.c:317:
+static void Wb35Rx_reset_descriptor(  phw_data_t pHwData )

CHECK:CAMELCASE: Avoid CamelCase: <Wb35Rx_reset_descriptor>
#371: FILE: drivers/staging/winbond/wb35rx.c:317:
+static void Wb35Rx_reset_descriptor(  phw_data_t pHwData )

CHECK:CAMELCASE: Avoid CamelCase: <Wb35Rx_initial>
#380: FILE: drivers/staging/winbond/wb35rx.c:333:
+unsigned char Wb35Rx_initial(phw_data_t pHwData)

ERROR:SPACING: space prohibited after that open parenthesis '('
#399: FILE: drivers/staging/winbond/wb35rx.c:338:
+	Wb35Rx_reset_descriptor( pHwData );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#399: FILE: drivers/staging/winbond/wb35rx.c:338:
+	Wb35Rx_reset_descriptor( pHwData );

CHECK:CAMELCASE: Avoid CamelCase: <Wb35Rx_stop>
#422: FILE: drivers/staging/winbond/wb35rx.c:344:
+void Wb35Rx_stop(phw_data_t pHwData)

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#438: FILE: drivers/staging/winbond/wb35rx.c:350:
+		usb_unlink_urb( pWb35Rx->RxUrb ); // Only use unlink, let Wb35Rx_destroy to free them

ERROR:SPACING: space prohibited after that open parenthesis '('
#438: FILE: drivers/staging/winbond/wb35rx.c:350:
+		usb_unlink_urb( pWb35Rx->RxUrb ); // Only use unlink, let Wb35Rx_destroy to free them

ERROR:SPACING: space prohibited before that close parenthesis ')'
#438: FILE: drivers/staging/winbond/wb35rx.c:350:
+		usb_unlink_urb( pWb35Rx->RxUrb ); // Only use unlink, let Wb35Rx_destroy to free them

CHECK:CAMELCASE: Avoid CamelCase: <Wb35Rx_destroy>
#460: FILE: drivers/staging/winbond/wb35rx.c:358:
+void Wb35Rx_destroy(phw_data_t pHwData)

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#533: FILE: drivers/staging/winbond/wb35rx.c:363:
+		msleep(10); // Delay for waiting function enter 940623.1.a

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#535: FILE: drivers/staging/winbond/wb35rx.c:365:
+	msleep(10); // Delay for waiting function exit 940623.1.b

ERROR:SPACING: space prohibited after that open parenthesis '('
#539: FILE: drivers/staging/winbond/wb35rx.c:368:
+		usb_free_urb( pWb35Rx->RxUrb );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#539: FILE: drivers/staging/winbond/wb35rx.c:368:
+		usb_free_urb( pWb35Rx->RxUrb );

WARNING:NEEDLESS_IF: usb_free_urb(NULL) is safe and this check is probably not required
#539: FILE: drivers/staging/winbond/wb35rx.c:368:
+	if (pWb35Rx->RxUrb)
+		usb_free_urb( pWb35Rx->RxUrb );

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'Wb35Rx_destroy', this function's name, in a string
#541: FILE: drivers/staging/winbond/wb35rx.c:370:
+	WBDEBUG(("Wb35Rx_destroy OK\n"));

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000210196.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 30 errors, 16 warnings, 34 checks, 506 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000210196.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
