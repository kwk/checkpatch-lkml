WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
master.kernel.org:/pub/scm/linux/kernel/git/jgarzik/netdev-2.6.git upstream-davem

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#210: FILE: drivers/net/3c59x.c:322:
+	 PCI_USES_MASTER, IS_CYCLONE|HAS_HWCKSM|EXTRA_PREAMBLE, 128, },
 	                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#210: FILE: drivers/net/3c59x.c:322:
+	 PCI_USES_MASTER, IS_CYCLONE|HAS_HWCKSM|EXTRA_PREAMBLE, 128, },
 	                                       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#246: FILE: drivers/net/3c59x.c:1930:
+		if (tx_status & 0x14)  dev->stats.tx_fifo_errors++;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#247: FILE: drivers/net/3c59x.c:1931:
+		if (tx_status & 0x38)  dev->stats.tx_aborted_errors++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#257: FILE: drivers/net/3c59x.c:2053:
+				if (tx_status & 0x04) dev->stats.tx_fifo_errors++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#258: FILE: drivers/net/3c59x.c:2054:
+				if (tx_status & 0x38) dev->stats.tx_aborted_errors++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#282: FILE: drivers/net/3c59x.c:2412:
+			if (rx_error & 0x01)  dev->stats.rx_over_errors++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#283: FILE: drivers/net/3c59x.c:2413:
+			if (rx_error & 0x02)  dev->stats.rx_length_errors++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#284: FILE: drivers/net/3c59x.c:2414:
+			if (rx_error & 0x04)  dev->stats.rx_frame_errors++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#285: FILE: drivers/net/3c59x.c:2415:
+			if (rx_error & 0x08)  dev->stats.rx_crc_errors++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#286: FILE: drivers/net/3c59x.c:2416:
+			if (rx_error & 0x10)  dev->stats.rx_length_errors++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#319: FILE: drivers/net/3c59x.c:2485:
+			if (rx_error & 0x01)  dev->stats.rx_over_errors++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#320: FILE: drivers/net/3c59x.c:2486:
+			if (rx_error & 0x02)  dev->stats.rx_length_errors++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#321: FILE: drivers/net/3c59x.c:2487:
+			if (rx_error & 0x04)  dev->stats.rx_frame_errors++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#322: FILE: drivers/net/3c59x.c:2488:
+			if (rx_error & 0x08)  dev->stats.rx_crc_errors++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#323: FILE: drivers/net/3c59x.c:2489:
+			if (rx_error & 0x10)  dev->stats.rx_length_errors++;

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#369: FILE: drivers/net/3c59x.c:2755:
+	dev->stats.tx_packets			+= (ioread8(ioaddr + 9)&0x30) << 4;
 	                     			                       ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#376: FILE: drivers/net/3c59x.c:2760:
+^Idev->stats.rx_bytes ^I^I^I+= ioread16(ioaddr + 10);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#377: FILE: drivers/net/3c59x.c:2761:
+^Idev->stats.tx_bytes ^I^I^I+= ioread16(ioaddr + 12);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#622: FILE: drivers/net/e1000e/defines.h:709:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#625: FILE: drivers/net/e1000e/defines.h:712:
+                           ((reg) & MAX_PHY_REG_ADDRESS))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#625: FILE: drivers/net/e1000e/defines.h:712:
+                           ((reg) & MAX_PHY_REG_ADDRESS))$

CHECK:BIT_MACRO: Prefer using the BIT macro
#647: FILE: drivers/net/e1000e/e1000.h:307:
+#define FLAG_IS_ICH                       (1 << 9)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#655: FILE: drivers/net/e1000e/e1000.h:390:
+extern void e1000e_disable_gig_wol_ich8lan(struct e1000_hw *hw);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#663: FILE: drivers/net/e1000e/e1000.h:448:
+extern s32 e1000e_determine_phy_address(struct e1000_hw *hw);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#664: FILE: drivers/net/e1000e/e1000.h:449:
+extern s32 e1000e_write_phy_reg_bm(struct e1000_hw *hw, u32 offset, u16 data);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#665: FILE: drivers/net/e1000e/e1000.h:450:
+extern s32 e1000e_read_phy_reg_bm(struct e1000_hw *hw, u32 offset, u16 *data);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#680: FILE: drivers/net/e1000e/ethtool.c:499:
+				 * result */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i == 8'
#722: FILE: drivers/net/e1000e/ethtool.c:915:
+		if ((adapter->flags & FLAG_IS_ICH) && (i == 8))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#759: FILE: drivers/net/e1000e/ethtool.c:1235:
+		/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

CHECK:BIT_MACRO: Prefer using the BIT macro
#790: FILE: drivers/net/e1000e/hw.h:228:
+#define BM_WUC_ENABLE_BIT		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#791: FILE: drivers/net/e1000e/hw.h:229:
+#define BM_WUC_HOST_WU_BIT		(1 << 4)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#846: FILE: drivers/net/e1000e/ich8lan.c:208:
+	/*
+	 * We may need to do this twice - once for IGP and if that fails,

ERROR:CODE_INDENT: code indent should use tabs where possible
#949: FILE: drivers/net/e1000e/ich8lan.c:2201:
+^I^I            E1000_PHY_CTRL_GBE_DISABLE;$

WARNING:RETURN_VOID: void function return statements are not generally useful
#954: FILE: drivers/net/e1000e/ich8lan.c:2206:
+	return;
+}

ERROR:CODE_INDENT: code indent should use tabs where possible
#1004: FILE: drivers/net/e1000e/netdev.c:352:
+                                         int cleaned_count)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1004: FILE: drivers/net/e1000e/netdev.c:352:
+                                         int cleaned_count)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1014: FILE: drivers/net/e1000e/netdev.c:362:
+^I                     16 /* for skb_reserve */ -$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1015: FILE: drivers/net/e1000e/netdev.c:363:
+^I                     NET_IP_ALIGN;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1053: FILE: drivers/net/e1000e/netdev.c:401:
+^I^I^I                                buffer_info->page, 0,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1054: FILE: drivers/net/e1000e/netdev.c:402:
+^I^I^I                                PAGE_SIZE,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1055: FILE: drivers/net/e1000e/netdev.c:403:
+^I^I^I                                PCI_DMA_FROMDEVICE);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1073: FILE: drivers/net/e1000e/netdev.c:421:
+		 * such as IA-64). */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1090: FILE: drivers/net/e1000e/netdev.c:873:
+                               u16 length)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1090: FILE: drivers/net/e1000e/netdev.c:873:
+                               u16 length)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1107: FILE: drivers/net/e1000e/netdev.c:890:
+                                     int *work_done, int work_to_do)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1107: FILE: drivers/net/e1000e/netdev.c:890:
+                                     int *work_done, int work_to_do)$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1118: FILE: drivers/net/e1000e/netdev.c:901:
+	unsigned int total_rx_bytes=0, total_rx_packets=0;
 	                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1118: FILE: drivers/net/e1000e/netdev.c:901:
+	unsigned int total_rx_bytes=0, total_rx_packets=0;
 	                                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1147: FILE: drivers/net/e1000e/netdev.c:930:
+^I^I               PCI_DMA_FROMDEVICE);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#1153: FILE: drivers/net/e1000e/netdev.c:936:
+		if (unlikely((status & E1000_RXD_STAT_EOP) &&
[...]
+				buffer_info->skb = skb;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1154: FILE: drivers/net/e1000e/netdev.c:937:
+		if (unlikely((status & E1000_RXD_STAT_EOP) &&
+		    (rx_desc->errors & E1000_RXD_ERR_FRAME_ERR_MASK))) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1158: FILE: drivers/net/e1000e/netdev.c:941:
+				 * too */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1172: FILE: drivers/net/e1000e/netdev.c:955:
+^I^I^I^I                   0, length);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1176: FILE: drivers/net/e1000e/netdev.c:959:
+				skb_fill_page_desc(rxtop,
+				    skb_shinfo(rxtop)->nr_frags,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1187: FILE: drivers/net/e1000e/netdev.c:970:
+				skb_fill_page_desc(rxtop,
+				    skb_shinfo(rxtop)->nr_frags,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1190: FILE: drivers/net/e1000e/netdev.c:973:
+				 * page */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1197: FILE: drivers/net/e1000e/netdev.c:980:
+				 * copybreak to save the put_page/alloc_page */

WARNING:LINE_SPACING: Missing a blank line after declarations
#1201: FILE: drivers/net/e1000e/netdev.c:984:
+					u8 *vaddr;
+					vaddr = kmap_atomic(buffer_info->page,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1202: FILE: drivers/net/e1000e/netdev.c:985:
+^I^I^I^I^I                   KM_SKB_DATA_SOFTIRQ);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1202: FILE: drivers/net/e1000e/netdev.c:985:
+					vaddr = kmap_atomic(buffer_info->page,
+					                   KM_SKB_DATA_SOFTIRQ);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1206: FILE: drivers/net/e1000e/netdev.c:989:
+^I^I^I^I^I              KM_SKB_DATA_SOFTIRQ);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1208: FILE: drivers/net/e1000e/netdev.c:991:
+					 * buffer_info->page */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1212: FILE: drivers/net/e1000e/netdev.c:995:
+^I^I^I^I^I                   buffer_info->page, 0,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1213: FILE: drivers/net/e1000e/netdev.c:996:
+^I^I^I^I                           length);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1215: FILE: drivers/net/e1000e/netdev.c:998:
+^I^I^I^I^I                   length);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1222: FILE: drivers/net/e1000e/netdev.c:1005:
+^I^I                  (u32)(status) |$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1223: FILE: drivers/net/e1000e/netdev.c:1006:
+^I^I                  ((u32)(rx_desc->errors) << 24),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1224: FILE: drivers/net/e1000e/netdev.c:1007:
+^I^I                  le16_to_cpu(rx_desc->csum), skb);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1238: FILE: drivers/net/e1000e/netdev.c:1021:
+^I^I                  rx_desc->special);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1276: FILE: drivers/net/e1000e/netdev.c:1071:
+^I^I^I^I               PAGE_SIZE,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1277: FILE: drivers/net/e1000e/netdev.c:1072:
+^I^I^I^I               PCI_DMA_FROMDEVICE);$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pages <= 3'
#1300: FILE: drivers/net/e1000e/netdev.c:2032:
+	if (!(adapter->flags & FLAG_IS_ICH) && (pages <= 3) &&
+	    (PAGE_SIZE <= 16384) && (rctl & E1000_RCTL_LPE))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'PAGE_SIZE <= 16384'
#1300: FILE: drivers/net/e1000e/netdev.c:2032:
+	if (!(adapter->flags & FLAG_IS_ICH) && (pages <= 3) &&
+	    (PAGE_SIZE <= 16384) && (rctl & E1000_RCTL_LPE))

WARNING:LINE_SPACING: Missing a blank line after declarations
#1331: FILE: drivers/net/e1000e/netdev.c:2168:
+		u32 rxdctl = er32(RXDCTL(0));
+		ew32(RXDCTL(0), rxdctl | 0x3);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1334: FILE: drivers/net/e1000e/netdev.c:2171:
+		/*
+		 * With jumbo frames and early-receive enabled, excessive

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1353: FILE: drivers/net/e1000e/netdev.c:2451:
+	/*
+	 * For parts with AMT enabled, let the firmware know

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1402: FILE: drivers/net/e1000e/netdev.c:4642:
+^I^I^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#1464: FILE: drivers/net/e1000e/phy.c:1808:
+	u32 phy_addr= 0;
 	            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1474: FILE: drivers/net/e1000e/phy.c:1818:
+^I^I^I/* $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1475: FILE: drivers/net/e1000e/phy.c:1819:
+			/* 
+			 * If phy_type is valid, break - we found our

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'page >= 768'
#1499: FILE: drivers/net/e1000e/phy.c:1843:
+	if ((page >= 768) || (page == 0 && reg == 25) || (reg == 31))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg == 31'
#1499: FILE: drivers/net/e1000e/phy.c:1843:
+	if ((page >= 768) || (page == 0 && reg == 25) || (reg == 31))

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1536: FILE: drivers/net/e1000e/phy.c:1880:
+		/*
+		 * Page select is register 31 for phy address 1 and 22 for

ERROR:CODE_INDENT: code indent should use tabs where possible
#1550: FILE: drivers/net/e1000e/phy.c:1894:
+^I^I                                    (page << page_shift));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1558: FILE: drivers/net/e1000e/phy.c:1902:
+^I                                    data);$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1598: FILE: drivers/net/e1000e/phy.c:1942:
+		/*
+		 * Page select is register 31 for phy address 1 and 22 for

ERROR:CODE_INDENT: code indent should use tabs where possible
#1612: FILE: drivers/net/e1000e/phy.c:1956:
+^I^I                                    (page << page_shift));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1620: FILE: drivers/net/e1000e/phy.c:1964:
+^I                                   data);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1652: FILE: drivers/net/e1000e/phy.c:1996:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1664: FILE: drivers/net/e1000e/phy.c:2008:
+^I                          (BM_WUC_ENABLE_PAGE << IGP_PAGE_SHIFT));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1678: FILE: drivers/net/e1000e/phy.c:2022:
+^I                                    phy_reg | BM_WUC_ENABLE_BIT);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1684: FILE: drivers/net/e1000e/phy.c:2028:
+^I                                    (BM_WUC_PAGE << IGP_PAGE_SHIFT));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1692: FILE: drivers/net/e1000e/phy.c:2036:
+^I        /* Read the page 800 value using opcode 0x12 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1694: FILE: drivers/net/e1000e/phy.c:2038:
+^I^I                                   data);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1696: FILE: drivers/net/e1000e/phy.c:2040:
+^I        /* Read the page 800 value using opcode 0x12 */$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1705: FILE: drivers/net/e1000e/phy.c:2049:
+	/*
+	 * Restore 769_17.2 to its original value

ERROR:CODE_INDENT: code indent should use tabs where possible
#1709: FILE: drivers/net/e1000e/phy.c:2053:
+^I                          (BM_WUC_ENABLE_PAGE << IGP_PAGE_SHIFT));$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1753: FILE: drivers/net/eexpress.c:1583:
+	outw(6*count, ioaddr+SHADOW(CONF_NR_MULTICAST));
 	      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1753: FILE: drivers/net/eexpress.c:1583:
+	outw(6*count, ioaddr+SHADOW(CONF_NR_MULTICAST));
 	                    ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pd->shared"
#1998: FILE: drivers/net/mv643xx_eth.c:1842:
+	if (pd->shared == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1999: FILE: drivers/net/mv643xx_eth.c:1843:
+		printk(KERN_ERR "No mv643xx_eth_platform_data->shared\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pd->shared_smi"
#2017: FILE: drivers/net/mv643xx_eth.c:1904:
+	if (pd->shared_smi != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!msp"
#2083: FILE: drivers/net/mv643xx_eth.c:2063:
+	if (msp == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!msp->eth_base"
#2088: FILE: drivers/net/mv643xx_eth.c:2068:
+	if (msp->eth_base == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pd"
#2092: FILE: drivers/net/mv643xx_eth.c:2072:
+	msp->t_clk = (pd != NULL && pd->t_clk != 0) ? pd->t_clk : 133000000;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2097: FILE: drivers/net/mv643xx_eth.c:2077:
+	/*
+	 * (Re-)program MBUS remapping windows if we are asked to.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pd"
#2099: FILE: drivers/net/mv643xx_eth.c:2079:
+	if (pd != NULL && pd->dram != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pd->dram"
#2099: FILE: drivers/net/mv643xx_eth.c:2079:
+	if (pd != NULL && pd->dram != NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2147: FILE: drivers/net/mv643xx_eth.c:3013:
+	writel((phy_addr << 16) | (phy_reg << 21) | ETH_SMI_OPCODE_READ,
+		smi_reg);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2494: FILE: drivers/net/ucc_geth.c:219:
+static struct sk_buff *get_new_skb(struct ucc_geth_private *ugeth,
+		u8 __iomem *bd)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2504: FILE: drivers/net/ucc_geth.c:240:
+	out_be32(&((struct qe_bd __iomem *)bd)->buf,
 		      dma_map_single(NULL,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2512: FILE: drivers/net/ucc_geth.c:247:
+	out_be32((u32 __iomem *)bd,
+			(R_E | R_I | (in_be32((u32 __iomem*)bd) & R_W)));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2512: FILE: drivers/net/ucc_geth.c:247:
+			(R_E | R_I | (in_be32((u32 __iomem*)bd) & R_W)));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#2563: FILE: drivers/net/ucc_geth.c:336:
+			    (u32) (val & ENET_INIT_PARAM_SNUM_MASK) >>

CHECK:SPACING: No space is necessary after a cast
#2600: FILE: drivers/net/ucc_geth.c:371:
+			    (u32) (val & ENET_INIT_PARAM_SNUM_MASK) >>

CHECK:SPACING: No space is necessary after a cast
#2618: FILE: drivers/net/ucc_geth.c:455:
+	    (struct ucc_geth_82xx_address_filtering_pram __iomem *) ugeth->p_rx_glbl_pram->

CHECK:SPACING: No space is necessary after a cast
#2632: FILE: drivers/net/ucc_geth.c:474:
+	    (struct ucc_geth_82xx_address_filtering_pram __iomem *) ugeth->p_rx_glbl_pram->

CHECK:SPACING: No space is necessary after a cast
#2667: FILE: drivers/net/ucc_geth.c:551:
+	uf_regs = (struct ucc_fast __iomem *) ug_regs;

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#2919: FILE: drivers/net/ucc_geth.c:2240:
+		out_be32(&uf_regs->upsmr, in_be32(&uf_regs->upsmr)&~UPSMR_PRO);
 		                                                  ^

CHECK:SPACING: No space is necessary after a cast
#2923: FILE: drivers/net/ucc_geth.c:2243:
+		    (struct ucc_geth_82xx_address_filtering_pram __iomem *) ugeth->

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#2941: FILE: drivers/net/ucc_geth.c:2427:
+	ugeth->ug_regs = (struct ucc_geth __iomem *) ioremap(uf_info->regs, sizeof(struct ucc_geth));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#2941: FILE: drivers/net/ucc_geth.c:2427:
+	ugeth->ug_regs = (struct ucc_geth __iomem *) ioremap(uf_info->regs, sizeof(struct ucc_geth));

CHECK:CAMELCASE: Avoid CamelCase: <endOfRing>
#2968: FILE: drivers/net/ucc_geth.c:2449:
+	u8 __iomem *endOfRing;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: No space is necessary after a cast
#2977: FILE: drivers/net/ucc_geth.c:2611:
+				(u32) kmalloc((u32) (length + align), GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#2991: FILE: drivers/net/ucc_geth.c:2623:
+				    (u8 __iomem *) qe_muram_addr(ugeth->

CHECK:CAMELCASE: Avoid CamelCase: <bdRingLenTx>
#3002: FILE: drivers/net/ucc_geth.c:2636:
+		       ug_info->bdRingLenTx[j] * sizeof(struct qe_bd)), 0,

CHECK:SPACING: No space is necessary after a cast
#3011: FILE: drivers/net/ucc_geth.c:2648:
+				(u32) kmalloc((u32) (length + align), GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#3024: FILE: drivers/net/ucc_geth.c:2659:
+				    (u8 __iomem *) qe_muram_addr(ugeth->

CHECK:SPACING: No space is necessary after a cast
#3069: FILE: drivers/net/ucc_geth.c:2753:
+	    (struct ucc_geth_tx_global_pram __iomem *) qe_muram_addr(ugeth->

CHECK:SPACING: No space is necessary after a cast
#3082: FILE: drivers/net/ucc_geth.c:2777:
+	    (struct ucc_geth_thread_data_tx __iomem *) qe_muram_addr(ugeth->

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3092: FILE: drivers/net/ucc_geth.c:2789:
+		out_8(&ugeth->p_tx_glbl_pram->iphoffset[i],
+				ug_info->iphoffset[i]);

CHECK:SPACING: No space is necessary after a cast
#3101: FILE: drivers/net/ucc_geth.c:2807:
+	    (struct ucc_geth_send_queue_mem_region __iomem *) qe_muram_addr(ugeth->

CHECK:SPACING: No space is necessary after a cast
#3110: FILE: drivers/net/ucc_geth.c:2851:
+		    (struct ucc_geth_scheduler __iomem *) qe_muram_addr(ugeth->

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3129: FILE: drivers/net/ucc_geth.c:2865:
+		out_8(&ugeth->p_scheduler->strictpriorityq,
+				ug_info->strictpriorityq);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3136: FILE: drivers/net/ucc_geth.c:2870:
+			out_8(&ugeth->p_scheduler->weightfactor[i],
+			    ug_info->weightfactor[i]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3150: FILE: drivers/net/ucc_geth.c:2905:
+		memset_io((void __iomem *)ugeth->p_tx_fw_statistics_pram,
 		       0, sizeof(struct ucc_geth_tx_firmware_statistics_pram));

CHECK:SPACING: No space is necessary after a cast
#3158: FILE: drivers/net/ucc_geth.c:2941:
+	    (struct ucc_geth_rx_global_pram __iomem *) qe_muram_addr(ugeth->

CHECK:SPACING: No space is necessary after a cast
#3171: FILE: drivers/net/ucc_geth.c:2964:
+	    (struct ucc_geth_thread_data_rx __iomem *) qe_muram_addr(ugeth->

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3185: FILE: drivers/net/ucc_geth.c:2991:
+		memset_io((void __iomem *)ugeth->p_rx_fw_statistics_pram, 0,
 		       sizeof(struct ucc_geth_rx_firmware_statistics_pram));

CHECK:SPACING: No space is necessary after a cast
#3202: FILE: drivers/net/ucc_geth.c:3080:
+	    (struct ucc_geth_rx_bd_queues_entry __iomem *) qe_muram_addr(ugeth->

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3208: FILE: drivers/net/ucc_geth.c:3085:
+	memset_io((void __iomem *)ugeth->p_rx_bd_qs_tbl,
 	       0,

CHECK:SPACING: No space is necessary after a cast
#3225: FILE: drivers/net/ucc_geth.c:3171:
+		    (struct ucc_geth_exf_global_pram __iomem *) qe_muram_addr(ugeth->

CHECK:SPACING: No space is necessary after a cast
#3234: FILE: drivers/net/ucc_geth.c:3186:
+		    (struct ucc_geth_82xx_address_filtering_pram __iomem *) ugeth->

CHECK:SPACING: No space is necessary after a cast
#3243: FILE: drivers/net/ucc_geth.c:3318:
+	    (struct ucc_geth_init_pram __iomem *) qe_muram_addr(init_enet_pram_offset);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3251: FILE: drivers/net/ucc_geth.c:3322:
+	out_8(&p_init_enet_pram->resinit1,
+			ugeth->p_init_enet_param_shadow->resinit1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3253: FILE: drivers/net/ucc_geth.c:3324:
+	out_8(&p_init_enet_pram->resinit2,
+			ugeth->p_init_enet_param_shadow->resinit2);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3255: FILE: drivers/net/ucc_geth.c:3326:
+	out_8(&p_init_enet_pram->resinit3,
+			ugeth->p_init_enet_param_shadow->resinit3);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3257: FILE: drivers/net/ucc_geth.c:3328:
+	out_8(&p_init_enet_pram->resinit4,
+			ugeth->p_init_enet_param_shadow->resinit4);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3263: FILE: drivers/net/ucc_geth.c:3332:
+	out_8(&p_init_enet_pram->largestexternallookupkeysize,
+	    ugeth->p_init_enet_param_shadow->largestexternallookupkeysize);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3291: FILE: drivers/net/ucc_geth.c:3409:
+	out_be32(&((struct qe_bd __iomem *)bd)->buf,
 		      dma_map_single(NULL, skb->data, skb->len, DMA_TO_DEVICE));

CHECK:SPACING: No space is necessary after a cast
#3322: FILE: drivers/net/ucc_geth.c:3473:
+		bdBuffer = (u8 *) in_be32(&((struct qe_bd __iomem *)bd)->buf);

CHECK:CAMELCASE: Avoid CamelCase: <bdBuffer>
#3322: FILE: drivers/net/ucc_geth.c:3473:
+		bdBuffer = (u8 *) in_be32(&((struct qe_bd __iomem *)bd)->buf);

CHECK:CAMELCASE: Avoid CamelCase: <confBd>
#3431: FILE: drivers/net/ucc_geth.h:1217:
+	u8 __iomem *confBd[NUM_TX_QUEUES];

CHECK:CAMELCASE: Avoid CamelCase: <txBd>
#3432: FILE: drivers/net/ucc_geth.h:1218:
+	u8 __iomem *txBd[NUM_TX_QUEUES];

CHECK:CAMELCASE: Avoid CamelCase: <rxBd>
#3433: FILE: drivers/net/ucc_geth.h:1219:
+	u8 __iomem *rxBd[NUM_RX_QUEUES];

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3447: FILE: drivers/net/ucc_geth.h:1256:
+int init_flow_control_params(u32 automatic_flow_control_mode,
+		int rx_flow_control_enable, int tx_flow_control_enable,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3452: FILE: drivers/net/ucc_geth.h:1261:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000284466.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 54 errors, 28 warnings, 77 checks, 3097 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000284466.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
