WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#90: 
Note: it is based on top of Lai's work, which means you will need the ftrace_bprintk()

CHECK:LINE_SPACING: Please don't use multiple blank lines
#158: FILE: lib/vsprintf.c:703:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#196: FILE: lib/vsprintf.c:741:
+static int format_decode(const char *fmt, enum format_type *type, int *flags,
+			  int *field_width, int *base, int *precision,

CHECK:BRACES: braces {} should be used on all arms of this statement
#268: FILE: lib/vsprintf.c:813:
+	if (isdigit(*fmt))
[...]
+	else if (*fmt == '*') {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#323: FILE: lib/vsprintf.c:868:
+		* What does C99 say about the overflow case here? */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#323: FILE: lib/vsprintf.c:868:
+		/* FIXME:
+		* What does C99 say about the overflow case here? */

CHECK:BRACES: braces {} should be used on all arms of this statement
#354: FILE: lib/vsprintf.c:899:
+	if (*qualifier == 'L')
[...]
+	else if (*qualifier == 'l') {
[...]
+	} else if (*qualifier == 'Z' || *qualifier == 'z') {
[...]
+	} else if (*qualifier == 't') {
[...]
+	} else if (*qualifier == 'h') {
[...]
+	} else {
[...]

CHECK:LINE_SPACING: Please don't use multiple blank lines
#380: FILE: lib/vsprintf.c:925:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#433: FILE: lib/vsprintf.c:990:
+		read = format_decode(fmt, &type, &flags, &field_width, &base,
+					&precision, &qualifier);

WARNING:LINE_SPACING: Missing a blank line after declarations
#463: FILE: lib/vsprintf.c:997:
+			int copy = read;
+			if (str < end) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#546: FILE: lib/vsprintf.c:1021:
 
+				}

CHECK:SPACING: No space is necessary after a cast
#548: FILE: lib/vsprintf.c:1023:
+			c = (unsigned char) va_arg(args, int);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#567: FILE: lib/vsprintf.c:1036:
+			str = string(str, end, va_arg(args, char *),
+					field_width, precision, flags);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#576: FILE: lib/vsprintf.c:1040:
+			str = pointer(fmt+1, str, end, va_arg(args, void *),
 			                 ^

CHECK:SPACING: No space is necessary after a cast
#662: FILE: lib/vsprintf.c:1090:
+				num = (unsigned short) va_arg(args, int);

CHECK:SPACING: No space is necessary after a cast
#664: FILE: lib/vsprintf.c:1092:
+				num = (short) va_arg(args, int);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#671: FILE: lib/vsprintf.c:1099:
+			str = number(str, end, num, base,
 				field_width, precision, flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#719: FILE: lib/vsprintf.c:1296:
+		read = format_decode(fmt, &type, &flags, &field_width, &base,
+					&precision, &qualifier);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#912: FILE: lib/vsprintf.c:1455:
+		read = format_decode(fmt, &type, &flags, &field_width, &base,
+					&precision, &qualifier);

WARNING:LINE_SPACING: Missing a blank line after declarations
#942: FILE: lib/vsprintf.c:1462:
+			int copy = read;
+			if (str < end) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1095: FILE: lib/vsprintf.c:1558:
+			str = number(str, end, num, base,
 				field_width, precision, flags);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000161608.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 16 checks, 944 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000161608.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
