WARNING:REPEATED_WORD: Possible repeated word: 'the'
#27: 
A new field  owner_uid  is added the the  mm_struct, and it is kept set to

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
The new alloc_zeroed_page_vma() calls __alloc_pages() with the __GFP_UIDKEEP

CHECK:BRACES: braces {} should be used on all arms of this statement
#102: FILE: mm/rmap.c:632:
+	if (unlikely(PageCompound(page))) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#104: FILE: mm/rmap.c:634:
+		unsigned int nrpages = 1U << compound_order(page);
+		for (; nrpages; nrpages--, page++)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#106: FILE: mm/rmap.c:636:
+	} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#181: FILE: include/linux/mm.h:647:
+	int cnt = atomic_read(&(page)->_mapcount);
+	return cnt <= -PAGE_MAPCNT_UIDBIAS ? 0: cnt + 1;

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#181: FILE: include/linux/mm.h:647:
+	return cnt <= -PAGE_MAPCNT_UIDBIAS ? 0: cnt + 1;
 	                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#203: FILE: include/linux/mm.h:673:
+	return (uid_t) (-uid - PAGE_MAPCNT_UIDBIAS);

WARNING:LINE_SPACING: Missing a blank line after declarations
#203: FILE: include/linux/mm.h:673:
+	int uid = atomic_read(&page->_mapcount);
+	return (uid_t) (-uid - PAGE_MAPCNT_UIDBIAS);

CHECK:SPACING: No space is necessary after a cast
#208: FILE: include/linux/mm.h:678:
+	atomic_set(&page->_mapcount, -(int) uid - PAGE_MAPCNT_UIDBIAS);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#361: FILE: include/linux/mman.h:66:
+	       _calc_vm_trans(flags, MAP_LOCKED,     VM_LOCKED    ) |

ERROR:SPACING: space prohibited before that close parenthesis ')'
#362: FILE: include/linux/mman.h:67:
+	       _calc_vm_trans(flags, MAP_NOZERO,     VM_NOZERO    );

WARNING:TYPO_SPELLING: 'efficency' may be misspelled - perhaps 'efficiency'?
#396: FILE: mm/page_alloc.c:1381:
+		 * This reduces the efficency of page reuse though, since pages
 		                    ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#445: FILE: include/linux/gfp.h:128:
+extern struct page *alloc_zeroed_page_vma(struct vm_area_struct *vma,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000412249.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 6 warnings, 5 checks, 311 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000412249.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
