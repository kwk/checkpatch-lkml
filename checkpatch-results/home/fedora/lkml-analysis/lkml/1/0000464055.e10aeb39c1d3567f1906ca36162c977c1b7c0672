ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#99: FILE: arch/powerpc/kernel/ibmebus.c:164:
+	char *name = (char*)get_property(ebus_dev->ofdev.node, "name", NULL);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#100: FILE: arch/powerpc/kernel/ibmebus.c:165:
+	char *name = (char*)get_property(ebus_dev->ofdev.node, "name", NULL);
+	return sprintf(buf, "%s\n", name);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#106: FILE: arch/powerpc/kernel/ibmebus.c:170:
+static int __devinit ibmebus_register_device_common(

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#106: FILE: arch/powerpc/kernel/ibmebus.c:170:
+static int __devinit ibmebus_register_device_common(

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#131: FILE: arch/powerpc/kernel/ibmebus.c:197:
 static struct ibmebus_dev* __devinit ibmebus_register_device_node(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#188: FILE: arch/powerpc/kernel/ibmebus.c:269:
+	name = (char*)get_property(

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#188: FILE: arch/powerpc/kernel/ibmebus.c:269:
+	name = (char*)get_property(

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#191: FILE: arch/powerpc/kernel/ibmebus.c:272:
+	if (name && (strcmp((char*)data, name) == 0))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#213: FILE: arch/powerpc/kernel/ibmebus.c:315:
+	 * probed them manually before registering the driver */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#232: FILE: arch/powerpc/kernel/ibmebus.c:383:
+	loc_code = (char*)get_property(

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#232: FILE: arch/powerpc/kernel/ibmebus.c:383:
+	loc_code = (char*)get_property(

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#235: FILE: arch/powerpc/kernel/ibmebus.c:386:
+	if (loc_code && (strcmp((char*)data, loc_code) == 0))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#249: FILE: arch/powerpc/kernel/ibmebus.c:400:
+	if (buf[count-1] == '\n')
 	             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#250: FILE: arch/powerpc/kernel/ibmebus.c:401:
+		buf[count-1] = '\0';
 		         ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#252: FILE: arch/powerpc/kernel/ibmebus.c:403:
+	if (bus_find_device(&ibmebus_bus_type, NULL, (char*)buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#253: FILE: arch/powerpc/kernel/ibmebus.c:404:
+	if (bus_find_device(&ibmebus_bus_type, NULL, (char*)buf,
+			     ibmebus_match_helper_loc_code)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#254: FILE: arch/powerpc/kernel/ibmebus.c:405:
+		printk(KERN_WARNING "%s: loc_code %s has already been probed\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#255: FILE: arch/powerpc/kernel/ibmebus.c:406:
+		       __FUNCTION__, buf);

CHECK:BRACES: braces {} should be used on all arms of this statement
#263: FILE: arch/powerpc/kernel/ibmebus.c:414:
+			if (IS_ERR(dev)) {
[...]
+			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#266: FILE: arch/powerpc/kernel/ibmebus.c:417:
+			} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#272: FILE: arch/powerpc/kernel/ibmebus.c:423:
+	printk(KERN_WARNING "%s: no device with loc_code %s found\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#273: FILE: arch/powerpc/kernel/ibmebus.c:424:
+	       __FUNCTION__, buf);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#276: FILE: arch/powerpc/kernel/ibmebus.c:427:
+static BUS_ATTR(probe, S_IWUSR, NULL, ibmebus_store_probe);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#284: FILE: arch/powerpc/kernel/ibmebus.c:435:
+	if (buf[count-1] == '\n')
 	             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#285: FILE: arch/powerpc/kernel/ibmebus.c:436:
+		buf[count-1] = '\0';
 		         ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#288: FILE: arch/powerpc/kernel/ibmebus.c:439:
+	if ((dev = bus_find_device(&ibmebus_bus_type, NULL, (char*)buf,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#288: FILE: arch/powerpc/kernel/ibmebus.c:439:
+	if ((dev = bus_find_device(&ibmebus_bus_type, NULL, (char*)buf,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#292: FILE: arch/powerpc/kernel/ibmebus.c:443:
+		printk(KERN_WARNING "%s: loc_code %s not on the bus\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#293: FILE: arch/powerpc/kernel/ibmebus.c:444:
+		       __FUNCTION__, buf);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#299: FILE: arch/powerpc/kernel/ibmebus.c:450:
+static BUS_ATTR(remove, S_IWUSR, NULL, ibmebus_store_remove);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000464055.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 12 warnings, 10 checks, 252 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000464055.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
