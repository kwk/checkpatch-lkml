WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#63: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#68: FILE: fs/ceph/dir.c:1:
+#include "ceph_debug.h"

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CONST_STRUCT: struct dentry_operations should normally be const
#96: FILE: fs/ceph/dir.c:29:
+struct dentry_operations ceph_dentry_ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#132: FILE: fs/ceph/dir.c:65:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#138: FILE: fs/ceph/dir.c:71:
+static unsigned fpos_frag(loff_t p)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#142: FILE: fs/ceph/dir.c:75:
+}
+static unsigned fpos_off(loff_t p)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#142: FILE: fs/ceph/dir.c:75:
+static unsigned fpos_off(loff_t p)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#158: FILE: fs/ceph/dir.c:91:
+static int __dcache_readdir(struct file *filp,
                                          ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#174: FILE: fs/ceph/dir.c:107:
+	dout("__dcache_readdir %p at %llu (last %p)\n", dir, filp->f_pos,
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__dcache_readdir', this function's name, in a string
#174: FILE: fs/ceph/dir.c:107:
+	dout("__dcache_readdir %p at %llu (last %p)\n", dir, filp->f_pos,

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#185: FILE: fs/ceph/dir.c:118:
+		dout(" initial p %p/%p\n", p->prev, p->next);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#194: FILE: fs/ceph/dir.c:127:
+		dout(" p %p/%p d_subdirs %p/%p\n", p->prev, p->next,
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#203: FILE: fs/ceph/dir.c:136:
+		dout(" skipping %p %.*s at %llu (%llu)%s%s\n", dentry,
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#216: FILE: fs/ceph/dir.c:149:
+	dout(" %llu (%llu) dentry %p %.*s %p\n", di->offset, filp->f_pos,
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#249: FILE: fs/ceph/dir.c:182:
+	dout(" lost I_COMPLETE on %p; falling back to mds\n", dir);
 	^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#274: FILE: fs/ceph/dir.c:207:
+	fi->last_name = kmalloc(len+1, GFP_NOFS);
 	                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#279: FILE: fs/ceph/dir.c:212:
+	dout("note_last_dentry '%s'\n", fi->last_name);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'note_last_dentry', this function's name, in a string
#279: FILE: fs/ceph/dir.c:212:
+	dout("note_last_dentry '%s'\n", fi->last_name);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#283: FILE: fs/ceph/dir.c:216:
+static int ceph_readdir(struct file *filp, void *dirent, filldir_t filldir)
                                      ^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#290: FILE: fs/ceph/dir.c:223:
+	unsigned frag = fpos_frag(filp->f_pos);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#297: FILE: fs/ceph/dir.c:230:
+	dout("readdir %p filp %p frag %u off %u\n", inode, filp, frag, off);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#297: FILE: fs/ceph/dir.c:230:
+	dout("readdir %p filp %p frag %u off %u\n", inode, filp, frag, off);
 	                 ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#297: FILE: fs/ceph/dir.c:230:
+	dout("readdir %p filp %p frag %u off %u\n", inode, filp, frag, off);
 	                                                   ^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#304: FILE: fs/ceph/dir.c:237:
+		 * if any dentries get dropped */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#307: FILE: fs/ceph/dir.c:240:
+		dout("readdir off 0 -> '.'\n");
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#315: FILE: fs/ceph/dir.c:248:
+		dout("readdir off 1 -> '..'\n");
 		^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#330: FILE: fs/ceph/dir.c:263:
+		err = __dcache_readdir(filp, dirent, filldir);
 		                       ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fi->last_readdir"
#350: FILE: fs/ceph/dir.c:283:
+	if (fi->frag != frag || fi->last_readdir == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#362: FILE: fs/ceph/dir.c:295:
+		dout("readdir fetching %llx.%llx frag %x offset '%s'\n",
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#383: FILE: fs/ceph/dir.c:316:
+		dout("readdir got and parsed readdir result=%d"
 		^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#384: FILE: fs/ceph/dir.c:317:
+		dout("readdir got and parsed readdir result=%d"
+		     " on frag %x, end=%d, complete=%d\n", err, frag,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#389: FILE: fs/ceph/dir.c:322:
+			dout("readdir !did_prepopulate");
 			^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#404: FILE: fs/ceph/dir.c:337:
+			err = note_last_dentry(fi,
+				       rinfo->dir_dname[rinfo->dir_nr-1],

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#404: FILE: fs/ceph/dir.c:337:
+				       rinfo->dir_dname[rinfo->dir_nr-1],
 				                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#405: FILE: fs/ceph/dir.c:338:
+				       rinfo->dir_dname_len[rinfo->dir_nr-1]);
 				                                         ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#413: FILE: fs/ceph/dir.c:346:
+	dout("readdir frag %x num %d off %d chunkoff %d\n", frag,
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#419: FILE: fs/ceph/dir.c:352:
+		dout("readdir off %d (%d/%d) -> %lld '%.*s' %p\n",
 		^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#423: FILE: fs/ceph/dir.c:356:
+		BUG_ON(!in);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#431: FILE: fs/ceph/dir.c:364:
+			dout("filldir stopping us...\n");
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#449: FILE: fs/ceph/dir.c:382:
+		dout("readdir next frag is %x\n", frag);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#461: FILE: fs/ceph/dir.c:394:
+		dout(" marking %p complete\n", inode);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#467: FILE: fs/ceph/dir.c:400:
+	dout("readdir %p filp %p done.\n", inode, filp);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#467: FILE: fs/ceph/dir.c:400:
+	dout("readdir %p filp %p done.\n", inode, filp);
 	                 ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#467: FILE: fs/ceph/dir.c:400:
+	dout("readdir %p filp %p done.\n", inode, filp);
 	                                          ^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#517: FILE: fs/ceph/dir.c:450:
+			dout("dir_llseek dropping %p content\n", file);
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#551: FILE: fs/ceph/dir.c:484:
+		dout("ENOENT on snapdir %p '%.*s', linking to snapdir %p\n",
 		^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#551: FILE: fs/ceph/dir.c:484:
+		struct inode *inode = ceph_get_snapdir(parent);
+		dout("ENOENT on snapdir %p '%.*s', linking to snapdir %p\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#561: FILE: fs/ceph/dir.c:494:
+			dout("ENOENT and no trace, dentry %p inode %p\n",
 			^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#585: FILE: fs/ceph/dir.c:518:
+				  struct nameidata *nd)
 				                    ^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#593: FILE: fs/ceph/dir.c:526:
+	dout("lookup %p dentry %p '%.*s'\n",
 	^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#604: FILE: fs/ceph/dir.c:537:
+	if (nd &&
 	    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#609: FILE: fs/ceph/dir.c:542:
+		return ceph_lookup_open(dir, dentry, nd, mode, 1);
 		                                     ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#609: FILE: fs/ceph/dir.c:542:
+		int mode = nd->intent.open.create_mode & ~current->fs->umask;
+		return ceph_lookup_open(dir, dentry, nd, mode, 1);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dentry->d_inode"
#613: FILE: fs/ceph/dir.c:546:
+	if (dentry->d_inode == NULL) {

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#618: FILE: fs/ceph/dir.c:551:
+		dout(" dir %p flags are %d\n", dir, ci->i_ceph_flags);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#626: FILE: fs/ceph/dir.c:559:
+			dout(" dir %p complete, -ENOENT\n", dir);
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#647: FILE: fs/ceph/dir.c:580:
+	dout("lookup result=%p\n", dentry);
 	^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#667: FILE: fs/ceph/dir.c:600:
+		BUG_ON(!result->d_inode);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#685: FILE: fs/ceph/dir.c:618:
+	dout("mknod in dir %p dentry %p mode 0%o rdev %d\n",
 	^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#709: FILE: fs/ceph/dir.c:642:
+		       struct nameidata *nd)
 		                         ^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#711: FILE: fs/ceph/dir.c:644:
+	dout("create in dir %p dentry %p name '%.*s'\n",
 	^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#717: FILE: fs/ceph/dir.c:650:
+	if (nd) {
 	    ^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#718: FILE: fs/ceph/dir.c:651:
+		BUG_ON((nd->flags & LOOKUP_OPEN) == 0);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#719: FILE: fs/ceph/dir.c:652:
+		dentry = ceph_lookup_open(dir, dentry, nd, mode, 0);
 		                                       ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#731: FILE: fs/ceph/dir.c:664:
+static int ceph_symlink(struct inode *dir, struct dentry *dentry,
+			    const char *dest)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#741: FILE: fs/ceph/dir.c:674:
+	dout("symlink in dir %p dentry %p to '%s'\n", dir, dentry, dest);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#773: FILE: fs/ceph/dir.c:706:
+		dout("mksnap dir %p snap '%.*s' dn %p\n", dir,
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#776: FILE: fs/ceph/dir.c:709:
+		dout("mkdir dir %p dn %p mode 0%o\n", dir, dentry, mode);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#814: FILE: fs/ceph/dir.c:747:
+	dout("link in dir %p old_dentry %p dentry %p\n", dir,
 	^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#868: FILE: fs/ceph/dir.c:801:
+	if (ceph_snap(dir) == CEPH_SNAPDIR) {
[...]
+	} else if (ceph_snap(dir) == CEPH_NOSNAP) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#870: FILE: fs/ceph/dir.c:803:
+		dout("rmsnap dir %p '%.*s' dn %p\n", dir, dentry->d_name.len,
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#874: FILE: fs/ceph/dir.c:807:
+		dout("unlink/rmdir dir %p dn %p inode %p\n",
 		^^^^

CHECK:BRACES: Unbalanced braces around else statement
#878: FILE: fs/ceph/dir.c:811:
+	} else

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#912: FILE: fs/ceph/dir.c:845:
+	dout("rename dir %p dentry %p to dir %p dentry %p\n",
 	^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#942: FILE: fs/ceph/dir.c:875:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#991: FILE: fs/ceph/dir.c:924:
+	dout("dentry_lease_is_valid - dentry %p = %d\n", dentry, valid);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dentry_lease_is_valid', this function's name, in a string
#991: FILE: fs/ceph/dir.c:924:
+	dout("dentry_lease_is_valid - dentry %p = %d\n", dentry, valid);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1008: FILE: fs/ceph/dir.c:941:
+	dout("dir_lease_is_valid dir %p v%u dentry %p v%u = %d\n",
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dir_lease_is_valid', this function's name, in a string
#1008: FILE: fs/ceph/dir.c:941:
+	dout("dir_lease_is_valid dir %p v%u dentry %p v%u = %d\n",

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1009: FILE: fs/ceph/dir.c:942:
+	     dir, (unsigned)ci->i_shared_gen, dentry,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1010: FILE: fs/ceph/dir.c:943:
+	     (unsigned)di->lease_shared_gen, valid);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1017: FILE: fs/ceph/dir.c:950:
+static int ceph_d_revalidate(struct dentry *dentry, struct nameidata *nd)
                                                                       ^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1021: FILE: fs/ceph/dir.c:954:
+	dout("d_revalidate %p '%.*s' inode %p\n", dentry,
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1026: FILE: fs/ceph/dir.c:959:
+		dout("d_revalidate %p '%.*s' inode %p is SNAPPED\n", dentry,
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1037: FILE: fs/ceph/dir.c:970:
+	dout("d_revalidate %p invalid\n", dentry);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1059: FILE: fs/ceph/dir.c:992:
+			dout(" clearing %p complete (d_release)\n",
 			^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1076: FILE: fs/ceph/dir.c:1009:
+					  struct nameidata *nd)
 					                    ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1076: FILE: fs/ceph/dir.c:1009:
+static int ceph_snapdir_d_revalidate(struct dentry *dentry,
+					  struct nameidata *nd)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1085: FILE: fs/ceph/dir.c:1018:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1129: FILE: fs/ceph/dir.c:1062:
+	size = min_t(unsigned, size, cf->dir_info_len-*ppos);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxO)
#1129: FILE: fs/ceph/dir.c:1062:
+	size = min_t(unsigned, size, cf->dir_info_len-*ppos);
 	                                             ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1151: FILE: fs/ceph/dir.c:1084:
+	dout("dir_fsync %p\n", inode);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1163: FILE: fs/ceph/dir.c:1096:
+		dout("dir_fsync %p wait on tid %llu (until %llu)\n",
 		^^^^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1166: FILE: fs/ceph/dir.c:1099:
+			ret = wait_for_completion_timeout(

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1197: FILE: fs/ceph/dir.c:1130:
+	dout("dentry_lru_add %p %p\t%.*s\n",
 	^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1197: FILE: fs/ceph/dir.c:1130:
+	struct ceph_mds_client *mdsc;
+	dout("dentry_lru_add %p %p\t%.*s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1198: FILE: fs/ceph/dir.c:1131:
+	dout("dentry_lru_add %p %p\t%.*s\n",
+			di, dn, dn->d_name.len, dn->d_name.name);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1213: FILE: fs/ceph/dir.c:1146:
+	dout("dentry_lru_touch %p %p\t%.*s\n",
 	^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1213: FILE: fs/ceph/dir.c:1146:
+	struct ceph_mds_client *mdsc;
+	dout("dentry_lru_touch %p %p\t%.*s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1214: FILE: fs/ceph/dir.c:1147:
+	dout("dentry_lru_touch %p %p\t%.*s\n",
+			di, dn, dn->d_name.len, dn->d_name.name);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1229: FILE: fs/ceph/dir.c:1162:
+	dout("dentry_lru_del %p %p\t%.*s\n",
 	^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1230: FILE: fs/ceph/dir.c:1163:
+	dout("dentry_lru_del %p %p\t%.*s\n",
+			di, dn, dn->d_name.len, dn->d_name.name);

WARNING:CONST_STRUCT: struct dentry_operations should normally be const
#1269: FILE: fs/ceph/dir.c:1202:
+struct dentry_operations ceph_dentry_ops = {

WARNING:CONST_STRUCT: struct dentry_operations should normally be const
#1274: FILE: fs/ceph/dir.c:1207:
+struct dentry_operations ceph_snapdir_dentry_ops = {

WARNING:CONST_STRUCT: struct dentry_operations should normally be const
#1278: FILE: fs/ceph/dir.c:1211:
+struct dentry_operations ceph_snap_dentry_ops = {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000063745.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 86 warnings, 19 checks, 1212 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000063745.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
