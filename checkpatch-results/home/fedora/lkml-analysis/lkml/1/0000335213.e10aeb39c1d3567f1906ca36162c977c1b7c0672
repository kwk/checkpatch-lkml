ERROR:CODE_INDENT: code indent should use tabs where possible
#88: FILE: fs/ocfs2/dlmglue.c:326:
+^I^I^I^I        struct ocfs2_lock_res *lockres);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#88: FILE: fs/ocfs2/dlmglue.c:326:
+static int ocfs2_prepare_cancel_convert(struct ocfs2_super *osb,
+				        struct ocfs2_lock_res *lockres);

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#222: FILE: fs/ocfs2/dlmglue.c:1411:
+ * seperate path to the "low-level" dlm calls. In particular:
    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lockres->l_level > LKM_NLMODE'
#251: FILE: fs/ocfs2/dlmglue.c:1440:
+	if ((lockres->l_flags & OCFS2_LOCK_BUSY) ||
+	    (lockres->l_level > LKM_NLMODE)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPLIT_STRING: quoted string split across lines
#255: FILE: fs/ocfs2/dlmglue.c:1444:
+		     "File lock \"%s\" has busy or locked state: flags: 0x%lx, "
+		     "level: %u\n", lockres->l_name, lockres->l_flags,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:BRACES: braces {} should be used on all arms of this statement
#295: FILE: fs/ocfs2/dlmglue.c:1484:
+		if (trylock && ret == DLM_NOTQUEUED)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#297: FILE: fs/ocfs2/dlmglue.c:1486:
+		else {

WARNING:TYPO_SPELLING: 'sucess' may be misspelled - perhaps 'success'?
#322: FILE: fs/ocfs2/dlmglue.c:1511:
+		 * to just bubble sucess back up to the user.
 		                  ^^^^^^

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#413: FILE: fs/ocfs2/file.h:37:
+	struct mutex		fp_mutex;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000335213.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 3 warnings, 5 checks, 374 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000335213.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
