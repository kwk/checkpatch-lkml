WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#41: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#46: FILE: drivers/watchdog/iTCO_vendor.h:1:
+/* iTCO Vendor Specific Support hooks */

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_vendor_pre_start>
#48: FILE: drivers/watchdog/iTCO_vendor.h:3:
+extern void iTCO_vendor_pre_start(unsigned long, unsigned int);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#48: FILE: drivers/watchdog/iTCO_vendor.h:3:
+extern void iTCO_vendor_pre_start(unsigned long, unsigned int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#48: FILE: drivers/watchdog/iTCO_vendor.h:3:
+extern void iTCO_vendor_pre_start(unsigned long, unsigned int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#48: FILE: drivers/watchdog/iTCO_vendor.h:3:
+extern void iTCO_vendor_pre_start(unsigned long, unsigned int);

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_vendor_pre_stop>
#49: FILE: drivers/watchdog/iTCO_vendor.h:4:
+extern void iTCO_vendor_pre_stop(unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#49: FILE: drivers/watchdog/iTCO_vendor.h:4:
+extern void iTCO_vendor_pre_stop(unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#49: FILE: drivers/watchdog/iTCO_vendor.h:4:
+extern void iTCO_vendor_pre_stop(unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_vendor_pre_keepalive>
#50: FILE: drivers/watchdog/iTCO_vendor.h:5:
+extern void iTCO_vendor_pre_keepalive(unsigned long, unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#50: FILE: drivers/watchdog/iTCO_vendor.h:5:
+extern void iTCO_vendor_pre_keepalive(unsigned long, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#50: FILE: drivers/watchdog/iTCO_vendor.h:5:
+extern void iTCO_vendor_pre_keepalive(unsigned long, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#50: FILE: drivers/watchdog/iTCO_vendor.h:5:
+extern void iTCO_vendor_pre_keepalive(unsigned long, unsigned int);

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_vendor_pre_set_heartbeat>
#51: FILE: drivers/watchdog/iTCO_vendor.h:6:
+extern void iTCO_vendor_pre_set_heartbeat(unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#51: FILE: drivers/watchdog/iTCO_vendor.h:6:
+extern void iTCO_vendor_pre_set_heartbeat(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#51: FILE: drivers/watchdog/iTCO_vendor.h:6:
+extern void iTCO_vendor_pre_set_heartbeat(unsigned int);

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_vendor_check_noreboot_on>
#52: FILE: drivers/watchdog/iTCO_vendor.h:7:
+extern int iTCO_vendor_check_noreboot_on(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#52: FILE: drivers/watchdog/iTCO_vendor.h:7:
+extern int iTCO_vendor_check_noreboot_on(void);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#167: FILE: drivers/watchdog/iTCO_vendor_support.c:296:
+	printk(KERN_INFO PFX "vendor-support=%d\n", vendorsupport);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#174: FILE: drivers/watchdog/iTCO_vendor_support.c:302:
+	printk(KERN_INFO PFX "Module Unloaded\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#188: FILE: drivers/watchdog/iTCO_wdt.c:69:
+#include <linux/miscdevice.h>		/* For MODULE_ALIAS_MISCDEV
+							(WATCHDOG_MINOR) */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#188: FILE: drivers/watchdog/iTCO_wdt.c:69:
+							(WATCHDOG_MINOR) */

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_pci_tbl>
#274: FILE: drivers/watchdog/iTCO_wdt.c:204:
+MODULE_DEVICE_TABLE(pci, iTCO_wdt_pci_tbl);

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_private>
#280: FILE: drivers/watchdog/iTCO_wdt.c:208:
+#define	TCOBASE		iTCO_wdt_private.ACPIBASE + 0x60

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#280: FILE: drivers/watchdog/iTCO_wdt.c:208:
+#define	TCOBASE		iTCO_wdt_private.ACPIBASE + 0x60

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#282: FILE: drivers/watchdog/iTCO_wdt.c:210:
+#define	SMI_EN		iTCO_wdt_private.ACPIBASE + 0x30

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#285: FILE: drivers/watchdog/iTCO_wdt.c:212:
+#define TCO_RLD		TCOBASE + 0x00	/* TCO Timer Reload and Curr. Value */

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_version>
#301: FILE: drivers/watchdog/iTCO_wdt.c:227:
+	unsigned int iTCO_version;

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_platform_device>
#314: FILE: drivers/watchdog/iTCO_wdt.c:239:
+static struct platform_device *iTCO_wdt_platform_device;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#339: FILE: drivers/watchdog/iTCO_wdt.c:250:
+MODULE_PARM_DESC(nowayout,
+	"Watchdog cannot be stopped once started (default="

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_get_timeleft>
#363: FILE: drivers/watchdog/iTCO_wdt.c:420:
+static int iTCO_wdt_get_timeleft(int *time_left)

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_open>
#372: FILE: drivers/watchdog/iTCO_wdt.c:449:
+static int iTCO_wdt_open(struct inode *inode, struct file *file)

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_release>
#381: FILE: drivers/watchdog/iTCO_wdt.c:463:
+static int iTCO_wdt_release(struct inode *inode, struct file *file)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#390: FILE: drivers/watchdog/iTCO_wdt.c:471:
+		printk(KERN_CRIT PFX

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_write>
#401: FILE: drivers/watchdog/iTCO_wdt.c:480:
+static ssize_t iTCO_wdt_write(struct file *file, const char __user *data,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#412: FILE: drivers/watchdog/iTCO_wdt.c:489:
+			/* note: just in case someone wrote the magic
+			   character five months ago... */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#412: FILE: drivers/watchdog/iTCO_wdt.c:489:
+			   character five months ago... */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#417: FILE: drivers/watchdog/iTCO_wdt.c:493:
+			/* scan to see whether or not we got the
+			   magic character */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#417: FILE: drivers/watchdog/iTCO_wdt.c:493:
+			   magic character */

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_ioctl>
#427: FILE: drivers/watchdog/iTCO_wdt.c:509:
+static long iTCO_wdt_ioctl(struct file *file, unsigned int cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#428: FILE: drivers/watchdog/iTCO_wdt.c:510:
+static long iTCO_wdt_ioctl(struct file *file, unsigned int cmd,
+							unsigned long arg)

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_keepalive>
#463: FILE: drivers/watchdog/iTCO_wdt.c:532:
+		iTCO_wdt_keepalive();

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_stop>
#478: FILE: drivers/watchdog/iTCO_wdt.c:541:
+			iTCO_wdt_stop();

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_start>
#493: FILE: drivers/watchdog/iTCO_wdt.c:546:
+			iTCO_wdt_start();

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_set_heartbeat>
#518: FILE: drivers/watchdog/iTCO_wdt.c:555:
+		if (iTCO_wdt_set_heartbeat(new_heartbeat))

WARNING:LINE_SPACING: Missing a blank line after declarations
#528: FILE: drivers/watchdog/iTCO_wdt.c:565:
+		int time_left;
+		if (iTCO_wdt_get_timeleft(&time_left))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#561: FILE: drivers/watchdog/iTCO_wdt.c:597:
+static int __devinit iTCO_wdt_init(struct pci_dev *pdev,

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_init>
#561: FILE: drivers/watchdog/iTCO_wdt.c:597:
+static int __devinit iTCO_wdt_init(struct pci_dev *pdev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#562: FILE: drivers/watchdog/iTCO_wdt.c:598:
+static int __devinit iTCO_wdt_init(struct pci_dev *pdev,
+		const struct pci_device_id *ent, struct platform_device *dev)

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_chipset_info>
#572: FILE: drivers/watchdog/iTCO_wdt.c:619:
+			iTCO_chipset_info[ent->driver_data].iTCO_version;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#580: FILE: drivers/watchdog/iTCO_wdt.c:624:
+	/* Get the Memory-Mapped GCS register, we need it for the
+	   NO_REBOOT flag (TCO v2). To get access to it you have to

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#582: FILE: drivers/watchdog/iTCO_wdt.c:626:
+	   GCS = RCBA + ICH6_GCS(0x3410). */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#597: FILE: drivers/watchdog/iTCO_wdt.c:645:
+		printk(KERN_ERR PFX

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#610: FILE: drivers/watchdog/iTCO_wdt.c:656:
+	/* The TCO I/O registers reside in a 32-byte range pointed to
+	   by the TCOBASE value */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#610: FILE: drivers/watchdog/iTCO_wdt.c:656:
+	   by the TCOBASE value */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#612: FILE: drivers/watchdog/iTCO_wdt.c:658:
+		printk(KERN_ERR PFX "I/O address 0x%04lx already in use\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#613: FILE: drivers/watchdog/iTCO_wdt.c:659:
+		printk(KERN_ERR PFX "I/O address 0x%04lx already in use\n",
 			TCOBASE);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#622: FILE: drivers/watchdog/iTCO_wdt.c:664:
+	printk(KERN_INFO PFX

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#636: FILE: drivers/watchdog/iTCO_wdt.c:678:
+	/* Check that the heartbeat value is within it's range;
+	   if not reset to the default */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#636: FILE: drivers/watchdog/iTCO_wdt.c:678:
+	   if not reset to the default */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#641: FILE: drivers/watchdog/iTCO_wdt.c:681:
+		printk(KERN_INFO PFX "heartbeat value must be 2 < heartbeat < 39 (TCO v1) or 613 (TCO v2), using %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#642: FILE: drivers/watchdog/iTCO_wdt.c:682:
+		printk(KERN_INFO PFX "heartbeat value must be 2 < heartbeat < 39 (TCO v1) or 613 (TCO v2), using %d\n",
+							heartbeat);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#649: FILE: drivers/watchdog/iTCO_wdt.c:687:
+		printk(KERN_ERR PFX

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#657: FILE: drivers/watchdog/iTCO_wdt.c:693:
+	printk(KERN_INFO PFX "initialized. heartbeat=%d sec (nowayout=%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#658: FILE: drivers/watchdog/iTCO_wdt.c:694:
+	printk(KERN_INFO PFX "initialized. heartbeat=%d sec (nowayout=%d)\n",
+							heartbeat, nowayout);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#674: FILE: drivers/watchdog/iTCO_wdt.c:789:
+	iTCO_wdt_platform_device = platform_device_register_simple(DRV_NAME,
+								-1, NULL, 0);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000278838.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 31 warnings, 32 checks, 596 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000278838.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
