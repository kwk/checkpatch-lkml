CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#352: FILE: drivers/gpio/gpiolib.c:183:
+static ssize_t gpio_direction_show(struct device *dev,
+		struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#363: FILE: drivers/gpio/gpiolib.c:194:
+		status = sprintf(buf, "%s\n",
+			test_bit(FLAG_IS_OUT, &desc->flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#371: FILE: drivers/gpio/gpiolib.c:202:
+static ssize_t gpio_direction_store(struct device *dev,
+		struct device_attribute *attr, const char *buf, size_t size)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#374: FILE: drivers/gpio/gpiolib.c:205:
+	unsigned		gpio = desc - gpio_desc;

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'gpio_direction_show' to 'direction_show' 'gpio_direction_store' to 'direction_store'
#392: FILE: drivers/gpio/gpiolib.c:223:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#398: FILE: drivers/gpio/gpiolib.c:229:
+static ssize_t gpio_value_show(struct device *dev,
+		struct device_attribute *attr, char *buf)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#401: FILE: drivers/gpio/gpiolib.c:232:
+	unsigned		gpio = desc - gpio_desc;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#416: FILE: drivers/gpio/gpiolib.c:247:
+static ssize_t gpio_value_store(struct device *dev,
+		struct device_attribute *attr, const char *buf, size_t size)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#419: FILE: drivers/gpio/gpiolib.c:250:
+	unsigned		gpio = desc - gpio_desc;

CHECK:BRACES: braces {} should be used on all arms of this statement
#424: FILE: drivers/gpio/gpiolib.c:255:
+	if (!test_bit(FLAG_EXPORT, &desc->flags))
[...]
+	else if (!test_bit(FLAG_IS_OUT, &desc->flags))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#428: FILE: drivers/gpio/gpiolib.c:259:
+	else {

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#431: FILE: drivers/gpio/gpiolib.c:262:
+		status = strict_strtol(buf, 0, &value);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'gpio_value_show' to 'value_show' 'gpio_value_store' to 'value_store'
#440: FILE: drivers/gpio/gpiolib.c:271:
+}

CHECK:SPACING: No space is necessary after a cast
#452: FILE: drivers/gpio/gpiolib.c:283:
+	.attrs = (struct attribute **) gpio_attrs,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#463: FILE: drivers/gpio/gpiolib.c:294:
+static ssize_t chip_base_show(struct device *dev,
+			       struct device_attribute *attr, char *buf)

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'chip_base_show' to 'base_show'
#468: FILE: drivers/gpio/gpiolib.c:299:
+}

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'chip_label_show' to 'label_show'
#477: FILE: drivers/gpio/gpiolib.c:308:
+}

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'chip_ngpio_show' to 'ngpio_show'
#486: FILE: drivers/gpio/gpiolib.c:317:
+}

CHECK:SPACING: No space is necessary after a cast
#497: FILE: drivers/gpio/gpiolib.c:328:
+	.attrs = (struct attribute **) gpiochip_attrs,

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#511: FILE: drivers/gpio/gpiolib.c:342:
+	status = strict_strtol(buf, 0, &gpio);

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#541: FILE: drivers/gpio/gpiolib.c:372:
+	status = strict_strtol(buf, 0, &gpio);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#578: FILE: drivers/gpio/gpiolib.c:409:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#594: FILE: drivers/gpio/gpiolib.c:425:
+int gpio_export(unsigned gpio, bool direction_may_change)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#614: FILE: drivers/gpio/gpiolib.c:445:
+	if (test_bit(FLAG_REQUESTED, &desc->flags)
+			&& !test_bit(FLAG_EXPORT, &desc->flags)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#617: FILE: drivers/gpio/gpiolib.c:448:
+		if (!desc->chip->direction_input
+				|| !desc->chip->direction_output)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#626: FILE: drivers/gpio/gpiolib.c:457:
+		dev = device_create(&gpio_class, desc->chip->dev, 0,
+				"gpio%d", gpio);

CHECK:BRACES: braces {} should be used on all arms of this statement
#627: FILE: drivers/gpio/gpiolib.c:458:
+		if (dev) {
[...]
+		} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#631: FILE: drivers/gpio/gpiolib.c:462:
+				status = sysfs_create_group(&dev->kobj,
+						&gpio_attr_group);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#634: FILE: drivers/gpio/gpiolib.c:465:
+				status = device_create_file(dev,
+						&dev_attr_value);

CHECK:BRACES: Unbalanced braces around else statement
#637: FILE: drivers/gpio/gpiolib.c:468:
+		} else

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#664: FILE: drivers/gpio/gpiolib.c:495:
+void gpio_unexport(unsigned gpio)

CHECK:BRACES: braces {} should be used on all arms of this statement
#679: FILE: drivers/gpio/gpiolib.c:510:
+		if (dev) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#684: FILE: drivers/gpio/gpiolib.c:515:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#711: FILE: drivers/gpio/gpiolib.c:542:
+	dev = device_create(&gpio_class, chip->dev, 0,
+			"gpiochip%d", chip->base);

CHECK:BRACES: braces {} should be used on all arms of this statement
#712: FILE: drivers/gpio/gpiolib.c:543:
+	if (dev) {
[...]
+	} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#715: FILE: drivers/gpio/gpiolib.c:546:
+		status = sysfs_create_group(&dev->kobj,
+				&gpiochip_attr_group);

CHECK:BRACES: Unbalanced braces around else statement
#716: FILE: drivers/gpio/gpiolib.c:547:
+	} else

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#723: FILE: drivers/gpio/gpiolib.c:554:
+		unsigned	gpio;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#732: FILE: drivers/gpio/gpiolib.c:563:
+		pr_debug("%s: chip %s status %d\n", __func__,
+				chip->label, status);

CHECK:BRACES: braces {} should be used on all arms of this statement
#745: FILE: drivers/gpio/gpiolib.c:576:
+	if (dev) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#750: FILE: drivers/gpio/gpiolib.c:581:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#756: FILE: drivers/gpio/gpiolib.c:587:
+		pr_debug("%s: chip %s status %d\n", __func__,
+				chip->label, status);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#763: FILE: drivers/gpio/gpiolib.c:594:
+	unsigned	gpio;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#789: FILE: drivers/gpio/gpiolib.c:620:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#970: FILE: include/asm-generic/gpio.h:121:
+extern int gpio_export(unsigned gpio, bool direction_may_change);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#970: FILE: include/asm-generic/gpio.h:121:
+extern int gpio_export(unsigned gpio, bool direction_may_change);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#971: FILE: include/asm-generic/gpio.h:122:
+extern void gpio_unexport(unsigned gpio);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#971: FILE: include/asm-generic/gpio.h:122:
+extern void gpio_unexport(unsigned gpio);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#990: FILE: include/asm-generic/gpio.h:161:
+static inline int gpio_export(unsigned gpio, bool direction_may_change)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#992: FILE: include/asm-generic/gpio.h:163:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#995: FILE: include/asm-generic/gpio.h:166:
+static inline void gpio_unexport(unsigned gpio)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1007: FILE: include/linux/gpio.h:82:
+static inline int gpio_export(unsigned gpio, bool direction_may_change)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1014: FILE: include/linux/gpio.h:89:
+static inline void gpio_unexport(unsigned gpio)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000267950.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 22 warnings, 31 checks, 863 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000267950.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
