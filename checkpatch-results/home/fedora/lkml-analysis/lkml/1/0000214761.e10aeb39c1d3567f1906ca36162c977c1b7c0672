WARNING:EMAIL_SUBJECT: A patch subject line should describe the change not the tool that found it
#17: 
Subject: [PATCH] x86, UV: non-sparse irq based uv_setup_irq()/uv_teardown_irq() functions

Naming the tool that found the issue is not very useful in the
subject line.  A good subject line summarizes the change that
the patch brings.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
Provide a means for UV interrupt MMRs to be setup with the message to be sent

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#60: FILE: arch/x86/kernel/uv_irq.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#144: FILE: include/asm-x86/uv/uv_irq.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#173: FILE: include/asm-x86/uv/uv_irq.h:30:
+extern int arch_enable_uv_irq(char *, unsigned int, int, int, unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#173: FILE: include/asm-x86/uv/uv_irq.h:30:
+extern int arch_enable_uv_irq(char *, unsigned int, int, int, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#173: FILE: include/asm-x86/uv/uv_irq.h:30:
+extern int arch_enable_uv_irq(char *, unsigned int, int, int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#173: FILE: include/asm-x86/uv/uv_irq.h:30:
+extern int arch_enable_uv_irq(char *, unsigned int, int, int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#173: FILE: include/asm-x86/uv/uv_irq.h:30:
+extern int arch_enable_uv_irq(char *, unsigned int, int, int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#173: FILE: include/asm-x86/uv/uv_irq.h:30:
+extern int arch_enable_uv_irq(char *, unsigned int, int, int, unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#174: FILE: include/asm-x86/uv/uv_irq.h:31:
+extern void arch_disable_uv_irq(int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#174: FILE: include/asm-x86/uv/uv_irq.h:31:
+extern void arch_disable_uv_irq(int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#174: FILE: include/asm-x86/uv/uv_irq.h:31:
+extern void arch_disable_uv_irq(int, unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#176: FILE: include/asm-x86/uv/uv_irq.h:33:
+extern int uv_setup_irq(char *, int, int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#176: FILE: include/asm-x86/uv/uv_irq.h:33:
+extern int uv_setup_irq(char *, int, int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#176: FILE: include/asm-x86/uv/uv_irq.h:33:
+extern int uv_setup_irq(char *, int, int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#176: FILE: include/asm-x86/uv/uv_irq.h:33:
+extern int uv_setup_irq(char *, int, int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#176: FILE: include/asm-x86/uv/uv_irq.h:33:
+extern int uv_setup_irq(char *, int, int, unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#177: FILE: include/asm-x86/uv/uv_irq.h:34:
+extern void uv_teardown_irq(unsigned int, int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#177: FILE: include/asm-x86/uv/uv_irq.h:34:
+extern void uv_teardown_irq(unsigned int, int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#177: FILE: include/asm-x86/uv/uv_irq.h:34:
+extern void uv_teardown_irq(unsigned int, int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#177: FILE: include/asm-x86/uv/uv_irq.h:34:
+extern void uv_teardown_irq(unsigned int, int, unsigned long);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#239: FILE: arch/x86/kernel/io_apic_64.c:2821:
+	BUG_ON(sizeof(struct uv_IO_APIC_route_entry) != sizeof(unsigned long));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#267: FILE: arch/x86/kernel/io_apic_64.c:2849:
+	BUG_ON(sizeof(struct uv_IO_APIC_route_entry) != sizeof(unsigned long));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000214761.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 20 warnings, 4 checks, 202 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000214761.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
