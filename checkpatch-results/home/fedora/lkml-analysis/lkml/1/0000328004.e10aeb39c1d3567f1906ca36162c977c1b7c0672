WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#151: FILE: arch/x86/kernel/head64.c:162:
+	for (i = 0; i < NR_CPUS; i++)

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: arch/x86/kernel/head64.c:163:
+ ^I^Iif (_cpu_pda_init[i] == &boot_cpu_pda[i])$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#152: FILE: arch/x86/kernel/head64.c:163:
+ ^I^Iif (_cpu_pda_init[i] == &boot_cpu_pda[i])$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: arch/x86/kernel/head64.c:163:
+ ^I^Iif (_cpu_pda_init[i] == &boot_cpu_pda[i])$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#212: FILE: arch/x86/kernel/setup64.c:138:
+	printk(KERN_INFO

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#216: FILE: arch/x86/kernel/setup64.c:142:
+	for_each_possible_cpu(i) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#229: FILE: arch/x86/kernel/setup64.c:152:
+		else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#230: FILE: arch/x86/kernel/setup64.c:153:
+			printk(KERN_INFO

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#327: FILE: include/asm-x86/pda.h:44:
+extern void x86_64_cleanup_pda(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#333: FILE: include/asm-x86/pda.h:50:
+extern void pda_init(int);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#402: FILE: include/asm-x86/percpu.h:144:
+#define x86_write_percpu(var,val) percpu_to_op("mov", seg_offset(var), val)
                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#403: FILE: include/asm-x86/percpu.h:145:
+#define x86_add_percpu(var,val) percpu_to_op("add", seg_offset(var), val)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#404: FILE: include/asm-x86/percpu.h:146:
+#define x86_sub_percpu(var,val) percpu_to_op("sub", seg_offset(var), val)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#405: FILE: include/asm-x86/percpu.h:147:
+#define x86_or_percpu(var,val) percpu_to_op("or", seg_offset(var), val)
                          ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#416: FILE: include/linux/percpu.h:22:
+#define DEFINE_PER_CPU_FIRST(type, name)				\
+	__attribute__((__section__(".data.percpu.first")))		\
+	PER_CPU_ATTRIBUTES __typeof__(type) per_cpu__##name

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data.percpu.first") over __attribute__((__section__(".data.percpu.first")))
#417: FILE: include/linux/percpu.h:23:
+	__attribute__((__section__(".data.percpu.first")))		\

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000328004.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 6 warnings, 4 checks, 319 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000328004.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
