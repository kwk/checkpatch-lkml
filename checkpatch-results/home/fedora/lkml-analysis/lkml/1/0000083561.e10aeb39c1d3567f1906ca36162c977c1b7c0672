WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#51: 
display them, according to the events informations given by the debugfs
                                      ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#62: 
       kblockd/0-236   [000]     0.000000: workqueue_execution: thread=:236 func=cfq_kick_queue+0x0

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#148: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#153: FILE: tools/perf/builtin-trace.c:1:
+#include "builtin.h"

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:STATIC_CONST: Move const after static - use 'static const char'
#168: FILE: tools/perf/builtin-trace.c:16:
+static char		const *input_name = "perf.data";

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#173: FILE: tools/perf/builtin-trace.c:21:
+static unsigned long	total = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#174: FILE: tools/perf/builtin-trace.c:22:
+static unsigned long	total_comm = 0;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#182: FILE: tools/perf/builtin-trace.c:30:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#191: FILE: tools/perf/builtin-trace.c:39:
+	dump_printf("%p [%p]: PERF_EVENT_COMM: %s:%d\n",
+		(void *)(offset + head),

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!thread"
#195: FILE: tools/perf/builtin-trace.c:43:
+	if (thread == NULL ||

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#224: FILE: tools/perf/builtin-trace.c:72:
+	dump_printf("%p [%p]: PERF_EVENT_SAMPLE (IP, %d): %d/%d: %p period: %Ld\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#225: FILE: tools/perf/builtin-trace.c:73:
+	dump_printf("%p [%p]: PERF_EVENT_SAMPLE (IP, %d): %d/%d: %p period: %Ld\n",
+		(void *)(offset + head),

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!thread"
#234: FILE: tools/perf/builtin-trace.c:82:
+	if (thread == NULL) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#251: FILE: tools/perf/builtin-trace.c:99:
+	} else if (cpumode == PERF_EVENT_MISC_USER) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#373: FILE: tools/perf/builtin-trace.c:221:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#375: FILE: tools/perf/builtin-trace.c:223:
+	if (!size || process_event(event, offset, head) < 0) {
+

WARNING:TYPO_SPELLING: 'tha' may be misspelled - perhaps 'than'?
#418: FILE: tools/perf/builtin-trace.c:266:
+		 * Special case: if there's an argument left then assume tha
 		                                                         ^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#425: FILE: tools/perf/builtin-trace.c:273:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000083561.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 7 warnings, 9 checks, 323 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000083561.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
