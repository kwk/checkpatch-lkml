WARNING:BAD_SIGN_OFF: email address 'Vincent Sanders <vince@arm.linux.org.u.>' might be better as 'Vincent Sanders <vince@arm.linux.org.u>'
#40: 
Signed-off-by: Vincent Sanders <vince@arm.linux.org.u.>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#49: FILE: drivers/video/Kconfig:1603:
+config FB_SM501
+	tristate "Silicon Motion SM501 framebuffer support"
+	depends on FB && MFD_SM501
+	select FB_CFB_FILLRECT
+	select FB_CFB_COPYAREA
+	select FB_CFB_IMAGEBLIT
+	---help---
+	  Frame buffer driver for the CRT and LCD controllers in the Silicon
+	  Motion SM501.
+
+	  This driver is also available as a module ( = code which can be 
+	  inserted and removed from the running kernel whenever you want). The 
+	  module will be called sm501fb. If you want to compile it as a module,
+	  say M here and read <file:Documentation/modules.txt>.
+
+	  If unsure, say N.
+
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#59: FILE: drivers/video/Kconfig:1613:
+^I  This driver is also available as a module ( = code which can be $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#60: FILE: drivers/video/Kconfig:1614:
+^I  inserted and removed from the running kernel whenever you want). The $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#85: FILE: drivers/video/sm501fb.c:1:
+/* linux/drivers/video/sm501fb.c

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#85: FILE: drivers/video/sm501fb.c:1:
+/* linux/drivers/video/sm501fb.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#116: FILE: drivers/video/sm501fb.c:32:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#117: FILE: drivers/video/sm501fb.c:33:
+#include <asm/uaccess.h>

WARNING:TYPO_SPELLING: 'adress' may be misspelled - perhaps 'address'?
#134: FILE: drivers/video/sm501fb.c:50:
+/* SM501 memory adress */
                 ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONST_STRUCT: struct fb_ops should normally be const
#163: FILE: drivers/video/sm501fb.c:79:
+	struct fb_ops		 ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#190: FILE: drivers/video/sm501fb.c:106:
+ * next phase, or after completing a function.
+*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#273: FILE: drivers/video/sm501fb.c:189:
+ * the limited PLL settings on the SM501.
+*/

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#277: FILE: drivers/video/sm501fb.c:193:
+	unsigned long long numerator=1000000000000ULL;
 	                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'oposite' may be misspelled - perhaps 'opposite'?
#284: FILE: drivers/video/sm501fb.c:200:
+/* sm501fb_hz_to_ps is identical to the oposite transform */
                                         ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#292: FILE: drivers/video/sm501fb.c:208:
+ * correction is enabled without programming anything else.
+*/

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#303: FILE: drivers/video/sm501fb.c:219:
+^I^Ivalue += 0x010101; ^I/* Advance RGB by 1,1,1.*/$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#310: FILE: drivers/video/sm501fb.c:226:
+ * check common variables for both panel and crt
+*/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#338: FILE: drivers/video/sm501fb.c:254:
+^Iif ((tmp & 15) != 0) $

ERROR:SPACING: space required before the open parenthesis '('
#356: FILE: drivers/video/sm501fb.c:272:
+	switch(var->bits_per_pixel) {

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#416: FILE: drivers/video/sm501fb.c:332:
+ * back into range, or return -EINVAL.
+*/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#428: FILE: drivers/video/sm501fb.c:344:
+ * back into range, or return -EINVAL.
+*/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#439: FILE: drivers/video/sm501fb.c:355:
+ * set common registers for framebuffers
+*/

WARNING:TYPO_SPELLING: 'achive' may be misspelled - perhaps 'achieve'?
#447: FILE: drivers/video/sm501fb.c:363:
+	unsigned long sm501pixclock; /* pixelclock the 501 can achive in Hz */
 	                                                       ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#451: FILE: drivers/video/sm501fb.c:367:
+^I$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#490: FILE: drivers/video/sm501fb.c:406:
+	info->fix.line_length = (var->xres_virtual * var->bits_per_pixel)/8;
 	                                                                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#493: FILE: drivers/video/sm501fb.c:409:
+^Idev_dbg(fbi->dev, "%s: line length = %u\n", __func__, $

WARNING:SPLIT_STRING: quoted string split across lines
#522: FILE: drivers/video/sm501fb.c:438:
+	dev_dbg(fbi->dev, "%s: pixclock(ps) = %u, pixclock(Hz)  = %lu, "
+	       "sm501pixclock = %lu,  error = %ld%%\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#524: FILE: drivers/video/sm501fb.c:440:
+	       ((pixclock - sm501pixclock)*100)/pixclock);
 	                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#524: FILE: drivers/video/sm501fb.c:440:
+	       ((pixclock - sm501pixclock)*100)/pixclock);
 	                                       ^

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#532: FILE: drivers/video/sm501fb.c:448:
+ * set the geometry registers for specified framebuffer.
+*/

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#550: FILE: drivers/video/sm501fb.c:466:
+	reg |= ((var->xres * var->bits_per_pixel)/8) << 16;
 	                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#561: FILE: drivers/video/sm501fb.c:477:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#566: FILE: drivers/video/sm501fb.c:482:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#570: FILE: drivers/video/sm501fb.c:486:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#586: FILE: drivers/video/sm501fb.c:502:
+ * pan the CRT display output within an virtual framebuffer
+*/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#600: FILE: drivers/video/sm501fb.c:516:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#604: FILE: drivers/video/sm501fb.c:520:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#616: FILE: drivers/video/sm501fb.c:532:
+ * pan the panel display output within an virtual framebuffer
+*/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#638: FILE: drivers/video/sm501fb.c:554:
+ * Set the CRT video mode from the fb_info structure
+*/

ERROR:SPACING: space required before the open parenthesis '('
#690: FILE: drivers/video/sm501fb.c:606:
+	switch(var->bits_per_pixel) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#705: FILE: drivers/video/sm501fb.c:621:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#779: FILE: drivers/video/sm501fb.c:695:
+ * Set the panel video mode from the fb_info structure
+*/

ERROR:SPACING: space required before the open parenthesis '('
#818: FILE: drivers/video/sm501fb.c:734:
+	switch(var->bits_per_pixel) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#833: FILE: drivers/video/sm501fb.c:749:
+		BUG();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#846: FILE: drivers/video/sm501fb.c:762:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#866: FILE: drivers/video/sm501fb.c:782:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#872: FILE: drivers/video/sm501fb.c:788:
+ * from pxafb.c
+*/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#885: FILE: drivers/video/sm501fb.c:801:
+ * set the colour mapping for modes that support palettised data
+*/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#887: FILE: drivers/video/sm501fb.c:803:
+static int sm501fb_setcolreg(unsigned regno,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#888: FILE: drivers/video/sm501fb.c:804:
+			     unsigned red, unsigned green, unsigned blue,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#888: FILE: drivers/video/sm501fb.c:804:
+			     unsigned red, unsigned green, unsigned blue,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#888: FILE: drivers/video/sm501fb.c:804:
+			     unsigned red, unsigned green, unsigned blue,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#889: FILE: drivers/video/sm501fb.c:805:
+			     unsigned transp, struct fb_info *info)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#893: FILE: drivers/video/sm501fb.c:809:
+^Ivoid __iomem *base = fbi->regs; $

WARNING:TYPO_SPELLING: 'pseuo-palette' may be misspelled - perhaps 'pseudo-palette'?
#903: FILE: drivers/video/sm501fb.c:819:
+		/* true-colour, use pseuo-palette */
 		                    ^^^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#937: FILE: drivers/video/sm501fb.c:853:
+ * Blank or un-blank the panel interface
+*/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#968: FILE: drivers/video/sm501fb.c:884:
+ * Blank or un-blank the crt interface
+*/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#979: FILE: drivers/video/sm501fb.c:895:
+^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1000: FILE: drivers/video/sm501fb.c:916:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1011: FILE: drivers/video/sm501fb.c:927:
+ * set or change the hardware cursor parameters
+*/

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1051: FILE: drivers/video/sm501fb.c:967:
+		if (x >= 2048 || y >= 2048 )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1071: FILE: drivers/video/sm501fb.c:987:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1072: FILE: drivers/video/sm501fb.c:988:
+^I^Ifg = ((info->cmap.red[fg_col] & 0xF8) << 8) |^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1075: FILE: drivers/video/sm501fb.c:991:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1077: FILE: drivers/video/sm501fb.c:993:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1081: FILE: drivers/video/sm501fb.c:997:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1087: FILE: drivers/video/sm501fb.c:1003:
+		 * cursor */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1099: FILE: drivers/video/sm501fb.c:1015:
+^I^Ifor (op = 0; op < (64*64*2)/8; op+=4) $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1099: FILE: drivers/video/sm501fb.c:1015:
+		for (op = 0; op < (64*64*2)/8; op+=4) 
 		                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1099: FILE: drivers/video/sm501fb.c:1015:
+		for (op = 0; op < (64*64*2)/8; op+=4) 
 		                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1099: FILE: drivers/video/sm501fb.c:1015:
+		for (op = 0; op < (64*64*2)/8; op+=4) 
 		                           ^

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#1099: FILE: drivers/video/sm501fb.c:1015:
+		for (op = 0; op < (64*64*2)/8; op+=4) 
 		                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1120: FILE: drivers/video/sm501fb.c:1036:
+			dst += (64*2)/8;
 			          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1120: FILE: drivers/video/sm501fb.c:1036:
+			dst += (64*2)/8;
 			             ^

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1131: FILE: drivers/video/sm501fb.c:1047:
+ * device attribute code to show where the crt output is sourced from
+*/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1148: FILE: drivers/video/sm501fb.c:1064:
+ * device attribute code to set where the crt output is sourced from
+*/

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions '0666' used
#1186: FILE: drivers/video/sm501fb.c:1102:
+}

The permissions used in DEVICE_ATTR are unusual.
Typically only three permissions are used - 0644 (RW), 0444 (RO)
and 0200 (WO).

See: https://www.kernel.org/doc/html/latest/filesystems/sysfs.html#attributes

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#1189: FILE: drivers/video/sm501fb.c:1105:
+static DEVICE_ATTR(crt_src, 0666, sm501fb_crtsrc_show, sm501fb_crtsrc_store);

Exporting world writable sysfs/debugfs files is usually a bad thing.
When done arbitrarily they can introduce serious security bugs.
In the past, some of the debugfs vulnerabilities would seemingly allow
any local user to write arbitrary values into device registers - a
situation from which little good can be expected to emerge.

See: https://lore.kernel.org/linux-arm-kernel/cover.1296818921.git.segoon@openwall.com/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1194: FILE: drivers/video/sm501fb.c:1110:
+ * show the primary sm501 registers
+*/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1195: FILE: drivers/video/sm501fb.c:1111:
+static int sm501fb_show_regs(struct sm501fb_info *info, char *ptr, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1210: FILE: drivers/video/sm501fb.c:1126:
+ * show the crt control and cursor registers $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1211: FILE: drivers/video/sm501fb.c:1127:
+ * show the crt control and cursor registers 
+*/

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'sm501fb_debug_show_crt' to 'fbregs_crt_show'
#1223: FILE: drivers/video/sm501fb.c:1139:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1230: FILE: drivers/video/sm501fb.c:1146:
+ * show the panel control and cursor registers
+*/

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'sm501fb_debug_show_pnl' to 'fbregs_pnl_show'
#1242: FILE: drivers/video/sm501fb.c:1158:
+}

WARNING:CONST_STRUCT: struct fb_ops should normally be const
#1248: FILE: drivers/video/sm501fb.c:1164:
+static struct fb_ops sm501fb_ops_crt = {

WARNING:CONST_STRUCT: struct fb_ops should normally be const
#1261: FILE: drivers/video/sm501fb.c:1177:
+static struct fb_ops sm501fb_ops_pnl = {

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1277: FILE: drivers/video/sm501fb.c:1193:
+ * creates and initialises an sm501fb_info structure
+*/

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*info)...) over kzalloc(sizeof(struct sm501fb_info)...)
#1285: FILE: drivers/video/sm501fb.c:1201:
+	info = kzalloc(sizeof(struct sm501fb_info), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1309: FILE: drivers/video/sm501fb.c:1225:
+ * initialise hw cursor parameters $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1310: FILE: drivers/video/sm501fb.c:1226:
+ * initialise hw cursor parameters 
+*/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1339: FILE: drivers/video/sm501fb.c:1255:
+ * fills the par structure claiming resources and remapping etc.
+*/

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1348: FILE: drivers/video/sm501fb.c:1264:
+	info->dev = dev = &pdev->dev;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1351: FILE: drivers/video/sm501fb.c:1267:
+	info->irq = ret = platform_get_irq(pdev, 0);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!res"
#1359: FILE: drivers/video/sm501fb.c:1275:
+	if (res == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info->regs_res"
#1369: FILE: drivers/video/sm501fb.c:1285:
+	if (info->regs_res == NULL) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1375: FILE: drivers/video/sm501fb.c:1291:
+	info->regs = ioremap(res->start, (res->end - res->start)+1);
 	                                                        ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info->regs"
#1376: FILE: drivers/video/sm501fb.c:1292:
+	if (info->regs == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!res"
#1384: FILE: drivers/video/sm501fb.c:1300:
+	if (res == NULL) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1391: FILE: drivers/video/sm501fb.c:1307:
+					     (res->end - res->start)+1,
 					                            ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info->fbmem_res"
#1393: FILE: drivers/video/sm501fb.c:1309:
+	if (info->fbmem_res == NULL) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1399: FILE: drivers/video/sm501fb.c:1315:
+	info->fbmem = ioremap(res->start, (res->end - res->start)+1);
 	                                                         ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info->fbmem"
#1400: FILE: drivers/video/sm501fb.c:1316:
+	if (info->fbmem == NULL) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1405: FILE: drivers/video/sm501fb.c:1321:
+	info->fbmem_len = (res->end - res->start)+1;
 	                                         ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1486: FILE: drivers/video/sm501fb.c:1402:
+		BUG();

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1500: FILE: drivers/video/sm501fb.c:1416:
+	strlcpy(fb->fix.id, fbname, sizeof(fb->fix.id));

WARNING:CONST_STRUCT: struct fb_ops should normally be const
#1504: FILE: drivers/video/sm501fb.c:1420:
+	       sizeof(struct fb_ops));

WARNING:TYPO_SPELLING: 'dependant' may be misspelled - perhaps 'dependent'?
#1506: FILE: drivers/video/sm501fb.c:1422:
+	/* update ops dependant on what we've been passed */
 	              ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1546: FILE: drivers/video/sm501fb.c:1462:
+^I^I^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (fb->fbops->fb_check_var)
#1559: FILE: drivers/video/sm501fb.c:1475:
+	ret = (fb->fbops->fb_check_var)(&fb->var, fb);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (fb->fbops->fb_set_par)
#1564: FILE: drivers/video/sm501fb.c:1480:
+	(fb->fbops->fb_set_par)(fb);

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#1592: FILE: drivers/video/sm501fb.c:1508:
+static char driver_name_crt[] = "sm501fb-crt";

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#1593: FILE: drivers/video/sm501fb.c:1509:
+static char driver_name_pnl[] = "sm501fb-panel";

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fbinfo_crt"
#1606: FILE: drivers/video/sm501fb.c:1522:
+	if (fbinfo_crt == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fbinfo_pnl"
#1612: FILE: drivers/video/sm501fb.c:1528:
+	if (fbinfo_pnl == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info"
#1619: FILE: drivers/video/sm501fb.c:1535:
+	if (info == NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1627: FILE: drivers/video/sm501fb.c:1543:
+		struct sm501_platdata *pd = dev->parent->platform_data;
+		info->pdata = pd->fb;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1629: FILE: drivers/video/sm501fb.c:1545:
+^I^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info->pdata"
#1630: FILE: drivers/video/sm501fb.c:1546:
+	if (info->pdata == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1677: FILE: drivers/video/sm501fb.c:1593:
+	dev_info(dev, "fb%d: %s frame buffer device\n",
+	       fbinfo_pnl->node, fbinfo_pnl->fix.id);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1682: FILE: drivers/video/sm501fb.c:1598:
+^Iif (ret) $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1723: FILE: drivers/video/sm501fb.c:1639:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!par->store_fb"
#1763: FILE: drivers/video/sm501fb.c:1679:
+	if (par->store_fb == NULL) {

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1764: FILE: drivers/video/sm501fb.c:1680:
+	if (par->store_fb == NULL) {
+		dev_err(info->dev, "no memory to store screen\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1767: FILE: drivers/video/sm501fb.c:1683:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!par->store_cursor"
#1769: FILE: drivers/video/sm501fb.c:1685:
+	if (par->store_cursor == NULL) {

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1770: FILE: drivers/video/sm501fb.c:1686:
+	if (par->store_cursor == NULL) {
+		dev_err(info->dev, "no memory to store cursor\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1773: FILE: drivers/video/sm501fb.c:1689:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (par->ops.fb_blank)
#1778: FILE: drivers/video/sm501fb.c:1694:
+	(par->ops.fb_blank)(FB_BLANK_POWERDOWN, fbi);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1784: FILE: drivers/video/sm501fb.c:1700:
+^I^I      $

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1787: FILE: drivers/video/sm501fb.c:1703:
+
+}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (par->ops.fb_set_par)
#1800: FILE: drivers/video/sm501fb.c:1716:
+	(par->ops.fb_set_par)(fbi);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1811: FILE: drivers/video/sm501fb.c:1727:
+
+

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1855: FILE: drivers/video/sm501fb.c:1771:
+int __devinit sm501fb_init(void)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000466767.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 34 errors, 62 warnings, 38 checks, 1817 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000466767.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
