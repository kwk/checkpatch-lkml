WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
http://software.intel.com/en-us/articles/carry-less-multiplication-and-its-usage-for-computing-the-gcm-mode/

WARNING:TYPO_SPELLING: 'defered' may be misspelled - perhaps 'deferred'?
#41: 
IRQ context will be defered to the cryptd kernel thread.
                    ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#75: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#80: FILE: arch/x86/crypto/ghash-clmulni-intel_asm.S:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#204: FILE: arch/x86/crypto/ghash-clmulni-intel_glue.c:1:
+/*

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#229: FILE: arch/x86/crypto/ghash-clmulni-intel_glue.c:26:
+void clmul_gf128mul_lle(be128 *r, const be128 *b);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#232: FILE: arch/x86/crypto/ghash-clmulni-intel_glue.c:29:
+struct ghash_async_ctx
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#270: FILE: arch/x86/crypto/ghash-clmulni-intel_glue.c:67:
+static int ghash_update(struct shash_desc *desc,
+			 const u8 *src, unsigned int srclen)

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#368: FILE: arch/x86/crypto/ghash-clmulni-intel_glue.c:165:
+		return crypto_ahash_init(cryptd_req);
+	} else {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#390: FILE: arch/x86/crypto/ghash-clmulni-intel_glue.c:187:
+		return crypto_ahash_update(cryptd_req);
+	} else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#392: FILE: arch/x86/crypto/ghash-clmulni-intel_glue.c:189:
+		struct shash_desc *desc = cryptd_shash_desc(cryptd_req);
+		return shash_ahash_update(req, desc);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#408: FILE: arch/x86/crypto/ghash-clmulni-intel_glue.c:205:
+		return crypto_ahash_final(cryptd_req);
+	} else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#410: FILE: arch/x86/crypto/ghash-clmulni-intel_glue.c:207:
+		struct shash_desc *desc = cryptd_shash_desc(cryptd_req);
+		return crypto_shash_final(desc, req->result);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#425: FILE: arch/x86/crypto/ghash-clmulni-intel_glue.c:222:
+		return crypto_ahash_digest(cryptd_req);
+	} else {

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#491: FILE: arch/x86/crypto/ghash-clmulni-intel_glue.c:288:
+			.cra_list		= LIST_HEAD_INIT(ghash_async_alg.halg.base.cra_list),

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#503: FILE: arch/x86/crypto/ghash-clmulni-intel_glue.c:300:
+		printk(KERN_INFO "Intel PCLMULQDQ-NI instructions are not"

WARNING:SPLIT_STRING: quoted string split across lines
#504: FILE: arch/x86/crypto/ghash-clmulni-intel_glue.c:301:
+		printk(KERN_INFO "Intel PCLMULQDQ-NI instructions are not"
+		       " detected.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#508: FILE: arch/x86/crypto/ghash-clmulni-intel_glue.c:305:
+	if ((err = crypto_register_shash(&ghash_alg)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#510: FILE: arch/x86/crypto/ghash-clmulni-intel_glue.c:307:
+	if ((err = crypto_register_ahash(&ghash_async_alg)))

WARNING:TYPO_SPELLING: 'acclerated' may be misspelled - perhaps 'accelerated'?
#531: FILE: arch/x86/crypto/ghash-clmulni-intel_glue.c:328:
+MODULE_DESCRIPTION("GHASH Message Digest Algorithm, acclerated by PCLMULQDQ-NI");
                                                     ^^^^^^^^^^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#553: FILE: crypto/Kconfig:430:
+config CRYPTO_GHASH_CLMUL_NI_INTEL
+	tristate "GHASH digest algorithm (CLMUL-NI accelerated)"
+	select CRYPTO_SHASH
+	select CRYPTO_CRYPTD
+	help
+	  GHASH is message digest algorithm for GCM (Galois/Counter Mode).
+	  The implementation is accelerated by CLMUL-NI of Intel.
+
 comment "Ciphers"
 

Kconfig symbols should have a help text which fully describes
it.

WARNING:LINE_SPACING: Missing a blank line after declarations
#575: FILE: crypto/cryptd.c:717:
+	struct cryptd_hash_request_ctx *rctx = ahash_request_ctx(req);
+	return &rctx->desc;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000089553.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 18 warnings, 1 checks, 500 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000089553.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
