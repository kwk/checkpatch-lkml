WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#102: FILE: arch/x86/kernel/ftrace.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#129: FILE: arch/x86/kernel/ftrace.c:28:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#135: FILE: arch/x86/kernel/ftrace.c:34:
+} __attribute__((packed));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: arch/x86/kernel/ftrace.c:37:
+  ((PAGE_SIZE - sizeof(struct ftrace_page)) / sizeof(struct ftrace_record))$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#150: FILE: arch/x86/kernel/ftrace.c:49:
+	} __attribute__((packed));

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#196: FILE: arch/x86/kernel/ftrace.c:95:
+	asm volatile (

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#231: FILE: arch/x86/kernel/ftrace.c:130:
+^Isave.offset ^I= ftrace_calc_offset(ip);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#255: FILE: arch/x86/kernel/ftrace.c:154:
+			union ftrace_code_union calc;
+			rec = &pg->records[i];

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#277: FILE: arch/x86/kernel/ftrace.c:176:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#323: FILE: arch/x86/kernel/ftrace.c:222:
+	pg = ftrace_pages = ftrace_pages_start;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#349: FILE: include/linux/ftrace.h:37:
+# define FTRACE_HASHSIZE	(1<<FTRACE_HASHBITS)
                         	  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#349: FILE: include/linux/ftrace.h:37:
+# define FTRACE_HASHSIZE	(1<<FTRACE_HASHBITS)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#359: FILE: include/linux/ftrace.h:47:
+extern int ftrace_shutdown_arch_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#360: FILE: include/linux/ftrace.h:48:
+extern void ftrace_code_disable(struct dyn_ftrace *rec);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#361: FILE: include/linux/ftrace.h:49:
+extern void ftrace_startup_code(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#362: FILE: include/linux/ftrace.h:50:
+extern void ftrace_shutdown_code(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#363: FILE: include/linux/ftrace.h:51:
+extern void ftrace_shutdown_replenish(void);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#612: FILE: kernel/trace/ftrace.c:235:
+static struct ftrace_ops ftrace_shutdown_ops __read_mostly =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#616: FILE: kernel/trace/ftrace.c:239:
+
+

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#627: FILE: kernel/trace/ftrace.c:250:
+	stop_machine_run(__ftrace_modify_code, ftrace_startup_code, NR_CPUS);

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#632: FILE: kernel/trace/ftrace.c:255:
+	stop_machine_run(__ftrace_modify_code, ftrace_shutdown_code, NR_CPUS);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#694: FILE: kernel/trace/ftrace.c:317:
+
+	}

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#707: FILE: kernel/trace/ftrace.c:330:
+	stop_machine_run(__ftrace_update_code, NULL, NR_CPUS);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#717: FILE: kernel/trace/ftrace.c:340:
+	while (!kthread_should_stop()) {
+

WARNING:SPLIT_STRING: quoted string split across lines
#729: FILE: kernel/trace/ftrace.c:352:
+				pr_info("hm, dftrace overflow: %lu change%s"
+					 " (%lu total) in %lu usec%s\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'unresgister' may be misspelled - perhaps 'unregister'?
#797: FILE: kernel/trace/ftrace.c:415:
+ * unregister_ftrace_function - unresgister a function for profiling.
                                 ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000323896.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 12 warnings, 13 checks, 699 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000323896.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
