ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#69: FILE: fs/proc/inode.c:436:
+	struct proc_dir_entry * root_dentry;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!root_dentry"
#74: FILE: fs/proc/inode.c:441:
+		if (root_dentry == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#100: FILE: fs/proc/inode.c:467:
+	printk("proc_read_super: get root inode failed\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#112: FILE: fs/proc/internal.h:75:
+struct proc_dir_entry * create_proc_root(void);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ns"
#197: FILE: fs/proc/root.c:96:
+	if (ns != NULL)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#225: FILE: fs/proc/root.c:218:
+struct proc_dir_entry * create_proc_root(void)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*de)...) over kzalloc(sizeof(struct proc_dir_entry)...)
#229: FILE: fs/proc/root.c:222:
+	de = kzalloc(sizeof(struct proc_dir_entry), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "de"
#230: FILE: fs/proc/root.c:223:
+	if (de != NULL) {

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IXUGO' are not preferred. Consider using octal permissions '0555'.
#234: FILE: fs/proc/root.c:227:
+		de->mode = S_IFDIR | S_IRUGO | S_IXUGO;

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#298: FILE: include/linux/proc_fs.h:130:
+extern int proc_fill_super(struct super_block *, struct pid_namespace *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#298: FILE: include/linux/proc_fs.h:130:
+extern int proc_fill_super(struct super_block *, struct pid_namespace *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pid_namespace *' should also have an identifier name
#298: FILE: include/linux/proc_fs.h:130:
+extern int proc_fill_super(struct super_block *, struct pid_namespace *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#306: FILE: include/linux/proc_fs.h:147:
+extern int pid_ns_prepare_proc(struct pid_namespace *ns);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#307: FILE: include/linux/proc_fs.h:148:
+extern void pid_ns_release_proc(struct pid_namespace *ns);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000409902.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 4 warnings, 7 checks, 251 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000409902.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
