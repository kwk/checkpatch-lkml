WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#99: FILE: fs/signalfd.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#100: FILE: fs/signalfd.c:2:
+ *  fs/signalfd.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:TYPO_SPELLING: 'strcture' may be misspelled - perhaps 'structure'?
#105: FILE: fs/signalfd.c:7:
+ *      Changed ->read() to return a siginfo strcture instead of signal number.
                                              ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#125: FILE: fs/signalfd.c:27:
+#include <asm/uaccess.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#127: FILE: fs/signalfd.c:29:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#137: FILE: fs/signalfd.c:39:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#147: FILE: fs/signalfd.c:49:
+
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#154: FILE: fs/signalfd.c:56:
+};
+static struct kmem_cache *signalfd_ctx_cachep;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#156: FILE: fs/signalfd.c:58:
+
+

WARNING:TYPO_SPELLING: 'Remeber' may be misspelled - perhaps 'Remember'?
#172: FILE: fs/signalfd.c:74:
+		 * listeners about this. Remeber the ctx->sigmask is inverted,
 		                         ^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#186: FILE: fs/signalfd.c:88:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#273: FILE: fs/signalfd.c:175:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#284: FILE: fs/signalfd.c:186:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#291: FILE: fs/signalfd.c:193:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ctx->tsk->signal"
#312: FILE: fs/signalfd.c:214:
+	if (sighand != ctx->tsk->sighand || ctx->tsk->signal == NULL ||

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LINE_SPACING: Please don't use multiple blank lines
#322: FILE: fs/signalfd.c:224:
+
+

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#379: FILE: fs/signalfd.c:281:
+	return err ? -EFAULT: sizeof(*uinfo);
 	                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#382: FILE: fs/signalfd.c:284:
+
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#399: FILE: fs/signalfd.c:301:
+	if ((signo = dequeue_signal(ctx->tsk, &ctx->sigmask, &info)) == 0 &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#415: FILE: fs/signalfd.c:317:
+			if ((signo = dequeue_signal(ctx->tsk, &ctx->sigmask,

CHECK:SPACING: No space is necessary after a cast
#432: FILE: fs/signalfd.c:334:
+		res = signalfd_copyinfo((struct signalfd_siginfo __user *) buf,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#438: FILE: fs/signalfd.c:340:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#447: FILE: fs/signalfd.c:349:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#527: FILE: include/linux/signalfd.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#528: FILE: include/linux/signalfd.h:2:
+ *  include/linux/signalfd.h

CHECK:LINE_SPACING: Please don't use multiple blank lines
#537: FILE: include/linux/signalfd.h:11:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#557: FILE: include/linux/signalfd.h:31:
+
+

CHECK:SPACING: No space is necessary after a cast
#602: FILE: kernel/signal.c:714:
+	switch ((unsigned long) sinfo) {

CHECK:SPACING: No space is necessary after a cast
#603: FILE: kernel/signal.c:715:
+	case (unsigned long) SEND_SIG_NOINFO:

CHECK:SPACING: No space is necessary after a cast
#610: FILE: kernel/signal.c:722:
+	case (unsigned long) SEND_SIG_PRIV:

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#759: FILE: include/linux/signal.h:236:
+extern void signal_fill_info(struct siginfo *dinfo, int sig, struct siginfo *sinfo);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#760: FILE: include/linux/signal.h:237:
+extern int next_signal(struct sigpending *pending, sigset_t *mask);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000457900.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 7 warnings, 22 checks, 606 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000457900.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
