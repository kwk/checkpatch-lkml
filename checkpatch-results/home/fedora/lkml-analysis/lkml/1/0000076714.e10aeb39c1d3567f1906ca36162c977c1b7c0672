WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#141: FILE: drivers/scsi/pvscsi.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#157: FILE: drivers/scsi/pvscsi.c:17:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#158: FILE: drivers/scsi/pvscsi.c:18:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around adapter->dev->dev
#191: FILE: drivers/scsi/pvscsi.c:51:
+#define pvscsi_dev(adapter) (&(adapter->dev->dev))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'adapter' may be better as '(adapter)' to avoid precedence issues
#191: FILE: drivers/scsi/pvscsi.c:51:
+#define pvscsi_dev(adapter) (&(adapter->dev->dev))

CHECK:CAMELCASE: Avoid CamelCase: <PVSCSISGElement>
#194: FILE: drivers/scsi/pvscsi.c:54:
+	PVSCSISGElement sge[PVSCSI_MAX_NUM_SG_ENTRIES_PER_SEGMENT];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <dataPA>
#205: FILE: drivers/scsi/pvscsi.c:65:
+	dma_addr_t		dataPA;

CHECK:CAMELCASE: Avoid CamelCase: <sensePA>
#206: FILE: drivers/scsi/pvscsi.c:66:
+	dma_addr_t		sensePA;

CHECK:CAMELCASE: Avoid CamelCase: <sglPA>
#207: FILE: drivers/scsi/pvscsi.c:67:
+	dma_addr_t		sglPA;

CHECK:CAMELCASE: Avoid CamelCase: <mmioBase>
#211: FILE: drivers/scsi/pvscsi.c:71:
+	char			*mmioBase;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#218: FILE: drivers/scsi/pvscsi.c:78:
+	spinlock_t		hw_lock;

CHECK:CAMELCASE: Avoid CamelCase: <PVSCSIRingReqDesc>
#223: FILE: drivers/scsi/pvscsi.c:83:
+	PVSCSIRingReqDesc	*req_ring;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#224: FILE: drivers/scsi/pvscsi.c:84:
+	unsigned		req_pages;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#225: FILE: drivers/scsi/pvscsi.c:85:
+	unsigned		req_depth;

CHECK:CAMELCASE: Avoid CamelCase: <reqRingPA>
#226: FILE: drivers/scsi/pvscsi.c:86:
+	dma_addr_t		reqRingPA;

CHECK:CAMELCASE: Avoid CamelCase: <PVSCSIRingCmpDesc>
#228: FILE: drivers/scsi/pvscsi.c:88:
+	PVSCSIRingCmpDesc	*cmp_ring;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#229: FILE: drivers/scsi/pvscsi.c:89:
+	unsigned		cmp_pages;

CHECK:CAMELCASE: Avoid CamelCase: <cmpRingPA>
#230: FILE: drivers/scsi/pvscsi.c:90:
+	dma_addr_t		cmpRingPA;

CHECK:CAMELCASE: Avoid CamelCase: <PVSCSIRingMsgDesc>
#232: FILE: drivers/scsi/pvscsi.c:92:
+	PVSCSIRingMsgDesc	*msg_ring;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#233: FILE: drivers/scsi/pvscsi.c:93:
+	unsigned		msg_pages;

CHECK:CAMELCASE: Avoid CamelCase: <msgRingPA>
#234: FILE: drivers/scsi/pvscsi.c:94:
+	dma_addr_t		msgRingPA;

CHECK:CAMELCASE: Avoid CamelCase: <PVSCSIRingsState>
#236: FILE: drivers/scsi/pvscsi.c:96:
+	PVSCSIRingsState	*rings_state;

CHECK:CAMELCASE: Avoid CamelCase: <ringStatePA>
#237: FILE: drivers/scsi/pvscsi.c:97:
+	dma_addr_t		ringStatePA;

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#240: FILE: drivers/scsi/pvscsi.c:100:
+	struct Scsi_Host	*host;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#246: FILE: drivers/scsi/pvscsi.c:106:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#255: FILE: drivers/scsi/pvscsi.c:115:
+#define PVSCSI_RW (S_IRUSR | S_IWUSR)

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:BRACES: braces {} are not necessary for single statement blocks
#364: FILE: drivers/scsi/pvscsi.c:224:
+	if (adapter->use_msg) {
+		intr_bits |= PVSCSI_INTR_MSG_MASK;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#379: FILE: drivers/scsi/pvscsi.c:239:
+	unsigned i;

CHECK:CAMELCASE: Avoid CamelCase: <PVSCSICmdDescAbortCmd>
#391: FILE: drivers/scsi/pvscsi.c:251:
+	PVSCSICmdDescAbortCmd cmd = { 0 };

WARNING:TYPO_SPELLING: 'Reseting' may be misspelled - perhaps 'Resetting'?
#435: FILE: drivers/scsi/pvscsi.c:295:
+	dev_dbg(pvscsi_dev(adapter), "Reseting bus on %p\n", adapter);
 	                              ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:CAMELCASE: Avoid CamelCase: <PVSCSICmdDescResetDevice>
#442: FILE: drivers/scsi/pvscsi.c:302:
+	PVSCSICmdDescResetDevice cmd = { 0 };

WARNING:TYPO_SPELLING: 'Reseting' may be misspelled - perhaps 'Resetting'?
#444: FILE: drivers/scsi/pvscsi.c:304:
+	dev_dbg(pvscsi_dev(adapter), "Reseting device: target=%u\n", target);
 	                              ^^^^^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#453: FILE: drivers/scsi/pvscsi.c:313:
+			     struct scatterlist *sg, unsigned count)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#455: FILE: drivers/scsi/pvscsi.c:315:
+	unsigned i;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#458: FILE: drivers/scsi/pvscsi.c:318:
+	BUG_ON(count > PVSCSI_MAX_NUM_SG_ENTRIES_PER_SEGMENT);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#476: FILE: drivers/scsi/pvscsi.c:336:
+	unsigned count;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#477: FILE: drivers/scsi/pvscsi.c:337:
+	unsigned bufflen = scsi_bufflen(cmd);

CHECK:CAMELCASE: Avoid CamelCase: <dataLen>
#480: FILE: drivers/scsi/pvscsi.c:340:
+	e->dataLen = bufflen;

CHECK:CAMELCASE: Avoid CamelCase: <dataAddr>
#481: FILE: drivers/scsi/pvscsi.c:341:
+	e->dataAddr = 0;

CHECK:BRACES: braces {} should be used on all arms of this statement
#490: FILE: drivers/scsi/pvscsi.c:350:
+		if (segs > 1) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#497: FILE: drivers/scsi/pvscsi.c:357:
+		} else

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#514: FILE: drivers/scsi/pvscsi.c:374:
+	unsigned bufflen;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#520: FILE: drivers/scsi/pvscsi.c:380:
+		unsigned count = scsi_sg_count(cmd);

CHECK:BRACES: Unbalanced braces around else statement
#530: FILE: drivers/scsi/pvscsi.c:390:
+		} else

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#539: FILE: drivers/scsi/pvscsi.c:399:
+static int __devinit pvscsi_allocate_rings(struct pvscsi_adapter *adapter)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#564: FILE: drivers/scsi/pvscsi.c:424:
+	BUG_ON(adapter->ringStatePA & ~PAGE_MASK);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#565: FILE: drivers/scsi/pvscsi.c:425:
+	BUG_ON(adapter->reqRingPA   & ~PAGE_MASK);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#566: FILE: drivers/scsi/pvscsi.c:426:
+	BUG_ON(adapter->cmpRingPA   & ~PAGE_MASK);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#578: FILE: drivers/scsi/pvscsi.c:438:
+	BUG_ON(adapter->msgRingPA & ~PAGE_MASK);

CHECK:CAMELCASE: Avoid CamelCase: <PVSCSICmdDescSetupRings>
#585: FILE: drivers/scsi/pvscsi.c:445:
+	PVSCSICmdDescSetupRings cmd = { 0 };

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#587: FILE: drivers/scsi/pvscsi.c:447:
+	unsigned i;

CHECK:CAMELCASE: Avoid CamelCase: <ringsStatePPN>
#589: FILE: drivers/scsi/pvscsi.c:449:
+	cmd.ringsStatePPN   = adapter->ringStatePA >> PAGE_SHIFT;

CHECK:CAMELCASE: Avoid CamelCase: <reqRingNumPages>
#590: FILE: drivers/scsi/pvscsi.c:450:
+	cmd.reqRingNumPages = adapter->req_pages;

CHECK:CAMELCASE: Avoid CamelCase: <cmpRingNumPages>
#591: FILE: drivers/scsi/pvscsi.c:451:
+	cmd.cmpRingNumPages = adapter->cmp_pages;

CHECK:CAMELCASE: Avoid CamelCase: <reqRingPPNs>
#595: FILE: drivers/scsi/pvscsi.c:455:
+		cmd.reqRingPPNs[i] = base >> PAGE_SHIFT;

CHECK:CAMELCASE: Avoid CamelCase: <cmpRingPPNs>
#601: FILE: drivers/scsi/pvscsi.c:461:
+		cmd.cmpRingPPNs[i] = base >> PAGE_SHIFT;

CHECK:CAMELCASE: Avoid CamelCase: <PVSCSICmdDescSetupMsgRing>
#613: FILE: drivers/scsi/pvscsi.c:473:
+		PVSCSICmdDescSetupMsgRing cmd_msg = { 0 };

CHECK:CAMELCASE: Avoid CamelCase: <numPages>
#615: FILE: drivers/scsi/pvscsi.c:475:
+		cmd_msg.numPages = adapter->msg_pages;

CHECK:CAMELCASE: Avoid CamelCase: <ringPPNs>
#619: FILE: drivers/scsi/pvscsi.c:479:
+			cmd_msg.ringPPNs[i] = base >> PAGE_SHIFT;

CHECK:CAMELCASE: Avoid CamelCase: <hostStatus>
#638: FILE: drivers/scsi/pvscsi.c:498:
+	u32 btstat = e->hostStatus;

CHECK:CAMELCASE: Avoid CamelCase: <scsiStatus>
#639: FILE: drivers/scsi/pvscsi.c:499:
+	u32 sdstat = e->scsiStatus;

CHECK:BRACES: Unbalanced braces around else statement
#654: FILE: drivers/scsi/pvscsi.c:514:
+	} else

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#679: FILE: drivers/scsi/pvscsi.c:539:
+			/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

CHECK:CAMELCASE: Avoid CamelCase: <cmpNumEntriesLog2>
#731: FILE: drivers/scsi/pvscsi.c:591:
+	u32 cmp_entries = s->cmpNumEntriesLog2;

CHECK:CAMELCASE: Avoid CamelCase: <cmpConsIdx>
#733: FILE: drivers/scsi/pvscsi.c:593:
+	while (s->cmpConsIdx != s->cmpProdIdx) {

CHECK:CAMELCASE: Avoid CamelCase: <cmpProdIdx>
#733: FILE: drivers/scsi/pvscsi.c:593:
+	while (s->cmpConsIdx != s->cmpProdIdx) {

CHECK:CAMELCASE: Avoid CamelCase: <reqNumEntriesLog2>
#768: FILE: drivers/scsi/pvscsi.c:628:
+	req_entries = s->reqNumEntriesLog2;

CHECK:CAMELCASE: Avoid CamelCase: <reqProdIdx>
#778: FILE: drivers/scsi/pvscsi.c:638:
+	if (s->reqProdIdx - s->cmpConsIdx >= 1 << req_entries) {

CHECK:CAMELCASE: Avoid CamelCase: <senseAddr>
#796: FILE: drivers/scsi/pvscsi.c:656:
+		e->senseAddr = ctx->sensePA;

CHECK:CAMELCASE: Avoid CamelCase: <senseLen>
#797: FILE: drivers/scsi/pvscsi.c:657:
+		e->senseLen = SCSI_SENSE_BUFFERSIZE;

CHECK:CAMELCASE: Avoid CamelCase: <cdbLen>
#802: FILE: drivers/scsi/pvscsi.c:662:
+	e->cdbLen   = cmd->cmd_len;

CHECK:CAMELCASE: Avoid CamelCase: <vcpuHint>
#803: FILE: drivers/scsi/pvscsi.c:663:
+	e->vcpuHint = smp_processor_id();

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#905: FILE: drivers/scsi/pvscsi.c:765:
+	unsigned i;

WARNING:LINE_SPACING: Missing a blank line after declarations
#910: FILE: drivers/scsi/pvscsi.c:770:
+		struct scsi_cmnd *cmd = ctx->cmd;
+		if (cmd) {

WARNING:SPLIT_STRING: quoted string split across lines
#1033: FILE: drivers/scsi/pvscsi.c:893:
+	sprintf(buf, "VMware PVSCSI storage adapter rev %d, req/cmp/msg rings: "
+		"%u/%u/%u pages, cmd_per_lun=%u", adapter->rev,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1064: FILE: drivers/scsi/pvscsi.c:924:
+	printk(KERN_INFO "pvscsi: msg type: 0x%x - MSG RING: %u/%u (%u) \n",

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1064: FILE: drivers/scsi/pvscsi.c:924:
+	printk(KERN_INFO "pvscsi: msg type: 0x%x - MSG RING: %u/%u (%u) \n",

CHECK:CAMELCASE: Avoid CamelCase: <msgProdIdx>
#1065: FILE: drivers/scsi/pvscsi.c:925:
+	       e->type, s->msgProdIdx, s->msgConsIdx, s->msgNumEntriesLog2);

CHECK:CAMELCASE: Avoid CamelCase: <msgConsIdx>
#1065: FILE: drivers/scsi/pvscsi.c:925:
+	       e->type, s->msgProdIdx, s->msgConsIdx, s->msgNumEntriesLog2);

CHECK:CAMELCASE: Avoid CamelCase: <msgNumEntriesLog2>
#1065: FILE: drivers/scsi/pvscsi.c:925:
+	       e->type, s->msgProdIdx, s->msgConsIdx, s->msgNumEntriesLog2);

CHECK:CAMELCASE: Avoid CamelCase: <PVSCSIMsgDescDevStatusChanged>
#1070: FILE: drivers/scsi/pvscsi.c:930:
+		PVSCSIMsgDescDevStatusChanged *desc;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1071: FILE: drivers/scsi/pvscsi.c:931:
+		PVSCSIMsgDescDevStatusChanged *desc;
+		desc = (PVSCSIMsgDescDevStatusChanged *)e;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1073: FILE: drivers/scsi/pvscsi.c:933:
+		printk(KERN_INFO "pvscsi: msg: device added at scsi%u:%u:%u\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1082: FILE: drivers/scsi/pvscsi.c:942:
+			printk(KERN_INFO "pvscsi: device already exists\n");

CHECK:BRACES: Unbalanced braces around else statement
#1084: FILE: drivers/scsi/pvscsi.c:944:
+		} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#1091: FILE: drivers/scsi/pvscsi.c:951:
+		PVSCSIMsgDescDevStatusChanged *desc;
+		desc = (PVSCSIMsgDescDevStatusChanged *)e;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1093: FILE: drivers/scsi/pvscsi.c:953:
+		printk(KERN_INFO "pvscsi: msg: device removed at scsi%u:%u:%u\n",

CHECK:BRACES: Unbalanced braces around else statement
#1104: FILE: drivers/scsi/pvscsi.c:964:
+		} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1105: FILE: drivers/scsi/pvscsi.c:965:
+			printk(KERN_INFO "pvscsi: failed to lookup scsi%u:%u:%u\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1162: FILE: drivers/scsi/pvscsi.c:1022:
+		printk(KERN_ERR "pvscsi: failed to create work queue\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#1175: FILE: drivers/scsi/pvscsi.c:1035:
+	if (adapter->use_msi || adapter->use_msix)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1177: FILE: drivers/scsi/pvscsi.c:1037:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1179: FILE: drivers/scsi/pvscsi.c:1039:
+		u32 val = pvscsi_read_intr_status(adapter);
+		handled = (val & PVSCSI_INTR_ALL_SUPPORTED) != 0;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1202: FILE: drivers/scsi/pvscsi.c:1062:
+	unsigned i;

WARNING:TYPO_SPELLING: 'deeep' may be misspelled - perhaps 'deep'?
#1281: FILE: drivers/scsi/pvscsi.c:1141:
+ * Dynamic allocation can fail, and we can't go deeep into the memory
                                                 ^^^^^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1289: FILE: drivers/scsi/pvscsi.c:1149:
+static int __devinit pvscsi_allocate_sg(struct pvscsi_adapter *adapter)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1300: FILE: drivers/scsi/pvscsi.c:1160:
+		BUG_ON(((unsigned long)ctx->sgl) & ~PAGE_MASK);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1313: FILE: drivers/scsi/pvscsi.c:1173:
+static int __devinit pvscsi_probe(struct pci_dev *pdev,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1328: FILE: drivers/scsi/pvscsi.c:1188:
+		printk(KERN_INFO "pvscsi: using 64bit dma\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1331: FILE: drivers/scsi/pvscsi.c:1191:
+		printk(KERN_INFO "pvscsi: using 32bit dma\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1333: FILE: drivers/scsi/pvscsi.c:1193:
+		printk(KERN_ERR "pvscsi: failed to set DMA mask\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1344: FILE: drivers/scsi/pvscsi.c:1204:
+		printk(KERN_ERR "pvscsi: failed to allocate host\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1362: FILE: drivers/scsi/pvscsi.c:1222:
+		printk(KERN_ERR "pvscsi: pci memory selection failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1377: FILE: drivers/scsi/pvscsi.c:1237:
+		printk(KERN_ERR "pvscsi: adapter has no suitable MMIO region\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1384: FILE: drivers/scsi/pvscsi.c:1244:
+		printk(KERN_ERR "pvscsi: can't iomap for BAR %d memsize %lu\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1398: FILE: drivers/scsi/pvscsi.c:1258:
+		printk(KERN_ERR "pvscsi: unable to allocate ring memory\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1411: FILE: drivers/scsi/pvscsi.c:1271:
+		printk(KERN_ERR "pvscsi: failed to allocate memory.\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1411: FILE: drivers/scsi/pvscsi.c:1271:
+	if (!adapter->cmd_map) {
+		printk(KERN_ERR "pvscsi: failed to allocate memory.\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#1419: FILE: drivers/scsi/pvscsi.c:1279:
+		struct pvscsi_ctx *ctx = adapter->cmd_map + i;
+		list_add(&ctx->list, &adapter->cmd_pool);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1424: FILE: drivers/scsi/pvscsi.c:1284:
+		printk(KERN_ERR "pvscsi: unable to allocate s/g table\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1430: FILE: drivers/scsi/pvscsi.c:1290:
+		printk(KERN_INFO "pvscsi: using MSI-X\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1433: FILE: drivers/scsi/pvscsi.c:1293:
+		printk(KERN_INFO "pvscsi: using MSI\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1437: FILE: drivers/scsi/pvscsi.c:1297:
+		printk(KERN_INFO "pvscsi: using INTx\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1444: FILE: drivers/scsi/pvscsi.c:1304:
+		printk(KERN_ERR "pvscsi: unable to request IRQ: %d\n", error);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1451: FILE: drivers/scsi/pvscsi.c:1311:
+		printk(KERN_ERR "pvscsi: scsi_add_host failed: %d\n", error);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1543: FILE: drivers/scsi/pvscsi.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1559: FILE: drivers/scsi/pvscsi.h:17:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1560: FILE: drivers/scsi/pvscsi.h:18:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1583: FILE: drivers/scsi/pvscsi.h:41:
+typedef enum {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1584: FILE: drivers/scsi/pvscsi.h:42:
+   BTSTAT_SUCCESS       = 0x00,  /* CCB complete normally with no errors */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1585: FILE: drivers/scsi/pvscsi.h:43:
+   BTSTAT_LINKED_COMMAND_COMPLETED           = 0x0a,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1586: FILE: drivers/scsi/pvscsi.h:44:
+   BTSTAT_LINKED_COMMAND_COMPLETED_WITH_FLAG = 0x0b,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1587: FILE: drivers/scsi/pvscsi.h:45:
+   BTSTAT_DATA_UNDERRUN = 0x0c,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1588: FILE: drivers/scsi/pvscsi.h:46:
+   BTSTAT_SELTIMEO      = 0x11,  /* SCSI selection timeout */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1589: FILE: drivers/scsi/pvscsi.h:47:
+   BTSTAT_DATARUN       = 0x12,  /* data overrun/underrun */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1590: FILE: drivers/scsi/pvscsi.h:48:
+   BTSTAT_BUSFREE       = 0x13,  /* unexpected bus free */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1591: FILE: drivers/scsi/pvscsi.h:49:
+   BTSTAT_INVPHASE      = 0x14,  /* invalid bus phase or sequence requested by target */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1592: FILE: drivers/scsi/pvscsi.h:50:
+   BTSTAT_LUNMISMATCH   = 0x17,  /* linked CCB has different LUN from first CCB */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1593: FILE: drivers/scsi/pvscsi.h:51:
+   BTSTAT_SENSFAILED    = 0x1b,  /* auto request sense failed */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1594: FILE: drivers/scsi/pvscsi.h:52:
+   BTSTAT_TAGREJECT     = 0x1c,  /* SCSI II tagged queueing message rejected by target */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1595: FILE: drivers/scsi/pvscsi.h:53:
+   BTSTAT_BADMSG        = 0x1d,  /* unsupported message received by the host adapter */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1596: FILE: drivers/scsi/pvscsi.h:54:
+   BTSTAT_HAHARDWARE    = 0x20,  /* host adapter hardware failed */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1597: FILE: drivers/scsi/pvscsi.h:55:
+   BTSTAT_NORESPONSE    = 0x21,  /* target did not respond to SCSI ATN, sent a SCSI RST */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1598: FILE: drivers/scsi/pvscsi.h:56:
+   BTSTAT_SENTRST       = 0x22,  /* host adapter asserted a SCSI RST */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1599: FILE: drivers/scsi/pvscsi.h:57:
+   BTSTAT_RECVRST       = 0x23,  /* other SCSI devices asserted a SCSI RST */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1600: FILE: drivers/scsi/pvscsi.h:58:
+   BTSTAT_DISCONNECT    = 0x24,  /* target device reconnected improperly (w/o tag) */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1601: FILE: drivers/scsi/pvscsi.h:59:
+   BTSTAT_BUSRESET      = 0x25,  /* host adapter issued BUS device reset */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1602: FILE: drivers/scsi/pvscsi.h:60:
+   BTSTAT_ABORTQUEUE    = 0x26,  /* abort queue generated */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1603: FILE: drivers/scsi/pvscsi.h:61:
+   BTSTAT_HASOFTWARE    = 0x27,  /* host adapter software error */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1604: FILE: drivers/scsi/pvscsi.h:62:
+   BTSTAT_HATIMEOUT     = 0x30,  /* host adapter hardware timeout error */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1605: FILE: drivers/scsi/pvscsi.h:63:
+   BTSTAT_SCSIPARITY    = 0x34,  /* SCSI parity error detected */$

CHECK:CAMELCASE: Avoid CamelCase: <HostBusAdapterStatus>
#1606: FILE: drivers/scsi/pvscsi.h:64:
+} HostBusAdapterStatus;

CHECK:CAMELCASE: Avoid CamelCase: <PVSCSIRegOffset>
#1614: FILE: drivers/scsi/pvscsi.h:72:
+enum PVSCSIRegOffset {

CHECK:CAMELCASE: Avoid CamelCase: <PVSCSICommands>
#1633: FILE: drivers/scsi/pvscsi.h:91:
+enum PVSCSICommands {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1653: FILE: drivers/scsi/pvscsi.h:111:
+typedef struct PVSCSICmdDescResetDevice {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1665: FILE: drivers/scsi/pvscsi.h:123:
+typedef struct PVSCSICmdDescAbortCmd {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1682: FILE: drivers/scsi/pvscsi.h:140:
+typedef struct PVSCSICmdDescSetupRings {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1711: FILE: drivers/scsi/pvscsi.h:169:
+typedef struct PVSCSICmdDescSetupMsgRing {

CHECK:CAMELCASE: Avoid CamelCase: <PVSCSIMsgType>
#1717: FILE: drivers/scsi/pvscsi.h:175:
+enum PVSCSIMsgType {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1732: FILE: drivers/scsi/pvscsi.h:190:
+typedef struct PVSCSIRingMsgDesc {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1737: FILE: drivers/scsi/pvscsi.h:195:
+typedef struct PVSCSIMsgDescDevStatusChanged {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1757: FILE: drivers/scsi/pvscsi.h:215:
+typedef struct PVSCSIRingsState {

CHECK:CAMELCASE: Avoid CamelCase: <reqConsIdx>
#1759: FILE: drivers/scsi/pvscsi.h:217:
+	u32	reqConsIdx;

CHECK:BIT_MACRO: Prefer using the BIT macro
#1809: FILE: drivers/scsi/pvscsi.h:267:
+#define PVSCSI_FLAG_CMD_WITH_SG_LIST        (1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#1810: FILE: drivers/scsi/pvscsi.h:268:
+#define PVSCSI_FLAG_CMD_OUT_OF_BAND_CDB     (1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1811: FILE: drivers/scsi/pvscsi.h:269:
+#define PVSCSI_FLAG_CMD_DIR_NONE            (1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1812: FILE: drivers/scsi/pvscsi.h:270:
+#define PVSCSI_FLAG_CMD_DIR_TOHOST          (1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1813: FILE: drivers/scsi/pvscsi.h:271:
+#define PVSCSI_FLAG_CMD_DIR_TODEVICE        (1 << 4)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1815: FILE: drivers/scsi/pvscsi.h:273:
+typedef struct PVSCSIRingReqDesc {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1848: FILE: drivers/scsi/pvscsi.h:306:
+typedef struct PVSCSISGElement {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1868: FILE: drivers/scsi/pvscsi.h:326:
+typedef struct PVSCSIRingCmpDesc {

CHECK:BIT_MACRO: Prefer using the BIT macro
#1881: FILE: drivers/scsi/pvscsi.h:339:
+#define PVSCSI_INTR_CMPL_0                 (1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1882: FILE: drivers/scsi/pvscsi.h:340:
+#define PVSCSI_INTR_CMPL_1                 (1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1885: FILE: drivers/scsi/pvscsi.h:343:
+#define PVSCSI_INTR_MSG_0                  (1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1886: FILE: drivers/scsi/pvscsi.h:344:
+#define PVSCSI_INTR_MSG_1                  (1 << 3)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000076714.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 93 warnings, 68 checks, 1825 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000076714.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
