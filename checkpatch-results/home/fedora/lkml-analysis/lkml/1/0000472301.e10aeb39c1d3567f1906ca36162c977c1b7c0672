WARNING:LINE_SPACING: Missing a blank line after declarations
#69: FILE: arch/x86_64/kernel/time.c:360:
+	u64 tsc = 0, mt;
+	switch (vxtime.mode) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#69: FILE: arch/x86_64/kernel/time.c:360:
+	switch (vxtime.mode) {
[...]
+		case VXTIME_TSC:
[...]
+                case VXTIME_TSCP:
[...]
+		case VXTIME_TSCS:
+		case VXTIME_TSCM:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#70: FILE: arch/x86_64/kernel/time.c:361:
+	switch (vxtime.mode) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#73: FILE: arch/x86_64/kernel/time.c:364:
+                        break;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: arch/x86_64/kernel/time.c:364:
+                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#75: FILE: arch/x86_64/kernel/time.c:366:
+                case VXTIME_TSCP:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: arch/x86_64/kernel/time.c:366:
+                case VXTIME_TSCP:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#76: FILE: arch/x86_64/kernel/time.c:367:
+                        rdtscpll(tsc, cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: arch/x86_64/kernel/time.c:367:
+                        rdtscpll(tsc, cpu);$

WARNING:TYPO_SPELLING: 'incosistent' may be misspelled - perhaps 'inconsistent'?
#131: FILE: arch/x86_64/kernel/time.c:411:
+	the mt may be completely wrong, calculated from incosistent data */
 	                                                ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#131: FILE: arch/x86_64/kernel/time.c:411:
+	/* this must be done outside the seqlock loop. Until the loop has finished,
+	the mt may be completely wrong, calculated from incosistent data */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#131: FILE: arch/x86_64/kernel/time.c:411:
+	the mt may be completely wrong, calculated from incosistent data */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#193: FILE: arch/x86_64/kernel/time.c:558:
+	/* any code that modifies the per-CPU variables used in guess_mt
+	   will always run on this CPU, so we don't need to lock the xtime_lock

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#196: FILE: arch/x86_64/kernel/time.c:561:
+	   the lock */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#297: FILE: arch/x86_64/kernel/time.c:647:
+	if (ntp_synced() && xtime.tv_sec > rtc_update &&
+		abs(xtime.tv_nsec - 500000000) <= tick_nsec / 2) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#387: FILE: arch/x86_64/kernel/vsyscall.c:76:
+static __always_inline void do_vgettimeofday(struct timeval * tv, u64 tsc, int cpu)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#430: FILE: arch/x86_64/kernel/vsyscall.c:127:
+		switch (__vxtime.mode) {
+			case VXTIME_TSC:
+			case VXTIME_TSCP:
[...]
+			default:

CHECK:BRACES: braces {} should be used on all arms of this statement
#436: FILE: arch/x86_64/kernel/vsyscall.c:133:
+					if (__vxtime.mode == VXTIME_TSC)
[...]
+					else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#438: FILE: arch/x86_64/kernel/vsyscall.c:135:
+					else {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000472301.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 9 warnings, 4 checks, 409 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000472301.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
