WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#34: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#39: FILE: fs/ceph/debugfs.c:1:
+#include "ceph_debug.h"

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!client->monc.monmap"
#76: FILE: fs/ceph/debugfs.c:38:
+	if (client->monc.monmap == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!client->mdsc.mdsmap"
#96: FILE: fs/ceph/debugfs.c:58:
+	if (client->mdsc.mdsmap == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#101: FILE: fs/ceph/debugfs.c:63:
+	seq_printf(s, "session_timeout %d\n",
+		       client->mdsc.mdsmap->m_session_timeout);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#103: FILE: fs/ceph/debugfs.c:65:
+	seq_printf(s, "session_autoclose %d\n",
+		       client->mdsc.mdsmap->m_session_autoclose);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#110: FILE: fs/ceph/debugfs.c:72:
+		seq_printf(s, "\tmds%d\t%s\t(%s)\n", i, pr_addr(&addr->in_addr),
+			       ceph_mds_state_name(state));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!client->osdc.osdmap"
#121: FILE: fs/ceph/debugfs.c:83:
+	if (client->osdc.osdmap == NULL)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#144: FILE: fs/ceph/debugfs.c:106:
+			   ((client->osdc.osdmap->osd_weight[i]*100) >> 16),
 			                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#160: FILE: fs/ceph/debugfs.c:122:
+		seq_printf(s, "have mdsmap %u\n", (unsigned)monc->have_mdsmap);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#162: FILE: fs/ceph/debugfs.c:124:
+		seq_printf(s, "have osdmap %u\n", (unsigned)monc->have_osdmap);

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#164: FILE: fs/ceph/debugfs.c:126:
+		seq_printf(s, "want next osdmap\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#197: FILE: fs/ceph/debugfs.c:159:
+			seq_printf(s, "\t(unsafe)");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#199: FILE: fs/ceph/debugfs.c:161:
+			seq_printf(s, "\t");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#224: FILE: fs/ceph/debugfs.c:186:
+			seq_printf(s, " #%llx/%.*s (%s)",
+			   ceph_ino(req->r_old_dentry->d_parent->d_inode),

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#238: FILE: fs/ceph/debugfs.c:200:
+		seq_printf(s, "\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#277: FILE: fs/ceph/debugfs.c:239:
+			seq_printf(s, "\t%u'%llu",
+			   (unsigned)le32_to_cpu(req->r_reassert_version.epoch),

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#277: FILE: fs/ceph/debugfs.c:239:
+			   (unsigned)le32_to_cpu(req->r_reassert_version.epoch),

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#280: FILE: fs/ceph/debugfs.c:242:
+			seq_printf(s, "\t");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#288: FILE: fs/ceph/debugfs.c:250:
+		seq_printf(s, "\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#318: FILE: fs/ceph/debugfs.c:280:
+		struct dentry *dentry = di->dentry;
+		seq_printf(s, "%p %p\t%.*s\n",

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#326: FILE: fs/ceph/debugfs.c:288:
+#define DEFINE_SHOW_FUNC(name) ^I^I^I^I^I^I\$

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#326: FILE: fs/ceph/debugfs.c:288:
+#define DEFINE_SHOW_FUNC(name) 						\
+static int name##_open(struct inode *inode, struct file *file)		\
+{									\
+	struct seq_file *sf;						\
+	int ret;							\
+									\
+	ret = single_open(file, name, NULL);				\
+	sf = file->private_data;					\
+	sf->private = inode->i_private;					\
+	return ret;							\
+}									\
+									\
+static const struct file_operations name##_fops = {			\
+	.open		= name##_open,					\
+	.read		= seq_read,					\
+	.llseek		= seq_lseek,					\
+	.release	= single_release,				\
+};

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#374: FILE: fs/ceph/debugfs.c:336:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#404: FILE: fs/ceph/debugfs.c:366:
+	client->monc.debugfs_file = debugfs_create_file("monc",
+						      0600,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#412: FILE: fs/ceph/debugfs.c:374:
+	client->mdsc.debugfs_file = debugfs_create_file("mdsc",
+						      0600,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#420: FILE: fs/ceph/debugfs.c:382:
+	client->osdc.debugfs_file = debugfs_create_file("osdc",
+						      0600,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#428: FILE: fs/ceph/debugfs.c:390:
+	client->debugfs_monmap = debugfs_create_file("monmap",
+					0600,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#436: FILE: fs/ceph/debugfs.c:398:
+	client->debugfs_mdsmap = debugfs_create_file("mdsmap",
+					0600,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#444: FILE: fs/ceph/debugfs.c:406:
+	client->debugfs_osdmap = debugfs_create_file("osdmap",
+					0600,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#452: FILE: fs/ceph/debugfs.c:414:
+	client->debugfs_dentry_lru = debugfs_create_file("dentry_lru",
+					0600,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#468: FILE: fs/ceph/debugfs.c:430:
+	client->debugfs_congestion_kb = debugfs_create_file("writeback_congestion_kb",
+						   0600,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000005068.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 14 warnings, 18 checks, 483 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000005068.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
