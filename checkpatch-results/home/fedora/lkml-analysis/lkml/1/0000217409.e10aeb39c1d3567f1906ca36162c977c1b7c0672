WARNING:MISPLACED_INIT: __initdata should be placed after nr_range
#50: FILE: arch/x86/kernel/cpu/mtrr/main.c:806:
+static int __initdata nr_range;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#100: FILE: arch/x86/kernel/cpu/mtrr/main.c:1227:
+		start_base = to_size_factor(start_base, &start_factor),
+		type = range_state[i].type;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#103: FILE: arch/x86/kernel/cpu/mtrr/main.c:1230:
+		printk(KERN_DEBUG "reg %d, base: %ld%cB, range: %ld%cB, type %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#104: FILE: arch/x86/kernel/cpu/mtrr/main.c:1231:
+		printk(KERN_DEBUG "reg %d, base: %ld%cB, range: %ld%cB, type %s\n",
+			i, start_base, start_factor,

WARNING:MISPLACED_INIT: __initdata should be placed after range_sums
#138: FILE: arch/x86/kernel/cpu/mtrr/main.c:1274:
+static unsigned long __initdata range_sums;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#151: FILE: arch/x86/kernel/cpu/mtrr/main.c:1287:
+	num_reg = x86_setup_var_mtrrs(range, nr_range,
+						chunk_size, gran_size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#156: FILE: arch/x86/kernel/cpu/mtrr/main.c:1292:
+	nr_range_new = x86_get_mtrr_mem_range(range_new, 0,
+				extra_remove_base, extra_remove_size);

CHECK:BRACES: Unbalanced braces around else statement
#166: FILE: arch/x86/kernel/cpu/mtrr/main.c:1302:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#172: FILE: arch/x86/kernel/cpu/mtrr/main.c:1308:
+		if (nr_range_new != nr_range ||
[...]
+				result[i].bad = 1;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#173: FILE: arch/x86/kernel/cpu/mtrr/main.c:1309:
+		if (nr_range_new != nr_range ||
+			memcmp(range, range_new, sizeof(range)))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#203: FILE: arch/x86/kernel/cpu/mtrr/main.c:1328:
+	printk(KERN_INFO "%sgran_size: %ld%c \tchunk_size: %ld%c \t",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#204: FILE: arch/x86/kernel/cpu/mtrr/main.c:1329:
+	printk(KERN_INFO "%sgran_size: %ld%c \tchunk_size: %ld%c \t",
+			result[i].bad ? "*BAD*" : " ",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#206: FILE: arch/x86/kernel/cpu/mtrr/main.c:1331:
+	printk(KERN_CONT "num_reg: %d  \tlose cover RAM: %s%ld%c\n",

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#206: FILE: arch/x86/kernel/cpu/mtrr/main.c:1331:
+	printk(KERN_CONT "num_reg: %d  \tlose cover RAM: %s%ld%c\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#207: FILE: arch/x86/kernel/cpu/mtrr/main.c:1332:
+	printk(KERN_CONT "num_reg: %d  \tlose cover RAM: %s%ld%c\n",
+			result[i].num_reg, result[i].bad ? "-" : "",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#240: FILE: arch/x86/kernel/cpu/mtrr/main.c:1365:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#241: FILE: arch/x86/kernel/cpu/mtrr/main.c:1366:
+static int __init mtrr_cleanup(unsigned address_bits)

CHECK:CAMELCASE: Avoid CamelCase: <MTRRdefType_MSR>
#252: FILE: arch/x86/kernel/cpu/mtrr/main.c:1377:
+	rdmsr(MTRRdefType_MSR, def, dummy);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#271: FILE: arch/x86/kernel/cpu/mtrr/main.c:1396:
+	printk(KERN_DEBUG "original variable MTRRs\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#385: FILE: arch/x86/kernel/cpu/mtrr/main.c:1447:
+			mtrr_calc_range_state(chunk_size, gran_size,
+				      extra_remove_base, extra_remove_size, i);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#388: FILE: arch/x86/kernel/cpu/mtrr/main.c:1450:
+				printk(KERN_INFO "\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#462: FILE: arch/x86/kernel/cpu/mtrr/main.c:1472:
+		printk(KERN_DEBUG "New variable MTRRs\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000217409.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 12 warnings, 10 checks, 429 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000217409.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
