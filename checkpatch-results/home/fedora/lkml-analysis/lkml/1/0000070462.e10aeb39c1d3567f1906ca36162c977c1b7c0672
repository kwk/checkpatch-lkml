WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#49: FILE: arch/m68knommu/Kconfig:536:
+config UBOOT
+	bool "Support for U-Boot command line parameters"
+	help
+	  If you say Y here kernel will try to collect command
+	  line parameters from the initial u-boot stack.
+	default n
+

Kconfig symbols should have a help text which fully describes
it.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#95: FILE: arch/m68knommu/kernel/setup.c:144:
+		parse_uboot_commandline(

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#96: FILE: arch/m68knommu/kernel/setup.c:145:
+			&command_line[(strlen(CONFIG_BOOTPARAM_STRING)+1)],
 			                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#97: FILE: arch/m68knommu/kernel/setup.c:146:
+			(sizeof(command_line) - (strlen(CONFIG_BOOTPARAM_STRING)+1)));
 			                                                        ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'initrd_start > 0'
#112: FILE: arch/m68knommu/kernel/setup.c:229:
+	if((initrd_start > 0) && (initrd_start < initrd_end) && (initrd_end < memory_end)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'initrd_start < initrd_end'
#112: FILE: arch/m68knommu/kernel/setup.c:229:
+	if((initrd_start > 0) && (initrd_start < initrd_end) && (initrd_end < memory_end)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'initrd_end < memory_end'
#112: FILE: arch/m68knommu/kernel/setup.c:229:
+	if((initrd_start > 0) && (initrd_start < initrd_end) && (initrd_end < memory_end)) {

ERROR:SPACING: space required before the open parenthesis '('
#112: FILE: arch/m68knommu/kernel/setup.c:229:
+	if((initrd_start > 0) && (initrd_start < initrd_end) && (initrd_end < memory_end)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#112: FILE: arch/m68knommu/kernel/setup.c:229:
+	if((initrd_start > 0) && (initrd_start < initrd_end) && (initrd_end < memory_end)) {
+		reserve_bootmem(initrd_start, initrd_end - initrd_start, BOOTMEM_DEFAULT);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#157: FILE: arch/m68knommu/kernel/setup.c:274:
+	extern unsigned long _init_sp;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#163: FILE: arch/m68knommu/kernel/setup.c:280:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#171: FILE: arch/m68knommu/kernel/setup.c:288:
+	if (uboot_cmd_start && uboot_cmd_end) {
+		strncpy(commandp, (const char *)uboot_cmd_start, size);
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#175: FILE: arch/m68knommu/kernel/setup.c:292:
+^Iif (uboot_initrd_start && uboot_initrd_end && $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'uboot_initrd_end > uboot_initrd_start'
#175: FILE: arch/m68knommu/kernel/setup.c:292:
+	if (uboot_initrd_start && uboot_initrd_end && 
+		(uboot_initrd_end > uboot_initrd_start)) {		

ERROR:TRAILING_WHITESPACE: trailing whitespace
#176: FILE: arch/m68knommu/kernel/setup.c:293:
+^I^I(uboot_initrd_end > uboot_initrd_start)) {^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#176: FILE: arch/m68knommu/kernel/setup.c:293:
+	if (uboot_initrd_start && uboot_initrd_end && 
+		(uboot_initrd_end > uboot_initrd_start)) {		

CHECK:CAMELCASE: Avoid CamelCase: <Root_RAM0>
#179: FILE: arch/m68knommu/kernel/setup.c:296:
+		ROOT_DEV = Root_RAM0;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_WHITESPACE: trailing whitespace
#180: FILE: arch/m68knommu/kernel/setup.c:297:
+^I^Iprintk("initrd at 0x%lx:0x%lx\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#180: FILE: arch/m68knommu/kernel/setup.c:297:
+		printk("initrd at 0x%lx:0x%lx\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#181: FILE: arch/m68knommu/kernel/setup.c:298:
+		printk("initrd at 0x%lx:0x%lx\n", 
+			initrd_start, initrd_end);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000070462.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 5 warnings, 11 checks, 164 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000070462.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
