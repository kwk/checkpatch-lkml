WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#96: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#101: FILE: drivers/memstick/host/jmb38x_ms.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#151: FILE: drivers/memstick/host/jmb38x_ms.c:51:
+	spinlock_t              lock;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#253: FILE: drivers/memstick/host/jmb38x_ms.c:153:
+	if (length
+	    && !(STATUS_FIFO_EMPTY & readl(host->addr + STATUS))) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#308: FILE: drivers/memstick/host/jmb38x_ms.c:208:
+	if (host->io_pos == 4
+	    && !(STATUS_FIFO_FULL & readl(host->addr + STATUS))) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#489: FILE: drivers/memstick/host/jmb38x_ms.c:389:
+		if (1 != pci_map_sg(host->chip->pdev, &host->req->sg, 1,

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#628: FILE: drivers/memstick/host/jmb38x_ms.c:528:
+						host->io_word[0]
+							= readl(host->addr

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#631: FILE: drivers/memstick/host/jmb38x_ms.c:531:
+						host->io_word[1]
+							= readl(host->addr

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#651: FILE: drivers/memstick/host/jmb38x_ms.c:551:
+	if (host->req
+	    && (((host->cmd_flags & CMD_READY)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#652: FILE: drivers/memstick/host/jmb38x_ms.c:552:
+	    && (((host->cmd_flags & CMD_READY)
+		 && (host->cmd_flags & FIFO_READY))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#653: FILE: drivers/memstick/host/jmb38x_ms.c:553:
+		 && (host->cmd_flags & FIFO_READY))
+		|| host->req->error))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#684: FILE: drivers/memstick/host/jmb38x_ms.c:584:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#845: FILE: drivers/memstick/host/jmb38x_ms.c:745:
+		if (256 != pci_resource_len(pdev, cnt))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#879: FILE: drivers/memstick/host/jmb38x_ms.c:779:
+	/*
+	msh->caps = MEMSTICK_CAP_AUTO_GET_INT | MEMSTICK_CAP_PAR4

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*jm)...) over kzalloc(sizeof(struct jmb38x_ms)...)
#938: FILE: drivers/memstick/host/jmb38x_ms.c:838:
+	jm = kzalloc(sizeof(struct jmb38x_ms)

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1014: FILE: drivers/memstick/host/jmb38x_ms.c:914:
+static struct pci_device_id jmb38x_ms_id_tbl [] = {

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000311692.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 6 warnings, 9 checks, 984 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000311692.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
