CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#51: FILE: mm/page_alloc.c:64:
+static struct page *alloc_vcompound(gfp_t, int,
+					struct zonelist *, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <__ClearPageVcompound>
#79: FILE: mm/page_alloc.c:285:
+	__ClearPageVcompound(page);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:LINE_SPACING: Please don't use multiple blank lines
#91: FILE: mm/page_alloc.c:297:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#100: FILE: mm/page_alloc.c:305:
+	if (PageVcompound(page))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#102: FILE: mm/page_alloc.c:307:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: mm/page_alloc.c:1316:
+static noinline struct page *alloc_vcompound(gfp_t gfp_mask, int order,
+		struct zonelist *zonelist, unsigned long alloc_flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#138: FILE: mm/page_alloc.c:1332:
+		page = get_page_from_freelist(gfp_mask, 0, zonelist,
+							alloc_flags);

CHECK:CAMELCASE: Avoid CamelCase: <__SetPageVcompound>
#143: FILE: mm/page_alloc.c:1337:
+		__SetPageVcompound(page);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#148: FILE: mm/page_alloc.c:1342:
+	vm = get_vm_area_node(nr_pages << PAGE_SHIFT, VM_MAP,
+			zone_to_nid(zonelist->zones[0]), gfp_mask);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#199: FILE: mm/page_alloc.c:1501:
+			page = alloc_vcompound(gfp_mask, order,
+					zonelist, alloc_flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#212: FILE: mm/page_alloc.c:1538:
+		page = alloc_vcompound(gfp_mask, order,
+					zonelist, alloc_flags);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#222: FILE: mm/page_alloc.c:1601:
 		else
+		if (unlikely(PageHead(page)))

CHECK:BRACES: braces {} should be used on all arms of this statement
#237: FILE: mm/page_alloc.c:1616:
+		if (unlikely(addr >= VMALLOC_START && addr < VMALLOC_END))
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#239: FILE: mm/page_alloc.c:1618:
+		else {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000373600.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 1 warnings, 13 checks, 210 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000373600.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
