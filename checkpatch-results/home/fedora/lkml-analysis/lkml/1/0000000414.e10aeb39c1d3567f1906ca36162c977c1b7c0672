WARNING:TYPO_SPELLING: 'whitspace' may be misspelled - perhaps 'whitespace'?
#21: 
Subject: [PATCH] staging: winbond: mds.c whitspace, indentation etc.
                                         ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:CAMELCASE: Avoid CamelCase: <Mds_initial>
#51: FILE: drivers/staging/winbond/mds.c:8:
+unsigned char Mds_initial(struct wbsoft_priv *adapter)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <sHwData>
#60: FILE: drivers/staging/winbond/mds.c:16:
+	return hal_get_tx_buffer(&adapter->sHwData, &pMds->pTxBuffer);

CHECK:CAMELCASE: Avoid CamelCase: <pMds>
#60: FILE: drivers/staging/winbond/mds.c:16:
+	return hal_get_tx_buffer(&adapter->sHwData, &pMds->pTxBuffer);

CHECK:CAMELCASE: Avoid CamelCase: <pTxBuffer>
#60: FILE: drivers/staging/winbond/mds.c:16:
+	return hal_get_tx_buffer(&adapter->sHwData, &pMds->pTxBuffer);

CHECK:CAMELCASE: Avoid CamelCase: <Mds_Destroy>
#65: FILE: drivers/staging/winbond/mds.c:19:
+void Mds_Destroy(struct wbsoft_priv *adapter)

CHECK:CAMELCASE: Avoid CamelCase: <Mds_DurationSet>
#70: FILE: drivers/staging/winbond/mds.c:23:
+static void Mds_DurationSet(struct wbsoft_priv *adapter,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#71: FILE: drivers/staging/winbond/mds.c:24:
+static void Mds_DurationSet(struct wbsoft_priv *adapter,
+		struct wb35_descriptor *pDes, u8 *buffer)

CHECK:CAMELCASE: Avoid CamelCase: <pDes>
#71: FILE: drivers/staging/winbond/mds.c:24:
+		struct wb35_descriptor *pDes, u8 *buffer)

CHECK:CAMELCASE: Avoid CamelCase: <Duration>
#77: FILE: drivers/staging/winbond/mds.c:28:
+	u16		Duration, NextBodyLen, OffsetSize;

CHECK:CAMELCASE: Avoid CamelCase: <NextBodyLen>
#77: FILE: drivers/staging/winbond/mds.c:28:
+	u16		Duration, NextBodyLen, OffsetSize;

CHECK:CAMELCASE: Avoid CamelCase: <OffsetSize>
#77: FILE: drivers/staging/winbond/mds.c:28:
+	u16		Duration, NextBodyLen, OffsetSize;

CHECK:CAMELCASE: Avoid CamelCase: <Rate>
#78: FILE: drivers/staging/winbond/mds.c:29:
+	u8		Rate, i;

CHECK:CAMELCASE: Avoid CamelCase: <BodyLen>
#83: FILE: drivers/staging/winbond/mds.c:32:
+	u16		BodyLen = 0;

CHECK:CAMELCASE: Avoid CamelCase: <boGroupAddr>
#84: FILE: drivers/staging/winbond/mds.c:33:
+	unsigned char	boGroupAddr = false;

CHECK:CAMELCASE: Avoid CamelCase: <pT01>
#94: FILE: drivers/staging/winbond/mds.c:42:
+	pT01 = (PT01_DESCRIPTOR)(buffer + 4);

CHECK:CAMELCASE: Avoid CamelCase: <pNextT00>
#95: FILE: drivers/staging/winbond/mds.c:43:
+	pNextT00 = (PT00_DESCRIPTOR)(buffer + OffsetSize);

CHECK:CAMELCASE: Avoid CamelCase: <pT00>
#132: FILE: drivers/staging/winbond/mds.c:59:
+		BodyLen = (u16)pT00->T00_frame_length; /*include 802.11 header*/

CHECK:BRACES: Unbalanced braces around else statement
#137: FILE: drivers/staging/winbond/mds.c:64:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#177: FILE: drivers/staging/winbond/mds.c:83:
+				((BodyLen * 8 + 22 + Rate * 4 - 1)/(Rate * 4))
 				                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#178: FILE: drivers/staging/winbond/mds.c:84:
+				* Tsym + ((112 + 22 + 95)/96) * Tsym;
 				                         ^

CHECK:CAMELCASE: Avoid CamelCase: <Tsym>
#178: FILE: drivers/staging/winbond/mds.c:84:
+				* Tsym + ((112 + 22 + 95)/96) * Tsym;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#227: FILE: drivers/staging/winbond/mds.c:109:
+			} else {
[...]
+			    if (pT01->T01_plcp_header_length) /*long preamble*/

WARNING:TABSTOP: Statements should start on a tabstop
#232: FILE: drivers/staging/winbond/mds.c:114:
+			    if (pT01->T01_plcp_header_length) /*long preamble*/

WARNING:TABSTOP: Statements should start on a tabstop
#234: FILE: drivers/staging/winbond/mds.c:116:
+			    else

CHECK:BRACES: braces {} should be used on all arms of this statement
#257: FILE: drivers/staging/winbond/mds.c:134:
+	if (boGroupAddr)
[...]
-	else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#263: FILE: drivers/staging/winbond/mds.c:136:
+	else {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#264: FILE: drivers/staging/winbond/mds.c:137:
+		for (i = pDes->FragmentCount-1; i > 0; i--) {
 		                            ^

CHECK:CAMELCASE: Avoid CamelCase: <FragmentCount>
#264: FILE: drivers/staging/winbond/mds.c:137:
+		for (i = pDes->FragmentCount-1; i > 0; i--) {

WARNING:LONG_LINE_COMMENT: line length of 117 exceeds 100 columns
#321: FILE: drivers/staging/winbond/mds.c:169:
+			((u16 *)buffer)[5] = cpu_to_le16(Duration);/*4 USHOR for skip 8B USB, 2USHORT=FC + Duration*/

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <Mds_BodyCopy>
#405: FILE: drivers/staging/winbond/mds.c:223:
+static u16 Mds_BodyCopy(struct wbsoft_priv *adapter,

CHECK:CAMELCASE: Avoid CamelCase: <TargetBuffer>
#406: FILE: drivers/staging/winbond/mds.c:224:
+			struct wb35_descriptor *pDes, u8 *TargetBuffer)

CHECK:CAMELCASE: Avoid CamelCase: <Size>
#419: FILE: drivers/staging/winbond/mds.c:231:
+	u16		Size = 0;

CHECK:CAMELCASE: Avoid CamelCase: <SizeLeft>
#420: FILE: drivers/staging/winbond/mds.c:232:
+	u16		SizeLeft, CopySize, CopyLeft, stmp;

CHECK:CAMELCASE: Avoid CamelCase: <CopySize>
#420: FILE: drivers/staging/winbond/mds.c:232:
+	u16		SizeLeft, CopySize, CopyLeft, stmp;

CHECK:CAMELCASE: Avoid CamelCase: <CopyLeft>
#420: FILE: drivers/staging/winbond/mds.c:232:
+	u16		SizeLeft, CopySize, CopyLeft, stmp;

CHECK:CAMELCASE: Avoid CamelCase: <MicWriteAddress>
#496: FILE: drivers/staging/winbond/mds.c:294:
+				pMds->MicWriteAddress[pMds->MicWriteIndex] =

CHECK:CAMELCASE: Avoid CamelCase: <MicWriteIndex>
#496: FILE: drivers/staging/winbond/mds.c:294:
+				pMds->MicWriteAddress[pMds->MicWriteIndex] =

CHECK:CAMELCASE: Avoid CamelCase: <MicAdd>
#497: FILE: drivers/staging/winbond/mds.c:295:
+							buffer - pMds->MicAdd;

CHECK:CAMELCASE: Avoid CamelCase: <MicWriteSize>
#498: FILE: drivers/staging/winbond/mds.c:296:
+				pMds->MicWriteSize[pMds->MicWriteIndex] =

CHECK:CAMELCASE: Avoid CamelCase: <Mds_HeaderCopy>
#546: FILE: drivers/staging/winbond/mds.c:334:
+static void Mds_HeaderCopy(struct wbsoft_priv *adapter,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#547: FILE: drivers/staging/winbond/mds.c:335:
+static void Mds_HeaderCopy(struct wbsoft_priv *adapter,
+				struct wb35_descriptor *pDes, u8 *TargetBuffer)

CHECK:CAMELCASE: Avoid CamelCase: <FragmentThreshold>
#559: FILE: drivers/staging/winbond/mds.c:343:
+	u16		FragmentThreshold = CURRENT_FRAGMENT_THRESHOLD;

CHECK:CAMELCASE: Avoid CamelCase: <Descriptor_ID>
#582: FILE: drivers/staging/winbond/mds.c:358:
+	pT00->T00_tx_packet_id = pDes->Descriptor_ID;/* Set packet ID */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#617: FILE: drivers/staging/winbond/mds.c:382:
+	stmp = *(u16 *)(TargetBuffer+30); /* 2n alignment address */
 	                            ^

CHECK:CAMELCASE: Avoid CamelCase: <TxRate>
#650: FILE: drivers/staging/winbond/mds.c:398:
+		pMds->TxRate[pDes->Descriptor_ID][i] = ctmp1; /* backup the ta

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#651: FILE: drivers/staging/winbond/mds.c:399:
+		pMds->TxRate[pDes->Descriptor_ID][i] = ctmp1; /* backup the ta
+						rate and fall back rate */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#651: FILE: drivers/staging/winbond/mds.c:399:
+						rate and fall back rate */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pT01->T01_modulation_type == 0'
#692: FILE: drivers/staging/winbond/mds.c:435:
+	if ((pT01->T01_modulation_type == 0) && (pT01->T01_transmit_rate == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pT01->T01_transmit_rate == 0'
#692: FILE: drivers/staging/winbond/mds.c:435:
+	if ((pT01->T01_modulation_type == 0) && (pT01->T01_transmit_rate == 0))

CHECK:CAMELCASE: Avoid CamelCase: <PreambleMode>
#694: FILE: drivers/staging/winbond/mds.c:437:
+		pDes->PreambleMode = WLAN_PREAMBLE_TYPE_LONG;

CHECK:CAMELCASE: Avoid CamelCase: <Mds_Tx>
#705: FILE: drivers/staging/winbond/mds.c:443:
+void Mds_Tx(struct wbsoft_priv *adapter)

CHECK:CAMELCASE: Avoid CamelCase: <pHwData>
#709: FILE: drivers/staging/winbond/mds.c:445:
+	struct hw_data		*pHwData = &adapter->sHwData;

CHECK:CAMELCASE: Avoid CamelCase: <Mds>
#710: FILE: drivers/staging/winbond/mds.c:446:
+	struct wb35_mds		*pMds = &adapter->Mds;

CHECK:CAMELCASE: Avoid CamelCase: <pTxDes>
#717: FILE: drivers/staging/winbond/mds.c:448:
+	struct wb35_descriptor	*pTxDes = &TxDes;

CHECK:CAMELCASE: Avoid CamelCase: <TxDes>
#717: FILE: drivers/staging/winbond/mds.c:448:
+	struct wb35_descriptor	*pTxDes = &TxDes;

CHECK:CAMELCASE: Avoid CamelCase: <XmitBufAddress>
#718: FILE: drivers/staging/winbond/mds.c:449:
+	u8	*XmitBufAddress;

CHECK:CAMELCASE: Avoid CamelCase: <XmitBufSize>
#719: FILE: drivers/staging/winbond/mds.c:450:
+	u16	XmitBufSize, PacketSize, stmp, CurrentSize, FragmentThreshold;

CHECK:CAMELCASE: Avoid CamelCase: <PacketSize>
#719: FILE: drivers/staging/winbond/mds.c:450:
+	u16	XmitBufSize, PacketSize, stmp, CurrentSize, FragmentThreshold;

CHECK:CAMELCASE: Avoid CamelCase: <CurrentSize>
#719: FILE: drivers/staging/winbond/mds.c:450:
+	u16	XmitBufSize, PacketSize, stmp, CurrentSize, FragmentThreshold;

CHECK:CAMELCASE: Avoid CamelCase: <FillIndex>
#720: FILE: drivers/staging/winbond/mds.c:451:
+	u8	FillIndex, TxDesIndex, FragmentCount, FillCount;

CHECK:CAMELCASE: Avoid CamelCase: <TxDesIndex>
#720: FILE: drivers/staging/winbond/mds.c:451:
+	u8	FillIndex, TxDesIndex, FragmentCount, FillCount;

CHECK:CAMELCASE: Avoid CamelCase: <FillCount>
#720: FILE: drivers/staging/winbond/mds.c:451:
+	u8	FillIndex, TxDesIndex, FragmentCount, FillCount;

CHECK:CAMELCASE: Avoid CamelCase: <BufferFilled>
#721: FILE: drivers/staging/winbond/mds.c:452:
+	unsigned char		BufferFilled = false;

CHECK:CAMELCASE: Avoid CamelCase: <TxOwner>
#740: FILE: drivers/staging/winbond/mds.c:467:
+		if (pMds->TxOwner[FillIndex]) { /* Is owned by

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#788: FILE: drivers/staging/winbond/mds.c:503:
+			memset((u8 *)pTxDes + 1, 0,
+					sizeof(struct wb35_descriptor) - 1);

CHECK:CAMELCASE: Avoid CamelCase: <TxDesFrom>
#794: FILE: drivers/staging/winbond/mds.c:507:
+			pMds->TxDesFrom[TxDesIndex] = 2; /*Storing the

WARNING:TYPO_SPELLING: 'comming' may be misspelled - perhaps 'coming'?
#795: FILE: drivers/staging/winbond/mds.c:508:
+					information of source comming from*/
 					                      ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#795: FILE: drivers/staging/winbond/mds.c:508:
+			pMds->TxDesFrom[TxDesIndex] = 2; /*Storing the
+					information of source comming from*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#795: FILE: drivers/staging/winbond/mds.c:508:
+					information of source comming from*/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#814: FILE: drivers/staging/winbond/mds.c:522:
+				printk("35: EPA 4th frame detected. Size = %d\n"

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#826: FILE: drivers/staging/winbond/mds.c:532:
+			CurrentSize = Mds_BodyCopy(adapter,
+							pTxDes, XmitBufAddress);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 32)
#839: FILE: drivers/staging/winbond/mds.c:542:
+	if ((XmitBufAddress[DOT_11_DA_OFFSET+8] & 0xfc) !=
[...]
 				pMds->TxToggle = true;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#839: FILE: drivers/staging/winbond/mds.c:542:
+	if ((XmitBufAddress[DOT_11_DA_OFFSET+8] & 0xfc) !=
 	                                    ^

CHECK:CAMELCASE: Avoid CamelCase: <TxBufferSize>
#870: FILE: drivers/staging/winbond/mds.c:566:
+			pMds->TxBufferSize[FillIndex] = XmitBufSize;

CHECK:CAMELCASE: Avoid CamelCase: <Mds_SendComplete>
#907: FILE: drivers/staging/winbond/mds.c:595:
+void Mds_SendComplete(struct wbsoft_priv *adapter, PT02_DESCRIPTOR pT02)

CHECK:CAMELCASE: Avoid CamelCase: <pT02>
#907: FILE: drivers/staging/winbond/mds.c:595:
+void Mds_SendComplete(struct wbsoft_priv *adapter, PT02_DESCRIPTOR pT02)

CHECK:CAMELCASE: Avoid CamelCase: <PacketId>
#914: FILE: drivers/staging/winbond/mds.c:599:
+	u8		PacketId = (u8)pT02->T02_Tx_PktID;

CHECK:CAMELCASE: Avoid CamelCase: <T02_Tx_PktID>
#914: FILE: drivers/staging/winbond/mds.c:599:
+	u8		PacketId = (u8)pT02->T02_Tx_PktID;

CHECK:CAMELCASE: Avoid CamelCase: <RetryCount>
#917: FILE: drivers/staging/winbond/mds.c:601:
+	u8		RetryCount, TxRate;

CHECK:CAMELCASE: Avoid CamelCase: <T02_IgnoreResult>
#920: FILE: drivers/staging/winbond/mds.c:603:
+	if (pT02->T02_IgnoreResult) /* Don't care the result */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#935: FILE: drivers/staging/winbond/mds.c:613:
+			if (pT02->T02_transmit_abort ||
+				pT02->T02_out_of_MaxTxMSDULiftTime) {

CHECK:CAMELCASE: Avoid CamelCase: <T02_out_of_MaxTxMSDULiftTime>
#935: FILE: drivers/staging/winbond/mds.c:613:
+				pT02->T02_out_of_MaxTxMSDULiftTime) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#951: FILE: drivers/staging/winbond/mds.c:624:
+				printk("dto_tx_retry_count =%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#952: FILE: drivers/staging/winbond/mds.c:625:
+				printk("dto_tx_retry_count =%d\n",
+						pHwData->dto_tx_retry_count);

CHECK:CAMELCASE: Avoid CamelCase: <TxResult>
#970: FILE: drivers/staging/winbond/mds.c:645:
+		pMds->TxResult[PacketId] = 0;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000000414.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 13 warnings, 73 checks, 918 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000000414.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
