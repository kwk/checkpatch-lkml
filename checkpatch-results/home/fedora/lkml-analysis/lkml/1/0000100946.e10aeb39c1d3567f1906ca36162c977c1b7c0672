WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#61: FILE: Makefile:4:
+EXTRAVERSION = .1
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:DEFINE_ARCH_HAS: #define of 'ARCH_HAS_FLUSH_KERNEL_DCACHE_PAGE' is wrong - use Kconfig variables or standard guards instead
#73: FILE: arch/arm/include/asm/cacheflush.h:432:
+#define ARCH_HAS_FLUSH_KERNEL_DCACHE_PAGE

The ARCH_HAS_xyz and ARCH_HAVE_xyz patterns are wrong.

For big conceptual features use Kconfig symbols instead.  And for
smaller things where we have compatibility fallback functions but
want architectures able to override them with optimized ones, we
should either use weak functions (appropriate for some cases), or
the symbol that protects them should be the same symbol we use.

See: https://lore.kernel.org/lkml/CA+55aFycQ9XJvEOsiM3txHL5bjUc8CeKWJNR_H+MiicaddB42Q@mail.gmail.com/

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#127: FILE: arch/x86/include/asm/cpufeature.h:97:
+#define X86_FEATURE_EXTD_APICID	(3*32+26) /* has extended APICID (8 bits) */
                                	  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#127: FILE: arch/x86/include/asm/cpufeature.h:97:
+#define X86_FEATURE_EXTD_APICID	(3*32+26) /* has extended APICID (8 bits) */
                                	     ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#152: FILE: arch/x86/include/asm/mce.h:156:
+extern void (*machine_check_vector)(struct pt_regs *, long error_code);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:SPACING: spaces preferred around that '|' (ctx:WxV)
#186: FILE: arch/x86/include/asm/uv/uv_hub.h:163:
+#define UV_PNODE_TO_GNODE(p)		((p) |uv_hub_info->gnode_extra)
                             		     ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#233: FILE: arch/x86/kernel/apic/x2apic_uv_x.c:581:
+	printk(KERN_DEBUG "UV: N %d, M %d, gnode_upper 0x%lx, gnode_extra 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#234: FILE: arch/x86/kernel/apic/x2apic_uv_x.c:582:
+	printk(KERN_DEBUG "UV: N %d, M %d, gnode_upper 0x%lx, gnode_extra 0x%x\n",
+			n_val, m_val, gnode_upper, gnode_extra);

WARNING:LINE_SPACING: Missing a blank line after declarations
#296: FILE: arch/x86/kernel/cpu/amd.c:361:
+		unsigned int val;
+		val = read_pci_config(0, 24, 0, 0x68);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: space preferred before that '*' (ctx:VxE)
#460: FILE: arch/x86/kernel/tlb_uv.c:721:
+	adp = (struct bau_desc *)kmalloc_node(sizeof(struct bau_desc)*
 	                                                             ^

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#460: FILE: arch/x86/kernel/tlb_uv.c:721:
+	adp = (struct bau_desc *)kmalloc_node(sizeof(struct bau_desc)*

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc_node(sizeof(*adp)...) over kmalloc_node(sizeof(struct bau_desc)...)
#460: FILE: arch/x86/kernel/tlb_uv.c:721:
+	adp = (struct bau_desc *)kmalloc_node(sizeof(struct bau_desc)*

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#461: FILE: arch/x86/kernel/tlb_uv.c:722:
+		UV_ADP_SIZE*UV_ITEMS_PER_DESCRIPTOR, GFP_KERNEL, node);
 		           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#483: FILE: arch/x86/kernel/tlb_uv.c:737:
+	for (i = 0, ad2 = adp; i < (UV_ADP_SIZE*UV_ITEMS_PER_DESCRIPTOR);
 	                                       ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vmx->exit_reason == EXIT_REASON_MCE_DURING_VMENTRY'
#695: FILE: arch/x86/kvm/vmx.c:3569:
+	if ((vmx->exit_reason == EXIT_REASON_MCE_DURING_VMENTRY) ||
+		(intr_info & INTR_INFO_VECTOR_MASK) == MC_VECTOR)

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#696: FILE: arch/x86/kvm/vmx.c:3570:
+	if ((vmx->exit_reason == EXIT_REASON_MCE_DURING_VMENTRY) ||
+		(intr_info & INTR_INFO_VECTOR_MASK) == MC_VECTOR)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#800: FILE: drivers/char/epca.c:2248:
+				clear_bit(ASYNCB_NORMAL_ACTIVE,
+						&ch->port.flags);

CHECK:CAMELCASE: Avoid CamelCase: <numPorts>
#812: FILE: drivers/char/moxa.c:1187:
+	if (port % MAX_PORTS_PER_BOARD >= brd->numPorts) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <theMsg>
#877: FILE: drivers/char/n_r3964.c:1101:
+		if (copy_to_user(buf, &theMsg, ret)) {

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1033: FILE: drivers/ide/ide-cd.c:761:
+		if (uptodate == 0 && rq->bio)
 		    ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1069: FILE: drivers/isdn/hisax/hfc_pci.c:86:
+	pci_free_consistent(cs->hw.hfcpci.dev, 0x8000,
+		cs->hw.hfcpci.fifos, cs->hw.hfcpci.dma);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1082: FILE: drivers/isdn/hisax/hfc_pci.c:1671:
+				printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1087: FILE: drivers/isdn/hisax/hfc_pci.c:1676:
+				printk(KERN_WARNING

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1105: FILE: drivers/isdn/hisax/hfc_pci.c:1711:
+	cs->hw.hfcpci.fifos = pci_alloc_consistent(cs->hw.hfcpci.dev,
+					0x8000, &cs->hw.hfcpci.dma);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1107: FILE: drivers/isdn/hisax/hfc_pci.c:1713:
+		printk(KERN_WARNING "HFC-PCI: Error allocating FIFO memory!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1111: FILE: drivers/isdn/hisax/hfc_pci.c:1717:
+		printk(KERN_WARNING

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1115: FILE: drivers/isdn/hisax/hfc_pci.c:1721:
+		pci_free_consistent(cs->hw.hfcpci.dev, 0x8000,
+			cs->hw.hfcpci.fifos, cs->hw.hfcpci.dma);

CHECK:BRACES: Unbalanced braces around else statement
#1168: FILE: drivers/md/dm-exception-store.c:218:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1522: FILE: drivers/media/video/pvrusb2/pvrusb2-hdw.c:1984:
+	/*
+	  Mike Isely <isely@pobox.com> 19-Nov-2006 - This bit of nuttiness

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LINE_SPACING: Missing a blank line after declarations
#1531: FILE: drivers/media/video/pvrusb2/pvrusb2-hdw.c:1993:
+	struct v4l2_format fmt;
+	if (hdw->decoder_client_id != PVR2_CLIENT_ID_CX25840) {

WARNING:SPLIT_STRING: quoted string split across lines
#1538: FILE: drivers/media/video/pvrusb2/pvrusb2-hdw.c:2000:
+		   "Module ID %u:"
+		   " Executing cx25840 VBI hack",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1546: FILE: drivers/media/video/pvrusb2/pvrusb2-hdw.c:2008:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <wValue>
#1761: FILE: drivers/net/usb/pegasus.c:300:
+	pegasus->dr.wValue = cpu_to_le16(0);

CHECK:CAMELCASE: Avoid CamelCase: <EpromData>
#1775: FILE: drivers/net/usb/pegasus.c:454:
+	set_registers(pegasus, EpromData, 2, &le_data);

CHECK:CAMELCASE: Avoid CamelCase: <EthCtrl0>
#1787: FILE: drivers/net/usb/pegasus.c:929:
+	set_registers(pegasus, EthCtrl0, sizeof(tmp), &tmp);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'udd->idVendor == cpu_to_le16(VENDOR_BELKIN)'
#1826: FILE: drivers/net/usb/pegasus.c:1306:
+	if ((udd->idVendor == cpu_to_le16(VENDOR_BELKIN)) &&
+	    (udd->idProduct == cpu_to_le16(0x0121)) &&
 	    (udd->bDeviceClass == USB_CLASS_WIRELESS_CONTROLLER) &&
 	    (udd->bDeviceProtocol == 1))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'udd->idProduct == cpu_to_le16(0x0121)'
#1826: FILE: drivers/net/usb/pegasus.c:1306:
+	if ((udd->idVendor == cpu_to_le16(VENDOR_BELKIN)) &&
+	    (udd->idProduct == cpu_to_le16(0x0121)) &&
 	    (udd->bDeviceClass == USB_CLASS_WIRELESS_CONTROLLER) &&
 	    (udd->bDeviceProtocol == 1))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'udd->bDeviceClass == USB_CLASS_WIRELESS_CONTROLLER'
#1826: FILE: drivers/net/usb/pegasus.c:1306:
+	if ((udd->idVendor == cpu_to_le16(VENDOR_BELKIN)) &&
+	    (udd->idProduct == cpu_to_le16(0x0121)) &&
 	    (udd->bDeviceClass == USB_CLASS_WIRELESS_CONTROLLER) &&
 	    (udd->bDeviceProtocol == 1))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'udd->bDeviceProtocol == 1'
#1826: FILE: drivers/net/usb/pegasus.c:1306:
+	if ((udd->idVendor == cpu_to_le16(VENDOR_BELKIN)) &&
+	    (udd->idProduct == cpu_to_le16(0x0121)) &&
 	    (udd->bDeviceClass == USB_CLASS_WIRELESS_CONTROLLER) &&
 	    (udd->bDeviceProtocol == 1))

CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#1826: FILE: drivers/net/usb/pegasus.c:1306:
+	if ((udd->idVendor == cpu_to_le16(VENDOR_BELKIN)) &&

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#1827: FILE: drivers/net/usb/pegasus.c:1307:
+	    (udd->idProduct == cpu_to_le16(0x0121)) &&

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1853: FILE: drivers/net/wireless/ath5k/base.c:689:
+	/*
+	 * Suspend/Resume resets the PCI configuration space, so we have to

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2076: FILE: drivers/net/wireless/ath9k/pci.c:138:
+	/*
+	 * Disable the RETRY_TIMEOUT register (0x41) to keep

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2098: FILE: drivers/net/wireless/ath9k/pci.c:264:
+	/*
+	 * Suspend/Resume resets the PCI configuration space, so we have to

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2143: FILE: drivers/parport/parport_pc.c:1414:
 static void __devinit winbond_check(int io, int key)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2167: FILE: drivers/parport/parport_pc.c:1452:
 static void __devinit winbond_check2(int io,int key)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2195: FILE: drivers/parport/parport_pc.c:1493:
 static void __devinit smsc_check(int io, int key)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2218: FILE: drivers/parport/parport_pc.c:1560:
 static void __devinit detect_and_report_it87(void)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2295: FILE: drivers/pci/pcie/aspm.c:643:
+	if (pdev->pcie_type == PCI_EXP_TYPE_ROOT_PORT &&
+		pdev->bus->self)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2309: FILE: drivers/scsi/qla2xxx/qla_dbg.c:221:
+    uint32_t ram_words, void **nxt)$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2309: FILE: drivers/scsi/qla2xxx/qla_dbg.c:221:
+    uint32_t ram_words, void **nxt)

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#2323: FILE: drivers/scsi/sym53c8xx_2/sym_hipd.c:2315:
+	if (printk_ratelimit())

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2325: FILE: drivers/scsi/sym53c8xx_2/sym_hipd.c:2317:
+		printf("%s: SCSI parity error detected: SCR1=%d DBC=%x SBCL=%x\n",
+			sym_name(np), hsts, dbc, sbcl);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#2368: FILE: drivers/spi/spi_mpc83xx.c:719:
+	pinfo->alow_flags = kzalloc(ngpios * sizeof(*pinfo->alow_flags),
 				    GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#2569: FILE: drivers/usb/serial/cyberjack.c:168:
+	dbg("%s", __func__);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'digi_disconnect', this function's name, in a string
#2678: FILE: drivers/usb/serial/digi_acceleport.c:1598:
+	dbg("digi_disconnect: TOP, in_interrupt()=%ld", in_interrupt());

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2687: FILE: drivers/usb/serial/digi_acceleport.c:1607:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#2691: FILE: drivers/usb/serial/digi_acceleport.c:1611:
+	int i;
+	dbg("digi_release: TOP, in_interrupt()=%ld", in_interrupt());

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'digi_release', this function's name, in a string
#2691: FILE: drivers/usb/serial/digi_acceleport.c:1611:
+	dbg("digi_release: TOP, in_interrupt()=%ld", in_interrupt());

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2786: FILE: drivers/usb/serial/garmin_gps.c:1542:
+
+

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#2792: FILE: drivers/usb/serial/garmin_gps.c:1548:
+	dbg("%s", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#2838: FILE: drivers/usb/serial/generic.c:430:
+	dbg("%s", __func__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2884: FILE: drivers/usb/serial/io_edgeport.c:3221:
+
+

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#2894: FILE: drivers/usb/serial/io_edgeport.c:3231:
+	dbg("%s", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#2973: FILE: drivers/usb/serial/io_ti.c:2685:
+	dbg("%s", __func__);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3085: FILE: drivers/usb/serial/keyspan.c:2731:
+^Istruct keyspan_serial_private ^I*s_priv;$

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#3087: FILE: drivers/usb/serial/keyspan.c:2733:
+	dbg("%s", __func__);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3102: FILE: drivers/usb/serial/keyspan.h:45:
+static void keyspan_disconnect		(struct usb_serial *serial);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3103: FILE: drivers/usb/serial/keyspan.h:46:
+static void keyspan_release		(struct usb_serial *serial);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3226: FILE: drivers/usb/serial/kl5kusb105.c:347:
+
+

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#3231: FILE: drivers/usb/serial/kl5kusb105.c:352:
+	dbg("%s", __func__);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#3386: FILE: drivers/usb/serial/mos7840.c:2685:
+	dbg("%s \n", " disconnect :entering..........");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#3399: FILE: drivers/usb/serial/mos7840.c:2710:
+
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#3410: FILE: drivers/usb/serial/mos7840.c:2721:
+	struct moschip_port *mos7840_port;
+	dbg("%s", " release :entering..........");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3420: FILE: drivers/usb/serial/mos7840.c:2731:
+	 * stop reads and writes on all ports                */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3483: FILE: drivers/usb/serial/omninet.c:361:
+
+

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#3488: FILE: drivers/usb/serial/omninet.c:366:
+	dbg("%s", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#3516: FILE: drivers/usb/serial/opticon.c:481:
+	dbg("%s", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#3565: FILE: drivers/usb/serial/option.c:1136:
+	dbg("%s", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#3680: FILE: drivers/usb/serial/sierra.c:731:
+	dev_dbg(&serial->dev->dev, "%s\n", __func__);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3733: FILE: drivers/usb/serial/spcp8x5.c:1045:
+^I.release ^I^I= spcp8x5_release,$

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#3760: FILE: drivers/usb/serial/symbolserial.c:285:
+	dbg("%s", __func__);

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#3990: FILE: fs/Kconfig:42:
+source "fs/xfs/Kconfig"

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#3993: FILE: fs/Kconfig:45:
+source "fs/btrfs/Kconfig"

CHECK:CAMELCASE: Avoid CamelCase: <pCifsFile>
#4023: FILE: fs/cifs/file.c:494:
+	mutex_lock(&pCifsFile->fh_mutex);

CHECK:SPACING: No space is necessary after a cast
#4127: FILE: fs/eventpoll.c:413:
+		       ep_poll_wakeup_proc, NULL, wq, (void *) (long) this_cpu);

CHECK:CAMELCASE: Avoid CamelCase: <XADoffset>
#4170: FILE: fs/jfs/jfs_extent.c:394:
+		XADoffset(xp, prev);

WARNING:SPLIT_STRING: quoted string split across lines
#4192: FILE: fs/ocfs2/super.c:238:
+				"%10s => Stack: %s  Name: %*s  "
+				"Version: %d.%d\n", "Cluster",

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#4310: FILE: include/linux/kvm_host.h:128:
+	spinlock_t requests_lock;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4385: FILE: include/linux/serial.h:103:
+				    * on the callout port */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4393: FILE: include/linux/serial.h:111:
+				    * autoconfiguration */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4401: FILE: include/linux/serial.h:119:
+				    * checks.  Note: can be dangerous! */

CHECK:BIT_MACRO: Prefer using the BIT macro
#4417: FILE: include/linux/serial.h:135:
+#define ASYNC_HUP_NOTIFY	(1U << ASYNCB_HUP_NOTIFY)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#4418: FILE: include/linux/serial.h:136:
+#define ASYNC_FOURPORT		(1U << ASYNCB_FOURPORT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#4419: FILE: include/linux/serial.h:137:
+#define ASYNC_SAK		(1U << ASYNCB_SAK)

CHECK:BIT_MACRO: Prefer using the BIT macro
#4420: FILE: include/linux/serial.h:138:
+#define ASYNC_SPLIT_TERMIOS	(1U << ASYNCB_SPLIT_TERMIOS)

CHECK:BIT_MACRO: Prefer using the BIT macro
#4421: FILE: include/linux/serial.h:139:
+#define ASYNC_SPD_HI		(1U << ASYNCB_SPD_HI)

CHECK:BIT_MACRO: Prefer using the BIT macro
#4422: FILE: include/linux/serial.h:140:
+#define ASYNC_SPD_VHI		(1U << ASYNCB_SPD_VHI)

CHECK:BIT_MACRO: Prefer using the BIT macro
#4423: FILE: include/linux/serial.h:141:
+#define ASYNC_SKIP_TEST		(1U << ASYNCB_SKIP_TEST)

CHECK:BIT_MACRO: Prefer using the BIT macro
#4424: FILE: include/linux/serial.h:142:
+#define ASYNC_AUTO_IRQ		(1U << ASYNCB_AUTO_IRQ)

CHECK:BIT_MACRO: Prefer using the BIT macro
#4425: FILE: include/linux/serial.h:143:
+#define ASYNC_SESSION_LOCKOUT	(1U << ASYNCB_SESSION_LOCKOUT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#4426: FILE: include/linux/serial.h:144:
+#define ASYNC_PGRP_LOCKOUT	(1U << ASYNCB_PGRP_LOCKOUT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#4427: FILE: include/linux/serial.h:145:
+#define ASYNC_CALLOUT_NOHUP	(1U << ASYNCB_CALLOUT_NOHUP)

CHECK:BIT_MACRO: Prefer using the BIT macro
#4428: FILE: include/linux/serial.h:146:
+#define ASYNC_HARDPPS_CD	(1U << ASYNCB_HARDPPS_CD)

CHECK:BIT_MACRO: Prefer using the BIT macro
#4429: FILE: include/linux/serial.h:147:
+#define ASYNC_SPD_SHI		(1U << ASYNCB_SPD_SHI)

CHECK:BIT_MACRO: Prefer using the BIT macro
#4430: FILE: include/linux/serial.h:148:
+#define ASYNC_LOW_LATENCY	(1U << ASYNCB_LOW_LATENCY)

CHECK:BIT_MACRO: Prefer using the BIT macro
#4431: FILE: include/linux/serial.h:149:
+#define ASYNC_BUGGY_UART	(1U << ASYNCB_BUGGY_UART)

CHECK:BIT_MACRO: Prefer using the BIT macro
#4432: FILE: include/linux/serial.h:150:
+#define ASYNC_AUTOPROBE		(1U << ASYNCB_AUTOPROBE)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4435: FILE: include/linux/serial.h:153:
+#define ASYNC_USR_MASK		(ASYNC_SPD_HI|ASYNC_SPD_VHI| \
                       		             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#4435: FILE: include/linux/serial.h:153:
+#define ASYNC_USR_MASK		(ASYNC_SPD_HI|ASYNC_SPD_VHI| \
                       		                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4436: FILE: include/linux/serial.h:154:
+		ASYNC_CALLOUT_NOHUP|ASYNC_SPD_SHI|ASYNC_LOW_LATENCY)
 		                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4436: FILE: include/linux/serial.h:154:
+		ASYNC_CALLOUT_NOHUP|ASYNC_SPD_SHI|ASYNC_LOW_LATENCY)
 		                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4437: FILE: include/linux/serial.h:155:
+#define ASYNC_SPD_CUST		(ASYNC_SPD_HI|ASYNC_SPD_VHI)
                       		             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4438: FILE: include/linux/serial.h:156:
+#define ASYNC_SPD_WARP		(ASYNC_SPD_HI|ASYNC_SPD_SHI)
                       		             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4439: FILE: include/linux/serial.h:157:
+#define ASYNC_SPD_MASK		(ASYNC_SPD_HI|ASYNC_SPD_VHI|ASYNC_SPD_SHI)
                       		             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4439: FILE: include/linux/serial.h:157:
+#define ASYNC_SPD_MASK		(ASYNC_SPD_HI|ASYNC_SPD_VHI|ASYNC_SPD_SHI)
                       		                           ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#4441: FILE: include/linux/serial.h:159:
+#define ASYNC_INITIALIZED	(1U << ASYNCB_INITIALIZED)

CHECK:BIT_MACRO: Prefer using the BIT macro
#4442: FILE: include/linux/serial.h:160:
+#define ASYNC_NORMAL_ACTIVE	(1U << ASYNCB_NORMAL_ACTIVE)

CHECK:BIT_MACRO: Prefer using the BIT macro
#4443: FILE: include/linux/serial.h:161:
+#define ASYNC_BOOT_AUTOCONF	(1U << ASYNCB_BOOT_AUTOCONF)

CHECK:BIT_MACRO: Prefer using the BIT macro
#4444: FILE: include/linux/serial.h:162:
+#define ASYNC_CLOSING		(1U << ASYNCB_CLOSING)

CHECK:BIT_MACRO: Prefer using the BIT macro
#4445: FILE: include/linux/serial.h:163:
+#define ASYNC_CTS_FLOW		(1U << ASYNCB_CTS_FLOW)

CHECK:BIT_MACRO: Prefer using the BIT macro
#4446: FILE: include/linux/serial.h:164:
+#define ASYNC_CHECK_CD		(1U << ASYNCB_CHECK_CD)

CHECK:BIT_MACRO: Prefer using the BIT macro
#4447: FILE: include/linux/serial.h:165:
+#define ASYNC_SHARE_IRQ		(1U << ASYNCB_SHARE_IRQ)

CHECK:BIT_MACRO: Prefer using the BIT macro
#4448: FILE: include/linux/serial.h:166:
+#define ASYNC_CONS_FLOW		(1U << ASYNCB_CONS_FLOW)

CHECK:BIT_MACRO: Prefer using the BIT macro
#4449: FILE: include/linux/serial.h:167:
+#define ASYNC_BOOT_ONLYMCA	(1U << ASYNCB_BOOT_ONLYMCA)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4486: FILE: include/linux/usb/serial.h:298:
+extern void usb_serial_generic_disconnect(struct usb_serial *serial);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4487: FILE: include/linux/usb/serial.h:299:
+extern void usb_serial_generic_release(struct usb_serial *serial);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4514: FILE: include/net/x25.h:190:
+extern void x25_destroy_socket_from_timer(struct sock *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sock *' should also have an identifier name
#4514: FILE: include/net/x25.h:190:
+extern void x25_destroy_socket_from_timer(struct sock *);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'entry->dev_addr != ref->dev_addr'
#4592: FILE: lib/dma-debug.c:192:
+		if ((entry->dev_addr != ref->dev_addr) ||
+		    (entry->dev != ref->dev))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'entry->dev != ref->dev'
#4592: FILE: lib/dma-debug.c:192:
+		if ((entry->dev_addr != ref->dev_addr) ||
+		    (entry->dev != ref->dev))

WARNING:TYPO_SPELLING: 'Therfore' may be misspelled - perhaps 'Therefore'?
#4601: FILE: lib/dma-debug.c:201:
+		 * positives being reported. Therfore we implement a
 		                             ^^^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#4791: FILE: net/ipv4/route.c:1085:
+		/*
+		 * If we're not caching, just tell the caller we

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#4806: FILE: net/ipv4/route.c:1100:
+		if (rt->rt_type == RTN_UNICAST || rt->fl.iif == 0) {
 		                                         ^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#4808: FILE: net/ipv4/route.c:1102:
+			int err = arp_bind_neighbour(&rt->u.dst);
+			if (err) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#4810: FILE: net/ipv4/route.c:1104:
+					printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4827: FILE: net/ipv4/route.c:1226:
+		printk(KERN_DEBUG "rt_cache @%02x: %pI4",

CHECK:SPACING: No space is necessary after a cast
#4850: FILE: net/mac80211/rc80211_minstrel.c:219:
+	if ((int) mi->sample_idx > (mi->n_rates - 2)) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#4935: FILE: net/wireless/reg.c:2048:
+	/*
+	 * Userspace could have sent two replies with only

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!acard->mpu"
#5087: FILE: sound/isa/cmi8330.c:341:
+	if (acard->mpu == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#5183: FILE: sound/pci/intel8x0.c:1079:
+			unsigned int pos_base, last_base;
+			pos_base = position / ichdev->fragsize1;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000100946.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 61 warnings, 80 checks, 4331 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000100946.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
