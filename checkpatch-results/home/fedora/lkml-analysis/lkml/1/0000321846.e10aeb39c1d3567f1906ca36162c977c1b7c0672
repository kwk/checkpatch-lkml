WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
this patch converts 3c509 driver to isa_driver and pnp_driver. The result is 

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#130: FILE: drivers/net/3c509.c:177:
 };
+static int id_port;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#177: FILE: drivers/net/3c509.c:225:
+	/* ISA boards are detected by sending the ID sequence to the
+	   ID_PORT.  We find cards past the first by setting the 'current_tag'

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#179: FILE: drivers/net/3c509.c:227:
+	   respond to subsequent ID sequences. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#196: FILE: drivers/net/3c509.c:244:
+	/* Read in EEPROM data, which does contention-select.
+	   Only the lowest address board will stay "on-line".

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#197: FILE: drivers/net/3c509.c:245:
+	   3Com got the byte order backwards. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#203: FILE: drivers/net/3c509.c:251:
+		/* The ISA PnP 3c509 cards respond to the ID sequence too.
+		   This check is needed in order not to register them twice. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#203: FILE: drivers/net/3c509.c:251:
+		   This check is needed in order not to register them twice. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#206: FILE: drivers/net/3c509.c:254:
+			struct el3_private *lp = netdev_priv(el3_devs[i]);
+			if (lp->type == EL3_PNP

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#207: FILE: drivers/net/3c509.c:255:
+			if (lp->type == EL3_PNP
+			    && !memcmp(phys_addr, el3_devs[i]->dev_addr,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#210: FILE: drivers/net/3c509.c:258:
+					printk(KERN_DEBUG "3c509 with address %02x %02x %02x %02x %02x %02x was found by ISAPnP\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: drivers/net/3c509.c:259:
+					printk(KERN_DEBUG "3c509 with address %02x %02x %02x %02x %02x %02x was found by ISAPnP\n",
+						phys_addr[0] & 0xff, phys_addr[0] >> 8,

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#223: FILE: drivers/net/3c509.c:271:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#225: FILE: drivers/net/3c509.c:273:
+static void __devinit el3_dev_fill(struct net_device *dev, __be16 *phys_addr,

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#238: FILE: drivers/net/3c509.c:286:
+static int __devinit el3_isa_match(struct device *pdev,

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#296: FILE: drivers/net/3c509.c:344:
+static int __devexit el3_isa_remove(struct device *pdev,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#346: FILE: drivers/net/3c509.c:394:
+};
+static int isa_registered;

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#361: FILE: drivers/net/3c509.c:409:
+static int __devinit el3_pnp_probe(struct pnp_dev *pdev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#362: FILE: drivers/net/3c509.c:410:
+static int __devinit el3_pnp_probe(struct pnp_dev *pdev,
+				    const struct pnp_device_id *id)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#400: FILE: drivers/net/3c509.c:448:
+static void __devexit el3_pnp_remove(struct pnp_dev *pdev)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#428: FILE: drivers/net/3c509.c:476:
+};
+static int pnp_registered;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#446: FILE: drivers/net/3c509.c:500:
 };
+static int eisa_registered;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#454: FILE: drivers/net/3c509.c:535:
 };
+static int mca_registered;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#742: FILE: drivers/net/3c509.c:620:
+	printk(KERN_INFO "3c529: found %s at slot %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#743: FILE: drivers/net/3c509.c:621:
+	printk(KERN_INFO "3c529: found %s at slot %d\n",
 		   el3_mca_adapter_names[mdev->index], slot + 1);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#749: FILE: drivers/net/3c509.c:632:
 	if (el3_debug > 2) {
+			printk(KERN_DEBUG "3c529: irq %d  ioaddr 0x%x  ifport %d\n", irq, ioaddr, if_port);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#751: FILE: drivers/net/3c509.c:633:
+			printk(KERN_DEBUG "3c529: irq %d  ioaddr 0x%x  ifport %d\n", irq, ioaddr, if_port);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#751: FILE: drivers/net/3c509.c:633:
+			printk(KERN_DEBUG "3c529: irq %d  ioaddr 0x%x  ifport %d\n", irq, ioaddr, if_port);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#847: FILE: drivers/net/3c509.c:757:
+		printk(KERN_DEBUG "  3c509 EEPROM word %d %#4.4x.\n", index, word);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#856: FILE: drivers/net/3c509.c:779:
+		printk(KERN_DEBUG "%s: Opening, IRQ %d	 status@%x %4.4x.\n", dev->name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#857: FILE: drivers/net/3c509.c:780:
+		printk(KERN_DEBUG "%s: Opening, IRQ %d	 status@%x %4.4x.\n", dev->name,
 			   dev->irq, ioaddr + EL3_STATUS, inw(ioaddr + EL3_STATUS));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#863: FILE: drivers/net/3c509.c:785:
+		printk(KERN_DEBUG "%s: Opened 3c509  IRQ %d  status %4.4x.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#864: FILE: drivers/net/3c509.c:786:
+		printk(KERN_DEBUG "%s: Opened 3c509  IRQ %d  status %4.4x.\n",
 			   dev->name, dev->irq, inw(ioaddr + EL3_STATUS));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#872: FILE: drivers/net/3c509.c:798:
+	printk(KERN_WARNING "%s: transmit timed out, Tx_status %2.2x status %4.4x "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#881: FILE: drivers/net/3c509.c:823:
+		printk(KERN_DEBUG "%s: el3_start_xmit(length = %u) called, status %4.4x.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#882: FILE: drivers/net/3c509.c:824:
+		printk(KERN_DEBUG "%s: el3_start_xmit(length = %u) called, status %4.4x.\n",
 			   dev->name, skb->len, inw(ioaddr + EL3_STATUS));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#890: FILE: drivers/net/3c509.c:832:
+			printk(KERN_DEBUG "%s: Missed interrupt, status then %04x now %04x"

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#899: FILE: drivers/net/3c509.c:906:
+		printk(KERN_DEBUG "%s: interrupt, status %4.4x.\n", dev->name, status);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#908: FILE: drivers/net/3c509.c:917:
+				printk(KERN_DEBUG "	TX room bit was handled.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#917: FILE: drivers/net/3c509.c:956:
+			printk(KERN_ERR "%s: Infinite loop in interrupt, status %4.4x.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#918: FILE: drivers/net/3c509.c:957:
+			printk(KERN_ERR "%s: Infinite loop in interrupt, status %4.4x.\n",
 				   dev->name, status);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#926: FILE: drivers/net/3c509.c:967:
+		printk(KERN_DEBUG "%s: exiting interrupt, status %4.4x.\n", dev->name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#927: FILE: drivers/net/3c509.c:968:
+		printk(KERN_DEBUG "%s: exiting interrupt, status %4.4x.\n", dev->name,
 			   inw(ioaddr + EL3_STATUS));

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1001: FILE: drivers/net/3c509.c:1530:
+			break;
+		else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1006: FILE: drivers/net/3c509.c:1535:
+		printk(KERN_ERR "No I/O port available for 3c509 activation.\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000321846.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 30 warnings, 15 checks, 1003 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000321846.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
