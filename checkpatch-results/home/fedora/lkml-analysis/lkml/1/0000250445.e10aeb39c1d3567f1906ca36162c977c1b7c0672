CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#94: FILE: arch/x86/kernel/early_printk.c:16:
+#include <asm/pgtable.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#113: FILE: arch/x86/kernel/early_printk.c:164:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#117: FILE: arch/x86/kernel/early_printk.c:168:
+static unsigned dbgp_endpoint_out;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#173: FILE: arch/x86/kernel/early_printk.c:224:
+	unsigned ctrl;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#208: FILE: arch/x86/kernel/early_printk.c:259:
+static int dbgp_wait_until_done(unsigned ctrl)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#210: FILE: arch/x86/kernel/early_printk.c:261:
+	unsigned pids, lpid;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lpid == USB_PID_NAK'
#226: FILE: arch/x86/kernel/early_printk.c:277:
+	if ((lpid == USB_PID_NAK) || (lpid == USB_PID_NYET))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lpid == USB_PID_NYET'
#226: FILE: arch/x86/kernel/early_printk.c:277:
+	if ((lpid == USB_PID_NAK) || (lpid == USB_PID_NYET))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#241: FILE: arch/x86/kernel/early_printk.c:292:
+	unsigned lo, hi;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#244: FILE: arch/x86/kernel/early_printk.c:295:
+	lo = hi = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#246: FILE: arch/x86/kernel/early_printk.c:297:
+		lo |= bytes[i] << (8*i);
 		                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#248: FILE: arch/x86/kernel/early_printk.c:299:
+		hi |= bytes[i] << (8*(i - 4));
 		                    ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#256: FILE: arch/x86/kernel/early_printk.c:307:
+	unsigned lo, hi;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#262: FILE: arch/x86/kernel/early_printk.c:313:
+		bytes[i] = (lo >> (8*i)) & 0xff;
 		                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#264: FILE: arch/x86/kernel/early_printk.c:315:
+		bytes[i] = (hi >> (8*(i - 4))) & 0xff;
 		                    ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#267: FILE: arch/x86/kernel/early_printk.c:318:
+static int dbgp_bulk_write(unsigned devnum, unsigned endpoint,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#267: FILE: arch/x86/kernel/early_printk.c:318:
+static int dbgp_bulk_write(unsigned devnum, unsigned endpoint,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#268: FILE: arch/x86/kernel/early_printk.c:319:
+static int dbgp_bulk_write(unsigned devnum, unsigned endpoint,
+			 const char *bytes, int size)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#270: FILE: arch/x86/kernel/early_printk.c:321:
+	unsigned pids, addr, ctrl;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#297: FILE: arch/x86/kernel/early_printk.c:348:
+static int dbgp_bulk_read(unsigned devnum, unsigned endpoint, void *data,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#297: FILE: arch/x86/kernel/early_printk.c:348:
+static int dbgp_bulk_read(unsigned devnum, unsigned endpoint, void *data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#298: FILE: arch/x86/kernel/early_printk.c:349:
+static int dbgp_bulk_read(unsigned devnum, unsigned endpoint, void *data,
+				 int size)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#300: FILE: arch/x86/kernel/early_printk.c:351:
+	unsigned pids, addr, ctrl;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#327: FILE: arch/x86/kernel/early_printk.c:378:
+static int dbgp_control_msg(unsigned devnum, int requesttype, int request,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#328: FILE: arch/x86/kernel/early_printk.c:379:
+static int dbgp_control_msg(unsigned devnum, int requesttype, int request,
+	int value, int index, void *data, int size)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#330: FILE: arch/x86/kernel/early_printk.c:381:
+	unsigned pids, addr, ctrl;

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#336: FILE: arch/x86/kernel/early_printk.c:387:
+	if (size > (read ? DBGP_MAX_PACKET:0))
 	                                  ^

CHECK:CAMELCASE: Avoid CamelCase: <bRequestType>
#340: FILE: arch/x86/kernel/early_printk.c:391:
+	req.bRequestType = requesttype;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <bRequest>
#341: FILE: arch/x86/kernel/early_printk.c:392:
+	req.bRequest = request;

CHECK:CAMELCASE: Avoid CamelCase: <wValue>
#342: FILE: arch/x86/kernel/early_printk.c:393:
+	req.wValue = value;

CHECK:CAMELCASE: Avoid CamelCase: <wIndex>
#343: FILE: arch/x86/kernel/early_printk.c:394:
+	req.wIndex = index;

CHECK:CAMELCASE: Avoid CamelCase: <wLength>
#344: FILE: arch/x86/kernel/early_printk.c:395:
+	req.wLength = size;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#367: FILE: arch/x86/kernel/early_printk.c:418:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#380: FILE: arch/x86/kernel/early_printk.c:431:
+		u8 id;
+		pos &= ~3;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#381: FILE: arch/x86/kernel/early_printk.c:432:
+		id = read_pci_config_byte(num, slot, func, pos+PCI_CAP_LIST_ID);
 		                                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#387: FILE: arch/x86/kernel/early_printk.c:438:
+		pos = read_pci_config_byte(num, slot, func,
+						 pos+PCI_CAP_LIST_NEXT);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#387: FILE: arch/x86/kernel/early_printk.c:438:
+						 pos+PCI_CAP_LIST_NEXT);
 						    ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#392: FILE: arch/x86/kernel/early_printk.c:443:
+static __u32 __init find_dbgp(int ehci_num, unsigned *rbus, unsigned *rslot,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#392: FILE: arch/x86/kernel/early_printk.c:443:
+static __u32 __init find_dbgp(int ehci_num, unsigned *rbus, unsigned *rslot,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#393: FILE: arch/x86/kernel/early_printk.c:444:
+static __u32 __init find_dbgp(int ehci_num, unsigned *rbus, unsigned *rslot,
+				unsigned *rfunc)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#393: FILE: arch/x86/kernel/early_printk.c:444:
+				unsigned *rfunc)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#395: FILE: arch/x86/kernel/early_printk.c:446:
+	unsigned bus, slot, func;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#401: FILE: arch/x86/kernel/early_printk.c:452:
+				unsigned cap;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#404: FILE: arch/x86/kernel/early_printk.c:455:
+				class = read_pci_config(bus, slot, func,
+							 PCI_CLASS_REVISION);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#408: FILE: arch/x86/kernel/early_printk.c:459:
+				cap = find_cap(bus, slot, func,
+						 PCI_CAP_ID_EHCI_DEBUG);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#425: FILE: arch/x86/kernel/early_printk.c:476:
+	unsigned portsc;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#426: FILE: arch/x86/kernel/early_printk.c:477:
+	unsigned delay_time, delay;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#445: FILE: arch/x86/kernel/early_printk.c:496:
+			writel(portsc & ~(PORT_RWC_BITS | PORT_RESET),
+				&ehci_regs->port_status[port - 1]);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#447: FILE: arch/x86/kernel/early_printk.c:498:
+				portsc = readl(&ehci_regs->port_status[port-1]);
 				                                           ^

WARNING:TYPO_SPELLING: 'happend' may be misspelled - perhaps 'happened'?
#455: FILE: arch/x86/kernel/early_printk.c:506:
+		/* bomb out completely if something weird happend */
 		                                          ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#468: FILE: arch/x86/kernel/early_printk.c:519:
+	unsigned status;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#483: FILE: arch/x86/kernel/early_printk.c:534:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#493: FILE: arch/x86/kernel/early_printk.c:544:
+	unsigned cmd, ctrl, status, portsc, hcs_params, debug_port, n_ports;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#551: FILE: arch/x86/kernel/early_printk.c:602:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#565: FILE: arch/x86/kernel/early_printk.c:616:
+	unsigned ctrl, devnum;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#566: FILE: arch/x86/kernel/early_printk.c:617:
+	unsigned bus, slot, func, cap;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#567: FILE: arch/x86/kernel/early_printk.c:618:
+	unsigned debug_port, bar, offset;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#568: FILE: arch/x86/kernel/early_printk.c:619:
+	unsigned bar_val;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#571: FILE: arch/x86/kernel/early_printk.c:622:
+	unsigned dbgp_num;

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#578: FILE: arch/x86/kernel/early_printk.c:629:
+		dbgp_num = strict_strtoul(s, 10, &e);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:LINE_SPACING: Please don't use multiple blank lines
#603: FILE: arch/x86/kernel/early_printk.c:654:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#627: FILE: arch/x86/kernel/early_printk.c:678:
+		ret = dbgp_control_msg(devnum,
+			USB_DIR_IN | USB_TYPE_STANDARD | USB_RECIP_DEVICE,

CHECK:CAMELCASE: Avoid CamelCase: <bDebugOutEndpoint>
#641: FILE: arch/x86/kernel/early_printk.c:692:
+	dbgp_endpoint_out = dbgp_desc.bDebugOutEndpoint;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#646: FILE: arch/x86/kernel/early_printk.c:697:
+		ret = dbgp_control_msg(devnum,
+			USB_DIR_OUT | USB_TYPE_STANDARD | USB_RECIP_DEVICE,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#650: FILE: arch/x86/kernel/early_printk.c:701:
+			dbgp_printk("Could not move attached device to %d\n",
+				USB_DEBUG_DEVNUM);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#658: FILE: arch/x86/kernel/early_printk.c:709:
+	ret = dbgp_control_msg(USB_DEBUG_DEVNUM,
+		USB_DIR_OUT | USB_TYPE_STANDARD | USB_RECIP_DEVICE,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#673: FILE: arch/x86/kernel/early_printk.c:724:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#685: FILE: arch/x86/kernel/early_printk.c:736:
+static void early_dbgp_write(struct console *con, const char *str, unsigned n)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#696: FILE: arch/x86/kernel/early_printk.c:747:
+		ret = dbgp_bulk_write(USB_DEBUG_DEVNUM,
+			dbgp_endpoint_out, str, chunk);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "strstr"
#747: FILE: arch/x86/kernel/early_printk.c:831:
+	keep_early = (strstr(buf, "keep") != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#756: FILE: arch/x86/kernel/early_printk.c:850:
+		if (early_dbgp_init(buf+4) < 0)
 		                       ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000250445.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 32 warnings, 39 checks, 787 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000250445.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
