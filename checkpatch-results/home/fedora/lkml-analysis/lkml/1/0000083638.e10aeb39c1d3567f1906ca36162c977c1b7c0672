WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#50: 
> Isn't it best to rename the driver in drivers/watchdog also to nuc900_wdt.c ?

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#94: FILE: drivers/watchdog/Kconfig:269:
+config NUC900_WATCHDOG
+	tristate "Nuvoton NUC900 watchdog"
 	depends on ARCH_W90X900
 	help
 	  Say Y here if to include support for the watchdog timer
+	  for the Nuvoton NUC900 series SoCs.
+	  for the Nuvoton NUC900 series SoCs.
 	  To compile this driver as a module, choose M here: the
+	  module will be called nuc900_wdt.
+	  module will be called nuc900_wdt.
 
 # AVR32 Architecture
 

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#121: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#126: FILE: drivers/watchdog/nuc900_wdt.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#174: FILE: drivers/watchdog/nuc900_wdt.c:49:
+#define WDT_TIMEOUT		(HZ/2)
                    		   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#180: FILE: drivers/watchdog/nuc900_wdt.c:55:
+MODULE_PARM_DESC(heartbeat, "Watchdog heartbeats in seconds. "
+	"(default = " __MODULE_STRING(WDT_HEARTBEAT) ")");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#185: FILE: drivers/watchdog/nuc900_wdt.c:60:
+MODULE_PARM_DESC(nowayout, "Watchdog cannot be stopped once started "
+	"(default=" __MODULE_STRING(WATCHDOG_NOWAYOUT) ")");

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#194: FILE: drivers/watchdog/nuc900_wdt.c:69:
+	spinlock_t       wdt_lock;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#254: FILE: drivers/watchdog/nuc900_wdt.c:129:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#265: FILE: drivers/watchdog/nuc900_wdt.c:140:
+	if (nuc900_wdt->expect_close == 42)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#267: FILE: drivers/watchdog/nuc900_wdt.c:142:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#269: FILE: drivers/watchdog/nuc900_wdt.c:144:
+		dev_crit(&nuc900_wdt->pdev->dev,
+			"Unexpected close, not stopping watchdog!\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#285: FILE: drivers/watchdog/nuc900_wdt.c:160:
+static long nuc900_wdt_ioctl(struct file *file,
+					unsigned int cmd, unsigned long arg)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#319: FILE: drivers/watchdog/nuc900_wdt.c:194:
+static ssize_t nuc900_wdt_write(struct file *file, const char __user *data,
+						size_t len, loff_t *ppos)

WARNING:LINE_SPACING: Missing a blank line after declarations
#332: FILE: drivers/watchdog/nuc900_wdt.c:207:
+			char c;
+			if (get_user(c, data + i))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#347: FILE: drivers/watchdog/nuc900_wdt.c:222:
+	if (time_before(jiffies, nuc900_wdt->next_heartbeat)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#350: FILE: drivers/watchdog/nuc900_wdt.c:225:
+	} else

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#369: FILE: drivers/watchdog/nuc900_wdt.c:244:
+static int __devinit nuc900wdt_probe(struct platform_device *pdev)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*nuc900_wdt)...) over kzalloc(sizeof(struct nuc900_wdt)...)
#373: FILE: drivers/watchdog/nuc900_wdt.c:248:
+	nuc900_wdt = kzalloc(sizeof(struct nuc900_wdt), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!nuc900_wdt->res"
#382: FILE: drivers/watchdog/nuc900_wdt.c:257:
+	if (nuc900_wdt->res == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#396: FILE: drivers/watchdog/nuc900_wdt.c:271:
+	nuc900_wdt->wdt_base = ioremap(nuc900_wdt->res->start,
+					resource_size(nuc900_wdt->res));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!nuc900_wdt->wdt_base"
#397: FILE: drivers/watchdog/nuc900_wdt.c:272:
+	if (nuc900_wdt->wdt_base == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#429: FILE: drivers/watchdog/nuc900_wdt.c:304:
+	release_mem_region(nuc900_wdt->res->start,
+					resource_size(nuc900_wdt->res));

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#435: FILE: drivers/watchdog/nuc900_wdt.c:310:
+static int __devexit nuc900wdt_remove(struct platform_device *pdev)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#445: FILE: drivers/watchdog/nuc900_wdt.c:320:
+	release_mem_region(nuc900_wdt->res->start,
+					resource_size(nuc900_wdt->res));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000083638.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 16 checks, 379 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000083638.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
