CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*sun)...) over kmalloc(sizeof(struct sockaddr_un)...)
#82: FILE: arch/um/drivers/daemon_user.c:38:
+	sun = kmalloc(sizeof(struct sockaddr_un), UM_GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*sun)...) over kmalloc(sizeof(struct sockaddr_un)...)
#91: FILE: arch/um/drivers/daemon_user.c:86:
+	sun = kmalloc(sizeof(struct sockaddr_un), UM_GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*sin)...) over kmalloc(sizeof(struct sockaddr_in)...)
#117: FILE: arch/um/drivers/mcast_user.c:33:
+	sin = kmalloc(sizeof(struct sockaddr_in), UM_GFP_KERNEL);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#199: FILE: arch/um/include/um_malloc.h:11:
+extern void *__kmalloc(int size, int flags);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#208: FILE: arch/um/include/um_malloc.h:19:
+extern void *vmalloc(unsigned long size);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#306: FILE: arch/um/os-Linux/main.c:239:
+	else ret = vmalloc(size);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#319: FILE: arch/um/os-Linux/sigio.c:108:
+	new = kmalloc(n * sizeof(struct pollfd), UM_GFP_ATOMIC);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*p)...) over kmalloc(sizeof(struct pollfd)...)
#328: FILE: arch/um/os-Linux/sigio.c:236:
+	p = kmalloc(sizeof(struct pollfd), UM_GFP_KERNEL);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000418338.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 1 warnings, 6 checks, 196 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000418338.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
