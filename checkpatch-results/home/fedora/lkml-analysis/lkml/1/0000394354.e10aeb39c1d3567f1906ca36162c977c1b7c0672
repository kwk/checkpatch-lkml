CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: fs/9p/vfs_inode.c:566:
+	P9_DPRINTK(P9_DEBUG_VFS, "dir: %p dentry: (%s) %p lookup: %p\n",
+		dir, dentry->d_name.name, dentry, lookup);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#136: FILE: fs/affs/affs.h:156:
+extern struct dentry *affs_lookup(struct inode *dir, struct dentry *dentry, struct vfs_lookup *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfs_lookup *' should also have an identifier name
#136: FILE: fs/affs/affs.h:156:
+extern struct dentry *affs_lookup(struct inode *dir, struct dentry *dentry, struct vfs_lookup *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:SPACING: space required after that ',' (ctx:OxV)
#198: FILE: fs/autofs/root.c:22:
+static struct dentry *autofs_root_lookup(struct inode *,struct dentry *, struct vfs_lookup *);
                                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#207: FILE: fs/autofs/root.c:199:
+static struct dentry *autofs_root_lookup(struct inode *dir, struct dentry *dentry, struct vfs_lookup *lookup)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:OxV)
#227: FILE: fs/autofs4/root.c:31:
+static struct dentry *autofs4_lookup(struct inode *,struct dentry *, struct vfs_lookup *);
                                                    ^

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#236: FILE: fs/autofs4/root.c:568:
+static struct dentry *autofs4_lookup(struct inode *dir, struct dentry *dentry, struct vfs_lookup *lookup)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (dentry->d_op->d_revalidate)
#245: FILE: fs/autofs4/root.c:630:
+		(dentry->d_op->d_revalidate)(dentry, lookup);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#287: FILE: fs/bfs/dir.c:130:
+static struct dentry * bfs_lookup(struct inode * dir, struct dentry * dentry, struct vfs_lookup *lookup)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#287: FILE: fs/bfs/dir.c:130:
+static struct dentry * bfs_lookup(struct inode * dir, struct dentry * dentry, struct vfs_lookup *lookup)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#287: FILE: fs/bfs/dir.c:130:
+static struct dentry * bfs_lookup(struct inode * dir, struct dentry * dentry, struct vfs_lookup *lookup)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#287: FILE: fs/bfs/dir.c:130:
+static struct dentry * bfs_lookup(struct inode * dir, struct dentry * dentry, struct vfs_lookup *lookup)

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#320: FILE: fs/coda/dir.c:33:
+static struct dentry *coda_lookup(struct inode *dir, struct dentry *target, struct vfs_lookup *lookup);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#329: FILE: fs/coda/dir.c:96:
+static struct dentry *coda_lookup(struct inode *dir, struct dentry *entry, struct vfs_lookup *lookup)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#360: FILE: fs/cramfs/inode.c:408:
+static struct dentry * cramfs_lookup(struct inode *dir, struct dentry *dentry,

WARNING:SPLIT_STRING: quoted string split across lines
#385: FILE: fs/ecryptfs/inode.c:358:
+		ecryptfs_printk(KERN_DEBUG, "We have a NULL vfs_lookup, just "
+				"leave as we *think* we are about to unlink\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#405: FILE: fs/efs/namei.c:60:
+struct dentry *efs_lookup(struct inode *dir, struct dentry *dentry, struct vfs_lookup *lookup) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#416: FILE: fs/ext2/namei.c:55:
+static struct dentry *ext2_lookup(struct inode * dir, struct dentry *dentry, struct vfs_lookup *lookup)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#416: FILE: fs/ext2/namei.c:55:
+static struct dentry *ext2_lookup(struct inode * dir, struct dentry *dentry, struct vfs_lookup *lookup)

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#427: FILE: fs/ext3/namei.c:999:
+static struct dentry *ext3_lookup(struct inode * dir, struct dentry *dentry, struct vfs_lookup *lookup)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#427: FILE: fs/ext3/namei.c:999:
+static struct dentry *ext3_lookup(struct inode * dir, struct dentry *dentry, struct vfs_lookup *lookup)

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#438: FILE: fs/ext4/namei.c:997:
+static struct dentry *ext4_lookup(struct inode * dir, struct dentry *dentry, struct vfs_lookup *lookup)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#438: FILE: fs/ext4/namei.c:997:
+static struct dentry *ext4_lookup(struct inode * dir, struct dentry *dentry, struct vfs_lookup *lookup)

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#449: FILE: fs/freevxfs/vxfs_lookup.c:52:
+static struct dentry *	vxfs_lookup(struct inode *, struct dentry *, struct vfs_lookup *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#563: FILE: fs/hpfs/hpfs_fn.h:241:
+struct dentry *hpfs_lookup(struct inode *, struct dentry *, struct vfs_lookup *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#563: FILE: fs/hpfs/hpfs_fn.h:241:
+struct dentry *hpfs_lookup(struct inode *, struct dentry *, struct vfs_lookup *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfs_lookup *' should also have an identifier name
#563: FILE: fs/hpfs/hpfs_fn.h:241:
+struct dentry *hpfs_lookup(struct inode *, struct dentry *, struct vfs_lookup *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#574: FILE: fs/isofs/isofs.h:115:
+extern struct dentry *isofs_lookup(struct inode *, struct dentry *, struct vfs_lookup *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#574: FILE: fs/isofs/isofs.h:115:
+extern struct dentry *isofs_lookup(struct inode *, struct dentry *, struct vfs_lookup *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#574: FILE: fs/isofs/isofs.h:115:
+extern struct dentry *isofs_lookup(struct inode *, struct dentry *, struct vfs_lookup *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfs_lookup *' should also have an identifier name
#574: FILE: fs/isofs/isofs.h:115:
+extern struct dentry *isofs_lookup(struct inode *, struct dentry *, struct vfs_lookup *);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#616: FILE: fs/jfs/namei.c:1431:
+static struct dentry *jfs_lookup(struct inode *dip, struct dentry *dentry, struct vfs_lookup *lookup)

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#638: FILE: fs/minix/namei.c:45:
+static struct dentry *minix_lookup(struct inode * dir, struct dentry *dentry, struct vfs_lookup *lookup)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#638: FILE: fs/minix/namei.c:45:
+static struct dentry *minix_lookup(struct inode * dir, struct dentry *dentry, struct vfs_lookup *lookup)

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#689: FILE: fs/ncpfs/dir.c:794:
+static struct dentry *ncp_lookup(struct inode *dir, struct dentry *dentry, struct vfs_lookup *lookup)

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#718: FILE: fs/nfs/dir.c:911:
+static struct dentry *nfs_lookup(struct inode *dir, struct dentry * dentry, struct vfs_lookup *lookup)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#718: FILE: fs/nfs/dir.c:911:
+static struct dentry *nfs_lookup(struct inode *dir, struct dentry * dentry, struct vfs_lookup *lookup)

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#736: FILE: fs/nfs/dir.c:1007:
+static struct dentry *nfs_atomic_lookup(struct inode *dir, struct dentry *dentry, struct vfs_lookup *lookup)

CHECK:BRACES: braces {} should be used on all arms of this statement
#763: FILE: fs/nfs/dir.c:1041:
+	if (lookup->intent.open.flags & O_CREAT) {
[...]
 		nfs_end_data_update(dir);
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#799: FILE: fs/nfs/nfs4_fs.h:182:
+extern struct dentry *nfs4_atomic_open(struct inode *, struct dentry *, struct vfs_lookup *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#799: FILE: fs/nfs/nfs4_fs.h:182:
+extern struct dentry *nfs4_atomic_open(struct inode *, struct dentry *, struct vfs_lookup *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#799: FILE: fs/nfs/nfs4_fs.h:182:
+extern struct dentry *nfs4_atomic_open(struct inode *, struct dentry *, struct vfs_lookup *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfs_lookup *' should also have an identifier name
#799: FILE: fs/nfs/nfs4_fs.h:182:
+extern struct dentry *nfs4_atomic_open(struct inode *, struct dentry *, struct vfs_lookup *);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#833: FILE: fs/nfs/nfs4proc.c:1425:
+		BUG_ON(lookup->intent.open.flags & O_CREAT);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#920: FILE: fs/proc/base.c:2116:
+static struct dentry *proc_tgid_base_lookup(struct inode *dir, struct dentry *dentry, struct vfs_lookup *lookup){

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#920: FILE: fs/proc/base.c:2116:
+static struct dentry *proc_tgid_base_lookup(struct inode *dir, struct dentry *dentry, struct vfs_lookup *lookup){

ERROR:SPACING: space required before the open brace '{'
#920: FILE: fs/proc/base.c:2116:
+static struct dentry *proc_tgid_base_lookup(struct inode *dir, struct dentry *dentry, struct vfs_lookup *lookup){

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#929: FILE: fs/proc/base.c:2224:
+struct dentry *proc_pid_lookup(struct inode *dir, struct dentry * dentry, struct vfs_lookup *lookup)

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#938: FILE: fs/proc/base.c:2391:
+static struct dentry *proc_tid_base_lookup(struct inode *dir, struct dentry *dentry, struct vfs_lookup *lookup){

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#938: FILE: fs/proc/base.c:2391:
+static struct dentry *proc_tid_base_lookup(struct inode *dir, struct dentry *dentry, struct vfs_lookup *lookup){

ERROR:SPACING: space required before the open brace '{'
#938: FILE: fs/proc/base.c:2391:
+static struct dentry *proc_tid_base_lookup(struct inode *dir, struct dentry *dentry, struct vfs_lookup *lookup){

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#947: FILE: fs/proc/base.c:2435:
+static struct dentry *proc_task_lookup(struct inode *dir, struct dentry * dentry, struct vfs_lookup *lookup)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#947: FILE: fs/proc/base.c:2435:
+static struct dentry *proc_task_lookup(struct inode *dir, struct dentry * dentry, struct vfs_lookup *lookup)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#958: FILE: fs/proc/generic.c:386:
+struct dentry *proc_lookup(struct inode * dir, struct dentry *dentry, struct vfs_lookup *lookup)

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#980: FILE: fs/proc/root.c:93:
+static struct dentry *proc_root_lookup(struct inode * dir, struct dentry * dentry, struct vfs_lookup *lookup)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#980: FILE: fs/proc/root.c:93:
+static struct dentry *proc_root_lookup(struct inode * dir, struct dentry * dentry, struct vfs_lookup *lookup)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#980: FILE: fs/proc/root.c:93:
+static struct dentry *proc_root_lookup(struct inode * dir, struct dentry * dentry, struct vfs_lookup *lookup)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#983: FILE: fs/proc/root.c:95:
+	if (!proc_lookup(dir, dentry, lookup)) {
 		return NULL;
 	}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#999: FILE: fs/qnx4/namei.c:109:
+struct dentry * qnx4_lookup(struct inode *dir, struct dentry *dentry, struct vfs_lookup *lookup)

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1064: FILE: fs/sysv/namei.c:45:
+static struct dentry *sysv_lookup(struct inode * dir, struct dentry * dentry, struct vfs_lookup *lookup)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1064: FILE: fs/sysv/namei.c:45:
+static struct dentry *sysv_lookup(struct inode * dir, struct dentry * dentry, struct vfs_lookup *lookup)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1064: FILE: fs/sysv/namei.c:45:
+static struct dentry *sysv_lookup(struct inode * dir, struct dentry * dentry, struct vfs_lookup *lookup)

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1086: FILE: fs/ufs/namei.c:49:
+static struct dentry *ufs_lookup(struct inode * dir, struct dentry *dentry, struct vfs_lookup *lookup)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1086: FILE: fs/ufs/namei.c:49:
+static struct dentry *ufs_lookup(struct inode * dir, struct dentry *dentry, struct vfs_lookup *lookup)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1119: FILE: include/linux/efs_fs.h:47:
+extern struct dentry *efs_lookup(struct inode *, struct dentry *, struct vfs_lookup *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1119: FILE: include/linux/efs_fs.h:47:
+extern struct dentry *efs_lookup(struct inode *, struct dentry *, struct vfs_lookup *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1119: FILE: include/linux/efs_fs.h:47:
+extern struct dentry *efs_lookup(struct inode *, struct dentry *, struct vfs_lookup *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfs_lookup *' should also have an identifier name
#1119: FILE: include/linux/efs_fs.h:47:
+extern struct dentry *efs_lookup(struct inode *, struct dentry *, struct vfs_lookup *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1130: FILE: include/linux/fs.h:1137:
+	struct dentry * (*lookup) (struct inode *,struct dentry *, struct vfs_lookup *);

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1130: FILE: include/linux/fs.h:1137:
+	struct dentry * (*lookup) (struct inode *,struct dentry *, struct vfs_lookup *);
 	                                         ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1130: FILE: include/linux/fs.h:1137:
+	struct dentry * (*lookup) (struct inode *,struct dentry *, struct vfs_lookup *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1130: FILE: include/linux/fs.h:1137:
+	struct dentry * (*lookup) (struct inode *,struct dentry *, struct vfs_lookup *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfs_lookup *' should also have an identifier name
#1130: FILE: include/linux/fs.h:1137:
+	struct dentry * (*lookup) (struct inode *,struct dentry *, struct vfs_lookup *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1139: FILE: include/linux/fs.h:1820:
+extern struct dentry *simple_lookup(struct inode *, struct dentry *, struct vfs_lookup *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1139: FILE: include/linux/fs.h:1820:
+extern struct dentry *simple_lookup(struct inode *, struct dentry *, struct vfs_lookup *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1139: FILE: include/linux/fs.h:1820:
+extern struct dentry *simple_lookup(struct inode *, struct dentry *, struct vfs_lookup *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfs_lookup *' should also have an identifier name
#1139: FILE: include/linux/fs.h:1820:
+extern struct dentry *simple_lookup(struct inode *, struct dentry *, struct vfs_lookup *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1150: FILE: include/linux/proc_fs.h:115:
+struct dentry *proc_pid_lookup(struct inode *dir, struct dentry * dentry, struct vfs_lookup *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfs_lookup *' should also have an identifier name
#1150: FILE: include/linux/proc_fs.h:115:
+struct dentry *proc_pid_lookup(struct inode *dir, struct dentry * dentry, struct vfs_lookup *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1159: FILE: include/linux/proc_fs.h:141:
+extern struct dentry *proc_lookup(struct inode *, struct dentry *, struct vfs_lookup *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1159: FILE: include/linux/proc_fs.h:141:
+extern struct dentry *proc_lookup(struct inode *, struct dentry *, struct vfs_lookup *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1159: FILE: include/linux/proc_fs.h:141:
+extern struct dentry *proc_lookup(struct inode *, struct dentry *, struct vfs_lookup *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfs_lookup *' should also have an identifier name
#1159: FILE: include/linux/proc_fs.h:141:
+extern struct dentry *proc_lookup(struct inode *, struct dentry *, struct vfs_lookup *);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1170: FILE: include/linux/qnx4_fs.h:113:
+extern struct dentry *qnx4_lookup(struct inode *dir, struct dentry *dentry, struct vfs_lookup *lookup);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1170: FILE: include/linux/qnx4_fs.h:113:
+extern struct dentry *qnx4_lookup(struct inode *dir, struct dentry *dentry, struct vfs_lookup *lookup);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000394354.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 28 errors, 47 warnings, 10 checks, 854 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000394354.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
