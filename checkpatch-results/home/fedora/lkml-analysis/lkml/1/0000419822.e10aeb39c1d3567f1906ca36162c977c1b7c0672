CHECK:LINE_SPACING: Please don't use multiple blank lines
#87: FILE: kernel/sched_fair.c:79:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#149: FILE: kernel/sched_fair.c:131:
+static inline struct rb_node * first_fair(struct lrq *lrq)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#163: FILE: kernel/sched_fair.c:140:
+static struct sched_entity * __pick_next_entity(struct lrq *lrq)

CHECK:BRACES: braces {} should be used on all arms of this statement
#358: FILE: kernel/sched_fair.c:306:
+	if (likely(p->load_weight == NICE_0_LOAD))
[...]
 	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#402: FILE: kernel/sched_fair.c:337:
+			delta_fair = div64_s(delta_fair * p->load_weight,
 								NICE_0_LOAD);

WARNING:TABSTOP: Statements should start on a tabstop
#479: FILE: kernel/sched_fair.c:402:
+		 if (curr)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#500: FILE: kernel/sched_fair.c:419:
+	if ((entity_is_task(p) && tsk->policy == SCHED_BATCH) ||
+						 !(sysctl_sched_features & 4))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#639: FILE: kernel/sched_fair.c:527:
+static struct sched_entity * pick_next_entity(struct lrq *lrq, u64 now)

CHECK:BRACES: braces {} should be used on all arms of this statement
#666: FILE: kernel/sched_fair.c:554:
+		if (prev->on_rq &&
[...]
+		} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#667: FILE: kernel/sched_fair.c:555:
+		if (prev->on_rq &&
+			test_tsk_thread_flag(prevtask, TIF_NEED_RESCHED)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#668: FILE: kernel/sched_fair.c:556:
+			test_tsk_thread_flag(prevtask, TIF_NEED_RESCHED)) {
+

CHECK:BRACES: Unbalanced braces around else statement
#673: FILE: kernel/sched_fair.c:561:
+		} else

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'curtask == rq->idle'
#711: FILE: kernel/sched_fair.c:599:
+		if ((curtask == rq->idle) || (rt_prio(nexttask->prio) &&
+					(nexttask->prio < curtask->prio))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nexttask->prio < curtask->prio'
#711: FILE: kernel/sched_fair.c:599:
+		if ((curtask == rq->idle) || (rt_prio(nexttask->prio) &&
+					(nexttask->prio < curtask->prio))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#712: FILE: kernel/sched_fair.c:600:
+		if ((curtask == rq->idle) || (rt_prio(nexttask->prio) &&
+					(nexttask->prio < curtask->prio))) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#720: FILE: kernel/sched_fair.c:608:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000419822.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 1 warnings, 12 checks, 924 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000419822.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
