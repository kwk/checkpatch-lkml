WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#52: FILE: arch/i386/kernel/alternative.c:68:
+extern const unsigned char intelnops[];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#53: FILE: arch/i386/kernel/alternative.c:69:
+static const unsigned char *const intel_nops[ASM_NOP_MAX+1] = {
                                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#67: FILE: arch/i386/kernel/alternative.c:86:
+extern const unsigned char k8nops[];

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#68: FILE: arch/i386/kernel/alternative.c:87:
+static const unsigned char *const k8_nops[ASM_NOP_MAX+1] = {
                                                      ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#82: FILE: arch/i386/kernel/alternative.c:104:
+extern const unsigned char k7nops[];

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#83: FILE: arch/i386/kernel/alternative.c:105:
+static const unsigned char *const k7_nops[ASM_NOP_MAX+1] = {
                                                      ^

ERROR:POINTER_LOCATION: "foo*const * bar" should be "foo *const *bar"
#92: FILE: arch/i386/kernel/alternative.c:121:
+static inline const unsigned char*const * find_nop_table(void)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo*const * bar" should be "foo *const *bar"
#111: FILE: arch/i386/kernel/alternative.c:137:
+static const unsigned char*const * find_nop_table(void)

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#137: FILE: arch/i386/kernel/smpboot.c:105:
+extern const unsigned char trampoline_data [];

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#137: FILE: arch/i386/kernel/smpboot.c:105:
+extern const unsigned char trampoline_data [];

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#138: FILE: arch/i386/kernel/smpboot.c:106:
+extern const unsigned char trampoline_end  [];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#138: FILE: arch/i386/kernel/smpboot.c:106:
+extern const unsigned char trampoline_end  [];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#170: FILE: arch/i386/mach-voyager/voyager_smp.c:445:
+	extern const __u8 trampoline_end[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#171: FILE: arch/i386/mach-voyager/voyager_smp.c:446:
+	extern const __u8 trampoline_data[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#207: FILE: arch/x86_64/kernel/smpboot.c:105:
+extern const unsigned char trampoline_data[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#208: FILE: arch/x86_64/kernel/smpboot.c:106:
+extern const unsigned char trampoline_end[];

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000377973.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 9 warnings, 3 checks, 152 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000377973.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
