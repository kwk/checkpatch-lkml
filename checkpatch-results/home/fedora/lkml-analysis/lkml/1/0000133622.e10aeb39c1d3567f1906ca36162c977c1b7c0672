WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
Reimplement inotify_user using fsnotify.  This should be feature for feature

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#60: FILE: MAINTAINERS:2842:
+P:	Eric Paris
+M:	eparis@parisplace.org

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#121: FILE: fs/notify/inotify/inotify.h:1:
+#include <linux/fsnotify_backend.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#138: FILE: fs/notify/inotify/inotify.h:18:
+extern void inotify_destroy_mark_entry(struct fsnotify_mark_entry *entry, struct fsnotify_group *group);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#138: FILE: fs/notify/inotify/inotify.h:18:
+extern void inotify_destroy_mark_entry(struct fsnotify_mark_entry *entry, struct fsnotify_group *group);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#139: FILE: fs/notify/inotify/inotify.h:19:
+extern void __inotify_free_event_priv(struct inotify_event_private_data *event_priv);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#148: FILE: fs/notify/inotify/inotify_fsnotify.c:1:
+/*

WARNING:TYPO_SPELLING: 'rewriten' may be misspelled - perhaps 'rewritten'?
#159: FILE: fs/notify/inotify/inotify_fsnotify.c:12:
+ * inotify was largely rewriten to make use of the fsnotify infrastructure
                        ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#249: FILE: fs/notify/inotify/inotify_fsnotify.c:102:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:TYPO_SPELLING: 'teh' may be misspelled - perhaps 'the'?
#255: FILE: fs/notify/inotify/inotify_fsnotify.c:108:
+	/* ideally the idr is empty and we won't hit the BUG in teh callback */
 	                                                        ^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#278: FILE: fs/notify/inotify/inotify_fsnotify.c:131:
+	BUG_ON(!fsn_event_priv);

WARNING:TYPO_SPELLING: 'rewriten' may be misspelled - perhaps 'rewritten'?
#304: FILE: fs/notify/inotify/inotify_user.c:12:
+ * inotify was largely rewriten to make use of the fsnotify infrastructure
                        ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#761: FILE: fs/notify/inotify/inotify_user.c:167:
+	 * same event we peeked above */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: No space is necessary after a cast
#937: FILE: fs/notify/inotify/inotify_user.c:324:
+		ret = put_user(send_len, (int __user *) p);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#966: FILE: fs/notify/inotify/inotify_user.c:344:
+static int inotify_find_inode(const char __user *dirname, struct path *path, unsigned flags)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#986: FILE: fs/notify/inotify/inotify_user.c:364:
+ * ^Iinotify_destroy_mark_entry -> fsnotify_destroy_mark_by_entry ->$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1006: FILE: fs/notify/inotify/inotify_user.c:384:
+	 * for this inode, on the callback we'll send the IN_IGNORED */

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#1023: FILE: fs/notify/inotify/inotify_user.c:401:
+	ret = fsnotify_add_notify_event(group, inotify_ignored_event, &event_priv->fsnotify_event_priv_data);

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1077: FILE: fs/notify/inotify/inotify_user.c:455:
+		if (atomic_read(&group->inotify_data.user->inotify_watches) >= inotify_max_user_watches) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1097: FILE: fs/notify/inotify/inotify_user.c:475:
+		 * when entry is removed from idr */

WARNING:LONG_LINE_COMMENT: line length of 107 exceeds 100 columns
#1156: FILE: fs/notify/inotify/inotify_user.c:534:
+	/* fsnotify_obtain_group took a reference to group, we put this when we kill the file in the end */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1173: FILE: fs/notify/inotify/inotify_user.c:551:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE_COMMENT: line length of 107 exceeds 100 columns
#1190: FILE: fs/notify/inotify/inotify_user.c:584:
+	/* fsnotify_obtain_group took a reference to group, we put this when we kill the file in the end */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1321: FILE: fs/notify/inotify/inotify_user.c:709:
+    .name^I= "inotifyfs",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1322: FILE: fs/notify/inotify/inotify_user.c:710:
+    .get_sb^I= inotify_get_sb,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1323: FILE: fs/notify/inotify/inotify_user.c:711:
+    .kill_sb^I= kill_anon_super,$

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#1333: FILE: fs/notify/inotify/inotify_user.c:733:
+	inotify_ignored_event = fsnotify_create_event(NULL, FS_IN_IGNORED, NULL, FSNOTIFY_EVENT_NONE, NULL, 0);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1368: FILE: include/linux/fsnotify_backend.h:63:
+#define INOTIFY_GROUP_NUM	(DNOTIFY_GROUP_NUM-1)
                          	                  ^

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1378: FILE: include/linux/fsnotify_backend.h:147:
+			spinlock_t	idr_lock;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000133622.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 23 warnings, 6 checks, 1292 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000133622.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
