WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#52: 
next step will make irte and iommu related to use irq_desc instead of irq to avoid irq_to_desc in fast calling path.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#126: FILE: arch/x86/include/asm/hpet.h:77:
+extern void hpet_msi_unmask(struct irq_desc *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct irq_desc *' should also have an identifier name
#126: FILE: arch/x86/include/asm/hpet.h:77:
+extern void hpet_msi_unmask(struct irq_desc *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#127: FILE: arch/x86/include/asm/hpet.h:78:
+extern void hpet_msi_mask(struct irq_desc *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct irq_desc *' should also have an identifier name
#127: FILE: arch/x86/include/asm/hpet.h:78:
+extern void hpet_msi_mask(struct irq_desc *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#128: FILE: arch/x86/include/asm/hpet.h:79:
+extern void hpet_msi_write(struct irq_desc *desc, struct msi_msg *msg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#129: FILE: arch/x86/include/asm/hpet.h:80:
+extern void hpet_msi_read(struct irq_desc *desc, struct msi_msg *msg);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#308: FILE: arch/x86/kernel/apic/io_apic.c:2423:
+static int set_ir_ioapic_affinity_irq(struct irq_desc *desc,
 					    const struct cpumask *mask)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#323: FILE: arch/x86/kernel/apic/io_apic.c:2429:
+static inline int set_ir_ioapic_affinity_irq(struct irq_desc *desc,
 						   const struct cpumask *mask)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#331: FILE: arch/x86/kernel/apic/io_apic.c:2486:
+static void __irq_complete_move(struct irq_desc *desc, unsigned vector)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1075: FILE: arch/x86/kernel/i8259.c:390:
 };
+static int legacy_pic_irq_pending_noop(struct irq_desc *desc)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1459: FILE: drivers/pci/dmar.c:1255:
 }
+void dmar_msi_unmask(unsigned int irq)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1494: FILE: drivers/pci/dmar.c:1289:
 }
+void dmar_msi_write(int irq, struct msi_msg *msg)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1720: FILE: include/linux/dmar.h:194:
+extern void dmar_msi_unmask_desc(struct irq_desc *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct irq_desc *' should also have an identifier name
#1720: FILE: include/linux/dmar.h:194:
+extern void dmar_msi_unmask_desc(struct irq_desc *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1721: FILE: include/linux/dmar.h:195:
+extern void dmar_msi_mask_desc(struct irq_desc *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct irq_desc *' should also have an identifier name
#1721: FILE: include/linux/dmar.h:195:
+extern void dmar_msi_mask_desc(struct irq_desc *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1722: FILE: include/linux/dmar.h:196:
+extern void dmar_msi_read_desc(struct irq_desc *desc, struct msi_msg *msg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1723: FILE: include/linux/dmar.h:197:
+extern void dmar_msi_write_desc(struct irq_desc *desc, struct msi_msg *msg);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct irq_desc *' should also have an identifier name
#1742: FILE: include/linux/htirq.h:13:
+void mask_ht_irq(struct irq_desc *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct irq_desc *' should also have an identifier name
#1743: FILE: include/linux/htirq.h:14:
+void unmask_ht_irq(struct irq_desc *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1784: FILE: include/linux/irq.h:153:
+	int		(*desc_set_affinity)(struct irq_desc *desc,
+					const struct cpumask *dest);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1814: FILE: include/linux/irq.h:268:
+}
+static inline void

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1822: FILE: include/linux/irq.h:276:
+}
+static inline void

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1830: FILE: include/linux/irq.h:284:
+}
+static inline void

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1838: FILE: include/linux/irq.h:292:
+}
+static inline void

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1846: FILE: include/linux/irq.h:300:
+}
+static inline void

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1854: FILE: include/linux/irq.h:308:
+}
+static inline void

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1862: FILE: include/linux/irq.h:316:
+}
+static inline void

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1870: FILE: include/linux/irq.h:324:
+}
+static inline void

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1878: FILE: include/linux/irq.h:332:
+}
+static inline void

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1886: FILE: include/linux/irq.h:340:
+}
+static inline int

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#1887: FILE: include/linux/irq.h:341:
+desc_chip_set_affinity(struct irq_chip *chip, unsigned int irq, struct irq_desc *desc, const struct cpumask *dest)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1895: FILE: include/linux/irq.h:349:
+}
+static inline int

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct irq_desc *' should also have an identifier name
#1950: FILE: include/linux/msi.h:16:
+void mask_msi_irq_desc(struct irq_desc *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct irq_desc *' should also have an identifier name
#1951: FILE: include/linux/msi.h:17:
+void unmask_msi_irq_desc(struct irq_desc *);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2015: FILE: kernel/irq/chip.c:297:
 }
+static void default_enable_desc(struct irq_desc *desc)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2027: FILE: kernel/irq/chip.c:309:
 }
+static void default_disable_desc(struct irq_desc *desc)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2037: FILE: kernel/irq/chip.c:323:
 }
+static unsigned int default_startup_desc(struct irq_desc *desc)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2049: FILE: kernel/irq/chip.c:339:
 }
+static void default_shutdown_desc(struct irq_desc *desc)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2078: FILE: kernel/irq/chip.c:368:
+
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#2100: FILE: kernel/irq/chip.c:393:
+	if (desc->chip->desc_mask_ack)
[...]
+	else if (desc->chip->mask_ack)
[...]
 	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2257: FILE: kernel/irq/handle.c:301:
 }
+static void ack_bad_desc(struct irq_desc *desc)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2269: FILE: kernel/irq/handle.c:313:
 }
+static void noop_desc(struct irq_desc *desc)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2277: FILE: kernel/irq/handle.c:321:
 }
+static unsigned int noop_ret_desc(struct irq_desc *des)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2356: FILE: kernel/irq/internals.h:15:
+extern void __disable_irq(struct irq_desc *desc, bool susp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2357: FILE: kernel/irq/internals.h:16:
+extern void __enable_irq(struct irq_desc *desc, bool resume);

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#2366: FILE: kernel/irq/internals.h:44:
+desc_chip_set_type(struct irq_chip *chip, unsigned int irq, struct irq_desc *desc, unsigned int flow_type)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2374: FILE: kernel/irq/internals.h:52:
+}
+static inline int

WARNING:UNNECESSARY_KERN_LEVEL: Possible unnecessary KERN_WARNING
#2496: FILE: kernel/irq/manage.c:274:
+		WARN(1, KERN_WARNING "Unbalanced enable for IRQ %d\n", desc->irq);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000004911.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 13 warnings, 37 checks, 2478 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000004911.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
