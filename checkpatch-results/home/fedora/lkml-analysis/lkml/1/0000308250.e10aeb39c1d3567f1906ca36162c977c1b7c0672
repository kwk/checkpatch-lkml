CHECK:SPACING: No space is necessary after a cast
#94: FILE: include/linux/kernel.h:345:
+	(void) (&_min1 == &_min2);		\

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#100: FILE: include/linux/kernel.h:351:
+	(void) (&_max1 == &_max2);		\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'min' - possible side-effects?
#103: FILE: include/linux/kernel.h:354:
+#define clamp(val, min, max) ({				\
+	typeof(val) __val = (val);			\
+							\
+	if (__builtin_constant_p(min)) {		\
+		typeof(val) __min = (min);		\
+		__val = __val < __min ? __min: __val;	\
+	} else {					\
+		typeof(min) __min = (min);		\
+		(void) (&__val == &__min);		\
+		__val = __val < __min ? __min: __val;	\
+	}						\
+							\
+	if (__builtin_constant_p(max)) {		\
+		typeof(val) __max = (max);		\
+		__val > __max ? __max: __val;		\
+	} else {					\
+		typeof(max) __max = (max);		\
+		(void) (&__val == &__max);		\
+		__val > __max ? __max: __val;		\
+	} })

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'max' - possible side-effects?
#103: FILE: include/linux/kernel.h:354:
+#define clamp(val, min, max) ({				\
+	typeof(val) __val = (val);			\
+							\
+	if (__builtin_constant_p(min)) {		\
+		typeof(val) __min = (min);		\
+		__val = __val < __min ? __min: __val;	\
+	} else {					\
+		typeof(min) __min = (min);		\
+		(void) (&__val == &__min);		\
+		__val = __val < __min ? __min: __val;	\
+	}						\
+							\
+	if (__builtin_constant_p(max)) {		\
+		typeof(val) __max = (max);		\
+		__val > __max ? __max: __val;		\
+	} else {					\
+		typeof(max) __max = (max);		\
+		(void) (&__val == &__max);		\
+		__val > __max ? __max: __val;		\
+	} })

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#108: FILE: include/linux/kernel.h:359:
+		__val = __val < __min ? __min: __val;	\
 		                             ^

CHECK:SPACING: No space is necessary after a cast
#111: FILE: include/linux/kernel.h:362:
+		(void) (&__val == &__min);		\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#112: FILE: include/linux/kernel.h:363:
+		__val = __val < __min ? __min: __val;	\
 		                             ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#117: FILE: include/linux/kernel.h:368:
+		__val > __max ? __max: __val;		\
 		                     ^

CHECK:SPACING: No space is necessary after a cast
#120: FILE: include/linux/kernel.h:371:
+		(void) (&__val == &__max);		\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#121: FILE: include/linux/kernel.h:372:
+		__val > __max ? __max: __val;		\
 		                     ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#139: FILE: include/linux/kernel.h:384:
+	__min1 < __min2 ? __min1: __min2; })
 	                        ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#144: FILE: include/linux/kernel.h:389:
+	__max1 > __max2 ? __max1: __max2; })
 	                        ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#150: FILE: include/linux/kernel.h:395:
+	__val = __val < __min ? __min: __val;	\
 	                             ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#151: FILE: include/linux/kernel.h:396:
+	__val > __max ? __max: __val; })
 	                     ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000308250.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 0 warnings, 6 checks, 83 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000308250.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
