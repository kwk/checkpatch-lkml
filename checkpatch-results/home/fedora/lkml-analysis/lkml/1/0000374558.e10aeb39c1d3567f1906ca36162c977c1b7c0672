CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#87: FILE: include/linux/pid_namespace.h:43:
+extern void zap_pid_ns_processes(struct pid_namespace *pid_ns);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#105: FILE: include/linux/pid_namespace.h:61:
+static inline struct pid_namespace *copy_pid_ns(unsigned long flags,
+		struct pid_namespace *ns)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#115: FILE: include/linux/pid_namespace.h:71:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#363: FILE: kernel/pid.c:515:
+	init_pid_ns.pid_cachep = kmem_cache_create("pid", sizeof(struct pid),
+			0, SLAB_HWCACHE_ALIGN | SLAB_PANIC, NULL);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#366: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#371: FILE: kernel/pid_namespace.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#385: FILE: kernel/pid_namespace.c:15:
+#define BITS_PER_PAGE		(PAGE_SIZE*8)
                      		          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#409: FILE: kernel/pid_namespace.c:39:
+	list_for_each_entry (pcache, &pid_caches_lh, list)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*pcache)...) over kmalloc(sizeof(struct pid_cache)...)
#413: FILE: kernel/pid_namespace.c:43:
+	pcache = kmalloc(sizeof(struct pid_cache), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pcache"
#414: FILE: kernel/pid_namespace.c:44:
+	if (pcache == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#419: FILE: kernel/pid_namespace.c:49:
+	cachep = kmem_cache_create(pcache->name,
+			sizeof(struct pid) + (nr_ids - 1) * sizeof(struct upid),

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cachep"
#421: FILE: kernel/pid_namespace.c:51:
+	if (cachep == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ns"
#444: FILE: kernel/pid_namespace.c:74:
+	if (ns == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ns->pid_cachep"
#452: FILE: kernel/pid_namespace.c:82:
+	if (ns->pid_cachep == NULL)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#491: FILE: kernel/pid_namespace.c:121:
+	BUG_ON(!old_ns);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "parent"
#519: FILE: kernel/pid_namespace.c:149:
+	if (parent != NULL)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#534: FILE: kernel/pid_namespace.c:164:
+^I * ^I  belong to the same thread group, To avoid this, we would have$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#535: FILE: kernel/pid_namespace.c:165:
+^I * ^I  to walk the entire tasklist looking a processes in this$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#536: FILE: kernel/pid_namespace.c:166:
+^I * ^I  namespace, but that could be unnecessarily expensive if the$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#537: FILE: kernel/pid_namespace.c:167:
+^I * ^I  pid namespace has just a few processes. Or we need to$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#538: FILE: kernel/pid_namespace.c:168:
+^I * ^I  maintain a tasklist for each pid namespace.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#554: FILE: kernel/pid_namespace.c:184:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:RETURN_VOID: void function return statements are not generally useful
#558: FILE: kernel/pid_namespace.c:188:
+	return;
+}

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#566: FILE: kernel/pid_namespace.c:196:
+__initcall(pid_namespaces_init);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000374558.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 12 warnings, 12 checks, 486 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000374558.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
