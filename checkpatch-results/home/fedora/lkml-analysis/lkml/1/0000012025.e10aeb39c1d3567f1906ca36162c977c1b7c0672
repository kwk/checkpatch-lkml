WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
Gitweb:     http://git.kernel.org/tip/504d7cf10ee42bb76b9556859f23d4121dee0a77

ERROR:CODE_INDENT: code indent should use tabs where possible
#88: FILE: arch/x86/kernel/apic/hw_nmi.c:41:
+        return irqs;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: arch/x86/kernel/apic/hw_nmi.c:41:
+        return irqs;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#98: FILE: arch/x86/kernel/apic/hw_nmi.c:92:
+        return cpu_khz * 1000;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: arch/x86/kernel/apic/hw_nmi.c:92:
+        return cpu_khz * 1000;$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#138: FILE: include/linux/nmi.h:29:
+extern void touch_nmi_watchdog(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#150: FILE: include/linux/nmi.h:59:
+extern int proc_nmi_enabled(struct ctl_table *, int ,
                                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#150: FILE: include/linux/nmi.h:59:
+extern int proc_nmi_enabled(struct ctl_table *, int ,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ctl_table *' should also have an identifier name
#150: FILE: include/linux/nmi.h:59:
+extern int proc_nmi_enabled(struct ctl_table *, int ,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#150: FILE: include/linux/nmi.h:59:
+extern int proc_nmi_enabled(struct ctl_table *, int ,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#150: FILE: include/linux/nmi.h:59:
+extern int proc_nmi_enabled(struct ctl_table *, int ,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#150: FILE: include/linux/nmi.h:59:
+extern int proc_nmi_enabled(struct ctl_table *, int ,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#150: FILE: include/linux/nmi.h:59:
+extern int proc_nmi_enabled(struct ctl_table *, int ,

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: include/linux/nmi.h:60:
+                        void __user *, size_t *, loff_t *);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#151: FILE: include/linux/nmi.h:60:
+extern int proc_nmi_enabled(struct ctl_table *, int ,
+                        void __user *, size_t *, loff_t *);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: include/linux/nmi.h:60:
+                        void __user *, size_t *, loff_t *);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: kernel/nmi_watchdog.c:53:
+        if (!strncmp(str, "panic", 5)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: kernel/nmi_watchdog.c:53:
+        if (!strncmp(str, "panic", 5)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: kernel/nmi_watchdog.c:54:
+                panic_on_timeout = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: kernel/nmi_watchdog.c:54:
+                panic_on_timeout = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: kernel/nmi_watchdog.c:55:
+                str = strchr(str, ',');$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: kernel/nmi_watchdog.c:55:
+                str = strchr(str, ',');$

ERROR:CODE_INDENT: code indent should use tabs where possible
#177: FILE: kernel/nmi_watchdog.c:56:
+                if (!str)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: kernel/nmi_watchdog.c:56:
+                if (!str)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: kernel/nmi_watchdog.c:57:
+                        return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: kernel/nmi_watchdog.c:57:
+                        return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: kernel/nmi_watchdog.c:58:
+                ++str;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: kernel/nmi_watchdog.c:58:
+                ++str;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: kernel/nmi_watchdog.c:59:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: kernel/nmi_watchdog.c:59:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: kernel/nmi_watchdog.c:60:
+        return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: kernel/nmi_watchdog.c:60:
+        return 1;$

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#183: FILE: kernel/nmi_watchdog.c:62:
+__setup("nmi_watchdog=", setup_nmi_watchdog);

WARNING:LINE_SPACING: Missing a blank line after declarations
#199: FILE: kernel/nmi_watchdog.c:77:
+		struct perf_event *event;
+		for_each_online_cpu(cpu) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!per_cpu"
#210: FILE: kernel/nmi_watchdog.c:88:
+	if (per_cpu(nmi_watchdog_ev, smp_processor_id()) == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#215: FILE: kernel/nmi_watchdog.c:91:
+		printk("NMI watchdog failed configuration, can not be enabled\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#280: FILE: kernel/sysctl.c:703:
+		.maxlen         = sizeof (int),

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000012025.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 12 errors, 20 warnings, 5 checks, 198 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000012025.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
