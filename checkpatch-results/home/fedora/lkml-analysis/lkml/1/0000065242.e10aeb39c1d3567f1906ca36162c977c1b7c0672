WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#82: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#87: FILE: drivers/scsi/hpsa.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#101: FILE: drivers/scsi/hpsa.c:15:
+ *    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#102: FILE: drivers/scsi/hpsa.c:16:
+ *    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#135: FILE: drivers/scsi/hpsa.c:49:
+#include <asm/atomic.h>

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#152: FILE: drivers/scsi/hpsa.c:66:
+MODULE_DESCRIPTION("Driver for HP Smart Array Controller version " \

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#159: FILE: drivers/scsi/hpsa.c:73:
+module_param(hpsa_allow_any, int, S_IRUGO|S_IWUSR);
                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#159: FILE: drivers/scsi/hpsa.c:73:
+module_param(hpsa_allow_any, int, S_IRUGO|S_IWUSR);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: drivers/scsi/hpsa.c:75:
+MODULE_PARM_DESC(hpsa_allow_any,
+		"Allow hpsa driver to access unknown HP Smart Array hardware");

CHECK:CAMELCASE: Avoid CamelCase: <CommandList>
#212: FILE: drivers/scsi/hpsa.c:126:
+static void cmd_free(struct ctlr_info *h, struct CommandList *c);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#217: FILE: drivers/scsi/hpsa.c:131:
+static int fill_cmd(struct CommandList *c, __u8 cmd, struct ctlr_info *h,
+	void *buff, size_t size, __u8 page_code, unsigned char *scsi3addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#222: FILE: drivers/scsi/hpsa.c:136:
+static int hpsa_scsi_queue_command(struct scsi_cmnd *cmd,
+		void (*done)(struct scsi_cmnd *));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scsi_cmnd *' should also have an identifier name
#222: FILE: drivers/scsi/hpsa.c:136:
+		void (*done)(struct scsi_cmnd *));

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#229: FILE: drivers/scsi/hpsa.c:143:
+static ssize_t raid_level_show(struct device *dev,
+	struct device_attribute *attr, char *buf);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#231: FILE: drivers/scsi/hpsa.c:145:
+static ssize_t lunid_show(struct device *dev,
+	struct device_attribute *attr, char *buf);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#233: FILE: drivers/scsi/hpsa.c:147:
+static ssize_t unique_id_show(struct device *dev,
+	struct device_attribute *attr, char *buf);

WARNING:DEVICE_ATTR_RO: Use DEVICE_ATTR_RO
#235: FILE: drivers/scsi/hpsa.c:149:
+DEVICE_ATTR(raid_level, S_IRUGO, raid_level_show, NULL);

The DEVICE_ATTR_RO(name) helper macro can be used instead of
DEVICE_ATTR(name, 0444, name_show, NULL);

Note that the macro automatically appends _show to the named
attribute variable of the device for the show method.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#235: FILE: drivers/scsi/hpsa.c:149:
+DEVICE_ATTR(raid_level, S_IRUGO, raid_level_show, NULL);

WARNING:DEVICE_ATTR_RO: Use DEVICE_ATTR_RO
#236: FILE: drivers/scsi/hpsa.c:150:
+DEVICE_ATTR(lunid, S_IRUGO, lunid_show, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#236: FILE: drivers/scsi/hpsa.c:150:
+DEVICE_ATTR(lunid, S_IRUGO, lunid_show, NULL);

WARNING:DEVICE_ATTR_RO: Use DEVICE_ATTR_RO
#237: FILE: drivers/scsi/hpsa.c:151:
+DEVICE_ATTR(unique_id, S_IRUGO, unique_id_show, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#237: FILE: drivers/scsi/hpsa.c:151:
+DEVICE_ATTR(unique_id, S_IRUGO, unique_id_show, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#273: FILE: drivers/scsi/hpsa.c:187:
+static void enqueue_cmd_and_start_io(struct ctlr_info *h,
+	struct CommandList *c)

WARNING:LINE_SPACING: Missing a blank line after declarations
#276: FILE: drivers/scsi/hpsa.c:190:
+	unsigned long flags;
+	spin_lock_irqsave(&h->lock, flags);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <reqQ>
#277: FILE: drivers/scsi/hpsa.c:191:
+	addQ(&h->reqQ, c);

CHECK:CAMELCASE: Avoid CamelCase: <Qdepth>
#278: FILE: drivers/scsi/hpsa.c:192:
+	h->Qdepth++;

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#300: FILE: drivers/scsi/hpsa.c:214:
+static const char *raid_label[] = { "0", "4", "1(1+0)", "5", "5+1", "ADG",

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#303: FILE: drivers/scsi/hpsa.c:217:
+};
+#define RAID_UNKNOWN (sizeof(raid_label) / sizeof(raid_label[0]) - 1)

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(raid_label)
#303: FILE: drivers/scsi/hpsa.c:217:
+#define RAID_UNKNOWN (sizeof(raid_label) / sizeof(raid_label[0]) - 1)

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: drivers/scsi/hpsa.c:220:
+static ssize_t raid_level_show(struct device *dev,
+	     struct device_attribute *attr, char *buf)

CHECK:SPACING: No space is necessary after a cast
#316: FILE: drivers/scsi/hpsa.c:230:
+	h = (struct ctlr_info *) sdev->host->hostdata[0];

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#340: FILE: drivers/scsi/hpsa.c:254:
+static ssize_t lunid_show(struct device *dev,
+	     struct device_attribute *attr, char *buf)

CHECK:SPACING: No space is necessary after a cast
#349: FILE: drivers/scsi/hpsa.c:263:
+	h = (struct ctlr_info *) sdev->host->hostdata[0];

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#364: FILE: drivers/scsi/hpsa.c:278:
+static ssize_t unique_id_show(struct device *dev,
+	     struct device_attribute *attr, char *buf)

CHECK:SPACING: No space is necessary after a cast
#373: FILE: drivers/scsi/hpsa.c:287:
+	h = (struct ctlr_info *) sdev->host->hostdata[0];

WARNING:SPLIT_STRING: quoted string split across lines
#384: FILE: drivers/scsi/hpsa.c:298:
+			"%02X%02X%02X%02X%02X%02X%02X%02X"
+			"%02X%02X%02X%02X%02X%02X%02X%02X\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#392: FILE: drivers/scsi/hpsa.c:306:
+static int hpsa_find_target_lun(struct ctlr_info *h,
+	unsigned char scsi3addr[], int bus, int *target, int *lun)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#421: FILE: drivers/scsi/hpsa.c:335:
+static int hpsa_scsi_add_entry(struct ctlr_info *h, int hostno,
+		struct hpsa_scsi_dev_t *device,

WARNING:SPLIT_STRING: quoted string split across lines
#432: FILE: drivers/scsi/hpsa.c:346:
+		dev_err(&h->pdev->dev, "too many devices, some will be "
+			"inaccessible.\n");

WARNING:TYPO_SPELLING: 'otherise' may be misspelled - perhaps 'otherwise'?
#443: FILE: drivers/scsi/hpsa.c:357:
+	 * unit no, zero otherise.
 	                 ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#448: FILE: drivers/scsi/hpsa.c:362:
+		if (hpsa_find_target_lun(h, device->scsi3addr,
+			device->bus, &device->target, &device->lun) != 0)

WARNING:SPLIT_STRING: quoted string split across lines
#475: FILE: drivers/scsi/hpsa.c:389:
+		dev_warn(&h->pdev->dev, "physical device with no LUN=0,"
+			" suspect firmware bug or unsupported hardware "

WARNING:SPLIT_STRING: quoted string split across lines
#476: FILE: drivers/scsi/hpsa.c:390:
+			" suspect firmware bug or unsupported hardware "
+			"configuration.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#493: FILE: drivers/scsi/hpsa.c:407:
+		dev_info(&h->pdev->dev, "%s device c%db%dt%dl%d added.\n",
+			scsi_device_type(device->devtype), hostno,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#500: FILE: drivers/scsi/hpsa.c:414:
+static void hpsa_scsi_remove_entry(struct ctlr_info *h, int hostno, int entry,
+	struct hpsa_scsi_dev_t *removed[], int *nremoved)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#507: FILE: drivers/scsi/hpsa.c:421:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#513: FILE: drivers/scsi/hpsa.c:427:
+	for (i = entry; i < h->ndevices-1; i++)
 	                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#514: FILE: drivers/scsi/hpsa.c:428:
+		h->dev[i] = h->dev[i+1];
 		                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#517: FILE: drivers/scsi/hpsa.c:431:
+	dev_info(&h->pdev->dev, "%s device c%db%dt%dl%d removed.\n",
+		scsi_device_type(sd->devtype), hostno, sd->bus, sd->target,

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#521: FILE: drivers/scsi/hpsa.c:435:
+#define SCSI3ADDR_EQ(a, b) ( \
+	(a)[7] == (b)[7] && \
+	(a)[6] == (b)[6] && \
+	(a)[5] == (b)[5] && \
+	(a)[4] == (b)[4] && \
+	(a)[3] == (b)[3] && \
+	(a)[2] == (b)[2] && \
+	(a)[1] == (b)[1] && \
+	(a)[0] == (b)[0])

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#521: FILE: drivers/scsi/hpsa.c:435:
+#define SCSI3ADDR_EQ(a, b) ( \
+	(a)[7] == (b)[7] && \
+	(a)[6] == (b)[6] && \
+	(a)[5] == (b)[5] && \
+	(a)[4] == (b)[4] && \
+	(a)[3] == (b)[3] && \
+	(a)[2] == (b)[2] && \
+	(a)[1] == (b)[1] && \
+	(a)[0] == (b)[0])

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#532: FILE: drivers/scsi/hpsa.c:446:
+static void fixup_botched_add(struct ctlr_info *h,
+	struct hpsa_scsi_dev_t *added)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#543: FILE: drivers/scsi/hpsa.c:457:
+			for (j = i; j < h->ndevices-1; j++)
 			                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#544: FILE: drivers/scsi/hpsa.c:458:
+				h->dev[j] = h->dev[j+1];
 				                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#554: FILE: drivers/scsi/hpsa.c:468:
+static inline int device_is_the_same(struct hpsa_scsi_dev_t *dev1,
+	struct hpsa_scsi_dev_t *dev2)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#557: FILE: drivers/scsi/hpsa.c:471:
+	if ((is_logical_dev_addr_mode(dev1->scsi3addr) ||
+		(dev1->lun != -1 && dev2->lun != -1)) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#566: FILE: drivers/scsi/hpsa.c:480:
+	if (memcmp(dev1->scsi3addr, dev2->scsi3addr,
+		sizeof(dev1->scsi3addr)) != 0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#569: FILE: drivers/scsi/hpsa.c:483:
+	if (memcmp(dev1->device_id, dev2->device_id,
+		sizeof(dev1->device_id)) != 0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#592: FILE: drivers/scsi/hpsa.c:506:
+static int hpsa_scsi_find_entry(struct hpsa_scsi_dev_t *needle,
+	struct hpsa_scsi_dev_t *haystack[], int haystack_size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#613: FILE: drivers/scsi/hpsa.c:527:
+static int adjust_hpsa_scsi_table(struct ctlr_info *h, int hostno,
+	struct hpsa_scsi_dev_t *sd[], int nsds)

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#624: FILE: drivers/scsi/hpsa.c:538:
+	struct Scsi_Host *sh = NULL;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#627: FILE: drivers/scsi/hpsa.c:541:
+	added = kzalloc(sizeof(*added) * HPSA_MAX_SCSI_DEVS_PER_HBA,
+		GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#629: FILE: drivers/scsi/hpsa.c:543:
+	removed = kzalloc(sizeof(*removed) * HPSA_MAX_SCSI_DEVS_PER_HBA,
+		GFP_KERNEL);

WARNING:SPLIT_STRING: quoted string split across lines
#633: FILE: drivers/scsi/hpsa.c:547:
+		dev_warn(&h->pdev->dev, "out of memory in "
+			"adjust_hpsa_scsi_table\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'adjust_hpsa_scsi_table', this function's name, in a string
#633: FILE: drivers/scsi/hpsa.c:547:
+			"adjust_hpsa_scsi_table\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#653: FILE: drivers/scsi/hpsa.c:567:
+			hpsa_scsi_remove_entry(h, hostno, i,
+				removed, &nremoved);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#658: FILE: drivers/scsi/hpsa.c:572:
+			hpsa_scsi_remove_entry(h, hostno, i,
+				removed, &nremoved);

CHECK:SPACING: No space is necessary after a cast
#659: FILE: drivers/scsi/hpsa.c:573:
+			(void) hpsa_scsi_add_entry(h, hostno, sd[entry],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#675: FILE: drivers/scsi/hpsa.c:589:
+		device_change = hpsa_scsi_find_entry(sd[i], h->dev,
+					h->ndevices, &entry);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#679: FILE: drivers/scsi/hpsa.c:593:
+			if (hpsa_scsi_add_entry(h, hostno, sd[i],
+				added, &nadded) != 0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#686: FILE: drivers/scsi/hpsa.c:600:
+			dev_warn(&h->pdev->dev,
+				"device unexpectedly changed.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#704: FILE: drivers/scsi/hpsa.c:618:
+			scsi_device_lookup(sh, removed[i]->bus,
+				removed[i]->target, removed[i]->lun);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sdev"
#705: FILE: drivers/scsi/hpsa.c:619:
+		if (sdev != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPLIT_STRING: quoted string split across lines
#714: FILE: drivers/scsi/hpsa.c:628:
+			dev_warn(&h->pdev->dev, "didn't find c%db%dt%dl%d "
+				" for removal.", hostno, removed[i]->bus,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#724: FILE: drivers/scsi/hpsa.c:638:
+		if (scsi_add_device(sh, added[i]->bus,
+			added[i]->target, added[i]->lun) == 0)

WARNING:SPLIT_STRING: quoted string split across lines
#727: FILE: drivers/scsi/hpsa.c:641:
+		dev_warn(&h->pdev->dev, "scsi_add_device c%db%dt%dl%d failed, "
+			"device not added.\n", hostno, added[i]->bus,

WARNING:TYPO_SPELLING: 'retrun' may be misspelled - perhaps 'return'?
#742: FILE: drivers/scsi/hpsa.c:656:
+ * Lookup bus/target/lun and retrun corresponding struct hpsa_scsi_dev_t *
                              ^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#746: FILE: drivers/scsi/hpsa.c:660:
+static struct hpsa_scsi_dev_t *lookup_hpsa_scsi_dev(struct ctlr_info *h,
+	int bus, int target, int lun)

CHECK:SPACING: No space is necessary after a cast
#766: FILE: drivers/scsi/hpsa.c:680:
+	h = (struct ctlr_info *) sdev->host->hostdata[0];

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#769: FILE: drivers/scsi/hpsa.c:683:
+	sd = lookup_hpsa_scsi_dev(h, sdev_channel(sdev),
+		sdev_id(sdev), sdev->lun);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sd"
#770: FILE: drivers/scsi/hpsa.c:684:
+	if (sd != NULL)

WARNING:RETURN_VOID: void function return statements are not generally useful
#787: FILE: drivers/scsi/hpsa.c:701:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#790: FILE: drivers/scsi/hpsa.c:704:
+static void complete_scsi_command(struct CommandList *cp,
+	int timeout, __u32 tag)

CHECK:CAMELCASE: Avoid CamelCase: <ErrorInfo>
#794: FILE: drivers/scsi/hpsa.c:708:
+	struct ErrorInfo *ei;

CHECK:SPACING: No space is necessary after a cast
#801: FILE: drivers/scsi/hpsa.c:715:
+	cmd = (struct scsi_cmnd *) cp->scsi_cmd;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#806: FILE: drivers/scsi/hpsa.c:720:
+^Icmd->result = (DID_OK << 16); ^I^I/* host byte */$

CHECK:CAMELCASE: Avoid CamelCase: <ScsiStatus>
#808: FILE: drivers/scsi/hpsa.c:722:
+	cmd->result |= (ei->ScsiStatus);

CHECK:CAMELCASE: Avoid CamelCase: <SenseInfo>
#811: FILE: drivers/scsi/hpsa.c:725:
+	memcpy(cmd->sense_buffer, ei->SenseInfo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#812: FILE: drivers/scsi/hpsa.c:726:
+	memcpy(cmd->sense_buffer, ei->SenseInfo,
+		ei->SenseLen > SCSI_SENSE_BUFFERSIZE ?

CHECK:CAMELCASE: Avoid CamelCase: <SenseLen>
#812: FILE: drivers/scsi/hpsa.c:726:
+		ei->SenseLen > SCSI_SENSE_BUFFERSIZE ?

CHECK:CAMELCASE: Avoid CamelCase: <ResidualCnt>
#815: FILE: drivers/scsi/hpsa.c:729:
+	scsi_set_resid(cmd, ei->ResidualCnt);

CHECK:CAMELCASE: Avoid CamelCase: <CommandStatus>
#817: FILE: drivers/scsi/hpsa.c:731:
+	if (ei->CommandStatus == 0) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#825: FILE: drivers/scsi/hpsa.c:739:
+	switch (ei->CommandStatus) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#837: FILE: drivers/scsi/hpsa.c:751:
+		if (ei->ScsiStatus == SAM_STAT_CHECK_CONDITION) {
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'asc == 0x25'
#842: FILE: drivers/scsi/hpsa.c:756:
+				if ((asc == 0x25) && (ascq == 0x0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ascq == 0x0'
#842: FILE: drivers/scsi/hpsa.c:756:
+				if ((asc == 0x25) && (ascq == 0x0)) {

WARNING:SPLIT_STRING: quoted string split across lines
#844: FILE: drivers/scsi/hpsa.c:758:
+					dev_warn(&h->pdev->dev, "cp %p "
+						"has check condition\n", cp);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'asc == 0x04'
#854: FILE: drivers/scsi/hpsa.c:768:
+				if ((asc == 0x04) && (ascq == 0x03)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ascq == 0x03'
#854: FILE: drivers/scsi/hpsa.c:768:
+				if ((asc == 0x04) && (ascq == 0x03)) {

WARNING:SPLIT_STRING: quoted string split across lines
#857: FILE: drivers/scsi/hpsa.c:771:
+					dev_warn(&h->pdev->dev, "cp %p "
+						"has check condition: unit "

WARNING:SPLIT_STRING: quoted string split across lines
#858: FILE: drivers/scsi/hpsa.c:772:
+						"has check condition: unit "
+						"not ready, manual "

WARNING:SPLIT_STRING: quoted string split across lines
#859: FILE: drivers/scsi/hpsa.c:773:
+						"not ready, manual "
+						"intervention required\n", cp);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#864: FILE: drivers/scsi/hpsa.c:778:
+
+

WARNING:SPLIT_STRING: quoted string split across lines
#868: FILE: drivers/scsi/hpsa.c:782:
+			dev_warn(&h->pdev->dev, "cp %p has check condition: "
+					"unknown type: "

WARNING:SPLIT_STRING: quoted string split across lines
#869: FILE: drivers/scsi/hpsa.c:783:
+					"unknown type: "
+					"Sense: 0x%x, ASC: 0x%x, ASCQ: 0x%x, "

WARNING:SPLIT_STRING: quoted string split across lines
#870: FILE: drivers/scsi/hpsa.c:784:
+					"Sense: 0x%x, ASC: 0x%x, ASCQ: 0x%x, "
+					"Returning result: 0x%x, "

WARNING:SPLIT_STRING: quoted string split across lines
#871: FILE: drivers/scsi/hpsa.c:785:
+					"Returning result: 0x%x, "
+					"cmd=[%02x %02x %02x %02x %02x "

WARNING:SPLIT_STRING: quoted string split across lines
#872: FILE: drivers/scsi/hpsa.c:786:
+					"cmd=[%02x %02x %02x %02x %02x "
+					"%02x %02x %02x %02x %02x]\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#883: FILE: drivers/scsi/hpsa.c:797:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#888: FILE: drivers/scsi/hpsa.c:802:
+		if (ei->ScsiStatus) {
+

WARNING:SPLIT_STRING: quoted string split across lines
#891: FILE: drivers/scsi/hpsa.c:805:
+			dev_warn(&h->pdev->dev, "cp %p has status 0x%x "
+				"Sense: 0x%x, ASC: 0x%x, ASCQ: 0x%x, "

WARNING:SPLIT_STRING: quoted string split across lines
#892: FILE: drivers/scsi/hpsa.c:806:
+				"Sense: 0x%x, ASC: 0x%x, ASCQ: 0x%x, "
+				"Returning result: 0x%x\n",

WARNING:SPLIT_STRING: quoted string split across lines
#898: FILE: drivers/scsi/hpsa.c:812:
+			dev_warn(&h->pdev->dev, "cp %p SCSI status was 0. "
+				"Returning no connection.\n", cp),

WARNING:SPLIT_STRING: quoted string split across lines
#920: FILE: drivers/scsi/hpsa.c:834:
+		dev_warn(&h->pdev->dev, "cp %p has"
+			" completed with data overrun "

WARNING:SPLIT_STRING: quoted string split across lines
#921: FILE: drivers/scsi/hpsa.c:835:
+			" completed with data overrun "
+			"reported\n", cp);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#925: FILE: drivers/scsi/hpsa.c:839:
+		/* print_bytes(cp, sizeof(*cp), 1, 0);
+		print_cmd(cp); */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#925: FILE: drivers/scsi/hpsa.c:839:
+		print_cmd(cp); */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#931: FILE: drivers/scsi/hpsa.c:845:
+		 * missing target. */

WARNING:SPLIT_STRING: quoted string split across lines
#937: FILE: drivers/scsi/hpsa.c:851:
+		dev_warn(&h->pdev->dev, "cp %p has "
+			"protocol error \n", cp);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#937: FILE: drivers/scsi/hpsa.c:851:
+			"protocol error \n", cp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#950: FILE: drivers/scsi/hpsa.c:864:
+		dev_warn(&h->pdev->dev, "cp %p was aborted with status 0x%x\n",
+				cp, ei->ScsiStatus);

WARNING:SPLIT_STRING: quoted string split across lines
#959: FILE: drivers/scsi/hpsa.c:873:
+		dev_warn(&h->pdev->dev, "cp %p aborted do to an unsolicited "
+			"abort\n", cp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#968: FILE: drivers/scsi/hpsa.c:882:
+		dev_warn(&h->pdev->dev, "cp %p returned unknown status %x\n",
+				cp, ei->CommandStatus);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sh"
#980: FILE: drivers/scsi/hpsa.c:894:
+	if (sh == NULL)

CHECK:SPACING: No space is necessary after a cast
#991: FILE: drivers/scsi/hpsa.c:905:
+	sh->hostdata[0] = (unsigned long) h;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hpsa_scsi_detect', this function's name, in a string
#1001: FILE: drivers/scsi/hpsa.c:915:
+	dev_err(&h->pdev->dev, "hpsa_scsi_detect: scsi_add_host"

WARNING:SPLIT_STRING: quoted string split across lines
#1002: FILE: drivers/scsi/hpsa.c:916:
+	dev_err(&h->pdev->dev, "hpsa_scsi_detect: scsi_add_host"
+		" failed for controller %d\n", h->ctlr);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hpsa_scsi_detect', this function's name, in a string
#1006: FILE: drivers/scsi/hpsa.c:920:
+	dev_err(&h->pdev->dev, "hpsa_scsi_detect: scsi_host_alloc"

WARNING:SPLIT_STRING: quoted string split across lines
#1007: FILE: drivers/scsi/hpsa.c:921:
+	dev_err(&h->pdev->dev, "hpsa_scsi_detect: scsi_host_alloc"
+		" failed for controller %d\n", h->ctlr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1012: FILE: drivers/scsi/hpsa.c:926:
+static void hpsa_unmap_one(struct pci_dev *pdev,
+		struct CommandList *cp,

CHECK:CAMELCASE: Avoid CamelCase: <Addr>
#1018: FILE: drivers/scsi/hpsa.c:932:
+	addr64.val32.lower = cp->SG[0].Addr.lower;

CHECK:SPACING: No space is necessary after a cast
#1020: FILE: drivers/scsi/hpsa.c:934:
+	pci_unmap_single(pdev, (dma_addr_t) addr64.val,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1021: FILE: drivers/scsi/hpsa.c:935:
+	pci_unmap_single(pdev, (dma_addr_t) addr64.val,
+		buflen, data_direction);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1025: FILE: drivers/scsi/hpsa.c:939:
+static void hpsa_map_one(struct pci_dev *pdev,
+		struct CommandList *cp,

CHECK:CAMELCASE: Avoid CamelCase: <Header>
#1033: FILE: drivers/scsi/hpsa.c:947:
+		cp->Header.SGList = 0;

CHECK:CAMELCASE: Avoid CamelCase: <SGList>
#1033: FILE: drivers/scsi/hpsa.c:947:
+		cp->Header.SGList = 0;

CHECK:CAMELCASE: Avoid CamelCase: <SGTotal>
#1034: FILE: drivers/scsi/hpsa.c:948:
+		cp->Header.SGTotal = 0;

CHECK:SPACING: No space is necessary after a cast
#1038: FILE: drivers/scsi/hpsa.c:952:
+	addr64 = (__u64) pci_map_single(pdev, buf, buflen, data_direction);

CHECK:SPACING: No space is necessary after a cast
#1040: FILE: drivers/scsi/hpsa.c:954:
+	  (__u32) (addr64 & (__u64) 0x00000000FFFFFFFF);

CHECK:SPACING: No space is necessary after a cast
#1042: FILE: drivers/scsi/hpsa.c:956:
+	  (__u32) ((addr64 >> 32) & (__u64) 0x00000000FFFFFFFF);

CHECK:CAMELCASE: Avoid CamelCase: <Len>
#1043: FILE: drivers/scsi/hpsa.c:957:
+	cp->SG[0].Len = buflen;

CHECK:SPACING: No space is necessary after a cast
#1044: FILE: drivers/scsi/hpsa.c:958:
+	cp->Header.SGList = (__u8) 1;   /* no. SGs contig in this cmd */

CHECK:SPACING: No space is necessary after a cast
#1045: FILE: drivers/scsi/hpsa.c:959:
+	cp->Header.SGTotal = (__u16) 1; /* total sgs in this cmd list */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1049: FILE: drivers/scsi/hpsa.c:963:
+static void hpsa_scsi_do_simple_cmd_core(struct ctlr_info *h,
+	struct CommandList *c)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1068: FILE: drivers/scsi/hpsa.c:982:
+		dev_warn(d, "cmd %p has SCSI Status = %x\n", cp,
+				ei->ScsiStatus);

WARNING:SPLIT_STRING: quoted string split across lines
#1071: FILE: drivers/scsi/hpsa.c:985:
+			dev_warn(d, "SCSI status is abnormally zero.  "
+			"(probably indicates selection timeout "

WARNING:SPLIT_STRING: quoted string split across lines
#1072: FILE: drivers/scsi/hpsa.c:986:
+			"(probably indicates selection timeout "
+			"reported incorrectly due to a known "

WARNING:SPLIT_STRING: quoted string split across lines
#1073: FILE: drivers/scsi/hpsa.c:987:
+			"reported incorrectly due to a known "
+			"firmware bug, circa July, 2001.)\n");

WARNING:SPLIT_STRING: quoted string split across lines
#1086: FILE: drivers/scsi/hpsa.c:1000:
+		dev_warn(d, "cp %p is reported invalid (probably means "
+			"target device no longer present)\n", cp);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1088: FILE: drivers/scsi/hpsa.c:1002:
+		/* print_bytes((unsigned char *) cp, sizeof(*cp), 1, 0);
+		print_cmd(cp);  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1088: FILE: drivers/scsi/hpsa.c:1002:
+		print_cmd(cp);  */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1092: FILE: drivers/scsi/hpsa.c:1006:
+		dev_warn(d, "cp %p has protocol error \n", cp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1115: FILE: drivers/scsi/hpsa.c:1029:
+		dev_warn(d, "cp %p returned unknown status %x\n", cp,
+				ei->CommandStatus);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1120: FILE: drivers/scsi/hpsa.c:1034:
+static int hpsa_scsi_do_inquiry(struct ctlr_info *h, unsigned char *scsi3addr,
+			unsigned char page, unsigned char *buf,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c"
#1129: FILE: drivers/scsi/hpsa.c:1043:
+	if (c == NULL) {			/* trouble... */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1135: FILE: drivers/scsi/hpsa.c:1049:
+	rc = fill_cmd(c, HPSA_INQUIRY, h, buf, bufsize, page, scsi3addr,
+		TYPE_CMD);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c"
#1159: FILE: drivers/scsi/hpsa.c:1073:
+	if (c == NULL) {			/* trouble... */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1165: FILE: drivers/scsi/hpsa.c:1079:
+	rc = fill_cmd(c, HPSA_DEVICE_RESET_MSG, h, NULL, 0, 0, scsi3addr,
+		TYPE_MSG);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1183: FILE: drivers/scsi/hpsa.c:1097:
+static void hpsa_get_raid_level(struct ctlr_info *h,
+	unsigned char *scsi3addr, unsigned char *raid_level)

WARNING:RETURN_VOID: void function return statements are not generally useful
#1199: FILE: drivers/scsi/hpsa.c:1113:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1203: FILE: drivers/scsi/hpsa.c:1117:
+static int hpsa_get_device_id(struct ctlr_info *h, unsigned char *scsi3addr,
+	unsigned char *device_id, int buflen)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1221: FILE: drivers/scsi/hpsa.c:1135:
+static int hpsa_scsi_do_report_luns(struct ctlr_info *h, int logical,
+		struct ReportLUNdata *buf, int bufsize,

CHECK:CAMELCASE: Avoid CamelCase: <ReportLUNdata>
#1221: FILE: drivers/scsi/hpsa.c:1135:
+		struct ReportLUNdata *buf, int bufsize,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c"
#1230: FILE: drivers/scsi/hpsa.c:1144:
+	if (c == NULL) {			/* trouble... */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1238: FILE: drivers/scsi/hpsa.c:1152:
+	rc = fill_cmd(c, logical ? HPSA_REPORT_LOG : HPSA_REPORT_PHYS, h,
+		buf, bufsize, 0, scsi3addr, TYPE_CMD);

CHECK:CAMELCASE: Avoid CamelCase: <Request>
#1243: FILE: drivers/scsi/hpsa.c:1157:
+		c->Request.CDB[1] = extended_response;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1258: FILE: drivers/scsi/hpsa.c:1172:
+static inline int hpsa_scsi_do_report_phys_luns(struct ctlr_info *h,
+		struct ReportLUNdata *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1265: FILE: drivers/scsi/hpsa.c:1179:
+static inline int hpsa_scsi_do_report_log_luns(struct ctlr_info *h,
+		struct ReportLUNdata *buf, int bufsize)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1271: FILE: drivers/scsi/hpsa.c:1185:
+static inline void hpsa_set_bus_target_lun(struct hpsa_scsi_dev_t *device,
+	int bus, int target, int lun)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1279: FILE: drivers/scsi/hpsa.c:1193:
+static int hpsa_update_device_info(struct ctlr_info *h,
+	unsigned char scsi3addr[], struct hpsa_scsi_dev_t *this_device)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1291: FILE: drivers/scsi/hpsa.c:1205:
+	if (hpsa_scsi_do_inquiry(h, scsi3addr, 0, inq_buff,
+		(unsigned char) OBDR_TAPE_INQ_SIZE) != 0) {

CHECK:SPACING: No space is necessary after a cast
#1291: FILE: drivers/scsi/hpsa.c:1205:
+		(unsigned char) OBDR_TAPE_INQ_SIZE) != 0) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hpsa_update_device_info', this function's name, in a string
#1294: FILE: drivers/scsi/hpsa.c:1208:
+			"hpsa_update_device_info: inquiry failed\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1307: FILE: drivers/scsi/hpsa.c:1221:
+	memcpy(this_device->vendor, &inq_buff[8],
+		sizeof(this_device->vendor));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1309: FILE: drivers/scsi/hpsa.c:1223:
+	memcpy(this_device->model, &inq_buff[16],
+		sizeof(this_device->model));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1311: FILE: drivers/scsi/hpsa.c:1225:
+	memcpy(this_device->revision, &inq_buff[32],
+		sizeof(this_device->revision));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1313: FILE: drivers/scsi/hpsa.c:1227:
+	memset(this_device->device_id, 0,
+		sizeof(this_device->device_id));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1315: FILE: drivers/scsi/hpsa.c:1229:
+	hpsa_get_device_id(h, scsi3addr, this_device->device_id,
+		sizeof(this_device->device_id));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1318: FILE: drivers/scsi/hpsa.c:1232:
+	if (this_device->devtype == TYPE_DISK &&
+		is_logical_dev_addr_mode(scsi3addr))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1345: FILE: drivers/scsi/hpsa.c:1259:
+		if (strncmp(device->model, msa2xxx_model[i],
+			strlen(msa2xxx_model[i])) == 0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1358: FILE: drivers/scsi/hpsa.c:1272:
+static void figure_bus_target_lun(struct ctlr_info *h,
+	__u8 *lunaddrbytes, int *bus, int *target, int *lun,

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1361: FILE: drivers/scsi/hpsa.c:1275:
+{
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1401: FILE: drivers/scsi/hpsa.c:1315:
+static int add_msa2xxx_enclosure_device(struct ctlr_info *h,
+	struct hpsa_scsi_dev_t *tmpdevice,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1438: FILE: drivers/scsi/hpsa.c:1352:
+static int hpsa_gather_lun_info(struct ctlr_info *h,
+	int reportlunsize,

CHECK:CAMELCASE: Avoid CamelCase: <LUNListLength>
#1446: FILE: drivers/scsi/hpsa.c:1360:
+	memcpy(nphysicals, &physdev->LUNListLength[0], sizeof(*nphysicals));

WARNING:SPLIT_STRING: quoted string split across lines
#1453: FILE: drivers/scsi/hpsa.c:1367:
+		dev_warn(&h->pdev->dev, "maximum physical LUNs (%d) exceeded."
+			"  %d LUNs ignored.\n", HPSA_MAX_PHYS_LUN,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1469: FILE: drivers/scsi/hpsa.c:1383:
+		dev_warn(&h->pdev->dev,
+			"maximum logical LUNs (%d) exceeded.  "

WARNING:SPLIT_STRING: quoted string split across lines
#1470: FILE: drivers/scsi/hpsa.c:1384:
+			"maximum logical LUNs (%d) exceeded.  "
+			"%d LUNs ignored.\n", HPSA_MAX_LUN,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1476: FILE: drivers/scsi/hpsa.c:1390:
+		dev_warn(&h->pdev->dev,
+			"maximum logical + physical LUNs (%d) exceeded. "

WARNING:SPLIT_STRING: quoted string split across lines
#1477: FILE: drivers/scsi/hpsa.c:1391:
+			"maximum logical + physical LUNs (%d) exceeded. "
+			"%d LUNs ignored.\n", HPSA_MAX_PHYS_LUN,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1510: FILE: drivers/scsi/hpsa.c:1424:
+	currentsd = kzalloc(sizeof(*currentsd) * HPSA_MAX_SCSI_DEVS_PER_HBA,
+		GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1517: FILE: drivers/scsi/hpsa.c:1431:
+	if (!currentsd || !physdev_list || !logdev_list ||
+		!inq_buff || !tmpdevice) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1524: FILE: drivers/scsi/hpsa.c:1438:
+	if (hpsa_gather_lun_info(h, reportlunsize, physdev_list, &nphysicals,
+			logdev_list, &nlogicals))

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1531: FILE: drivers/scsi/hpsa.c:1445:
+		if (!currentsd[i]) {
+			dev_warn(&h->pdev->dev, "out of memory at %s:%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1532: FILE: drivers/scsi/hpsa.c:1446:
+			dev_warn(&h->pdev->dev, "out of memory at %s:%d\n",
+				__FILE__, __LINE__);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1548: FILE: drivers/scsi/hpsa.c:1462:
+					&logdev_list->LUN[i-nphysicals][0];
 					                   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1560: FILE: drivers/scsi/hpsa.c:1474:
+		figure_bus_target_lun(h, lunaddrbytes, &bus, &target, &lun,
+			tmpdevice);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1571: FILE: drivers/scsi/hpsa.c:1485:
+		if (add_msa2xxx_enclosure_device(h, tmpdevice, this_device,
+			lunaddrbytes, bus, target, lun, lunzerobits)) {

WARNING:RETURN_VOID: void function return statements are not generally useful
#1633: FILE: drivers/scsi/hpsa.c:1547:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1640: FILE: drivers/scsi/hpsa.c:1554:
+static int hpsa_scatter_gather(struct pci_dev *pdev,
+		struct CommandList *cp,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1648: FILE: drivers/scsi/hpsa.c:1562:
+	BUG_ON(scsi_sg_count(cmd) > MAXSGENTRIES);

CHECK:SPACING: No space is necessary after a cast
#1658: FILE: drivers/scsi/hpsa.c:1572:
+		addr64 = (__u64) sg_dma_address(sg);

CHECK:SPACING: No space is necessary after a cast
#1661: FILE: drivers/scsi/hpsa.c:1575:
+			(__u32) (addr64 & (__u64) 0x00000000FFFFFFFF);

CHECK:SPACING: No space is necessary after a cast
#1663: FILE: drivers/scsi/hpsa.c:1577:
+			(__u32) ((addr64 >> 32) & (__u64) 0x00000000FFFFFFFF);

CHECK:CAMELCASE: Avoid CamelCase: <Ext>
#1665: FILE: drivers/scsi/hpsa.c:1579:
+		cp->SG[i].Ext = 0;  /* we are not chaining */

CHECK:SPACING: No space is necessary after a cast
#1670: FILE: drivers/scsi/hpsa.c:1584:
+	cp->Header.SGList = (__u8) use_sg;   /* no. SGs contig in this cmd */

CHECK:SPACING: No space is necessary after a cast
#1671: FILE: drivers/scsi/hpsa.c:1585:
+	cp->Header.SGTotal = (__u16) use_sg; /* total sgs in this cmd list */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1675: FILE: drivers/scsi/hpsa.c:1589:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1677: FILE: drivers/scsi/hpsa.c:1591:
+static int hpsa_scsi_queue_command(struct scsi_cmnd *cmd,
+	void (*done)(struct scsi_cmnd *))

CHECK:SPACING: No space is necessary after a cast
#1686: FILE: drivers/scsi/hpsa.c:1600:
+	h = (struct ctlr_info *) cmd->device->host->hostdata[0];

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c"
#1699: FILE: drivers/scsi/hpsa.c:1613:
+	if (c == NULL) {			/* trouble... */

CHECK:SPACING: No space is necessary after a cast
#1711: FILE: drivers/scsi/hpsa.c:1625:
+	cmd->host_scribble = (unsigned char *) c;

CHECK:CAMELCASE: Avoid CamelCase: <ReplyQueue>
#1715: FILE: drivers/scsi/hpsa.c:1629:
+	c->Header.ReplyQueue = 0;  /* unused in simple mode */

CHECK:CAMELCASE: Avoid CamelCase: <LunAddrBytes>
#1716: FILE: drivers/scsi/hpsa.c:1630:
+	memcpy(&c->Header.LUN.LunAddrBytes[0], &scsi3addr[0], 8);

CHECK:CAMELCASE: Avoid CamelCase: <Tag>
#1717: FILE: drivers/scsi/hpsa.c:1631:
+	c->Header.Tag.lower = c->busaddr;  /* Use k. address of cmd as tag */

CHECK:CAMELCASE: Avoid CamelCase: <Timeout>
#1721: FILE: drivers/scsi/hpsa.c:1635:
+	c->Request.Timeout = 0;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1723: FILE: drivers/scsi/hpsa.c:1637:
+	BUG_ON(cmd->cmd_len > sizeof(c->Request.CDB));

CHECK:CAMELCASE: Avoid CamelCase: <CDBLen>
#1724: FILE: drivers/scsi/hpsa.c:1638:
+	c->Request.CDBLen = cmd->cmd_len;

CHECK:CAMELCASE: Avoid CamelCase: <Type>
#1726: FILE: drivers/scsi/hpsa.c:1640:
+	c->Request.Type.Type = TYPE_CMD;

CHECK:CAMELCASE: Avoid CamelCase: <Attribute>
#1727: FILE: drivers/scsi/hpsa.c:1641:
+	c->Request.Type.Attribute = ATTR_SIMPLE;

CHECK:CAMELCASE: Avoid CamelCase: <Direction>
#1730: FILE: drivers/scsi/hpsa.c:1644:
+		c->Request.Type.Direction = XFER_WRITE;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1758: FILE: drivers/scsi/hpsa.c:1672:
+		BUG();

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hpsa_register_scsi', this function's name, in a string
#1786: FILE: drivers/scsi/hpsa.c:1700:
+		dev_err(&h->pdev->dev, "hpsa_register_scsi: failed"

WARNING:SPLIT_STRING: quoted string split across lines
#1787: FILE: drivers/scsi/hpsa.c:1701:
+		dev_err(&h->pdev->dev, "hpsa_register_scsi: failed"
+			" hpsa_scsi_detect(), rc is %d\n", rc);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1792: FILE: drivers/scsi/hpsa.c:1706:
+static int wait_for_device_to_become_ready(struct ctlr_info *h,
+	unsigned char lunaddr[])

WARNING:SPLIT_STRING: quoted string split across lines
#1802: FILE: drivers/scsi/hpsa.c:1716:
+		dev_warn(&h->pdev->dev, "out of memory in "
+			"wait_for_device_to_become_ready.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'wait_for_device_to_become_ready', this function's name, in a string
#1802: FILE: drivers/scsi/hpsa.c:1716:
+			"wait_for_device_to_become_ready.\n");

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1808: FILE: drivers/scsi/hpsa.c:1722:
+	while (count < HPSA_TUR_RETRY_LIMIT) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1822: FILE: drivers/scsi/hpsa.c:1736:
+		rc = fill_cmd(c, TEST_UNIT_READY, h, NULL, 0, 0,
+			lunaddr, TYPE_CMD);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1826: FILE: drivers/scsi/hpsa.c:1740:
+			dev_warn(&h->pdev->dev, "fill_cmd failed at %s:%d\n",
+				__FILE__, __LINE__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1837: FILE: drivers/scsi/hpsa.c:1751:
+		if (c->err_info->CommandStatus == CMD_TARGET_STATUS &&
+			c->err_info->ScsiStatus == SAM_STAT_CHECK_CONDITION &&

WARNING:SPLIT_STRING: quoted string split across lines
#1843: FILE: drivers/scsi/hpsa.c:1757:
+		dev_warn(&h->pdev->dev, "waiting %d secs "
+			"for device to become ready.\n", waittime / HZ);

CHECK:SPACING: No space is necessary after a cast
#1866: FILE: drivers/scsi/hpsa.c:1780:
+	h = (struct ctlr_info *) scsicmd->device->host->hostdata[0];

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!h"
#1867: FILE: drivers/scsi/hpsa.c:1781:
+	if (h == NULL) /* paranoia */

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hpsa_eh_device_reset_handler', this function's name, in a string
#1873: FILE: drivers/scsi/hpsa.c:1787:
+		dev_err(&h->pdev->dev, "hpsa_eh_device_reset_handler: "

WARNING:SPLIT_STRING: quoted string split across lines
#1874: FILE: drivers/scsi/hpsa.c:1788:
+		dev_err(&h->pdev->dev, "hpsa_eh_device_reset_handler: "
+			"device lookup failed.\n");

CHECK:SPACING: No space is necessary after a cast
#1919: FILE: drivers/scsi/hpsa.c:1833:
+	c->busaddr = (__u32) cmd_dma_handle;

CHECK:SPACING: No space is necessary after a cast
#1920: FILE: drivers/scsi/hpsa.c:1834:
+	temp64.val = (__u64) err_dma_handle;

CHECK:CAMELCASE: Avoid CamelCase: <ErrDesc>
#1921: FILE: drivers/scsi/hpsa.c:1835:
+	c->ErrDesc.Addr.lower = temp64.val32.lower;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c"
#1940: FILE: drivers/scsi/hpsa.c:1854:
+	if (c == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1947: FILE: drivers/scsi/hpsa.c:1861:
+	c->err_info = pci_alloc_consistent(h->pdev, sizeof(*c->err_info),
+		    &err_dma_handle);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c->err_info"
#1949: FILE: drivers/scsi/hpsa.c:1863:
+	if (c->err_info == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1951: FILE: drivers/scsi/hpsa.c:1865:
+		pci_free_consistent(h->pdev,
+			sizeof(*c), c, cmd_dma_handle);

CHECK:SPACING: No space is necessary after a cast
#1957: FILE: drivers/scsi/hpsa.c:1871:
+	c->busaddr = (__u32) cmd_dma_handle;

CHECK:SPACING: No space is necessary after a cast
#1958: FILE: drivers/scsi/hpsa.c:1872:
+	temp64.val = (__u64) err_dma_handle;

CHECK:SPACING: No space is necessary after a cast
#1984: FILE: drivers/scsi/hpsa.c:1898:
+			    c->err_info, (dma_addr_t) temp64.val);

CHECK:SPACING: No space is necessary after a cast
#1986: FILE: drivers/scsi/hpsa.c:1900:
+			    c, (dma_addr_t) c->busaddr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2003: FILE: drivers/scsi/hpsa.c:1917:
+static int hpsa_ioctl32_big_passthru(struct scsi_device *dev,
+	int cmd, void *arg);

CHECK:CAMELCASE: Avoid CamelCase: <IOCTL32_Command_struct>
#2037: FILE: drivers/scsi/hpsa.c:1951:
+	IOCTL32_Command_struct __user *arg32 =

CHECK:SPACING: No space is necessary after a cast
#2038: FILE: drivers/scsi/hpsa.c:1952:
+	    (IOCTL32_Command_struct __user *) arg;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2070: FILE: drivers/scsi/hpsa.c:1984:
+static int hpsa_ioctl32_big_passthru(struct scsi_device *dev,
+	int cmd, void *arg)

CHECK:CAMELCASE: Avoid CamelCase: <BIG_IOCTL32_Command_struct>
#2072: FILE: drivers/scsi/hpsa.c:1986:
+	BIG_IOCTL32_Command_struct __user *arg32 =

CHECK:SPACING: No space is necessary after a cast
#2073: FILE: drivers/scsi/hpsa.c:1987:
+	    (BIG_IOCTL32_Command_struct __user *) arg;

CHECK:CAMELCASE: Avoid CamelCase: <DriverVer_type>
#2124: FILE: drivers/scsi/hpsa.c:2038:
+	DriverVer_type DriverVer;

CHECK:CAMELCASE: Avoid CamelCase: <DriverVer>
#2124: FILE: drivers/scsi/hpsa.c:2038:
+	DriverVer_type DriverVer;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2129: FILE: drivers/scsi/hpsa.c:2043:
+	rc = sscanf(HPSA_DRIVER_VERSION, "%hhu.%hhu.%hhu",
+		&vmaj, &vmin, &vsubmin);

WARNING:SPLIT_STRING: quoted string split across lines
#2132: FILE: drivers/scsi/hpsa.c:2046:
+		dev_info(&h->pdev->dev, "driver version string '%s' "
+			"unrecognized.", HPSA_DRIVER_VERSION);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iocommand.buf_size < 1'
#2159: FILE: drivers/scsi/hpsa.c:2073:
+	if ((iocommand.buf_size < 1) &&
+	    (iocommand.Request.Type.Direction != XFER_NONE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iocommand.Request.Type.Direction != XFER_NONE'
#2159: FILE: drivers/scsi/hpsa.c:2073:
+	if ((iocommand.buf_size < 1) &&
+	    (iocommand.Request.Type.Direction != XFER_NONE)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buff"
#2165: FILE: drivers/scsi/hpsa.c:2079:
+		if (buff == NULL)

CHECK:BRACES: braces {} should be used on all arms of this statement
#2168: FILE: drivers/scsi/hpsa.c:2082:
+	if (iocommand.Request.Type.Direction == XFER_WRITE) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2174: FILE: drivers/scsi/hpsa.c:2088:
+	} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c"
#2177: FILE: drivers/scsi/hpsa.c:2091:
+	if (c == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2198: FILE: drivers/scsi/hpsa.c:2112:
+	memcpy(&c->Request, &iocommand.Request,
+		sizeof(c->Request));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2203: FILE: drivers/scsi/hpsa.c:2117:
+		temp64.val = pci_map_single(h->pdev, buff,
+			iocommand.buf_size, PCI_DMA_BIDIRECTIONAL);

CHECK:SPACING: No space is necessary after a cast
#2216: FILE: drivers/scsi/hpsa.c:2130:
+	pci_unmap_single(h->pdev, (dma_addr_t) temp64.val, iocommand.buf_size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2221: FILE: drivers/scsi/hpsa.c:2135:
+	memcpy(&iocommand.error_info, c->err_info,
+		sizeof(iocommand.error_info));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ioc->buf_size < 1'
#2270: FILE: drivers/scsi/hpsa.c:2184:
+	if ((ioc->buf_size < 1) &&
+	    (ioc->Request.Type.Direction != XFER_NONE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ioc->Request.Type.Direction != XFER_NONE'
#2270: FILE: drivers/scsi/hpsa.c:2184:
+	if ((ioc->buf_size < 1) &&
+	    (ioc->Request.Type.Direction != XFER_NONE)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buff[sg_used]"
#2300: FILE: drivers/scsi/hpsa.c:2214:
+		if (buff[sg_used] == NULL) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#2304: FILE: drivers/scsi/hpsa.c:2218:
+		if (ioc->Request.Type.Direction == XFER_WRITE) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2309: FILE: drivers/scsi/hpsa.c:2223:
+		} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c"
#2316: FILE: drivers/scsi/hpsa.c:2230:
+	if (c == NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#2335: FILE: drivers/scsi/hpsa.c:2249:
+		int i;
+		for (i = 0; i < sg_used; i++) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2337: FILE: drivers/scsi/hpsa.c:2251:
+			temp64.val = pci_map_single(h->pdev, buff[i],
+				    buff_size[i], PCI_DMA_BIDIRECTIONAL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2353: FILE: drivers/scsi/hpsa.c:2267:
+		pci_unmap_single(h->pdev,
+			(dma_addr_t) temp64.val, buff_size[i],

CHECK:SPACING: No space is necessary after a cast
#2353: FILE: drivers/scsi/hpsa.c:2267:
+			(dma_addr_t) temp64.val, buff_size[i],

WARNING:LINE_SPACING: Missing a blank line after declarations
#2366: FILE: drivers/scsi/hpsa.c:2280:
+		BYTE __user *ptr = ioc->buf;
+		for (i = 0; i < sg_used; i++) {

CHECK:SPACING: No space is necessary after a cast
#2396: FILE: drivers/scsi/hpsa.c:2310:
+	h = (struct ctlr_info *) dev->host->hostdata[0];

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2418: FILE: drivers/scsi/hpsa.c:2332:
+static int fill_cmd(struct CommandList *c, __u8 cmd, struct ctlr_info *h,
+	void *buff, size_t size, __u8 page_code, unsigned char *scsi3addr,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "buff"
#2425: FILE: drivers/scsi/hpsa.c:2339:
+	if (buff != NULL && size > 0) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2454: FILE: drivers/scsi/hpsa.c:2368:
+			/* Talking to controller so It's a physical command
+			   mode = 00 target = 0.  Nothing to write.

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2494: FILE: drivers/scsi/hpsa.c:2408:
+		switch (cmd) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2513: FILE: drivers/scsi/hpsa.c:2427:
+			dev_warn(&h->pdev->dev, "unknown message type %d\n",
+				cmd);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pollcomplete', this function's name, in a string
#2559: FILE: drivers/scsi/hpsa.c:2473:
+	dev_warn(&h->pdev->dev, "pollcomplete(): returning 1\n");

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#2589: FILE: drivers/scsi/hpsa.c:2503:
+		udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2598: FILE: drivers/scsi/hpsa.c:2512:
+			dev_warn(&h->pdev->dev,
+			       "sendcmd timeout, no command list address "

WARNING:SPLIT_STRING: quoted string split across lines
#2599: FILE: drivers/scsi/hpsa.c:2513:
+			       "sendcmd timeout, no command list address "
+				"returned!\n");

WARNING:SPLIT_STRING: quoted string split across lines
#2607: FILE: drivers/scsi/hpsa.c:2521:
+			dev_warn(&h->pdev->dev, "unexpected command "
+				"completion.\n");

WARNING:TYPO_SPELLING: 'underun' may be misspelled - perhaps 'underrun'?
#2619: FILE: drivers/scsi/hpsa.c:2533:
+		/* if data overrun or underun on Report command ignore it */
 		                      ^^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->Request.CDB[0] == HPSA_REPORT_LOG'
#2620: FILE: drivers/scsi/hpsa.c:2534:
+		if (((c->Request.CDB[0] == HPSA_REPORT_LOG) ||
+			(c->Request.CDB[0] == HPSA_REPORT_PHYS) ||
+			(c->Request.CDB[0] == HPSA_INQUIRY)) &&
+			((c->err_info->CommandStatus == CMD_DATA_OVERRUN) ||
+			(c->err_info->CommandStatus == CMD_DATA_UNDERRUN))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->Request.CDB[0] == HPSA_REPORT_PHYS'
#2620: FILE: drivers/scsi/hpsa.c:2534:
+		if (((c->Request.CDB[0] == HPSA_REPORT_LOG) ||
+			(c->Request.CDB[0] == HPSA_REPORT_PHYS) ||
+			(c->Request.CDB[0] == HPSA_INQUIRY)) &&
+			((c->err_info->CommandStatus == CMD_DATA_OVERRUN) ||
+			(c->err_info->CommandStatus == CMD_DATA_UNDERRUN))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->Request.CDB[0] == HPSA_INQUIRY'
#2620: FILE: drivers/scsi/hpsa.c:2534:
+		if (((c->Request.CDB[0] == HPSA_REPORT_LOG) ||
+			(c->Request.CDB[0] == HPSA_REPORT_PHYS) ||
+			(c->Request.CDB[0] == HPSA_INQUIRY)) &&
+			((c->err_info->CommandStatus == CMD_DATA_OVERRUN) ||
+			(c->err_info->CommandStatus == CMD_DATA_UNDERRUN))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->err_info->CommandStatus == CMD_DATA_OVERRUN'
#2620: FILE: drivers/scsi/hpsa.c:2534:
+		if (((c->Request.CDB[0] == HPSA_REPORT_LOG) ||
+			(c->Request.CDB[0] == HPSA_REPORT_PHYS) ||
+			(c->Request.CDB[0] == HPSA_INQUIRY)) &&
+			((c->err_info->CommandStatus == CMD_DATA_OVERRUN) ||
+			(c->err_info->CommandStatus == CMD_DATA_UNDERRUN))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->err_info->CommandStatus == CMD_DATA_UNDERRUN'
#2620: FILE: drivers/scsi/hpsa.c:2534:
+		if (((c->Request.CDB[0] == HPSA_REPORT_LOG) ||
+			(c->Request.CDB[0] == HPSA_REPORT_PHYS) ||
+			(c->Request.CDB[0] == HPSA_INQUIRY)) &&
+			((c->err_info->CommandStatus == CMD_DATA_OVERRUN) ||
+			(c->err_info->CommandStatus == CMD_DATA_UNDERRUN))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2621: FILE: drivers/scsi/hpsa.c:2535:
+		if (((c->Request.CDB[0] == HPSA_REPORT_LOG) ||
+			(c->Request.CDB[0] == HPSA_REPORT_PHYS) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2639: FILE: drivers/scsi/hpsa.c:2553:
+			dev_warn(&h->pdev->dev,
+				"retried %p too many times\n", c);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2645: FILE: drivers/scsi/hpsa.c:2559:
+			dev_warn(&h->pdev->dev,
+				"command could not be aborted.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2651: FILE: drivers/scsi/hpsa.c:2565:
+		dev_warn(&h->pdev->dev,
+			"cmd = 0x%02x, CommandStatus = 0x%02x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2655: FILE: drivers/scsi/hpsa.c:2569:
+			dev_warn(&h->pdev->dev, "target status = 0x%02x\n",
+				c->err_info->ScsiStatus);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2658: FILE: drivers/scsi/hpsa.c:2572:
+				dev_warn(&h->pdev->dev, "sense key = 0x%02x\n",
+					0xf & c->err_info->SenseInfo[2]);

CHECK:SPACING: No space is necessary after a cast
#2671: FILE: drivers/scsi/hpsa.c:2585:
+	pci_unmap_single(h->pdev, (dma_addr_t) buff_dma_handle.val,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c"
#2687: FILE: drivers/scsi/hpsa.c:2601:
+	if (c == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2692: FILE: drivers/scsi/hpsa.c:2606:
+	status = fill_cmd(c, cmd, h, buff, size, page_code,
+		scsi3addr, cmd_type);

CHECK:SPACING: No space is necessary after a cast
#2704: FILE: drivers/scsi/hpsa.c:2618:
+	ulong page_base = ((ulong) base) & PAGE_MASK;

CHECK:SPACING: No space is necessary after a cast
#2705: FILE: drivers/scsi/hpsa.c:2619:
+	ulong page_offs = ((ulong) base) - page_base;

CHECK:CAMELCASE: Avoid CamelCase: <cmpQ>
#2734: FILE: drivers/scsi/hpsa.c:2648:
+		addQ(&h->cmpQ, c);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2751: FILE: drivers/scsi/hpsa.c:2665:
+	return ((h->access.intr_pending(h) == 0) ||
+		 (h->interrupts_enabled == 0));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2755: FILE: drivers/scsi/hpsa.c:2669:
+static inline int bad_tag(struct ctlr_info *h, __u32 tag_index,
+	__u32 raw_tag)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2809: FILE: drivers/scsi/hpsa.c:2723:
+static __devinit int hpsa_message(struct pci_dev *pdev, unsigned char opcode,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2810: FILE: drivers/scsi/hpsa.c:2724:
+static __devinit int hpsa_message(struct pci_dev *pdev, unsigned char opcode,
+						unsigned char type)

CHECK:CAMELCASE: Avoid CamelCase: <Command>
#2812: FILE: drivers/scsi/hpsa.c:2726:
+	struct Command {

CHECK:CAMELCASE: Avoid CamelCase: <CommandListHeader>
#2813: FILE: drivers/scsi/hpsa.c:2727:
+		struct CommandListHeader CommandHeader;

CHECK:CAMELCASE: Avoid CamelCase: <CommandHeader>
#2813: FILE: drivers/scsi/hpsa.c:2727:
+		struct CommandListHeader CommandHeader;

CHECK:CAMELCASE: Avoid CamelCase: <RequestBlock>
#2814: FILE: drivers/scsi/hpsa.c:2728:
+		struct RequestBlock Request;

CHECK:CAMELCASE: Avoid CamelCase: <ErrDescriptor>
#2815: FILE: drivers/scsi/hpsa.c:2729:
+		struct ErrDescriptor ErrorDescriptor;

CHECK:CAMELCASE: Avoid CamelCase: <ErrorDescriptor>
#2815: FILE: drivers/scsi/hpsa.c:2729:
+		struct ErrDescriptor ErrorDescriptor;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2821: FILE: drivers/scsi/hpsa.c:2735:
+	uint32_t paddr32, tag;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vaddr"
#2826: FILE: drivers/scsi/hpsa.c:2740:
+	if (vaddr == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cmd"
#2840: FILE: drivers/scsi/hpsa.c:2754:
+	if (cmd == NULL) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2876: FILE: drivers/scsi/hpsa.c:2790:
+		schedule_timeout_uninterruptible(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2900: FILE: drivers/scsi/hpsa.c:2814:
+	dev_info(&pdev->dev, "controller message %02x:%02x succeeded\n",
+		opcode, type);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2907: FILE: drivers/scsi/hpsa.c:2821:
+static __devinit int hpsa_reset_msi(struct pci_dev *pdev)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#2910: FILE: drivers/scsi/hpsa.c:2824:
+#define msi_control_reg(base)		(base + PCI_MSI_FLAGS)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2911: FILE: drivers/scsi/hpsa.c:2825:
+#define PCI_MSIX_FLAGS_ENABLE		(1 << 15)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2922: FILE: drivers/scsi/hpsa.c:2836:
+			pci_write_config_word(pdev, msi_control_reg(pos),
+					control & ~PCI_MSI_FLAGS_ENABLE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2932: FILE: drivers/scsi/hpsa.c:2846:
+			pci_write_config_word(pdev, msi_control_reg(pos),
+					control & ~PCI_MSIX_FLAGS_ENABLE);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2942: FILE: drivers/scsi/hpsa.c:2856:
+static __devinit int hpsa_hard_reset_controller(struct pci_dev *pdev)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2966: FILE: drivers/scsi/hpsa.c:2880:
+		pci_read_config_word(pdev, 2*i, &saved_config_space[i]);
 		                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3011: FILE: drivers/scsi/hpsa.c:2925:
+		pci_write_config_word(pdev, 2*i, saved_config_space[i]);
 		                             ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#3013: FILE: drivers/scsi/hpsa.c:2927:
+	wmb();

CHECK:CAMELCASE: Avoid CamelCase: <CfgTable>
#3025: FILE: drivers/scsi/hpsa.c:2939:
+static void print_cfg_table(struct device *dev, struct CfgTable *tb)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tb->Signature[i]
#3033: FILE: drivers/scsi/hpsa.c:2947:
+		temp_name[i] = readb(&(tb->Signature[i]));

CHECK:CAMELCASE: Avoid CamelCase: <Signature>
#3033: FILE: drivers/scsi/hpsa.c:2947:
+		temp_name[i] = readb(&(tb->Signature[i]));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tb->SpecValence
#3036: FILE: drivers/scsi/hpsa.c:2950:
+	dev_info(dev, "   Spec Number = %d\n", readl(&(tb->SpecValence)));

CHECK:CAMELCASE: Avoid CamelCase: <SpecValence>
#3036: FILE: drivers/scsi/hpsa.c:2950:
+	dev_info(dev, "   Spec Number = %d\n", readl(&(tb->SpecValence)));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3038: FILE: drivers/scsi/hpsa.c:2952:
+	dev_info(dev, "   Transport methods supported = 0x%x\n",
+	       readl(&(tb->TransportSupport)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tb->TransportSupport
#3038: FILE: drivers/scsi/hpsa.c:2952:
+	       readl(&(tb->TransportSupport)));

CHECK:CAMELCASE: Avoid CamelCase: <TransportSupport>
#3038: FILE: drivers/scsi/hpsa.c:2952:
+	       readl(&(tb->TransportSupport)));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3040: FILE: drivers/scsi/hpsa.c:2954:
+	dev_info(dev, "   Transport methods active = 0x%x\n",
+	       readl(&(tb->TransportActive)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tb->TransportActive
#3040: FILE: drivers/scsi/hpsa.c:2954:
+	       readl(&(tb->TransportActive)));

CHECK:CAMELCASE: Avoid CamelCase: <TransportActive>
#3040: FILE: drivers/scsi/hpsa.c:2954:
+	       readl(&(tb->TransportActive)));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3042: FILE: drivers/scsi/hpsa.c:2956:
+	dev_info(dev, "   Requested transport Method = 0x%x\n",
+	       readl(&(tb->HostWrite.TransportRequest)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tb->HostWrite.TransportRequest
#3042: FILE: drivers/scsi/hpsa.c:2956:
+	       readl(&(tb->HostWrite.TransportRequest)));

CHECK:CAMELCASE: Avoid CamelCase: <HostWrite>
#3042: FILE: drivers/scsi/hpsa.c:2956:
+	       readl(&(tb->HostWrite.TransportRequest)));

CHECK:CAMELCASE: Avoid CamelCase: <TransportRequest>
#3042: FILE: drivers/scsi/hpsa.c:2956:
+	       readl(&(tb->HostWrite.TransportRequest)));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3044: FILE: drivers/scsi/hpsa.c:2958:
+	dev_info(dev, "   Coalesce Interrupt Delay = 0x%x\n",
+	       readl(&(tb->HostWrite.CoalIntDelay)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tb->HostWrite.CoalIntDelay
#3044: FILE: drivers/scsi/hpsa.c:2958:
+	       readl(&(tb->HostWrite.CoalIntDelay)));

CHECK:CAMELCASE: Avoid CamelCase: <CoalIntDelay>
#3044: FILE: drivers/scsi/hpsa.c:2958:
+	       readl(&(tb->HostWrite.CoalIntDelay)));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3046: FILE: drivers/scsi/hpsa.c:2960:
+	dev_info(dev, "   Coalesce Interrupt Count = 0x%x\n",
+	       readl(&(tb->HostWrite.CoalIntCount)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tb->HostWrite.CoalIntCount
#3046: FILE: drivers/scsi/hpsa.c:2960:
+	       readl(&(tb->HostWrite.CoalIntCount)));

CHECK:CAMELCASE: Avoid CamelCase: <CoalIntCount>
#3046: FILE: drivers/scsi/hpsa.c:2960:
+	       readl(&(tb->HostWrite.CoalIntCount)));

ERROR:PRINTF_0XDECIMAL: Prefixing 0x with decimal output is defective
#3047: FILE: drivers/scsi/hpsa.c:2961:
+	dev_info(dev, "   Max outstanding commands = 0x%d\n",

Prefixing 0x with decimal output is defective and should be corrected.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3048: FILE: drivers/scsi/hpsa.c:2962:
+	dev_info(dev, "   Max outstanding commands = 0x%d\n",
+	       readl(&(tb->CmdsOutMax)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tb->CmdsOutMax
#3048: FILE: drivers/scsi/hpsa.c:2962:
+	       readl(&(tb->CmdsOutMax)));

CHECK:CAMELCASE: Avoid CamelCase: <CmdsOutMax>
#3048: FILE: drivers/scsi/hpsa.c:2962:
+	       readl(&(tb->CmdsOutMax)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tb->BusTypes
#3049: FILE: drivers/scsi/hpsa.c:2963:
+	dev_info(dev, "   Bus Types = 0x%x\n", readl(&(tb->BusTypes)));

CHECK:CAMELCASE: Avoid CamelCase: <BusTypes>
#3049: FILE: drivers/scsi/hpsa.c:2963:
+	dev_info(dev, "   Bus Types = 0x%x\n", readl(&(tb->BusTypes)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tb->ServerName[i]
#3051: FILE: drivers/scsi/hpsa.c:2965:
+		temp_name[i] = readb(&(tb->ServerName[i]));

CHECK:CAMELCASE: Avoid CamelCase: <ServerName>
#3051: FILE: drivers/scsi/hpsa.c:2965:
+		temp_name[i] = readb(&(tb->ServerName[i]));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3055: FILE: drivers/scsi/hpsa.c:2969:
+	dev_info(dev, "   Heartbeat Counter = 0x%x\n\n\n",
+		readl(&(tb->HeartBeat)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tb->HeartBeat
#3055: FILE: drivers/scsi/hpsa.c:2969:
+		readl(&(tb->HeartBeat)));

CHECK:CAMELCASE: Avoid CamelCase: <HeartBeat>
#3055: FILE: drivers/scsi/hpsa.c:2969:
+		readl(&(tb->HeartBeat)));

CHECK:BRACES: braces {} should be used on all arms of this statement
#3068: FILE: drivers/scsi/hpsa.c:2982:
+		if (bar_type == PCI_BASE_ADDRESS_SPACE_IO)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3070: FILE: drivers/scsi/hpsa.c:2984:
+		else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3083: FILE: drivers/scsi/hpsa.c:2997:
+				dev_warn(&pdev->dev,
+				       "base address is invalid\n");

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#3085: FILE: drivers/scsi/hpsa.c:2999:
+				return -1;
+				break;

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#3098: FILE: drivers/scsi/hpsa.c:3012:
+static void __devinit hpsa_interrupt_mode(struct ctlr_info *h,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3099: FILE: drivers/scsi/hpsa.c:3013:
+static void __devinit hpsa_interrupt_mode(struct ctlr_info *h,
+					   struct pci_dev *pdev, __u32 board_id)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'board_id == 0x40700E11'
#3108: FILE: drivers/scsi/hpsa.c:3022:
+	if ((board_id == 0x40700E11) ||
+	    (board_id == 0x40800E11) ||
+	    (board_id == 0x40820E11) || (board_id == 0x40830E11))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'board_id == 0x40800E11'
#3108: FILE: drivers/scsi/hpsa.c:3022:
+	if ((board_id == 0x40700E11) ||
+	    (board_id == 0x40800E11) ||
+	    (board_id == 0x40820E11) || (board_id == 0x40830E11))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'board_id == 0x40820E11'
#3108: FILE: drivers/scsi/hpsa.c:3022:
+	if ((board_id == 0x40700E11) ||
+	    (board_id == 0x40800E11) ||
+	    (board_id == 0x40820E11) || (board_id == 0x40830E11))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'board_id == 0x40830E11'
#3108: FILE: drivers/scsi/hpsa.c:3022:
+	if ((board_id == 0x40700E11) ||
+	    (board_id == 0x40800E11) ||
+	    (board_id == 0x40820E11) || (board_id == 0x40830E11))

WARNING:SPLIT_STRING: quoted string split across lines
#3125: FILE: drivers/scsi/hpsa.c:3039:
+			dev_warn(&pdev->dev, "only %d MSI-X vectors "
+			       "available\n", err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3129: FILE: drivers/scsi/hpsa.c:3043:
+			dev_warn(&pdev->dev, "MSI-X init failed %d\n",
+			       err);

WARNING:RETURN_VOID: void function return statements are not generally useful
#3145: FILE: drivers/scsi/hpsa.c:3059:
+	return;
+}

CHECK:SPACING: No space is necessary after a cast
#3158: FILE: drivers/scsi/hpsa.c:3072:
+	board_id = (((__u32) (subsystem_device_id << 16) & 0xffff0000) |

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3170: FILE: drivers/scsi/hpsa.c:3084:
+		if (subsystem_vendor_id == !PCI_VENDOR_ID_HP ||
+				!hpsa_allow_any) {

WARNING:SPLIT_STRING: quoted string split across lines
#3172: FILE: drivers/scsi/hpsa.c:3086:
+			dev_warn(&pdev->dev, "unrecognized board ID:"
+				" 0x%08lx, ignoring.\n",

CHECK:SPACING: No space is necessary after a cast
#3173: FILE: drivers/scsi/hpsa.c:3087:
+				(unsigned long) board_id);

CHECK:SPACING: No space is necessary after a cast
#3236: FILE: drivers/scsi/hpsa.c:3150:
+	cfg_base_addr &= (__u32) 0x0000ffff;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3246: FILE: drivers/scsi/hpsa.c:3160:
+	h->cfgtable = remap_pci_mem(pci_resource_start(pdev,
+			       cfg_base_addr_index) + cfg_offset,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around h->cfgtable->CmdsOutMax
#3251: FILE: drivers/scsi/hpsa.c:3165:
+	h->max_commands = readl(&(h->cfgtable->CmdsOutMax));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around products[prod_index].access
#3254: FILE: drivers/scsi/hpsa.c:3168:
+	h->access = *(products[prod_index].access);

WARNING:LINE_SPACING: Missing a blank line after declarations
#3270: FILE: drivers/scsi/hpsa.c:3184:
+		__u32 prefetch;
+		prefetch = readl(&(h->cfgtable->SCSI_Prefetch));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around h->cfgtable->SCSI_Prefetch
#3270: FILE: drivers/scsi/hpsa.c:3184:
+		prefetch = readl(&(h->cfgtable->SCSI_Prefetch));

CHECK:CAMELCASE: Avoid CamelCase: <SCSI_Prefetch>
#3270: FILE: drivers/scsi/hpsa.c:3184:
+		prefetch = readl(&(h->cfgtable->SCSI_Prefetch));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around h->cfgtable->SCSI_Prefetch
#3272: FILE: drivers/scsi/hpsa.c:3186:
+		writel(prefetch, &(h->cfgtable->SCSI_Prefetch));

WARNING:LINE_SPACING: Missing a blank line after declarations
#3282: FILE: drivers/scsi/hpsa.c:3196:
+		__u32 dma_prefetch;
+		dma_prefetch = readl(h->vaddr + I2O_DMA1_CFG);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around h->cfgtable->CmdsOutMax
#3287: FILE: drivers/scsi/hpsa.c:3201:
+	h->max_commands = readl(&(h->cfgtable->CmdsOutMax));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around h->cfgtable->HostWrite.TransportRequest
#3289: FILE: drivers/scsi/hpsa.c:3203:
+	writel(CFGTBL_Trans_Simple, &(h->cfgtable->HostWrite.TransportRequest));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around h->cfgtable->TransportActive
#3308: FILE: drivers/scsi/hpsa.c:3222:
+	if (!(readl(&(h->cfgtable->TransportActive)) & CFGTBL_Trans_Simple)) {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#3324: FILE: drivers/scsi/hpsa.c:3238:
+static int __devinit hpsa_init_one(struct pci_dev *pdev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3325: FILE: drivers/scsi/hpsa.c:3239:
+static int __devinit hpsa_init_one(struct pci_dev *pdev,
+				    const struct pci_device_id *ent)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3332: FILE: drivers/scsi/hpsa.c:3246:
+		printk(KERN_INFO DRIVER_NAME "\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3339: FILE: drivers/scsi/hpsa.c:3253:
+		/* Some devices (notably the HP Smart Array 5i Controller)
+		   need a little pause here */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3339: FILE: drivers/scsi/hpsa.c:3253:
+		   need a little pause here */

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#3346: FILE: drivers/scsi/hpsa.c:3260:
+				break;
+			else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3348: FILE: drivers/scsi/hpsa.c:3262:
+				dev_warn(&pdev->dev, "no-op failed%s\n",
+						(i < 11 ? "; re-trying" : ""));

CHECK:BRACES: braces {} should be used on all arms of this statement
#3368: FILE: drivers/scsi/hpsa.c:3282:
+	if (!pci_set_dma_mask(pdev, DMA_BIT_MASK(64)))
[...]
+	else if (!pci_set_dma_mask(pdev, DMA_BIT_MASK(32)))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3372: FILE: drivers/scsi/hpsa.c:3286:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3382: FILE: drivers/scsi/hpsa.c:3296:
+		dev_err(&pdev->dev, "unable to get irq %d for %s\n",
+		       h->intr[SIMPLE_MODE_INT], h->devname);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3387: FILE: drivers/scsi/hpsa.c:3301:
+	dev_info(&pdev->dev, "%s: <0x%x> at PCI %s IRQ %d%s using DAC\n",
+	       h->devname, pdev->device, pci_name(pdev),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3394: FILE: drivers/scsi/hpsa.c:3308:
+	h->cmd_pool = pci_alloc_consistent(h->pdev,
+		    h->nr_cmds * sizeof(*h->cmd_pool),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around h->cmd_pool_dhandle
#3395: FILE: drivers/scsi/hpsa.c:3309:
+		    &(h->cmd_pool_dhandle));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3397: FILE: drivers/scsi/hpsa.c:3311:
+	h->errinfo_pool = pci_alloc_consistent(h->pdev,
+		    h->nr_cmds * sizeof(*h->errinfo_pool),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around h->errinfo_pool_dhandle
#3398: FILE: drivers/scsi/hpsa.c:3312:
+		    &(h->errinfo_pool_dhandle));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'h->cmd_pool_bits == NULL'
#3399: FILE: drivers/scsi/hpsa.c:3313:
+	if ((h->cmd_pool_bits == NULL)
+	    || (h->cmd_pool == NULL)
+	    || (h->errinfo_pool == NULL)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'h->cmd_pool == NULL'
#3399: FILE: drivers/scsi/hpsa.c:3313:
+	if ((h->cmd_pool_bits == NULL)
+	    || (h->cmd_pool == NULL)
+	    || (h->errinfo_pool == NULL)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'h->errinfo_pool == NULL'
#3399: FILE: drivers/scsi/hpsa.c:3313:
+	if ((h->cmd_pool_bits == NULL)
+	    || (h->cmd_pool == NULL)
+	    || (h->errinfo_pool == NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!h->cmd_pool_bits"
#3399: FILE: drivers/scsi/hpsa.c:3313:
+	if ((h->cmd_pool_bits == NULL)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#3400: FILE: drivers/scsi/hpsa.c:3314:
+	if ((h->cmd_pool_bits == NULL)
+	    || (h->cmd_pool == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!h->cmd_pool"
#3400: FILE: drivers/scsi/hpsa.c:3314:
+	    || (h->cmd_pool == NULL)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#3401: FILE: drivers/scsi/hpsa.c:3315:
+	    || (h->cmd_pool == NULL)
+	    || (h->errinfo_pool == NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!h->errinfo_pool"
#3401: FILE: drivers/scsi/hpsa.c:3315:
+	    || (h->errinfo_pool == NULL)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3425: FILE: drivers/scsi/hpsa.c:3339:
+		pci_free_consistent(h->pdev,
+			    h->nr_cmds * sizeof(struct CommandList),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3429: FILE: drivers/scsi/hpsa.c:3343:
+		pci_free_consistent(h->pdev,
+			    h->nr_cmds * sizeof(struct ErrorInfo),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3452: FILE: drivers/scsi/hpsa.c:3366:
+	return_code = sendcmd(HPSA_CACHE_FLUSH, h, flush_buf, 4, 0,
+				RAID_CTLR_LUNID, TYPE_CMD);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3455: FILE: drivers/scsi/hpsa.c:3369:
+		dev_warn(&pdev->dev, "error flushing cache on controller %d\n",
+		       h->ctlr);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#3466: FILE: drivers/scsi/hpsa.c:3380:
+static void __devexit hpsa_remove_one(struct pci_dev *pdev)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pci_get_drvdata"
#3470: FILE: drivers/scsi/hpsa.c:3384:
+	if (pci_get_drvdata(pdev) == NULL) {

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#3471: FILE: drivers/scsi/hpsa.c:3385:
+		dev_err(&pdev->dev, "unable to remove device \n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3479: FILE: drivers/scsi/hpsa.c:3393:
+	pci_free_consistent(h->pdev,
+		h->nr_cmds * sizeof(struct CommandList),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3482: FILE: drivers/scsi/hpsa.c:3396:
+	pci_free_consistent(h->pdev,
+		h->nr_cmds * sizeof(struct ErrorInfo),

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#3494: FILE: drivers/scsi/hpsa.c:3408:
+static int hpsa_suspend(__attribute__((unused)) struct pci_dev *pdev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3495: FILE: drivers/scsi/hpsa.c:3409:
+static int hpsa_suspend(__attribute__((unused)) struct pci_dev *pdev,
+	__attribute__((unused)) pm_message_t state)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#3495: FILE: drivers/scsi/hpsa.c:3409:
+	__attribute__((unused)) pm_message_t state)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#3497: FILE: drivers/scsi/hpsa.c:3411:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#3500: FILE: drivers/scsi/hpsa.c:3414:
+static int hpsa_resume(__attribute__((unused)) struct pci_dev *pdev)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#3502: FILE: drivers/scsi/hpsa.c:3416:
+	return -ENOSYS;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3537: FILE: drivers/scsi/hpsa.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#3551: FILE: drivers/scsi/hpsa.h:15:
+ *    along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#3552: FILE: drivers/scsi/hpsa.h:16:
+ *    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3569: FILE: drivers/scsi/hpsa.h:33:
+	void (*submit_command)(struct ctlr_info *h,
+		struct CommandList *c);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3597: FILE: drivers/scsi/hpsa.h:61:
+^Iint ^Inr_cmds; /* Number of commands allowed on this controller */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3601: FILE: drivers/scsi/hpsa.h:65:
+^Iint ^Imax_commands;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3603: FILE: drivers/scsi/hpsa.h:67:
+^Iint ^Imax_outstanding; /* Debug */$

WARNING:REPEATED_WORD: Possible repeated word: 'all'
#3604: FILE: drivers/scsi/hpsa.h:68:
+	int	usage_count;  /* number of opens all all minor devices */

CHECK:CAMELCASE: Avoid CamelCase: <maxQsinceinit>
#3618: FILE: drivers/scsi/hpsa.h:82:
+	unsigned int maxQsinceinit;

CHECK:CAMELCASE: Avoid CamelCase: <maxSG>
#3619: FILE: drivers/scsi/hpsa.h:83:
+	unsigned int maxSG;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#3620: FILE: drivers/scsi/hpsa.h:84:
+	spinlock_t lock;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3623: FILE: drivers/scsi/hpsa.h:87:
+^Istruct CommandList ^I*cmd_pool;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3625: FILE: drivers/scsi/hpsa.h:89:
+^Istruct ErrorInfo ^I*errinfo_pool;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3627: FILE: drivers/scsi/hpsa.h:91:
+^Iunsigned long  ^I^I*cmd_pool_bits;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#3637: FILE: drivers/scsi/hpsa.h:101:
+};
+#define HPSA_ABORT_MSG 0

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3702: FILE: drivers/scsi/hpsa.h:166:
+#define HPSA_INTR_ON ^I1$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3705: FILE: drivers/scsi/hpsa.h:169:
+/*
+	Send the command to the hardware

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3708: FILE: drivers/scsi/hpsa.h:172:
+static void SA5_submit_command(struct ctlr_info *h,
+	struct CommandList *c)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3711: FILE: drivers/scsi/hpsa.h:175:
+	 printk(KERN_WARNING "hpsa: Sending %x - down to controller\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3733: FILE: drivers/scsi/hpsa.h:197:
+		writel(SA5_INTR_OFF,
+			h->vaddr + SA5_REPLY_INTR_MASK_OFFSET);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#3736: FILE: drivers/scsi/hpsa.h:200:
+}
+/*

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#3747: FILE: drivers/scsi/hpsa.h:211:
+
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#3748: FILE: drivers/scsi/hpsa.h:212:
+}
+/*

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#3755: FILE: drivers/scsi/hpsa.h:219:
+	unsigned long register_value
+		= readl(h->vaddr + SA5_REPLY_PORT_OFFSET);

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3762: FILE: drivers/scsi/hpsa.h:226:
+		printk(KERN_INFO "hpsa:  Read %lx back from board\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3763: FILE: drivers/scsi/hpsa.h:227:
+		printk(KERN_INFO "hpsa:  Read %lx back from board\n",
+			register_value);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3765: FILE: drivers/scsi/hpsa.h:229:
+		printk(KERN_INFO "hpsa:  FIFO Empty read\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#3770: FILE: drivers/scsi/hpsa.h:234:
+}
+/*

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3778: FILE: drivers/scsi/hpsa.h:242:
+	printk(KERN_INFO "hpsa: intr_pending %lx\n", register_value);

WARNING:SPACING: space prohibited before semicolon
#3782: FILE: drivers/scsi/hpsa.h:246:
+	return 0 ;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3785: FILE: drivers/scsi/hpsa.h:249:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3800: FILE: drivers/scsi/hpsa.h:264:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3811: FILE: drivers/scsi/hpsa_cmd.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#3825: FILE: drivers/scsi/hpsa_cmd.h:15:
+ *    along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#3826: FILE: drivers/scsi/hpsa_cmd.h:16:
+ *    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:TYPO_SPELLING: 'defintions' may be misspelled - perhaps 'definitions'?
#3834: FILE: drivers/scsi/hpsa_cmd.h:24:
+/* general boundary defintions */
                     ^^^^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <InquiryData>
#3915: FILE: drivers/scsi/hpsa_cmd.h:105:
+struct InquiryData {

CHECK:CAMELCASE: Avoid CamelCase: <ReportExtendedLUNdata>
#3927: FILE: drivers/scsi/hpsa_cmd.h:117:
+struct ReportExtendedLUNdata {

CHECK:CAMELCASE: Avoid CamelCase: <SenseSubsystem_info>
#3934: FILE: drivers/scsi/hpsa_cmd.h:124:
+struct SenseSubsystem_info {

CHECK:CAMELCASE: Avoid CamelCase: <ReadCapdata>
#3941: FILE: drivers/scsi/hpsa_cmd.h:131:
+struct ReadCapdata {

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#3946: FILE: drivers/scsi/hpsa_cmd.h:136:
+#if 0

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3948: FILE: drivers/scsi/hpsa_cmd.h:138:
+#define HPSA_READ ^I0xa8$

CHECK:CAMELCASE: Avoid CamelCase: <SCSI3Addr>
#3962: FILE: drivers/scsi/hpsa_cmd.h:152:
+union SCSI3Addr {

CHECK:CAMELCASE: Avoid CamelCase: <Dev>
#3964: FILE: drivers/scsi/hpsa_cmd.h:154:
+		__u8 Dev;

CHECK:CAMELCASE: Avoid CamelCase: <Bus>
#3965: FILE: drivers/scsi/hpsa_cmd.h:155:
+		__u8 Bus:6;

CHECK:CAMELCASE: Avoid CamelCase: <Mode>
#3966: FILE: drivers/scsi/hpsa_cmd.h:156:
+		__u8 Mode:2;        /* b00 */

CHECK:CAMELCASE: Avoid CamelCase: <PeripDev>
#3967: FILE: drivers/scsi/hpsa_cmd.h:157:
+	} PeripDev;

CHECK:CAMELCASE: Avoid CamelCase: <DevLSB>
#3969: FILE: drivers/scsi/hpsa_cmd.h:159:
+		__u8 DevLSB;

CHECK:CAMELCASE: Avoid CamelCase: <DevMSB>
#3970: FILE: drivers/scsi/hpsa_cmd.h:160:
+		__u8 DevMSB:6;

CHECK:CAMELCASE: Avoid CamelCase: <LogDev>
#3972: FILE: drivers/scsi/hpsa_cmd.h:162:
+	} LogDev;

CHECK:CAMELCASE: Avoid CamelCase: <Targ>
#3976: FILE: drivers/scsi/hpsa_cmd.h:166:
+		__u8 Targ:6;

CHECK:CAMELCASE: Avoid CamelCase: <LogUnit>
#3978: FILE: drivers/scsi/hpsa_cmd.h:168:
+	} LogUnit;

CHECK:CAMELCASE: Avoid CamelCase: <PhysDevAddr>
#3981: FILE: drivers/scsi/hpsa_cmd.h:171:
+struct PhysDevAddr {

CHECK:CAMELCASE: Avoid CamelCase: <TargetId>
#3982: FILE: drivers/scsi/hpsa_cmd.h:172:
+	__u32             TargetId:24;

CHECK:CAMELCASE: Avoid CamelCase: <Target>
#3986: FILE: drivers/scsi/hpsa_cmd.h:176:
+	union SCSI3Addr  Target[2];

CHECK:CAMELCASE: Avoid CamelCase: <LogDevAddr>
#3989: FILE: drivers/scsi/hpsa_cmd.h:179:
+struct LogDevAddr {

CHECK:CAMELCASE: Avoid CamelCase: <VolId>
#3990: FILE: drivers/scsi/hpsa_cmd.h:180:
+	__u32            VolId:30;

CHECK:CAMELCASE: Avoid CamelCase: <LUNAddr>
#3995: FILE: drivers/scsi/hpsa_cmd.h:185:
+union LUNAddr {

CHECK:CAMELCASE: Avoid CamelCase: <SCSI3Lun>
#3997: FILE: drivers/scsi/hpsa_cmd.h:187:
+	union SCSI3Addr    SCSI3Lun[4];

CHECK:CAMELCASE: Avoid CamelCase: <PhysDev>
#3998: FILE: drivers/scsi/hpsa_cmd.h:188:
+	struct PhysDevAddr PhysDev;

CHECK:CAMELCASE: Avoid CamelCase: <SGDescriptor>
#4026: FILE: drivers/scsi/hpsa_cmd.h:216:
+struct SGDescriptor {

CHECK:CAMELCASE: Avoid CamelCase: <MoreErrInfo>
#4032: FILE: drivers/scsi/hpsa_cmd.h:222:
+union MoreErrInfo {

CHECK:CAMELCASE: Avoid CamelCase: <Reserved>
#4034: FILE: drivers/scsi/hpsa_cmd.h:224:
+		__u8  Reserved[3];

CHECK:CAMELCASE: Avoid CamelCase: <Common_Info>
#4037: FILE: drivers/scsi/hpsa_cmd.h:227:
+	} Common_Info;

CHECK:CAMELCASE: Avoid CamelCase: <Invalid_Cmd>
#4043: FILE: drivers/scsi/hpsa_cmd.h:233:
+	} Invalid_Cmd;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4045: FILE: drivers/scsi/hpsa_cmd.h:235:
+};
+struct ErrorInfo {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4053: FILE: drivers/scsi/hpsa_cmd.h:243:
+};
+/* Command types */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000065242.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 126 warnings, 364 checks, 4038 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000065242.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
