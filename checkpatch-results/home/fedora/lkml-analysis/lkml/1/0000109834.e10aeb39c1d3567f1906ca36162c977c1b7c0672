WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#70: 
http://www.ieee802.org/1/files/public/docs2009/new-hudson-vepa_seminar-20090514d.pdf

CHECK:BRACES: braces {} should be used on all arms of this statement
#93: FILE: brctl/brctl_cmd.c:285:
+	if (!strcmp(param, "on") || !strcmp(param, "yes")
[...]
+	else if (!strcmp(param, "off") || !strcmp(param, "no")
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#94: FILE: brctl/brctl_cmd.c:286:
+	if (!strcmp(param, "on") || !strcmp(param, "yes")
+	    || !strcmp(param, "1"))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#97: FILE: brctl/brctl_cmd.c:289:
+	else if (!strcmp(param, "off") || !strcmp(param, "no")
+		 || !strcmp(param, "0"))

CHECK:BRACES: Unbalanced braces around else statement
#99: FILE: brctl/brctl_cmd.c:291:
+	else {

WARNING:USE_NEGATIVE_ERRNO: return of an errno should typically be negative (ie: return -EINVAL)
#100: FILE: brctl/brctl_cmd.c:292:
+		return EINVAL;

ERROR:POINTER_LOCATION: "foo *const* bar" should be "foo *const*bar"
#125: FILE: brctl/brctl_cmd.c:328:
+static int br_cmd_vepa(int argc, char *const* argv)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo *const* bar" should be "foo *const*bar"
#142: FILE: brctl/brctl_cmd.c:345:
+static int br_cmd_vepauplink(int argc, char *const* argv)

WARNING:SPLIT_STRING: quoted string split across lines
#162: FILE: brctl/brctl_cmd.c:365:
+		fprintf(stderr, "cannot set %s as vepa uplink.\n%s has "
+			"to be valid port of bridge %s: %s\n", ifname,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:POINTER_LOCATION: "foo *const* bar" should be "foo *const*bar"
#168: FILE: brctl/brctl_cmd.c:371:
+static int br_cmd_hairpin(int argc, char *const* argv)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#176: FILE: brctl/brctl_cmd.c:379:
+	if (!strcmp(hpmode, "on") || !strcmp(hpmode, "yes")
+	    || !strcmp(hpmode, "1"))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#179: FILE: brctl/brctl_cmd.c:382:
+	else if (!strcmp(hpmode, "off") || !strcmp(hpmode, "no")
+		 || !strcmp(hpmode, "0"))

CHECK:BRACES: Unbalanced braces around else statement
#181: FILE: brctl/brctl_cmd.c:384:
+	else {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#276: FILE: libbridge/libbridge.h:119:
+extern int br_set_vepa_uplink(const char *br, const char *uplink);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#277: FILE: libbridge/libbridge.h:120:
+extern int br_set_vepa_mode(const char *br, int vepa_mode);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#278: FILE: libbridge/libbridge.h:121:
+extern int br_set_hairpin_mode(const char *bridge, const char *dev,

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#400: FILE: libbridge/libbridge_devif.c:381:
+				return 0;
+			} else {

WARNING:USE_NEGATIVE_ERRNO: return of an errno should typically be negative (ie: return -EINVAL)
#402: FILE: libbridge/libbridge_devif.c:383:
+				return EINVAL;

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#406: FILE: libbridge/libbridge_devif.c:387:
+		return errno;
+	} else {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#427: FILE: libbridge/libbridge_devif.c:430:
+  return br_set_string(br, "uplink_port", uplink, IFNAMSIZ);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000109834.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 7 warnings, 10 checks, 327 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000109834.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
