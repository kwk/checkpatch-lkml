WARNING:BAD_SIGN_OFF: Unexpected content after email: 'Miklos Szeredi <mszeredi@suse.cz> ---', should be: 'Miklos Szeredi <mszeredi@suse.cz> (---)'
#62: 
Signed-off-by: Miklos Szeredi <mszeredi@suse.cz> ---

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#98: FILE: fs/afs/inode.c:365:
+static int afs_do_setattr(struct dentry *dentry, struct iattr *attr,
+		   struct file *file)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#143: FILE: fs/afs/internal.h:553:
+extern int afs_fsetattr(struct file *, struct iattr *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#143: FILE: fs/afs/internal.h:553:
+extern int afs_fsetattr(struct file *, struct iattr *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct iattr *' should also have an identifier name
#143: FILE: fs/afs/internal.h:553:
+extern int afs_fsetattr(struct file *, struct iattr *);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#203: FILE: fs/open.c:214:
+	err = fnotify_change(dentry, &newattrs, filp);
 	                                        ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#221: FILE: fs/open.c:645:
+static int chown_common(struct dentry * dentry, uid_t user, gid_t group,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#240: FILE: fs/open.c:690:
+	error = chown_common(nd.dentry, user, group, NULL);
 	                     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#249: FILE: fs/open.c:715:
+	error = chown_common(nd.dentry, user, group, NULL);
 	                     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#258: FILE: fs/open.c:734:
+	error = chown_common(nd.dentry, user, group, NULL);
 	                     ^^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#301: FILE: include/linux/fs.h:1191:
+	int (*fsetattr)(struct file *, struct iattr *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct iattr *' should also have an identifier name
#301: FILE: include/linux/fs.h:1191:
+	int (*fsetattr)(struct file *, struct iattr *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#309: FILE: include/linux/fs.h:1699:
+extern int fnotify_change(struct dentry *, struct iattr *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#309: FILE: include/linux/fs.h:1699:
+extern int fnotify_change(struct dentry *, struct iattr *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct iattr *' should also have an identifier name
#309: FILE: include/linux/fs.h:1699:
+extern int fnotify_change(struct dentry *, struct iattr *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#309: FILE: include/linux/fs.h:1699:
+extern int fnotify_change(struct dentry *, struct iattr *, struct file *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#335: FILE: fs/fuse/dir.c:1063:
+static bool update_mtime(unsigned ivalid, bool have_file)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "file"
#381: FILE: fs/fuse/dir.c:1153:
+	iattr_to_fattr(attr, &inarg, file != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LINE_SPACING: Please don't use multiple blank lines
#437: FILE: fs/fuse/fuse_i.h:508:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000364911.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 13 warnings, 5 checks, 305 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000364911.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
