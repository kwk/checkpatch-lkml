WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
(possibly marked-as-deleted) list elements and releases a lock when the process

WARNING:LINE_SPACING: Missing a blank line after declarations
#204: FILE: security/tomoyo/common.c:982:
+			bool done;
+			down_read(&tomoyo_policy_lock);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#400: FILE: security/tomoyo/common.c:1302:
+		struct tomoyo_cookie *cookie = &head->write_var1;
+		if (is_delete) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#400: FILE: security/tomoyo/common.c:1302:
+		if (is_delete) {
[...]
-			down_read(&tomoyo_domain_list_lock);
[...]
+		} else if (is_select) {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#441: FILE: security/tomoyo/common.c:1466:
+			if (!(acl->type & TOMOYO_ACL_DELETED)
+			    || tomoyo_used_by_cookie(acl))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#449: FILE: security/tomoyo/common.c:1474:
+				acl1 = container_of(acl,
+				    struct tomoyo_single_path_acl_record,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#455: FILE: security/tomoyo/common.c:1480:
+				acl2 = container_of(acl,
+				    struct tomoyo_double_path_acl_record,

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#547: FILE: security/tomoyo/common.c:1596:
+	if (strict_strtoul(data, 10, &profile) ||

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:SPACING: No space is necessary after a cast
#556: FILE: security/tomoyo/common.c:1602:
+		cookie.u.domain->profile = (u8) profile;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#769: FILE: security/tomoyo/common.h:292:
+	return ((struct tomoyo_cookie *) current_cred()->security)->u.domain;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cookie->u.domain"
#1192: FILE: security/tomoyo/domain.c:702:
+	return cookie->u.domain != NULL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#1647: FILE: security/tomoyo/file.c:727:
+			struct tomoyo_cookie cookie;
+			tomoyo_add_cookie(&cookie, filename);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1745: FILE: security/tomoyo/file.c:1057:
+		struct tomoyo_cookie cookie;
+		tomoyo_add_cookie(&cookie, filename);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1762: FILE: security/tomoyo/file.c:1309:
+		struct tomoyo_cookie cookie2;
+		tomoyo_add_cookie(&cookie1, buf1);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1839: FILE: security/tomoyo/realpath.c:214:
+	int len = ptr ? ksize(ptr) : 0;
+	atomic_add(len, &tomoyo_allocated_memory_for_elements);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1847: FILE: security/tomoyo/realpath.c:222:
+		printk(KERN_WARNING "ERROR: Out of memory for %s().\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#1860: FILE: security/tomoyo/realpath.c:233:
+	int len;
+	if (!ptr)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1964: FILE: security/tomoyo/realpath.c:303:
+		printk(KERN_WARNING "ERROR: Out of memory for %s().\n",

CHECK:SPACING: No space is necessary after a cast
#1982: FILE: security/tomoyo/realpath.c:310:
+	ptr->entry.name = ((char *) ptr) + sizeof(*ptr);

CHECK:SPACING: No space is necessary after a cast
#1983: FILE: security/tomoyo/realpath.c:311:
+	memmove((char *) ptr->entry.name, name, len);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2019: FILE: security/tomoyo/realpath.c:340:
+			int len = ksize(ptr);
+			list_del(&ptr->list);

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#2060: FILE: security/tomoyo/realpath.c:416:
 		const unsigned int shared
+			= atomic_read(&tomoyo_allocated_memory_for_savename);

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#2063: FILE: security/tomoyo/realpath.c:418:
 		const unsigned int private
+			= atomic_read(&tomoyo_allocated_memory_for_elements);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2085: FILE: security/tomoyo/realpath.c:478:
+	unsigned long flags;
+	if (!cookie)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2101: FILE: security/tomoyo/realpath.c:494:
+	unsigned long flags;
+	if (!cookie)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2122: FILE: security/tomoyo/realpath.c:515:
+	bool in_use = false;
+	read_lock_irqsave(&tomoyo_cookie_list_lock, flags);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2183: FILE: security/tomoyo/realpath.h:80:
+}
+/* Delete a cookie from cookie list. */

CHECK:SPACING: No space is necessary after a cast
#2205: FILE: security/tomoyo/tomoyo.c:25:
+			  ((struct tomoyo_cookie *) old->security)->u.ptr);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2213: FILE: security/tomoyo/tomoyo.c:33:
+	struct tomoyo_cookie *cookie = cred->security;
+	tomoyo_del_cookie(cookie);

CHECK:SPACING: No space is necessary after a cast
#2225: FILE: security/tomoyo/tomoyo.c:55:
+	((struct tomoyo_cookie *) bprm->cred->security)->u.domain = NULL;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000128640.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 16 warnings, 14 checks, 2060 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000128640.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
