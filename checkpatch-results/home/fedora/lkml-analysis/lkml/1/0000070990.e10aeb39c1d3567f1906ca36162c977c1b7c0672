WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
page_mkwrite() is meant to be used by filesystems to allocate blocks under a

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#134: FILE: fs/buffer.c:2195:
+ * buffer head upto @to. When @from is on a block boundary or block straddling
                ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#145: FILE: fs/buffer.c:2206:
+					  loff_t to, unsigned flags,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#175: FILE: fs/buffer.c:2236:
+	head = bh = page_buffers(page);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#238: FILE: fs/buffer.c:2299:
+		       unsigned flags, get_block_t *get_block)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#277: FILE: fs/buffer.c:2338:
+		      unsigned flags, get_block_t *get_block)

WARNING:TYPO_SPELLING: 'happenning' may be misspelled - perhaps 'happening'?
#366: FILE: fs/buffer.c:2427:
+ * happenning immediately after we unlock the page initializes it correctly.
    ^^^^^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'page->mapping != inode->i_mapping'
#431: FILE: fs/buffer.c:2542:
+	if ((page->mapping != inode->i_mapping) ||
+	    (page_offset(page) > size)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#441: FILE: fs/buffer.c:2552:
+	head = bh = page_buffers(page);

WARNING:TYPO_SPELLING: 'sence' may be misspelled - perhaps 'sense'?
#446: FILE: fs/buffer.c:2557:
+		 * sence since the filesystem really delays the allocation
 		   ^^^^^

WARNING:RETURN_VOID: void function return statements are not generally useful
#596: FILE: fs/libfs.c:362:
+	return;
+}

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#654: FILE: include/linux/buffer_head.h:154:
+void create_empty_buffers(struct page *, unsigned long, unsigned long b_state);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#654: FILE: include/linux/buffer_head.h:154:
+void create_empty_buffers(struct page *, unsigned long, unsigned long b_state);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#664: FILE: include/linux/buffer_head.h:225:
+		       unsigned flags, get_block_t *get_block);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#666: FILE: include/linux/buffer_head.h:227:
+					  loff_t to, unsigned flags,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#684: FILE: include/linux/buffer_head.h:249:
+		      unsigned flags, get_block_t *get_block);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#697: FILE: include/linux/fs.h:599:
+				 * use new block_write_full_page */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000070990.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 14 warnings, 3 checks, 592 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000070990.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
