WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#74: 
 swapper-0     1d.s3    0us+: _spin_lock_irqsave+0x2a/0xb7 (e1000_update_stats+0x47/0x64c [e1000])

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#168: FILE: arch/x86/lib/thunk_32.S:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#296: FILE: include/asm-x86/irqflags.h:210:
+#  define TRACE_IRQS_ON		call trace_hardirqs_on_thunk;

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#296: FILE: include/asm-x86/irqflags.h:210:
+#  define TRACE_IRQS_ON		call trace_hardirqs_on_thunk;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#297: FILE: include/asm-x86/irqflags.h:211:
+#  define TRACE_IRQS_OFF	call trace_hardirqs_off_thunk;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#297: FILE: include/asm-x86/irqflags.h:211:
+#  define TRACE_IRQS_OFF	call trace_hardirqs_off_thunk;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: include/linux/ftrace.h:54:
+  extern void notrace time_hardirqs_on(unsigned long a0, unsigned long a1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: include/linux/ftrace.h:55:
+  extern void notrace time_hardirqs_off(unsigned long a0, unsigned long a1);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#311: FILE: include/linux/ftrace.h:55:
+  extern void notrace time_hardirqs_off(unsigned long a0, unsigned long a1);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: include/linux/irqflags.h:17:
+  extern void trace_hardirqs_on(void);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#330: FILE: include/linux/irqflags.h:17:
+  extern void trace_hardirqs_on(void);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: include/linux/irqflags.h:18:
+  extern void trace_hardirqs_off(void);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#331: FILE: include/linux/irqflags.h:18:
+  extern void trace_hardirqs_off(void);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: include/linux/irqflags.h:45:
+ extern void stop_critical_timings(void);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#340: FILE: include/linux/irqflags.h:45:
+ extern void stop_critical_timings(void);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: include/linux/irqflags.h:46:
+ extern void start_critical_timings(void);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#341: FILE: include/linux/irqflags.h:46:
+ extern void start_critical_timings(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#506: FILE: kernel/trace/trace_irqsoff.c:1:
+/*

WARNING:TYPO_SPELLING: 'criticall' may be misspelled - perhaps 'critical'?
#507: FILE: kernel/trace/trace_irqsoff.c:2:
+ * trace irqs off criticall timings
                   ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'doesnt' may be misspelled - perhaps 'doesn't'?
#534: FILE: kernel/trace/trace_irqsoff.c:29:
+ * and what happens together happens separately as well, so this doesnt
                                                                  ^^^^^^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#571: FILE: kernel/trace/trace_irqsoff.c:66:
+static struct ftrace_ops trace_ops __read_mostly =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#607: FILE: kernel/trace/trace_irqsoff.c:102:
+	delta = T1-T0;
 	          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#622: FILE: kernel/trace/trace_irqsoff.c:117:
+	delta = T2-T0;
 	          ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#638: FILE: kernel/trace/trace_irqsoff.c:133:
+		printk(KERN_INFO "(%16s-%-5d|#%d): %lu us critical section "

WARNING:SPLIT_STRING: quoted string split across lines
#639: FILE: kernel/trace/trace_irqsoff.c:134:
+		printk(KERN_INFO "(%16s-%-5d|#%d): %lu us critical section "
+		       "violates %lu us threshold.\n"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#645: FILE: kernel/trace/trace_irqsoff.c:140:
+		printk(KERN_INFO "(%16s-%-5d|#%d):"

WARNING:SPLIT_STRING: quoted string split across lines
#646: FILE: kernel/trace/trace_irqsoff.c:141:
+		printk(KERN_INFO "(%16s-%-5d|#%d):"
+		       " new %lu us maximum-latency "

WARNING:SPLIT_STRING: quoted string split across lines
#647: FILE: kernel/trace/trace_irqsoff.c:142:
+		       " new %lu us maximum-latency "
+		       "critical section.\n => started at timestamp %lu: ",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#653: FILE: kernel/trace/trace_irqsoff.c:148:
+	printk(KERN_CONT " =>   ended at timestamp %lu: ", t1);

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#653: FILE: kernel/trace/trace_irqsoff.c:148:
+	printk(KERN_CONT " =>   ended at timestamp %lu: ", t1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#657: FILE: kernel/trace/trace_irqsoff.c:152:
+	printk(KERN_CONT " =>   dump-end timestamp %lu\n\n", t1);

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#657: FILE: kernel/trace/trace_irqsoff.c:152:
+	printk(KERN_CONT " =>   dump-end timestamp %lu\n\n", t1);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#891: FILE: kernel/trace/trace_irqsoff.c:386:
+static struct tracer irqsoff_tracer __read_mostly =
+{

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000323898.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 22 warnings, 7 checks, 698 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000323898.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
