WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
from userspace by extending the Userspace IO driver.  This patch applies against

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
#define DMA_MEM_ALLOCATE_MMAP_OFFSET 0xFFFFF000UL

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#92: FILE: include/linux/uio_driver.h:30:
+ * ^I^I^I(for DMA memory regions the dma_handle is stored here)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#96: FILE: include/linux/uio_driver.h:34:
+ * ^I^I^I(undefined if not a DMA buffer)$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#105: FILE: include/linux/uio_driver.h:43:
+	unsigned		index;

WARNING:TYPO_SPELLING: 'accomodate' may be misspelled - perhaps 'accommodate'?
#109: FILE: include/linux/uio_driver.h:46:
+/* Increased to accomodate many logical memory regions per BAR. */
                 ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#128: FILE: include/linux/uio_driver.h:74:
+	unsigned		dma_mem_size;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#137: FILE: include/linux/uio_driver.h:98:
+extern char *uio_dev_get_name(struct uio_device *idev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#143: FILE: include/linux/uio_driver.h:104:
+ * its offset parameter matches this value. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LINE_SPACING: Missing a blank line after declarations
#187: FILE: drivers/uio/uio.c:183:
+	int ret = 0;
+	if (!map)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#199: FILE: drivers/uio/uio.c:195:
+
+

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#316: FILE: drivers/uio/uio.c:505:
+		if (vma->vm_pgoff < MAX_UIO_MAPS
+				&& idev->info->mem[vma->vm_pgoff].size != 0)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around idev->info->mem[vma->vm_pgoff]
#317: FILE: drivers/uio/uio.c:506:
+			return &(idev->info->mem[vma->vm_pgoff]);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LINE_SPACING: Missing a blank line after declarations
#349: FILE: drivers/uio/uio.c:543:
+	struct uio_mem *umem = uio_find_mem_region(vma);
+	if (!umem)

WARNING:LINE_SPACING: Missing a blank line after declarations
#379: FILE: drivers/uio/uio.c:571:
+	struct uio_mem *umem = uio_find_mem_region(vma);
+	if (!umem)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*umem)...) over kzalloc(sizeof(struct uio_mem)...)
#411: FILE: drivers/uio/uio.c:608:
+	*umem = kzalloc(sizeof(struct uio_mem), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#420: FILE: drivers/uio/uio.c:617:
+	addr = dma_alloc_coherent(idev->dev->parent, size,
+			(dma_addr_t *) &(*umem)->internal_addr,

CHECK:SPACING: No space is necessary after a cast
#420: FILE: drivers/uio/uio.c:617:
+			(dma_addr_t *) &(*umem)->internal_addr,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#424: FILE: drivers/uio/uio.c:621:
+		dev_warn(idev->dev, "Unable to allocate requested DMA-capable"
+			" block of size 0x%lx (%lu) during mmap in uio.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#431: FILE: drivers/uio/uio.c:628:
+	 * first two long words for userspace access */

CHECK:SPACING: No space is necessary after a cast
#432: FILE: drivers/uio/uio.c:629:
+	(*umem)->addr = (unsigned long) addr;

CHECK:SPACING: No space is necessary after a cast
#433: FILE: drivers/uio/uio.c:630:
+	addr[0] = (unsigned long) (*umem)->internal_addr;

CHECK:SPACING: No space is necessary after a cast
#437: FILE: drivers/uio/uio.c:634:
+	addr[1] = (unsigned long) (*umem)->index;

WARNING:SPLIT_STRING: quoted string split across lines
#443: FILE: drivers/uio/uio.c:640:
+		dev_err(idev->dev, "Unable to register sysfs entry for "
+				"DMA mapping (%d) in uio.\n", ret);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around idev->info->dma_mem
#448: FILE: drivers/uio/uio.c:645:
+	list_add_tail(&((*umem)->list), &(idev->info->dma_mem));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#454: FILE: drivers/uio/uio.c:651:
+	dma_free_coherent(idev->dev->parent, size, addr,
+			(dma_addr_t) (*umem)->internal_addr);

CHECK:SPACING: No space is necessary after a cast
#454: FILE: drivers/uio/uio.c:651:
+			(dma_addr_t) (*umem)->internal_addr);

WARNING:LINE_SPACING: Missing a blank line after declarations
#472: FILE: drivers/uio/uio.c:669:
+	struct uio_map *map = umem->map;
+	kobject_put(&map->kobj);

CHECK:SPACING: No space is necessary after a cast
#475: FILE: drivers/uio/uio.c:672:
+	dma_free_coherent(idev->dev->parent, umem->size, (void *) umem->addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#476: FILE: drivers/uio/uio.c:673:
+	dma_free_coherent(idev->dev->parent, umem->size, (void *) umem->addr,
+			(dma_addr_t) umem->internal_addr);

CHECK:SPACING: No space is necessary after a cast
#476: FILE: drivers/uio/uio.c:673:
+			(dma_addr_t) umem->internal_addr);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around umem->list
#477: FILE: drivers/uio/uio.c:674:
+	list_del(&(umem->list));

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#505: FILE: drivers/uio/uio.c:698:
+		 * vm_pgoff to the newly created index */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#561: FILE: drivers/uio/uio.c:818:
+ * ^I^I      and unused regions are zeroed$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#587: FILE: drivers/uio/uio.c:844:
+	dev_err(

WARNING:TYPO_SPELLING: 'mapable' may be misspelled - perhaps 'mappable'?
#589: FILE: drivers/uio/uio.c:846:
+		"mapable memory regions must be page-aligned (%d)\n",
 		 ^^^^^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000196358.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 18 warnings, 18 checks, 537 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000196358.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
