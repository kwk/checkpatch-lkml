ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#70: FILE: fs/ext2/namei.c:129:
+static int ext2_mknod (struct inode * dir, struct dentry *dentry, int mode,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#70: FILE: fs/ext2/namei.c:129:
+static int ext2_mknod (struct inode * dir, struct dentry *dentry, int mode,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#186: FILE: fs/ramfs/inode.c:126:
+	struct cred *cred = current->cred;
+	return ramfs_mknod(dir, dentry, mode | S_IFREG, 0, cred);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#199: FILE: include/linux/fs.h:1145:
+	int (*mknod) (struct inode *,struct dentry *,int,dev_t, struct cred *);

ERROR:SPACING: space required after that ',' (ctx:OxV)
#199: FILE: include/linux/fs.h:1145:
+	int (*mknod) (struct inode *,struct dentry *,int,dev_t, struct cred *);
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#199: FILE: include/linux/fs.h:1145:
+	int (*mknod) (struct inode *,struct dentry *,int,dev_t, struct cred *);
 	                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#199: FILE: include/linux/fs.h:1145:
+	int (*mknod) (struct inode *,struct dentry *,int,dev_t, struct cred *);
 	                                                ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#199: FILE: include/linux/fs.h:1145:
+	int (*mknod) (struct inode *,struct dentry *,int,dev_t, struct cred *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#199: FILE: include/linux/fs.h:1145:
+	int (*mknod) (struct inode *,struct dentry *,int,dev_t, struct cred *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#199: FILE: include/linux/fs.h:1145:
+	int (*mknod) (struct inode *,struct dentry *,int,dev_t, struct cred *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'dev_t' should also have an identifier name
#199: FILE: include/linux/fs.h:1145:
+	int (*mknod) (struct inode *,struct dentry *,int,dev_t, struct cred *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cred *' should also have an identifier name
#199: FILE: include/linux/fs.h:1145:
+	int (*mknod) (struct inode *,struct dentry *,int,dev_t, struct cred *);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#227: FILE: mm/shmem.c:1748:
+	if ((error = shmem_mknod(dir, dentry, mode | S_IFDIR, 0, cred)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#237: FILE: mm/shmem.c:1758:
+	struct cred *cred = current->cred;
+	return shmem_mknod(dir, dentry, mode | S_IFREG, 0, cred);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000371073.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 9 warnings, 0 checks, 142 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000371073.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
