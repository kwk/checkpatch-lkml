WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
this version is slightly different from the current one in -tip (added missing vfree()).

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#83: FILE: arch/x86/kernel/microcode.c:73:
+#if 0

WARNING:TYPO_SPELLING: 'alread' may be misspelled - perhaps 'already'?
#312: FILE: arch/x86/kernel/microcode_amd.c:101:
+	 * cases. This is done by checking if there alread is a equivalent
 	                                            ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#319: FILE: arch/x86/kernel/microcode_amd.c:108:
+	BUG_ON(equiv_cpu_table == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!equiv_cpu_table"
#319: FILE: arch/x86/kernel/microcode_amd.c:108:
+	BUG_ON(equiv_cpu_table == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#320: FILE: arch/x86/kernel/microcode_amd.c:109:
+#if 0

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#405: FILE: arch/x86/kernel/microcode_amd.c:231:
+static void * get_next_ucode(u8 *buf, unsigned int size,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#406: FILE: arch/x86/kernel/microcode_amd.c:232:
+static void * get_next_ucode(u8 *buf, unsigned int size,
+			int (*get_ucode_data)(void *, const void *, size_t),

CHECK:SPACING: No space is necessary after a cast
#433: FILE: arch/x86/kernel/microcode_amd.c:250:
+	total_size = (unsigned long) (hdr[4] + (hdr[5] << 8));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#437: FILE: arch/x86/kernel/microcode_amd.c:252:
+	printk(KERN_INFO "microcode: size %u, total_size %u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#438: FILE: arch/x86/kernel/microcode_amd.c:253:
+	printk(KERN_INFO "microcode: size %u, total_size %u\n",
+		size, total_size);

CHECK:BRACES: braces {} should be used on all arms of this statement
#458: FILE: arch/x86/kernel/microcode_amd.c:263:
+		if (get_ucode_data(mc, buf + UCODE_UNKNOWN_HDR, total_size)) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#461: FILE: arch/x86/kernel/microcode_amd.c:266:
+		} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#474: FILE: arch/x86/kernel/microcode_amd.c:273:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#476: FILE: arch/x86/kernel/microcode_amd.c:275:
+static int install_equiv_cpu_table(u8 *buf,
+		int (*get_ucode_data)(void *, const void *, size_t))

WARNING:SPLIT_STRING: quoted string split across lines
#500: FILE: arch/x86/kernel/microcode_amd.c:289:
 		printk(KERN_ERR "microcode: error! "
+		       "Wrong microcode equivalnet cpu table\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#563: FILE: arch/x86/kernel/microcode_amd.c:318:
+static int generic_load_microcode(int cpu, void *data, size_t size,
+		int (*get_ucode_data)(void *, const void *, size_t))

CHECK:BRACES: braces {} should be used on all arms of this statement
#602: FILE: arch/x86/kernel/microcode_amd.c:344:
+		if (get_matching_microcode(cpu, mc, new_rev)) {
[...]
+		} else 
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#607: FILE: arch/x86/kernel/microcode_amd.c:349:
+^I^I} else $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#607: FILE: arch/x86/kernel/microcode_amd.c:349:
+		} else 

CHECK:BRACES: braces {} should be used on all arms of this statement
#619: FILE: arch/x86/kernel/microcode_amd.c:357:
+		if (!leftover) {
[...]
+		} else
[...]

WARNING:SPLIT_STRING: quoted string split across lines
#624: FILE: arch/x86/kernel/microcode_amd.c:362:
+			pr_debug("microcode: CPU%d found a matching microcode update with"
+				" version 0x%x (current=0x%x)\n",

CHECK:BRACES: Unbalanced braces around else statement
#626: FILE: arch/x86/kernel/microcode_amd.c:364:
+		} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#648: FILE: arch/x86/kernel/microcode_amd.c:386:
+	BUG_ON(cpu != raw_smp_processor_id());

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#652: FILE: arch/x86/kernel/microcode_amd.c:390:
+		printk(KERN_ERR "microcode: ucode data file %s load failed\n", fw_name);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#658: FILE: arch/x86/kernel/microcode_amd.c:394:
+	ret = generic_load_microcode(cpu, (void*)firmware->data, firmware->size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#659: FILE: arch/x86/kernel/microcode_amd.c:395:
+	ret = generic_load_microcode(cpu, (void*)firmware->data, firmware->size,
+			&get_ucode_fw);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#675: FILE: arch/x86/kernel/microcode_amd.c:410:
+	BUG_ON(cpu != raw_smp_processor_id());

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#677: FILE: arch/x86/kernel/microcode_amd.c:412:
+	return generic_load_microcode(cpu, (void*)buf, size, &get_ucode_user);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#704: FILE: arch/x86/kernel/microcode_intel.c:73:
+#if 0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#726: FILE: arch/x86/kernel/microcode_intel.c:164:
+static inline int $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#815: FILE: arch/x86/kernel/microcode_intel.c:328:
+static int generic_load_microcode(int cpu, void *data, size_t size,
+		int (*get_ucode_data)(void *, const void *, size_t))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#867: FILE: arch/x86/kernel/microcode_intel.c:344:
+			printk(KERN_ERR "microcode: error!"

WARNING:SPLIT_STRING: quoted string split across lines
#868: FILE: arch/x86/kernel/microcode_intel.c:345:
+			printk(KERN_ERR "microcode: error!"
+					"Bad data in microcode data file\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#885: FILE: arch/x86/kernel/microcode_intel.c:359:
+		if (get_matching_microcode(&uci->cpu_sig, mc, new_rev)) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#890: FILE: arch/x86/kernel/microcode_intel.c:364:
+		} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#902: FILE: arch/x86/kernel/microcode_intel.c:372:
+		if (!leftover) {
[...]
+		} else
[...]

WARNING:SPLIT_STRING: quoted string split across lines
#907: FILE: arch/x86/kernel/microcode_intel.c:377:
+			pr_debug("microcode: CPU%d found a matching microcode update with"
+				 " version 0x%x (current=0x%x)\n",

CHECK:BRACES: Unbalanced braces around else statement
#909: FILE: arch/x86/kernel/microcode_intel.c:379:
+		} else

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#976: FILE: arch/x86/kernel/microcode_intel.c:409:
+	ret = generic_load_microcode(cpu, (void*)firmware->data, firmware->size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#977: FILE: arch/x86/kernel/microcode_intel.c:410:
+	ret = generic_load_microcode(cpu, (void*)firmware->data, firmware->size,
+			&get_ucode_fw);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#993: FILE: arch/x86/kernel/microcode_intel.c:425:
+	BUG_ON(cpu != raw_smp_processor_id());

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#995: FILE: arch/x86/kernel/microcode_intel.c:427:
+	return generic_load_microcode(cpu, (void*)buf, size, &get_ucode_user);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1032: FILE: include/asm-x86/microcode.h:11:
+	int  (*request_microcode_user) (int cpu, const void __user *buf, size_t size);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1033: FILE: include/asm-x86/microcode.h:12:
+	int  (*request_microcode_fw) (int cpu, struct device *device);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1035: FILE: include/asm-x86/microcode.h:14:
+	void (*apply_microcode) (int cpu);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1037: FILE: include/asm-x86/microcode.h:16:
+	int  (*collect_cpu_info) (int cpu, struct cpu_signature *csig);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1038: FILE: include/asm-x86/microcode.h:17:
+	void (*microcode_fini_cpu) (int cpu);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000228276.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 21 warnings, 20 checks, 930 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000228276.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
