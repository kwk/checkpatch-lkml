ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#61: FILE: qemu/monitor.c:1557:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#63: FILE: qemu/monitor.c:1558:
 }
+#if defined(TARGET_I386) || defined(TARGET_X86_64)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#64: FILE: qemu/monitor.c:1559:
+static void do_inject_mce(Monitor *mon,
                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Monitor>
#64: FILE: qemu/monitor.c:1559:
+static void do_inject_mce(Monitor *mon,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#66: FILE: qemu/monitor.c:1561:
+			  unsigned status_hi, unsigned status_lo,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#66: FILE: qemu/monitor.c:1561:
+			  unsigned status_hi, unsigned status_lo,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#67: FILE: qemu/monitor.c:1562:
+			  unsigned mcg_status_hi, unsigned mcg_status_lo,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#67: FILE: qemu/monitor.c:1562:
+			  unsigned mcg_status_hi, unsigned mcg_status_lo,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#68: FILE: qemu/monitor.c:1563:
+			  unsigned addr_hi, unsigned addr_lo,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#68: FILE: qemu/monitor.c:1563:
+			  unsigned addr_hi, unsigned addr_lo,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#69: FILE: qemu/monitor.c:1564:
+			  unsigned misc_hi, unsigned misc_lo)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#69: FILE: qemu/monitor.c:1564:
+			  unsigned misc_hi, unsigned misc_lo)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: qemu/monitor.c:1566:
+    CPUState *env;$

CHECK:CAMELCASE: Avoid CamelCase: <CPUState>
#71: FILE: qemu/monitor.c:1566:
+    CPUState *env;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: qemu/monitor.c:1567:
+    struct kvm_x86_mce mce =3D {$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#72: FILE: qemu/monitor.c:1567:
+    struct kvm_x86_mce mce =3D {
                            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#73: FILE: qemu/monitor.c:1568:
+	.bank =3D bank,
 	      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#74: FILE: qemu/monitor.c:1569:
+	.status =3D ((uint64_t)status_hi << 32) | status_lo,

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#74: FILE: qemu/monitor.c:1569:
+	.status =3D ((uint64_t)status_hi << 32) | status_lo,
 	        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#75: FILE: qemu/monitor.c:1570:
+	.mcg_status =3D ((uint64_t)mcg_status_hi << 32) | mcg_status_lo,

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#75: FILE: qemu/monitor.c:1570:
+	.mcg_status =3D ((uint64_t)mcg_status_hi << 32) | mcg_status_lo,
 	            ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#76: FILE: qemu/monitor.c:1571:
+	.addr =3D ((uint64_t)addr_hi << 32) | addr_lo,

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#76: FILE: qemu/monitor.c:1571:
+	.addr =3D ((uint64_t)addr_hi << 32) | addr_lo,
 	      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#77: FILE: qemu/monitor.c:1572:
+	.misc =3D ((uint64_t)misc_hi << 32) | misc_lo,

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#77: FILE: qemu/monitor.c:1572:
+	.misc =3D ((uint64_t)misc_hi << 32) | misc_lo,
 	      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: qemu/monitor.c:1573:
+    };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: qemu/monitor.c:1575:
+    for (env =3D first_cpu; env !=3D NULL; env =3D env->next_cpu)$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#80: FILE: qemu/monitor.c:1575:
+    for (env =3D first_cpu; env !=3D NULL; env =3D env->next_cpu)
              ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#80: FILE: qemu/monitor.c:1575:
+    for (env =3D first_cpu; env !=3D NULL; env =3D env->next_cpu)
                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#80: FILE: qemu/monitor.c:1575:
+    for (env =3D first_cpu; env !=3D NULL; env =3D env->next_cpu)
                                                ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#81: FILE: qemu/monitor.c:1576:
+	if (env->cpu_index =3D=3D cpu_index && env->mcg_cap) {
+	    kvm_inject_x86_mce(env, &mce);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#81: FILE: qemu/monitor.c:1576:
+	if (env->cpu_index =3D=3D cpu_index && env->mcg_cap) {
 	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#81: FILE: qemu/monitor.c:1576:
+	if (env->cpu_index =3D=3D cpu_index && env->mcg_cap) {
 	                      ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#81: FILE: qemu/monitor.c:1576:
+	if (env->cpu_index =3D=3D cpu_index && env->mcg_cap) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:TABSTOP: Statements should start on a tabstop
#83: FILE: qemu/monitor.c:1578:
+	    break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: qemu/monitor.c:1786:
+    { "mce", "iillll", do_inject_mce, "cpu bank status mcgstatus addr misc=$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#106: FILE: libkvm/libkvm-x86.c:381:
 }
+int kvm_get_mce_cap_supported(kvm_context_t kvm, uint64_t *mce_cap,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: libkvm/libkvm-x86.c:384:
+    int r;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: libkvm/libkvm-x86.c:386:
+    r =3D ioctl(kvm->fd, KVM_CHECK_EXTENSION, KVM_CAP_MCE);$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#111: FILE: libkvm/libkvm-x86.c:386:
+    r =3D ioctl(kvm->fd, KVM_CHECK_EXTENSION, KVM_CAP_MCE);
       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: libkvm/libkvm-x86.c:387:
+    if (r > 0) {$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#113: FILE: libkvm/libkvm-x86.c:388:
+	*max_banks =3D r;
 	           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: libkvm/libkvm-x86.c:390:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: libkvm/libkvm-x86.c:391:
+    return -ENOSYS;$

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#116: FILE: libkvm/libkvm-x86.c:391:
+    return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: libkvm/libkvm-x86.c:396:
+    int r;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: libkvm/libkvm-x86.c:398:
+    r =3D ioctl(kvm->fd, KVM_CHECK_EXTENSION, KVM_CAP_MCE);$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#123: FILE: libkvm/libkvm-x86.c:398:
+    r =3D ioctl(kvm->fd, KVM_CHECK_EXTENSION, KVM_CAP_MCE);
       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: libkvm/libkvm-x86.c:399:
+    if (r > 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: libkvm/libkvm-x86.c:401:
+    return -ENOSYS;$

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#126: FILE: libkvm/libkvm-x86.c:401:
+    return -ENOSYS;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: libkvm/libkvm-x86.c:406:
+    int r;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: libkvm/libkvm-x86.c:408:
+    r =3D ioctl(kvm->fd, KVM_CHECK_EXTENSION, KVM_CAP_MCE);$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#133: FILE: libkvm/libkvm-x86.c:408:
+    r =3D ioctl(kvm->fd, KVM_CHECK_EXTENSION, KVM_CAP_MCE);
       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: libkvm/libkvm-x86.c:409:
+    if (r > 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: libkvm/libkvm-x86.c:411:
+    return -ENOSYS;$

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#136: FILE: libkvm/libkvm-x86.c:411:
+    return -ENOSYS;

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#151: FILE: libkvm/libkvm.h:30:
+int kvm_get_mce_cap_supported(kvm_context_t, uint64_t *mce_cap, int *max_b=
                                                                           ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#151: FILE: libkvm/libkvm.h:30:
+int kvm_get_mce_cap_supported(kvm_context_t, uint64_t *mce_cap, int *max_b=

WARNING:FUNCTION_ARGUMENTS: function definition argument 'kvm_context_t' should also have an identifier name
#151: FILE: libkvm/libkvm.h:30:
+int kvm_get_mce_cap_supported(kvm_context_t, uint64_t *mce_cap, int *max_b=

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'kvm_context_t' should also have an identifier name
#153: FILE: libkvm/libkvm.h:31:
+int kvm_setup_mce(kvm_context_t, int vcpu, uint64_t *mcg_cap);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'kvm_context_t' should also have an identifier name
#155: FILE: libkvm/libkvm.h:33:
+int kvm_set_mce(kvm_context_t, int vcpu, struct kvm_x86_mce *mce);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#165: FILE: libkvm/libkvm.h:459:
 }
+void kvm_arch_inject_x86_mce(CPUState *env, struct kvm_x86_mce *mce)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: libkvm/libkvm.h:461:
+    int rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: libkvm/libkvm.h:463:
+    rc =3D kvm_set_mce(kvm_context, env->cpu_index, mce);$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#169: FILE: libkvm/libkvm.h:463:
+    rc =3D kvm_set_mce(kvm_context, env->cpu_index, mce);
        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: libkvm/libkvm.h:464:
+    if (rc < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: libkvm/libkvm.h:578:
+    if (((cenv->cpuid_version >> 8)&0xF) >=3D 6$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#182: FILE: libkvm/libkvm.h:578:
+    if (((cenv->cpuid_version >> 8)&0xF) >=3D 6
                                    ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#182: FILE: libkvm/libkvm.h:578:
+    if (((cenv->cpuid_version >> 8)&0xF) >=3D 6
                                          ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#182: FILE: libkvm/libkvm.h:578:
+    if (((cenv->cpuid_version >> 8)&0xF) >=3D 6

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#183: FILE: libkvm/libkvm.h:579:
+    if (((cenv->cpuid_version >> 8)&0xF) >=3D 6
+	&& (cenv->cpuid_features&(CPUID_MCE|CPUID_MCA)) =3D=3D (CPUID_MCE|CPUID_M=

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#183: FILE: libkvm/libkvm.h:579:
+	&& (cenv->cpuid_features&(CPUID_MCE|CPUID_MCA)) =3D=3D (CPUID_MCE|CPUID_M=

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#183: FILE: libkvm/libkvm.h:579:
+	&& (cenv->cpuid_features&(CPUID_MCE|CPUID_MCA)) =3D=3D (CPUID_MCE|CPUID_M=
 	                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#183: FILE: libkvm/libkvm.h:579:
+	&& (cenv->cpuid_features&(CPUID_MCE|CPUID_MCA)) =3D=3D (CPUID_MCE|CPUID_M=
 	                                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#183: FILE: libkvm/libkvm.h:579:
+	&& (cenv->cpuid_features&(CPUID_MCE|CPUID_MCA)) =3D=3D (CPUID_MCE|CPUID_M=
 	                                                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#183: FILE: libkvm/libkvm.h:579:
+	&& (cenv->cpuid_features&(CPUID_MCE|CPUID_MCA)) =3D=3D (CPUID_MCE|CPUID_M=
 	                                                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#183: FILE: libkvm/libkvm.h:579:
+	&& (cenv->cpuid_features&(CPUID_MCE|CPUID_MCA)) =3D=3D (CPUID_MCE|CPUID_M=
 	                                                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#183: FILE: libkvm/libkvm.h:579:
+	&& (cenv->cpuid_features&(CPUID_MCE|CPUID_MCA)) =3D=3D (CPUID_MCE|CPUID_M=
 	                                                                         ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#185: FILE: libkvm/libkvm.h:580:
+	&& (cenv->cpuid_features&(CPUID_MCE|CPUID_MCA)) =3D=3D (CPUID_MCE|CPUID_M=
+	&& kvm_check_extension(kvm_context, KVM_CAP_MCE) > 0) {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#186: FILE: libkvm/libkvm.h:581:
+	uint64_t mcg_cap;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#192: FILE: libkvm/libkvm.h:587:
+	if (kvm_get_mce_cap_supported(kvm_context, &mcg_cap, &banks))
+	    perror("kvm_get_mce_cap_supported FAILED");

CHECK:BRACES: braces {} should be used on all arms of this statement
#192: FILE: libkvm/libkvm.h:587:
+	if (kvm_get_mce_cap_supported(kvm_context, &mcg_cap, &banks))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#194: FILE: libkvm/libkvm.h:589:
+	else {
+	    if (banks > MCE_BANKS_DEF)

CHECK:BRACES: Unbalanced braces around else statement
#194: FILE: libkvm/libkvm.h:589:
+	else {

WARNING:TABSTOP: Statements should start on a tabstop
#195: FILE: libkvm/libkvm.h:590:
+	    if (banks > MCE_BANKS_DEF)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#196: FILE: libkvm/libkvm.h:591:
+		banks =3D MCE_BANKS_DEF;
 		      ^

ERROR:SPACING: spaces required around that '&=' (ctx:WxV)
#197: FILE: libkvm/libkvm.h:592:
+	    mcg_cap &=3D MCE_CAP_DEF;
 	            ^

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#198: FILE: libkvm/libkvm.h:593:
+	    mcg_cap |=3D banks;
 	            ^

WARNING:TABSTOP: Statements should start on a tabstop
#199: FILE: libkvm/libkvm.h:594:
+	    if (kvm_setup_mce(kvm_context, cenv->cpu_index, &mcg_cap))

WARNING:TABSTOP: Statements should start on a tabstop
#201: FILE: libkvm/libkvm.h:596:
+	    else

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#202: FILE: libkvm/libkvm.h:597:
+		cenv->mcg_cap =3D mcg_cap;
 		              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: libkvm/libkvm.h:599:
+    }$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#224: FILE: qemu/qemu-kvm.h:237:
 }
+void kvm_inject_x86_mce(CPUState *env, struct kvm_x86_mce *mce);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#233: FILE: qemu/qemu-kvm.c:200:
 }
+#if defined(TARGET_I386) || defined(TARGET_X86_64)

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#235: FILE: qemu/qemu-kvm.c:202:
+struct kvm_x86_mce_data
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: qemu/qemu-kvm.c:203:
+    CPUState *env;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: qemu/qemu-kvm.c:204:
+    struct kvm_x86_mce *mce;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: qemu/qemu-kvm.c:209:
+    struct kvm_x86_mce_data *data =3D _data;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#242: FILE: qemu/qemu-kvm.c:209:
+    struct kvm_x86_mce_data *data =3D _data;
                                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: qemu/qemu-kvm.c:211:
+    kvm_arch_inject_x86_mce(data->env, data->mce);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: qemu/qemu-kvm.c:216:
+    struct kvm_x86_mce_data data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: qemu/qemu-kvm.c:218:
+    if (kvm_enabled()) {$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#252: FILE: qemu/qemu-kvm.c:219:
+	data.env =3D env;
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#253: FILE: qemu/qemu-kvm.c:220:
+	data.mce =3D mce;
 	         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: qemu/qemu-kvm.c:222:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: qemu/target-i386/cpu.h:664:
+    uint64_t mcg_cap;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#269: FILE: qemu/target-i386/cpu.h:664:
+    uint64_t mcg_cap;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000138033.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 32 errors, 57 warnings, 19 checks, 200 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000138033.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
