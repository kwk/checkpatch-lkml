WARNING:TYPO_SPELLING: 'Alloate' may be misspelled - perhaps 'Allocate'?
#110: FILE: fs/bio.c:682:
+ *	Alloate sgl to cover @len bytes and populate it with pages.
   	^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#114: FILE: fs/bio.c:686:
+ *	points to upto a single page.
   	          ^^^^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#135: FILE: fs/bio.c:702:
+	sgl = kmalloc(sizeof(sgl[0]) * nr_pages, gfp);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#142: FILE: fs/bio.c:709:
+		 * The area might need to be extended upto the next
 		                                      ^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#153: FILE: fs/bio.c:720:
+		if (md) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#159: FILE: fs/bio.c:726:
+		} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#169: FILE: fs/bio.c:736:
+	BUG_ON(nents != nr_pages);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!md"
#251: FILE: fs/bio.c:809:
+	bci->is_our_pages = md == NULL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#263: FILE: fs/bio.c:816:
+	bci->src_iov = kmalloc(sizeof(src_iov[0]) * src_count, gfp);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000146046.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 3 checks, 537 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000146046.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
