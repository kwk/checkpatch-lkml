WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
It requires the implementation of 2 additional functions in the clk interface:

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#47: FILE: drivers/uio/clock.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#48: FILE: drivers/uio/clock.c:2:
+/*
+ driver/misc/clock.c

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#69: FILE: drivers/uio/clock.c:23:
+ along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#70: FILE: drivers/uio/clock.c:24:
+ Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#78: FILE: drivers/uio/clock.c:32:
+	struct mutex mutex;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#90: FILE: drivers/uio/clock.c:44:
+static ssize_t clk_show(struct device *dev, struct device_attribute *attr,
+	char *buffer)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#102: FILE: drivers/uio/clock.c:56:
+	if (!IS_ERR(clk)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#111: FILE: drivers/uio/clock.c:65:
+
+	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#118: FILE: drivers/uio/clock.c:72:
+static ssize_t clk_store(struct device *dev, struct device_attribute *attr,
+	const char *buffer, size_t count)

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#123: FILE: drivers/uio/clock.c:77:
+	int err = strict_strtoul(buffer, 10, &rate);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:BRACES: braces {} should be used on all arms of this statement
#134: FILE: drivers/uio/clock.c:88:
+	if (rate != 0) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#137: FILE: drivers/uio/clock.c:91:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#148: FILE: drivers/uio/clock.c:102:
+static ssize_t clk_parent_show(struct device *dev,
+	struct device_attribute *attr, char *buffer)

WARNING:LINE_SPACING: Missing a blank line after declarations
#153: FILE: drivers/uio/clock.c:107:
+	char *s = kstrdup(attr->attr.name, GFP_KERNEL);
+	if (!s)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#162: FILE: drivers/uio/clock.c:116:
+	if (!IS_ERR(clk)) {
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#168: FILE: drivers/uio/clock.c:122:
+			const char *full_name = clk_get_name(parent);
+			if (IS_ERR(full_name)) {

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#172: FILE: drivers/uio/clock.c:126:
+			strlcpy(buffer, full_name, PAGE_SIZE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#185: FILE: drivers/uio/clock.c:139:
+static ssize_t clk_parent_store(struct device *dev,
+	struct device_attribute *attr, const char *buffer, size_t count)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#205: FILE: drivers/uio/clock.c:159:
+	if (!IS_ERR(clk)) {
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!name"
#250: FILE: drivers/uio/clock.c:204:
+	if (name == NULL || IS_ERR(name)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*atp)...) over kzalloc(sizeof(struct attr)...)
#257: FILE: drivers/uio/clock.c:211:
+	atp = kzalloc(sizeof(struct attr), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#259: FILE: drivers/uio/clock.c:213:
+	if (!atp) {
+		dev_err(info->dev, "out of kernel memory\n");

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#262: FILE: drivers/uio/clock.c:216:
+	atp->at.attr.mode = S_IRUGO | S_IWUSR;

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*atp)...) over kzalloc(sizeof(struct attr)...)
#281: FILE: drivers/uio/clock.c:235:
+	atp = kzalloc(sizeof(struct attr), GFP_KERNEL);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#283: FILE: drivers/uio/clock.c:237:
+	if (!atp) {
+		dev_err(info->dev, "out of kernel memory\n");

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#286: FILE: drivers/uio/clock.c:240:
+	atp->at.attr.mode = S_IRUGO | S_IWUSR;

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#294: FILE: drivers/uio/clock.c:248:
+	strlcpy((char *)atp->at.attr.name, name, len);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#318: FILE: drivers/uio/clock.c:272:
+	if (!info) {
+		dev_err(&pdev->dev, "out of kernel memory\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#330: FILE: drivers/uio/clock.c:284:
+		dev_notice(&pdev->dev, "probed OK - %d clocks recognized\n",
+			info->count);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#369: FILE: drivers/uio/Kconfig:17:
+config UIO_CLOCK
+	tristate "General purpose clock driver"
+	default y
+	---help---
+	  This driver allows to configure and control internal clocks'
+	   rates and parents through virtual files.
+	  This driver requires implementation of some additional functions
+	   in architecture specific low-level drivers:
+	   clk_for_each() and clk_get_name()
+	  Currently they're implemented only on Samsung S3C24xx platforms.
+

Kconfig symbols should have a help text which fully describes
it.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000184271.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 14 warnings, 15 checks, 336 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000184271.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
