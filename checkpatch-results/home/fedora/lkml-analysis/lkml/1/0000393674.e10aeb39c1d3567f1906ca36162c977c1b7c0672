WARNING:TYPO_SPELLING: 'substraction' may be misspelled - perhaps 'subtraction'?
#26: 
is costly as it involves a lookup of another structure and a substraction
                                                             ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
pointer values of plenty of 0's at the least significant bits of the address.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#72: FILE: include/linux/mmzone.h:692:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#84: FILE: include/linux/mmzone.h:704:
+	BUG_ON(zonelist_zone(encoded) != zone);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#110: FILE: include/linux/mmzone.h:729:
+	for (z = zonelist->_zones;
[...]
+		z++);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#121: FILE: include/linux/mmzone.h:739:
+	for (++z;
[...]
+		z++);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#168: FILE: mm/mempolicy.c:491:
+			node_set(zone_to_nid(zonelist_zone(p->v.zonelist->_zones[i])),
 				*nodes);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#196: FILE: mm/mempolicy.c:1360:
+			if (zonelist_zone(a->v.zonelist->_zones[i]) != zonelist_zone(b->v.zonelist->_zones[i]))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!b->v.zonelist->_zones[i]"
#199: FILE: mm/mempolicy.c:1362:
+		return b->v.zonelist->_zones[i] == NULL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!zonelist_zone"
#261: FILE: mm/page_alloc.c:1559:
+	if (unlikely(zonelist_zone(*z) == NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "zonelist->_zones[j]"
#290: FILE: mm/page_alloc.c:2153:
+	for (j = 0; zonelist->_zones[j] != NULL; j++)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000393674.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 4 warnings, 5 checks, 288 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000393674.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
