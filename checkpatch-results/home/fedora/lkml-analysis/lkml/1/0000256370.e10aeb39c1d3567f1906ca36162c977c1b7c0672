CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#104: FILE: drivers/pci/intr_remapping.c:67:
+	index = start_index = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#112: FILE: drivers/pci/intr_remapping.c:75:
+		printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#114: FILE: drivers/pci/intr_remapping.c:77:
+		       "Requested mask %x exceeds the max invalidation handle"
+		       " mask value %Lx\n", mask,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#114: FILE: drivers/pci/intr_remapping.c:77:
+		       " mask value %Lx\n", mask,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#132: FILE: drivers/pci/intr_remapping.c:95:
+			printk(KERN_ERR "can't allocate an IRTE\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#304: FILE: include/linux/dmar.h:101:
 };
+extern int get_irte(int irq, struct irte *entry);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#304: FILE: include/linux/dmar.h:101:
+extern int get_irte(int irq, struct irte *entry);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#305: FILE: include/linux/dmar.h:102:
+extern int modify_irte(int irq, struct irte *irte_modified);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#306: FILE: include/linux/dmar.h:103:
+extern int alloc_irte(struct intel_iommu *iommu, int irq, u16 count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#307: FILE: include/linux/dmar.h:104:
+extern int set_irte_irq(int irq, struct intel_iommu *iommu, u16 index,

ERROR:CODE_INDENT: code indent should use tabs where possible
#308: FILE: include/linux/dmar.h:105:
+   ^I^I^Iu16 sub_handle);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#308: FILE: include/linux/dmar.h:105:
+   ^I^I^Iu16 sub_handle);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#308: FILE: include/linux/dmar.h:105:
+extern int set_irte_irq(int irq, struct intel_iommu *iommu, u16 index,
+   			u16 sub_handle);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: include/linux/dmar.h:105:
+   ^I^I^Iu16 sub_handle);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#309: FILE: include/linux/dmar.h:106:
+extern int map_irq_to_irte_handle(int irq, u16 *sub_handle);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#310: FILE: include/linux/dmar.h:107:
+extern int clear_irte_irq(int irq, struct intel_iommu *iommu, u16 index);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#311: FILE: include/linux/dmar.h:108:
+extern int flush_irte(int irq);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#312: FILE: include/linux/dmar.h:109:
+extern int free_irte(int irq);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#314: FILE: include/linux/dmar.h:111:
+extern int irq_remapped(int irq);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'e' may be better as '(e)' to avoid precedence issues
#328: FILE: drivers/pci/intel-iommu.h:126:
+#define ecap_max_handle_mask(e) ((e >> 20) & 0xf)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#345: FILE: drivers/pci/intel-iommu.h:306:
+extern void qi_submit_sync(struct qi_desc *desc, struct intel_iommu *iommu);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000256370.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 6 warnings, 14 checks, 294 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000256370.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
