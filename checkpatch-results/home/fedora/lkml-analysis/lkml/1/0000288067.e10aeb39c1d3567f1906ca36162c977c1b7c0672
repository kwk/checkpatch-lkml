WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
> /home/bunk/linux/kernel-2.6/git/linux-2.6/fs/reiserfs/do_balan.c: In function ‘balance_leaf’:

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#45: 
> /home/bunk/linux/kernel-2.6/git/linux-2.6/fs/reiserfs/do_balan.c:34: sorry, unimplemented: inlining failed in call to ‘do_balance_mark_leaf_dirty’: function body not available

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#46: 
> /home/bunk/linux/kernel-2.6/git/linux-2.6/fs/reiserfs/do_balan.c:1018: sorry, unimplemented: called from here

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#47: 
> /home/bunk/linux/kernel-2.6/git/linux-2.6/fs/reiserfs/do_balan.c:34: sorry, unimplemented: inlining failed in call to ‘do_balance_mark_leaf_dirty’: function body not available

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#48: 
> /home/bunk/linux/kernel-2.6/git/linux-2.6/fs/reiserfs/do_balan.c:1174: sorry, unimplemented: called from here

ERROR:SPACING: space prohibited before that close parenthesis ')'
#109: FILE: fs/reiserfs/inode.c:107:
+		       int entry_count /*or ih_free_space */ )

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#279: FILE: include/linux/reiserfs_fs.h:1783:
+/* k1 is pointer to on-disk structure which is stored in little-endian
+   form. k2 is pointer to cpu variable. For key of items of the same

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#283: FILE: include/linux/reiserfs_fs.h:1787:
+   1 if key1 > key2 */

WARNING:LINE_SPACING: Missing a blank line after declarations
#288: FILE: include/linux/reiserfs_fs.h:1792:
+	__u32 n;
+	n = le32_to_cpu(le_key->k_dir_id);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#311: FILE: include/linux/reiserfs_fs.h:1831:
+	int version;
+	to->on_disk_key.k_dir_id = le32_to_cpu(from->k_dir_id);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#341: FILE: include/linux/reiserfs_fs.h:1956:
+	BUG_ON(de->de_entry_num >= ih_entry_count(de->de_ih));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#360: FILE: include/linux/reiserfs_fs.h:2082:
+static inline void do_balance_mark_leaf_dirty(struct tree_balance *tb,
+				struct buffer_head *bh, int flag)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around p_s_bh->b_count
#375: FILE: include/linux/reiserfs_fs.h:2206:
+		if (atomic_read(&(p_s_bh->b_count))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:REPEATED_WORD: Possible repeated word: 'free'
#380: FILE: include/linux/reiserfs_fs.h:2211:
+		    "PAP-5070: decrement_bcount: trying to free free buffer %b",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#380: FILE: include/linux/reiserfs_fs.h:2211:
+		reiserfs_panic(NULL,
+		    "PAP-5070: decrement_bcount: trying to free free buffer %b",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'decrement_bcount', this function's name, in a string
#380: FILE: include/linux/reiserfs_fs.h:2211:
+		    "PAP-5070: decrement_bcount: trying to free free buffer %b",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#388: FILE: include/linux/reiserfs_fs.h:2219:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000288067.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 12 warnings, 4 checks, 297 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000288067.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
