WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#50: FILE: arch/x86_64/mm/init.c:73:
+	printk(KERN_INFO "Free swap:       %6ldkB\n",

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#51: FILE: arch/x86_64/mm/init.c:74:
+	       nr_swap_pages<<(PAGE_SHIFT-10));
 	                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#51: FILE: arch/x86_64/mm/init.c:74:
+	       nr_swap_pages<<(PAGE_SHIFT-10));
 	                                 ^

CHECK:SPACING: No space is necessary after a cast
#77: FILE: arch/x86_64/mm/init.c:107:
+		ptr = (void *) get_zeroed_page(GFP_ATOMIC);

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#83: FILE: arch/x86_64/mm/init.c:112:
+		      after_bootmem?"after bootmem":"");
 		                   ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#83: FILE: arch/x86_64/mm/init.c:112:
+		      after_bootmem?"after bootmem":"");
 		                                   ^

CHECK:SPACING: No space is necessary after a cast
#101: FILE: arch/x86_64/mm/init.c:135:
+		pmd = (pmd_t *) spp_getpage();

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#105: FILE: arch/x86_64/mm/init.c:138:
+			printk("PAGETABLE BUG #01! %p <-> %p\n", pmd,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#106: FILE: arch/x86_64/mm/init.c:139:
+			       pmd_offset(pud,0));
 			                     ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'alloc_low_page', this function's name, in a string
#135: FILE: arch/x86_64/mm/init.c:194:
+		panic("alloc_low_page: ran out of memory");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#211: FILE: arch/x86_64/mm/init.c:335:
+	/* RED-PEN putting page tables only on node 0 could
+	   cause a hotspot and fill up ZONE_DMA. The page tables

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#212: FILE: arch/x86_64/mm/init.c:336:
+	   need roughly 0.5KB per GB. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#302: FILE: arch/x86_64/mm/init.c:421:
+	BUG_ON(size & ~LARGE_PAGE_MASK);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#328: FILE: arch/x86_64/mm/init.c:440:
+			printk(KERN_ERR "clear_kernel_mapping: mapping has "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'clear_kernel_mapping', this function's name, in a string
#328: FILE: arch/x86_64/mm/init.c:440:
+			printk(KERN_ERR "clear_kernel_mapping: mapping has "

WARNING:SPLIT_STRING: quoted string split across lines
#329: FILE: arch/x86_64/mm/init.c:441:
+			printk(KERN_ERR "clear_kernel_mapping: mapping has "
+			       "been split. will leak memory\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#389: FILE: arch/x86_64/mm/init.c:570:
+	printk("Memory: %luk/%luk available (%ldk kernel code, %ldk reserved, "

WARNING:SPLIT_STRING: quoted string split across lines
#390: FILE: arch/x86_64/mm/init.c:571:
+	printk("Memory: %luk/%luk available (%ldk kernel code, %ldk reserved, "
+	       "%ldk data, %ldk init)\n",

CHECK:SPACING: No space is necessary after a cast
#391: FILE: arch/x86_64/mm/init.c:572:
+	       (unsigned long) nr_free_pages() << (PAGE_SHIFT-10),

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#391: FILE: arch/x86_64/mm/init.c:572:
+	       (unsigned long) nr_free_pages() << (PAGE_SHIFT-10),
 	                                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#392: FILE: arch/x86_64/mm/init.c:573:
+	       end_pfn << (PAGE_SHIFT-10),
 	                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#394: FILE: arch/x86_64/mm/init.c:575:
+	       reservedpages << (PAGE_SHIFT-10),
 	                                   ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#424: FILE: arch/x86_64/mm/init.c:654:
+void __init reserve_bootmem_generic(unsigned long phys, unsigned len)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#481: FILE: arch/x86_64/mm/init.c:753:
+				    SMP_CACHE_BYTES, (4UL*1024*1024*1024), 0);
 				                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#481: FILE: arch/x86_64/mm/init.c:753:
+				    SMP_CACHE_BYTES, (4UL*1024*1024*1024), 0);
 				                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#481: FILE: arch/x86_64/mm/init.c:753:
+				    SMP_CACHE_BYTES, (4UL*1024*1024*1024), 0);
 				                                   ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000377660.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 12 warnings, 13 checks, 414 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000377660.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
