WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#36: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#41: FILE: drivers/serial/crisv32.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#60: FILE: drivers/serial/crisv32.c:20:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#63: FILE: drivers/serial/crisv32.c:23:
+#include <asm/uaccess.h>

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#76: FILE: drivers/serial/crisv32.c:36:
+#define UART_NR CONFIG_ETRAX_SERIAL_PORTS + 1	/* Ports + dummy port */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: drivers/serial/crisv32.c:47:
+  do {^I^I^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: drivers/serial/crisv32.c:52:
+  } while (0)$

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#99: FILE: drivers/serial/crisv32.c:59:
+#define SETUP_PINS(port) \
+	if (serial_cris_ports[port].used) { \
+		if (strcmp(CONFIG_ETRAX_SER##port##_DTR_BIT, "")) \
+			crisv32_io_get_name(&serial_cris_ports[port].dtr_pin, \
+				CONFIG_ETRAX_SER##port##_DTR_BIT); \
+		else \
+			serial_cris_ports[port].dtr_pin = dummy_pin; \
+		if (strcmp(CONFIG_ETRAX_SER##port##_DSR_BIT, "")) \
+			crisv32_io_get_name(&serial_cris_ports[port].dsr_pin, \
+				CONFIG_ETRAX_SER##port##_DSR_BIT); \
+		else \
+			serial_cris_ports[port].dsr_pin = dummy_pin; \
+		if (strcmp(CONFIG_ETRAX_SER##port##_RI_BIT, "")) \
+			crisv32_io_get_name(&serial_cris_ports[port].ri_pin, \
+				CONFIG_ETRAX_SER##port##_RI_BIT); \
+		else \
+			serial_cris_ports[port].ri_pin = dummy_pin; \
+		if (strcmp(CONFIG_ETRAX_SER##port##_CD_BIT, "")) \
+			crisv32_io_get_name(&serial_cris_ports[port].cd_pin, \
+				CONFIG_ETRAX_SER##port##_CD_BIT); \
+		else \
+			serial_cris_ports[port].cd_pin = dummy_pin; \
+	}

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'port' - possible side-effects?
#99: FILE: drivers/serial/crisv32.c:59:
+#define SETUP_PINS(port) \
+	if (serial_cris_ports[port].used) { \
+		if (strcmp(CONFIG_ETRAX_SER##port##_DTR_BIT, "")) \
+			crisv32_io_get_name(&serial_cris_ports[port].dtr_pin, \
+				CONFIG_ETRAX_SER##port##_DTR_BIT); \
+		else \
+			serial_cris_ports[port].dtr_pin = dummy_pin; \
+		if (strcmp(CONFIG_ETRAX_SER##port##_DSR_BIT, "")) \
+			crisv32_io_get_name(&serial_cris_ports[port].dsr_pin, \
+				CONFIG_ETRAX_SER##port##_DSR_BIT); \
+		else \
+			serial_cris_ports[port].dsr_pin = dummy_pin; \
+		if (strcmp(CONFIG_ETRAX_SER##port##_RI_BIT, "")) \
+			crisv32_io_get_name(&serial_cris_ports[port].ri_pin, \
+				CONFIG_ETRAX_SER##port##_RI_BIT); \
+		else \
+			serial_cris_ports[port].ri_pin = dummy_pin; \
+		if (strcmp(CONFIG_ETRAX_SER##port##_CD_BIT, "")) \
+			crisv32_io_get_name(&serial_cris_ports[port].cd_pin, \
+				CONFIG_ETRAX_SER##port##_CD_BIT); \
+		else \
+			serial_cris_ports[port].cd_pin = dummy_pin; \
+	}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'instance' - possible side-effects?
#124: FILE: drivers/serial/crisv32.c:84:
+#define MODIFY_REG(instance, reg, var) \
+	do { \
+		if (REG_RD_INT(ser, instance, reg) \
+				!= REG_TYPE_CONV(int, reg_ser_##reg, var)) \
+			REG_WR(ser, instance, reg, var); \
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'reg' - possible side-effects?
#124: FILE: drivers/serial/crisv32.c:84:
+#define MODIFY_REG(instance, reg, var) \
+	do { \
+		if (REG_RD_INT(ser, instance, reg) \
+				!= REG_TYPE_CONV(int, reg_ser_##reg, var)) \
+			REG_WR(ser, instance, reg, var); \
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'var' - possible side-effects?
#124: FILE: drivers/serial/crisv32.c:84:
+#define MODIFY_REG(instance, reg, var) \
+	do { \
+		if (REG_RD_INT(ser, instance, reg) \
+				!= REG_TYPE_CONV(int, reg_ser_##reg, var)) \
+			REG_WR(ser, instance, reg, var); \
+	} while (0)

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#126: FILE: drivers/serial/crisv32.c:86:
+		if (REG_RD_INT(ser, instance, reg) \
 		               ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#128: FILE: drivers/serial/crisv32.c:88:
+			REG_WR(ser, instance, reg, var); \
 			       ^^^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(32) over __attribute__((__aligned__(32)))
#197: FILE: drivers/serial/crisv32.c:157:
+	    __attribute__ ((__aligned__(32)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(32) over __attribute__((__aligned__(32)))
#199: FILE: drivers/serial/crisv32.c:159:
+	    __attribute__ ((__aligned__(32)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(32) over __attribute__((__aligned__(32)))
#201: FILE: drivers/serial/crisv32.c:161:
+	    __attribute__ ((__aligned__(32)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(32) over __attribute__((__aligned__(32)))
#203: FILE: drivers/serial/crisv32.c:163:
+	    __attribute__ ((__aligned__(32)));

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#244: FILE: drivers/serial/crisv32.c:204:
+extern struct uart_driver serial_cris_driver;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#441: FILE: drivers/serial/crisv32.c:401:
+};
+static struct crisv32_iopin dummy_pin = {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#448: FILE: drivers/serial/crisv32.c:408:
+    0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: drivers/serial/crisv32.c:410:
+    1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: drivers/serial/crisv32.c:412:
+    2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#454: FILE: drivers/serial/crisv32.c:414:
+    3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#456: FILE: drivers/serial/crisv32.c:416:
+    4;$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#459: FILE: drivers/serial/crisv32.c:419:
+extern void reset_watchdog(void);

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#484: FILE: drivers/serial/crisv32.c:444:
+	tr_dma_en = old = REG_RD(ser, up->regi_ser, rw_tr_dma_en);
 	                         ^^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#484: FILE: drivers/serial/crisv32.c:444:
+	tr_dma_en = old = REG_RD(ser, up->regi_ser, rw_tr_dma_en);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#487: FILE: drivers/serial/crisv32.c:447:
+		REG_WR(ser, up->regi_ser, rw_tr_dma_en, tr_dma_en);
 		       ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#495: FILE: drivers/serial/crisv32.c:455:
+				stat = REG_RD(ser, up->regi_ser, r_stat_din);
 				              ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#497: FILE: drivers/serial/crisv32.c:457:
+			REG_WR_INT(ser, up->regi_ser, rw_dout, '\r');
 			           ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#501: FILE: drivers/serial/crisv32.c:461:
+			stat = REG_RD(ser, up->regi_ser, r_stat_din);
 			              ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#503: FILE: drivers/serial/crisv32.c:463:
+		REG_WR_INT(ser, up->regi_ser, rw_dout, s[i]);
 		           ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#511: FILE: drivers/serial/crisv32.c:471:
+		REG_WR(ser, up->regi_ser, rw_tr_dma_en, old);
 		       ^^^

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#517: FILE: drivers/serial/crisv32.c:477:
+static char msg[] = "Debug: ";

WARNING:LINE_SPACING: Missing a blank line after declarations
#524: FILE: drivers/serial/crisv32.c:484:
+	char *pos;
+	pos = memchr(buf, '\n', len);

WARNING:LINE_SPACING: Missing a blank line after declarations
#527: FILE: drivers/serial/crisv32.c:487:
+		int l = ++pos - buf;
+		memcpy(buffer + buffer_pos, buf, l);

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#586: FILE: drivers/serial/crisv32.c:546:
+#define SERIAL_CRIS_CONSOLE	&cris_console

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#605: FILE: drivers/serial/crisv32.c:565:
+	reg_ser_r_stat_din rstat = REG_RD(ser, regi_ser, r_stat_din);
 	                                  ^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#606: FILE: drivers/serial/crisv32.c:566:
+	reg_ser_r_stat_din rstat = REG_RD(ser, regi_ser, r_stat_din);
+	return !(rstat.rts_n == regk_ser_active);

WARNING:TYPO_SPELLING: 'reciever' may be misspelled - perhaps 'receiver'?
#619: FILE: drivers/serial/crisv32.c:579:
+	 * do not want to send with the reciever and for 485HD mode auto_rts
 	                                ^^^^^^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#630: FILE: drivers/serial/crisv32.c:590:
+		rec_ctrl = REG_RD(ser, regi_ser, rw_rec_ctrl);
 		                  ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#635: FILE: drivers/serial/crisv32.c:595:
+		REG_WR(ser, regi_ser, rw_rec_ctrl, rec_ctrl);
 		       ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#644: FILE: drivers/serial/crisv32.c:604:
+	reg_ser_r_stat_din rstat = REG_RD(ser, regi_ser, r_stat_din);
 	                                  ^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#645: FILE: drivers/serial/crisv32.c:605:
+	reg_ser_r_stat_din rstat = REG_RD(ser, regi_ser, r_stat_din);
+	return (rstat.cts_n == regk_ser_active);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#668: FILE: drivers/serial/crisv32.c:628:
+	reg_ser_rw_dout dout = {.data = ch };
 	                ^^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#685: FILE: drivers/serial/crisv32.c:645:
+		prev_tr_ctrl = tr_ctrl = REG_RD(ser, regi_ser, rw_tr_ctrl);
 		                                ^^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#685: FILE: drivers/serial/crisv32.c:645:
+		prev_tr_ctrl = tr_ctrl = REG_RD(ser, regi_ser, rw_tr_ctrl);

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#686: FILE: drivers/serial/crisv32.c:646:
+		rstat = REG_RD(ser, regi_ser, r_stat_din);
 		               ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#695: FILE: drivers/serial/crisv32.c:655:
+	REG_WR(ser, regi_ser, rw_ack_intr, ack_intr);
 	       ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#699: FILE: drivers/serial/crisv32.c:659:
+	REG_WR(ser, regi_ser, rw_tr_ctrl, tr_ctrl);
 	       ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#705: FILE: drivers/serial/crisv32.c:665:
+	REG_WR(ser, regi_ser, rw_dout, dout);
 	       ^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#705: FILE: drivers/serial/crisv32.c:665:
+	REG_WR(ser, regi_ser, rw_dout, dout);
 	                               ^^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#709: FILE: drivers/serial/crisv32.c:669:
+	rstat = REG_RD(ser, up->regi_ser, r_stat_din);
 	               ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#717: FILE: drivers/serial/crisv32.c:677:
+		REG_WR(ser, regi_ser, rw_xoff_clr, xoff_clr);
 		       ^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#717: FILE: drivers/serial/crisv32.c:677:
+		reg_ser_rw_xoff_clr xoff_clr = {.clr = 1 };
+		REG_WR(ser, regi_ser, rw_xoff_clr, xoff_clr);

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#719: FILE: drivers/serial/crisv32.c:679:
+		    = REG_RD(ser, regi_ser, rw_tr_dma_en);
 		             ^^^

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#719: FILE: drivers/serial/crisv32.c:679:
+		reg_ser_rw_tr_dma_en tr_dma_en
+		    = REG_RD(ser, regi_ser, rw_tr_dma_en);

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#731: FILE: drivers/serial/crisv32.c:691:
+		REG_WR(ser, regi_ser, rw_tr_dma_en, tr_dma_en);
 		       ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#735: FILE: drivers/serial/crisv32.c:695:
+	REG_WR(ser, regi_ser, rw_tr_ctrl, prev_tr_ctrl);
 	       ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#753: FILE: drivers/serial/crisv32.c:713:
+	tr_ctrl = REG_RD(ser, regi_ser, rw_tr_ctrl);
 	                 ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#755: FILE: drivers/serial/crisv32.c:715:
+	REG_WR(ser, regi_ser, rw_tr_ctrl, tr_ctrl);
 	       ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#758: FILE: drivers/serial/crisv32.c:718:
+		    REG_RD(ser, regi_ser, rw_intr_mask);
 		           ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#760: FILE: drivers/serial/crisv32.c:720:
+		REG_WR(ser, regi_ser, rw_intr_mask, intr_mask);
 		       ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#767: FILE: drivers/serial/crisv32.c:727:
+		REG_WR(ser, regi_ser, rw_tr_dma_en, tr_dma_en);
 		       ^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#767: FILE: drivers/serial/crisv32.c:727:
+		reg_ser_rw_tr_dma_en tr_dma_en = {.en = 1 };
+		REG_WR(ser, regi_ser, rw_tr_dma_en, tr_dma_en);

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#798: FILE: drivers/serial/crisv32.c:758:
+	intr_mask = REG_RD(ser, regi_ser, rw_intr_mask);
 	                   ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#800: FILE: drivers/serial/crisv32.c:760:
+	REG_WR(ser, regi_ser, rw_intr_mask, intr_mask);
 	       ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#802: FILE: drivers/serial/crisv32.c:762:
+	tr_ctrl = REG_RD(ser, regi_ser, rw_tr_ctrl);
 	                 ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#804: FILE: drivers/serial/crisv32.c:764:
+	REG_WR(ser, regi_ser, rw_tr_ctrl, tr_ctrl);
 	       ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#815: FILE: drivers/serial/crisv32.c:775:
+	REG_WR(ser, regi_ser, rw_xoff_clr, xoff_clr);
 	       ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#823: FILE: drivers/serial/crisv32.c:783:
+	REG_WR(ser, regi_ser, rw_tr_dma_en, tr_dma_en);
 	       ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#830: FILE: drivers/serial/crisv32.c:790:
+	reg_ser_rw_rec_ctrl rec_ctrl = REG_RD(ser, regi_ser, rw_rec_ctrl);
 	                                      ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#833: FILE: drivers/serial/crisv32.c:793:
+	REG_WR(ser, regi_ser, rw_rec_ctrl, rec_ctrl);
 	       ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#874: FILE: drivers/serial/crisv32.c:834:
+	rstat = REG_RD(ser, up->regi_ser, r_stat_din);
 	               ^^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#881: FILE: drivers/serial/crisv32.c:841:
+}
+static unsigned int serial_cris_get_mctrl(struct uart_port *port)

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#921: FILE: drivers/serial/crisv32.c:881:
+	tr_ctrl = REG_RD(ser, up->regi_ser, rw_tr_ctrl);
 	                 ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#922: FILE: drivers/serial/crisv32.c:882:
+	tr_dma_en = REG_RD(ser, up->regi_ser, rw_tr_dma_en);
 	                   ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#923: FILE: drivers/serial/crisv32.c:883:
+	intr_mask = REG_RD(ser, up->regi_ser, rw_intr_mask);
 	                   ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#952: FILE: drivers/serial/crisv32.c:912:
+	REG_WR(ser, up->regi_ser, rw_tr_ctrl, tr_ctrl);
 	       ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#953: FILE: drivers/serial/crisv32.c:913:
+	REG_WR(ser, up->regi_ser, rw_tr_dma_en, tr_dma_en);
 	       ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#954: FILE: drivers/serial/crisv32.c:914:
+	REG_WR(ser, up->regi_ser, rw_intr_mask, intr_mask);
 	       ^^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#992: FILE: drivers/serial/crisv32.c:952:
+		pending_descr->after = pending_descr->buf = NULL;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1040: FILE: drivers/serial/crisv32.c:1000:
+	if ((descr == up->first_tx_descr && up->tx_pending_chars != 0)
+	    || descr->next == up->first_tx_descr)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1063: FILE: drivers/serial/crisv32.c:1023:
+	if (!up->tx_started) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1067: FILE: drivers/serial/crisv32.c:1027:
+		up->tr_context_descr.saved_data
+		    = (dma_descr_data *) virt_to_phys(descr);

CHECK:SPACING: No space is necessary after a cast
#1067: FILE: drivers/serial/crisv32.c:1027:
+		    = (dma_descr_data *) virt_to_phys(descr);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#1071: FILE: drivers/serial/crisv32.c:1031:
+	} else

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#1093: FILE: drivers/serial/crisv32.c:1053:
+		intr_mask = REG_RD(ser, regi_ser, rw_intr_mask);
 		                   ^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1093: FILE: drivers/serial/crisv32.c:1053:
+		reg_ser_rw_intr_mask intr_mask;
+		intr_mask = REG_RD(ser, regi_ser, rw_intr_mask);

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#1096: FILE: drivers/serial/crisv32.c:1056:
+		REG_WR(ser, regi_ser, rw_intr_mask, intr_mask);
 		       ^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1102: FILE: drivers/serial/crisv32.c:1062:
+		reg_ser_rw_dout dout = {.data = xmit->buf[xmit->tail] };
 		                ^^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#1103: FILE: drivers/serial/crisv32.c:1063:
+		REG_WR(ser, regi_ser, rw_dout, dout);
 		       ^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1103: FILE: drivers/serial/crisv32.c:1063:
+		REG_WR(ser, regi_ser, rw_dout, dout);
 		                               ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1103: FILE: drivers/serial/crisv32.c:1063:
+		reg_ser_rw_dout dout = {.data = xmit->buf[xmit->tail] };
+		REG_WR(ser, regi_ser, rw_dout, dout);

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#1104: FILE: drivers/serial/crisv32.c:1064:
+		REG_WR(ser, regi_ser, rw_ack_intr, ack_intr);
 		       ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#1109: FILE: drivers/serial/crisv32.c:1069:
+		rstat = REG_RD(ser, regi_ser, r_stat_din);
 		               ^^^

WARNING:SIZEOF_PARENTHESIS: sizeof *buffer should be sizeof(*buffer)
#1120: FILE: drivers/serial/crisv32.c:1080:
+	buffer = kmalloc(sizeof *buffer + size, GFP_ATOMIC);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1122: FILE: drivers/serial/crisv32.c:1082:
+	if (!buffer)
+		panic(KERN_ERR "%s: Could not allocate %d bytes buffer\n",

WARNING:UNNECESSARY_KERN_LEVEL: Possible unnecessary KERN_ERR
#1122: FILE: drivers/serial/crisv32.c:1082:
+		panic(KERN_ERR "%s: Could not allocate %d bytes buffer\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1123: FILE: drivers/serial/crisv32.c:1083:
+		      __FUNCTION__, size);

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1210: FILE: drivers/serial/crisv32.c:1170:
+	struct etrax_recv_buffer *buffer
+	    = phys_to_virt((unsigned long)descr->buf) - sizeof *buffer;

WARNING:SIZEOF_PARENTHESIS: sizeof *buffer should be sizeof(*buffer)
#1210: FILE: drivers/serial/crisv32.c:1170:
+	    = phys_to_virt((unsigned long)descr->buf) - sizeof *buffer;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1213: FILE: drivers/serial/crisv32.c:1173:
+		printk(KERN_ERR "Too much pending incoming data on %s!"

WARNING:SPLIT_STRING: quoted string split across lines
#1214: FILE: drivers/serial/crisv32.c:1174:
+		printk(KERN_ERR "Too much pending incoming data on %s!"
+		       " Dropping %u bytes.\n", up->port.info->tty->name,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#1285: FILE: drivers/serial/crisv32.c:1245:
+	rstat = REG_RD(ser, up->regi_ser, r_stat_din);
 	               ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#1293: FILE: drivers/serial/crisv32.c:1253:
+		stat_din = REG_RD(ser, up->regi_ser, rs_stat_din);
 		                  ^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1293: FILE: drivers/serial/crisv32.c:1253:
+		reg_ser_rs_stat_din stat_din;
+		stat_din = REG_RD(ser, up->regi_ser, rs_stat_din);

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#1317: FILE: drivers/serial/crisv32.c:1277:
+	rstat = REG_RD(ser, up->regi_ser, r_stat_din);
 	               ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#1324: FILE: drivers/serial/crisv32.c:1284:
+		stat_din = REG_RD(ser, up->regi_ser, rs_stat_din);
 		                  ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#1328: FILE: drivers/serial/crisv32.c:1288:
+		REG_WR(ser, up->regi_ser, rw_ack_intr, ack_intr);
 		       ^^^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1353: FILE: drivers/serial/crisv32.c:1313:
+			panic("%s: No tty buffer space", __FUNCTION__);

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#1354: FILE: drivers/serial/crisv32.c:1314:
+		rstat = REG_RD(ser, up->regi_ser, r_stat_din);
 		               ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#1450: FILE: drivers/serial/crisv32.c:1410:
+		masked_intr = REG_RD(ser, regi_ser, r_masked_intr);
 		                     ^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1450: FILE: drivers/serial/crisv32.c:1410:
+		reg_ser_r_masked_intr masked_intr;
+		masked_intr = REG_RD(ser, regi_ser, r_masked_intr);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1490: FILE: drivers/serial/crisv32.c:1450:
+
+	}

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1502: FILE: drivers/serial/crisv32.c:1462:
+	up->rec_context_descr.saved_data
+	    = (dma_descr_data *) virt_to_phys(&descr[up->cur_rec_descr]);

CHECK:SPACING: No space is necessary after a cast
#1502: FILE: drivers/serial/crisv32.c:1462:
+	    = (dma_descr_data *) virt_to_phys(&descr[up->cur_rec_descr]);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1515: FILE: drivers/serial/crisv32.c:1475:
+	reg_scope_instances regi_dmain = up->regi_dmain;
+	if (regi_dmain)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1523: FILE: drivers/serial/crisv32.c:1483:
+	reg_scope_instances regi_dmaout = up->regi_dmaout;
+	if (regi_dmaout) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1561: FILE: drivers/serial/crisv32.c:1521:
+	dmain_intr_mask.data = dmain_intr_mask.in_eop = regk_dma_yes;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1683: FILE: drivers/serial/crisv32.c:1643:
+		reg_dma_rw_ack_intr ack_intr = { 0 };
+		DMA_RESET(regi_dma);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1698: FILE: drivers/serial/crisv32.c:1658:
+		reg_dma_rw_ack_intr ack_intr = { 0 };
+		DMA_RESET(regi_dma);

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#1711: FILE: drivers/serial/crisv32.c:1671:
+	REG_WR(ser, up->regi_ser, rw_intr_mask, ser_intr_mask);
 	       ^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rb"
#1818: FILE: drivers/serial/crisv32.c:1778:
+		for (rb = up->first_recv_buffer; rb != NULL; rb = rb_next) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#1832: FILE: drivers/serial/crisv32.c:1792:
+				rb = phys_to_virt((u32) descr[i].buf)

WARNING:SIZEOF_PARENTHESIS: sizeof *rb should be sizeof(*rb)
#1833: FILE: drivers/serial/crisv32.c:1793:
+				    - sizeof *rb;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1841: FILE: drivers/serial/crisv32.c:1801:
+
+}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'up->port_type != TYPE_485FD'
#1871: FILE: drivers/serial/crisv32.c:1831:
+	if (up->rs485.enabled && (up->port_type != TYPE_485FD))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'up->port_type != TYPE_485FD'
#1888: FILE: drivers/serial/crisv32.c:1848:
+	if (up->rs485.enabled && (up->port_type != TYPE_485FD)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1888: FILE: drivers/serial/crisv32.c:1848:
+	if (up->rs485.enabled && (up->port_type != TYPE_485FD)) {
[...]
+	} else if (up->port_type == TYPE_485FD) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1896: FILE: drivers/serial/crisv32.c:1856:
+	} else

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'port != console_port'
#1923: FILE: drivers/serial/crisv32.c:1883:
+	if ((port != console_port) || old)

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#1994: FILE: drivers/serial/crisv32.c:1954:
+	REG_WR(ser, up->regi_ser, rw_tr_dma_en, tx_dma_en);
 	       ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#2004: FILE: drivers/serial/crisv32.c:1964:
+		rstat = REG_RD(ser, up->regi_ser, r_stat_din);
 		               ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#2017: FILE: drivers/serial/crisv32.c:1977:
+	REG_WR(ser, up->regi_ser, rw_tr_dma_en, tx_dma_en);
 	       ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#2019: FILE: drivers/serial/crisv32.c:1979:
+	xoff = REG_RD(ser, up->regi_ser, rw_xoff);
 	              ^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#2021: FILE: drivers/serial/crisv32.c:1981:
+	if (up->port.info && (up->port.info->tty->termios->c_iflag & IXON)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2024: FILE: drivers/serial/crisv32.c:1984:
+	} else

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#2034: FILE: drivers/serial/crisv32.c:1994:
+	REG_WR(ser, up->regi_ser, rw_xoff_clr, xoff_clr);
 	       ^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2057: FILE: drivers/serial/crisv32.c:2017:
+	struct uart_cris_port *up = (struct uart_cris_port *)port;
+	up->port.type = PORT_CRIS;

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#2072: FILE: drivers/serial/crisv32.c:2032:
+	tr_ctrl = REG_RD(ser, regi_ser, rw_tr_ctrl);
 	                 ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#2073: FILE: drivers/serial/crisv32.c:2033:
+	rec_ctrl = REG_RD(ser, regi_ser, rw_rec_ctrl);
 	                  ^^^

CHECK:BRACES: Unbalanced braces around else statement
#2085: FILE: drivers/serial/crisv32.c:2045:
+	else {

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#2091: FILE: drivers/serial/crisv32.c:2051:
+	REG_WR(ser, regi_ser, rw_tr_ctrl, tr_ctrl);
 	       ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#2092: FILE: drivers/serial/crisv32.c:2052:
+	REG_WR(ser, regi_ser, rw_rec_ctrl, rec_ctrl);
 	       ^^^

WARNING:TYPO_SPELLING: 'chage' may be misspelled - perhaps 'change'?
#2099: FILE: drivers/serial/crisv32.c:2059:
+		/* Port in 485FD mode can not chage mode */
 		                              ^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2142: FILE: drivers/serial/crisv32.c:2102:
+			struct rs485_control rs485ctrl;
+			if (copy_from_user

WARNING:LINE_SPACING: Missing a blank line after declarations
#2152: FILE: drivers/serial/crisv32.c:2112:
+			struct rs485_write rs485wr;
+			if (copy_from_user(&rs485wr, (struct rs485_write *)arg,

WARNING:LINE_SPACING: Missing a blank line after declarations
#2220: FILE: drivers/serial/crisv32.c:2180:
+	struct circ_buf *xmit = &up->port.info->xmit;
+	xmit->tail = xmit->head;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2341: FILE: drivers/serial/crisv32.c:2301:
+	int ret, i;
+	printk(KERN_INFO "Serial: CRISv32 driver $Revision: 1.86 $ ");

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#2341: FILE: drivers/serial/crisv32.c:2301:
+	printk(KERN_INFO "Serial: CRISv32 driver $Revision: 1.86 $ ");

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2341: FILE: drivers/serial/crisv32.c:2301:
+	printk(KERN_INFO "Serial: CRISv32 driver $Revision: 1.86 $ ");

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#2357: FILE: drivers/serial/crisv32.c:2317:
+				    REG_RD(ser, serial_cris_ports[i].regi_ser,
 				           ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#2360: FILE: drivers/serial/crisv32.c:2320:
+				REG_WR(ser, serial_cris_ports[i].regi_ser,
 				       ^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2367: FILE: drivers/serial/crisv32.c:2327:
+					printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#2369: FILE: drivers/serial/crisv32.c:2329:
+						"Failed to allocate pins for "
+						"ser1, disable port\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2376: FILE: drivers/serial/crisv32.c:2336:
+					printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#2378: FILE: drivers/serial/crisv32.c:2338:
+						"Failed to allocate pins for "
+						"ser2, disable port\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2385: FILE: drivers/serial/crisv32.c:2345:
+					printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#2387: FILE: drivers/serial/crisv32.c:2347:
+						"Failed to allocate pins for "
+						"ser3, disable port\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2395: FILE: drivers/serial/crisv32.c:2355:
+					printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#2397: FILE: drivers/serial/crisv32.c:2357:
+						"Failed to allocate pins for "
+						"ser4, disable port\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#2406: FILE: drivers/serial/crisv32.c:2366:
+			struct uart_port *port = &serial_cris_ports[i].port;
+			cris_console.index = i;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2419: FILE: drivers/serial/crisv32.c:2379:
+	int i;
+	for (i = 0; i < UART_NR; i++)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000342189.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 131 warnings, 31 checks, 2404 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000342189.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
