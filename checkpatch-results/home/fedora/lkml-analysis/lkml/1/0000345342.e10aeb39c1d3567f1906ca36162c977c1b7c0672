ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: drivers/block/virtio_blk.c:98:
+ ^Isg_ring_single(&vblk->out.ring, &vbr->out_hdr, sizeof(vbr->out_hdr));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#94: FILE: drivers/block/virtio_blk.c:98:
+ ^Isg_ring_single(&vblk->out.ring, &vbr->out_hdr, sizeof(vbr->out_hdr));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: drivers/block/virtio_blk.c:98:
+ ^Isg_ring_single(&vblk->out.ring, &vbr->out_hdr, sizeof(vbr->out_hdr));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#95: FILE: drivers/block/virtio_blk.c:99:
+ ^Isg_ring_init(&vblk->sg.ring, ARRAY_SIZE(vblk->sg.sg));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#95: FILE: drivers/block/virtio_blk.c:99:
+ ^Isg_ring_init(&vblk->sg.ring, ARRAY_SIZE(vblk->sg.sg));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: drivers/block/virtio_blk.c:99:
+ ^Isg_ring_init(&vblk->sg.ring, ARRAY_SIZE(vblk->sg.sg));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#96: FILE: drivers/block/virtio_blk.c:100:
+ ^Ivblk->sg.ring.num = blk_rq_map_sg(q, vbr->req, vblk->sg.sg);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#96: FILE: drivers/block/virtio_blk.c:100:
+ ^Ivblk->sg.ring.num = blk_rq_map_sg(q, vbr->req, vblk->sg.sg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: drivers/block/virtio_blk.c:100:
+ ^Ivblk->sg.ring.num = blk_rq_map_sg(q, vbr->req, vblk->sg.sg);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: drivers/block/virtio_blk.c:101:
+ ^Isg_ring_single(&vblk->in.ring, &vbr->in_hdr, sizeof(vbr->in_hdr));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#97: FILE: drivers/block/virtio_blk.c:101:
+ ^Isg_ring_single(&vblk->in.ring, &vbr->in_hdr, sizeof(vbr->in_hdr));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: drivers/block/virtio_blk.c:101:
+ ^Isg_ring_single(&vblk->in.ring, &vbr->in_hdr, sizeof(vbr->in_hdr));$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#125: FILE: drivers/block/virtio_blk.c:132:
+		BUG_ON(req->nr_phys_segments > ARRAY_SIZE(vblk->sg.sg));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#176: FILE: drivers/net/virtio_net.c:214:
+	DECLARE_SG_RING(sg, 1+MAX_SKB_FRAGS);
 	                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#180: FILE: drivers/net/virtio_net.c:217:
+	sg_ring_init(&sg.ring, 1+MAX_SKB_FRAGS);
 	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#190: FILE: drivers/net/virtio_net.c:225:
+		sg.ring.num = skb_to_sgvec(skb, sg.sg+1, 0, skb->len) + 1;
 		                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#205: FILE: drivers/net/virtio_net.c:308:
+	DECLARE_SG_RING(sg, 1+MAX_SKB_FRAGS);
 	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#211: FILE: drivers/net/virtio_net.c:313:
+	sg_ring_init(&sg.ring, 1+MAX_SKB_FRAGS);
 	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#222: FILE: drivers/net/virtio_net.c:349:
+	sg.ring.num = skb_to_sgvec(skb, sg.sg+1, 0, skb->len) + 1;
 	                                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#247: FILE: drivers/virtio/virtio_ring.c:79:
+	vq->vring.desc[i].addr = (page_to_pfn(sg_page(sg))<<PAGE_SHIFT)
 	                                                  ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#279: FILE: drivers/virtio/virtio_ring.c:105:
+	BUG_ON(in->num == 0 && out->num == 0);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#288: FILE: drivers/virtio/virtio_ring.c:109:
+	i = head = vq->free_head;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: space required after that ',' (ctx:VxO)
#416: FILE: net/9p/trans_virtio.c:127:
+	if (chan->in_vq->vq_ops->add_buf(chan->in_vq,&sg.ring,NULL,chan->inbuf))
 	                                            ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#416: FILE: net/9p/trans_virtio.c:127:
+	if (chan->in_vq->vq_ops->add_buf(chan->in_vq,&sg.ring,NULL,chan->inbuf))
 	                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#416: FILE: net/9p/trans_virtio.c:127:
+	if (chan->in_vq->vq_ops->add_buf(chan->in_vq,&sg.ring,NULL,chan->inbuf))
 	                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#416: FILE: net/9p/trans_virtio.c:127:
+	if (chan->in_vq->vq_ops->add_buf(chan->in_vq,&sg.ring,NULL,chan->inbuf))
 	                                                          ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000345342.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 10 warnings, 8 checks, 334 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000345342.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
