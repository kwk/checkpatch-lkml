WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
   git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip.git timers-for-linus

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#380: FILE: arch/powerpc/kernel/time.c:795:
+	ts->tv_sec = mktime(tm.tm_year+1900, tm.tm_mon+1, tm.tm_mday,
 	                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#380: FILE: arch/powerpc/kernel/time.c:795:
+	ts->tv_sec = mktime(tm.tm_year+1900, tm.tm_mon+1, tm.tm_mday,
 	                                              ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#584: FILE: arch/x86/kernel/tsc.c:770:
+		printk(KERN_INFO "Marking TSC unstable due to %s\n", reason);

CHECK:BRACES: Unbalanced braces around else statement
#590: FILE: arch/x86/kernel/tsc.c:774:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#620: FILE: arch/x86/vdso/vclock_gettime.c:92:
+	unsigned long seq;
+	do {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#631: FILE: arch/x86/vdso/vclock_gettime.c:103:
+	unsigned long seq, ns, secs;
+	do {

CHECK:SPACING: No space is necessary after a cast
#862: FILE: include/linux/clocksource.h:268:
+	return ((u64) cycles * mult) >> shift;

ERROR:WEAK_DECLARATION: Using weak declarations can have unintended link defects
#870: FILE: include/linux/clocksource.h:279:
+extern struct clocksource * __init __weak clocksource_default_clock(void);

Using weak declarations like __attribute__((weak)) or __weak
can have unintended link defects.  Avoid using them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#870: FILE: include/linux/clocksource.h:279:
+extern struct clocksource * __init __weak clocksource_default_clock(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#871: FILE: include/linux/clocksource.h:280:
+extern void clocksource_mark_unstable(struct clocksource *cs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#879: FILE: include/linux/clocksource.h:295:
+extern void timekeeping_notify(struct clocksource *clock);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#911: FILE: include/linux/time.h:78:
+extern void set_normalized_timespec(struct timespec *ts, time_t sec, s64 nsec);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#920: FILE: include/linux/time.h:104:
+extern void read_persistent_clock(struct timespec *ts);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#921: FILE: include/linux/time.h:105:
+extern void read_boot_clock(struct timespec *ts);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#938: FILE: include/linux/time.h:153:
+extern void timekeeping_leap_insert(int leapsecond);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1057: FILE: kernel/posix-timers.c:245:
 
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1065: FILE: kernel/posix-timers.c:253:
+static int posix_get_monotonic_coarse(clockid_t which_clock,
+						struct timespec *tp)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1602: FILE: kernel/time/clocksource.c:450:
+			printk(KERN_WARNING "Override clocksource %s is not "

WARNING:SPLIT_STRING: quoted string split across lines
#1603: FILE: kernel/time/clocksource.c:451:
+			printk(KERN_WARNING "Override clocksource %s is not "
+			       "HRT compatible. Cannot switch while in "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#1604: FILE: kernel/time/clocksource.c:452:
+			       "HRT compatible. Cannot switch while in "
+			       "HRT/NOHZ mode\n", cs->name);

CHECK:BRACES: Unbalanced braces around else statement
#1606: FILE: kernel/time/clocksource.c:454:
+		} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1612: FILE: kernel/time/clocksource.c:460:
+		printk(KERN_INFO "Switching to clocksource %s\n", best->name);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1964: FILE: kernel/time/timekeeping.c:40:
+	 * shifted nano seconds. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1967: FILE: kernel/time/timekeeping.c:43:
+	 * ntp shifted nano seconds. */

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1996: FILE: kernel/time/timekeeping.c:72:
+	tmp += clock->mult/2;
 	                  ^

CHECK:SPACING: No space is necessary after a cast
#2001: FILE: kernel/time/timekeeping.c:77:
+	interval = (cycle_t) tmp;

CHECK:SPACING: No space is necessary after a cast
#2005: FILE: kernel/time/timekeeping.c:81:
+	timekeeper.xtime_interval = (u64) interval * clock->mult;

CHECK:SPACING: No space is necessary after a cast
#2007: FILE: kernel/time/timekeeping.c:83:
+		((u64) interval * clock->mult) >> clock->shift;

CHECK:SPACING: No space is necessary after a cast
#2241: FILE: kernel/time/timekeeping.c:360:
+	new = (struct clocksource *) data;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#2404: FILE: kernel/time/timekeeping.c:498:
+void __attribute__((weak)) read_persistent_clock(struct timespec *ts)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#2420: FILE: kernel/time/timekeeping.c:513:
+void __attribute__((weak)) read_boot_clock(struct timespec *ts)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2688: FILE: kernel/time/timekeeping.c:797:
+		s64 neg = -(s64)timekeeper.xtime_nsec;
+		timekeeper.xtime_nsec = 0;

CHECK:SPACING: No space is necessary after a cast
#2698: FILE: kernel/time/timekeeping.c:804:
+	xtime.tv_nsec =	((s64) timekeeper.xtime_nsec >> timekeeper.shift) + 1;

CHECK:SPACING: No space is necessary after a cast
#2699: FILE: kernel/time/timekeeping.c:805:
+	timekeeper.xtime_nsec -= (s64) xtime.tv_nsec << timekeeper.shift;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000071587.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 13 warnings, 21 checks, 2513 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000071587.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
