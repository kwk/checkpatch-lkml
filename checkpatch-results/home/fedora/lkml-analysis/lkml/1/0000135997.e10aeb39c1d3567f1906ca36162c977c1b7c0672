WARNING:BAD_SIGN_OFF: 'Not-signed-off-by:' is the preferred signature form
#56: 
NOT-signed-off-by: me

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'me'
#56: 
NOT-signed-off-by: me

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#61: 
 drivers/ata/libata-scsi.c     |  237 +++++++++++++++++++++---------------------

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#75: FILE: drivers/ata/ahci.c:329:
+#if 0

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#84: FILE: drivers/ata/ahci.c:338:
+#if 0

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: drivers/ata/libata-core.c:6228:
+ ^Ireturn;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#145: FILE: drivers/ata/libata-core.c:6228:
+ ^Ireturn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: drivers/ata/libata-core.c:6228:
+ ^Ireturn;$

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#169: FILE: drivers/ata/libata-eh.c:469:
+	struct Scsi_Host *shost = cmd->device->host;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:LINE_SPACING: Please don't use multiple blank lines
#253: FILE: drivers/ata/libata-eh.c:760:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#285: FILE: drivers/ata/libata-scsi.c:62:
+static struct ata_device *__ata_scsi_find_dev(struct ata_host *,
 					const struct scsi_device *scsidev);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#295: FILE: drivers/ata/libata-scsi.c:137:
+#if 0

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#381: FILE: drivers/ata/libata-scsi.c:298:
+#if 0

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#436: FILE: drivers/ata/libata-scsi.c:668:
+int ata_sas_scsi_ioctl(struct ata_host *host, struct scsi_device *scsidev,
 		     int cmd, void __user *arg)

CHECK:BRACES: braces {} should be used on all arms of this statement
#500: FILE: drivers/ata/libata-scsi.c:1214:
+		if (!ap->ops->error_handler)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#503: FILE: drivers/ata/libata-scsi.c:1217:
+		else {
[...]
 		dev->sdev = NULL;

CHECK:BRACES: Unbalanced braces around else statement
#503: FILE: drivers/ata/libata-scsi.c:1217:
+		else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#577: FILE: drivers/ata/libata-scsi.c:2723:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#792: FILE: drivers/ata/libata-scsi.c:3533:
+	if (channel == SCAN_WILD_CARD)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#794: FILE: drivers/ata/libata-scsi.c:3535:
+	else {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#892: FILE: include/linux/libata.h:951:
+extern int ata_sas_scsi_ioctl(struct ata_host *, struct scsi_device *dev,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_host *' should also have an identifier name
#892: FILE: include/linux/libata.h:951:
+extern int ata_sas_scsi_ioctl(struct ata_host *, struct scsi_device *dev,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#893: FILE: include/linux/libata.h:952:
+extern int ata_sas_scsi_ioctl(struct ata_host *, struct scsi_device *dev,
 			    int cmd, void __user *arg);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000135997.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 10 warnings, 10 checks, 759 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000135997.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
