WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
Gitweb:     http://git.kernel.org/tip/bf66f18e79e34c421bbd8f6511e2c556b779df2f

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#102: FILE: include/linux/rcutree.h:102:
+extern void rcu_force_quiescent_state(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#103: FILE: include/linux/rcutree.h:103:
+extern void rcu_bh_force_quiescent_state(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#104: FILE: include/linux/rcutree.h:104:
+extern void rcu_sched_force_quiescent_state(void);

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#116: FILE: kernel/rcutorture.c:64:
+static int fqs_duration = 0;	/* Duration of bursts (us), 0 to disable. */

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#117: FILE: kernel/rcutorture.c:65:
+static int fqs_holdoff = 0;	/* Hold time within burst (us). */

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rcu_torture_fqs', this function's name, in a string
#228: FILE: kernel/rcutorture.c:688:
+	VERBOSE_PRINTK_STRING("rcu_torture_fqs task started");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:BRACES: braces {} are not necessary for single statement blocks
#231: FILE: kernel/rcutorture.c:691:
+		while (jiffies - fqs_resume_time > LONG_MAX) {
+			schedule_timeout_interruptible(1);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rcu_torture_fqs', this function's name, in a string
#242: FILE: kernel/rcutorture.c:702:
+	VERBOSE_PRINTK_STRING("rcu_torture_fqs task stopping");

WARNING:SPLIT_STRING: quoted string split across lines
#258: FILE: kernel/rcutorture.c:1084:
 		"stat_interval=%d verbose=%d test_no_idle_hz=%d "
+		"shuffle_interval=%d stutter=%d irqreader=%d "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#259: FILE: kernel/rcutorture.c:1085:
+		"shuffle_interval=%d stutter=%d irqreader=%d "
+		"fqs_duration=%d fqs_holdoff=%d fqs_stutter=%d\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cur_ops->fqs"
#284: FILE: kernel/rcutorture.c:1215:
+	if (cur_ops->fqs == NULL && fqs_duration != 0) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#285: FILE: kernel/rcutorture.c:1216:
+		printk(KERN_ALERT "rcu-torture: ->fqs NULL and non-zero "

WARNING:SPLIT_STRING: quoted string split across lines
#286: FILE: kernel/rcutorture.c:1217:
+		printk(KERN_ALERT "rcu-torture: ->fqs NULL and non-zero "
+				  "fqs_duration, fqs disabled.\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000024371.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 8 warnings, 4 checks, 266 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000024371.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
