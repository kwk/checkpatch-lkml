WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
This cannot assume that writes will fully complete, so this conversion goes the

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#36: 
easy way and always brings the page uptodate before the write.
                                    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#73: FILE: fs/afs/internal.h:725:
+extern int afs_write_begin(struct file *file, struct address_space *mapping,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#74: FILE: fs/afs/internal.h:726:
+extern int afs_write_begin(struct file *file, struct address_space *mapping,
+			loff_t pos, unsigned len, unsigned flags,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#74: FILE: fs/afs/internal.h:726:
+			loff_t pos, unsigned len, unsigned flags,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#74: FILE: fs/afs/internal.h:726:
+			loff_t pos, unsigned len, unsigned flags,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#76: FILE: fs/afs/internal.h:728:
+extern int afs_write_end(struct file *file, struct address_space *mapping,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#77: FILE: fs/afs/internal.h:729:
+extern int afs_write_end(struct file *file, struct address_space *mapping,
+			loff_t pos, unsigned len, unsigned copied,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#77: FILE: fs/afs/internal.h:729:
+			loff_t pos, unsigned len, unsigned copied,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#77: FILE: fs/afs/internal.h:729:
+			loff_t pos, unsigned len, unsigned copied,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#91: FILE: fs/afs/write.c:87:
+			 loff_t pos, unsigned len, struct page *page)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#94: FILE: fs/afs/write.c:90:
+	unsigned eof;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#189: FILE: fs/afs/write.c:121:
+		    loff_t pos, unsigned len, unsigned flags,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#189: FILE: fs/afs/write.c:121:
+		    loff_t pos, unsigned len, unsigned flags,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#197: FILE: fs/afs/write.c:128:
+	unsigned from = pos & (PAGE_CACHE_SIZE - 1);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#198: FILE: fs/afs/write.c:129:
+	unsigned to = from + len;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#212: FILE: fs/afs/write.c:140:
+	candidate->first = candidate->last = index;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#262: FILE: fs/afs/write.c:247:
+		  loff_t pos, unsigned len, unsigned copied,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#262: FILE: fs/afs/write.c:247:
+		  loff_t pos, unsigned len, unsigned copied,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000224301.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 14 warnings, 5 checks, 228 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000224301.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
