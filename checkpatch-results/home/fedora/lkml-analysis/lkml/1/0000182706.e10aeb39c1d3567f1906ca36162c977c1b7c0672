ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#39: 
--- a/drivers/char/keyboard.c	2008-12-25 00:26:37.000000000 +0100

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:LINE_SPACING: Missing a blank line after declarations
#50: FILE: drivers/char/keyboard.c:274:
+	struct list_head *node;
+	state = state ? 1 : 0;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#54: FILE: drivers/char/keyboard.c:278:
+		struct input_handle *handle = to_handle_h(node);
+		if (test_bit(EV_LED, handle->dev->evbit)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#56: FILE: drivers/char/keyboard.c:280:
+			int led;
+			for (led = 0; led <= LED_MAX; led++) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#59: FILE: drivers/char/keyboard.c:283:
+					input_event(handle->dev, EV_LED, led,
+						state);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#170: FILE: include/linux/morseops.h:1:
+/*  Yes, it's morse code ops indeed.  */

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#182: FILE: include/linux/morseops.h:13:
+static inline unsigned char tomorse(char c) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#203: FILE: include/linux/vt_kern.h:32:
+extern void kd_set_led_all(int state);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#247: FILE: kernel/morse.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#248: FILE: kernel/morse.c:2:
+ *  kernel/morse.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:TYPO_SPELLING: 'distingush' may be misspelled - perhaps 'distinguish'?
#254: FILE: kernel/morse.c:8:
+ *  we have panic'd.  This is to distingush panics from "real lockups."
                                  ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BIT_MACRO: Prefer using the BIT macro
#283: FILE: kernel/morse.c:37:
+#define MORSE_OUTPUT_BLINK	(1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#284: FILE: kernel/morse.c:38:
+#define MORSE_OUTPUT_BLEEP	(1 << 1)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'shift' - possible side-effects?
#291: FILE: kernel/morse.c:45:
+#define	IS_DASH(letter, shift)					\
+	((letter) == '-' ? (1 << (shift)) : (0 << (shift)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b1' - possible side-effects?
#305: FILE: kernel/morse.c:59:
+#define	MORSE4(letter, b1, b2, b3, b4)				\
+		MORSE(4, '.', '.', (b1), (b1), (b3), (b4))

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#314: FILE: kernel/morse.c:68:
+const unsigned char morsetable[] = {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'technik' may be misspelled - perhaps 'technique'?
#328: FILE: kernel/morse.c:82:
+	/*  http://www.vennfuessler.de/service/technik/morsen.html  */
 	                                       ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#398: FILE: kernel/morse.c:152:
+{ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#399: FILE: kernel/morse.c:153:
+	static unsigned long next_jiffie = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#400: FILE: kernel/morse.c:154:
+	static char *bufpos = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#401: FILE: kernel/morse.c:155:
+	static unsigned char morse = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#403: FILE: kernel/morse.c:157:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#436: FILE: kernel/morse.c:190:
+^I^I^I^Inext_jiffie = jiffies + DAHLEN; $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#439: FILE: kernel/morse.c:193:
+			if (!(morse = tomorse(*bufpos))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#468: FILE: kernel/morse.c:222:
+^Iif (get_option(&str, &par)) $

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#480: FILE: kernel/morse.c:234:
+__setup("panicmorse=", panicmorse_setup);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000182706.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 8 warnings, 8 checks, 460 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000182706.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
