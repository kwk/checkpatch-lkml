WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#45: FILE: include/linux/rwmutex.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#60: FILE: include/linux/rwmutex.h:16:
+#include <asm/atomic.h>

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#78: FILE: include/linux/rwmutex.h:34:
+extern void __rw_mutex_init(struct rw_mutex *rw_mutex, const char * name,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#78: FILE: include/linux/rwmutex.h:34:
+extern void __rw_mutex_init(struct rw_mutex *rw_mutex, const char * name,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#79: FILE: include/linux/rwmutex.h:35:
+extern void __rw_mutex_init(struct rw_mutex *rw_mutex, const char * name,
+		struct lock_class_key *key);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#80: FILE: include/linux/rwmutex.h:36:
+extern void rw_mutex_destroy(struct rw_mutex *rw_mutex);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#88: FILE: include/linux/rwmutex.h:44:
+extern void __rw_mutex_read_lock(struct rw_mutex *rw_mutex);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#90: FILE: include/linux/rwmutex.h:46:
+extern void rw_mutex_write_lock_nested(struct rw_mutex *rw_mutex, int subclass);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#91: FILE: include/linux/rwmutex.h:47:
+extern void rw_mutex_write_unlock(struct rw_mutex *rw_mutex);

WARNING:MEMORY_BARRIER: memory barrier without comment
#97: FILE: include/linux/rwmutex.h:53:
+	smp_rmb();

WARNING:LINE_SPACING: Missing a blank line after declarations
#118: FILE: include/linux/rwmutex.h:74:
+	int ret = __rw_mutex_read_trylock(rw_mutex);
+	if (ret)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#153: FILE: kernel/rwmutex.c:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#168: FILE: kernel/rwmutex.c:16:
+#define RW_MUTEX_READER_FAST ^I0$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#172: FILE: kernel/rwmutex.c:20:
+void __rw_mutex_init(struct rw_mutex *rw_mutex, const char *name,
+		struct lock_class_key *key)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#207: FILE: kernel/rwmutex.c:55:
+	BUG_ON(rw_mutex->status);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#225: FILE: kernel/rwmutex.c:73:
+	if (unlikely(__rw_mutex_reader_slow(rw_mutex)) &&
+			percpu_counter_sum(&rw_mutex->readers) == 0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#256: FILE: kernel/rwmutex.c:104:
+	wait_event(rw_mutex->wait_queue,
+			(percpu_counter_sum(&rw_mutex->readers) == 0));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#277: FILE: kernel/rwmutex.c:125:
+		wait_event(rw_mutex->wait_queue,
+			(atomic_read(&rw_mutex->read_waiters) < waiters));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000432588.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 7 warnings, 10 checks, 244 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000432588.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
