CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#73: FILE: arch/s390/include/asm/lowcore.h:296:
+	__u8	     pad12[0x1000-0xe08];      /* 0xe08 */
 	    	                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#92: FILE: arch/s390/include/asm/lowcore.h:391:
+	__u8	     pad_0xe0c[0xe38-0xe0c];   /* 0xe0c */
 	    	                    ^

CHECK:SPACING: No space is necessary after a cast
#115: FILE: arch/s390/include/asm/system.h:463:
+	register unsigned long _addr asm("0") = (unsigned long) addr;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#119: FILE: arch/s390/include/asm/system.h:467:
+	asm volatile(

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cksm', this function's name, in a string
#121: FILE: arch/s390/include/asm/system.h:469:
+		"	cksm	%0,%1\n"

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:SPACING: No space is necessary after a cast
#202: FILE: arch/s390/kernel/ipl.c:1354:
+		:: "a" ((unsigned long) reipl_block_actual),

CHECK:SPACING: No space is necessary after a cast
#206: FILE: arch/s390/kernel/ipl.c:1358:
+		:: "a" ((unsigned long) reipl_block_actual),

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#327: FILE: drivers/s390/char/zcore.c:54:
+}  __attribute__((packed));

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#344: FILE: drivers/s390/char/zcore.c:537:
+static ssize_t zcore_reipl_write(struct file *filp, const char __user *buf,
                                               ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#354: FILE: drivers/s390/char/zcore.c:547:
+static int zcore_reipl_open(struct inode *inode, struct file *filp)
                                                               ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#359: FILE: drivers/s390/char/zcore.c:552:
+static int zcore_reipl_release(struct inode *inode, struct file *filp)
                                                                  ^^^^

WARNING:TYPO_SPELLING: 'HSA' may be misspelled - perhaps 'HAS'?
#379: FILE: drivers/s390/char/zcore.c:683:
+ * Provide IPL parameter information block from either HSA or memory
                                                        ^^^

CHECK:SPACING: No space is necessary after a cast
#392: FILE: drivers/s390/char/zcore.c:696:
+	ipl_block = (void *) __get_free_page(GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#400: FILE: drivers/s390/char/zcore.c:704:
+		free_page((unsigned long) ipl_block);

CHECK:SPACING: No space is necessary after a cast
#405: FILE: drivers/s390/char/zcore.c:709:
+		free_page((unsigned long) ipl_block);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#429: FILE: drivers/s390/char/zcore.c:781:
+	zcore_reipl_file = debugfs_create_file("reipl", S_IRUSR, zcore_dir,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#430: FILE: drivers/s390/char/zcore.c:782:
+	zcore_reipl_file = debugfs_create_file("reipl", S_IRUSR, zcore_dir,
+						NULL, &zcore_reipl_fops);

CHECK:SPACING: No space is necessary after a cast
#447: FILE: drivers/s390/char/zcore.c:805:
+	free_page((unsigned long) ipl_block);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000162536.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 11 checks, 367 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000162536.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
