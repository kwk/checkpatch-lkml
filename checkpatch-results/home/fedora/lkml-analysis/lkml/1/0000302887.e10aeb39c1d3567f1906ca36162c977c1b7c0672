WARNING:EMAIL_SUBJECT: A patch subject line should describe the change not the tool that found it
#17: 
Subject: [Patch 5/5] run drivers/misc/xp through scripts/checkpatch.pl -v3

Naming the tool that found the issue is not very useful in the
subject line.  A good subject line summarizes the change that
the patch brings.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
braces. Eliminated uses of volatiles and use of kernel_thread() and daemonize().

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!xpnet_device"
#89: FILE: drivers/misc/xp/xpnet.c:584:
+	if (xpnet_device == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!base"
#124: FILE: drivers/misc/xp/xpc_partition.c:67:
+	if (*base == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!base"
#138: FILE: drivers/misc/xp/xpc_partition.c:77:
+	if (*base == NULL)

CHECK:CAMELCASE: Avoid CamelCase: <xpNeedMoreInfo>
#150: FILE: drivers/misc/xp/xpc_partition.c:106:
+		if (ret != xpNeedMoreInfo)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <xpSuccess>
#161: FILE: drivers/misc/xp/xpc_partition.c:132:
+	if (ret != xpSuccess)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!amos_page"
#174: FILE: drivers/misc/xp/xpc_partition.c:198:
+	if (amos_page == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!remote_rp"
#305: FILE: drivers/misc/xp/xpc_partition.c:904:
+	if (remote_rp == NULL)

WARNING:SPLIT_STRING: quoted string split across lines
#339: FILE: drivers/misc/xp/xpc_partition.c:1017:
 				dev_warn(xpc_part, "xpc_discovery() failed to "
+					 "register remote AMOs for partition %d"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#340: FILE: drivers/misc/xp/xpc_partition.c:1018:
+					 "register remote AMOs for partition %d"
+					 ", ret=%d\n", partid, ret);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!base"
#373: FILE: drivers/misc/xp/xpc_channel.c:38:
+	if (*base == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!base"
#387: FILE: drivers/misc/xp/xpc_channel.c:48:
+	if (*base == NULL)

CHECK:CAMELCASE: Avoid CamelCase: <xpNoMemory>
#411: FILE: drivers/misc/xp/xpc_channel.c:133:
+		retval = xpNoMemory;

CHECK:CAMELCASE: Avoid CamelCase: <xpLackOfResources>
#479: FILE: drivers/misc/xp/xpc_channel.c:189:
+		retval = xpLackOfResources;

CHECK:CAMELCASE: Avoid CamelCase: <remote_GPs_base>
#497: FILE: drivers/misc/xp/xpc_channel.c:234:
+	kfree(part->remote_GPs_base);

CHECK:CAMELCASE: Avoid CamelCase: <remote_GPs>
#498: FILE: drivers/misc/xp/xpc_channel.c:235:
+	part->remote_GPs = NULL;

CHECK:CAMELCASE: Avoid CamelCase: <local_GPs_base>
#500: FILE: drivers/misc/xp/xpc_channel.c:237:
+	kfree(part->local_GPs_base);

CHECK:CAMELCASE: Avoid CamelCase: <local_GPs>
#501: FILE: drivers/misc/xp/xpc_channel.c:238:
+	part->local_GPs = NULL;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ch->local_msgqueue"
#563: FILE: drivers/misc/xp/xpc_channel.c:442:
+		if (ch->local_msgqueue == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ch->remote_msgqueue"
#577: FILE: drivers/misc/xp/xpc_channel.c:488:
+		if (ch->remote_msgqueue == NULL)

CHECK:CAMELCASE: Avoid CamelCase: <xpUnknownReason>
#685: FILE: drivers/misc/xp/xpc_channel.c:870:
+			if (reason <= xpSuccess || reason > xpUnknownReason)

CHECK:CAMELCASE: Avoid CamelCase: <xpUnregistering>
#688: FILE: drivers/misc/xp/xpc_channel.c:872:
+			else if (reason == xpUnregistering)

CHECK:CAMELCASE: Avoid CamelCase: <xpTimeout>
#830: FILE: drivers/misc/xp/xpc_channel.c:1682:
+		if (ret == xpTimeout)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "msg"
#841: FILE: drivers/misc/xp/xpc_channel.c:1742:
+		if (msg != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "msg"
#959: FILE: drivers/misc/xp/xpc_channel.c:2093:
+	if (msg != NULL) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1320: FILE: drivers/misc/xp/xpc.h:957:
+	BUG_ON(!remote_amo && ret != xpSuccess);      /* should never happen */

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#1645: FILE: drivers/misc/xp/xpc_main.c:221:
+	if (jiffies >= xpc_hb_check_timeout)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1673: FILE: drivers/misc/xp/xpc_main.c:292:
 						xpc_hb_check_timeout
+						|| xpc_exiting));

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1716: FILE: drivers/misc/xp/xpc_main.c:385:
+			       (atomic_read(&part->channel_mgr_requests) > 0
+				|| part->local_IPI_amo != 0

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1717: FILE: drivers/misc/xp/xpc_main.c:386:
+				|| part->local_IPI_amo != 0
+				|| (part->act_state == XPC_P_AS_DEACTIVATING

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1718: FILE: drivers/misc/xp/xpc_main.c:387:
+				|| (part->act_state == XPC_P_AS_DEACTIVATING
+				&& atomic_read(&part->nchannels_active) == 0

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1719: FILE: drivers/misc/xp/xpc_main.c:388:
+				&& atomic_read(&part->nchannels_active) == 0
+				&& xpc_partition_disengaged(part))));

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1841: FILE: drivers/misc/xp/xpc_main.c:640:
+				(ch->w_local_GP.get < ch->w_remote_GP.put
+				 || (ch->flags & XPC_C_DISCONNECTING)));

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'part->remote_vars_version'
#1948: FILE: drivers/misc/xp/xpc_main.c:1031:
+		if (!XPC_SUPPORTS_DISENGAGE_REQUEST(part->
+		    remote_vars_version)) {

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000302887.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 28 checks, 1903 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000302887.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
