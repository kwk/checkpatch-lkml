WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#50: FILE: fs/qnx4/bitmap.c:70:
+			printk(KERN_ERR "qnx4: I/O error in counting free blocks\n");

CHECK:SPACING: No space is necessary after a cast
#64: FILE: fs/qnx4/dir.c:29:
+	QNX4DEBUG((KERN_INFO "qnx4_readdir:i_size = %ld\n", (long) inode->i_size));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'qnx4_readdir', this function's name, in a string
#64: FILE: fs/qnx4/dir.c:29:
+	QNX4DEBUG((KERN_INFO "qnx4_readdir:i_size = %ld\n", (long) inode->i_size));

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:SPACING: No space is necessary after a cast
#65: FILE: fs/qnx4/dir.c:30:
+	QNX4DEBUG((KERN_INFO "filp->f_pos         = %ld\n", (long) filp->f_pos));

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#74: FILE: fs/qnx4/dir.c:53:
+					QNX4DEBUG((KERN_INFO "qnx4_readdir:%.*s\n", size, de->di_fname));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'qnx4_readdir', this function's name, in a string
#74: FILE: fs/qnx4/dir.c:53:
+					QNX4DEBUG((KERN_INFO "qnx4_readdir:%.*s\n", size, de->di_fname));

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#87: FILE: fs/qnx4/inode.c:110:
+	QNX4DEBUG((KERN_INFO "qnx4: qnx4_get_block inode=[%ld] iblock=[%ld]\n",inode->i_ino,iblock));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#87: FILE: fs/qnx4/inode.c:110:
+	QNX4DEBUG((KERN_INFO "qnx4: qnx4_get_block inode=[%ld] iblock=[%ld]\n",inode->i_ino,iblock));
 	                                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#87: FILE: fs/qnx4/inode.c:110:
+	QNX4DEBUG((KERN_INFO "qnx4: qnx4_get_block inode=[%ld] iblock=[%ld]\n",inode->i_ino,iblock));
 	                                                                                   ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'qnx4_get_block', this function's name, in a string
#87: FILE: fs/qnx4/inode.c:110:
+	QNX4DEBUG((KERN_INFO "qnx4: qnx4_get_block inode=[%ld] iblock=[%ld]\n",inode->i_ino,iblock));

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#96: FILE: fs/qnx4/inode.c:145:
+					QNX4DEBUG((KERN_ERR "qnx4: I/O error reading xtnt block [%ld])\n", i_xblk - 1));

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#102: FILE: fs/qnx4/inode.c:150:
+					QNX4DEBUG((KERN_ERR "qnx4: block at %ld is not a valid xtnt\n", qnx4_inode->i_xblk));

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#111: FILE: fs/qnx4/inode.c:171:
+	QNX4DEBUG((KERN_INFO "qnx4: mapping block %ld of inode %ld = %ld\n",iblock,inode->i_ino,block));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#111: FILE: fs/qnx4/inode.c:171:
+	QNX4DEBUG((KERN_INFO "qnx4: mapping block %ld of inode %ld = %ld\n",iblock,inode->i_ino,block));
 	                                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#111: FILE: fs/qnx4/inode.c:171:
+	QNX4DEBUG((KERN_INFO "qnx4: mapping block %ld of inode %ld = %ld\n",iblock,inode->i_ino,block));
 	                                                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#111: FILE: fs/qnx4/inode.c:171:
+	QNX4DEBUG((KERN_INFO "qnx4: mapping block %ld of inode %ld = %ld\n",iblock,inode->i_ino,block));
 	                                                                                       ^

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#129: FILE: fs/qnx4/inode.c:223:
+					QNX4DEBUG((KERN_INFO "rootdir entry found : [%s]\n", rootdir->di_fname));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#138: FILE: fs/qnx4/inode.c:268:
+		printk(KERN_ERR "qnx4: unable to read the superblock\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#144: FILE: fs/qnx4/inode.c:273:
+			printk(KERN_ERR "qnx4: wrong fsid in superblock.\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: fs/qnx4/inode.c:287:
+ ^I^I^Iprintk(KERN_ERR "qnx4: %s\n", errmsg);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#153: FILE: fs/qnx4/inode.c:287:
+ ^I^I^Iprintk(KERN_ERR "qnx4: %s\n", errmsg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: fs/qnx4/inode.c:287:
+ ^I^I^Iprintk(KERN_ERR "qnx4: %s\n", errmsg);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#153: FILE: fs/qnx4/inode.c:287:
+ 			printk(KERN_ERR "qnx4: %s\n", errmsg);

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: fs/qnx4/inode.c:294:
+ ^I^Iprintk(KERN_ERR "qnx4: get inode failed\n");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#161: FILE: fs/qnx4/inode.c:294:
+ ^I^Iprintk(KERN_ERR "qnx4: get inode failed\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: fs/qnx4/inode.c:294:
+ ^I^Iprintk(KERN_ERR "qnx4: get inode failed\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#161: FILE: fs/qnx4/inode.c:294:
+ 		printk(KERN_ERR "qnx4: get inode failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#179: FILE: fs/qnx4/inode.c:388:
+		printk(KERN_ERR "qnx4: major problem: unable to read inode from dev "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#188: FILE: fs/qnx4/inode.c:502:
+	printk(KERN_INFO "QNX4 filesystem 0.2.3 registered.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#201: FILE: fs/qnx4/namei.c:33:
+		printk(KERN_WARNING "qnx4: matching unassigned buffer !\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#210: FILE: fs/qnx4/namei.c:69:
+		printk(KERN_WARNING "qnx4: no superblock on dir.\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000067193.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 22 warnings, 2 checks, 150 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000067193.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
