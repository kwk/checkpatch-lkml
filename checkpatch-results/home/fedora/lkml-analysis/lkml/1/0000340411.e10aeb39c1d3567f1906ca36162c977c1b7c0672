WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#59: FILE: fs/udf/balloc.c:470:
+	epos.block = oepos.block = UDF_I(table)->i_location;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:CAMELCASE: Avoid CamelCase: <i_lenAlloc>
#93: FILE: fs/udf/balloc.c:604:
+					UDF_I(table)->i_lenAlloc += adsize;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <i_lenEAttr>
#207: FILE: fs/udf/file.c:53:
+	memcpy(kaddr, UDF_I(inode)->i_ext.i_data + UDF_I(inode)->i_lenEAttr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#208: FILE: fs/udf/file.c:54:
+	memcpy(kaddr, UDF_I(inode)->i_ext.i_data + UDF_I(inode)->i_lenEAttr,
+								inode->i_size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#218: FILE: fs/udf/file.c:73:
+	memcpy(UDF_I(inode)->i_ext.i_data + UDF_I(inode)->i_lenEAttr, kaddr,
+								inode->i_size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#228: FILE: fs/udf/file.c:93:
+	memcpy(UDF_I(inode)->i_ext.i_data + UDF_I(inode)->i_lenEAttr + offset,
 		kaddr + offset, copied);

CHECK:CAMELCASE: Avoid CamelCase: <logicalBlockNum>
#294: FILE: fs/udf/ialloc.c:69:
+	uint32_t start = UDF_I(dir)->i_location.logicalBlockNum;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#294: FILE: fs/udf/ialloc.c:69:
+	uint32_t start = UDF_I(dir)->i_location.logicalBlockNum;

CHECK:CAMELCASE: Avoid CamelCase: <i_lenExtents>
#308: FILE: fs/udf/ialloc.c:80:
+	UDF_I(inode)->i_lenExtents = 0;

CHECK:CAMELCASE: Avoid CamelCase: <partitionReferenceNum>
#315: FILE: fs/udf/ialloc.c:86:
+			      UDF_I(dir)->i_location.partitionReferenceNum,

CHECK:CAMELCASE: Avoid CamelCase: <uniqueID>
#324: FILE: fs/udf/ialloc.c:110:
+		UDF_I(inode)->i_unique = uniqueID = le64_to_cpu(lvhd->uniqueID);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#506: FILE: fs/udf/inode.c:283:
+	memset(UDF_I(inode)->i_ext.i_data + UDF_I(inode)->i_lenEAttr, 0,
+		UDF_I(inode)->i_lenAlloc);

CHECK:BRACES: braces {} should be used on all arms of this statement
#649: FILE: fs/udf/inode.c:1043:
+			if (UDF_I(inode)->i_alloc_type ==
[...]
 			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#684: FILE: fs/udf/inode.c:1114:
+		ibh = udf_read_ptagged(inode->i_sb, UDF_I(inode)->i_location, 1,
 					&ident);

CHECK:CAMELCASE: Avoid CamelCase: <icbTag>
#707: FILE: fs/udf/inode.c:1175:
+	UDF_I(inode)->i_alloc_type = le16_to_cpu(fe->icbTag.flags) &

CHECK:CAMELCASE: Avoid CamelCase: <fileEntry>
#748: FILE: fs/udf/inode.c:1204:
+		       bh->b_data + sizeof(struct fileEntry),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#756: FILE: fs/udf/inode.c:1209:
+		UDF_I(inode)->i_lenAlloc = le32_to_cpu(

CHECK:CAMELCASE: Avoid CamelCase: <lengthExtendedAttr>
#793: FILE: fs/udf/inode.c:1275:
+		UDF_I(inode)->i_lenEAttr = le32_to_cpu(fe->lengthExtendedAttr);

CHECK:CAMELCASE: Avoid CamelCase: <lengthAllocDescs>
#794: FILE: fs/udf/inode.c:1276:
+		UDF_I(inode)->i_lenAlloc = le32_to_cpu(fe->lengthAllocDescs);

CHECK:CAMELCASE: Avoid CamelCase: <extLocation>
#1419: FILE: fs/udf/namei.c:637:
+	cfi.icb.extLocation = cpu_to_lelb(UDF_I(inode)->i_location);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000340411.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 1 warnings, 20 checks, 1598 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000340411.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
