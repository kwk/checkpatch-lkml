WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#74: FILE: drivers/s390/char/sclp_chp.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#75: FILE: drivers/s390/char/sclp_chp.c:2:
+ *  drivers/s390/char/sclp_chp.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#118: FILE: drivers/s390/char/sclp_chp.c:45:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#124: FILE: drivers/s390/char/sclp_chp.c:51:
+} __attribute__((packed));

CHECK:SPACING: No space is necessary after a cast
#132: FILE: drivers/s390/char/sclp_chp.c:59:
+	data = (struct chp_cfg_data *) get_zeroed_page(GFP_KERNEL | GFP_DMA);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around data->sccb
#137: FILE: drivers/s390/char/sclp_chp.c:64:
+	data->req.sccb = &(data->sccb);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around data->completion
#140: FILE: drivers/s390/char/sclp_chp.c:67:
+	data->req.callback_data = &(data->completion);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around data->req
#144: FILE: drivers/s390/char/sclp_chp.c:71:
+	rc = sclp_add_request(&(data->req));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#151: FILE: drivers/s390/char/sclp_chp.c:78:
+		printk(KERN_WARNING TAG "configure channel-path request failed "

WARNING:SPLIT_STRING: quoted string split across lines
#152: FILE: drivers/s390/char/sclp_chp.c:79:
+		printk(KERN_WARNING TAG "configure channel-path request failed "
+		       "(status=0x%02x)\n", data->req.status);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#163: FILE: drivers/s390/char/sclp_chp.c:90:
+		printk(KERN_WARNING TAG "configure channel-path failed "

WARNING:SPLIT_STRING: quoted string split across lines
#164: FILE: drivers/s390/char/sclp_chp.c:91:
+		printk(KERN_WARNING TAG "configure channel-path failed "
+		       "(cmd=0x%08x, response=0x%04x)\n", cmd,

CHECK:SPACING: No space is necessary after a cast
#170: FILE: drivers/s390/char/sclp_chp.c:97:
+	free_page((unsigned long) data);

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#207: FILE: drivers/s390/char/sclp_chp.c:134:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#213: FILE: drivers/s390/char/sclp_chp.c:140:
+} __attribute__((packed));

CHECK:SPACING: No space is necessary after a cast
#229: FILE: drivers/s390/char/sclp_chp.c:156:
+	data = (struct chp_info_data *) get_zeroed_page(GFP_KERNEL | GFP_DMA);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around data->sccb
#234: FILE: drivers/s390/char/sclp_chp.c:161:
+	data->req.sccb = &(data->sccb);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around data->completion
#237: FILE: drivers/s390/char/sclp_chp.c:164:
+	data->req.callback_data = &(data->completion);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around data->req
#241: FILE: drivers/s390/char/sclp_chp.c:168:
+	rc = sclp_add_request(&(data->req));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#248: FILE: drivers/s390/char/sclp_chp.c:175:
+		printk(KERN_WARNING TAG "read channel-path info request failed "

WARNING:SPLIT_STRING: quoted string split across lines
#249: FILE: drivers/s390/char/sclp_chp.c:176:
+		printk(KERN_WARNING TAG "read channel-path info request failed "
+		       "(status=0x%02x)\n", data->req.status);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#254: FILE: drivers/s390/char/sclp_chp.c:181:
+		printk(KERN_WARNING TAG "read channel-path info failed "

WARNING:SPLIT_STRING: quoted string split across lines
#255: FILE: drivers/s390/char/sclp_chp.c:182:
+		printk(KERN_WARNING TAG "read channel-path info failed "
+		       "(response=0x%04x)\n", data->sccb.header.response_code);

CHECK:SPACING: No space is necessary after a cast
#266: FILE: drivers/s390/char/sclp_chp.c:193:
+	free_page((unsigned long) data);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#294: FILE: drivers/s390/cio/chp.c:28:
+#define CHP_INFO_UPDATE_INTERVAL	1*HZ
                                 	 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#294: FILE: drivers/s390/cio/chp.c:28:
+#define CHP_INFO_UPDATE_INTERVAL	1*HZ

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'chp_configure_show' to 'configure_show' 'chp_configure_write' to 'configure_store'
#360: FILE: drivers/s390/cio/chp.c:318:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SPACING: space prohibited before semicolon
#412: FILE: drivers/s390/cio/chp.c:529:
+		chp_info_expires = jiffies + CHP_INFO_UPDATE_INTERVAL ;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#463: FILE: drivers/s390/cio/chp.c:580:
+ * last request. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#590: FILE: drivers/s390/cio/chp.h:29:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#696: FILE: drivers/s390/cio/chsc.c:516:
+	data = (struct chp_config_data *) &(sei_area->ccdf);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around sei_area->ccdf
#696: FILE: drivers/s390/cio/chsc.c:516:
+	data = (struct chp_config_data *) &(sei_area->ccdf);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#702: FILE: drivers/s390/cio/chsc.c:522:
+		printk(KERN_WARNING "cio: processing configure event %d for "

WARNING:SPLIT_STRING: quoted string split across lines
#703: FILE: drivers/s390/cio/chsc.c:523:
+		printk(KERN_WARNING "cio: processing configure event %d for "
+		       "chpid %x.%02x\n", data->op, chpid.cssid, chpid.id);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#852: FILE: include/asm-s390/chpid.h:1:
+/*

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#873: FILE: include/asm-s390/chpid.h:22:
+} __attribute__((packed));

CHECK:BRACES: braces {} should be used on all arms of this statement
#887: FILE: include/asm-s390/chpid.h:36:
+	if (chpid->id < __MAX_CHPID)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#889: FILE: include/asm-s390/chpid.h:38:
+	else {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#900: FILE: include/asm-s390/chpid.h:49:
+
+

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'c' - possible side-effects?
#901: FILE: include/asm-s390/chpid.h:50:
+#define chp_id_for_each(c) \
+	for (chp_id_init(c); chp_id_is_valid(c); chp_id_next(c))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#943: FILE: include/asm-s390/sclp.h:47:
+extern int sclp_chp_configure(struct chp_id chpid);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#944: FILE: include/asm-s390/sclp.h:48:
+extern int sclp_chp_deconfigure(struct chp_id chpid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#945: FILE: include/asm-s390/sclp.h:49:
+extern int sclp_chp_read_info(struct sclp_chp_info *info);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000451907.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 21 warnings, 21 checks, 750 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000451907.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
