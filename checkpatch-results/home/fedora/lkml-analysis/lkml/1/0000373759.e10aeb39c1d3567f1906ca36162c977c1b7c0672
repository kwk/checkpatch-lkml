WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#68: 
      binfmt_flat: checkpatch fixing minimum support for the blackfin relocations

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#99: FILE: arch/blackfin/kernel/bfin_gpio.c:121:
+char *str_ident = NULL;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#111: FILE: arch/blackfin/kernel/bfin_gpio.c:153:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: arch/blackfin/kernel/bfin_gpio.c:156:
+		strncpy(str_ident + ident * RESOURCE_LABEL_SIZE, label,
+			 RESOURCE_LABEL_SIZE);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#150: FILE: arch/blackfin/kernel/bfin_gpio.c:184:
+		if (usage == GPIO_USAGE) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#152: FILE: arch/blackfin/kernel/bfin_gpio.c:186:
+		} else

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#190: FILE: arch/blackfin/kernel/bfin_gpio.c:224:
+		if (port_mux_lut[y][PMUX_LUT_RES] == per) {
+

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#196: FILE: arch/blackfin/kernel/bfin_gpio.c:230:
+			if (offset != 1) {
[...]
+			} else {
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#235: FILE: arch/blackfin/kernel/bfin_gpio.c:270:
+	printk(KERN_INFO "Blackfin GPIO Controller\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#247: FILE: arch/blackfin/kernel/bfin_gpio.c:302:
+	BUG_ON(!(reserved_gpio_map[gpio_bank(gpio)] & gpio_bit(gpio))); \

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#256: FILE: arch/blackfin/kernel/bfin_gpio.c:322:
+	BUG_ON(!(reserved_gpio_map[gpio_bank(gpio)] & gpio_bit(gpio))); \

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#265: FILE: arch/blackfin/kernel/bfin_gpio.c:337:
+	BUG_ON(!(reserved_gpio_map[gpio_bank(gpio)] & gpio_bit(gpio)));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#274: FILE: arch/blackfin/kernel/bfin_gpio.c:356:
+	BUG_ON(!(reserved_gpio_map[gpio_bank(gpio)] & gpio_bit(gpio)));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#283: FILE: arch/blackfin/kernel/bfin_gpio.c:365:
+	BUG_ON(!(reserved_gpio_map[gpio_bank(gpio)] & gpio_bit(gpio)));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#292: FILE: arch/blackfin/kernel/bfin_gpio.c:429:
+	BUG_ON(!(reserved_gpio_map[gpio_bank(gpio)] & gpio_bit(gpio)));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#327: FILE: arch/blackfin/kernel/bfin_gpio.c:631:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#329: FILE: arch/blackfin/kernel/bfin_gpio.c:633:
+
+

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#347: FILE: arch/blackfin/kernel/bfin_gpio.c:651:
+	if (!check_gpio(ident)) {
[...]
+	if (unlikely(reserved_gpio_map[gpio_bank(ident)] & gpio_bit(ident))) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#348: FILE: arch/blackfin/kernel/bfin_gpio.c:652:
+	if (!check_gpio(ident)) {
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#350: FILE: arch/blackfin/kernel/bfin_gpio.c:654:
+		printk(KERN_ERR

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#352: FILE: arch/blackfin/kernel/bfin_gpio.c:656:
+		       __FUNCTION__, ident, get_label(ident));

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#358: FILE: arch/blackfin/kernel/bfin_gpio.c:662:
+
+	}

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#360: FILE: arch/blackfin/kernel/bfin_gpio.c:664:
+	if (unlikely(reserved_peri_map[gpio_bank(ident)] & gpio_bit(ident))) {
[...]
+	if (!(per & P_MAYSHARE)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#361: FILE: arch/blackfin/kernel/bfin_gpio.c:665:
+	if (unlikely(reserved_peri_map[gpio_bank(ident)] & gpio_bit(ident))) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#368: FILE: arch/blackfin/kernel/bfin_gpio.c:672:
+	if (!(per & P_MAYSHARE)) {
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#377: FILE: arch/blackfin/kernel/bfin_gpio.c:681:
+			printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#379: FILE: arch/blackfin/kernel/bfin_gpio.c:683:
+			       "%s: Peripheral %d function %d is already"
+			       "reserved by %s !\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:MISSING_SPACE: break quoted strings at a space character
#379: FILE: arch/blackfin/kernel/bfin_gpio.c:683:
+			       "%s: Peripheral %d function %d is already"
+			       "reserved by %s !\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#380: FILE: arch/blackfin/kernel/bfin_gpio.c:684:
+			       __FUNCTION__, ident, P_FUNCT2MUX(per),

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#387: FILE: arch/blackfin/kernel/bfin_gpio.c:691:
+
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#391: FILE: arch/blackfin/kernel/bfin_gpio.c:695:
+
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#441: FILE: arch/blackfin/kernel/bfin_gpio.c:745:
+	if (!(per & P_MAYSHARE)) {
+		port_setup(ident, GPIO_USAGE);
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#455: FILE: arch/blackfin/kernel/bfin_gpio.c:759:
+	for (cnt = 0; per[cnt] != 0; cnt++) {
+		peripheral_free(per[cnt]);
+	}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#459: FILE: arch/blackfin/kernel/bfin_gpio.c:763:
+
+}

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#504: FILE: arch/blackfin/kernel/bfin_gpio.c:834:
+	BUG_ON(!(reserved_gpio_map[gpio_bank(gpio)] & gpio_bit(gpio)));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#513: FILE: arch/blackfin/kernel/bfin_gpio.c:847:
+	BUG_ON(!(reserved_gpio_map[gpio_bank(gpio)] & gpio_bit(gpio)));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#593: FILE: fs/binfmt_flat.c:753:
+			if (flat_set_persistent (relval, &persistent))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#604: FILE: fs/binfmt_flat.c:764:
+			addr = flat_get_addr_from_rp(rp, relval, flags,
+							&persistent);

CHECK:CAMELCASE: Avoid CamelCase: <P_MII0_ETxD0>
#706: FILE: include/asm-blackfin/mach-bf537/portmux.h:110:
+	P_MII0_ETxD0, \

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <P_MII0_ETxD1>
#707: FILE: include/asm-blackfin/mach-bf537/portmux.h:111:
+	P_MII0_ETxD1, \

CHECK:CAMELCASE: Avoid CamelCase: <P_MII0_ETxD2>
#708: FILE: include/asm-blackfin/mach-bf537/portmux.h:112:
+	P_MII0_ETxD2, \

CHECK:CAMELCASE: Avoid CamelCase: <P_MII0_ETxD3>
#709: FILE: include/asm-blackfin/mach-bf537/portmux.h:113:
+	P_MII0_ETxD3, \

CHECK:CAMELCASE: Avoid CamelCase: <P_MII0_ETxEN>
#710: FILE: include/asm-blackfin/mach-bf537/portmux.h:114:
+	P_MII0_ETxEN, \

CHECK:CAMELCASE: Avoid CamelCase: <P_MII0_TxCLK>
#711: FILE: include/asm-blackfin/mach-bf537/portmux.h:115:
+	P_MII0_TxCLK, \

CHECK:CAMELCASE: Avoid CamelCase: <P_MII0_ERxD0>
#714: FILE: include/asm-blackfin/mach-bf537/portmux.h:118:
+	P_MII0_ERxD0, \

CHECK:CAMELCASE: Avoid CamelCase: <P_MII0_ERxD1>
#715: FILE: include/asm-blackfin/mach-bf537/portmux.h:119:
+	P_MII0_ERxD1, \

CHECK:CAMELCASE: Avoid CamelCase: <P_MII0_ERxD2>
#716: FILE: include/asm-blackfin/mach-bf537/portmux.h:120:
+	P_MII0_ERxD2, \

CHECK:CAMELCASE: Avoid CamelCase: <P_MII0_ERxD3>
#717: FILE: include/asm-blackfin/mach-bf537/portmux.h:121:
+	P_MII0_ERxD3, \

CHECK:CAMELCASE: Avoid CamelCase: <P_MII0_ERxDV>
#718: FILE: include/asm-blackfin/mach-bf537/portmux.h:122:
+	P_MII0_ERxDV, \

CHECK:CAMELCASE: Avoid CamelCase: <P_MII0_ERxCLK>
#719: FILE: include/asm-blackfin/mach-bf537/portmux.h:123:
+	P_MII0_ERxCLK, \

CHECK:CAMELCASE: Avoid CamelCase: <P_MII0_ERxER>
#720: FILE: include/asm-blackfin/mach-bf537/portmux.h:124:
+	P_MII0_ERxER, \

CHECK:LINE_SPACING: Please don't use multiple blank lines
#725: FILE: include/asm-blackfin/mach-bf537/portmux.h:129:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#738: FILE: include/asm-blackfin/mach-bf537/portmux.h:142:
+#endif^I^I^I        ^I/* _MACH_PORTMUX_H_ */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#785: FILE: include/asm-blackfin/portmux.h:17:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#844: FILE: include/asm-blackfin/portmux.h:782:
 
+

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'flags' may be better as '(flags)' to avoid precedence issues
#983: FILE: include/asm-h8300/flat.h:22:
+#define flat_get_addr_from_rp(rp, relval, flags, persistent) \
         (get_unaligned(rp) & ((flags & FLAT_FLAG_GOTPIC) ? 0xffffffff: 0x00ffffff))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000373759.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 24 warnings, 31 checks, 871 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000373759.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
