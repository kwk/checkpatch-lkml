WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
* Remove trailing or otherwise broken whitespace as per let c_space_errors=1

WARNING:TYPO_SPELLING: 'subsquently' may be misspelled - perhaps 'subsequently'?
#78: FILE: drivers/char/epca.c:10:
+	copyright (C) 1994, 1995 Troy De Jongh, and subsquently
 	                                            ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#92: FILE: drivers/char/epca.c:24:
+^Ialong with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#93: FILE: drivers/char/epca.c:25:
+^IFoundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:TYPO_SPELLING: 'Mantaining' may be misspelled - perhaps 'Maintaining'?
#222: FILE: drivers/char/epca.c:196:
+ * Table of functions for each board to handle memory. Mantaining parallelism
                                                        ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#432: FILE: drivers/char/epca.c:420:
+static void pc_close(struct tty_struct *tty, struct file *filp)
                                                           ^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#445: FILE: drivers/char/epca.c:428:
+	if ((ch = verifyChannel(tty)) != NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:CAMELCASE: Avoid CamelCase: <verifyChannel>
#445: FILE: drivers/char/epca.c:428:
+	if ((ch = verifyChannel(tty)) != NULL) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:TYPO_SPELLING: 'officialy' may be misspelled - perhaps 'officially'?
#564: FILE: drivers/char/epca.c:516:
+	 * The channel has officialy been closed. The next time it is opened it
 	                   ^^^^^^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#592: FILE: drivers/char/epca.c:532:
+	if ((ch = verifyChannel(tty)) != NULL) {

CHECK:CAMELCASE: Avoid CamelCase: <bytesAvailable>
#705: FILE: drivers/char/epca.c:616:
+	while (bytesAvailable > 0) {

CHECK:CAMELCASE: Avoid CamelCase: <amountCopied>
#733: FILE: drivers/char/epca.c:645:
+	return amountCopied;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#986: FILE: drivers/char/epca.c:851:
+		if (!(ch->asyncflags & ASYNC_CLOSING) &&
 			  (do_clocal || (ch->imodem & ch->dcd)))

WARNING:TYPO_SPELLING: 'an user' may be misspelled - perhaps 'a user'?
#1040: FILE: drivers/char/epca.c:901:
+	 * I check to see if the epca_setup routine detected an user error. It
 	                                                     ^^^^^^^

WARNING:TYPO_SPELLING: 'choosen' may be misspelled - perhaps 'chosen'?
#1247: FILE: drivers/char/epca.c:1093:
+	 * epcaconfig option was choosen (digiepca=2) then nbdevs and num_cards
 	                         ^^^^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1493: FILE: drivers/char/epca.c:1237:
+			if ((board_id & 0x1) == 0x1) {
[...]
+			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1510: FILE: drivers/char/epca.c:1254:
+			} else

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#1511: FILE: drivers/char/epca.c:1255:
+				printk(KERN_ERR "epca: Board at 0x%x doesn't appear to be an XI\n",(int)bd->port);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1511: FILE: drivers/char/epca.c:1255:
+				printk(KERN_ERR "epca: Board at 0x%x doesn't appear to be an XI\n",(int)bd->port);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1511: FILE: drivers/char/epca.c:1255:
+				printk(KERN_ERR "epca: Board at 0x%x doesn't appear to be an XI\n",(int)bd->port);
 				                                                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'Unfortunetly' may be misspelled - perhaps 'Unfortunately'?
#1577: FILE: drivers/char/epca.c:1307:
+	 * of ports from it. Unfortunetly, this means that anyone doing a
 	                     ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'BEGINING' may be misspelled - perhaps 'BEGINNING'?
#1624: FILE: drivers/char/epca.c:1348:
+	 * The below assignment will set bc to point at the BEGINING of the
 	                                                    ^^^^^^^^

WARNING:TYPO_SPELLING: 'BEGINING' may be misspelled - perhaps 'BEGINNING'?
#1638: FILE: drivers/char/epca.c:1355:
+	 * The below assignment will set gd to point at the BEGINING of global
 	                                                    ^^^^^^^^

CHECK:SPACING: spaces preferred around that '>>' (ctx:WxV)
#1830: FILE: drivers/char/epca.c:1467:
+			ch->rxwin = FEPWIN | ((rseg - bd->memory_seg) >>9 );
 			                                              ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1830: FILE: drivers/char/epca.c:1467:
+			ch->rxwin = FEPWIN | ((rseg - bd->memory_seg) >>9 );

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1837: FILE: drivers/char/epca.c:1474:
+			ch->txwin = ch->rxwin = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1893: FILE: drivers/char/epca.c:1520:
+	printk(KERN_INFO

ERROR:CODE_INDENT: code indent should use tabs where possible
#1894: FILE: drivers/char/epca.c:1521:
+^I        "Digi PC/Xx Driver V%s:  %s I/O = 0x%lx Mem = 0x%lx Ports = %d\n",$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LONG_LINE_COMMENT: line length of 138 exceeds 100 columns
#2010: FILE: drivers/char/epca.c:1596:
+	while ((tail = readw(&chan0->mailbox->eout)) != (head = readw(&chan0->mailbox->ein))) { /* Begin while something in event queue */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:TYPO_SPELLING: 'becuase' may be misspelled - perhaps 'because'?
#2025: FILE: drivers/char/epca.c:1606:
+		 * useful becuase an event could signal a change in modem
 		          ^^^^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2180: FILE: drivers/char/epca.c:1772:
+	unsigned res = iflag & (IGNBRK | BRKINT | IGNPAR | PARMRK |

CHECK:BRACES: braces {} should be used on all arms of this statement
#2197: FILE: drivers/char/epca.c:1782:
+	if (cflag & CBAUDEX) {
[...]
+		 * HUPCL bit is used by FEP to indicate fast baud table is to
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2216: FILE: drivers/char/epca.c:1789:
+	} else

WARNING:TYPO_SPELLING: 'controling' may be misspelled - perhaps 'controlling'?
#2247: FILE: drivers/char/epca.c:1800:
+	 * representation of c_cflags controling baud rate. For the most part
 	                              ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'automaticly' may be misspelled - perhaps 'automatically'?
#2503: FILE: drivers/char/epca.c:2003:
+		 * automaticly wrap around the receive buffer.
 		   ^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2536: FILE: drivers/char/epca.c:2025:
+static int info_ioctl(struct tty_struct *tty, struct file *file,
 		    unsigned int cmd, unsigned long arg)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2575: FILE: drivers/char/epca.c:2052:
 
+		}

WARNING:TYPO_SPELLING: 'initilization' may be misspelled - perhaps 'initialization'?
#2618: FILE: drivers/char/epca.c:2071:
+			 * initilization of the board(s). This routine is
 			   ^^^^^^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2624: FILE: drivers/char/epca.c:2077:
+			int crd;
+			for (crd = 0; crd < num_cards; crd++)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2723: FILE: drivers/char/epca.c:2191:
+		setup_empty_event(tty,ch);
 		                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2748: FILE: drivers/char/epca.c:2204:
+		setup_empty_event(tty,ch);
 		                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2751: FILE: drivers/char/epca.c:2207:
+		digi_send_break(ch, arg ? arg*(HZ/10) : HZ/4);
 		                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2751: FILE: drivers/char/epca.c:2207:
+		digi_send_break(ch, arg ? arg*(HZ/10) : HZ/4);
 		                                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2751: FILE: drivers/char/epca.c:2207:
+		digi_send_break(ch, arg ? arg*(HZ/10) : HZ/4);
 		                                          ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#2754: FILE: drivers/char/epca.c:2210:
+		if (put_user(C_CLOCAL(tty)?1:0, (unsigned long __user *)arg))
 		                          ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2754: FILE: drivers/char/epca.c:2210:
+		if (put_user(C_CLOCAL(tty)?1:0, (unsigned long __user *)arg))
 		                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2822: FILE: drivers/char/epca.c:2259:
+			setup_empty_event(tty,ch);
 			                     ^

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#2859: FILE: drivers/char/epca.c:2267:
+		/* Fall Thru */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2891: FILE: drivers/char/epca.c:2288:
+		epcaparam(tty,ch);
 		             ^

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#2929: FILE: drivers/char/epca.c:2324:
+		if (dflow.startc != startc || dflow.stopc != stopc) { /* Begin  if setflow toggled */

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2951: FILE: drivers/char/epca.c:2329:
+				ch->fepstartc = ch->startc = dflow.startc;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2952: FILE: drivers/char/epca.c:2330:
+				ch->fepstopc = ch->stopc = dflow.stopc;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2957: FILE: drivers/char/epca.c:2333:
+				ch->fepstartca = ch->startca = dflow.startc;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2958: FILE: drivers/char/epca.c:2334:
+				ch->fepstopca  = ch->stopca = dflow.stopc;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#3080: FILE: drivers/char/epca.c:2406:
+	if ((ch = verifyChannel(tty)) != NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#3111: FILE: drivers/char/epca.c:2426:
+	if ((ch = verifyChannel(tty)) != NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#3157: FILE: drivers/char/epca.c:2460:
+	if ((ch = verifyChannel(tty)) != NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#3186: FILE: drivers/char/epca.c:2480:
+	if ((ch = verifyChannel(tty)) != NULL) {

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#3369: FILE: drivers/char/epca.c:2555:
+			if (board.status == 2) { /* Begin ignore epcaconfig as well as lilo cmd line */

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#3376: FILE: drivers/char/epca.c:2562:
+				printk(KERN_ERR "epca_setup: Invalid board status 0x%x\n", board.status);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3376: FILE: drivers/char/epca.c:2562:
+				printk(KERN_ERR "epca_setup: Invalid board status 0x%x\n", board.status);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#3386: FILE: drivers/char/epca.c:2572:
+				printk(KERN_ERR "epca_setup: Invalid board type 0x%x\n", board.type);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3386: FILE: drivers/char/epca.c:2572:
+				printk(KERN_ERR "epca_setup: Invalid board type 0x%x\n", board.type);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#3396: FILE: drivers/char/epca.c:2582:
+				printk(KERN_ERR "epca_setup: Invalid board altpin 0x%x\n", board.altpin);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3396: FILE: drivers/char/epca.c:2582:
+				printk(KERN_ERR "epca_setup: Invalid board altpin 0x%x\n", board.altpin);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#3407: FILE: drivers/char/epca.c:2593:
+				printk(KERN_ERR "epca_setup: Invalid board numports 0x%x\n", board.numports);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3407: FILE: drivers/char/epca.c:2593:
+				printk(KERN_ERR "epca_setup: Invalid board numports 0x%x\n", board.numports);

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#3421: FILE: drivers/char/epca.c:2605:
+				printk(KERN_ERR "epca_setup: Invalid io port 0x%x\n", (unsigned int)board.port);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3421: FILE: drivers/char/epca.c:2605:
+				printk(KERN_ERR "epca_setup: Invalid io port 0x%x\n", (unsigned int)board.port);

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#3432: FILE: drivers/char/epca.c:2616:
+				printk(KERN_ERR "epca_setup: Invalid memory base 0x%x\n",(unsigned int)board.membase);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3432: FILE: drivers/char/epca.c:2616:
+				printk(KERN_ERR "epca_setup: Invalid memory base 0x%x\n",(unsigned int)board.membase);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3432: FILE: drivers/char/epca.c:2616:
+				printk(KERN_ERR "epca_setup: Invalid memory base 0x%x\n",(unsigned int)board.membase);
 				                                                        ^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#3441: FILE: drivers/char/epca.c:2625:
+			printk(KERN_ERR "<Error> - epca_setup: Too many integer parms\n");
 			                                                        ^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3441: FILE: drivers/char/epca.c:2625:
+			printk(KERN_ERR "<Error> - epca_setup: Too many integer parms\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#3515: FILE: drivers/char/epca.c:2646:
+			if (strncmp("Disable", str, len) == 0)
[...]
+			else if (strncmp("Enable", str, len) == 0)
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3519: FILE: drivers/char/epca.c:2650:
+			else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3520: FILE: drivers/char/epca.c:2651:
+				printk(KERN_ERR "epca_setup: Invalid status %s\n", str);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'epca_setup', this function's name, in a string
#3520: FILE: drivers/char/epca.c:2651:
+				printk(KERN_ERR "epca_setup: Invalid status %s\n", str);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:TYPO_SPELLING: 'legitamate' may be misspelled - perhaps 'legitimate'?
#3563: FILE: drivers/char/epca.c:2665:
+			 * legitamate board type set it here.
 			   ^^^^^^^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#3565: FILE: drivers/char/epca.c:2667:
+			if (index < EPCA_NUM_TYPES)
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3567: FILE: drivers/char/epca.c:2669:
+			else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3568: FILE: drivers/char/epca.c:2670:
+				printk(KERN_ERR "epca_setup: Invalid board type: %s\n", str);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'epca_setup', this function's name, in a string
#3568: FILE: drivers/char/epca.c:2670:
+				printk(KERN_ERR "epca_setup: Invalid board type: %s\n", str);

CHECK:BRACES: braces {} should be used on all arms of this statement
#3581: FILE: drivers/char/epca.c:2680:
+			if (strncmp("Disable", str, len) == 0)
[...]
+			else if (strncmp("Enable", str, len) == 0)
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3585: FILE: drivers/char/epca.c:2684:
+			else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3586: FILE: drivers/char/epca.c:2685:
+				printk(KERN_ERR "epca_setup: Invalid altpin %s\n", str);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'epca_setup', this function's name, in a string
#3586: FILE: drivers/char/epca.c:2685:
+				printk(KERN_ERR "epca_setup: Invalid altpin %s\n", str);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3615: FILE: drivers/char/epca.c:2699:
+				printk(KERN_ERR "epca_setup: Invalid port count %s\n", str);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'epca_setup', this function's name, in a string
#3615: FILE: drivers/char/epca.c:2699:
+				printk(KERN_ERR "epca_setup: Invalid port count %s\n", str);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#3636: FILE: drivers/char/epca.c:2720:
+			board.numports = simple_strtoul(str, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3647: FILE: drivers/char/epca.c:2731:
+				printk(KERN_ERR "epca_setup: Invalid i/o address %s\n", str);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'epca_setup', this function's name, in a string
#3647: FILE: drivers/char/epca.c:2731:
+				printk(KERN_ERR "epca_setup: Invalid i/o address %s\n", str);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#3653: FILE: drivers/char/epca.c:2737:
+			board.port = simple_strtoul(str, NULL, 16);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3663: FILE: drivers/char/epca.c:2747:
+				printk(KERN_ERR "epca_setup: Invalid memory base %s\n",str);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3663: FILE: drivers/char/epca.c:2747:
+				printk(KERN_ERR "epca_setup: Invalid memory base %s\n",str);
 				                                                      ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'epca_setup', this function's name, in a string
#3663: FILE: drivers/char/epca.c:2747:
+				printk(KERN_ERR "epca_setup: Invalid memory base %s\n",str);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#3668: FILE: drivers/char/epca.c:2752:
+			board.membase = simple_strtoul(str, NULL, 16);

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#3672: FILE: drivers/char/epca.c:2756:
+			printk(KERN_ERR "epca: Too many string parms\n");
 			                                       ^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3672: FILE: drivers/char/epca.c:2756:
+			printk(KERN_ERR "epca: Too many string parms\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3689: FILE: drivers/char/epca.c:2771:
+	printk(KERN_INFO "PC/Xx: Added board %i, %s %i ports at 0x%4.4X base 0x%6.6X\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3690: FILE: drivers/char/epca.c:2772:
+	printk(KERN_INFO "PC/Xx: Added board %i, %s %i ports at 0x%4.4X base 0x%6.6X\n",
+		num_cards, board_desc[board.type],

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#3714: FILE: drivers/char/epca.c:2795:
+static int __devinit epca_init_one(struct pci_dev *pdev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3715: FILE: drivers/char/epca.c:2796:
+static int __devinit epca_init_one(struct pci_dev *pdev,
 				 const struct pci_device_id *ent)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000399306.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 17 errors, 57 warnings, 29 checks, 3636 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000399306.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
