WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
* James Bottomley <James.Bottomley@SteelEye.com> [2007-10-30 13:25:43 -0500]:

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '5b5bc08ae31519b7012d7fc23ff73e0c6474de53', maybe rebased or not pulled?
#137: 
commit 5b5bc08ae31519b7012d7fc23ff73e0c6474de53

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#149: 
    Signed-off-by: Mark M. Hoffman <mhoffman@lightlink.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:POINTER_LOCATION: "foo * const * bar" should be "foo * const *bar"
#160: FILE: fs/sysfs/group.c:20:
+			 const struct attribute * const * attrs)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo *const* bar" should be "foo *const*bar"
#163: FILE: fs/sysfs/group.c:22:
+	const struct attribute *const* attr;

ERROR:POINTER_LOCATION: "foo * const * bar" should be "foo * const *bar"
#172: FILE: fs/sysfs/group.c:29:
+			const struct attribute * const * attrs)

ERROR:POINTER_LOCATION: "foo *const* bar" should be "foo *const*bar"
#175: FILE: fs/sysfs/group.c:31:
+	const struct attribute *const* attr;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#190: FILE: fs/sysfs/group.c:41:
+int sysfs_create_attr_group(struct kobject * kobj,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#191: FILE: fs/sysfs/group.c:42:
+int sysfs_create_attr_group(struct kobject * kobj,
+		const char *name, const struct attribute * const * attrs)

ERROR:POINTER_LOCATION: "foo * const * bar" should be "foo * const *bar"
#191: FILE: fs/sysfs/group.c:42:
+		const char *name, const struct attribute * const * attrs)

CHECK:BRACES: braces {} should be used on all arms of this statement
#200: FILE: fs/sysfs/group.c:49:
+	if (name) {
[...]
 	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#222: FILE: fs/sysfs/group.c:64:
+int sysfs_create_group (struct kobject * kobj,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#222: FILE: fs/sysfs/group.c:64:
+int sysfs_create_group (struct kobject * kobj,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#223: FILE: fs/sysfs/group.c:65:
+int sysfs_create_group (struct kobject * kobj,
+	const struct attribute_group *grp)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#229: FILE: fs/sysfs/group.c:71:
+void sysfs_remove_attr_group(struct kobject * kobj,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#230: FILE: fs/sysfs/group.c:72:
+void sysfs_remove_attr_group(struct kobject * kobj,
+		const char *name, const struct attribute * const * attrs)

ERROR:POINTER_LOCATION: "foo * const * bar" should be "foo * const *bar"
#230: FILE: fs/sysfs/group.c:72:
+		const char *name, const struct attribute * const * attrs)

CHECK:BRACES: braces {} should be used on all arms of this statement
#237: FILE: fs/sysfs/group.c:77:
+	if (name) {
[...]
 	} else
[...]

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#259: FILE: fs/sysfs/group.c:97:
+EXPORT_SYMBOL_GPL(sysfs_create_attr_group);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#260: FILE: fs/sysfs/group.c:98:
+EXPORT_SYMBOL_GPL(sysfs_remove_attr_group);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kobject *' should also have an identifier name
#271: FILE: include/linux/sysfs.h:104:
+int __must_check sysfs_create_attr_group(struct kobject *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#272: FILE: include/linux/sysfs.h:105:
+int __must_check sysfs_create_attr_group(struct kobject *,
+			const char * name, const struct attribute * const * attrs);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#272: FILE: include/linux/sysfs.h:105:
+			const char * name, const struct attribute * const * attrs);

ERROR:POINTER_LOCATION: "foo * const * bar" should be "foo * const *bar"
#272: FILE: include/linux/sysfs.h:105:
+			const char * name, const struct attribute * const * attrs);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kobject *' should also have an identifier name
#278: FILE: include/linux/sysfs.h:110:
+void sysfs_remove_attr_group(struct kobject *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#279: FILE: include/linux/sysfs.h:111:
+void sysfs_remove_attr_group(struct kobject *,
+			const char * name, const struct attribute * const * attrs);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#279: FILE: include/linux/sysfs.h:111:
+			const char * name, const struct attribute * const * attrs);

ERROR:POINTER_LOCATION: "foo * const * bar" should be "foo * const *bar"
#279: FILE: include/linux/sysfs.h:111:
+			const char * name, const struct attribute * const * attrs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#295: FILE: include/linux/sysfs.h:202:
+static inline int sysfs_create_attr_group(struct kobject *k,
+			const char * name, const struct attribute * const * attrs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#295: FILE: include/linux/sysfs.h:202:
+			const char * name, const struct attribute * const * attrs)

ERROR:POINTER_LOCATION: "foo * const * bar" should be "foo * const *bar"
#295: FILE: include/linux/sysfs.h:202:
+			const char * name, const struct attribute * const * attrs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#300: FILE: include/linux/sysfs.h:207:
+static inline void sysfs_remove_group(struct kobject * k, const struct attribute_group * g)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#300: FILE: include/linux/sysfs.h:207:
+static inline void sysfs_remove_group(struct kobject * k, const struct attribute_group * g)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#305: FILE: include/linux/sysfs.h:212:
+static inline void sysfs_remove_attr_group(struct kobject * k,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: include/linux/sysfs.h:213:
+static inline void sysfs_remove_attr_group(struct kobject * k,
+			const char * name, const struct attribute * const * attrs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#306: FILE: include/linux/sysfs.h:213:
+			const char * name, const struct attribute * const * attrs)

ERROR:POINTER_LOCATION: "foo * const * bar" should be "foo * const *bar"
#306: FILE: include/linux/sysfs.h:213:
+			const char * name, const struct attribute * const * attrs)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000362905.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 20 errors, 8 warnings, 9 checks, 148 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000362905.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
