WARNING:TYPO_SPELLING: 'implmentation' may be misspelled - perhaps 'implementation'?
#18: 
Subject: Re: [draft] Blackfin Early Printk implmentation
                                           ^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#50: 
Some was borrowed - but not much. since we don't support vga, or 16550 UARTs

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#117: FILE: arch/blackfin/Kconfig:1149:
Index: linux-2.6.x/arch/blackfin/mach-bf533/head.S

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#407: FILE: include/asm-blackfin/irq_handler.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#408: FILE: include/asm-blackfin/irq_handler.h:2:
+ * File:         include/asm-blackfin/irq_handler.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:TYPO_SPELLING: 'interupt' may be misspelled - perhaps 'interrupt'?
#469: 
+	/* Set all the return from interupt, exception, NMI to a known place
 	                           ^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#640: FILE: include/asm-blackfin/early_printk.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#641: FILE: include/asm-blackfin/early_printk.h:2:
+ * File:         include/asm-blackfin/early_printk.h

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#664: FILE: include/asm-blackfin/early_printk.h:25:
+extern int setup_early_printk(char *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#695: FILE: arch/blackfin/kernel/early_printk.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#696: FILE: arch/blackfin/kernel/early_printk.c:2:
+ * File:         arch/blackfin/kernel/early_printk.c

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#729: FILE: arch/blackfin/kernel/early_printk.c:35:
+extern struct console *bfin_earlyserial_init(unsigned int port,
+						unsigned int cflag);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#730: FILE: arch/blackfin/kernel/early_printk.c:36:
+extern int bfin_earlyserial_disable(void);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#739: FILE: arch/blackfin/kernel/early_printk.c:45:
+#define DEFAULT_CFLAG CS8|B57600
                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#739: FILE: arch/blackfin/kernel/early_printk.c:45:
+#define DEFAULT_CFLAG CS8|B57600

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#749: FILE: arch/blackfin/kernel/early_printk.c:55:
+	/* Crashing in here would be really bad, so check both the var
+	   and the pointer before we start using it

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#764: FILE: arch/blackfin/kernel/early_printk.c:70:
+			serial_port = simple_strtoul(buf, &buf, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#769: FILE: arch/blackfin/kernel/early_printk.c:75:
+		baud = simple_strtoul(buf, &buf, 10);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#807: FILE: arch/blackfin/kernel/early_printk.c:113:
+		bit = simple_strtoul(buf, &buf, 10);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#823: FILE: arch/blackfin/kernel/early_printk.c:129:
+		early_console_initialized = bfin_earlyserial_init(serial_port,
+			cflag);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#829: FILE: arch/blackfin/kernel/early_printk.c:135:
+		printk(KERN_INFO "Early Printk Support Enabled on %s%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#830: FILE: arch/blackfin/kernel/early_printk.c:136:
+		printk(KERN_INFO "Early Printk Support Enabled on %s%d\n",
+			early_console_initialized->name,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#841: FILE: arch/blackfin/kernel/early_printk.c:147:
+	printk(KERN_INFO "Unregister %s%d\n", early_console_initialized->name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#842: FILE: arch/blackfin/kernel/early_printk.c:148:
+	printk(KERN_INFO "Unregister %s%d\n", early_console_initialized->name,
+		early_console_initialized->index);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#872: FILE: arch/blackfin/Kconfig:1151:
+^Ibool "Early printk" $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#931: FILE: drivers/serial/bfin_5xx.c:1018:
+#if defined (CONFIG_SERIAL_BFIN_CONSOLE) || defined (CONFIG_EARLY_PRINTK)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#931: FILE: drivers/serial/bfin_5xx.c:1018:
+#if defined (CONFIG_SERIAL_BFIN_CONSOLE) || defined (CONFIG_EARLY_PRINTK)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#970: FILE: drivers/serial/bfin_5xx.c:1057:
+#endif /* defined (CONFIG_SERIAL_BFIN_CONSOLE) ||
+				 defined (CONFIG_EARLY_PRINTK) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#970: FILE: drivers/serial/bfin_5xx.c:1057:
+				 defined (CONFIG_EARLY_PRINTK) */

WARNING:TYPO_SPELLING: 'THRE' may be misspelled - perhaps 'THREE'?
#977: FILE: drivers/serial/bfin_5xx.c:1063:
+	while (!(UART_GET_LSR(uart) & THRE))
 	                              ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#977: FILE: drivers/serial/bfin_5xx.c:1063:
+	struct bfin_serial_port *uart = (struct bfin_serial_port *)port;
+	while (!(UART_GET_LSR(uart) & THRE))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#996: FILE: drivers/serial/bfin_5xx.c:1082:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1007: FILE: drivers/serial/bfin_5xx.c:1111:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1011: FILE: drivers/serial/bfin_5xx.c:1115:
+	unsigned timeout = 0xffff;

WARNING:TYPO_SPELLING: 'THRE' may be misspelled - perhaps 'THREE'?
#1014: FILE: drivers/serial/bfin_5xx.c:1118:
+	while ((!(UART_GET_LSR(uart) & THRE)) && --timeout)
 	                               ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1020: FILE: drivers/serial/bfin_5xx.c:1124:
+static __init void early_serial_write(struct console *con, const char *s,
+					unsigned int n)

ERROR:MISPLACED_INIT: __init should be placed after bfin_early_serial_console
#1032: FILE: drivers/serial/bfin_5xx.c:1136:
+static struct __init console bfin_early_serial_console = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1043: FILE: drivers/serial/bfin_5xx.c:1147:
+struct console __init *bfin_earlyserial_init(unsigned int port,
+						unsigned int cflag)

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#1176: FILE: arch/blackfin/kernel/setup.c:220:
+	if (ANOMALY_05000273 && cclk < (sclk *2))
 	                                     ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1180: FILE: arch/blackfin/kernel/setup.c:224:
+	printk(KERN_INFO "Hardware Trace ");

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1181: FILE: arch/blackfin/kernel/setup.c:225:
+	if (bfin_read_TBUFCTL() & 0x1 )

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1182: FILE: arch/blackfin/kernel/setup.c:226:
+		printk("Active ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1184: FILE: arch/blackfin/kernel/setup.c:228:
+		printk("Off ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1186: FILE: arch/blackfin/kernel/setup.c:230:
+		printk("and Enabled\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1188: FILE: arch/blackfin/kernel/setup.c:232:
+		printk("and Disabled\n");

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1200: FILE: arch/blackfin/kernel/setup.c:303:
+		printk(KERN_NOTICE "Warning: limiting memory to %liMB due to hardware anomaly 05000263\n", memory_end >> 20);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1200: FILE: arch/blackfin/kernel/setup.c:303:
+		printk(KERN_NOTICE "Warning: limiting memory to %liMB due to hardware anomaly 05000263\n", memory_end >> 20);

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1206: FILE: arch/blackfin/kernel/setup.c:308:
+		printk(KERN_NOTICE "Warning: limiting memory to %liMB due to hardware anomaly 05000263\n", memory_end >> 20);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1206: FILE: arch/blackfin/kernel/setup.c:308:
+		printk(KERN_NOTICE "Warning: limiting memory to %liMB due to hardware anomaly 05000263\n", memory_end >> 20);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000389680.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 33 warnings, 11 checks, 976 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000389680.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
