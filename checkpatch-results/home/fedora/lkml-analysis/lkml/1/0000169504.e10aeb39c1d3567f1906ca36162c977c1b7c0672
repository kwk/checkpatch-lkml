CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#63: FILE: fs/nfs/super.c:269:
+static int nfs4_remote_get_sb(struct file_system_type *fs_type,
+	int flags, const char *dev_name, void *raw_data, struct vfsmount *mnt);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#69: FILE: fs/nfs/super.c:275:
+static int nfs4_remote_referral_get_sb(struct file_system_type *fs_type,
+	int flags, const char *dev_name, void *raw_data, struct vfsmount *mnt);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#82: FILE: fs/nfs/super.c:291:
+	.fs_flags	= FS_RENAME_DOES_D_MOVE|FS_REVAL_DOT|FS_BINARY_MOUNTDATA,
 	         	                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#82: FILE: fs/nfs/super.c:291:
+	.fs_flags	= FS_RENAME_DOES_D_MOVE|FS_REVAL_DOT|FS_BINARY_MOUNTDATA,
 	         	                                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#97: FILE: fs/nfs/super.c:307:
+	.fs_flags	= FS_RENAME_DOES_D_MOVE|FS_REVAL_DOT|FS_BINARY_MOUNTDATA,
 	         	                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#97: FILE: fs/nfs/super.c:307:
+	.fs_flags	= FS_RENAME_DOES_D_MOVE|FS_REVAL_DOT|FS_BINARY_MOUNTDATA,
 	         	                                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#112: FILE: fs/nfs/super.c:2357:
+static int nfs4_remote_get_sb(struct file_system_type *fs_type,
 	int flags, const char *dev_name, void *raw_data, struct vfsmount *mnt)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#166: FILE: fs/nfs/super.c:2442:
+static int nfs_follow_remote_path(struct vfsmount *root_mnt,
+		const char *export_path, struct vfsmount *mnt_target)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#168: FILE: fs/nfs/super.c:2444:
+	struct nameidata nd;
 	                 ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#173: FILE: fs/nfs/super.c:2449:
+			export_path, LOOKUP_FOLLOW, &nd);
 			                             ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#173: FILE: fs/nfs/super.c:2449:
+	error = vfs_remote_path_lookup(root_mnt->mnt_root, root_mnt,
+			export_path, LOOKUP_FOLLOW, &nd);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#179: FILE: fs/nfs/super.c:2455:
+	s = nd.path.mnt->mnt_sb;
 	    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#183: FILE: fs/nfs/super.c:2459:
+		mnt_target->mnt_root = dget(nd.path.dentry);
 		                            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#188: FILE: fs/nfs/super.c:2464:
+	path_put(&nd.path);
 	          ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#196: FILE: fs/nfs/super.c:2472:
+static int nfs4_get_sb(struct file_system_type *fs_type,
+	int flags, const char *dev_name, void *raw_data, struct vfsmount *mnt)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#204: FILE: fs/nfs/super.c:2480:
+	if (data == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#230: FILE: fs/nfs/super.c:2506:
+	dprintk("<-- nfs4_referral_get_sb() = %d%s\n", error,
+			error != 0 ? " [error]" : "");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#248: FILE: fs/nfs/super.c:2606:
+static int nfs4_remote_referral_get_sb(struct file_system_type *fs_type,
+		int flags, const char *dev_name, void *raw_data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#261: FILE: fs/nfs/super.c:2691:
+static int nfs4_referral_get_sb(struct file_system_type *fs_type,
+		int flags, const char *dev_name, void *raw_data,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'nfs4_referral_get_sb', this function's name, in a string
#269: FILE: fs/nfs/super.c:2699:
+	dprintk("--> nfs4_referral_get_sb()\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: fs/nfs/super.c:2705:
+	root_mnt = vfs_kern_mount(&nfs4_remote_referral_fs_type,
+			flags, dev_name, data);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'nfs4_referral_get_sb', this function's name, in a string
#284: FILE: fs/nfs/super.c:2714:
+	dprintk("<-- nfs4_referral_get_sb() = %d%s\n", error,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#285: FILE: fs/nfs/super.c:2715:
+	dprintk("<-- nfs4_referral_get_sb() = %d%s\n", error,
+			error != 0 ? " [error]" : "");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000169504.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 16 checks, 229 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000169504.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
