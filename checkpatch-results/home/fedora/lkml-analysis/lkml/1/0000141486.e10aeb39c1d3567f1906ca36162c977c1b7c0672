WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
Separate out the proc- and unit-specific header directories from the general

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#194: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1323: FILE: arch/mn10300/proc-mn103e010/include/proc/cache.h:1:
+/* MN103E010 Cache specification

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1362: FILE: arch/mn10300/proc-mn103e010/include/proc/clock.h:1:
+/* MN103E010-specific clocks

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1386: FILE: arch/mn10300/proc-mn103e010/include/proc/irq.h:1:
+/* MN103E010 On-board interrupt controller numbers

CHECK:CAMELCASE: Avoid CamelCase: <GxICR_NUM_IRQS>
#1402: FILE: arch/mn10300/proc-mn103e010/include/proc/irq.h:17:
+#define GxICR_NUM_IRQS		42

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <GxICR_NUM_XIRQS>
#1404: FILE: arch/mn10300/proc-mn103e010/include/proc/irq.h:19:
+#define GxICR_NUM_XIRQS		8

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'num' may be better as '(num)' to avoid precedence issues
#1415: FILE: arch/mn10300/proc-mn103e010/include/proc/irq.h:30:
+#define XIRQ2IRQ(num)	(XIRQ0 + num)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1426: FILE: arch/mn10300/proc-mn103e010/include/proc/proc.h:1:
+/* MN103E010 Processor description

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1450: FILE: arch/mn10300/unit-asb2303/include/unit/clock.h:1:
+/* ASB2303-specific clocks

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1489: FILE: arch/mn10300/unit-asb2303/include/unit/clock.h:40:
+#define MN10300_TSC_PER_HZ	(MN10300_TSCCLK/HZ)
                           	               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1501: FILE: arch/mn10300/unit-asb2303/include/unit/leds.h:1:
+/* ASB2303-specific LEDs

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1527: FILE: arch/mn10300/unit-asb2303/include/unit/leds.h:27:
+#define mn10300_set_gdbleds(ONOFF)			\
+do {							\
+	ASB2303_7SEGLEDS = (ONOFF) ? 0x85 : 0x7f;	\
+} while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1533: FILE: arch/mn10300/unit-asb2303/include/unit/leds.h:33:
+#define mn10300_set_dbfleds			\
+	mov	0x43,d0			;	\
+	movbu	d0,(ASB2303_7SEGLEDS)

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1534: FILE: arch/mn10300/unit-asb2303/include/unit/leds.h:34:
+	mov	0x43,d0			;	\
 	   	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1535: FILE: arch/mn10300/unit-asb2303/include/unit/leds.h:35:
+	movbu	d0,(ASB2303_7SEGLEDS)
 	     	  ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1538: FILE: arch/mn10300/unit-asb2303/include/unit/leds.h:38:
+extern void peripheral_leds_display_exception(enum exception_code code);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1539: FILE: arch/mn10300/unit-asb2303/include/unit/leds.h:39:
+extern void peripheral_leds_led_chase(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1540: FILE: arch/mn10300/unit-asb2303/include/unit/leds.h:40:
+extern void debug_to_serial(const char *p, int n);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1550: FILE: arch/mn10300/unit-asb2303/include/unit/serial.h:1:
+/* ASB2303-specific 8250 serial ports

CHECK:CAMELCASE: Avoid CamelCase: <CONFIG_GDBSTUB_ON_TTYSx>
#1576: FILE: arch/mn10300/unit-asb2303/include/unit/serial.h:27:
+#ifndef CONFIG_GDBSTUB_ON_TTYSx

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1578: FILE: arch/mn10300/unit-asb2303/include/unit/serial.h:29:
+#define SERIAL_PORT_DFNS						\
+	{								\
+	.baud_base		= BASE_BAUD,				\
+	.irq			= SERIAL_IRQ,				\
+	.flags			= STD_COM_FLAGS,			\
+	.iomem_base		= (u8 *) SERIAL_PORT0_BASE_ADDRESS,	\
+	.iomem_reg_shift	= 2,					\
+	.io_type		= SERIAL_IO_MEM,			\
+	},								\
+	{								\
+	.baud_base		= BASE_BAUD,				\
+	.irq			= SERIAL_IRQ,				\
+	.flags			= STD_COM_FLAGS,			\
+	.iomem_base		= (u8 *) SERIAL_PORT1_BASE_ADDRESS,	\
+	.iomem_reg_shift	= 2,					\
+	.io_type		= SERIAL_IO_MEM,			\
+	},

CHECK:SPACING: No space is necessary after a cast
#1583: FILE: arch/mn10300/unit-asb2303/include/unit/serial.h:34:
+	.iomem_base		= (u8 *) SERIAL_PORT0_BASE_ADDRESS,	\

CHECK:SPACING: No space is necessary after a cast
#1591: FILE: arch/mn10300/unit-asb2303/include/unit/serial.h:42:
+	.iomem_base		= (u8 *) SERIAL_PORT1_BASE_ADDRESS,	\

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1643: FILE: arch/mn10300/unit-asb2303/include/unit/serial.h:94:
+	while (!(GDBPORT_SERIAL_LSR & UART_LSR_##STATE)) {}	\

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1643: FILE: arch/mn10300/unit-asb2303/include/unit/serial.h:94:
+	while (!(GDBPORT_SERIAL_LSR & UART_LSR_##STATE)) {}	\

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1647: FILE: arch/mn10300/unit-asb2303/include/unit/serial.h:98:
+	while (!(GDBPORT_SERIAL_MSR & UART_MSR_##LINE)) {}	\

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1647: FILE: arch/mn10300/unit-asb2303/include/unit/serial.h:98:
+	while (!(GDBPORT_SERIAL_MSR & UART_MSR_##LINE)) {}	\

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1649: FILE: arch/mn10300/unit-asb2303/include/unit/serial.h:100:
+#define FLOWCTL_CLEAR(LINE)			\
+do {						\
+	GDBPORT_SERIAL_MCR &= ~UART_MCR_##LINE;	\
+} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1653: FILE: arch/mn10300/unit-asb2303/include/unit/serial.h:104:
+#define FLOWCTL_SET(LINE)			\
+do {						\
+	GDBPORT_SERIAL_MCR |= UART_MCR_##LINE;	\
+} while (0)

WARNING:TYPO_SPELLING: 'THRE' may be misspelled - perhaps 'THREE'?
#1666: FILE: arch/mn10300/unit-asb2303/include/unit/serial.h:117:
+		LSR_WAIT_FOR(THRE);
 		             ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'THRE' may be misspelled - perhaps 'THREE'?
#1672: FILE: arch/mn10300/unit-asb2303/include/unit/serial.h:123:
+			LSR_WAIT_FOR(THRE);
 			             ^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1692: FILE: arch/mn10300/unit-asb2303/include/unit/smc91111.h:1:
+/* Support for the SMC91C111 NIC on an ASB2303

CHECK:SPACING: No space is necessary after a cast
#1718: FILE: arch/mn10300/unit-asb2303/include/unit/smc91111.h:27:
+#define SMC_inb(a, r)		inb((unsigned long) ((a) + (r)))

CHECK:SPACING: No space is necessary after a cast
#1719: FILE: arch/mn10300/unit-asb2303/include/unit/smc91111.h:28:
+#define SMC_outb(v, a, r)	outb(v, (unsigned long) ((a) + (r)))

CHECK:SPACING: No space is necessary after a cast
#1723: FILE: arch/mn10300/unit-asb2303/include/unit/smc91111.h:32:
+#define SMC_inw(a, r)		inw((unsigned long) ((a) + (r)))

CHECK:SPACING: No space is necessary after a cast
#1724: FILE: arch/mn10300/unit-asb2303/include/unit/smc91111.h:33:
+#define SMC_outw(v, a, r)	outw(v, (unsigned long) ((a) + (r)))

CHECK:SPACING: No space is necessary after a cast
#1725: FILE: arch/mn10300/unit-asb2303/include/unit/smc91111.h:34:
+#define SMC_insw(a, r, p, l)	insw((unsigned long) ((a) + (r)), (p), (l))

CHECK:SPACING: No space is necessary after a cast
#1726: FILE: arch/mn10300/unit-asb2303/include/unit/smc91111.h:35:
+#define SMC_outsw(a, r, p, l)	outsw((unsigned long) ((a) + (r)), (p), (l))

CHECK:SPACING: No space is necessary after a cast
#1730: FILE: arch/mn10300/unit-asb2303/include/unit/smc91111.h:39:
+#define SMC_inl(a, r)		inl((unsigned long) ((a) + (r)))

CHECK:SPACING: No space is necessary after a cast
#1731: FILE: arch/mn10300/unit-asb2303/include/unit/smc91111.h:40:
+#define SMC_outl(v, a, r)	outl(v, (unsigned long) ((a) + (r)))

CHECK:SPACING: No space is necessary after a cast
#1732: FILE: arch/mn10300/unit-asb2303/include/unit/smc91111.h:41:
+#define SMC_insl(a, r, p, l)	insl((unsigned long) ((a) + (r)), (p), (l))

CHECK:SPACING: No space is necessary after a cast
#1733: FILE: arch/mn10300/unit-asb2303/include/unit/smc91111.h:42:
+#define SMC_outsl(a, r, p, l)	outsl((unsigned long) ((a) + (r)), (p), (l))

WARNING:TYPO_SPELLING: 'specifcations' may be misspelled - perhaps 'specifications'?
#1748: FILE: arch/mn10300/unit-asb2303/include/unit/timex.h:1:
+/* ASB2303-specific timer specifcations
                           ^^^^^^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1748: FILE: arch/mn10300/unit-asb2303/include/unit/timex.h:1:
+/* ASB2303-specific timer specifcations

CHECK:CAMELCASE: Avoid CamelCase: <GxICR_LEVEL_5>
#1779: FILE: arch/mn10300/unit-asb2303/include/unit/timex.h:32:
+#define	TMJCICR_LEVEL		GxICR_LEVEL_5

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1785: FILE: arch/mn10300/unit-asb2303/include/unit/timex.h:38:
+	unsigned rate;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1801: FILE: arch/mn10300/unit-asb2303/include/unit/timex.h:54:
+				BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:CAMELCASE: Avoid CamelCase: <GxICR_ENABLE>
#1822: FILE: arch/mn10300/unit-asb2303/include/unit/timex.h:75:
+	TMJCICR |= GxICR_ENABLE | GxICR_DETECT | GxICR_REQUEST;

CHECK:CAMELCASE: Avoid CamelCase: <GxICR_DETECT>
#1822: FILE: arch/mn10300/unit-asb2303/include/unit/timex.h:75:
+	TMJCICR |= GxICR_ENABLE | GxICR_DETECT | GxICR_REQUEST;

CHECK:CAMELCASE: Avoid CamelCase: <GxICR_REQUEST>
#1822: FILE: arch/mn10300/unit-asb2303/include/unit/timex.h:75:
+	TMJCICR |= GxICR_ENABLE | GxICR_DETECT | GxICR_REQUEST;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1832: FILE: arch/mn10300/unit-asb2303/include/unit/timex.h:85:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1873: FILE: arch/mn10300/unit-asb2303/include/unit/timex.h:126:
+typedef unsigned long cycles_t;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1915: FILE: arch/mn10300/unit-asb2305/include/unit/clock.h:1:
+/* ASB2305-specific clocks

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1954: FILE: arch/mn10300/unit-asb2305/include/unit/clock.h:40:
+#define MN10300_TSC_PER_HZ	(MN10300_TSCCLK/HZ)
                           	               ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1966: FILE: arch/mn10300/unit-asb2305/include/unit/leds.h:1:
+/* ASB2305-specific LEDs

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1997: FILE: arch/mn10300/unit-asb2305/include/unit/leds.h:32:
+#define mn10300_set_dbfleds			\
+	mov	0x43077f1d,d0		;	\
+	mov	d0,(ASB2305_7SEGLEDS)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1998: FILE: arch/mn10300/unit-asb2305/include/unit/leds.h:33:
+	mov	0x43077f1d,d0		;	\
 	   	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1999: FILE: arch/mn10300/unit-asb2305/include/unit/leds.h:34:
+	mov	d0,(ASB2305_7SEGLEDS)
 	   	  ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#2002: FILE: arch/mn10300/unit-asb2305/include/unit/leds.h:37:
+#define mn10300_set_gdbleds(ONOFF)				\
+do {								\
+	ASB2305_7SEGLEDS = (ONOFF) ? 0x8543077f : 0x7f7f7f7f;	\
+} while (0)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2008: FILE: arch/mn10300/unit-asb2305/include/unit/leds.h:43:
+extern void peripheral_leds_display_exception(enum exception_code);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2009: FILE: arch/mn10300/unit-asb2305/include/unit/leds.h:44:
+extern void peripheral_leds_led_chase(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2010: FILE: arch/mn10300/unit-asb2305/include/unit/leds.h:45:
+extern void peripheral_leds7x4_display_dec(unsigned int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#2010: FILE: arch/mn10300/unit-asb2305/include/unit/leds.h:45:
+extern void peripheral_leds7x4_display_dec(unsigned int, unsigned int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#2010: FILE: arch/mn10300/unit-asb2305/include/unit/leds.h:45:
+extern void peripheral_leds7x4_display_dec(unsigned int, unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2011: FILE: arch/mn10300/unit-asb2305/include/unit/leds.h:46:
+extern void peripheral_leds7x4_display_hex(unsigned int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#2011: FILE: arch/mn10300/unit-asb2305/include/unit/leds.h:46:
+extern void peripheral_leds7x4_display_hex(unsigned int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#2011: FILE: arch/mn10300/unit-asb2305/include/unit/leds.h:46:
+extern void peripheral_leds7x4_display_hex(unsigned int, unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2012: FILE: arch/mn10300/unit-asb2305/include/unit/leds.h:47:
+extern void peripheral_leds7x4_display_minssecs(unsigned int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#2012: FILE: arch/mn10300/unit-asb2305/include/unit/leds.h:47:
+extern void peripheral_leds7x4_display_minssecs(unsigned int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#2012: FILE: arch/mn10300/unit-asb2305/include/unit/leds.h:47:
+extern void peripheral_leds7x4_display_minssecs(unsigned int, unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2013: FILE: arch/mn10300/unit-asb2305/include/unit/leds.h:48:
+extern void peripheral_leds7x4_display_rtc(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2023: FILE: arch/mn10300/unit-asb2305/include/unit/serial.h:1:
+/* ASB2305-specific 8250 serial ports

CHECK:SPACING: No space is necessary after a cast
#2055: FILE: arch/mn10300/unit-asb2305/include/unit/serial.h:33:
+	.iomem_base		= (u8 *) SERIAL_PORT0_BASE_ADDRESS,	\

WARNING:TYPO_SPELLING: 'doesnt' may be misspelled - perhaps 'doesn't'?
#2088: FILE: arch/mn10300/unit-asb2305/include/unit/serial.h:66:
+#error The ASB2305 doesnt have a /dev/ttyS1
                    ^^^^^^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2100: FILE: arch/mn10300/unit-asb2305/include/unit/serial.h:78:
+	while (!(TTYS0_LSR & UART_LSR_##STATE)) {}	\

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2100: FILE: arch/mn10300/unit-asb2305/include/unit/serial.h:78:
+	while (!(TTYS0_LSR & UART_LSR_##STATE)) {}	\

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2104: FILE: arch/mn10300/unit-asb2305/include/unit/serial.h:82:
+	while (!(TTYS0_MSR & UART_MSR_##LINE)) {}	\

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2104: FILE: arch/mn10300/unit-asb2305/include/unit/serial.h:82:
+	while (!(TTYS0_MSR & UART_MSR_##LINE)) {}	\

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#2106: FILE: arch/mn10300/unit-asb2305/include/unit/serial.h:84:
+#define FLOWCTL_CLEAR(LINE)			\
+do {						\
+	TTYS0_MCR &= ~UART_MCR_##LINE;		\
+} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#2110: FILE: arch/mn10300/unit-asb2305/include/unit/serial.h:88:
+#define FLOWCTL_SET(LINE)			\
+do {						\
+	TTYS0_MCR |= UART_MCR_##LINE;		\
+} while (0)

WARNING:TYPO_SPELLING: 'THRE' may be misspelled - perhaps 'THREE'?
#2123: FILE: arch/mn10300/unit-asb2305/include/unit/serial.h:101:
+		LSR_WAIT_FOR(THRE);
 		             ^^^^

WARNING:TYPO_SPELLING: 'THRE' may be misspelled - perhaps 'THREE'?
#2129: FILE: arch/mn10300/unit-asb2305/include/unit/serial.h:107:
+			LSR_WAIT_FOR(THRE);
 			             ^^^^

WARNING:TYPO_SPELLING: 'specifcations' may be misspelled - perhaps 'specifications'?
#2149: FILE: arch/mn10300/unit-asb2305/include/unit/timex.h:1:
+/* ASB2305 timer specifcations
                  ^^^^^^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2149: FILE: arch/mn10300/unit-asb2305/include/unit/timex.h:1:
+/* ASB2305 timer specifcations

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2186: FILE: arch/mn10300/unit-asb2305/include/unit/timex.h:38:
+	unsigned rate;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2202: FILE: arch/mn10300/unit-asb2305/include/unit/timex.h:54:
+				BUG();

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2233: FILE: arch/mn10300/unit-asb2305/include/unit/timex.h:85:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2274: FILE: arch/mn10300/unit-asb2305/include/unit/timex.h:126:
+typedef unsigned long cycles_t;

CHECK:SPACING: No space is necessary after a cast
#2278: FILE: arch/mn10300/unit-asb2305/include/unit/timex.h:130:
+	return (cycles_t) TMTSCBC;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000141486.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 11 errors, 44 warnings, 35 checks, 1077 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000141486.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
