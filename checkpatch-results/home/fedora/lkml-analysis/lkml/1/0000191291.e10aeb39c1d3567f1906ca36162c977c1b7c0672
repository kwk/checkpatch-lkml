WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
Subject: [PATCH] [LIO-Target]: Updates for iscsi_target.c for generic target_core_mod v3.0

WARNING:TYPO_SPELLING: 'assoicated' may be misspelled - perhaps 'associated'?
#43: 
to determine if the iscsi_cmd_t has an assoicated se_cmd_t that needs to be freed
                                       ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#68: FILE: drivers/lio-core/iscsi_target.c:97:
+struct kmem_cache *lio_cmd_cache = NULL;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#69: FILE: drivers/lio-core/iscsi_target.c:98:
+struct kmem_cache *lio_sess_cache = NULL;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#93: FILE: drivers/lio-core/iscsi_target.c:1106:
+	if (!(lio_cmd_cache = kmem_cache_create("lio_cmd_cache",

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#94: FILE: drivers/lio-core/iscsi_target.c:1107:
+	if (!(lio_cmd_cache = kmem_cache_create("lio_cmd_cache",
+			sizeof(iscsi_cmd_t), __alignof__(iscsi_cmd_t),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#96: FILE: drivers/lio-core/iscsi_target.c:1109:
+		printk(KERN_ERR "Unable to kmem_cache_create() for lio_cmd_cache\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#100: FILE: drivers/lio-core/iscsi_target.c:1113:
+	if (!(lio_sess_cache = kmem_cache_create("lio_sess_cache",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#101: FILE: drivers/lio-core/iscsi_target.c:1114:
+	if (!(lio_sess_cache = kmem_cache_create("lio_sess_cache",
+			sizeof(iscsi_session_t), __alignof__(iscsi_session_t),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#103: FILE: drivers/lio-core/iscsi_target.c:1116:
+		printk(KERN_ERR "Unable to kmem_cache_create() for lio_sess_cache\n");

WARNING:NEEDLESS_IF: kmem_cache_destroy(NULL) is safe and this check is probably not required
#115: FILE: drivers/lio-core/iscsi_target.c:1130:
+	if (lio_cmd_cache)
+		kmem_cache_destroy(lio_cmd_cache);

WARNING:NEEDLESS_IF: kmem_cache_destroy(NULL) is safe and this check is probably not required
#117: FILE: drivers/lio-core/iscsi_target.c:1132:
+	if (lio_sess_cache)
+		kmem_cache_destroy(lio_sess_cache);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#134: FILE: drivers/lio-core/iscsi_target.c:1271:
+extern char *iscsi_get_fabric_name (void)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#134: FILE: drivers/lio-core/iscsi_target.c:1271:
+extern char *iscsi_get_fabric_name (void)

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#136: FILE: drivers/lio-core/iscsi_target.c:1273:
+	return("iSCSI");

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:TYPO_SPELLING: 'assoicated' may be misspelled - perhaps 'associated'?
#158: FILE: drivers/lio-core/iscsi_target.c:4283:
+				 * Determine if a se_cmd_t is assoicated with
 				                              ^^^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#224: FILE: drivers/lio-core/iscsi_target.c:5036:
+        transport_deregister_session_configfs(sess->se_sess);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: drivers/lio-core/iscsi_target.c:5036:
+        transport_deregister_session_configfs(sess->se_sess);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#287: FILE: drivers/lio-core/iscsi_target.c:5314:
+extern void iscsi_stop_session (iscsi_session_t *sess, int session_sleep, int connection_sleep)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#325: FILE: drivers/lio-core/iscsi_target.c:5387:
+	list_for_each_entry_safe(se_sess, se_sess_tmp, &se_tpg->tpg_sess_list,
+			sess_list) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#326: FILE: drivers/lio-core/iscsi_target.c:5388:
+^I^Isess = (iscsi_session_t *)se_sess->fabric_sess_ptr;^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#361: FILE: drivers/lio-core/iscsi_target.h:49:
+extern char *iscsi_get_fabric_name (void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#361: FILE: drivers/lio-core/iscsi_target.h:49:
+extern char *iscsi_get_fabric_name (void);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#370: FILE: drivers/lio-core/iscsi_target.h:68:
+extern void iscsi_stop_session (iscsi_session_t *, int, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#370: FILE: drivers/lio-core/iscsi_target.h:68:
+extern void iscsi_stop_session (iscsi_session_t *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'iscsi_session_t *' should also have an identifier name
#370: FILE: drivers/lio-core/iscsi_target.h:68:
+extern void iscsi_stop_session (iscsi_session_t *, int, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#370: FILE: drivers/lio-core/iscsi_target.h:68:
+extern void iscsi_stop_session (iscsi_session_t *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#370: FILE: drivers/lio-core/iscsi_target.h:68:
+extern void iscsi_stop_session (iscsi_session_t *, int, int);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000191291.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 16 warnings, 5 checks, 287 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000191291.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
