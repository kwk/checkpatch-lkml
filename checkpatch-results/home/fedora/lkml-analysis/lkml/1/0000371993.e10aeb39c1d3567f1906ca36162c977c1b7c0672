WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
master.kernel.org:/pub/scm/linux/kernel/git/jgarzik/netdev-2.6.git upstream-davem

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#133: FILE: drivers/net/acenic.c:993:
+		t = read_eeprom_byte(dev, 0x8c+i);
 		                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#134: FILE: drivers/net/acenic.c:994:
+		if (t < 0) {
[...]
 		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#149: FILE: drivers/net/acenic.c:1005:
+		t = read_eeprom_byte(dev, 0x8c+i);
 		                              ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#150: FILE: drivers/net/acenic.c:1006:
+		if (t < 0) {
[...]
 		} else
[...]

CHECK:SPACING: No space is necessary after a cast
#164: FILE: drivers/net/acenic.c:1308:
+		ap->tx_ring = (__force struct tx_desc *) regs->Window;

CHECK:CAMELCASE: Avoid CamelCase: <Window>
#164: FILE: drivers/net/acenic.c:1308:
+		ap->tx_ring = (__force struct tx_desc *) regs->Window;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'board_idx >= 0'
#178: FILE: drivers/net/acenic.c:1397:
+	if ((board_idx >= 0) && link_state[board_idx]) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: No space is necessary after a cast
#191: FILE: drivers/net/acenic.c:2388:
+				tx = (__force struct tx_desc __iomem *) &ap->tx_ring[i];

WARNING:LINE_SPACING: Missing a blank line after declarations
#191: FILE: drivers/net/acenic.c:2388:
+				struct tx_desc __iomem *tx;
+				tx = (__force struct tx_desc __iomem *) &ap->tx_ring[i];

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#200: FILE: drivers/net/acenic.c:2448:
+		struct tx_desc __iomem *io = (__force struct tx_desc __iomem *) desc;

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#209: FILE: drivers/net/acenic.c:2940:
+static int __devinit ace_load_firmware(struct net_device *dev)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#263: FILE: drivers/net/chelsio/common.h:375:
+extern void t1_elmer0_ext_intr(adapter_t *adapter);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#268: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#747: FILE: drivers/net/cxgb3/cxgb3_offload.c:282:
+			t3_sge_init_cqcntxt(adapter, rdma->id,
+					rdma->base_addr, rdma->size,

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#950: FILE: drivers/net/e1000e/lib.c:643:
+	/*
+	 * If flow control is set to default, set flow control based on

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hdr_len == len'
#988: FILE: drivers/net/e1000e/netdev.c:3461:
+		if (skb->data_len && (hdr_len == len)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1183: FILE: drivers/net/ibm_emac/ibm_emac_mal.c:210:
+	if (likely(napi_schedule_prep(&mal->napi))) {
[...]
+		__napi_schedule(&mal->napi);
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#1328: FILE: drivers/net/ibm_newemac/mal.c:238:
+	if (likely(napi_schedule_prep(&mal->napi))) {
[...]
+		__napi_schedule(&mal->napi);
[...]

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1474: FILE: drivers/net/natsemi.c:111:
+#define NATSEMI_TIMER_FREQ	5*HZ
                           	 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1474: FILE: drivers/net/natsemi.c:111:
+#define NATSEMI_TIMER_FREQ	5*HZ

WARNING:LINE_SPACING: Missing a blank line after declarations
#1503: FILE: drivers/net/natsemi.c:2506:
+			int b = (ether_crc(ETH_ALEN, mclist->dmi_addr) >> 23) & 0x1ff;
+			mc_filter[b/8] |= (1 << (b & 0x07));

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1503: FILE: drivers/net/natsemi.c:2506:
+			mc_filter[b/8] |= (1 << (b & 0x07));
 			           ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1632: FILE: drivers/net/s2io.c:4233:
+static int do_s2io_chk_alarm_bit(u64 value, void __iomem * addr,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1633: FILE: drivers/net/s2io.c:4234:
+static int do_s2io_chk_alarm_bit(u64 value, void __iomem * addr,
 			  unsigned long long *cnt)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000371993.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 6 warnings, 17 checks, 1042 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000371993.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
