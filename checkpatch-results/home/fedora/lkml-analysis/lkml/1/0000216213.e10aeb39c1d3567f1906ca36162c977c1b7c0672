WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#96: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#101: FILE: drivers/input/touchscreen/ad7879.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#102: FILE: drivers/input/touchscreen/ad7879.c:2:
+ * File:        drivers/input/touchscreen/ad7879.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#123: FILE: drivers/input/touchscreen/ad7879.c:23:
+ * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#138: FILE: drivers/input/touchscreen/ad7879.c:38:
+ * ^ICopyright (C) 2006-2008 Analog Devices Inc.$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#171: FILE: drivers/input/touchscreen/ad7879.c:71:
+#define AD7879_TMR(x)			((x & 0xFF) << 0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#172: FILE: drivers/input/touchscreen/ad7879.c:72:
+#define AD7879_ACQ(x)			((x & 0x3) << 8)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#173: FILE: drivers/input/touchscreen/ad7879.c:73:
+#define AD7879_MODE_NOC  ^I^I(0 << 10)^I/* Do not convert */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#174: FILE: drivers/input/touchscreen/ad7879.c:74:
+#define AD7879_MODE_SCC  ^I^I(1 << 10)^I/* Single channel conversion */$

CHECK:BIT_MACRO: Prefer using the BIT macro
#174: FILE: drivers/input/touchscreen/ad7879.c:74:
+#define AD7879_MODE_SCC  		(1 << 10)	/* Single channel conversion */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#175: FILE: drivers/input/touchscreen/ad7879.c:75:
+#define AD7879_MODE_SEQ0 ^I^I(2 << 10)^I/* Sequence 0 in Slave Mode */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#176: FILE: drivers/input/touchscreen/ad7879.c:76:
+#define AD7879_MODE_SEQ1 ^I^I(3 << 10)^I/* Sequence 1 in Master Mode */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#177: FILE: drivers/input/touchscreen/ad7879.c:77:
+#define AD7879_MODE_INT ^I^I(1 << 15)^I/* PENIRQ disabled INT enabled */$

CHECK:BIT_MACRO: Prefer using the BIT macro
#177: FILE: drivers/input/touchscreen/ad7879.c:77:
+#define AD7879_MODE_INT 		(1 << 15)	/* PENIRQ disabled INT enabled */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#180: FILE: drivers/input/touchscreen/ad7879.c:80:
+#define AD7879_FCD(x)			((x & 0x3) << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#181: FILE: drivers/input/touchscreen/ad7879.c:81:
+#define AD7879_RESET			(1 << 4)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#182: FILE: drivers/input/touchscreen/ad7879.c:82:
+#define AD7879_MFS(x)			((x & 0x3) << 5)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#183: FILE: drivers/input/touchscreen/ad7879.c:83:
+#define AD7879_AVG(x)			((x & 0x3) << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#184: FILE: drivers/input/touchscreen/ad7879.c:84:
+#define	AD7879_SER			(1 << 9)	/* non-differential */

CHECK:BIT_MACRO: Prefer using the BIT macro
#186: FILE: drivers/input/touchscreen/ad7879.c:86:
+#define AD7879_GPIOPOL			(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#187: FILE: drivers/input/touchscreen/ad7879.c:87:
+#define AD7879_GPIODIR			(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#188: FILE: drivers/input/touchscreen/ad7879.c:88:
+#define AD7879_GPIO_DATA		(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#189: FILE: drivers/input/touchscreen/ad7879.c:89:
+#define AD7879_GPIO_EN			(1 << 13)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#190: FILE: drivers/input/touchscreen/ad7879.c:90:
+#define AD7879_PM(x)			((x & 0x3) << 14)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#196: FILE: drivers/input/touchscreen/ad7879.c:96:
+#define AD7879_TEMPMASK_BIT		(1<<15)
                            		  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#196: FILE: drivers/input/touchscreen/ad7879.c:96:
+#define AD7879_TEMPMASK_BIT		(1<<15)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#197: FILE: drivers/input/touchscreen/ad7879.c:97:
+#define AD7879_AUXVBATMASK_BIT		(1<<14)
                               		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#197: FILE: drivers/input/touchscreen/ad7879.c:97:
+#define AD7879_AUXVBATMASK_BIT		(1<<14)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#198: FILE: drivers/input/touchscreen/ad7879.c:98:
+#define AD7879_INTMODE_BIT		(1<<13)
                           		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#198: FILE: drivers/input/touchscreen/ad7879.c:98:
+#define AD7879_INTMODE_BIT		(1<<13)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#199: FILE: drivers/input/touchscreen/ad7879.c:99:
+#define AD7879_GPIOALERTMASK_BIT	(1<<12)
                                 	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#199: FILE: drivers/input/touchscreen/ad7879.c:99:
+#define AD7879_GPIOALERTMASK_BIT	(1<<12)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#200: FILE: drivers/input/touchscreen/ad7879.c:100:
+#define AD7879_AUXLOW_BIT		(1<<11)
                          		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#200: FILE: drivers/input/touchscreen/ad7879.c:100:
+#define AD7879_AUXLOW_BIT		(1<<11)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#201: FILE: drivers/input/touchscreen/ad7879.c:101:
+#define AD7879_AUXHIGH_BIT		(1<<10)
                           		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#201: FILE: drivers/input/touchscreen/ad7879.c:101:
+#define AD7879_AUXHIGH_BIT		(1<<10)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#202: FILE: drivers/input/touchscreen/ad7879.c:102:
+#define AD7879_TEMPLOW_BIT		(1<<9)
                           		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#202: FILE: drivers/input/touchscreen/ad7879.c:102:
+#define AD7879_TEMPLOW_BIT		(1<<9)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#203: FILE: drivers/input/touchscreen/ad7879.c:103:
+#define AD7879_TEMPHIGH_BIT		(1<<8)
                            		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#203: FILE: drivers/input/touchscreen/ad7879.c:103:
+#define AD7879_TEMPHIGH_BIT		(1<<8)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#204: FILE: drivers/input/touchscreen/ad7879.c:104:
+#define AD7879_YPLUS_BIT		(1<<7)
                         		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#204: FILE: drivers/input/touchscreen/ad7879.c:104:
+#define AD7879_YPLUS_BIT		(1<<7)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#205: FILE: drivers/input/touchscreen/ad7879.c:105:
+#define AD7879_XPLUS_BIT		(1<<6)
                         		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#205: FILE: drivers/input/touchscreen/ad7879.c:105:
+#define AD7879_XPLUS_BIT		(1<<6)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#206: FILE: drivers/input/touchscreen/ad7879.c:106:
+#define AD7879_Z1_BIT			(1<<5)
                      			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#206: FILE: drivers/input/touchscreen/ad7879.c:106:
+#define AD7879_Z1_BIT			(1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#207: FILE: drivers/input/touchscreen/ad7879.c:107:
+#define AD7879_Z2_BIT			(1<<4)
                      			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#207: FILE: drivers/input/touchscreen/ad7879.c:107:
+#define AD7879_Z2_BIT			(1<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#208: FILE: drivers/input/touchscreen/ad7879.c:108:
+#define AD7879_AUX_BIT			(1<<3)
                       			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#208: FILE: drivers/input/touchscreen/ad7879.c:108:
+#define AD7879_AUX_BIT			(1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#209: FILE: drivers/input/touchscreen/ad7879.c:109:
+#define AD7879_VBAT_BIT			(1<<2)
                        			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#209: FILE: drivers/input/touchscreen/ad7879.c:109:
+#define AD7879_VBAT_BIT			(1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#210: FILE: drivers/input/touchscreen/ad7879.c:110:
+#define AD7879_TEMP_BIT			(1<<1)
                        			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#210: FILE: drivers/input/touchscreen/ad7879.c:110:
+#define AD7879_TEMP_BIT			(1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#220: FILE: drivers/input/touchscreen/ad7879.c:120:
+#define	MAX_12BIT			((1<<12)-1)
        	         			   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#220: FILE: drivers/input/touchscreen/ad7879.c:120:
+#define	MAX_12BIT			((1<<12)-1)
        	         			        ^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#225: FILE: drivers/input/touchscreen/ad7879.c:125:
+typedef struct spi_device	bus_device;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#228: FILE: drivers/input/touchscreen/ad7879.c:128:
+typedef struct i2c_client	bus_device;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#232: FILE: drivers/input/touchscreen/ad7879.c:132:
+^Ibus_device ^I^I*bus;$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#236: FILE: drivers/input/touchscreen/ad7879.c:136:
+	spinlock_t		lock;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#243: FILE: drivers/input/touchscreen/ad7879.c:143:
+^Iu16 ^I^I^Iconversion_data[AD7879_NR_SENSE];$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#267: FILE: drivers/input/touchscreen/ad7879.c:167:
+	unsigned		Rt;

CHECK:CAMELCASE: Avoid CamelCase: <Rt>
#267: FILE: drivers/input/touchscreen/ad7879.c:167:
+	unsigned		Rt;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:BRACES: braces {} should be used on all arms of this statement
#285: FILE: drivers/input/touchscreen/ad7879.c:185:
+	if (likely(x && z1)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#290: FILE: drivers/input/touchscreen/ad7879.c:190:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#377: FILE: drivers/input/touchscreen/ad7879.c:277:
+static ssize_t ad7879_disable_show(struct device *dev,
+				     struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#385: FILE: drivers/input/touchscreen/ad7879.c:285:
+static ssize_t ad7879_disable_store(struct device *dev,
+				     struct device_attribute *attr,

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#392: FILE: drivers/input/touchscreen/ad7879.c:292:
+	ret = strict_strtoul(buf, 10, &val);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions '0664' used
#403: FILE: drivers/input/touchscreen/ad7879.c:303:
+}

The permissions used in DEVICE_ATTR are unusual.
Typically only three permissions are used - 0644 (RW), 0444 (RO)
and 0200 (WO).

See: https://www.kernel.org/doc/html/latest/filesystems/sysfs.html#attributes

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#408: FILE: drivers/input/touchscreen/ad7879.c:308:
+static ssize_t ad7879_gpio_show(struct device *dev,
+				     struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#416: FILE: drivers/input/touchscreen/ad7879.c:316:
+static ssize_t ad7879_gpio_store(struct device *dev,
+				     struct device_attribute *attr,

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#423: FILE: drivers/input/touchscreen/ad7879.c:323:
+	ret = strict_strtoul(buf, 10, &val);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#430: FILE: drivers/input/touchscreen/ad7879.c:330:
+	ret = ad7879_write(ts->bus, AD7879_REG_CTRL2,
+			ts->gpio ? ts->cmd_crtl2 & ~AD7879_GPIO_DATA

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions '0664' used
#437: FILE: drivers/input/touchscreen/ad7879.c:337:
+}

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#476: FILE: drivers/input/touchscreen/ad7879.c:376:
+static int __devinit ad7879_construct(bus_device *bus, struct ad7879 *ts)

CHECK:SPACING: No space is necessary after a cast
#499: FILE: drivers/input/touchscreen/ad7879.c:399:
+	setup_timer(&ts->timer, ad7879_timer, (unsigned long) ts);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#530: FILE: drivers/input/touchscreen/ad7879.c:430:
+	input_set_abs_params(input_dev, ABS_X,
+			pdata->x_min ? : 0,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#534: FILE: drivers/input/touchscreen/ad7879.c:434:
+	input_set_abs_params(input_dev, ABS_Y,
+			pdata->y_min ? : 0,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#538: FILE: drivers/input/touchscreen/ad7879.c:438:
+	input_set_abs_params(input_dev, ABS_PRESSURE,
+			pdata->pressure_min, pdata->pressure_max, 0, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#574: FILE: drivers/input/touchscreen/ad7879.c:474:
+	dev_info(&bus->dev, "Rev.%d touchscreen, irq %d\n",
+		revid >> 8, bus->irq);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#588: FILE: drivers/input/touchscreen/ad7879.c:488:
+static int __devexit ad7879_destruct(bus_device *bus, struct ad7879 *ts)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#592: FILE: drivers/input/touchscreen/ad7879.c:492:
+	ad7879_write(ts->bus, AD7879_REG_CTRL2,
+			AD7879_PM(AD7879_PM_SHUTDOWN));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#608: FILE: drivers/input/touchscreen/ad7879.c:508:
+	ad7879_write(bus, AD7879_REG_CTRL2,
+			AD7879_PM(AD7879_PM_SHUTDOWN));

CHECK:BIT_MACRO: Prefer using the BIT macro
#630: FILE: drivers/input/touchscreen/ad7879.c:530:
+#define AD7879_CMD_READ		(1 << 10)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#631: FILE: drivers/input/touchscreen/ad7879.c:531:
+#define AD7879_WRITECMD(reg)  ^I(AD7879_CMD_MAGIC | (reg & 0xF))$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#631: FILE: drivers/input/touchscreen/ad7879.c:531:
+#define AD7879_WRITECMD(reg)  	(AD7879_CMD_MAGIC | (reg & 0xF))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#632: FILE: drivers/input/touchscreen/ad7879.c:532:
+#define AD7879_READCMD(reg)  ^I(AD7879_CMD_MAGIC | AD7879_CMD_READ | (reg & 0xF))$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#632: FILE: drivers/input/touchscreen/ad7879.c:532:
+#define AD7879_READCMD(reg)  	(AD7879_CMD_MAGIC | AD7879_CMD_READ | (reg & 0xF))

WARNING:SIZEOF_PARENTHESIS: sizeof *req should be sizeof(*req)
#648: FILE: drivers/input/touchscreen/ad7879.c:548:
+	struct ser_req *req = kzalloc(sizeof *req, GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#656: FILE: drivers/input/touchscreen/ad7879.c:556:
+	req->command = (u16) AD7879_READCMD(reg);

WARNING:SIZEOF_PARENTHESIS: sizeof *req should be sizeof(*req)
#679: FILE: drivers/input/touchscreen/ad7879.c:579:
+	struct ser_req *req = kzalloc(sizeof *req, GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#687: FILE: drivers/input/touchscreen/ad7879.c:587:
+	req->command = (u16) AD7879_WRITECMD(reg);

WARNING:LINE_SPACING: Missing a blank line after declarations
#711: FILE: drivers/input/touchscreen/ad7879.c:611:
+	int status = spi_sync(ts->bus, &ts->msg);
+	if (status)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#720: FILE: drivers/input/touchscreen/ad7879.c:620:
+	ts->cmd = (u16) AD7879_READCMD(AD7879_REG_XPLUS);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#736: FILE: drivers/input/touchscreen/ad7879.c:636:
+static int __devinit ad7879_probe(struct spi_device *spi)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ts)...) over kzalloc(sizeof(struct ad7879)...)
#747: FILE: drivers/input/touchscreen/ad7879.c:647:
+	ts = kzalloc(sizeof(struct ad7879), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#766: FILE: drivers/input/touchscreen/ad7879.c:666:
+static int __devexit ad7879_remove(struct spi_device *spi)

WARNING:LINE_SPACING: Missing a blank line after declarations
#818: FILE: drivers/input/touchscreen/ad7879.c:718:
+	int i;
+	for (i = 0; i < AD7879_NR_SENSE; i++)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#823: FILE: drivers/input/touchscreen/ad7879.c:723:
+static int __devinit ad7879_probe(struct i2c_client *client,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#824: FILE: drivers/input/touchscreen/ad7879.c:724:
+static int __devinit ad7879_probe(struct i2c_client *client,
+					const struct i2c_device_id *id)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#830: FILE: drivers/input/touchscreen/ad7879.c:730:
+	if (!i2c_check_functionality(client->adapter,
+					I2C_FUNC_SMBUS_WORD_DATA)) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ts)...) over kzalloc(sizeof(struct ad7879)...)
#835: FILE: drivers/input/touchscreen/ad7879.c:735:
+	ts = kzalloc(sizeof(struct ad7879), GFP_KERNEL);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#852: FILE: drivers/input/touchscreen/ad7879.c:752:
+static int __devexit ad7879_remove(struct i2c_client *client)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#861: FILE: drivers/input/touchscreen/ad7879.c:761:
+}
+static const struct i2c_device_id ad7979_id[] = {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#876: FILE: drivers/input/touchscreen/ad7879.c:776:
+^I.id_table ^I= ad7979_id,$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#901: FILE: include/linux/spi/ad7879.h:1:
+/* linux/spi/ad7879.h */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000216213.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 32 warnings, 73 checks, 869 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000216213.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
