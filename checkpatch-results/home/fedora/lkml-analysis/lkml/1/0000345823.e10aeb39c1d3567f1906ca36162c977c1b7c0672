WARNING:BAD_SIGN_OFF: Duplicate signature
#36: 
Signed-off-by: Jon Smirl <jonsmirl@gmail.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Duplicate signature
#38: 
Signed-off-by: Jon Smirl <jonsmirl@gmail.com>

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#57: FILE: drivers/i2c/i2c-core.c:50:
+static const struct i2c_device_id *i2c_device_match(const struct i2c_device_id *id, struct i2c_client *client)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#60: FILE: drivers/i2c/i2c-core.c:53:
+	 * it is empty on other platforms */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct i2c_client *' should also have an identifier name
#129: FILE: include/linux/i2c.h:129:
+	int (*probe)(struct i2c_client *, const struct i2c_device_id *id);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#175: FILE: include/linux/mod_devicetable.h:373:
+ * drivers into their own namespace */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#176: FILE: include/linux/mod_devicetable.h:374:
+#define I2C_NAME_SIZE	(16*3)
                      	   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#180: FILE: include/linux/mod_devicetable.h:378:
+#define I2C_OF_MODULE_PREFIX I2C_MODULE_PREFIX OF_I2C_PREFIX

ERROR:SPACING: space required after that ',' (ctx:VxV)
#181: FILE: include/linux/mod_devicetable.h:379:
+#define OF_I2C_ID(s,d) {OF_I2C_PREFIX s, (d) },
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#183: FILE: include/linux/mod_devicetable.h:381:
+#define OF_I2C_ID(s,d)
                    ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#191: FILE: include/linux/mod_devicetable.h:389:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: scripts/mod/file2alias.c:544:
+static int do_i2c_entry(const char *filename, struct i2c_device_id *id,
+			   char *alias)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: scripts/mod/file2alias.c:546:
+    char *tmp;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#206: FILE: scripts/mod/file2alias.c:547:
+    char *tmp;
+    sprintf (alias, I2C_MODULE_PREFIX "%s", id->name);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: scripts/mod/file2alias.c:547:
+    sprintf (alias, I2C_MODULE_PREFIX "%s", id->name);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#206: FILE: scripts/mod/file2alias.c:547:
+    sprintf (alias, I2C_MODULE_PREFIX "%s", id->name);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: scripts/mod/file2alias.c:550:
+    for (tmp = alias; tmp && *tmp; tmp++)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: scripts/mod/file2alias.c:551:
+        if (isspace (*tmp))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: scripts/mod/file2alias.c:551:
+        if (isspace (*tmp))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#210: FILE: scripts/mod/file2alias.c:551:
+        if (isspace (*tmp))
+            *tmp = '_';

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#210: FILE: scripts/mod/file2alias.c:551:
+        if (isspace (*tmp))

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: scripts/mod/file2alias.c:552:
+            *tmp = '_';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: scripts/mod/file2alias.c:552:
+            *tmp = '_';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: scripts/mod/file2alias.c:554:
+    return 1;$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000345823.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 16 warnings, 3 checks, 155 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000345823.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
