WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
This adds a small module to handle the low level details of dealing with the

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#50: FILE: powerpc/kernel/cpu/pll_if.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#68: FILE: powerpc/kernel/cpu/pll_if.c:19:
+ *  with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#69: FILE: powerpc/kernel/cpu/pll_if.c:20:
+ *  59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/processor.h> instead of <asm/processor.h>
#93: FILE: powerpc/kernel/cpu/pll_if.c:44:
+#include <asm/processor.h>

WARNING:INCLUDE_LINUX: Use #include <linux/pgtable.h> instead of <asm/pgtable.h>
#94: FILE: powerpc/kernel/cpu/pll_if.c:45:
+#include <asm/pgtable.h>

WARNING:INCLUDE_LINUX: Use #include <linux/smp.h> instead of <asm/smp.h>
#99: FILE: powerpc/kernel/cpu/pll_if.c:50:
+#include <asm/smp.h>

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#107: FILE: powerpc/kernel/cpu/pll_if.c:58:
+static unsigned int busclock = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#110: FILE: powerpc/kernel/cpu/pll_if.c:61:
+MODULE_PARM_DESC(busclock,
+	"Bus clock frequency in KHz used to compute core clock frequency from"

WARNING:SPLIT_STRING: quoted string split across lines
#111: FILE: powerpc/kernel/cpu/pll_if.c:62:
+	"Bus clock frequency in KHz used to compute core clock frequency from"
+	" bus ratios.");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:CAMELCASE: Avoid CamelCase: <newPLL>
#123: FILE: powerpc/kernel/cpu/pll_if.c:74:
+static void pllif_i_timer_f(unsigned long newPLL);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#139: FILE: powerpc/kernel/cpu/pll_if.c:90:
+static ssize_t __used store_ppc750gxpll(struct sys_device *dev,
+	const char *buf, size_t count)

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#144: FILE: powerpc/kernel/cpu/pll_if.c:95:
+	pr_debug(__FILE__">%s()-%d:  buf=%s, count=%d\n", __func__, __LINE__,

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#145: FILE: powerpc/kernel/cpu/pll_if.c:96:
+	pr_debug(__FILE__">%s()-%d:  buf=%s, count=%d\n", __func__, __LINE__,
+		buf, count);

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#147: FILE: powerpc/kernel/cpu/pll_if.c:98:
+	ret = strict_strtoul(buf, 16, &pll_ul);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#149: FILE: powerpc/kernel/cpu/pll_if.c:100:
+	pr_debug(__FILE__">%s()-%d:  strict_strtoul() returns %d\n", __func__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: powerpc/kernel/cpu/pll_if.c:101:
+	pr_debug(__FILE__">%s()-%d:  strict_strtoul() returns %d\n", __func__,
+		__LINE__, ret);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#151: FILE: powerpc/kernel/cpu/pll_if.c:102:
+	pr_debug(__FILE__">%s()-%d:  %lx (%lu)\n", __func__, __LINE__, pll_ul,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#152: FILE: powerpc/kernel/cpu/pll_if.c:103:
+	pr_debug(__FILE__">%s()-%d:  %lx (%lu)\n", __func__, __LINE__, pll_ul,
+		pll_ul);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#202: FILE: powerpc/kernel/cpu/pll_if.c:153:
+		pllif_bus_clock = busclock*1000;
 		                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#214: FILE: powerpc/kernel/cpu/pll_if.c:165:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#217: FILE: powerpc/kernel/cpu/pll_if.c:168:
+			clk = of_get_property(tree_root, "clock-frequency",
+				NULL);

CHECK:SPACING: No space is necessary after a cast
#220: FILE: powerpc/kernel/cpu/pll_if.c:171:
+				pllif_bus_clock = (unsigned int) *clk;

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#224: FILE: powerpc/kernel/cpu/pll_if.c:175:
+			pr_debug(__FILE__">%s()-%d:  Bus clock from OF is %u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#225: FILE: powerpc/kernel/cpu/pll_if.c:176:
+			pr_debug(__FILE__">%s()-%d:  Bus clock from OF is %u\n",
+				__func__, __LINE__, pllif_bus_clock);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#231: FILE: powerpc/kernel/cpu/pll_if.c:182:
+		pr_err(__FILE__">%s()-%d:  Can't determine bus clock.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#232: FILE: powerpc/kernel/cpu/pll_if.c:183:
+		pr_err(__FILE__">%s()-%d:  Can't determine bus clock.\n",
+			__func__, __LINE__);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#251: FILE: powerpc/kernel/cpu/pll_if.c:202:
+		temp = (temp-10)<<1;
 		            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#251: FILE: powerpc/kernel/cpu/pll_if.c:202:
+		temp = (temp-10)<<1;
 		                ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sysdev_cpu"
#261: FILE: powerpc/kernel/cpu/pll_if.c:212:
+	if (sysdev_cpu != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sysdev_cpu"
#281: FILE: powerpc/kernel/cpu/pll_if.c:232:
+	if (sysdev_cpu != NULL)

CHECK:CAMELCASE: Avoid CamelCase: <oldRatio>
#298: FILE: powerpc/kernel/cpu/pll_if.c:249:
+static unsigned long pllif_i_new_LPJ(unsigned int oldRatio, unsigned int

CHECK:CAMELCASE: Avoid CamelCase: <newRatio>
#299: FILE: powerpc/kernel/cpu/pll_if.c:250:
+	newRatio, unsigned long LPJ)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#302: FILE: powerpc/kernel/cpu/pll_if.c:253:
+		return LPJ/oldRatio*newRatio;
 		          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#302: FILE: powerpc/kernel/cpu/pll_if.c:253:
+		return LPJ/oldRatio*newRatio;
 		                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#304: FILE: powerpc/kernel/cpu/pll_if.c:255:
+		return LPJ*newRatio/oldRatio;
 		          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#304: FILE: powerpc/kernel/cpu/pll_if.c:255:
+		return LPJ*newRatio/oldRatio;
 		                   ^

CHECK:CAMELCASE: Avoid CamelCase: <pllif_i_switch_PLLs>
#316: FILE: powerpc/kernel/cpu/pll_if.c:267:
+static void pllif_i_switch_PLLs(unsigned int newPLL)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#318: FILE: powerpc/kernel/cpu/pll_if.c:269:
+#if 0

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#327: FILE: powerpc/kernel/cpu/pll_if.c:278:
+	pr_debug(__FILE__">%s()-%d:  newPLL=0x%08x\n", __func__, __LINE__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#328: FILE: powerpc/kernel/cpu/pll_if.c:279:
+	pr_debug(__FILE__">%s()-%d:  newPLL=0x%08x\n", __func__, __LINE__,
+		newPLL);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#336: FILE: powerpc/kernel/cpu/pll_if.c:287:
+	masked_boot_ratio = boot_ratio&0xff;
 	                              ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#339: FILE: powerpc/kernel/cpu/pll_if.c:290:
+	pr_debug(__FILE__">%s()-%d:  current_pll=0x%08x, new=%d, old=%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#340: FILE: powerpc/kernel/cpu/pll_if.c:291:
+	pr_debug(__FILE__">%s()-%d:  current_pll=0x%08x, new=%d, old=%d\n",
+		__func__, __LINE__, current_pll, new_ratio, old_ratio);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#342: FILE: powerpc/kernel/cpu/pll_if.c:293:
+	current_pll = (current_pll&~PLL_SEL_MASK)|(newPLL&PLL_SEL_MASK);
 	                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#342: FILE: powerpc/kernel/cpu/pll_if.c:293:
+	current_pll = (current_pll&~PLL_SEL_MASK)|(newPLL&PLL_SEL_MASK);
 	                                         ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#342: FILE: powerpc/kernel/cpu/pll_if.c:293:
+	current_pll = (current_pll&~PLL_SEL_MASK)|(newPLL&PLL_SEL_MASK);
 	                                                 ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#344: FILE: powerpc/kernel/cpu/pll_if.c:295:
+	pr_debug(__FILE__">%s()-%d:  current_pll=0x%08x, new=%d, old=%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#345: FILE: powerpc/kernel/cpu/pll_if.c:296:
+	pr_debug(__FILE__">%s()-%d:  current_pll=0x%08x, new=%d, old=%d\n",
+		__func__, __LINE__, current_pll, new_ratio, old_ratio);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#351: FILE: powerpc/kernel/cpu/pll_if.c:302:
+		new_ratio = (new_ratio-10)<<1;
 		                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#351: FILE: powerpc/kernel/cpu/pll_if.c:302:
+		new_ratio = (new_ratio-10)<<1;
 		                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#353: FILE: powerpc/kernel/cpu/pll_if.c:304:
+		old_ratio = (old_ratio-10)<<1;
 		                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#353: FILE: powerpc/kernel/cpu/pll_if.c:304:
+		old_ratio = (old_ratio-10)<<1;
 		                          ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#359: FILE: powerpc/kernel/cpu/pll_if.c:310:
+		if (newPLL&PLL_DO_LPJ)
 		          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#361: FILE: powerpc/kernel/cpu/pll_if.c:312:
+			pllif_i_update_LPJ(masked_boot_ratio, new_ratio,
+				boot_loops);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#363: FILE: powerpc/kernel/cpu/pll_if.c:314:
+		pr_debug(__FILE__">%s()-%d:  masked_boot_ratio=%d, new_ratio="

WARNING:SPLIT_STRING: quoted string split across lines
#364: FILE: powerpc/kernel/cpu/pll_if.c:315:
+		pr_debug(__FILE__">%s()-%d:  masked_boot_ratio=%d, new_ratio="
+		"%d, boot_loops=%ld, loops_per_jiffy=%ld\n", __func__, __LINE__,

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#369: FILE: powerpc/kernel/cpu/pll_if.c:320:
+		pr_debug(__FILE__">%s()-%d:  masked_boot_ratio=%d, new_"

WARNING:SPLIT_STRING: quoted string split across lines
#370: FILE: powerpc/kernel/cpu/pll_if.c:321:
+		pr_debug(__FILE__">%s()-%d:  masked_boot_ratio=%d, new_"
+			"ratio=%d, boot_loops=%ld, loops_per_jiffy=%ld\n",

WARNING:MISSING_SPACE: break quoted strings at a space character
#370: FILE: powerpc/kernel/cpu/pll_if.c:321:
+		pr_debug(__FILE__">%s()-%d:  masked_boot_ratio=%d, new_"
+			"ratio=%d, boot_loops=%ld, loops_per_jiffy=%ld\n",

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#376: FILE: powerpc/kernel/cpu/pll_if.c:327:
+		if (newPLL&PLL_DO_LPJ)
 		          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#378: FILE: powerpc/kernel/cpu/pll_if.c:329:
+			pllif_i_update_LPJ(masked_boot_ratio, new_ratio,
+				boot_loops);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#380: FILE: powerpc/kernel/cpu/pll_if.c:331:
+		pr_debug(__FILE__">%s()-%d:  masked_boot_ratio=%d, new_"

WARNING:SPLIT_STRING: quoted string split across lines
#381: FILE: powerpc/kernel/cpu/pll_if.c:332:
+		pr_debug(__FILE__">%s()-%d:  masked_boot_ratio=%d, new_"
+			"ratio=%d, boot_loops=%ld, loops_per_jiffy=%ld\n",

WARNING:MISSING_SPACE: break quoted strings at a space character
#381: FILE: powerpc/kernel/cpu/pll_if.c:332:
+		pr_debug(__FILE__">%s()-%d:  masked_boot_ratio=%d, new_"
+			"ratio=%d, boot_loops=%ld, loops_per_jiffy=%ld\n",

CHECK:CAMELCASE: Avoid CamelCase: <pllifmPllSwitch>
#386: FILE: powerpc/kernel/cpu/pll_if.c:337:
+	raw_notifier_call_chain(&pllif_pll_switch_chain, pllifmPllSwitch,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#387: FILE: powerpc/kernel/cpu/pll_if.c:338:
+	raw_notifier_call_chain(&pllif_pll_switch_chain, pllifmPllSwitch,
+		pllif_switch_call_data.data);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#393: FILE: powerpc/kernel/cpu/pll_if.c:344:
+	pr_debug(__FILE__">%s()-%d:  pllif_cfg_to_freq(%u)=%lu\n", __func__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#394: FILE: powerpc/kernel/cpu/pll_if.c:345:
+	pr_debug(__FILE__">%s()-%d:  pllif_cfg_to_freq(%u)=%lu\n", __func__,
+		__LINE__, new_ratio_cp, ppc_proc_freq);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#396: FILE: powerpc/kernel/cpu/pll_if.c:347:
+#if 0

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#401: FILE: powerpc/kernel/cpu/pll_if.c:352:
+	loops_per_jiffy = pllif_i_new_LPJ(masked_boot_ratio, new_ratio,
+		boot_loops);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#418: FILE: powerpc/kernel/cpu/pll_if.c:369:
+	now = now-pll_time_stamp;
 	         ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#428: FILE: powerpc/kernel/cpu/pll_if.c:379:
+				 * look right ... ??? */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#428: FILE: powerpc/kernel/cpu/pll_if.c:379:
+	cnttz = tb_ticks_per_sec; /* needed to get the assembly to ...
+				 * look right ... ??? */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#429: FILE: powerpc/kernel/cpu/pll_if.c:380:
+	tmp = now*15625;
 	         ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#431: FILE: powerpc/kernel/cpu/pll_if.c:382:
+	asm (

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#436: FILE: powerpc/kernel/cpu/pll_if.c:387:
+		"cntlzw %0,%2\n\t":
 		                  ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#437: FILE: powerpc/kernel/cpu/pll_if.c:388:
+		"=r"(cntlz), "=r"(cnttz):
 		                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#444: FILE: powerpc/kernel/cpu/pll_if.c:395:
+	usec = ((tmp<<cntlz)/(tb_ticks_per_sec>>cnttz))<<6;
 	            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#444: FILE: powerpc/kernel/cpu/pll_if.c:395:
+	usec = ((tmp<<cntlz)/(tb_ticks_per_sec>>cnttz))<<6;
 	                    ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#444: FILE: powerpc/kernel/cpu/pll_if.c:395:
+	usec = ((tmp<<cntlz)/(tb_ticks_per_sec>>cnttz))<<6;
 	                                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#444: FILE: powerpc/kernel/cpu/pll_if.c:395:
+	usec = ((tmp<<cntlz)/(tb_ticks_per_sec>>cnttz))<<6;
 	                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#445: FILE: powerpc/kernel/cpu/pll_if.c:396:
+	usec = (usec+(1UL<<(cntlz+cnttz-1)))>>(cntlz+cnttz);
 	            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#445: FILE: powerpc/kernel/cpu/pll_if.c:396:
+	usec = (usec+(1UL<<(cntlz+cnttz-1)))>>(cntlz+cnttz);
 	                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#445: FILE: powerpc/kernel/cpu/pll_if.c:396:
+	usec = (usec+(1UL<<(cntlz+cnttz-1)))>>(cntlz+cnttz);
 	                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#445: FILE: powerpc/kernel/cpu/pll_if.c:396:
+	usec = (usec+(1UL<<(cntlz+cnttz-1)))>>(cntlz+cnttz);
 	                               ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#445: FILE: powerpc/kernel/cpu/pll_if.c:396:
+	usec = (usec+(1UL<<(cntlz+cnttz-1)))>>(cntlz+cnttz);
 	                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#445: FILE: powerpc/kernel/cpu/pll_if.c:396:
+	usec = (usec+(1UL<<(cntlz+cnttz-1)))>>(cntlz+cnttz);
 	                                            ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#447: FILE: powerpc/kernel/cpu/pll_if.c:398:
+	pr_debug(__FILE__">%s()-%d:  Time delta is %lu cycles, "

WARNING:SPLIT_STRING: quoted string split across lines
#448: FILE: powerpc/kernel/cpu/pll_if.c:399:
+	pr_debug(__FILE__">%s()-%d:  Time delta is %lu cycles, "
+		"%lu uS (cntlz=%lu, cnttz=%lu)\n", __func__, __LINE__, now,

CHECK:CAMELCASE: Avoid CamelCase: <pllifmPllLock>
#451: FILE: powerpc/kernel/cpu/pll_if.c:402:
+	raw_notifier_call_chain(&pllif_pll_lock_chain, pllifmPllLock,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#452: FILE: powerpc/kernel/cpu/pll_if.c:403:
+	raw_notifier_call_chain(&pllif_pll_lock_chain, pllifmPllLock,
+		pllif_lock_call_data.data);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#457: FILE: powerpc/kernel/cpu/pll_if.c:408:
+	boot_ratio &= ~(PLL_TIMER|PLL0_LOCK|PLL1_LOCK);
 	                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#457: FILE: powerpc/kernel/cpu/pll_if.c:408:
+	boot_ratio &= ~(PLL_TIMER|PLL0_LOCK|PLL1_LOCK);
 	                                   ^

CHECK:SPACING: No space is necessary after a cast
#459: FILE: powerpc/kernel/cpu/pll_if.c:410:
+	if ((unsigned int) hrtimers_got_no_freakin_callback_data)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#473: FILE: powerpc/kernel/cpu/pll_if.c:424:
+	now = now-pll_time_stamp;
 	         ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#487: FILE: powerpc/kernel/cpu/pll_if.c:438:
+					 * look right ... ??? */

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#487: FILE: powerpc/kernel/cpu/pll_if.c:438:
+		cnttz = tb_ticks_per_sec; /* needed to get the assembly to ...
+					 * look right ... ??? */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#490: FILE: powerpc/kernel/cpu/pll_if.c:441:
+		tmp = now*15625;
 		         ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#495: FILE: powerpc/kernel/cpu/pll_if.c:446:
+		asm (

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#500: FILE: powerpc/kernel/cpu/pll_if.c:451:
+			"cntlzw %0,%2\n\t":
 			                  ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#501: FILE: powerpc/kernel/cpu/pll_if.c:452:
+			"=r"(cntlz), "=r"(cnttz):
 			                        ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#509: FILE: powerpc/kernel/cpu/pll_if.c:460:
+/*		usec = (((now<<cntlz)/(tb_ticks_per_sec>>cnttz)*15625)+(1UL<<
+			(cntlz+cnttz-1-6)))>>(cntlz+cnttz-6); */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#509: FILE: powerpc/kernel/cpu/pll_if.c:460:
+			(cntlz+cnttz-1-6)))>>(cntlz+cnttz-6); */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#511: FILE: powerpc/kernel/cpu/pll_if.c:462:
+		usec = ((tmp<<cntlz)/(tb_ticks_per_sec>>cnttz))<<6;
 		            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#511: FILE: powerpc/kernel/cpu/pll_if.c:462:
+		usec = ((tmp<<cntlz)/(tb_ticks_per_sec>>cnttz))<<6;
 		                    ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#511: FILE: powerpc/kernel/cpu/pll_if.c:462:
+		usec = ((tmp<<cntlz)/(tb_ticks_per_sec>>cnttz))<<6;
 		                                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#511: FILE: powerpc/kernel/cpu/pll_if.c:462:
+		usec = ((tmp<<cntlz)/(tb_ticks_per_sec>>cnttz))<<6;
 		                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#512: FILE: powerpc/kernel/cpu/pll_if.c:463:
+		usec = (usec+(1UL<<(cntlz+cnttz-1)))>>(cntlz+cnttz);
 		            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#512: FILE: powerpc/kernel/cpu/pll_if.c:463:
+		usec = (usec+(1UL<<(cntlz+cnttz-1)))>>(cntlz+cnttz);
 		                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#512: FILE: powerpc/kernel/cpu/pll_if.c:463:
+		usec = (usec+(1UL<<(cntlz+cnttz-1)))>>(cntlz+cnttz);
 		                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#512: FILE: powerpc/kernel/cpu/pll_if.c:463:
+		usec = (usec+(1UL<<(cntlz+cnttz-1)))>>(cntlz+cnttz);
 		                               ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#512: FILE: powerpc/kernel/cpu/pll_if.c:463:
+		usec = (usec+(1UL<<(cntlz+cnttz-1)))>>(cntlz+cnttz);
 		                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#512: FILE: powerpc/kernel/cpu/pll_if.c:463:
+		usec = (usec+(1UL<<(cntlz+cnttz-1)))>>(cntlz+cnttz);
 		                                            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#514: FILE: powerpc/kernel/cpu/pll_if.c:465:
+		usec = ((tmp<<cntlz)/(tb_ticks_per_sec>>cnttz)*15625)<<6;
 		            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#514: FILE: powerpc/kernel/cpu/pll_if.c:465:
+		usec = ((tmp<<cntlz)/(tb_ticks_per_sec>>cnttz)*15625)<<6;
 		                    ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#514: FILE: powerpc/kernel/cpu/pll_if.c:465:
+		usec = ((tmp<<cntlz)/(tb_ticks_per_sec>>cnttz)*15625)<<6;
 		                                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#514: FILE: powerpc/kernel/cpu/pll_if.c:465:
+		usec = ((tmp<<cntlz)/(tb_ticks_per_sec>>cnttz)*15625)<<6;
 		                                              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#514: FILE: powerpc/kernel/cpu/pll_if.c:465:
+		usec = ((tmp<<cntlz)/(tb_ticks_per_sec>>cnttz)*15625)<<6;
 		                                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#515: FILE: powerpc/kernel/cpu/pll_if.c:466:
+		usec = (usec+(1UL<<(cntlz+cnttz-1)))>>(cntlz+cnttz);
 		            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#515: FILE: powerpc/kernel/cpu/pll_if.c:466:
+		usec = (usec+(1UL<<(cntlz+cnttz-1)))>>(cntlz+cnttz);
 		                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#515: FILE: powerpc/kernel/cpu/pll_if.c:466:
+		usec = (usec+(1UL<<(cntlz+cnttz-1)))>>(cntlz+cnttz);
 		                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#515: FILE: powerpc/kernel/cpu/pll_if.c:466:
+		usec = (usec+(1UL<<(cntlz+cnttz-1)))>>(cntlz+cnttz);
 		                               ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#515: FILE: powerpc/kernel/cpu/pll_if.c:466:
+		usec = (usec+(1UL<<(cntlz+cnttz-1)))>>(cntlz+cnttz);
 		                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#515: FILE: powerpc/kernel/cpu/pll_if.c:466:
+		usec = (usec+(1UL<<(cntlz+cnttz-1)))>>(cntlz+cnttz);
 		                                            ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#518: FILE: powerpc/kernel/cpu/pll_if.c:469:
+		pr_debug(__FILE__">%s()-%d:  Time delta is %lu cycles, "

WARNING:SPLIT_STRING: quoted string split across lines
#519: FILE: powerpc/kernel/cpu/pll_if.c:470:
+		pr_debug(__FILE__">%s()-%d:  Time delta is %lu cycles, "
+			"%lu uS (cntlz=%lu, cnttz=%lu)\n", __func__, __LINE__,

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#536: FILE: powerpc/kernel/cpu/pll_if.c:487:
+	if ((now<<4)*5 < tb_ticks_per_sec/125)
 	        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#536: FILE: powerpc/kernel/cpu/pll_if.c:487:
+	if ((now<<4)*5 < tb_ticks_per_sec/125)
 	            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#536: FILE: powerpc/kernel/cpu/pll_if.c:487:
+	if ((now<<4)*5 < tb_ticks_per_sec/125)
 	                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#537: FILE: powerpc/kernel/cpu/pll_if.c:488:
+		udelay(100-now*1000000/tb_ticks_per_sec);
 		          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#537: FILE: powerpc/kernel/cpu/pll_if.c:488:
+		udelay(100-now*1000000/tb_ticks_per_sec);
 		              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#537: FILE: powerpc/kernel/cpu/pll_if.c:488:
+		udelay(100-now*1000000/tb_ticks_per_sec);
 		                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#540: FILE: powerpc/kernel/cpu/pll_if.c:491:
+	raw_notifier_call_chain(&pllif_pll_lock_chain, pllifmPllLock,
+		pllif_lock_call_data.data);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#545: FILE: powerpc/kernel/cpu/pll_if.c:496:
+	boot_ratio &= ~(PLL_TIMER|PLL0_LOCK|PLL1_LOCK);
 	                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#545: FILE: powerpc/kernel/cpu/pll_if.c:496:
+	boot_ratio &= ~(PLL_TIMER|PLL0_LOCK|PLL1_LOCK);
 	                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <scaleLPJ>
#575: FILE: powerpc/kernel/cpu/pll_if.c:526:
+int pllif_modify_PLL(unsigned int pll, int scaleLPJ)

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#580: FILE: powerpc/kernel/cpu/pll_if.c:531:
+	pr_debug(__FILE__">%s()-%d:\n", __func__, __LINE__);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#581: FILE: powerpc/kernel/cpu/pll_if.c:532:
+	pr_debug(__FILE__">%s()-%d:  pll=0x%08x\n", __func__, __LINE__, pll);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#587: FILE: powerpc/kernel/cpu/pll_if.c:538:
+		pr_debug(__FILE__">%s()-%d:  Busy!\n", __func__, __LINE__);

CHECK:CAMELCASE: Avoid CamelCase: <checkPLLBusy>
#595: FILE: powerpc/kernel/cpu/pll_if.c:546:
+		goto checkPLLBusy;

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#600: FILE: powerpc/kernel/cpu/pll_if.c:551:
+	work_mask = pll>>24;
 	               ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#607: FILE: powerpc/kernel/cpu/pll_if.c:558:
+	if ((pll_x == 0 && work_mask&(PLL0_DO_CFG|PLL0_DO_RNG|PLL0_DO_CONTROL))
 	                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#607: FILE: powerpc/kernel/cpu/pll_if.c:558:
+	if ((pll_x == 0 && work_mask&(PLL0_DO_CFG|PLL0_DO_RNG|PLL0_DO_CONTROL))
 	                                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#607: FILE: powerpc/kernel/cpu/pll_if.c:558:
+	if ((pll_x == 0 && work_mask&(PLL0_DO_CFG|PLL0_DO_RNG|PLL0_DO_CONTROL))
 	                                                     ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#608: FILE: powerpc/kernel/cpu/pll_if.c:559:
+	if ((pll_x == 0 && work_mask&(PLL0_DO_CFG|PLL0_DO_RNG|PLL0_DO_CONTROL))
+		|| (pll_x == 1 && work_mask&(PLL1_DO_CFG|PLL1_DO_RNG)))

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#608: FILE: powerpc/kernel/cpu/pll_if.c:559:
+		|| (pll_x == 1 && work_mask&(PLL1_DO_CFG|PLL1_DO_RNG)))
 		                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#608: FILE: powerpc/kernel/cpu/pll_if.c:559:
+		|| (pll_x == 1 && work_mask&(PLL1_DO_CFG|PLL1_DO_RNG)))
 		                                        ^

CHECK:CAMELCASE: Avoid CamelCase: <checkPLLInVal>
#609: FILE: powerpc/kernel/cpu/pll_if.c:560:
+		goto checkPLLInVal;

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#615: FILE: powerpc/kernel/cpu/pll_if.c:566:
+	if (work_mask&PLL_DO_SEL) {
 	             ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#625: FILE: powerpc/kernel/cpu/pll_if.c:576:
+		which_config = pll_x?((work_mask&PLL1_DO_CFG)?pll:current_pll):
 		                    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#625: FILE: powerpc/kernel/cpu/pll_if.c:576:
+		which_config = pll_x?((work_mask&PLL1_DO_CFG)?pll:current_pll):
 		                                ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#625: FILE: powerpc/kernel/cpu/pll_if.c:576:
+		which_config = pll_x?((work_mask&PLL1_DO_CFG)?pll:current_pll):
 		                                             ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#625: FILE: powerpc/kernel/cpu/pll_if.c:576:
+		which_config = pll_x?((work_mask&PLL1_DO_CFG)?pll:current_pll):
 		                                                 ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#625: FILE: powerpc/kernel/cpu/pll_if.c:576:
+		which_config = pll_x?((work_mask&PLL1_DO_CFG)?pll:current_pll):
 		                                                              ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#626: FILE: powerpc/kernel/cpu/pll_if.c:577:
+			((work_mask&PLL0_DO_CFG)?pll:current_pll);
 			           ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#626: FILE: powerpc/kernel/cpu/pll_if.c:577:
+			((work_mask&PLL0_DO_CFG)?pll:current_pll);
 			                        ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#626: FILE: powerpc/kernel/cpu/pll_if.c:577:
+			((work_mask&PLL0_DO_CFG)?pll:current_pll);
 			                            ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#631: FILE: powerpc/kernel/cpu/pll_if.c:582:
+		pll_x = ((pll_x == 0 && boot_ratio&PLL0_LOCK) || (pll_x == 1 &&
 		                                  ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#632: FILE: powerpc/kernel/cpu/pll_if.c:583:
+			boot_ratio&PLL1_LOCK))?1:0;
 			          ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#632: FILE: powerpc/kernel/cpu/pll_if.c:583:
+			boot_ratio&PLL1_LOCK))?1:0;
 			                      ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#632: FILE: powerpc/kernel/cpu/pll_if.c:583:
+			boot_ratio&PLL1_LOCK))?1:0;
 			                        ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#634: FILE: powerpc/kernel/cpu/pll_if.c:585:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#638: FILE: powerpc/kernel/cpu/pll_if.c:589:
+	if (work_mask&PLL0_DO_CFG) {
 	             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#645: FILE: powerpc/kernel/cpu/pll_if.c:596:
+		if (old_ratio1 > 4 && old_ratio1 < 20 && new_ratio0 > 4 &&
+			new_ratio0 < 20 && (old_ratio1&0x1) & (new_ratio0&0x1))

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#645: FILE: powerpc/kernel/cpu/pll_if.c:596:
+			new_ratio0 < 20 && (old_ratio1&0x1) & (new_ratio0&0x1))
 			                              ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#645: FILE: powerpc/kernel/cpu/pll_if.c:596:
+			new_ratio0 < 20 && (old_ratio1&0x1) & (new_ratio0&0x1))
 			                                                 ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#647: FILE: powerpc/kernel/cpu/pll_if.c:598:
+	} else if (work_mask&PLL1_DO_CFG) {
 	                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#654: FILE: powerpc/kernel/cpu/pll_if.c:605:
+		if (old_ratio0 > 4 && old_ratio0 < 20 && new_ratio1 > 4 &&
+			new_ratio1 < 20 && (old_ratio0&0x1) & (new_ratio1&0x1))

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#654: FILE: powerpc/kernel/cpu/pll_if.c:605:
+			new_ratio1 < 20 && (old_ratio0&0x1) & (new_ratio1&0x1))
 			                              ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#654: FILE: powerpc/kernel/cpu/pll_if.c:605:
+			new_ratio1 < 20 && (old_ratio0&0x1) & (new_ratio1&0x1))
 			                                                 ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#664: FILE: powerpc/kernel/cpu/pll_if.c:615:
+	if ((work_mask&(PLL0_DO_CFG|PLL0_DO_RNG|PLL1_DO_CFG|PLL1_DO_RNG|
 	              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#664: FILE: powerpc/kernel/cpu/pll_if.c:615:
+	if ((work_mask&(PLL0_DO_CFG|PLL0_DO_RNG|PLL1_DO_CFG|PLL1_DO_RNG|
 	                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#664: FILE: powerpc/kernel/cpu/pll_if.c:615:
+	if ((work_mask&(PLL0_DO_CFG|PLL0_DO_RNG|PLL1_DO_CFG|PLL1_DO_RNG|
 	                                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#664: FILE: powerpc/kernel/cpu/pll_if.c:615:
+	if ((work_mask&(PLL0_DO_CFG|PLL0_DO_RNG|PLL1_DO_CFG|PLL1_DO_RNG|
 	                                                   ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#664: FILE: powerpc/kernel/cpu/pll_if.c:615:
+	if ((work_mask&(PLL0_DO_CFG|PLL0_DO_RNG|PLL1_DO_CFG|PLL1_DO_RNG|
 	                                                               ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#665: FILE: powerpc/kernel/cpu/pll_if.c:616:
+		PLL0_DO_CONTROL)) || (work_mask&PLL_DO_SEL && pll_x)) {
 		                               ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#670: FILE: powerpc/kernel/cpu/pll_if.c:621:
+		if (work_mask&PLL0_DO_CFG) {
 		             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#679: FILE: powerpc/kernel/cpu/pll_if.c:630:
+		if (work_mask&PLL0_DO_RNG)
 		             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#682: FILE: powerpc/kernel/cpu/pll_if.c:633:
+		if (work_mask&PLL1_DO_CFG) {
 		             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#691: FILE: powerpc/kernel/cpu/pll_if.c:642:
+		if (work_mask&PLL1_DO_RNG)
 		             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#694: FILE: powerpc/kernel/cpu/pll_if.c:645:
+		temp = (current_pll&~pll_mask)|(pll&pll_mask);
 		                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#694: FILE: powerpc/kernel/cpu/pll_if.c:645:
+		temp = (current_pll&~pll_mask)|(pll&pll_mask);
 		                              ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#694: FILE: powerpc/kernel/cpu/pll_if.c:645:
+		temp = (current_pll&~pll_mask)|(pll&pll_mask);
 		                                   ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#713: FILE: powerpc/kernel/cpu/pll_if.c:664:
+		hrtimers_got_no_freakin_callback_data = (work_mask&PLL_DO_SEL)?
 		                                                  ^

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#713: FILE: powerpc/kernel/cpu/pll_if.c:664:
+		hrtimers_got_no_freakin_callback_data = (work_mask&PLL_DO_SEL)?
 		                                                              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#714: FILE: powerpc/kernel/cpu/pll_if.c:665:
+			(PLL_DO_SEL<<24)|(scaleLPJ?PLL_DO_LPJ:0)|(pll&
 			           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#714: FILE: powerpc/kernel/cpu/pll_if.c:665:
+			(PLL_DO_SEL<<24)|(scaleLPJ?PLL_DO_LPJ:0)|(pll&
 			                ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#714: FILE: powerpc/kernel/cpu/pll_if.c:665:
+			(PLL_DO_SEL<<24)|(scaleLPJ?PLL_DO_LPJ:0)|(pll&
 			                          ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#714: FILE: powerpc/kernel/cpu/pll_if.c:665:
+			(PLL_DO_SEL<<24)|(scaleLPJ?PLL_DO_LPJ:0)|(pll&
 			                                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#714: FILE: powerpc/kernel/cpu/pll_if.c:665:
+			(PLL_DO_SEL<<24)|(scaleLPJ?PLL_DO_LPJ:0)|(pll&
 			                                        ^

CHECK:SPACING: space preferred before that '&' (ctx:VxE)
#714: FILE: powerpc/kernel/cpu/pll_if.c:665:
+			(PLL_DO_SEL<<24)|(scaleLPJ?PLL_DO_LPJ:0)|(pll&
 			                                             ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#715: FILE: powerpc/kernel/cpu/pll_if.c:666:
+			PLL_SEL_MASK):0;
 			             ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#731: FILE: powerpc/kernel/cpu/pll_if.c:682:
+		pll_timer.data = (work_mask&PLL_DO_SEL)?(PLL_DO_SEL<<24)|(

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#731: FILE: powerpc/kernel/cpu/pll_if.c:682:
+		pll_timer.data = (work_mask&PLL_DO_SEL)?(PLL_DO_SEL<<24)|(
 		                           ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#731: FILE: powerpc/kernel/cpu/pll_if.c:682:
+		pll_timer.data = (work_mask&PLL_DO_SEL)?(PLL_DO_SEL<<24)|(
 		                                       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#731: FILE: powerpc/kernel/cpu/pll_if.c:682:
+		pll_timer.data = (work_mask&PLL_DO_SEL)?(PLL_DO_SEL<<24)|(
 		                                                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#731: FILE: powerpc/kernel/cpu/pll_if.c:682:
+		pll_timer.data = (work_mask&PLL_DO_SEL)?(PLL_DO_SEL<<24)|(
 		                                                        ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#732: FILE: powerpc/kernel/cpu/pll_if.c:683:
+			scaleLPJ?PLL_DO_LPJ:0)|(pll&PLL_SEL_MASK):0;
 			        ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#732: FILE: powerpc/kernel/cpu/pll_if.c:683:
+			scaleLPJ?PLL_DO_LPJ:0)|(pll&PLL_SEL_MASK):0;
 			                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#732: FILE: powerpc/kernel/cpu/pll_if.c:683:
+			scaleLPJ?PLL_DO_LPJ:0)|(pll&PLL_SEL_MASK):0;
 			                      ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#732: FILE: powerpc/kernel/cpu/pll_if.c:683:
+			scaleLPJ?PLL_DO_LPJ:0)|(pll&PLL_SEL_MASK):0;
 			                           ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#732: FILE: powerpc/kernel/cpu/pll_if.c:683:
+			scaleLPJ?PLL_DO_LPJ:0)|(pll&PLL_SEL_MASK):0;
 			                                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#738: FILE: powerpc/kernel/cpu/pll_if.c:689:
+		pll_timer.expires = (100*HZ/1000000);
 		                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#738: FILE: powerpc/kernel/cpu/pll_if.c:689:
+		pll_timer.expires = (100*HZ/1000000);
 		                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#742: FILE: powerpc/kernel/cpu/pll_if.c:693:
+		pll_timer.expires = jiffies+pll_timer.expires;
 		                           ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#747: FILE: powerpc/kernel/cpu/pll_if.c:698:
+	} else if (work_mask&PLL_DO_SEL) {
 	                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#748: FILE: powerpc/kernel/cpu/pll_if.c:699:
+		pllif_i_switch_PLLs(pll|(scaleLPJ?PLL_DO_LPJ:0));
 		                       ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#748: FILE: powerpc/kernel/cpu/pll_if.c:699:
+		pllif_i_switch_PLLs(pll|(scaleLPJ?PLL_DO_LPJ:0));
 		                                 ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#748: FILE: powerpc/kernel/cpu/pll_if.c:699:
+		pllif_i_switch_PLLs(pll|(scaleLPJ?PLL_DO_LPJ:0));
 		                                            ^

CHECK:CAMELCASE: Avoid CamelCase: <checkPLLOut>
#752: FILE: powerpc/kernel/cpu/pll_if.c:703:
+checkPLLOut:

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#775: FILE: powerpc/kernel/cpu/pll_if.c:726:
+	return (cfg < 21?cfg>>1:cfg-10)*pllif_bus_clock;
 	                ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#775: FILE: powerpc/kernel/cpu/pll_if.c:726:
+	return (cfg < 21?cfg>>1:cfg-10)*pllif_bus_clock;
 	                    ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#775: FILE: powerpc/kernel/cpu/pll_if.c:726:
+	return (cfg < 21?cfg>>1:cfg-10)*pllif_bus_clock;
 	                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#775: FILE: powerpc/kernel/cpu/pll_if.c:726:
+	return (cfg < 21?cfg>>1:cfg-10)*pllif_bus_clock;
 	                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#775: FILE: powerpc/kernel/cpu/pll_if.c:726:
+	return (cfg < 21?cfg>>1:cfg-10)*pllif_bus_clock;
 	                               ^

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - unsigned int pllif_get_bus_clock() should probably be unsigned int pllif_get_bus_clock(void)
#785: FILE: powerpc/kernel/cpu/pll_if.c:736:
+unsigned int pllif_get_bus_clock()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#862: FILE: asm-powerpc/pll.h:1:
+#ifndef __PLL_H

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#865: FILE: asm-powerpc/pll.h:4:
+/*
+	Dual PLL functions, for 750FX & 750GX

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#879: FILE: asm-powerpc/pll.h:18:
+^Ialong with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#880: FILE: asm-powerpc/pll.h:19:
+^IFoundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#883: FILE: asm-powerpc/pll.h:22:
+/*
+	Tue, June 14, 2005.

WARNING:INCLUDE_LINUX: Use #include <linux/processor.h> instead of <asm/processor.h>
#891: FILE: asm-powerpc/pll.h:30:
+#include <asm/processor.h>

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#894: FILE: asm-powerpc/pll.h:33:
+/*
+	The layout of the PLL register (HID1) is:

ERROR:CODE_INDENT: code indent should use tabs where possible
#898: FILE: asm-powerpc/pll.h:37:
+^I         | |             |                   |$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#944: FILE: asm-powerpc/pll.h:83:
+static inline volatile unsigned int get_PLL(void)

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#948: FILE: asm-powerpc/pll.h:87:
+	__asm__ __volatile__ ("mfspr %0,%1":
 	                                   ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#949: FILE: asm-powerpc/pll.h:88:
+		"=r"(ret):
 		         ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#970: FILE: asm-powerpc/pll.h:109:
+	__asm__ __volatile__ ("rlwinm %0,%0,8,31,31":
 	                                            ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#971: FILE: asm-powerpc/pll.h:110:
+		"=r"(ret):
 		         ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#992: FILE: asm-powerpc/pll.h:131:
+	__asm__ __volatile__ ("rlwinm %0,%0,16,31,31":
 	                                             ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#993: FILE: asm-powerpc/pll.h:132:
+		"=r"(ret):
 		         ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1017: FILE: asm-powerpc/pll.h:156:
+	__asm__ __volatile__ (

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#1020: FILE: asm-powerpc/pll.h:159:
+		"rlwnm %0,%1,%0,27,31\n":
 		                        ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#1021: FILE: asm-powerpc/pll.h:160:
+		"=b"(ret):
 		         ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1045: FILE: asm-powerpc/pll.h:184:
+	__asm__ __volatile__ (

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#1048: FILE: asm-powerpc/pll.h:187:
+		"rlwnm %0,%1,%0,30,31\n":
 		                        ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#1049: FILE: asm-powerpc/pll.h:188:
+		"=b"(ret):
 		         ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1063: FILE: asm-powerpc/pll.h:202:
+static inline volatile void set_PLL(unsigned int config)

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#1065: FILE: asm-powerpc/pll.h:204:
+	__asm__ __volatile__ ("mtspr %1,%0":
 	                                   ^

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1076: FILE: asm-powerpc/pll_if.h:1:
+#ifndef __PLL_IF_H

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1079: FILE: asm-powerpc/pll_if.h:4:
+/*
+	High Level wrapper functions for Dual PLL in 750FX & 750GX

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1093: FILE: asm-powerpc/pll_if.h:18:
+^Ialong with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1094: FILE: asm-powerpc/pll_if.h:19:
+^IFoundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1097: FILE: asm-powerpc/pll_if.h:22:
+/*
+	Fri, April 18, 2008.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1152: FILE: asm-powerpc/pll_if.h:77:
+extern int pllif_modify_PLL(unsigned int newPLL, int scaleLPJ);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1153: FILE: asm-powerpc/pll_if.h:78:
+extern unsigned int pllif_get_bus_clock(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1154: FILE: asm-powerpc/pll_if.h:79:
+extern unsigned int pllif_cfg_to_freq(unsigned int ratio);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1155: FILE: asm-powerpc/pll_if.h:80:
+extern int pllif_register_pll_switch_cb(struct notifier_block *nb, void *data);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1156: FILE: asm-powerpc/pll_if.h:81:
+extern void pllif_unregister_pll_switch_cb(struct notifier_block *nb);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1157: FILE: asm-powerpc/pll_if.h:82:
+extern int pllif_register_pll_lock_cb(struct notifier_block *nb, void *data);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1158: FILE: asm-powerpc/pll_if.h:83:
+extern void pllif_unregister_pll_lock_cb(struct notifier_block *nb);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1171: FILE: asm-powerpc/pll_if.h:96:
+	return 1000000000/HZ;
 	                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1188: FILE: asm-powerpc/pll_if.h:113:
+	return (cfg<<PLL1_CFG_SHIFT)|(rng<<PLL1_RNG_SHIFT);
 	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1188: FILE: asm-powerpc/pll_if.h:113:
+	return (cfg<<PLL1_CFG_SHIFT)|(rng<<PLL1_RNG_SHIFT);
 	                            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1188: FILE: asm-powerpc/pll_if.h:113:
+	return (cfg<<PLL1_CFG_SHIFT)|(rng<<PLL1_RNG_SHIFT);
 	                                 ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000233541.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 26 errors, 35 warnings, 198 checks, 1133 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000233541.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
