WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
By default, tun.c running in TUN_TUN_DEV mode will set the protocol of packet

ERROR:CODE_INDENT: code indent should use tabs where possible
#53: FILE: drivers/net/tun.c:316:
+               if (tun->flags & TUN_NO_PI) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#53: FILE: drivers/net/tun.c:316:
+               if (tun->flags & TUN_NO_PI) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#53: FILE: drivers/net/tun.c:316:
+               if (tun->flags & TUN_NO_PI) {
+                       switch (skb->data[0] & 0xf0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#54: FILE: drivers/net/tun.c:317:
+                       switch (skb->data[0] & 0xf0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#54: FILE: drivers/net/tun.c:317:
+                       switch (skb->data[0] & 0xf0) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#55: FILE: drivers/net/tun.c:318:
+                       case 0x40:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#55: FILE: drivers/net/tun.c:318:
+                       case 0x40:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#56: FILE: drivers/net/tun.c:319:
+                               pi.proto = __constant_htons(ETH_P_IP);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#56: FILE: drivers/net/tun.c:319:
+                               pi.proto = __constant_htons(ETH_P_IP);$

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#56: FILE: drivers/net/tun.c:319:
+                               pi.proto = __constant_htons(ETH_P_IP);

Use of __constant_<foo> form is discouraged for the following functions::

  __constant_cpu_to_be[x]
  __constant_cpu_to_le[x]
  __constant_be[x]_to_cpu
  __constant_le[x]_to_cpu
  __constant_htons
  __constant_ntohs

Using any of these outside of include/uapi/ is not preferred as using the
function without __constant_ is identical when the argument is a
constant.

In big endian systems, the macros like __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to the same expression::

  #define __constant_cpu_to_be32(x) ((__force __be32)(__u32)(x))
  #define __cpu_to_be32(x)          ((__force __be32)(__u32)(x))

In little endian systems, the macros __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to __constant_swab32 and __swab32.  __swab32
has a __builtin_constant_p check::

  #define __swab32(x)				\
    (__builtin_constant_p((__u32)(x)) ?	\
    ___constant_swab32(x) :			\
    __fswab32(x))

So ultimately they have a special case for constants.
Similar is the case with all of the macros in the list.  Thus
using the __constant_... forms are unnecessarily verbose and
not preferred outside of include/uapi.

See: https://lore.kernel.org/lkml/1400106425.12666.6.camel@joe-AO725/

ERROR:CODE_INDENT: code indent should use tabs where possible
#57: FILE: drivers/net/tun.c:320:
+                               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#57: FILE: drivers/net/tun.c:320:
+                               break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#58: FILE: drivers/net/tun.c:321:
+                       case 0x60:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#58: FILE: drivers/net/tun.c:321:
+                       case 0x60:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#59: FILE: drivers/net/tun.c:322:
+                               pi.proto = __constant_htons(ETH_P_IPV6);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: drivers/net/tun.c:322:
+                               pi.proto = __constant_htons(ETH_P_IPV6);$

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#59: FILE: drivers/net/tun.c:322:
+                               pi.proto = __constant_htons(ETH_P_IPV6);

ERROR:CODE_INDENT: code indent should use tabs where possible
#60: FILE: drivers/net/tun.c:323:
+                               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: drivers/net/tun.c:323:
+                               break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#61: FILE: drivers/net/tun.c:324:
+                       default:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#62: FILE: drivers/net/tun.c:325:
+                               tun->dev->stats.rx_dropped++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#62: FILE: drivers/net/tun.c:325:
+                               tun->dev->stats.rx_dropped++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#63: FILE: drivers/net/tun.c:326:
+                               kfree_skb(skb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#63: FILE: drivers/net/tun.c:326:
+                               kfree_skb(skb);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#64: FILE: drivers/net/tun.c:327:
+                               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#64: FILE: drivers/net/tun.c:327:
+                               return -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#65: FILE: drivers/net/tun.c:328:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: drivers/net/tun.c:328:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#66: FILE: drivers/net/tun.c:329:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: drivers/net/tun.c:329:
+               }$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000270668.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 14 errors, 17 warnings, 0 checks, 21 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000270668.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
