WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#68: FILE: drivers/ide/ide-atapi.c:210:
+			printk(KERN_WARNING PFX "%s: failed to map sense "

WARNING:SPLIT_STRING: quoted string split across lines
#69: FILE: drivers/ide/ide-atapi.c:211:
+			printk(KERN_WARNING PFX "%s: failed to map sense "
+					    "buffer\n", drive->name);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#78: FILE: drivers/ide/ide-atapi.c:232:
+		printk(KERN_WARNING PFX "%s: error queuing a sense request\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#87: FILE: drivers/ide/ide-atapi.c:296:
+			printk(KERN_INFO PFX "cmd 0x%x timed out\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#88: FILE: drivers/ide/ide-atapi.c:297:
+			printk(KERN_INFO PFX "cmd 0x%x timed out\n",
 					 rq->cmd[0]);

CHECK:BRACES: braces {} should be used on all arms of this statement
#109: FILE: drivers/ide/ide-atapi.c:344:
+	if (ireason == (!rw << 1))
[...]
+	else if (ireason == (rw << 1)) {
[...]
+	else if (!rw && ireason == ATAPI_COD) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#112: FILE: drivers/ide/ide-atapi.c:347:
+		printk(KERN_ERR PFX "%s: %s: wrong transfer direction!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#113: FILE: drivers/ide/ide-atapi.c:348:
+		printk(KERN_ERR PFX "%s: %s: wrong transfer direction!\n",
+				drive->name, __func__);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#118: FILE: drivers/ide/ide-atapi.c:353:
+	}
+	else if (!rw && ireason == ATAPI_COD) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#129: FILE: drivers/ide/ide-atapi.c:364:
+			printk(KERN_ERR PFX "%s: CoD != 0 in %s\n", drive->name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#130: FILE: drivers/ide/ide-atapi.c:365:
+			printk(KERN_ERR PFX "%s: CoD != 0 in %s\n", drive->name,
+					__func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#133: FILE: drivers/ide/ide-atapi.c:368:
+		printk(KERN_ERR PFX "%s: %s: bad interrupt reason 0x%02x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#134: FILE: drivers/ide/ide-atapi.c:369:
+		printk(KERN_ERR PFX "%s: %s: bad interrupt reason 0x%02x\n",
+				drive->name, __func__, ireason);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#153: FILE: drivers/ide/ide-atapi.c:413:
+				printk(KERN_ERR PFX "%s: DMA %s error\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#154: FILE: drivers/ide/ide-atapi.c:414:
+				printk(KERN_ERR PFX "%s: DMA %s error\n",
 					drive->name, rq_data_dir(pc->rq)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#163: FILE: drivers/ide/ide-atapi.c:445:
+				printk(KERN_ERR PFX "%s: I/O error in request "

WARNING:SPLIT_STRING: quoted string split across lines
#164: FILE: drivers/ide/ide-atapi.c:446:
+				printk(KERN_ERR PFX "%s: I/O error in request "
+						"sense command\n", drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#174: FILE: drivers/ide/ide-atapi.c:488:
+		printk(KERN_ERR PFX "%s: The device wants to issue more "

WARNING:SPLIT_STRING: quoted string split across lines
#175: FILE: drivers/ide/ide-atapi.c:489:
+		printk(KERN_ERR PFX "%s: The device wants to issue more "
+				"interrupts in DMA mode\n", drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#205: FILE: drivers/ide/ide-atapi.c:546:
+		printk(KERN_ERR PFX "%s: (IO,CoD != (0,1) while issuing "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#212: FILE: drivers/ide/ide-atapi.c:551:
+			printk(KERN_ERR PFX "%s: (IO,CoD != (0,1) while issuing"

WARNING:SPLIT_STRING: quoted string split across lines
#213: FILE: drivers/ide/ide-atapi.c:552:
+			printk(KERN_ERR PFX "%s: (IO,CoD != (0,1) while issuing"
+					" a packet command, ignoring\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#222: FILE: drivers/ide/ide-atapi.c:583:
+		printk(KERN_ERR PFX "%s: Strange, packet command initiated yet "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#231: FILE: drivers/ide/ide-atapi.c:625:
+			printk(KERN_ERR PFX "%s: (IO,CoD) != (0,1) while issuing "

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#309: FILE: include/linux/ide.h:1128:
+int ide_check_ireason(ide_drive_t *, struct request *, int, int, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#309: FILE: include/linux/ide.h:1128:
+int ide_check_ireason(ide_drive_t *, struct request *, int, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#309: FILE: include/linux/ide.h:1128:
+int ide_check_ireason(ide_drive_t *, struct request *, int, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#309: FILE: include/linux/ide.h:1128:
+int ide_check_ireason(ide_drive_t *, struct request *, int, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#309: FILE: include/linux/ide.h:1128:
+int ide_check_ireason(ide_drive_t *, struct request *, int, int, int);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000127536.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 22 warnings, 6 checks, 239 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000127536.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
