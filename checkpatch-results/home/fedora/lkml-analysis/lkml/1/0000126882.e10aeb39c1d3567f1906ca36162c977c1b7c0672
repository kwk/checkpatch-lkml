WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
following the the locks_after list of current lock A, we can reach one of the

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#32: 
following the the locks_after list of current lock A, we can reach one of the

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'state' - possible side-effects?
#86: FILE: include/linux/lockdep.h:338:
+#define get_simple_read_conflict(state)		\
+	(((((is_write(state)) << (_R_ - _W_))) | (is_simple_read(state))) \
+							& STATE_READ)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'state' - possible side-effects?
#91: FILE: include/linux/lockdep.h:343:
+#define get_lock_conflict_states(state)		\
+	(get_rec_read_conflict(state) |	\
+	get_simple_read_conflict(state) |	\
+	get_write_conflict(state))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#110: FILE: kernel/lockdep.c:1064:
+check_noncircular(struct lock_class *source, unsigned int depth,
+					unsigned int conflict_state)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#124: FILE: kernel/lockdep.c:1085:
+		if (!check_noncircular(entry->dep_class, depth+1,
 		                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#125: FILE: kernel/lockdep.c:1086:
+		if (!check_noncircular(entry->dep_class, depth+1,
+			get_lock_conflict_states(entry->dep_lock_rw_state)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#135: FILE: kernel/lockdep.c:1113:
+find_usage_forwards(struct lock_class *source, unsigned int depth,
+						unsigned int conflict_states)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#146: FILE: kernel/lockdep.c:1139:
+		ret = find_usage_forwards(entry->dep_class, depth+1,
 		                                                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#147: FILE: kernel/lockdep.c:1140:
+		ret = find_usage_forwards(entry->dep_class, depth+1,
+			get_lock_conflict_states(entry->dep_lock_rw_state));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#157: FILE: kernel/lockdep.c:1159:
+find_usage_backwards(struct lock_class *source, unsigned int depth,
+						unsigned int conflict_states)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#168: FILE: kernel/lockdep.c:1193:
+		ret = find_usage_backwards(entry->dep_class, depth+1,
 		                                                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#169: FILE: kernel/lockdep.c:1194:
+		ret = find_usage_backwards(entry->dep_class, depth+1,
+			get_lock_conflict_states(entry->dep_lock_rw_state));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#179: FILE: kernel/lockdep.c:1272:
+	ret = find_usage_backwards(hlock_class(prev), 0,
+			get_lock_conflict_states(prev->rw_state));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#186: FILE: kernel/lockdep.c:1278:
+	ret = find_usage_forwards(hlock_class(next), 0,
+			get_lock_conflict_states(next->rw_state));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#196: FILE: kernel/lockdep.c:1507:
+	if (!(check_noncircular(hlock_class(next), 0,
+		get_lock_conflict_states(next->rw_state))))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#222: FILE: kernel/lockdep.c:1604:
+		if (!is_rec_read(hlock->rw_state) ||
+				is_first_rec_read(hlock->rw_state)) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#234: FILE: kernel/lockdep.c:1780:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#249: FILE: kernel/lockdep.c:1956:
+	ret = find_usage_forwards(hlock_class(this), 0,
+			get_lock_conflict_states(this->rw_state));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#259: FILE: kernel/lockdep.c:1976:
+	ret = find_usage_backwards(hlock_class(this), 0,
+			get_lock_conflict_states(this->rw_state));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000126882.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 18 checks, 173 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000126882.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
