WARNING:LINE_SPACING: Missing a blank line after declarations
#72: FILE: fs/binfmt_aout.c:79:
+		char *buf = (char *)get_zeroed_page(GFP_KERNEL);
+		if (!buf)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#76: FILE: fs/binfmt_aout.c:83:
+			unsigned long n = off;
+			if (n > PAGE_SIZE)

WARNING:LINE_SPACING: Missing a blank line after declarations
#126: FILE: fs/binfmt_elf_fdpic.c:1222:
+		char *buf = (char *)get_zeroed_page(GFP_KERNEL);
+		if (!buf)

WARNING:LINE_SPACING: Missing a blank line after declarations
#130: FILE: fs/binfmt_elf_fdpic.c:1226:
+			unsigned long n = off;
+			if (n > PAGE_SIZE)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nr' - possible side-effects?
#148: FILE: fs/binfmt_elf_fdpic.c:1315:
+#define DUMP_WRITE(addr, nr, foffset)	\
+	do { if (!dump_write(file, (addr), (nr))) return 0; *foffset += (nr); } while(0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'foffset' may be better as '(foffset)' to avoid precedence issues
#148: FILE: fs/binfmt_elf_fdpic.c:1315:
+#define DUMP_WRITE(addr, nr, foffset)	\
+	do { if (!dump_write(file, (addr), (nr))) return 0; *foffset += (nr); } while(0)

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#148: FILE: fs/binfmt_elf_fdpic.c:1315:
+#define DUMP_WRITE(addr, nr, foffset)	\
+	do { if (!dump_write(file, (addr), (nr))) return 0; *foffset += (nr); } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#149: FILE: fs/binfmt_elf_fdpic.c:1316:
+	do { if (!dump_write(file, (addr), (nr))) return 0; *foffset += (nr); } while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#156: FILE: fs/binfmt_elf_fdpic.c:1321:
+	static const char buf[4] = { 0, };
+	DUMP_WRITE(buf, roundup(*foffset, 4) - *foffset, foffset);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: fs/binfmt_elf_fdpic.c:1326:
+static int writenote(struct memelfnote *men, struct file *file,
+			loff_t *foffset)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000028228.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 6 warnings, 3 checks, 164 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000028228.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
