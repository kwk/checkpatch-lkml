ERROR:SPACING: space required before the open brace '{'
#341: FILE: arch/um/kernel/physmem.c:134:
+	if(phys < physmem_size){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#341: FILE: arch/um/kernel/physmem.c:134:
+	if(phys < physmem_size){

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#358: FILE: arch/um/os-Linux/skas/mem.c:31:
+extern void wait_stub_done(int pid);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: No space is necessary after a cast
#372: FILE: arch/um/os-Linux/skas/mem.c:49:
+		((unsigned long) &batch_syscall_stub -

CHECK:SPACING: No space is necessary after a cast
#373: FILE: arch/um/os-Linux/skas/mem.c:50:
+		 (unsigned long) &__syscall_stub_start);

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#377: FILE: arch/um/os-Linux/skas/mem.c:54:
+__initcall(init_syscall_regs);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#411: FILE: arch/um/os-Linux/skas/mem.c:80:
+			printk("\t%d\t0x%lx\n", i, syscall_regs[i]);

ERROR:SPACING: space required before the open parenthesis '('
#418: FILE: arch/um/os-Linux/skas/mem.c:86:
+	if(err)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#433: FILE: arch/um/os-Linux/skas/mem.c:192:
+int map(struct mm_id * mm_idp, unsigned long virt, unsigned long len, int prot,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open brace '{'
#499: FILE: arch/um/os-Linux/skas/process.c:77:
+	while(1){

ERROR:SPACING: space required before the open parenthesis '('
#499: FILE: arch/um/os-Linux/skas/process.c:77:
+	while(1){

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'n < 0'
#511: FILE: arch/um/os-Linux/skas/process.c:79:
+		if((n < 0) || !WIFSTOPPED(status))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open parenthesis '('
#511: FILE: arch/um/os-Linux/skas/process.c:79:
+		if((n < 0) || !WIFSTOPPED(status))

ERROR:SPACING: space required before the open parenthesis '('
#514: FILE: arch/um/os-Linux/skas/process.c:82:
+		if(((1 << WSTOPSIG(status)) & STUB_SIG_MASK) == 0)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'wait_stub_done', this function's name, in a string
#524: FILE: arch/um/os-Linux/skas/process.c:87:
+			panic("wait_stub_done : continue failed, errno = %d\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:SPACING: space required before the open parenthesis '('
#528: FILE: arch/um/os-Linux/skas/process.c:91:
+	if(((1 << WSTOPSIG(status)) & STUB_DONE_MASK) != 0)

ERROR:SPACING: space required before the open parenthesis '('
#533: FILE: arch/um/os-Linux/skas/process.c:96:
+	if(err)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#534: FILE: arch/um/os-Linux/skas/process.c:97:
+		printk("Failed to get registers from stub, errno = %d\n", -err);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'wait_stub_done', this function's name, in a string
#535: FILE: arch/um/os-Linux/skas/process.c:98:
+	panic("wait_stub_done : failed to wait for SIGUSR1/SIGTRAP, pid = %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#536: FILE: arch/um/os-Linux/skas/process.c:99:
+	panic("wait_stub_done : failed to wait for SIGUSR1/SIGTRAP, pid = %d, "
+	      "n = %d, errno = %d, status = 0x%x\n", pid, n, errno, status);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space required before the open parenthesis '('
#546: FILE: arch/um/os-Linux/skas/process.c:122:
+		if(err)

ERROR:CODE_INDENT: code indent should use tabs where possible
#559: FILE: arch/um/os-Linux/skas/process.c:318:
+^I^I  ^Iswitch(sig){$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#559: FILE: arch/um/os-Linux/skas/process.c:318:
+^I^I  ^Iswitch(sig){$

ERROR:SPACING: space required before the open brace '{'
#559: FILE: arch/um/os-Linux/skas/process.c:318:
+		  	switch(sig){

ERROR:SPACING: space required before the open parenthesis '('
#559: FILE: arch/um/os-Linux/skas/process.c:318:
+		  	switch(sig){

ERROR:SPACING: space required before the open brace '{'
#563: FILE: arch/um/os-Linux/skas/process.c:320:
+				if(PTRACE_FULL_FAULTINFO || !ptrace_faultinfo){

ERROR:SPACING: space required before the open parenthesis '('
#563: FILE: arch/um/os-Linux/skas/process.c:320:
+				if(PTRACE_FULL_FAULTINFO || !ptrace_faultinfo){

CHECK:BRACES: braces {} should be used on all arms of this statement
#563: FILE: arch/um/os-Linux/skas/process.c:320:
+				if(PTRACE_FULL_FAULTINFO || !ptrace_faultinfo){
[...]
 				else handle_segv(pid, regs);
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPLIT_STRING: quoted string split across lines
#582: FILE: arch/um/os-Linux/skas/process.c:344:
 			        printk("userspace - child stopped with signal "
+				       "%d\n", sig);

CHECK:SPACING: No space is necessary after a cast
#598: FILE: arch/um/os-Linux/skas/process.c:364:
+				(unsigned long) stub_clone_handler -

CHECK:SPACING: No space is necessary after a cast
#599: FILE: arch/um/os-Linux/skas/process.c:365:
+				(unsigned long) &__syscall_stub_start;

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#608: FILE: arch/um/os-Linux/skas/process.c:374:
+__initcall(init_thread_regs);

ERROR:SPACING: space required before the open parenthesis '('
#650: FILE: arch/um/os-Linux/skas/process.c:410:
+	if(err)

WARNING:SPLIT_STRING: quoted string split across lines
#652: FILE: arch/um/os-Linux/skas/process.c:412:
+		panic("Failed to continue new process, pid = %d, "
+		      "errno = %d\n", pid, errno);

ERROR:SPACING: space required before the open brace '{'
#847: FILE: arch/um/kernel/tlb.c:100:
+		   (last->u.mprotect.prot == prot)){

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#954: FILE: include/asm-um/tlbflush.h:28:
+extern void flush_tlb_page_skas(struct vm_area_struct *vma,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000440379.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 18 errors, 11 warnings, 7 checks, 819 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000440379.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
