WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
> I've noticed the following errors & exceptions, apparently coinciding with

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#125: FILE: drivers/acpi/ec.c:68:
 };
+/* EC events */

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#135: FILE: drivers/acpi/ec.c:78:
+#define EC_IRQ_NUM ^I^I5^I/* the EC interrupt storm threshold */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#143: FILE: drivers/acpi/ec.c:86:
+					 * until GPE arrives*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'interrrupt' may be misspelled - perhaps 'interrupt'?
#159: FILE: drivers/acpi/ec.c:132:
+	/* record the EC status when last EC interrrupt happens */
 	                                     ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#175: FILE: drivers/acpi/ec.c:234:
+static inline int acpi_ec_check_status(struct acpi_ec *ec,
+			enum ec_event event)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#204: FILE: drivers/acpi/ec.c:254:
+		if (wait_event_timeout(ec->wait,
+				acpi_ec_check_status(ec, event),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#209: FILE: drivers/acpi/ec.c:259:
+		if (!test_bit(EC_FLAGS_WAIT_GPE, &ec->flags) &&
+			acpi_ec_check_status(ec, event))

WARNING:LINE_SPACING: Missing a blank line after declarations
#224: FILE: drivers/acpi/ec.c:274:
+		unsigned long delay = jiffies + msecs_to_jiffies(ACPI_EC_DELAY);
+		clear_bit(EC_FLAGS_WAIT_GPE, &ec->flags);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#228: FILE: drivers/acpi/ec.c:278:
+			msleep(1);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'acpi_ec_wait', this function's name, in a string
#233: FILE: drivers/acpi/ec.c:283:
+	pr_err(PREFIX "acpi_ec_wait timeout, status = 0x%2.2x, event = %s\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#234: FILE: drivers/acpi/ec.c:284:
+	pr_err(PREFIX "acpi_ec_wait timeout, status = 0x%2.2x, event = %s\n",
+		acpi_ec_read_status(ec),

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#247: FILE: drivers/acpi/ec.c:313:
 }
+static int acpi_ec_transaction_unlocked(struct acpi_ec *ec, u8 command,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#248: FILE: drivers/acpi/ec.c:314:
+					const u8 *wdata, unsigned wdata_len,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#249: FILE: drivers/acpi/ec.c:315:
+					u8 *rdata, unsigned rdata_len,

WARNING:LINE_SPACING: Missing a blank line after declarations
#255: FILE: drivers/acpi/ec.c:319:
+	int result = 0;
+	set_bit(EC_FLAGS_WAIT_GPE, &ec->flags);

CHECK:BRACES: braces {} should be used on all arms of this statement
#281: FILE: drivers/acpi/ec.c:333:
+	if (!rdata_len) {
[...]
+	} else if (command == ACPI_EC_COMMAND_QUERY)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#335: FILE: drivers/acpi/ec.c:379:
+			       const u8 *wdata, unsigned wdata_len,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#336: FILE: drivers/acpi/ec.c:380:
+			       u8 *rdata, unsigned rdata_len,

WARNING:LINE_SPACING: Missing a blank line after declarations
#410: FILE: drivers/acpi/ec.c:440:
+	u8 d = acpi_ec_read_status(ec);
+	if (d & ACPI_EC_FLAG_BURST) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#485: FILE: drivers/acpi/ec.c:553:
+	result = acpi_ec_transaction(ec, ACPI_EC_COMMAND_QUERY,
+						NULL, 0, &d, 1, 0);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#493: FILE: drivers/acpi/ec.c:627:
 }
+/*******************************************************************************

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#494: FILE: drivers/acpi/ec.c:628:
+/*******************************************************************************
+*

WARNING:LINE_SPACING: Missing a blank line after declarations
#509: FILE: drivers/acpi/ec.c:643:
+	static int warn_done;
+	if ((jiffies == ec->pre_jiffies) && (state == ec->pre_state)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'jiffies == ec->pre_jiffies'
#509: FILE: drivers/acpi/ec.c:643:
+	if ((jiffies == ec->pre_jiffies) && (state == ec->pre_state)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'state == ec->pre_state'
#509: FILE: drivers/acpi/ec.c:643:
+	if ((jiffies == ec->pre_jiffies) && (state == ec->pre_state)) {

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#509: FILE: drivers/acpi/ec.c:643:
+	if ((jiffies == ec->pre_jiffies) && (state == ec->pre_state)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#520: FILE: drivers/acpi/ec.c:654:
+					printk(KERN_WARNING "EC GPE interrupt"

WARNING:SPLIT_STRING: quoted string split across lines
#521: FILE: drivers/acpi/ec.c:655:
+					printk(KERN_WARNING "EC GPE interrupt"
+					" storm. And it is hardware issue\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPACING: space prohibited before semicolon
#545: FILE: drivers/acpi/ec.c:678:
+	u8 status ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#568: FILE: drivers/acpi/ec.c:691:
+			ec_status = acpi_os_execute(OSL_EC_BURST_HANDLER,
+				acpi_ec_gpe_query, ec);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000211308.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 19 warnings, 12 checks, 488 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000211308.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
