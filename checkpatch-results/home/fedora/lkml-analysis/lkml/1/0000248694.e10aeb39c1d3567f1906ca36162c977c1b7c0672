WARNING:TYPO_SPELLING: 'corect' may be misspelled - perhaps 'correct'?
#37: 
allowed at a time. A CPU vendor check makes sure only the corect
                                                          ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#79: FILE: arch/x86/Kconfig:800:
+config MICROCODE_INTEL
+       tristate "Intel microcode patch loading support"
+       depends on MICROCODE
+       default MICROCODE
+       select FW_LOADER
+       --help---
+         This options enables microcode patch loading support for Intel
+         processors.
+
+         For latest news and information on obtaining all the required
+         Intel ingredients for this driver, check:
+         <http://www.urbanmyth.org/microcode/>.
+
+         This driver is only available as a module: the module
+         will be called microcode_intel.  
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#93: FILE: arch/x86/Kconfig:814:
+         will be called microcode_intel.  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#123: FILE: arch/x86/kernel/microcode.c:102:
+#define MICROCODE_VERSION ^I"2.00"$

WARNING:CONST_STRUCT: struct microcode_ops should normally be const
#127: FILE: arch/x86/kernel/microcode.c:104:
+struct microcode_ops *microcode_ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#132: FILE: arch/x86/kernel/microcode.c:108:
+EXPORT_SYMBOL_GPL(microcode_mutex);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:CONST_STRUCT: struct microcode_ops should normally be const
#258: FILE: arch/x86/kernel/microcode.c:420:
+	struct microcode_ops *ops = (struct microcode_ops *)opaque;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#264: FILE: arch/x86/kernel/microcode.c:424:
+		printk(KERN_ERR "microcode: already loaded the other module\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#277: FILE: arch/x86/kernel/microcode.c:451:
+	printk(KERN_INFO

WARNING:SPLIT_STRING: quoted string split across lines
#280: FILE: arch/x86/kernel/microcode.c:454:
+	       " <tigran@aivazian.fsnet.co.uk>"
+	       " <peter.oruba@amd.com>\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#298: FILE: arch/x86/kernel/microcode.c:474:
+	printk(KERN_INFO

WARNING:SPLIT_STRING: quoted string split across lines
#338: FILE: arch/x86/kernel/microcode_intel.c:291:
 	pr_debug("microcode: CPU%d found a matching microcode update with"
+		 " version 0x%x (current=0x%x)\n",

WARNING:CONST_STRUCT: struct microcode_ops should normally be const
#396: FILE: arch/x86/kernel/microcode_intel.c:519:
+static struct microcode_ops microcode_intel_ops = {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#429: FILE: include/asm-x86/microcode.h:1:
+extern int microcode_init(void *opaque, struct module *module);

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#429: FILE: include/asm-x86/microcode.h:1:
+extern int microcode_init(void *opaque, struct module *module);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#430: FILE: include/asm-x86/microcode.h:2:
+extern void microcode_exit(void);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000248694.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 13 warnings, 2 checks, 337 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000248694.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
