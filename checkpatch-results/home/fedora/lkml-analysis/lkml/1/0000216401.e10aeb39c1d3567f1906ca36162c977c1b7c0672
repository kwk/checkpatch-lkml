ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#49: FILE: include/linux/kernel.h:148:
+NORET_TYPE void softpanic(const char * fmt, ...)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#50: FILE: include/linux/kernel.h:149:
+	__attribute__ ((NORET_AND format (printf, 1, 2))) __cold;

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#52: FILE: include/linux/kernel.h:151:
+# define softpanic(...) do { panic(__VA_ARGS__); } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#64: FILE: init/Kconfig:621:
+config SOFTPANIC
+	bool "Enable softpanic for boot errors" if EMBEDDED
+	default y
+	help
+		Enabling this option changes a hard panic on boot errors to a
+		soft panic, which does not stop the system completely.
+		You can still scroll the screen and read the messages.
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#128: FILE: kernel/panic.c:146:
+NORET_TYPE void softpanic(const char * fmt, ...)

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: kernel/panic.c:152:
+        unsigned long caller = (unsigned long) __builtin_return_address(0);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: No space is necessary after a cast
#134: FILE: kernel/panic.c:152:
+        unsigned long caller = (unsigned long) __builtin_return_address(0);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: kernel/panic.c:152:
+        unsigned long caller = (unsigned long) __builtin_return_address(0);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#140: FILE: kernel/panic.c:158:
+	printk(KERN_EMERG "Kernel panic - not syncing: %s\n",buf);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#140: FILE: kernel/panic.c:158:
+	printk(KERN_EMERG "Kernel panic - not syncing: %s\n",buf);
 	                                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#149: FILE: kernel/panic.c:167:
+^I ^I * Delay timeout seconds before rebooting the machine. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: kernel/panic.c:167:
+^I ^I * Delay timeout seconds before rebooting the machine. $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#149: FILE: kernel/panic.c:167:
+^I ^I * Delay timeout seconds before rebooting the machine. $

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: kernel/panic.c:169:
+^I ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#151: FILE: kernel/panic.c:169:
+^I ^I */$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#152: FILE: kernel/panic.c:170:
+		printk(KERN_EMERG "Rebooting in %d seconds..",panic_timeout);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#152: FILE: kernel/panic.c:170:
+		printk(KERN_EMERG "Rebooting in %d seconds..",panic_timeout);
 		                                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#153: FILE: kernel/panic.c:171:
+		for (i = 0; i < panic_timeout*1000; ) {
 		                             ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#167: FILE: kernel/panic.c:185:
+		extern int stop_a_enabled;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#170: FILE: kernel/panic.c:188:
+		printk(KERN_EMERG "Press Stop-A (L1-A) to return to the boot prom\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: kernel/panic.c:192:
+        disabled_wait(caller);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: kernel/panic.c:192:
+        disabled_wait(caller);$

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#179: FILE: kernel/panic.c:197:
+		msleep(1);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#186: FILE: kernel/panic.c:204:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000216401.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 12 warnings, 3 checks, 127 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000216401.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
