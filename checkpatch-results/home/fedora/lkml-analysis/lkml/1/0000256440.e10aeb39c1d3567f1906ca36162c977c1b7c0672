WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
   git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip.git x86/generalize-visws

WARNING:TYPO_SPELLING: 'couldnt' may be misspelled - perhaps 'couldn't'?
#46: 
[ I couldnt test it on real VISWS hardware, but all the intermediate
    ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#462: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#467: FILE: arch/x86/kernel/visws_quirks.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/smp.h> instead of <asm/smp.h>
#498: FILE: arch/x86/kernel/visws_quirks.c:32:
+#include <asm/smp.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#499: FILE: arch/x86/kernel/visws_quirks.c:33:
+#include <asm/io.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#512: FILE: arch/x86/kernel/visws_quirks.c:46:
+#include <asm/io.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#526: FILE: arch/x86/kernel/visws_quirks.c:60:
+#include <asm/io.h>

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#542: FILE: arch/x86/kernel/visws_quirks.c:76:
+	printk(KERN_INFO "Starting Cobalt Timer system clock\n");

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#545: FILE: arch/x86/kernel/visws_quirks.c:79:
+	co_cpu_write(CO_CPU_TIMEVAL, CO_TIME_HZ/HZ);
 	                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#576: FILE: arch/x86/kernel/visws_quirks.c:110:
+EXPORT_SYMBOL(sgivwfb_mem_phys);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#577: FILE: arch/x86/kernel/visws_quirks.c:111:
+EXPORT_SYMBOL(sgivwfb_mem_size);

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#579: FILE: arch/x86/kernel/visws_quirks.c:113:
+long long mem_size __initdata = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#588: FILE: arch/x86/kernel/visws_quirks.c:122:
+		printk(KERN_WARNING "Bootloader didn't set memory size, upgrade it !\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#598: FILE: arch/x86/kernel/visws_quirks.c:132:
+		printk(KERN_WARNING "Defaulting to 8 MB framebuffer size\n");

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'bus' may be better as '(bus)' to avoid precedence issues
#636: FILE: arch/x86/kernel/visws_quirks.c:170:
+#define PCI_CONF1_ADDRESS(bus, devfn, reg) \
+	(0x80000000 | (bus << 16) | (devfn << 8) | (reg & ~3))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'devfn' may be better as '(devfn)' to avoid precedence issues
#636: FILE: arch/x86/kernel/visws_quirks.c:170:
+#define PCI_CONF1_ADDRESS(bus, devfn, reg) \
+	(0x80000000 | (bus << 16) | (devfn << 8) | (reg & ~3))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#636: FILE: arch/x86/kernel/visws_quirks.c:170:
+#define PCI_CONF1_ADDRESS(bus, devfn, reg) \
+	(0x80000000 | (bus << 16) | (devfn << 8) | (reg & ~3))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#659: FILE: arch/x86/kernel/visws_quirks.c:193:
+static void __init MP_processor_info (struct mpc_config_processor *m)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#668: FILE: arch/x86/kernel/visws_quirks.c:202:
+	printk(KERN_INFO "%sCPU #%d %u:%u APIC version %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#680: FILE: arch/x86/kernel/visws_quirks.c:214:
+		printk(KERN_ERR "Processor #%d INVALID. (Max ID: %d).\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#681: FILE: arch/x86/kernel/visws_quirks.c:215:
+		printk(KERN_ERR "Processor #%d INVALID. (Max ID: %d).\n",
+			m->mpc_apicid, MAX_APICS);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#691: FILE: arch/x86/kernel/visws_quirks.c:225:
+		printk(KERN_ERR "BIOS bug, APIC version is 0 for CPU#%d! "

WARNING:SPLIT_STRING: quoted string split across lines
#692: FILE: arch/x86/kernel/visws_quirks.c:226:
+		printk(KERN_ERR "BIOS bug, APIC version is 0 for CPU#%d! "
+			"fixing up to 0x10. (tell your hw vendor)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#705: FILE: arch/x86/kernel/visws_quirks.c:239:
+		printk(KERN_WARNING "find_visws_smp: got cpu count of %d at %p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#706: FILE: arch/x86/kernel/visws_quirks.c:240:
+		printk(KERN_WARNING "find_visws_smp: got cpu count of %d at %p\n",
+			ncpus, mp);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#825: FILE: arch/x86/kernel/visws_quirks.c:359:
+		if (raw < 0x6) {
[...]
+		} else if (raw < 0xc) {
[...]
+		} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#832: FILE: arch/x86/kernel/visws_quirks.c:366:
+	} else if (visws_board_type == VISWS_540) {
+			visws_board_rev = 2;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#838: FILE: arch/x86/kernel/visws_quirks.c:372:
+	printk(KERN_INFO "Silicon Graphics Visual Workstation %s (rev %d) detected\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#855: FILE: arch/x86/kernel/visws_quirks.c:389:
+		printk(KERN_EMERG "Lithium hostbridge %c not found\n", 'A');

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#861: FILE: arch/x86/kernel/visws_quirks.c:395:
+		printk(KERN_EMERG "Lithium hostbridge %c not found\n", 'B');

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#877: FILE: arch/x86/kernel/visws_quirks.c:411:
+	printk(KERN_INFO "Local APIC Version %#x, ID %#x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#878: FILE: arch/x86/kernel/visws_quirks.c:412:
+	printk(KERN_INFO "Local APIC Version %#x, ID %#x\n",
+		(unsigned int)apic_read(APIC_LVR),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#883: FILE: arch/x86/kernel/visws_quirks.c:417:
+	printk(KERN_INFO "Cobalt Revision %#lx, APIC ID %#lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#884: FILE: arch/x86/kernel/visws_quirks.c:418:
+	printk(KERN_INFO "Cobalt Revision %#lx, APIC ID %#lx\n",
+		co_cpu_read(CO_CPU_REV), co_apic_read(CO_APIC_ID));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#889: FILE: arch/x86/kernel/visws_quirks.c:423:
+	printk(KERN_INFO "Cobalt APIC enabled: ID reg %#lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#890: FILE: arch/x86/kernel/visws_quirks.c:424:
+	printk(KERN_INFO "Cobalt APIC enabled: ID reg %#lx\n",
+		co_apic_read(CO_APIC_ID));

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#922: FILE: arch/x86/kernel/visws_quirks.c:456:
+	extern char visws_board_type;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#923: FILE: arch/x86/kernel/visws_quirks.c:457:
+	extern char visws_board_rev;

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#935: FILE: arch/x86/kernel/visws_quirks.c:469:
+	switch (irq) {
+		case 0: return CO_APIC_CPU;
+		case CO_IRQ_IDE0: return co_apic_ide0_hack();
+		case CO_IRQ_IDE1: return CO_APIC_IDE1;
+		default: return -1;

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:LINE_SPACING: Please don't use multiple blank lines
#943: FILE: arch/x86/kernel/visws_quirks.c:477:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1008: FILE: arch/x86/kernel/visws_quirks.c:542:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1042: FILE: arch/x86/kernel/visws_quirks.c:576:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1050: FILE: arch/x86/kernel/visws_quirks.c:584:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "desc->action"
#1118: FILE: arch/x86/kernel/visws_quirks.c:652:
+	if (likely(desc->action != NULL))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1137: FILE: arch/x86/kernel/visws_quirks.c:671:
+^I.handler = ^Ino_action,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1141: FILE: arch/x86/kernel/visws_quirks.c:675:
+
+

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1151: FILE: arch/x86/kernel/visws_quirks.c:685:
+		if (i == 0) {
[...]
+		else if (i == CO_IRQ_IDE0) {
[...]
+		else if (i == CO_IRQ_IDE1) {
[...]
+		else if (i == CO_IRQ_8259) {
[...]
+		else if (i < CO_IRQ_APIC0) {
[...]
+		else if (IS_CO_APIC(i)) {
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1154: FILE: arch/x86/kernel/visws_quirks.c:688:
+		}
+		else if (i == CO_IRQ_IDE0) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1157: FILE: arch/x86/kernel/visws_quirks.c:691:
+		}
+		else if (i == CO_IRQ_IDE1) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1160: FILE: arch/x86/kernel/visws_quirks.c:694:
+		}
+		else if (i == CO_IRQ_8259) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1163: FILE: arch/x86/kernel/visws_quirks.c:697:
+		}
+		else if (i < CO_IRQ_APIC0) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1166: FILE: arch/x86/kernel/visws_quirks.c:700:
+		}
+		else if (IS_CO_APIC(i)) {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2254: FILE: include/asm-x86/mach-visws/mach_apic.h:1:
+#include "../mach-default/mach_apic.h"

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2272: FILE: include/asm-x86/mach-visws/mach_apicdef.h:1:
+#include "../mach-default/mach_apicdef.h"

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2284: FILE: include/asm-x86/mach-visws/setup_arch.h:1:
+#include "../mach-default/setup_arch.h"

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2318: FILE: include/asm-x86/mach-visws/smpboot_hooks.h:1:
+#include "../mach-default/smpboot_hooks.h"

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2328: FILE: include/asm-x86/setup.h:12:
+extern void visws_early_detect(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2329: FILE: include/asm-x86/setup.h:13:
+extern int is_visws_box(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2367: FILE: include/asm-x86/visws/sgivw.h:1:
+/*

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000256440.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 32 warnings, 21 checks, 1352 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000256440.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
