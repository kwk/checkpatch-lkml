WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
>> Driver for battery charger integrated into Dialog Semiconductor DA9030 PMIC

WARNING:TYPO_SPELLING: 'wont' may be misspelled - perhaps 'won't'?
#54: 
> 2) This patch wont build, as the Makefile is trying to build da903x_battery.o
                ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#86: FILE: drivers/power/Kconfig:71:
+config BATTERY_DA9030
+	tristate "DA9030 battery driver"
+	depends on PMIC_DA903X
+	help
+	  Say Y here to enable support for batteries charger integrated into
+	  DA9030 PMIC.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#104: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#109: FILE: drivers/power/da9030_battery.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#113: FILE: drivers/power/da9030_battery.c:5:
+ * ^IMike Rapoport <mike@compulab.co.il>$

CHECK:BIT_MACRO: Prefer using the BIT macro
#128: FILE: drivers/power/da9030_battery.c:20:
+#define DA9030_STATUS_CHDET	(1 << 3)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#131: FILE: drivers/power/da9030_battery.c:23:
+#define DA9030_FAULT_LOG_OVER_TEMP	(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#132: FILE: drivers/power/da9030_battery.c:24:
+#define DA9030_FAULT_LOG_VBAT_OVER	(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#135: FILE: drivers/power/da9030_battery.c:27:
+#define DA9030_CHRG_CHARGER_ENABLE	(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#138: FILE: drivers/power/da9030_battery.c:30:
+#define DA9030_ADC_TBATREF_ENABLE	(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#139: FILE: drivers/power/da9030_battery.c:31:
+#define DA9030_ADC_LDO_INT_ENABLE	(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#142: FILE: drivers/power/da9030_battery.c:34:
+#define DA9030_ADC_TBAT_ENABLE		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#143: FILE: drivers/power/da9030_battery.c:35:
+#define DA9030_ADC_VBAT_IN_TXON		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#144: FILE: drivers/power/da9030_battery.c:36:
+#define DA9030_ADC_VCH_ENABLE		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#145: FILE: drivers/power/da9030_battery.c:37:
+#define DA9030_ADC_ICH_ENABLE		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#146: FILE: drivers/power/da9030_battery.c:38:
+#define DA9030_ADC_VBAT_ENABLE		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#147: FILE: drivers/power/da9030_battery.c:39:
+#define DA9030_ADC_AUTO_SLEEP_ENABLE	(1 << 0)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#166: FILE: drivers/power/da9030_battery.c:58:
+	uint8_t vbat_res;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#167: FILE: drivers/power/da9030_battery.c:59:
+	uint8_t vbatmin_res;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#168: FILE: drivers/power/da9030_battery.c:60:
+	uint8_t vbatmintxon;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#169: FILE: drivers/power/da9030_battery.c:61:
+	uint8_t ichmax_res;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#170: FILE: drivers/power/da9030_battery.c:62:
+	uint8_t ichmin_res;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#171: FILE: drivers/power/da9030_battery.c:63:
+	uint8_t ichaverage_res;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#172: FILE: drivers/power/da9030_battery.c:64:
+	uint8_t vchmax_res;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#173: FILE: drivers/power/da9030_battery.c:65:
+	uint8_t vchmin_res;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#174: FILE: drivers/power/da9030_battery.c:66:
+	uint8_t tbat_res;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#175: FILE: drivers/power/da9030_battery.c:67:
+	uint8_t adc_in4_res;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#176: FILE: drivers/power/da9030_battery.c:68:
+	uint8_t adc_in5_res;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#212: FILE: drivers/power/da9030_battery.c:104:
+	uint8_t fault;

CHECK:CAMELCASE: Avoid CamelCase: <mA>
#250: FILE: drivers/power/da9030_battery.c:142:
+			   charger->mA, charger->mV);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <mV>
#250: FILE: drivers/power/da9030_battery.c:142:
+			   charger->mA, charger->mV);

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#295: FILE: drivers/power/da9030_battery.c:187:
+	charger->debug_file = debugfs_create_file("charger", 0666, 0, charger,

Exporting world writable sysfs/debugfs files is usually a bad thing.
When done arbitrarily they can introduce serious security bugs.
In the past, some of the debugfs vulnerabilities would seemingly allow
any local user to write arbitrary values into device registers - a
situation from which little good can be expected to emerge.

See: https://lore.kernel.org/linux-arm-kernel/cover.1296818921.git.segoon@openwall.com/

ERROR:EXPORTED_WORLD_WRITABLE: Exporting writable files is usually an error. Consider more restrictive permissions.
#295: FILE: drivers/power/da9030_battery.c:187:
+	charger->debug_file = debugfs_create_file("charger", 0666, 0, charger,
+						 &bat_debug_fops);
CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#296: FILE: drivers/power/da9030_battery.c:188:
+	charger->debug_file = debugfs_create_file("charger", 0666, 0, charger,
+						 &bat_debug_fops);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#309: FILE: drivers/power/da9030_battery.c:201:
+}
+static inline void da9030_bat_remove_debugfs(struct da9030_charger *charger)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#323: FILE: drivers/power/da9030_battery.c:215:
+	uint8_t val;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#333: FILE: drivers/power/da9030_battery.c:225:
+	charger->chdet = da903x_query_status(charger->master,
+						     DA9030_STATUS_CHDET);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#338: FILE: drivers/power/da9030_battery.c:230:
+	uint8_t val = 0;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'charger->chdet'
#359: FILE: drivers/power/da9030_battery.c:251:
+		if ((charger->chdet) &&
+		    (charger->adc.vbat_res <
+		     charger->thresholds.vbat_charge_start)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'charger->adc.vbat_res <
 		     charger->thresholds.vbat_charge_start'
#359: FILE: drivers/power/da9030_battery.c:251:
+		if ((charger->chdet) &&
+		    (charger->adc.vbat_res <
+		     charger->thresholds.vbat_charge_start)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#369: FILE: drivers/power/da9030_battery.c:261:
+			da903x_write(charger->master, DA9030_VBATMON,
+				       charger->thresholds.vbat_charge_restart);

WARNING:TYPO_SPELLING: 'upate' may be misspelled - perhaps 'update'?
#373: FILE: drivers/power/da9030_battery.c:265:
+			   so upate DA9030 VBAT threshold
 			      ^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#373: FILE: drivers/power/da9030_battery.c:265:
+			/* we are charging and passed LOW_THRESH,
+			   so upate DA9030 VBAT threshold

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#413: FILE: drivers/power/da9030_battery.c:305:
+static void da9030_battery_check_status(struct da9030_charger *charger,
+				    union power_supply_propval *val)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#426: FILE: drivers/power/da9030_battery.c:318:
+static void da9030_battery_check_health(struct da9030_charger *charger,
+				    union power_supply_propval *val)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#437: FILE: drivers/power/da9030_battery.c:329:
+static int da9030_battery_get_property(struct power_supply *psy,
+				   enum power_supply_property psp,

WARNING:LINE_SPACING: Missing a blank line after declarations
#441: FILE: drivers/power/da9030_battery.c:333:
+	struct da9030_charger *charger;
+	charger = container_of(psy, struct da9030_charger, psy);

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#556: FILE: drivers/power/da9030_battery.c:448:
+	psy->num_properties = ARRAY_SIZE(da9030_battery_props);;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#564: FILE: drivers/power/da9030_battery.c:456:
+	v[0] = v[1] = charger->thresholds.vbat_low;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#574: FILE: drivers/power/da9030_battery.c:466:
+	/* enable reference voltage supply for ADC from the LDO_INTERNAL
+	   regulator. Must be set before ADC measurements can be made. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#574: FILE: drivers/power/da9030_battery.c:466:
+	   regulator. Must be set before ADC measurements can be made. */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pdata"
#595: FILE: drivers/power/da9030_battery.c:487:
+	if (pdata == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!charger"
#604: FILE: drivers/power/da9030_battery.c:496:
+	if (charger == NULL)

WARNING:TYPO_SPELLING: 'platfrom' may be misspelled - perhaps 'platform'?
#609: FILE: drivers/power/da9030_battery.c:501:
+	/* 10 seconds between monotor runs unless platfrom defines other
 	                                          ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#610: FILE: drivers/power/da9030_battery.c:502:
+	/* 10 seconds between monotor runs unless platfrom defines other
+	   interval */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#610: FILE: drivers/power/da9030_battery.c:502:
+	   interval */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#611: FILE: drivers/power/da9030_battery.c:503:
+	charger->interval = msecs_to_jiffies(

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000187686.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 16 warnings, 41 checks, 608 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000187686.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
