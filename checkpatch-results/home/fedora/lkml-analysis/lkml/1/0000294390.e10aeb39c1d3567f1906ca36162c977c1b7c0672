WARNING:TYPO_SPELLING: 'fileds' may be misspelled - perhaps 'fields'?
#29: 
for some fileds of special structures.
         ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#40: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#45: FILE: arch/ia64/kvm/asm-offsets.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#64: FILE: arch/ia64/kvm/asm-offsets.c:20:
+ * this program; if not, write to the Free Software Foundation, Inc., 59 Temple$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#76: FILE: arch/ia64/kvm/asm-offsets.c:32:
+#define DEFINE(sym, val) \
+	asm volatile("\n->" #sym " (%0) " #val : : "i" (val))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#79: FILE: arch/ia64/kvm/asm-offsets.c:35:
+#define BLANK() asm volatile("\n->" : :)

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#81: FILE: arch/ia64/kvm/asm-offsets.c:37:
+#define OFFSET(_sym, _str, _mem) \
+    DEFINE(_sym, offsetof(_str, _mem));

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: arch/ia64/kvm/asm-offsets.c:38:
+    DEFINE(_sym, offsetof(_str, _mem));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#92: FILE: arch/ia64/kvm/asm-offsets.c:48:
+	DEFINE(VMM_VCPU_META_RR0_OFFSET,
+			offsetof(struct kvm_vcpu, arch.metaphysical_rr0));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#94: FILE: arch/ia64/kvm/asm-offsets.c:50:
+	DEFINE(VMM_VCPU_META_SAVED_RR0_OFFSET,
+			offsetof(struct kvm_vcpu,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#95: FILE: arch/ia64/kvm/asm-offsets.c:51:
+			offsetof(struct kvm_vcpu,
+				arch.metaphysical_saved_rr0));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#97: FILE: arch/ia64/kvm/asm-offsets.c:53:
+	DEFINE(VMM_VCPU_VRR0_OFFSET,
+			offsetof(struct kvm_vcpu, arch.vrr[0]));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#99: FILE: arch/ia64/kvm/asm-offsets.c:55:
+	DEFINE(VMM_VPD_IRR0_OFFSET,
+			offsetof(struct vpd, irr[0]));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#101: FILE: arch/ia64/kvm/asm-offsets.c:57:
+	DEFINE(VMM_VCPU_ITC_CHECK_OFFSET,
+			offsetof(struct kvm_vcpu, arch.itc_check));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#103: FILE: arch/ia64/kvm/asm-offsets.c:59:
+	DEFINE(VMM_VCPU_IRQ_CHECK_OFFSET,
+			offsetof(struct kvm_vcpu, arch.irq_check));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#105: FILE: arch/ia64/kvm/asm-offsets.c:61:
+	DEFINE(VMM_VPD_VHPI_OFFSET,
+			offsetof(struct vpd, vhpi));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#107: FILE: arch/ia64/kvm/asm-offsets.c:63:
+	DEFINE(VMM_VCPU_VSA_BASE_OFFSET,
+			offsetof(struct kvm_vcpu, arch.vsa_base));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#109: FILE: arch/ia64/kvm/asm-offsets.c:65:
+	DEFINE(VMM_VCPU_VPD_OFFSET,
+			offsetof(struct kvm_vcpu, arch.vpd));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#111: FILE: arch/ia64/kvm/asm-offsets.c:67:
+	DEFINE(VMM_VCPU_IRQ_CHECK,
+			offsetof(struct kvm_vcpu, arch.irq_check));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#113: FILE: arch/ia64/kvm/asm-offsets.c:69:
+	DEFINE(VMM_VCPU_TIMER_PENDING,
+			offsetof(struct kvm_vcpu, arch.timer_pending));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#115: FILE: arch/ia64/kvm/asm-offsets.c:71:
+	DEFINE(VMM_VCPU_META_SAVED_RR0_OFFSET,
+			offsetof(struct kvm_vcpu, arch.metaphysical_saved_rr0));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#117: FILE: arch/ia64/kvm/asm-offsets.c:73:
+	DEFINE(VMM_VCPU_MODE_FLAGS_OFFSET,
+			offsetof(struct kvm_vcpu, arch.mode_flags));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#119: FILE: arch/ia64/kvm/asm-offsets.c:75:
+	DEFINE(VMM_VCPU_ITC_OFS_OFFSET,
+			offsetof(struct kvm_vcpu, arch.itc_offset));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#121: FILE: arch/ia64/kvm/asm-offsets.c:77:
+	DEFINE(VMM_VCPU_LAST_ITC_OFFSET,
+			offsetof(struct kvm_vcpu, arch.last_itc));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: arch/ia64/kvm/asm-offsets.c:79:
+	DEFINE(VMM_VCPU_SAVED_GP_OFFSET,
+			offsetof(struct kvm_vcpu, arch.saved_gp));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#128: FILE: arch/ia64/kvm/asm-offsets.c:84:
+	DEFINE(VMM_PT_REGS_B6_OFFSET,
+				offsetof(struct kvm_pt_regs, b6));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#130: FILE: arch/ia64/kvm/asm-offsets.c:86:
+	DEFINE(VMM_PT_REGS_B7_OFFSET,
+				offsetof(struct kvm_pt_regs, b7));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#132: FILE: arch/ia64/kvm/asm-offsets.c:88:
+	DEFINE(VMM_PT_REGS_AR_CSD_OFFSET,
+				offsetof(struct kvm_pt_regs, ar_csd));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#134: FILE: arch/ia64/kvm/asm-offsets.c:90:
+	DEFINE(VMM_PT_REGS_AR_SSD_OFFSET,
+				offsetof(struct kvm_pt_regs, ar_ssd));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#136: FILE: arch/ia64/kvm/asm-offsets.c:92:
+	DEFINE(VMM_PT_REGS_R8_OFFSET,
+				offsetof(struct kvm_pt_regs, r8));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#138: FILE: arch/ia64/kvm/asm-offsets.c:94:
+	DEFINE(VMM_PT_REGS_R9_OFFSET,
+				offsetof(struct kvm_pt_regs, r9));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: arch/ia64/kvm/asm-offsets.c:96:
+	DEFINE(VMM_PT_REGS_R10_OFFSET,
+				offsetof(struct kvm_pt_regs, r10));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#142: FILE: arch/ia64/kvm/asm-offsets.c:98:
+	DEFINE(VMM_PT_REGS_R11_OFFSET,
+				offsetof(struct kvm_pt_regs, r11));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#144: FILE: arch/ia64/kvm/asm-offsets.c:100:
+	DEFINE(VMM_PT_REGS_CR_IPSR_OFFSET,
+				offsetof(struct kvm_pt_regs, cr_ipsr));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#146: FILE: arch/ia64/kvm/asm-offsets.c:102:
+	DEFINE(VMM_PT_REGS_CR_IIP_OFFSET,
+				offsetof(struct kvm_pt_regs, cr_iip));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#148: FILE: arch/ia64/kvm/asm-offsets.c:104:
+	DEFINE(VMM_PT_REGS_CR_IFS_OFFSET,
+				offsetof(struct kvm_pt_regs, cr_ifs));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: arch/ia64/kvm/asm-offsets.c:106:
+	DEFINE(VMM_PT_REGS_AR_UNAT_OFFSET,
+				offsetof(struct kvm_pt_regs, ar_unat));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#152: FILE: arch/ia64/kvm/asm-offsets.c:108:
+	DEFINE(VMM_PT_REGS_AR_PFS_OFFSET,
+				offsetof(struct kvm_pt_regs, ar_pfs));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#154: FILE: arch/ia64/kvm/asm-offsets.c:110:
+	DEFINE(VMM_PT_REGS_AR_RSC_OFFSET,
+				offsetof(struct kvm_pt_regs, ar_rsc));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#156: FILE: arch/ia64/kvm/asm-offsets.c:112:
+	DEFINE(VMM_PT_REGS_AR_RNAT_OFFSET,
+				offsetof(struct kvm_pt_regs, ar_rnat));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#159: FILE: arch/ia64/kvm/asm-offsets.c:115:
+	DEFINE(VMM_PT_REGS_AR_BSPSTORE_OFFSET,
+				offsetof(struct kvm_pt_regs, ar_bspstore));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: arch/ia64/kvm/asm-offsets.c:117:
+	DEFINE(VMM_PT_REGS_PR_OFFSET,
+				offsetof(struct kvm_pt_regs, pr));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#163: FILE: arch/ia64/kvm/asm-offsets.c:119:
+	DEFINE(VMM_PT_REGS_B0_OFFSET,
+				offsetof(struct kvm_pt_regs, b0));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#165: FILE: arch/ia64/kvm/asm-offsets.c:121:
+	DEFINE(VMM_PT_REGS_LOADRS_OFFSET,
+				offsetof(struct kvm_pt_regs, loadrs));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#167: FILE: arch/ia64/kvm/asm-offsets.c:123:
+	DEFINE(VMM_PT_REGS_R1_OFFSET,
+				offsetof(struct kvm_pt_regs, r1));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#169: FILE: arch/ia64/kvm/asm-offsets.c:125:
+	DEFINE(VMM_PT_REGS_R12_OFFSET,
+				offsetof(struct kvm_pt_regs, r12));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#171: FILE: arch/ia64/kvm/asm-offsets.c:127:
+	DEFINE(VMM_PT_REGS_R13_OFFSET,
+				offsetof(struct kvm_pt_regs, r13));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#173: FILE: arch/ia64/kvm/asm-offsets.c:129:
+	DEFINE(VMM_PT_REGS_AR_FPSR_OFFSET,
+				offsetof(struct kvm_pt_regs, ar_fpsr));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#175: FILE: arch/ia64/kvm/asm-offsets.c:131:
+	DEFINE(VMM_PT_REGS_R15_OFFSET,
+				offsetof(struct kvm_pt_regs, r15));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#177: FILE: arch/ia64/kvm/asm-offsets.c:133:
+	DEFINE(VMM_PT_REGS_R14_OFFSET,
+				offsetof(struct kvm_pt_regs, r14));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#179: FILE: arch/ia64/kvm/asm-offsets.c:135:
+	DEFINE(VMM_PT_REGS_R2_OFFSET,
+				offsetof(struct kvm_pt_regs, r2));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#181: FILE: arch/ia64/kvm/asm-offsets.c:137:
+	DEFINE(VMM_PT_REGS_R3_OFFSET,
+				offsetof(struct kvm_pt_regs, r3));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#183: FILE: arch/ia64/kvm/asm-offsets.c:139:
+	DEFINE(VMM_PT_REGS_R16_OFFSET,
+				offsetof(struct kvm_pt_regs, r16));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#185: FILE: arch/ia64/kvm/asm-offsets.c:141:
+	DEFINE(VMM_PT_REGS_R17_OFFSET,
+				offsetof(struct kvm_pt_regs, r17));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#187: FILE: arch/ia64/kvm/asm-offsets.c:143:
+	DEFINE(VMM_PT_REGS_R18_OFFSET,
+				offsetof(struct kvm_pt_regs, r18));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#189: FILE: arch/ia64/kvm/asm-offsets.c:145:
+	DEFINE(VMM_PT_REGS_R19_OFFSET,
+				offsetof(struct kvm_pt_regs, r19));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#191: FILE: arch/ia64/kvm/asm-offsets.c:147:
+	DEFINE(VMM_PT_REGS_R20_OFFSET,
+				offsetof(struct kvm_pt_regs, r20));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#193: FILE: arch/ia64/kvm/asm-offsets.c:149:
+	DEFINE(VMM_PT_REGS_R21_OFFSET,
+				offsetof(struct kvm_pt_regs, r21));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#195: FILE: arch/ia64/kvm/asm-offsets.c:151:
+	DEFINE(VMM_PT_REGS_R22_OFFSET,
+				offsetof(struct kvm_pt_regs, r22));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#197: FILE: arch/ia64/kvm/asm-offsets.c:153:
+	DEFINE(VMM_PT_REGS_R23_OFFSET,
+				offsetof(struct kvm_pt_regs, r23));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#199: FILE: arch/ia64/kvm/asm-offsets.c:155:
+	DEFINE(VMM_PT_REGS_R24_OFFSET,
+				offsetof(struct kvm_pt_regs, r24));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#201: FILE: arch/ia64/kvm/asm-offsets.c:157:
+	DEFINE(VMM_PT_REGS_R25_OFFSET,
+				offsetof(struct kvm_pt_regs, r25));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: arch/ia64/kvm/asm-offsets.c:159:
+	DEFINE(VMM_PT_REGS_R26_OFFSET,
+				offsetof(struct kvm_pt_regs, r26));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: arch/ia64/kvm/asm-offsets.c:161:
+	DEFINE(VMM_PT_REGS_R27_OFFSET,
+				offsetof(struct kvm_pt_regs, r27));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#207: FILE: arch/ia64/kvm/asm-offsets.c:163:
+	DEFINE(VMM_PT_REGS_R28_OFFSET,
+				offsetof(struct kvm_pt_regs, r28));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#209: FILE: arch/ia64/kvm/asm-offsets.c:165:
+	DEFINE(VMM_PT_REGS_R29_OFFSET,
+				offsetof(struct kvm_pt_regs, r29));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: arch/ia64/kvm/asm-offsets.c:167:
+	DEFINE(VMM_PT_REGS_R30_OFFSET,
+				offsetof(struct kvm_pt_regs, r30));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#213: FILE: arch/ia64/kvm/asm-offsets.c:169:
+	DEFINE(VMM_PT_REGS_R31_OFFSET,
+				offsetof(struct kvm_pt_regs, r31));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#215: FILE: arch/ia64/kvm/asm-offsets.c:171:
+	DEFINE(VMM_PT_REGS_AR_CCV_OFFSET,
+				offsetof(struct kvm_pt_regs, ar_ccv));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#217: FILE: arch/ia64/kvm/asm-offsets.c:173:
+	DEFINE(VMM_PT_REGS_F6_OFFSET,
+				offsetof(struct kvm_pt_regs, f6));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#219: FILE: arch/ia64/kvm/asm-offsets.c:175:
+	DEFINE(VMM_PT_REGS_F7_OFFSET,
+				offsetof(struct kvm_pt_regs, f7));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#221: FILE: arch/ia64/kvm/asm-offsets.c:177:
+	DEFINE(VMM_PT_REGS_F8_OFFSET,
+				offsetof(struct kvm_pt_regs, f8));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#223: FILE: arch/ia64/kvm/asm-offsets.c:179:
+	DEFINE(VMM_PT_REGS_F9_OFFSET,
+				offsetof(struct kvm_pt_regs, f9));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#225: FILE: arch/ia64/kvm/asm-offsets.c:181:
+	DEFINE(VMM_PT_REGS_F10_OFFSET,
+				offsetof(struct kvm_pt_regs, f10));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#227: FILE: arch/ia64/kvm/asm-offsets.c:183:
+	DEFINE(VMM_PT_REGS_F11_OFFSET,
+				offsetof(struct kvm_pt_regs, f11));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#229: FILE: arch/ia64/kvm/asm-offsets.c:185:
+	DEFINE(VMM_PT_REGS_R4_OFFSET,
+				offsetof(struct kvm_pt_regs, r4));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#231: FILE: arch/ia64/kvm/asm-offsets.c:187:
+	DEFINE(VMM_PT_REGS_R5_OFFSET,
+				offsetof(struct kvm_pt_regs, r5));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#233: FILE: arch/ia64/kvm/asm-offsets.c:189:
+	DEFINE(VMM_PT_REGS_R6_OFFSET,
+				offsetof(struct kvm_pt_regs, r6));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#235: FILE: arch/ia64/kvm/asm-offsets.c:191:
+	DEFINE(VMM_PT_REGS_R7_OFFSET,
+				offsetof(struct kvm_pt_regs, r7));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: arch/ia64/kvm/asm-offsets.c:193:
+	DEFINE(VMM_PT_REGS_EML_UNAT_OFFSET,
+				offsetof(struct kvm_pt_regs, eml_unat));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: arch/ia64/kvm/asm-offsets.c:195:
+	DEFINE(VMM_VCPU_IIPA_OFFSET,
+				offsetof(struct kvm_vcpu, arch.cr_iipa));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#241: FILE: arch/ia64/kvm/asm-offsets.c:197:
+	DEFINE(VMM_VCPU_OPCODE_OFFSET,
+				offsetof(struct kvm_vcpu, arch.opcode));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#244: FILE: arch/ia64/kvm/asm-offsets.c:200:
+	DEFINE(VMM_VCPU_ISR_OFFSET,
+				offsetof(struct kvm_vcpu, arch.cr_isr));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: arch/ia64/kvm/asm-offsets.c:202:
+	DEFINE(VMM_PT_REGS_R16_SLOT,
+				(((offsetof(struct kvm_pt_regs, r16)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#249: FILE: arch/ia64/kvm/asm-offsets.c:205:
+	DEFINE(VMM_VCPU_MODE_FLAGS_OFFSET,
+				offsetof(struct kvm_vcpu, arch.mode_flags));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#256: FILE: arch/ia64/kvm/asm-offsets.c:212:
+	DEFINE(VMM_VLSAPIC_INSVC_BASE_OFFSET,
+			offsetof(struct kvm_vcpu, arch.insvc[0]));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000294390.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 5 warnings, 78 checks, 251 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000294390.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
