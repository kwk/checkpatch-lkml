WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#597: FILE: kernel/power/suspend.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#598: FILE: kernel/power/suspend.c:2:
+ * kernel/power/suspend.c - Suspend to RAM and standby functionality.

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:CONST_STRUCT: struct platform_suspend_ops should normally be const
#622: FILE: kernel/power/suspend.c:26:
+static struct platform_suspend_ops *suspend_ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct platform_suspend_ops should normally be const
#628: FILE: kernel/power/suspend.c:32:
+void suspend_set_ops(struct platform_suspend_ops *ops)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#660: FILE: kernel/power/suspend.c:64:
+		printk(KERN_INFO "suspend debug: Waiting for 5 seconds.\n");

CHECK:CAMELCASE: Avoid CamelCase: <Finish>
#685: FILE: kernel/power/suspend.c:89:
+		goto Finish;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#704: FILE: kernel/power/suspend.c:108:
+void __attribute__ ((weak)) arch_suspend_disable_irqs(void)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#710: FILE: kernel/power/suspend.c:114:
+void __attribute__ ((weak)) arch_suspend_enable_irqs(void)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#733: FILE: kernel/power/suspend.c:137:
+		printk(KERN_ERR "PM: Some devices failed to power down\n");

CHECK:CAMELCASE: Avoid CamelCase: <Platfrom_finish>
#734: FILE: kernel/power/suspend.c:138:
+		goto Platfrom_finish;

CHECK:CAMELCASE: Avoid CamelCase: <Power_up_devices>
#740: FILE: kernel/power/suspend.c:144:
+			goto Power_up_devices;

CHECK:CAMELCASE: Avoid CamelCase: <Platform_wake>
#744: FILE: kernel/power/suspend.c:148:
+		goto Platform_wake;

CHECK:CAMELCASE: Avoid CamelCase: <Enable_cpus>
#748: FILE: kernel/power/suspend.c:152:
+		goto Enable_cpus;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#751: FILE: kernel/power/suspend.c:155:
+	BUG_ON(!irqs_disabled());

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#761: FILE: kernel/power/suspend.c:165:
+	BUG_ON(irqs_disabled());

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#790: FILE: kernel/power/suspend.c:194:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:CAMELCASE: Avoid CamelCase: <Close>
#795: FILE: kernel/power/suspend.c:199:
+			goto Close;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#801: FILE: kernel/power/suspend.c:205:
+		printk(KERN_ERR "PM: Some devices failed to suspend\n");

CHECK:CAMELCASE: Avoid CamelCase: <Recover_platform>
#802: FILE: kernel/power/suspend.c:206:
+		goto Recover_platform;

CHECK:CAMELCASE: Avoid CamelCase: <Resume_devices>
#810: FILE: kernel/power/suspend.c:214:
+ Resume_devices:

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#860: FILE: kernel/power/suspend.c:264:
+	printk(KERN_INFO "PM: Syncing filesystems ... ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#862: FILE: kernel/power/suspend.c:266:
+	printk("done.\n");

CHECK:CAMELCASE: Avoid CamelCase: <Unlock>
#867: FILE: kernel/power/suspend.c:271:
+		goto Unlock;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#909: FILE: kernel/power/power.h:166:
+extern bool valid_state(suspend_state_t state);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#911: FILE: kernel/power/power.h:168:
+extern int enter_state(suspend_state_t state);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#917: FILE: kernel/power/power.h:174:
 }
+static inline int enter_state(suspend_state_t state) { return -ENOSYS; }

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#917: FILE: kernel/power/power.h:174:
+static inline int enter_state(suspend_state_t state) { return -ENOSYS; }

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#923: FILE: kernel/power/power.h:180:
+extern void suspend_test_start(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#924: FILE: kernel/power/power.h:181:
+extern void suspend_test_finish(const char *label);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#951: FILE: kernel/power/suspend-test.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#952: FILE: kernel/power/suspend-test.c:2:
+ * kernel/power/suspend-test.c - Suspend to RAM and standby test facility.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#988: FILE: kernel/power/suspend-test.c:38:
+	unsigned msec;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#992: FILE: kernel/power/suspend-test.c:42:
+	pr_info("PM: %s took %d.%03d seconds\n", label,
+			msec / 1000, msec % 1000);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1014: FILE: kernel/power/suspend-test.c:64:
+	static char err_wakealarm [] __initdata =

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1028: FILE: kernel/power/suspend-test.c:78:
+		printk(err_readtime, dev_name(&rtc->dev), status);

WARNING:SIZEOF_PARENTHESIS: sizeof alm should be sizeof(alm)
#1033: FILE: kernel/power/suspend-test.c:83:
+	memset(&alm, 0, sizeof alm);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1039: FILE: kernel/power/suspend-test.c:89:
+		printk(err_wakealarm, dev_name(&rtc->dev), status);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1044: FILE: kernel/power/suspend-test.c:94:
+		printk(info_test, pm_states[state]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1050: FILE: kernel/power/suspend-test.c:100:
+		printk(info_test, pm_states[state]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1054: FILE: kernel/power/suspend-test.c:104:
+		printk(err_suspend, status);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1089: FILE: kernel/power/suspend-test.c:139:
+	unsigned i;

CHECK:SPACING: No space is necessary after a cast
#1098: FILE: kernel/power/suspend-test.c:148:
+		test_state = (__force suspend_state_t) i;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1101: FILE: kernel/power/suspend-test.c:151:
+	printk(warn_bad_state, value);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#1104: FILE: kernel/power/suspend-test.c:154:
+__setup("test_suspend", setup_test_suspend);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1118: FILE: kernel/power/suspend-test.c:168:
+		printk(warn_bad_state, pm_states[test_state]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1127: FILE: kernel/power/suspend-test.c:177:
+		printk(warn_no_rtc);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000114543.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 28 warnings, 17 checks, 918 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000114543.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
