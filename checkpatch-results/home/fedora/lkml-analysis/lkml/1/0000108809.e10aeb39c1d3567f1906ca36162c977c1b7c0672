CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#177: FILE: include/linux/percpu.h:84:
+extern int __init pcpu_lpage_build_unit_map(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#177: FILE: include/linux/percpu.h:84:
+extern int __init pcpu_lpage_build_unit_map(

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#195: FILE: include/linux/percpu.h:101:
+static inline int pcpu_lpage_build_unit_map(

WARNING:TYPO_SPELLING: 'accomodate' may be misspelled - perhaps 'accommodate'?
#269: FILE: mm/percpu.c:1638:
+	 * which can accomodate 4k aligned segments which are equal to
 	             ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:INDENTED_LABEL: labels should not be indented
#284: FILE: mm/percpu.c:1653:
+	next_group:

WARNING:LINE_SPACING: Missing a blank line after declarations
#314: FILE: mm/percpu.c:1683:
+			int this_allocs = DIV_ROUND_UP(group_cnt[group], upa);
+			allocs += this_allocs;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#392: FILE: mm/percpu.c:1758:
+	printk("%spcpu-lpage: sta/res/dyn=%zu/%zu/%zu unit=%zu lpage=%zu", lvl,

CHECK:BRACES: braces {} should be used on all arms of this statement
#397: FILE: mm/percpu.c:1763:
+			if (!(lpage++ % lpl)) {
[...]
+			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#398: FILE: mm/percpu.c:1764:
+				printk("\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#399: FILE: mm/percpu.c:1765:
+				printk("%spcpu-lpage: ", lvl);

CHECK:BRACES: Unbalanced braces around else statement
#400: FILE: mm/percpu.c:1766:
+			} else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#401: FILE: mm/percpu.c:1767:
+				printk("| ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#404: FILE: mm/percpu.c:1770:
+			printk("%0*d ", width, cpu);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#406: FILE: mm/percpu.c:1772:
+			printk("%s ", empty_str);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#408: FILE: mm/percpu.c:1774:
+	printk("\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#489: FILE: mm/percpu.c:1828:
+	BUG_ON(chunk_size % lpage_size);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:INDENTED_LABEL: labels should not be indented
#513: FILE: mm/percpu.c:1850:
+	found:

WARNING:LINE_SPACING: Missing a blank line after declarations
#550: FILE: mm/percpu.c:1874:
+			void *ptr = pcpul_map[off / lpage_size].ptr;
+			next = min(roundup(off + 1, lpage_size), end);

WARNING:SPLIT_STRING: quoted string split across lines
#581: FILE: mm/percpu.c:1898:
 	pr_info("PERCPU: Remapped at %p with large pages, static data "
+		"%zu bytes\n", vm.addr, static_size);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000108809.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 14 warnings, 5 checks, 583 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000108809.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
