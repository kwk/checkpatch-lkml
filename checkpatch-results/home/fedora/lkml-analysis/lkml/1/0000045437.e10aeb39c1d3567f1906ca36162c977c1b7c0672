WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#84: FILE: drivers/gpu/drm/radeon/atombios_crtc.c:587:
+	/* Pin framebuffer & get tilling informations */
 	                                 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#144: FILE: drivers/gpu/drm/radeon/r100.c:259:
+		r = radeon_bo_create(rdev, NULL, RADEON_GPU_PAGE_SIZE, true,
+					RADEON_GEM_DOMAIN_GTT,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#158: FILE: drivers/gpu/drm/radeon/r100.c:269:
+		r = radeon_bo_pin(rdev->wb.wb_obj, RADEON_GEM_DOMAIN_GTT,
+					&rdev->wb.gpu_addr);

WARNING:SPLIT_STRING: quoted string split across lines
#256: FILE: drivers/gpu/drm/radeon/r100.c:2678:
 			DRM_ERROR("Texture of unit %u needs %lu bytes but is "
+				  "%lu\n", u, size, radeon_bo_size(robj));

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#297: FILE: drivers/gpu/drm/radeon/r100.c:2740:
+				dev_err(rdev->dev, "(PW %u) Vertex array %u "
+					"need %lu dwords have %lu dwords\n",

WARNING:SPLIT_STRING: quoted string split across lines
#314: FILE: drivers/gpu/drm/radeon/r100.c:2759:
+				dev_err(rdev->dev, "(PW %u) Vertex array %u "
+					"need %lu dwords have %lu dwords\n",

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#364: FILE: drivers/gpu/drm/radeon/r100_track.h:26:
+	unsigned		offset;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#518: FILE: drivers/gpu/drm/radeon/r600.c:1417:
+		r = radeon_bo_create(rdev, NULL, RADEON_GPU_PAGE_SIZE, true,
+				RADEON_GEM_DOMAIN_GTT, &rdev->wb.wb_obj);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#531: FILE: drivers/gpu/drm/radeon/r600.c:1428:
+		r = radeon_bo_pin(rdev->wb.wb_obj, RADEON_GEM_DOMAIN_GTT,
 				&rdev->wb.gpu_addr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#558: FILE: drivers/gpu/drm/radeon/r600.c:1540:
+	r = radeon_bo_pin(rdev->r600_blit.shader_obj, RADEON_GEM_DOMAIN_VRAM,
+			&rdev->r600_blit.shader_gpu_addr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#617: FILE: drivers/gpu/drm/radeon/r600_blit_kms.c:477:
+	r = radeon_bo_create(rdev, NULL, obj_size, true, RADEON_GEM_DOMAIN_VRAM,
+				&rdev->r600_blit.shader_obj);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#724: FILE: drivers/gpu/drm/radeon/radeon.h:213:
+	unsigned			pin_count;

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#787: FILE: drivers/gpu/drm/radeon/radeon.h:236:
+	struct mutex		mutex;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#989: FILE: drivers/gpu/drm/radeon/radeon_cs.c:86:
+			radeon_bo_list_add_object(&p->relocs[i].lobj,
+						&p->validated);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1003: FILE: drivers/gpu/drm/radeon/radeon_cs.c:194:
+		radeon_bo_list_unvalidate(&parser->validated,
+						parser->ib->fence);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1104: FILE: drivers/gpu/drm/radeon/radeon_fb.c:197:
+		ret = radeon_bo_set_tiling_flags(rbo,
+					tiling_flags | RADEON_TILING_SURFACE,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1218: FILE: drivers/gpu/drm/radeon/radeon_gart.c:82:
+		r = radeon_bo_create(rdev, NULL, rdev->gart.table_size,
+					true, RADEON_GEM_DOMAIN_VRAM,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1238: FILE: drivers/gpu/drm/radeon/radeon_gart.c:100:
+	r = radeon_bo_pin(rdev->gart.table.vram.robj,
+				RADEON_GEM_DOMAIN_VRAM, &gpu_addr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1247: FILE: drivers/gpu/drm/radeon/radeon_gart.c:106:
+	r = radeon_bo_kmap(rdev->gart.table.vram.robj,
+				(void **)&rdev->gart.table.vram.ptr);

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#1532: FILE: drivers/gpu/drm/radeon/radeon_legacy_crtc.c:436:
+	/* Pin framebuffer & get tilling informations */
 	                                 ^^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1679: FILE: drivers/gpu/drm/radeon/radeon_object.c:79:
+int radeon_bo_create(struct radeon_device *rdev, struct drm_gem_object *gobj,
+			unsigned long size, bool kernel, u32 domain,

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*bo)...) over kzalloc(sizeof(struct radeon_bo)...)
#1698: FILE: drivers/gpu/drm/radeon/radeon_object.c:96:
+	bo = kzalloc(sizeof(struct radeon_bo), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bo"
#1699: FILE: drivers/gpu/drm/radeon/radeon_object.c:97:
+	if (bo == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1719: FILE: drivers/gpu/drm/radeon/radeon_object.c:107:
+	r = ttm_buffer_object_init(&rdev->mman.bdev, &bo->tbo, size, type,
+					flags, 0, 0, true, NULL, size,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bo->kptr"
#1783: FILE: drivers/gpu/drm/radeon/radeon_object.c:151:
+	if (bo->kptr == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tbo"
#1818: FILE: drivers/gpu/drm/radeon/radeon_object.c:166:
+	if (tbo == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1867: FILE: drivers/gpu/drm/radeon/radeon_object.c:189:
+	r = ttm_buffer_object_validate(&bo->tbo, bo->tbo.proposed_placement,
+					true, false);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "gpu_addr"
#1870: FILE: drivers/gpu/drm/radeon/radeon_object.c:192:
+		if (gpu_addr != NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1952: FILE: drivers/gpu/drm/radeon/radeon_object.c:218:
+	r = ttm_buffer_object_validate(&bo->tbo, bo->tbo.proposed_placement,
+					true, false);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2033: FILE: drivers/gpu/drm/radeon/radeon_object.c:281:
+void radeon_bo_list_add_object(struct radeon_bo_list *lobj,
+				struct list_head *head)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2117: FILE: drivers/gpu/drm/radeon/radeon_object.c:337:
+			r = ttm_buffer_object_validate(&bo->tbo,
+						bo->tbo.proposed_placement,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2178: FILE: drivers/gpu/drm/radeon/radeon_object.c:376:
+int radeon_bo_fbdev_mmap(struct radeon_bo *bo,
 			     struct vm_area_struct *vma)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2201: FILE: drivers/gpu/drm/radeon/radeon_object.c:389:
+	BUG_ON(!atomic_read(&bo->tbo.reserved));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2282: FILE: drivers/gpu/drm/radeon/radeon_object.c:452:
+int radeon_bo_set_tiling_flags(struct radeon_bo *bo,
+				uint32_t tiling_flags, uint32_t pitch)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2282: FILE: drivers/gpu/drm/radeon/radeon_object.c:452:
+				uint32_t tiling_flags, uint32_t pitch)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2301: FILE: drivers/gpu/drm/radeon/radeon_object.c:466:
+				uint32_t *tiling_flags,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2304: FILE: drivers/gpu/drm/radeon/radeon_object.c:469:
+	BUG_ON(!atomic_read(&bo->tbo.reserved));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2316: FILE: drivers/gpu/drm/radeon/radeon_object.c:477:
+int radeon_bo_check_tiling(struct radeon_bo *bo, bool has_moved,
+				bool force_drop)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2319: FILE: drivers/gpu/drm/radeon/radeon_object.c:479:
+	BUG_ON(!atomic_read(&bo->tbo.reserved));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bo->surface_reg >= 0'
#2343: FILE: drivers/gpu/drm/radeon/radeon_object.c:498:
+	if ((bo->surface_reg >= 0) && !has_moved)

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LINE_SPACING: Missing a blank line after declarations
#2357: FILE: drivers/gpu/drm/radeon/radeon_object.c:508:
+	struct radeon_bo *rbo = container_of(bo, struct radeon_bo, tbo);
+	radeon_bo_check_tiling(rbo, 0, 1);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#2365: FILE: drivers/gpu/drm/radeon/radeon_object.c:514:
+	struct radeon_bo *rbo = container_of(bo, struct radeon_bo, tbo);
+	radeon_bo_check_tiling(rbo, 0, 0);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2390: FILE: drivers/gpu/drm/radeon/radeon_object.h:40:
+static inline unsigned radeon_mem_type_to_domain(u32 mem_type)

WARNING:TYPO_SPELLING: 'usefull' may be misspelled - perhaps 'useful'?
#2442: FILE: drivers/gpu/drm/radeon/radeon_object.h:92:
+ * function, it might be usefull to add check for this for debugging.
                          ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2480: FILE: drivers/gpu/drm/radeon/radeon_object.h:124:
+static inline int radeon_bo_wait(struct radeon_bo *bo, u32 *mem_type,
+					bool no_wait)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2504: FILE: drivers/gpu/drm/radeon/radeon_object.h:148:
+extern int radeon_bo_create(struct radeon_device *rdev,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2505: FILE: drivers/gpu/drm/radeon/radeon_object.h:149:
+extern int radeon_bo_create(struct radeon_device *rdev,
+				struct drm_gem_object *gobj, unsigned long size,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2508: FILE: drivers/gpu/drm/radeon/radeon_object.h:152:
+extern int radeon_bo_kmap(struct radeon_bo *bo, void **ptr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2509: FILE: drivers/gpu/drm/radeon/radeon_object.h:153:
+extern void radeon_bo_kunmap(struct radeon_bo *bo);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2510: FILE: drivers/gpu/drm/radeon/radeon_object.h:154:
+extern void radeon_bo_unref(struct radeon_bo **bo);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2511: FILE: drivers/gpu/drm/radeon/radeon_object.h:155:
+extern int radeon_bo_pin(struct radeon_bo *bo, u32 domain, u64 *gpu_addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2512: FILE: drivers/gpu/drm/radeon/radeon_object.h:156:
+extern int radeon_bo_unpin(struct radeon_bo *bo);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2513: FILE: drivers/gpu/drm/radeon/radeon_object.h:157:
+extern int radeon_bo_evict_vram(struct radeon_device *rdev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2514: FILE: drivers/gpu/drm/radeon/radeon_object.h:158:
+extern void radeon_bo_force_delete(struct radeon_device *rdev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2515: FILE: drivers/gpu/drm/radeon/radeon_object.h:159:
+extern int radeon_bo_init(struct radeon_device *rdev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2516: FILE: drivers/gpu/drm/radeon/radeon_object.h:160:
+extern void radeon_bo_fini(struct radeon_device *rdev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2517: FILE: drivers/gpu/drm/radeon/radeon_object.h:161:
+extern void radeon_bo_list_add_object(struct radeon_bo_list *lobj,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2518: FILE: drivers/gpu/drm/radeon/radeon_object.h:162:
+extern void radeon_bo_list_add_object(struct radeon_bo_list *lobj,
+				struct list_head *head);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2519: FILE: drivers/gpu/drm/radeon/radeon_object.h:163:
+extern int radeon_bo_list_reserve(struct list_head *head);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2520: FILE: drivers/gpu/drm/radeon/radeon_object.h:164:
+extern void radeon_bo_list_unreserve(struct list_head *head);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2521: FILE: drivers/gpu/drm/radeon/radeon_object.h:165:
+extern int radeon_bo_list_validate(struct list_head *head, void *fence);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2522: FILE: drivers/gpu/drm/radeon/radeon_object.h:166:
+extern void radeon_bo_list_unvalidate(struct list_head *head, void *fence);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2523: FILE: drivers/gpu/drm/radeon/radeon_object.h:167:
+extern int radeon_bo_fbdev_mmap(struct radeon_bo *bo,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2525: FILE: drivers/gpu/drm/radeon/radeon_object.h:169:
+extern int radeon_bo_set_tiling_flags(struct radeon_bo *bo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2526: FILE: drivers/gpu/drm/radeon/radeon_object.h:170:
+extern int radeon_bo_set_tiling_flags(struct radeon_bo *bo,
+				u32 tiling_flags, u32 pitch);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2527: FILE: drivers/gpu/drm/radeon/radeon_object.h:171:
+extern void radeon_bo_get_tiling_flags(struct radeon_bo *bo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2528: FILE: drivers/gpu/drm/radeon/radeon_object.h:172:
+extern void radeon_bo_get_tiling_flags(struct radeon_bo *bo,
+				u32 *tiling_flags, u32 *pitch);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2529: FILE: drivers/gpu/drm/radeon/radeon_object.h:173:
+extern int radeon_bo_check_tiling(struct radeon_bo *bo, bool has_moved,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2530: FILE: drivers/gpu/drm/radeon/radeon_object.h:174:
+extern int radeon_bo_check_tiling(struct radeon_bo *bo, bool has_moved,
+				bool force_drop);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2531: FILE: drivers/gpu/drm/radeon/radeon_object.h:175:
+extern void radeon_bo_move_notify(struct ttm_buffer_object *bo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2532: FILE: drivers/gpu/drm/radeon/radeon_object.h:176:
+extern void radeon_bo_move_notify(struct ttm_buffer_object *bo,
+					struct ttm_mem_reg *mem);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2533: FILE: drivers/gpu/drm/radeon/radeon_object.h:177:
+extern void radeon_bo_fault_reserve_notify(struct ttm_buffer_object *bo);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2547: FILE: drivers/gpu/drm/radeon/radeon_ring.c:168:
+	r = radeon_bo_create(rdev, NULL,  RADEON_IB_POOL_SIZE*64*1024,
 	                                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2547: FILE: drivers/gpu/drm/radeon/radeon_ring.c:168:
+	r = radeon_bo_create(rdev, NULL,  RADEON_IB_POOL_SIZE*64*1024,
 	                                                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2548: FILE: drivers/gpu/drm/radeon/radeon_ring.c:169:
+	r = radeon_bo_create(rdev, NULL,  RADEON_IB_POOL_SIZE*64*1024,
+				true, RADEON_GEM_DOMAIN_GTT,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2604: FILE: drivers/gpu/drm/radeon/radeon_ring.c:304:
+		r = radeon_bo_create(rdev, NULL, rdev->cp.ring_size, true,
+					RADEON_GEM_DOMAIN_GTT,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2619: FILE: drivers/gpu/drm/radeon/radeon_ring.c:314:
+		r = radeon_bo_pin(rdev->cp.ring_obj, RADEON_GEM_DOMAIN_GTT,
+					&rdev->cp.gpu_addr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2629: FILE: drivers/gpu/drm/radeon/radeon_ring.c:321:
+		r = radeon_bo_kmap(rdev->cp.ring_obj,
 				       (void **)&rdev->cp.ring);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2681: FILE: drivers/gpu/drm/radeon/radeon_test.c:56:
+	r = radeon_bo_create(rdev, NULL, size, true, RADEON_GEM_DOMAIN_VRAM,
+				&vram_obj);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2705: FILE: drivers/gpu/drm/radeon/radeon_test.c:75:
+		r = radeon_bo_create(rdev, NULL, size, true,
+					 RADEON_GEM_DOMAIN_GTT, gtt_obj + i);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2843: FILE: drivers/gpu/drm/radeon/radeon_ttm.c:486:
+	r = ttm_bo_init_mm(&rdev->mman.bdev, TTM_PL_VRAM,
+				0, rdev->mc.real_vram_size >> PAGE_SHIFT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2852: FILE: drivers/gpu/drm/radeon/radeon_ttm.c:492:
+	r = radeon_bo_create(rdev, NULL, 256 * 1024, true,
+				RADEON_GEM_DOMAIN_VRAM,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2873: FILE: drivers/gpu/drm/radeon/radeon_ttm.c:509:
+	r = ttm_bo_init_mm(&rdev->mman.bdev, TTM_PL_TT,
+				0, rdev->mc.gtt_size >> PAGE_SHIFT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3050: FILE: drivers/gpu/drm/radeon/rv770.c:891:
+	r = radeon_bo_pin(rdev->r600_blit.shader_obj, RADEON_GEM_DOMAIN_VRAM,
+			&rdev->r600_blit.shader_gpu_addr);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000045437.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 14 warnings, 70 checks, 2795 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000045437.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
