CHECK:CAMELCASE: Avoid CamelCase: <GetNextWriteLocation>
#46: FILE: drivers/staging/hv/RingBuffer.c:71:
+GetNextWriteLocation(struct hv_ring_buffer_info *RingInfo)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <RingInfo>
#46: FILE: drivers/staging/hv/RingBuffer.c:71:
+GetNextWriteLocation(struct hv_ring_buffer_info *RingInfo)

CHECK:CAMELCASE: Avoid CamelCase: <SetNextWriteLocation>
#55: FILE: drivers/staging/hv/RingBuffer.c:90:
+SetNextWriteLocation(struct hv_ring_buffer_info *RingInfo, u32 NextWriteLocation)

CHECK:CAMELCASE: Avoid CamelCase: <NextWriteLocation>
#55: FILE: drivers/staging/hv/RingBuffer.c:90:
+SetNextWriteLocation(struct hv_ring_buffer_info *RingInfo, u32 NextWriteLocation)

CHECK:CAMELCASE: Avoid CamelCase: <GetNextReadLocation>
#64: FILE: drivers/staging/hv/RingBuffer.c:105:
+GetNextReadLocation(struct hv_ring_buffer_info *RingInfo)

CHECK:CAMELCASE: Avoid CamelCase: <GetNextReadLocationWithOffset>
#73: FILE: drivers/staging/hv/RingBuffer.c:125:
+GetNextReadLocationWithOffset(struct hv_ring_buffer_info *RingInfo, u32 Offset)

CHECK:CAMELCASE: Avoid CamelCase: <Offset>
#73: FILE: drivers/staging/hv/RingBuffer.c:125:
+GetNextReadLocationWithOffset(struct hv_ring_buffer_info *RingInfo, u32 Offset)

CHECK:CAMELCASE: Avoid CamelCase: <SetNextReadLocation>
#82: FILE: drivers/staging/hv/RingBuffer.c:146:
+SetNextReadLocation(struct hv_ring_buffer_info *RingInfo, u32 NextReadLocation)

CHECK:CAMELCASE: Avoid CamelCase: <NextReadLocation>
#82: FILE: drivers/staging/hv/RingBuffer.c:146:
+SetNextReadLocation(struct hv_ring_buffer_info *RingInfo, u32 NextReadLocation)

CHECK:CAMELCASE: Avoid CamelCase: <GetRingBufferSize>
#91: FILE: drivers/staging/hv/RingBuffer.c:178:
+GetRingBufferSize(struct hv_ring_buffer_info *RingInfo)

CHECK:CAMELCASE: Avoid CamelCase: <GetRingBufferIndices>
#100: FILE: drivers/staging/hv/RingBuffer.c:193:
+GetRingBufferIndices(struct hv_ring_buffer_info *RingInfo)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#109: FILE: drivers/staging/hv/RingBuffer.c:232:
+^Ivoid  ^I^I^I^I*Src,$

CHECK:CAMELCASE: Avoid CamelCase: <Src>
#109: FILE: drivers/staging/hv/RingBuffer.c:232:
+	void  				*Src,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#116: FILE: drivers/staging/hv/RingBuffer.c:238:
+^Ivoid ^I^I^I^I*Dest,$

CHECK:CAMELCASE: Avoid CamelCase: <Dest>
#116: FILE: drivers/staging/hv/RingBuffer.c:238:
+	void 				*Dest,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#125: FILE: drivers/staging/hv/RingBuffer.c:536:
+^Ivoid  ^I^I^I^I*Src,$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#129: FILE: drivers/staging/hv/RingBuffer.c:539:
+	void *ringBuffer=GetRingBuffer(RingInfo);
 	                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <ringBuffer>
#129: FILE: drivers/staging/hv/RingBuffer.c:539:
+	void *ringBuffer=GetRingBuffer(RingInfo);

CHECK:CAMELCASE: Avoid CamelCase: <GetRingBuffer>
#129: FILE: drivers/staging/hv/RingBuffer.c:539:
+	void *ringBuffer=GetRingBuffer(RingInfo);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#138: FILE: drivers/staging/hv/RingBuffer.c:576:
+^Ivoid ^I^I^I^I*Dest,$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#143: FILE: drivers/staging/hv/RingBuffer.c:580:
+	void *ringBuffer=GetRingBuffer(RingInfo);
 	                ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000069303.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 4 warnings, 15 checks, 96 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000069303.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
