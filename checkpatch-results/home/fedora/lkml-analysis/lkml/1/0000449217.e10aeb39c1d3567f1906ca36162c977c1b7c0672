WARNING:TYPO_SPELLING: 'togheter' may be misspelled - perhaps 'together'?
#231: FILE: fs/eventpoll.c:399:
+	 * This operation togheter with the above check closes the door to
 	                  ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ep_unlink', this function's name, in a string
#253: FILE: fs/eventpoll.c:414:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: ep_unlink(%p, %p) = %d\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ep_remove', this function's name, in a string
#413: FILE: fs/eventpoll.c:482:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: ep_remove(%p, %p) = %d\n",

WARNING:TYPO_SPELLING: 'sufficent' may be misspelled - perhaps 'sufficient'?
#461: FILE: fs/eventpoll.c:503:
+	 * holding "epmutex" is sufficent here.
 	                        ^^^^^^^^^

WARNING:TYPO_SPELLING: 'noone' may be misspelled - perhaps 'no one'?
#571: FILE: fs/eventpoll.c:587:
+	 * cleanup path, and this means that noone is using this file anymore.
 	                                     ^^^^^

WARNING:TYPO_SPELLING: 'machanism' may be misspelled - perhaps 'mechanism'?
#681: FILE: fs/eventpoll.c:667:
+ * machanism. It is called by the stored file descriptors when they
    ^^^^^^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#685: FILE: fs/eventpoll.c:670:
+static int ep_poll_callback(wait_queue_t *wait, unsigned mode, int sync, void *key)

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#732: FILE: fs/eventpoll.c:705:
+	if (waitqueue_active(&ep->poll_wait))

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#1018: FILE: fs/eventpoll.c:899:
+				if (waitqueue_active(&ep->poll_wait))

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sys_epoll_create', this function's name, in a string
#1079: FILE: fs/eventpoll.c:1143:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: sys_epoll_create(%d)\n",

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1087: FILE: fs/eventpoll.c:1151:
+	if (size <= 0 || (error = ep_alloc(&ep)) != 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sys_epoll_create', this function's name, in a string
#1099: FILE: fs/eventpoll.c:1163:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: sys_epoll_create(%d) = %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sys_epoll_create', this function's name, in a string
#1108: FILE: fs/eventpoll.c:1172:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: sys_epoll_create(%d) = %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sys_epoll_ctl', this function's name, in a string
#1128: FILE: fs/eventpoll.c:1192:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: sys_epoll_ctl(%d, %d, %d, %p)\n",

CHECK:BRACES: braces {} should be used on all arms of this statement
#1175: FILE: fs/eventpoll.c:1239:
+		if (!epi) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1179: FILE: fs/eventpoll.c:1243:
+		} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#1189: FILE: fs/eventpoll.c:1253:
+		if (epi) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1192: FILE: fs/eventpoll.c:1256:
+		} else

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sys_epoll_ctl', this function's name, in a string
#1209: FILE: fs/eventpoll.c:1273:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: sys_epoll_ctl(%d, %d, %d, %p) = %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sys_epoll_wait', this function's name, in a string
#1226: FILE: fs/eventpoll.c:1290:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: sys_epoll_wait(%d, %p, %d, %d)\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sys_epoll_wait', this function's name, in a string
#1265: FILE: fs/eventpoll.c:1329:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: sys_epoll_wait(%d, %p, %d, %d) = %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1278: FILE: fs/eventpoll.c:1342:
+asmlinkage long sys_epoll_pwait(int epfd, struct epoll_event __user *events,
+		int maxevents, int timeout, const sigset_t __user *sigmask,

CHECK:BRACES: braces {} should be used on all arms of this statement
#1306: FILE: fs/eventpoll.c:1370:
+		if (error == -EINTR) {
[...]
+		} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1308: FILE: fs/eventpoll.c:1372:
+			memcpy(&current->saved_sigmask, &sigsaved,
+				sizeof(sigsaved));

CHECK:BRACES: Unbalanced braces around else statement
#1310: FILE: fs/eventpoll.c:1374:
+		} else

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000449217.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 16 warnings, 8 checks, 1262 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000449217.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
