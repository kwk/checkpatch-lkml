WARNING:TYPO_SPELLING: 'formating' may be misspelled - perhaps 'formatting'?
#37: 
Profiling is a fault instrumentation and /proc formating system.
                                               ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
This is used to get an accurate picture of what the pages are actually used.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#44: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#49: FILE: fs/axfs/axfs_profiling.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#114: FILE: fs/axfs/axfs_profiling.c:66:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#120: FILE: fs/axfs/axfs_profiling.c:72:
+	/* loop through each inode in the image and find all
+	   of the directories and mark their children */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#120: FILE: fs/axfs/axfs_profiling.c:72:
+	   of the directories and mark their children */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#132: FILE: fs/axfs/axfs_profiling.c:84:
+				printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#134: FILE: fs/axfs/axfs_profiling.c:86:
+				       "axfs: ERROR inode was already set old "
+				       "%lu new %lu\n", (unsigned long)

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#177: FILE: fs/axfs/axfs_profiling.c:129:
+	/* determine how deep the directory path is and how big the name
+	   string will be walk back until the root directory index is found

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#178: FILE: fs/axfs/axfs_profiling.c:130:
+	   (index 0 is root) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#187: FILE: fs/axfs/axfs_profiling.c:139:
+		/* create an array that will hold a pointer for each of the
+		   directories names */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#187: FILE: fs/axfs/axfs_profiling.c:139:
+		   directories names */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!path_array"
#189: FILE: fs/axfs/axfs_profiling.c:141:
+		if (path_array == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#190: FILE: fs/axfs/axfs_profiling.c:142:
+			printk(KERN_DEBUG

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#190: FILE: fs/axfs/axfs_profiling.c:142:
+		if (path_array == NULL) {
+			printk(KERN_DEBUG

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#199: FILE: fs/axfs/axfs_profiling.c:151:
+		/* get the array_index for the directory corresponding to
+		   index */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#199: FILE: fs/axfs/axfs_profiling.c:151:
+		   index */

CHECK:SPACING: No space is necessary after a cast
#203: FILE: fs/axfs/axfs_profiling.c:155:
+		path_array[(i - 1)] = (u8 *) AXFS_GET_INODE_NAME(sbi, index);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'begining' may be misspelled - perhaps 'beginning'?
#208: FILE: fs/axfs/axfs_profiling.c:160:
+	/* now print out the directory structure from the begining */
 	                                                  ^^^^^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "path_array"
#217: FILE: fs/axfs/axfs_profiling.c:169:
+	if (path_array != NULL)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#223: FILE: fs/axfs/axfs_profiling.c:175:
+
+}

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#255: FILE: fs/axfs/axfs_profiling.c:207:
+	for (i = offset; i < loop_size; i++) {
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around man->profiling_data[i]
#259: FILE: fs/axfs/axfs_profiling.c:211:
+		profile = &(man->profiling_data[i]);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#277: FILE: fs/axfs/axfs_profiling.c:229:
+		/* need to convert the page number in the node area to
+		   the page number within the file */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#277: FILE: fs/axfs/axfs_profiling.c:229:
+		   the page number within the file */

WARNING:TYPO_SPELLING: 'substract' may be misspelled - perhaps 'subtract'?
#280: FILE: fs/axfs/axfs_profiling.c:232:
+		   then substract that from the */
 		        ^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#280: FILE: fs/axfs/axfs_profiling.c:232:
+		/* gives the offset of the node in the node list area
+		   then substract that from the */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#280: FILE: fs/axfs/axfs_profiling.c:232:
+		   then substract that from the */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#292: FILE: fs/axfs/axfs_profiling.c:244:
+	/* return the number of items printed.
+	   This will be added to offset and passed back to us */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#292: FILE: fs/axfs/axfs_profiling.c:244:
+	   This will be added to offset and passed back to us */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'count >= 2'
#305: FILE: fs/axfs/axfs_profiling.c:257:
+	if ((count >= 2) && (0 == memcmp(buffer, "on", 2))) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#305: FILE: fs/axfs/axfs_profiling.c:257:
+	if ((count >= 2) && (0 == memcmp(buffer, "on", 2))) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#307: FILE: fs/axfs/axfs_profiling.c:259:
+	} else if ((count >= 3) && (0 == memcmp(buffer, "off", 3))) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#309: FILE: fs/axfs/axfs_profiling.c:261:
+	} else if ((count >= 5) && (0 == memcmp(buffer, "clear", 5))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#312: FILE: fs/axfs/axfs_profiling.c:264:
+		printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#314: FILE: fs/axfs/axfs_profiling.c:266:
+		printk(KERN_INFO "\t\"on\"\tTurn on profiling\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#315: FILE: fs/axfs/axfs_profiling.c:267:
+		printk(KERN_INFO "\t\"off\"\tTurn off profiling\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#316: FILE: fs/axfs/axfs_profiling.c:268:
+		printk(KERN_INFO "\t\"clear\"\tClear profiling buffer\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!axfs_proc_dir"
#324: FILE: fs/axfs/axfs_profiling.c:276:
+	if (axfs_proc_dir == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#327: FILE: fs/axfs/axfs_profiling.c:279:
+			printk(KERN_WARNING

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#338: FILE: fs/axfs/axfs_profiling.c:290:
+	/* Determine if there are any directory elements
+	   and remove if all of the proc files are removed. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#338: FILE: fs/axfs/axfs_profiling.c:290:
+	   and remove if all of the proc files are removed. */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "axfs_proc_dir"
#339: FILE: fs/axfs/axfs_profiling.c:291:
+	if (axfs_proc_dir != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!axfs_proc_dir->subdir"
#340: FILE: fs/axfs/axfs_profiling.c:292:
+		if (axfs_proc_dir->subdir == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "current_proc_file"
#375: FILE: fs/axfs/axfs_profiling.c:327:
+	while (current_proc_file != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!manager"
#377: FILE: fs/axfs/axfs_profiling.c:329:
+		if (manager == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#378: FILE: fs/axfs/axfs_profiling.c:330:
+			printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#380: FILE: fs/axfs/axfs_profiling.c:332:
+			       "axfs: Error removing proc file private "
+			       "data was NULL.\n");

CHECK:SPACING: No space is necessary after a cast
#422: FILE: fs/axfs/axfs_profiling.c:374:
+	proc_file = create_proc_entry(file_name, (mode_t) 0644, axfs_proc_dir);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!proc_file"
#423: FILE: fs/axfs/axfs_profiling.c:375:
+	if (proc_file == NULL) {

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH' are not preferred. Consider using octal permissions '0644'.
#434: FILE: fs/axfs/axfs_profiling.c:386:
+	proc_file->mode = S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH;

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#439: FILE: fs/axfs/axfs_profiling.c:391:
+	printk(KERN_DEBUG "axfs: Proc entry created\n");

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#463: FILE: fs/axfs/axfs_profiling.c:415:
+								     *sbi)
 								     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#466: FILE: fs/axfs/axfs_profiling.c:418:
+	struct axfs_profiling_manager *manager;
+	manager = axfs_delete_proc_file(sbi);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#488: FILE: fs/axfs/axfs_profiling.c:440:
+{
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#563: FILE: fs/axfs/axfs_profiling.c:515:
+	/* remove the proc file for this volume and release the memory in the
+	   profiling manager */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#563: FILE: fs/axfs/axfs_profiling.c:515:
+	   profiling manager */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!manager"
#573: FILE: fs/axfs/axfs_profiling.c:525:
+	if (manager == NULL)

CHECK:BOOL_COMPARISON: Using comparison to TRUE is error prone
#610: FILE: fs/axfs/axfs_profiling.c:562:
+	if (sbi->profiling_on != TRUE)

Comparisons of A to true and false are better written
as A and !A.

See: https://lore.kernel.org/lkml/1365563834.27174.12.camel@joe-AO722/

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000237205.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 41 warnings, 19 checks, 594 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000237205.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
