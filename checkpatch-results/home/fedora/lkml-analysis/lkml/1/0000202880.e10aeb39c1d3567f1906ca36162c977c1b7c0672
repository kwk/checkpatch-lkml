WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#43: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#48: FILE: arch/x86/include/asm/svm.h:1:
+#ifndef __SVM_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#99: FILE: arch/x86/include/asm/svm.h:52:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#100: FILE: arch/x86/include/asm/svm.h:53:
+struct __attribute__ ((__packed__)) vmcb_control_area {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#133: FILE: arch/x86/include/asm/svm.h:86:
+
+

CHECK:BIT_MACRO: Prefer using the BIT macro
#140: FILE: arch/x86/include/asm/svm.h:93:
+#define V_IRQ_MASK (1 << V_IRQ_SHIFT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#146: FILE: arch/x86/include/asm/svm.h:99:
+#define V_IGN_TPR_MASK (1 << V_IGN_TPR_SHIFT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#149: FILE: arch/x86/include/asm/svm.h:102:
+#define V_INTR_MASKING_MASK (1 << V_INTR_MASKING_SHIFT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#159: FILE: arch/x86/include/asm/svm.h:112:
+#define SVM_IOIO_STR_MASK (1 << SVM_IOIO_STR_SHIFT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#160: FILE: arch/x86/include/asm/svm.h:113:
+#define SVM_IOIO_REP_MASK (1 << SVM_IOIO_REP_SHIFT)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#164: FILE: arch/x86/include/asm/svm.h:117:
+struct __attribute__ ((__packed__)) vmcb_seg {

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#171: FILE: arch/x86/include/asm/svm.h:124:
+struct __attribute__ ((__packed__)) vmcb_save_area {

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#216: FILE: arch/x86/include/asm/svm.h:169:
+struct __attribute__ ((__packed__)) vmcb {

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#224: FILE: arch/x86/include/asm/svm.h:177:
+#define MSR_EFER_SVME_MASK (1ULL << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#239: FILE: arch/x86/include/asm/svm.h:192:
+#define SVM_SELECTOR_S_MASK (1 << SVM_SELECTOR_S_SHIFT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#241: FILE: arch/x86/include/asm/svm.h:194:
+#define SVM_SELECTOR_P_MASK (1 << SVM_SELECTOR_P_SHIFT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#242: FILE: arch/x86/include/asm/svm.h:195:
+#define SVM_SELECTOR_AVL_MASK (1 << SVM_SELECTOR_AVL_SHIFT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#243: FILE: arch/x86/include/asm/svm.h:196:
+#define SVM_SELECTOR_L_MASK (1 << SVM_SELECTOR_L_SHIFT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#244: FILE: arch/x86/include/asm/svm.h:197:
+#define SVM_SELECTOR_DB_MASK (1 << SVM_SELECTOR_DB_SHIFT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#245: FILE: arch/x86/include/asm/svm.h:198:
+#define SVM_SELECTOR_G_MASK (1 << SVM_SELECTOR_G_SHIFT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#247: FILE: arch/x86/include/asm/svm.h:200:
+#define SVM_SELECTOR_WRITE_MASK (1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#249: FILE: arch/x86/include/asm/svm.h:202:
+#define SVM_SELECTOR_CODE_MASK (1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#252: FILE: arch/x86/include/asm/svm.h:205:
+#define INTERCEPT_CR3_MASK (1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#253: FILE: arch/x86/include/asm/svm.h:206:
+#define INTERCEPT_CR4_MASK (1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#254: FILE: arch/x86/include/asm/svm.h:207:
+#define INTERCEPT_CR8_MASK (1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#257: FILE: arch/x86/include/asm/svm.h:210:
+#define INTERCEPT_DR1_MASK (1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#258: FILE: arch/x86/include/asm/svm.h:211:
+#define INTERCEPT_DR2_MASK (1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#259: FILE: arch/x86/include/asm/svm.h:212:
+#define INTERCEPT_DR3_MASK (1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#260: FILE: arch/x86/include/asm/svm.h:213:
+#define INTERCEPT_DR4_MASK (1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#261: FILE: arch/x86/include/asm/svm.h:214:
+#define INTERCEPT_DR5_MASK (1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#262: FILE: arch/x86/include/asm/svm.h:215:
+#define INTERCEPT_DR6_MASK (1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#263: FILE: arch/x86/include/asm/svm.h:216:
+#define INTERCEPT_DR7_MASK (1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#275: FILE: arch/x86/include/asm/svm.h:228:
+#define SVM_EVTINJ_VALID (1 << 31)

CHECK:BIT_MACRO: Prefer using the BIT macro
#276: FILE: arch/x86/include/asm/svm.h:229:
+#define SVM_EVTINJ_VALID_ERR (1 << 11)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#291: FILE: arch/x86/include/asm/svm.h:244:
+#define^ISVM_EXIT_READ_CR0 ^I0x000$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#292: FILE: arch/x86/include/asm/svm.h:245:
+#define^ISVM_EXIT_READ_CR3 ^I0x003$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#293: FILE: arch/x86/include/asm/svm.h:246:
+#define^ISVM_EXIT_READ_CR4 ^I0x004$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#294: FILE: arch/x86/include/asm/svm.h:247:
+#define^ISVM_EXIT_READ_CR8 ^I0x008$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#295: FILE: arch/x86/include/asm/svm.h:248:
+#define^ISVM_EXIT_WRITE_CR0 ^I0x010$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#296: FILE: arch/x86/include/asm/svm.h:249:
+#define^ISVM_EXIT_WRITE_CR3 ^I0x013$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#297: FILE: arch/x86/include/asm/svm.h:250:
+#define^ISVM_EXIT_WRITE_CR4 ^I0x014$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#298: FILE: arch/x86/include/asm/svm.h:251:
+#define^ISVM_EXIT_WRITE_CR8 ^I0x018$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#299: FILE: arch/x86/include/asm/svm.h:252:
+#define^ISVM_EXIT_READ_DR0 ^I0x020$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#300: FILE: arch/x86/include/asm/svm.h:253:
+#define^ISVM_EXIT_READ_DR1 ^I0x021$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#301: FILE: arch/x86/include/asm/svm.h:254:
+#define^ISVM_EXIT_READ_DR2 ^I0x022$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#302: FILE: arch/x86/include/asm/svm.h:255:
+#define^ISVM_EXIT_READ_DR3 ^I0x023$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#303: FILE: arch/x86/include/asm/svm.h:256:
+#define^ISVM_EXIT_READ_DR4 ^I0x024$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#304: FILE: arch/x86/include/asm/svm.h:257:
+#define^ISVM_EXIT_READ_DR5 ^I0x025$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#305: FILE: arch/x86/include/asm/svm.h:258:
+#define^ISVM_EXIT_READ_DR6 ^I0x026$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#306: FILE: arch/x86/include/asm/svm.h:259:
+#define^ISVM_EXIT_READ_DR7 ^I0x027$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#307: FILE: arch/x86/include/asm/svm.h:260:
+#define^ISVM_EXIT_WRITE_DR0 ^I0x030$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#308: FILE: arch/x86/include/asm/svm.h:261:
+#define^ISVM_EXIT_WRITE_DR1 ^I0x031$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#309: FILE: arch/x86/include/asm/svm.h:262:
+#define^ISVM_EXIT_WRITE_DR2 ^I0x032$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#310: FILE: arch/x86/include/asm/svm.h:263:
+#define^ISVM_EXIT_WRITE_DR3 ^I0x033$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#311: FILE: arch/x86/include/asm/svm.h:264:
+#define^ISVM_EXIT_WRITE_DR4 ^I0x034$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#312: FILE: arch/x86/include/asm/svm.h:265:
+#define^ISVM_EXIT_WRITE_DR5 ^I0x035$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#313: FILE: arch/x86/include/asm/svm.h:266:
+#define^ISVM_EXIT_WRITE_DR6 ^I0x036$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#314: FILE: arch/x86/include/asm/svm.h:267:
+#define^ISVM_EXIT_WRITE_DR7 ^I0x037$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#361: FILE: arch/x86/include/asm/svm.h:314:
+#define SVM_EXIT_NPF  ^I^I0x400$

CHECK:BIT_MACRO: Prefer using the BIT macro
#365: FILE: arch/x86/include/asm/svm.h:318:
+#define SVM_CR0_SELECTIVE_MASK (1 << 3 | 1) /* TS and MP */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000202880.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 31 warnings, 29 checks, 336 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000202880.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
