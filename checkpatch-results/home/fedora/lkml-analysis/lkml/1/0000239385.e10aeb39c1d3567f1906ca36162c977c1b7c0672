WARNING:TYPO_SPELLING: 'publically' may be misspelled - perhaps 'publicly'?
#33: 
functionality on Dell laptops. It's based on the publically available 
                                                 ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#54: FILE: drivers/misc/Kconfig:478:
+config DELL_LAPTOP
+        tristate "Dell Laptop Extras (EXPERIMENTAL)"
+        depends on X86
+        depends on DCDBAS
+	depends on EXPERIMENTAL
+	depends on BACKLIGHT_CLASS_DEVICE
+	depends on RFKILL
+	default n
+	---help---
+	This driver adds support for rfkill and backlight control to Dell
+	laptops.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#78: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#83: FILE: drivers/misc/dell-laptop.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#110: FILE: drivers/misc/dell-laptop.c:28:
+	volatile u32 input[4];

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#111: FILE: drivers/misc/dell-laptop.c:29:
+	volatile u32 output[4];

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#112: FILE: drivers/misc/dell-laptop.c:30:
+} __attribute__ ((packed));

CHECK:CAMELCASE: Avoid CamelCase: <tokenID>
#115: FILE: drivers/misc/dell-laptop.c:33:
+	u16 tokenID;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <cmdIOAddress>
#127: FILE: drivers/misc/dell-laptop.c:45:
+	u16 cmdIOAddress;

CHECK:CAMELCASE: Avoid CamelCase: <cmdIOCode>
#128: FILE: drivers/misc/dell-laptop.c:46:
+	u8 cmdIOCode;

CHECK:CAMELCASE: Avoid CamelCase: <supportedCmds>
#129: FILE: drivers/misc/dell-laptop.c:47:
+	u32 supportedCmds;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#131: FILE: drivers/misc/dell-laptop.c:49:
+} __attribute__ ((packed));

WARNING:MISPLACED_INIT: __initdata should be placed after dell_device_table[]
#143: FILE: drivers/misc/dell-laptop.c:61:
+static struct dmi_system_id __initdata dell_device_table[] = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#157: FILE: drivers/misc/dell-laptop.c:75:
+	int tokens = (dm->length-11)/sizeof(struct calling_interface_token)-1;
 	                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#157: FILE: drivers/misc/dell-laptop.c:75:
+	int tokens = (dm->length-11)/sizeof(struct calling_interface_token)-1;
 	                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#157: FILE: drivers/misc/dell-laptop.c:75:
+	int tokens = (dm->length-11)/sizeof(struct calling_interface_token)-1;
 	                                                                   ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#162: FILE: drivers/misc/dell-laptop.c:80:
+	/* 4 bytes of table header, plus 7 bytes of Dell header, plus at least
+	   6 bytes of entry */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#162: FILE: drivers/misc/dell-laptop.c:80:
+	   6 bytes of entry */

WARNING:KREALLOC_ARG_REUSE: Reusing the krealloc arg is almost always a bug
#170: FILE: drivers/misc/dell-laptop.c:88:
+	da_tokens = krealloc(da_tokens, (da_num_tokens + tokens) *

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#174: FILE: drivers/misc/dell-laptop.c:92:
+	memcpy(da_tokens+da_num_tokens, table->tokens,
 	                ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#198: FILE: drivers/misc/dell-laptop.c:116:
+	int i;
+	for (i = 0; i < da_num_tokens; i++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#205: FILE: drivers/misc/dell-laptop.c:123:
+static struct calling_interface_buffer *dell_send_request(

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*command)...) over kzalloc(sizeof(struct smi_cmd)...)
#208: FILE: drivers/misc/dell-laptop.c:126:
+	struct smi_cmd *command = kzalloc(sizeof(struct smi_cmd), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LINE_SPACING: Missing a blank line after declarations
#209: FILE: drivers/misc/dell-laptop.c:127:
+	struct smi_cmd *command = kzalloc(sizeof(struct smi_cmd), GFP_KERNEL);
+	command->magic = SMI_CMD_MAGIC;

WARNING:LINE_SPACING: Missing a blank line after declarations
#230: FILE: drivers/misc/dell-laptop.c:148:
+	int disable = (state == RFKILL_STATE_UNBLOCKED) ? 0 : 1;
+	buffer->input[0] = (1 | (radio<<8) | (disable << 16));

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#230: FILE: drivers/misc/dell-laptop.c:148:
+	buffer->input[0] = (1 | (radio<<8) | (disable << 16));
 	                              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#261: FILE: drivers/misc/dell-laptop.c:179:
+	if (status & (1<<16))
 	               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#264: FILE: drivers/misc/dell-laptop.c:182:
+	if (status & (1<<bit))
 	               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#298: FILE: drivers/misc/dell-laptop.c:216:
+	if ((status & (1<<2|1<<8)) == (1<<2|1<<8)) {
 	                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#298: FILE: drivers/misc/dell-laptop.c:216:
+	if ((status & (1<<2|1<<8)) == (1<<2|1<<8)) {
 	                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#298: FILE: drivers/misc/dell-laptop.c:216:
+	if ((status & (1<<2|1<<8)) == (1<<2|1<<8)) {
 	                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#298: FILE: drivers/misc/dell-laptop.c:216:
+	if ((status & (1<<2|1<<8)) == (1<<2|1<<8)) {
 	                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#298: FILE: drivers/misc/dell-laptop.c:216:
+	if ((status & (1<<2|1<<8)) == (1<<2|1<<8)) {
 	                                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#298: FILE: drivers/misc/dell-laptop.c:216:
+	if ((status & (1<<2|1<<8)) == (1<<2|1<<8)) {
 	                                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#306: FILE: drivers/misc/dell-laptop.c:224:
+	if ((status & (1<<3|1<<9)) == (1<<3|1<<9)) {
 	                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#306: FILE: drivers/misc/dell-laptop.c:224:
+	if ((status & (1<<3|1<<9)) == (1<<3|1<<9)) {
 	                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#306: FILE: drivers/misc/dell-laptop.c:224:
+	if ((status & (1<<3|1<<9)) == (1<<3|1<<9)) {
 	                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#306: FILE: drivers/misc/dell-laptop.c:224:
+	if ((status & (1<<3|1<<9)) == (1<<3|1<<9)) {
 	                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#306: FILE: drivers/misc/dell-laptop.c:224:
+	if ((status & (1<<3|1<<9)) == (1<<3|1<<9)) {
 	                                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#306: FILE: drivers/misc/dell-laptop.c:224:
+	if ((status & (1<<3|1<<9)) == (1<<3|1<<9)) {
 	                                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#314: FILE: drivers/misc/dell-laptop.c:232:
+	if ((status & (1<<4|1<<10)) == (1<<4|1<<10)) {
 	                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#314: FILE: drivers/misc/dell-laptop.c:232:
+	if ((status & (1<<4|1<<10)) == (1<<4|1<<10)) {
 	                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#314: FILE: drivers/misc/dell-laptop.c:232:
+	if ((status & (1<<4|1<<10)) == (1<<4|1<<10)) {
 	                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#314: FILE: drivers/misc/dell-laptop.c:232:
+	if ((status & (1<<4|1<<10)) == (1<<4|1<<10)) {
 	                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#314: FILE: drivers/misc/dell-laptop.c:232:
+	if ((status & (1<<4|1<<10)) == (1<<4|1<<10)) {
 	                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#314: FILE: drivers/misc/dell-laptop.c:232:
+	if ((status & (1<<4|1<<10)) == (1<<4|1<<10)) {
 	                                      ^

WARNING:CONST_STRUCT: struct backlight_ops should normally be const
#369: FILE: drivers/misc/dell-laptop.c:287:
+static struct backlight_ops dell_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*buffer)...) over kzalloc(sizeof(struct calling_interface_buffer)...)
#387: FILE: drivers/misc/dell-laptop.c:305:
+	buffer = kzalloc(sizeof(struct calling_interface_buffer), GFP_KERNEL);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#398: FILE: drivers/misc/dell-laptop.c:316:
+		dell_backlight_device = backlight_device_register(

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000239385.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 16 warnings, 33 checks, 376 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000239385.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
