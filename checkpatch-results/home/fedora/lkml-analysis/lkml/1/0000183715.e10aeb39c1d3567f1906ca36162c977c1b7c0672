ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#70: FILE: drivers/base/platform.c:586:
struct kobj_uevent_env *env)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: drivers/base/platform.c:590:
+       add_uevent_var(env, "MODALIAS=%s%s", PLATFORM_MODULE_PREFIX,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#76: FILE: drivers/base/platform.c:591:
+               (pdev->id_entry) ? pdev->id_entry->name : pdev->name);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#76: FILE: drivers/base/platform.c:591:
+       add_uevent_var(env, "MODALIAS=%s%s", PLATFORM_MODULE_PREFIX,
+               (pdev->id_entry) ? pdev->id_entry->name : pdev->name);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: drivers/base/platform.c:591:
+               (pdev->id_entry) ? pdev->id_entry->name : pdev->name);$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#85: FILE: drivers/base/platform.c:608:
+static const struct platform_device_id *platform_match_id(

ERROR:CODE_INDENT: code indent should use tabs where possible
#86: FILE: drivers/base/platform.c:609:
+                       const struct platform_device_id *id,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: drivers/base/platform.c:609:
+                       const struct platform_device_id *id,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#87: FILE: drivers/base/platform.c:610:
+                       struct platform_device *pdev)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: drivers/base/platform.c:610:
+                       struct platform_device *pdev)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: drivers/base/platform.c:612:
+       while (id->name[0]) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#89: FILE: drivers/base/platform.c:612:
+       while (id->name[0]) {
+               if (strcmp(pdev->name, id->name) == 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: drivers/base/platform.c:613:
+               if (strcmp(pdev->name, id->name) == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: drivers/base/platform.c:613:
+               if (strcmp(pdev->name, id->name) == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#90: FILE: drivers/base/platform.c:613:
+               if (strcmp(pdev->name, id->name) == 0)
+                       return (pdev->id_entry = id);

ERROR:CODE_INDENT: code indent should use tabs where possible
#91: FILE: drivers/base/platform.c:614:
+                       return (pdev->id_entry = id);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: drivers/base/platform.c:614:
+                       return (pdev->id_entry = id);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#92: FILE: drivers/base/platform.c:615:
+               id++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: drivers/base/platform.c:615:
+               id++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: drivers/base/platform.c:616:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: drivers/base/platform.c:617:
+       return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: drivers/base/platform.c:623:
+       struct platform_driver *pdrv = to_platform_driver(drv);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: drivers/base/platform.c:626:
+       if (pdrv->id_table)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#103: FILE: drivers/base/platform.c:626:
+       if (pdrv->id_table)
+               return platform_match_id(pdrv->id_table, pdev) != NULL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: drivers/base/platform.c:627:
+               return platform_match_id(pdrv->id_table, pdev) != NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: drivers/base/platform.c:627:
+               return platform_match_id(pdrv->id_table, pdev) != NULL;$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "platform_match_id"
#104: FILE: drivers/base/platform.c:627:
+               return platform_match_id(pdrv->id_table, pdev) != NULL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: include/linux/mod_devicetable.h:454:
+       char name[I2C_NAME_SIZE];$

WARNING:LINE_SPACING: Missing a blank line after declarations
#123: FILE: include/linux/mod_devicetable.h:455:
+       char name[I2C_NAME_SIZE];
+       kernel_ulong_t driver_data

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: include/linux/mod_devicetable.h:455:
+       kernel_ulong_t driver_data$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'kernel_ulong_t' should also have an identifier name
#123: FILE: include/linux/mod_devicetable.h:455:
+       kernel_ulong_t driver_data

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: include/linux/mod_devicetable.h:456:
+                       __attribute__((aligned(sizeof(kernel_ulong_t))));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: include/linux/mod_devicetable.h:456:
+                       __attribute__((aligned(sizeof(kernel_ulong_t))));$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(sizeof(kernel_ulong_t)) over __attribute__((aligned(sizeof(kernel_ulong_t))))
#124: FILE: include/linux/mod_devicetable.h:456:
+                       __attribute__((aligned(sizeof(kernel_ulong_t))));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: include/linux/platform_device.h:24:
+       struct platform_device_id       *id_entry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: include/linux/platform_device.h:65:
+       struct platform_device_id *id_table;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: scripts/mod/file2alias.c:701:
+                            struct platform_device_id *id, char *alias)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#172: FILE: scripts/mod/file2alias.c:701:
+static int do_platform_entry(const char *filename,
+                            struct platform_device_id *id, char *alias)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: scripts/mod/file2alias.c:701:
+                            struct platform_device_id *id, char *alias)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: scripts/mod/file2alias.c:703:
+       sprintf(alias, PLATFORM_MODULE_PREFIX "%s", id->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: scripts/mod/file2alias.c:704:
+       return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: scripts/mod/file2alias.c:846:
+       else if (sym_is(symname, "__mod_platform_device_table"))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#186: FILE: scripts/mod/file2alias.c:846:
+       else if (sym_is(symname, "__mod_platform_device_table"))
+               do_table(symval, sym->st_size,

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: scripts/mod/file2alias.c:847:
+               do_table(symval, sym->st_size,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: scripts/mod/file2alias.c:847:
+               do_table(symval, sym->st_size,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: scripts/mod/file2alias.c:848:
+                        sizeof(struct platform_device_id), "platform",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: scripts/mod/file2alias.c:848:
+                        sizeof(struct platform_device_id), "platform",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#189: FILE: scripts/mod/file2alias.c:849:
+                        do_platform_entry, mod);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: scripts/mod/file2alias.c:849:
+                        do_platform_entry, mod);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000183715.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 13 errors, 32 warnings, 4 checks, 104 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000183715.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
