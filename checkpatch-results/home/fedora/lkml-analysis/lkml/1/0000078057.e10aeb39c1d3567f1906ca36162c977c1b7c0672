WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
This patch adds core_alua_update_tpg_primary_metadata() for saving ALUA target port group

WARNING:TYPO_SPELLING: 'implict' may be misspelled - perhaps 'implicit'?
#47: 
that are written to struct file for both implict and explict ALUA transitions operations are:
                                         ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#47: 
that are written to struct file for both implict and explict ALUA transitions operations are:
                                                     ^^^^^^^

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#62: 
that can be changed during both in-band via MO SET_TARGET_PORT_GROUPs (explict) and out-of-band
                                                                       ^^^^^^^

WARNING:TYPO_SPELLING: 'implict' may be misspelled - perhaps 'implicit'?
#63: 
via configfs (implict), while the other ALUA attributes can only be changed from configfs operations
              ^^^^^^^

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#68: 
explict ALUA with MO SET_TARGET_PORT_GROUPS to still need to be saved using tcm_dump.py
^^^^^^^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#90: FILE: drivers/target/target_core_alua.c:619:
+int core_alua_update_tpg_primary_metadata(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#108: FILE: drivers/target/target_core_alua.c:637:
+	len = snprintf(md_buf, tg_pt_gp->tg_pt_gp_md_buf_len,
+			"tg_pt_gp_id=%hu\n"

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#115: FILE: drivers/target/target_core_alua.c:644:
+	snprintf(path, 512, "/var/target/alua/tpgs_%s/%s",
+		&wwn->unit_serial[0],

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#119: FILE: drivers/target/target_core_alua.c:648:
+		printk(KERN_ERR "filp_open(%s) for ALUA metadata failed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#120: FILE: drivers/target/target_core_alua.c:649:
+		printk(KERN_ERR "filp_open(%s) for ALUA metadata failed\n",
+			path);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#123: FILE: drivers/target/target_core_alua.c:652:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#133: FILE: drivers/target/target_core_alua.c:662:
+^I^Iprintk("Error writing ALUA metadata file: %s\n", path);^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#133: FILE: drivers/target/target_core_alua.c:662:
+		printk("Error writing ALUA metadata file: %s\n", path);	

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#168: FILE: drivers/target/target_core_alua.c:757:
+		core_alua_update_tpg_primary_metadata(tg_pt_gp,
+					new_state, md_buf);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#187: FILE: drivers/target/target_core_alua.c:797:
+		printk("Unable to allocate buf for ALUA metadata\n");

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#199: FILE: drivers/target/target_core_alua.c:818:
+					md_buf, new_state, explict);
 					                   ^^^^^^^

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#211: FILE: drivers/target/target_core_alua.c:872:
+					nacl, md_buf, new_state, explict);
 					                         ^^^^^^^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#244: FILE: drivers/target/target_core_configfs.c:2225:
+static ssize_t target_core_alua_tg_pt_gp_store_attr_alua_access_status(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#251: FILE: drivers/target/target_core_configfs.c:2232:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#253: FILE: drivers/target/target_core_configfs.c:2234:
+		printk(KERN_ERR "Unable to do set ALUA access status on non"

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#253: FILE: drivers/target/target_core_configfs.c:2234:
+		printk(KERN_ERR "Unable to do set ALUA access status on non"
+			" valid tg_pt_gp ID: %hu\n",
+			tg_pt_gp->tg_pt_gp_valid_id);

WARNING:SPLIT_STRING: quoted string split across lines
#254: FILE: drivers/target/target_core_configfs.c:2235:
+		printk(KERN_ERR "Unable to do set ALUA access status on non"
+			" valid tg_pt_gp ID: %hu\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#256: FILE: drivers/target/target_core_configfs.c:2237:
+^I^Ireturn -EINVAL;^I^I$

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#259: FILE: drivers/target/target_core_configfs.c:2240:
+	ret = strict_strtoul(page, 0, &tmp);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#261: FILE: drivers/target/target_core_configfs.c:2242:
+		printk(KERN_ERR "Unable to extract new ALUA access status"

WARNING:SPLIT_STRING: quoted string split across lines
#262: FILE: drivers/target/target_core_configfs.c:2243:
+		printk(KERN_ERR "Unable to extract new ALUA access status"
+				" from %s\n", page);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_status != ALUA_STATUS_NONE'
#267: FILE: drivers/target/target_core_configfs.c:2248:
+	if ((new_status != ALUA_STATUS_NONE) &&
+	    (new_status != ALUA_STATUS_ALTERED_BY_EXPLICT_STPG) &&
+	    (new_status != ALUA_STATUS_ALTERED_BY_IMPLICT_ALUA)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_status != ALUA_STATUS_ALTERED_BY_EXPLICT_STPG'
#267: FILE: drivers/target/target_core_configfs.c:2248:
+	if ((new_status != ALUA_STATUS_NONE) &&
+	    (new_status != ALUA_STATUS_ALTERED_BY_EXPLICT_STPG) &&
+	    (new_status != ALUA_STATUS_ALTERED_BY_IMPLICT_ALUA)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_status != ALUA_STATUS_ALTERED_BY_IMPLICT_ALUA'
#267: FILE: drivers/target/target_core_configfs.c:2248:
+	if ((new_status != ALUA_STATUS_NONE) &&
+	    (new_status != ALUA_STATUS_ALTERED_BY_EXPLICT_STPG) &&
+	    (new_status != ALUA_STATUS_ALTERED_BY_IMPLICT_ALUA)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#270: FILE: drivers/target/target_core_configfs.c:2251:
+		printk(KERN_ERR "Illegal ALUA access status: 0x%02x\n", new_status);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#278: FILE: drivers/target/target_core_configfs.c:2259:
+SE_DEV_ALUA_TG_PT_ATTR(alua_access_status, S_IRUGO | S_IWUSR);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#288: FILE: drivers/target/target_core_configfs.c:2284:
+static ssize_t target_core_alua_tg_pt_gp_show_attr_alua_write_metadata(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#295: FILE: drivers/target/target_core_configfs.c:2291:
+static ssize_t target_core_alua_tg_pt_gp_store_attr_alua_write_metadata(

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#303: FILE: drivers/target/target_core_configfs.c:2299:
+	ret = strict_strtoul(page, 0, &tmp);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#305: FILE: drivers/target/target_core_configfs.c:2301:
+^I^Iprintk(KERN_ERR "Unable to extract alua_write_metadata\n");^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#305: FILE: drivers/target/target_core_configfs.c:2301:
+		printk(KERN_ERR "Unable to extract alua_write_metadata\n");	

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp != 0'
#309: FILE: drivers/target/target_core_configfs.c:2305:
+	if ((tmp != 0) && (tmp != 1)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp != 1'
#309: FILE: drivers/target/target_core_configfs.c:2305:
+	if ((tmp != 0) && (tmp != 1)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#310: FILE: drivers/target/target_core_configfs.c:2306:
+		printk(KERN_ERR "Illegal value for alua_write_metadata:"

WARNING:SPLIT_STRING: quoted string split across lines
#311: FILE: drivers/target/target_core_configfs.c:2307:
+		printk(KERN_ERR "Illegal value for alua_write_metadata:"
+			" %lu\n", tmp);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#319: FILE: drivers/target/target_core_configfs.c:2315:
+SE_DEV_ALUA_TG_PT_ATTR(alua_write_metadata, S_IRUGO | S_IWUSR);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#321: FILE: drivers/target/target_core_configfs.c:2317:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#371: FILE: include/target/target_core_base.h:280:
+	struct mutex tg_pt_gp_md_mutex;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078057.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 24 warnings, 15 checks, 267 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078057.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
