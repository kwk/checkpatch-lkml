WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
Move all x86_emulate_memop() common variables between decode and execute to a

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#85: FILE: drivers/kvm/x86_emulate.c:427:
+^I((c->ad_bytes == sizeof(unsigned long)) ? ^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#99: FILE: drivers/kvm/x86_emulate.c:438:
+^I^I^I(reg) = ((reg) & ^I^I^I^I\$

WARNING:SIZEOF_PARENTHESIS: sizeof c->regs should be sizeof(c->regs)
#143: FILE: drivers/kvm/x86_emulate.c:537:
+	memcpy(c->regs, ctxt->vcpu->regs, sizeof c->regs);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#149: FILE: drivers/kvm/x86_emulate.c:542:
+		c->op_bytes = c->ad_bytes = 2;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#153: FILE: drivers/kvm/x86_emulate.c:545:
+		c->op_bytes = c->ad_bytes = 4;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mode == X86EMUL_MODE_PROT64'
#231: FILE: drivers/kvm/x86_emulate.c:604:
+	if ((mode == X86EMUL_MODE_PROT64) && ((c->b & 0xf0) == 0x40)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#237: FILE: drivers/kvm/x86_emulate.c:610:
+		c->modrm_rm = base_reg = (c->b & 1) << 3; /* REG.B */

CHECK:CAMELCASE: Avoid CamelCase: <ModRM>
#275: FILE: drivers/kvm/x86_emulate.c:630:
+	if (c->d & ModRM) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <ByteOp>
#285: FILE: drivers/kvm/x86_emulate.c:640:
+			  decode_register(c->modrm_rm, c->regs, c->d & ByteOp);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#295: FILE: drivers/kvm/x86_emulate.c:645:
+			unsigned bx = c->regs[VCPU_REGS_RBX];

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#296: FILE: drivers/kvm/x86_emulate.c:646:
+			unsigned bp = c->regs[VCPU_REGS_RBP];

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#297: FILE: drivers/kvm/x86_emulate.c:647:
+			unsigned si = c->regs[VCPU_REGS_RSI];

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#298: FILE: drivers/kvm/x86_emulate.c:648:
+			unsigned di = c->regs[VCPU_REGS_RDI];

CHECK:CAMELCASE: Avoid CamelCase: <SrcMask>
#457: FILE: drivers/kvm/x86_emulate.c:763:
+			switch (c->d & SrcMask) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#502: FILE: drivers/kvm/x86_emulate.c:796:
+				decode_register(c->modrm_reg, c->regs,
 						  (rex_prefix == 0));

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#505: FILE: drivers/kvm/x86_emulate.c:797:
+			c->src.val = c->src.orig_val = *(u8 *)c->src.ptr;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#515: FILE: drivers/kvm/x86_emulate.c:804:
+				c->src.val = c->src.orig_val =

CHECK:SPACING: No space is necessary after a cast
#516: FILE: drivers/kvm/x86_emulate.c:805:
+						       *(u16 *) c->src.ptr;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#520: FILE: drivers/kvm/x86_emulate.c:808:
+				c->src.val = c->src.orig_val =

CHECK:SPACING: No space is necessary after a cast
#521: FILE: drivers/kvm/x86_emulate.c:809:
+						       *(u32 *) c->src.ptr;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#525: FILE: drivers/kvm/x86_emulate.c:812:
+				c->src.val = c->src.orig_val =

CHECK:SPACING: No space is necessary after a cast
#526: FILE: drivers/kvm/x86_emulate.c:813:
+						       *(u64 *) c->src.ptr;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#546: FILE: drivers/kvm/x86_emulate.c:829:
+		if (c->twobyte && c->b == 0x01
+				    && c->modrm_reg == 7)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#567: FILE: drivers/kvm/x86_emulate.c:843:
+		if ((rc = ops->read_emulated((unsigned long)c->src.ptr,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#568: FILE: drivers/kvm/x86_emulate.c:844:
+		if ((rc = ops->read_emulated((unsigned long)c->src.ptr,
+					   &c->src.val,

CHECK:CAMELCASE: Avoid CamelCase: <DstMask>
#616: FILE: drivers/kvm/x86_emulate.c:877:
+	switch (c->d & DstMask) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#627: FILE: drivers/kvm/x86_emulate.c:884:
+		if ((c->d & ByteOp)
+		    && !(c->twobyte &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#631: FILE: drivers/kvm/x86_emulate.c:888:
+				decode_register(c->modrm_reg, c->regs,
 						  (rex_prefix == 0));

CHECK:SPACING: No space is necessary after a cast
#634: FILE: drivers/kvm/x86_emulate.c:889:
+			c->dst.val = *(u8 *) c->dst.ptr;

CHECK:CAMELCASE: Avoid CamelCase: <BitOp>
#678: FILE: drivers/kvm/x86_emulate.c:916:
+		if (c->d & BitOp) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#688: FILE: drivers/kvm/x86_emulate.c:922:
+		if (!(c->d & Mov) &&

CHECK:CAMELCASE: Avoid CamelCase: <Mov>
#688: FILE: drivers/kvm/x86_emulate.c:922:
+		if (!(c->d & Mov) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#689: FILE: drivers/kvm/x86_emulate.c:923:
+		if (!(c->d & Mov) &&
+				   /* optimisation - avoid slow emulated read */

CHECK:CAMELCASE: Avoid CamelCase: <emulate_2op_SrcV>
#708: FILE: drivers/kvm/x86_emulate.c:938:
+		emulate_2op_SrcV("add", c->src, c->dst, _eflags);

CHECK:SPACING: No space is necessary after a cast
#778: FILE: drivers/kvm/x86_emulate.c:988:
+		c->dst.val = (s32) c->src.val;

CHECK:SPACING: No space is necessary after a cast
#799: FILE: drivers/kvm/x86_emulate.c:1018:
+			*(u8 *) c->src.ptr = (u8) c->dst.val;

CHECK:SPACING: No space is necessary after a cast
#803: FILE: drivers/kvm/x86_emulate.c:1021:
+			*(u16 *) c->src.ptr = (u16) c->dst.val;

CHECK:SPACING: No space is necessary after a cast
#807: FILE: drivers/kvm/x86_emulate.c:1024:
+			*c->src.ptr = (u32) c->dst.val;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#837: FILE: drivers/kvm/x86_emulate.c:1046:
+		if ((rc = ops->read_std(register_address(

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#837: FILE: drivers/kvm/x86_emulate.c:1046:
+		if ((rc = ops->read_std(register_address(

CHECK:CAMELCASE: Avoid CamelCase: <emulate_2op_SrcB>
#870: FILE: drivers/kvm/x86_emulate.c:1071:
+			emulate_2op_SrcB("rol", c->src, c->dst, _eflags);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#986: FILE: drivers/kvm/x86_emulate.c:1157:
+				if ((rc = ops->read_std(

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#986: FILE: drivers/kvm/x86_emulate.c:1157:
+				if ((rc = ops->read_std(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1044: FILE: drivers/kvm/x86_emulate.c:1203:
+				rc = ops->cmpxchg_emulated(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1054: FILE: drivers/kvm/x86_emulate.c:1210:
+				rc = ops->write_emulated(

WARNING:SIZEOF_PARENTHESIS: sizeof c->regs should be sizeof(c->regs)
#1067: FILE: drivers/kvm/x86_emulate.c:1223:
+	memcpy(ctxt->vcpu->regs, c->regs, sizeof c->regs);

CHECK:SPACING: No space is necessary after a cast
#1085: FILE: drivers/kvm/x86_emulate.c:1236:
+			c->src.val = (u16) c->regs[c->b & 0x7];

CHECK:SPACING: No space is necessary after a cast
#1094: FILE: drivers/kvm/x86_emulate.c:1238:
+			c->src.val = (u32) c->regs[c->b & 0x7];

CHECK:SPACING: No space is necessary after a cast
#1100: FILE: drivers/kvm/x86_emulate.c:1244:
+		c->dst.ptr = (void *) register_address(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1100: FILE: drivers/kvm/x86_emulate.c:1244:
+		c->dst.ptr = (void *) register_address(

CHECK:SPACING: No space is necessary after a cast
#1138: FILE: drivers/kvm/x86_emulate.c:1269:
+		c->dst.ptr = (void *) register_address(ctxt->ss_base,

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#1196: FILE: drivers/kvm/x86_emulate.c:1305:
+		if (test_cc(c->b, _eflags))
 		JMP_REL(rel);

CHECK:SPACING: No space is necessary after a cast
#1202: FILE: drivers/kvm/x86_emulate.c:1310:
+		c->src.val =  (unsigned long) _eflags;

CHECK:SPACING: No space is necessary after a cast
#1206: FILE: drivers/kvm/x86_emulate.c:1313:
+		c->dst.ptr = (unsigned long *) &_eflags;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1238: FILE: drivers/kvm/x86_emulate.c:1334:
+		c->dst.ptr = (unsigned long *)register_address(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1255: FILE: drivers/kvm/x86_emulate.c:1345:
+		register_address_increment(c->regs[VCPU_REGS_RSI],
+				       (_eflags & EFLG_DF) ? -c->dst.bytes

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1258: FILE: drivers/kvm/x86_emulate.c:1348:
+		register_address_increment(c->regs[VCPU_REGS_RDI],
+				       (_eflags & EFLG_DF) ? -c->dst.bytes

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1276: FILE: drivers/kvm/x86_emulate.c:1360:
+		register_address_increment(c->regs[VCPU_REGS_RDI],
+				       (_eflags & EFLG_DF) ? -c->dst.bytes

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1287: FILE: drivers/kvm/x86_emulate.c:1367:
+		if ((rc = ops->read_emulated(cr2, &c->dst.val,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1294: FILE: drivers/kvm/x86_emulate.c:1372:
+		register_address_increment(c->regs[VCPU_REGS_RSI],
+				       (_eflags & EFLG_DF) ? -c->dst.bytes

CHECK:SPACING: No space is necessary after a cast
#1321: FILE: drivers/kvm/x86_emulate.c:1394:
+		c->src.val = (unsigned long) c->eip;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1423: FILE: drivers/kvm/x86_emulate.c:1483:
+		c->dst.val = c->dst.orig_val = c->src.val;

CHECK:CAMELCASE: Avoid CamelCase: <emulate_2op_SrcV_nobyte>
#1447: FILE: drivers/kvm/x86_emulate.c:1523:
+		emulate_2op_SrcV_nobyte("bt", c->src, c->dst, _eflags);

CHECK:SPACING: No space is necessary after a cast
#1492: FILE: drivers/kvm/x86_emulate.c:1556:
+		c->dst.val = (c->d & ByteOp) ? (u8) c->src.val

CHECK:SPACING: No space is necessary after a cast
#1493: FILE: drivers/kvm/x86_emulate.c:1557:
+						       : (u16) c->src.val;

CHECK:SPACING: No space is necessary after a cast
#1515: FILE: drivers/kvm/x86_emulate.c:1579:
+		c->dst.val = (c->d & ByteOp) ? (s8) c->src.val :

CHECK:SPACING: No space is necessary after a cast
#1516: FILE: drivers/kvm/x86_emulate.c:1580:
+							(s16) c->src.val;

CHECK:SPACING: No space is necessary after a cast
#1522: FILE: drivers/kvm/x86_emulate.c:1584:
+		c->dst.val = (c->op_bytes == 4) ? (u32) c->src.val :

ERROR:CODE_INDENT: code indent should use tabs where possible
#1523: FILE: drivers/kvm/x86_emulate.c:1585:
+^I^I^I                                (u64) c->src.val;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: No space is necessary after a cast
#1523: FILE: drivers/kvm/x86_emulate.c:1585:
+			                                (u64) c->src.val;

CHECK:SPACING: No space is necessary after a cast
#1621: FILE: drivers/kvm/x86_emulate.c:1667:
+			if (((u32) (old >> 0) !=

CHECK:SPACING: No space is necessary after a cast
#1622: FILE: drivers/kvm/x86_emulate.c:1668:
+					(u32) c->regs[VCPU_REGS_RAX]) ||

CHECK:SPACING: No space is necessary after a cast
#1623: FILE: drivers/kvm/x86_emulate.c:1669:
+			    ((u32) (old >> 32) !=

CHECK:SPACING: No space is necessary after a cast
#1624: FILE: drivers/kvm/x86_emulate.c:1670:
+					(u32) c->regs[VCPU_REGS_RDX])) {

CHECK:SPACING: No space is necessary after a cast
#1625: FILE: drivers/kvm/x86_emulate.c:1671:
+				c->regs[VCPU_REGS_RAX] = (u32) (old >> 0);

CHECK:SPACING: No space is necessary after a cast
#1626: FILE: drivers/kvm/x86_emulate.c:1672:
+				c->regs[VCPU_REGS_RDX] = (u32) (old >> 32);

CHECK:SPACING: No space is necessary after a cast
#1632: FILE: drivers/kvm/x86_emulate.c:1676:
+					| (u32) c->regs[VCPU_REGS_RBX];

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000343721.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 10 warnings, 62 checks, 1607 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000343721.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
