WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#77: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1178: FILE: drivers/lguest/i386/core.c:1:
+/*P:400 This contains run_guest() which actually calls into the Host<->Guest

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1182: FILE: drivers/lguest/i386/core.c:5:
+ * days of debugging pain. :*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:INCLUDE_LINUX: Use #include <linux/pgtable.h> instead of <asm/pgtable.h>
#1193: FILE: drivers/lguest/i386/core.c:16:
+#include <asm/pgtable.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#1194: FILE: drivers/lguest/i386/core.c:17:
+#include <asm/uaccess.h>

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1203: FILE: drivers/lguest/i386/core.c:26:
+extern unsigned long default_idt_entries[];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1241: FILE: drivers/lguest/i386/core.c:64:
+		  (SWITCHER_ADDR + SHARED_SWITCHER_PAGES*PAGE_SIZE))[cpu]);
 		                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1270: FILE: drivers/lguest/i386/core.c:93:
+	 * pages in this form, rather than just an array of pointers. */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1271: FILE: drivers/lguest/i386/core.c:94:
+	switcher_page = kmalloc(sizeof(switcher_page[0])*TOTAL_SWITCHER_PAGES,
 	                                                ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1279: FILE: drivers/lguest/i386/core.c:102:
+	 * so we make sure they're zeroed. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#1282: FILE: drivers/lguest/i386/core.c:105:
+		unsigned long addr = get_zeroed_page(GFP_KERNEL);
+		if (!addr) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1291: FILE: drivers/lguest/i386/core.c:114:
+	 * it's worked so far. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1293: FILE: drivers/lguest/i386/core.c:116:
+	switcher_vma = __get_vm_area(TOTAL_SWITCHER_PAGES * PAGE_SIZE,
+				       VM_ALLOC, SWITCHER_ADDR, VMALLOC_END);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1296: FILE: drivers/lguest/i386/core.c:119:
+		printk("lguest: could not map switcher pages high\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1304: FILE: drivers/lguest/i386/core.c:127:
+	 * care. */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1308: FILE: drivers/lguest/i386/core.c:131:
+		printk("lguest: map_vm_area failed: %i\n", err);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1313: FILE: drivers/lguest/i386/core.c:136:
+	 * Copy in the compiled-in Switcher code (from switcher.S). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1325: FILE: drivers/lguest/i386/core.c:148:
+	 * switcher code and the high-mapped copy we just made. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1341: FILE: drivers/lguest/i386/core.c:164:
+		 * statement to a line. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1347: FILE: drivers/lguest/i386/core.c:170:
+		 * byte, not the size, hence the "-1"). */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1348: FILE: drivers/lguest/i386/core.c:171:
+		state->host_gdt_desc.size = GDT_SIZE-1;
 		                                    ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1353: FILE: drivers/lguest/i386/core.c:176:
+		 * descriptor. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1358: FILE: drivers/lguest/i386/core.c:181:
+		 * ->guest_idt before actually running the Guest. */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1359: FILE: drivers/lguest/i386/core.c:182:
+		state->guest_idt_desc.size = sizeof(state->guest_idt)-1;
 		                                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1361: FILE: drivers/lguest/i386/core.c:184:
+		state->guest_gdt_desc.size = sizeof(state->guest_gdt)-1;
 		                                                     ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1366: FILE: drivers/lguest/i386/core.c:189:
+		 * we start it at the end of that structure. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1369: FILE: drivers/lguest/i386/core.c:192:
+		 * couple of special LGUEST entries. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1374: FILE: drivers/lguest/i386/core.c:197:
+		 * structure, meaning "none". */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1378: FILE: drivers/lguest/i386/core.c:201:
+		 * set them up now. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1384: FILE: drivers/lguest/i386/core.c:207:
+		 * CPU, too, so put them in the Host GDT. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1392: FILE: drivers/lguest/i386/core.c:215:
+	 * need this structure to feed to Intel's "lcall" instruction. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1396: FILE: drivers/lguest/i386/core.c:219:
+	printk(KERN_INFO "lguest: mapped switcher at %p\n",

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1412: FILE: drivers/lguest/i386/core.c:235:
+}
+/*:*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1415: FILE: drivers/lguest/i386/core.c:238:
+ * too easy. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1436: FILE: drivers/lguest/i386/core.c:259:
+ * instructions and skip over it.  We return true if we did. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1442: FILE: drivers/lguest/i386/core.c:265:
+	 * guest_pa just subtracts the Guest's page_offset. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1446: FILE: drivers/lguest/i386/core.c:269:
+	 * that's all we're trying to do anyway. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1454: FILE: drivers/lguest/i386/core.c:277:
+	/* 0x66 is an "operand prefix".  It means it's using the upper 16 bits
+	   of the eax register. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1454: FILE: drivers/lguest/i386/core.c:277:
+	   of the eax register. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1463: FILE: drivers/lguest/i386/core.c:286:
+	 * we need to emulate. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1486: FILE: drivers/lguest/i386/core.c:309:
+	 * traditionally means "there's nothing there". */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1499: FILE: drivers/lguest/i386/core.c:322:
+}
+/*:*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1511: FILE: drivers/lguest/i386/core.c:334:
+ * positive by overflowing, too. */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1515: FILE: drivers/lguest/i386/core.c:338:
+	return (addr+len) / PAGE_SIZE < lg->pfn_limit && (addr+len >= addr);
 	            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1515: FILE: drivers/lguest/i386/core.c:338:
+	return (addr+len) / PAGE_SIZE < lg->pfn_limit && (addr+len >= addr);
 	                                                      ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1521: FILE: drivers/lguest/i386/core.c:344:
+ * to return an error. */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1528: FILE: drivers/lguest/i386/core.c:351:
+	if (!lguest_address_ok(lg, addr, sizeof(val))
+	    || get_user(val, (u32 __user *)addr) != 0)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1537: FILE: drivers/lguest/i386/core.c:360:
+	if (!lguest_address_ok(lg, addr, sizeof(val))
+	    || put_user(val, (u32 __user *)addr) != 0)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1543: FILE: drivers/lguest/i386/core.c:366:
+ * the caller doesn't end up using uninitialized kernel memory. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1544: FILE: drivers/lguest/i386/core.c:367:
+void lgread(struct lguest *lg, void *b, unsigned long addr, unsigned bytes)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1547: FILE: drivers/lguest/i386/core.c:370:
+	if (!lguest_address_ok(lg, addr, bytes)
+	    || copy_from_user(b, (void __user *)addr, bytes) != 0) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1556: FILE: drivers/lguest/i386/core.c:379:
+	     unsigned bytes)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1559: FILE: drivers/lguest/i386/core.c:382:
+	if (!lguest_address_ok(lg, addr, bytes)
+	    || copy_to_user((void __user *)addr, b, bytes) != 0)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1562: FILE: drivers/lguest/i386/core.c:385:
+}
+/* (end of memory access helper routines) :*/

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1570: FILE: drivers/lguest/i386/core.c:393:
+		write_cr0(cr0|8);
 		             ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1589: FILE: drivers/lguest/i386/core.c:412:
+	 * Guest has changed. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1600: FILE: drivers/lguest/i386/core.c:423:
+	 * other CPU's pages). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1604: FILE: drivers/lguest/i386/core.c:427:
+	 * level 1). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1630: FILE: drivers/lguest/i386/core.c:453:
+	 * lguest_pages". */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1640: FILE: drivers/lguest/i386/core.c:463:
+	 * exactly match the stack of an interrupt... */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1643: FILE: drivers/lguest/i386/core.c:466:
+		      * are changed by this routine.  The "=" means output. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1648: FILE: drivers/lguest/i386/core.c:471:
+		      * directory. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1652: FILE: drivers/lguest/i386/core.c:475:
+		      * the Switcher. */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1655: FILE: drivers/lguest/i386/core.c:478:
+}
+/*:*/

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#1657: FILE: drivers/lguest/i386/core.c:480:
+/*H:030 Let's jump straight to the the main loop which runs the Guest.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1659: FILE: drivers/lguest/i386/core.c:482:
+ * going around and around until something interesting happens. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1666: FILE: drivers/lguest/i386/core.c:489:
+		 * need it. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1671: FILE: drivers/lguest/i386/core.c:494:
+		 * using int 31 (LGUEST_TRAP_ENTRY). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1674: FILE: drivers/lguest/i386/core.c:497:
+		 * Launcher, in which case we return from the read() now. */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1677: FILE: drivers/lguest/i386/core.c:500:
+			    put_user(lg->pending_key, user+1))
 			                                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1679: FILE: drivers/lguest/i386/core.c:502:
+			return sizeof(unsigned long)*2;
 			                            ^

WARNING:TYPO_SPELLING: 'hander' may be misspelled - perhaps 'handler'?
#1691: FILE: drivers/lguest/i386/core.c:514:
+		 * now: if so, this sets up the hander to be executed when we
 		                                ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1692: FILE: drivers/lguest/i386/core.c:515:
+		 * next run the Guest. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1697: FILE: drivers/lguest/i386/core.c:520:
+		 * it stops us. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1701: FILE: drivers/lguest/i386/core.c:524:
+		 * those hypercalls could have been fatal, for example. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1706: FILE: drivers/lguest/i386/core.c:529:
+		 * clock timer or LHCALL_BREAK from the Waker will wake us. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1714: FILE: drivers/lguest/i386/core.c:537:
+		 * the "Do Not Disturb" sign: */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1719: FILE: drivers/lguest/i386/core.c:542:
+		 * to the Guest if it uses the FPU. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1728: FILE: drivers/lguest/i386/core.c:551:
+		 * running the Guest. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1734: FILE: drivers/lguest/i386/core.c:557:
+		 * registers to see what it was doing. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1740: FILE: drivers/lguest/i386/core.c:563:
+		 * which some traps set.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1746: FILE: drivers/lguest/i386/core.c:569:
+		 * different CPU. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1750: FILE: drivers/lguest/i386/core.c:573:
+		 * we have to restore the FPU it expects to see. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1766: FILE: drivers/lguest/i386/core.c:589:
+			 * just go back into the Guest after we've done it. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1781: FILE: drivers/lguest/i386/core.c:604:
+			 * write, and whether kernel or userspace code. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1794: FILE: drivers/lguest/i386/core.c:617:
+			 * though. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1801: FILE: drivers/lguest/i386/core.c:624:
+			 * continue without telling it. */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1809: FILE: drivers/lguest/i386/core.c:632:
+			 * should now be run, then fall through to loop

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1810: FILE: drivers/lguest/i386/core.c:633:
+			 * around: */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1817: FILE: drivers/lguest/i386/core.c:640:
+		 * about. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1823: FILE: drivers/lguest/i386/core.c:646:
+		 * it handle), it dies with a cryptic error message. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1836: FILE: drivers/lguest/i386/core.c:659:
+ * duality will be complete. :*/

WARNING:LINE_SPACING: Missing a blank line after declarations
#1841: FILE: drivers/lguest/i386/core.c:664:
+	unsigned int i;
+	for (i = 0; i < MAX_LGUEST_GUESTS; i++)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1869: FILE: drivers/lguest/i386/core.c:692:
+		printk("lguest is afraid of %s\n", paravirt_ops.name);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1906: FILE: drivers/lguest/i386/core.c:729:
+	 * on when we return, but that slowed the Switcher down noticibly. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1909: FILE: drivers/lguest/i386/core.c:732:
+	 * doing this. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1915: FILE: drivers/lguest/i386/core.c:738:
+		 * bit on its CPU, depending on the argument (0 == unset). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1944: FILE: drivers/lguest/i386/core.c:767:
+ * play with it.  */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1955: FILE: drivers/lguest/i386/hypercalls.c:1:
+/*P:500 Just as userspace programs request kernel operations through a system

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1959: FILE: drivers/lguest/i386/hypercalls.c:5:
+ * code is basically a one big switch statement. :*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1962: FILE: drivers/lguest/i386/hypercalls.c:8:
+/*  Copyright (C) 2006 Rusty Russell IBM Corporation
+

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1974: FILE: drivers/lguest/i386/hypercalls.c:20:
+    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1975: FILE: drivers/lguest/i386/hypercalls.c:21:
+    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA$

WARNING:INCLUDE_LINUX: Use #include <linux/pgtable.h> instead of <asm/pgtable.h>
#1981: FILE: drivers/lguest/i386/hypercalls.c:27:
+#include <asm/pgtable.h>

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1989: FILE: drivers/lguest/i386/hypercalls.c:35:
+ * packed into %edx, %ebx and %ecx if needed. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1995: FILE: drivers/lguest/i386/hypercalls.c:41:
+		 * it makes us process all the asynchronous hypercalls. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1999: FILE: drivers/lguest/i386/hypercalls.c:45:
+		 * do that. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2004: FILE: drivers/lguest/i386/hypercalls.c:50:
+		 * lines right here. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2007: FILE: drivers/lguest/i386/hypercalls.c:53:
+		 * kill_guest() with the message will be ignored. */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2009: FILE: drivers/lguest/i386/hypercalls.c:55:
+		msg[sizeof(msg)-1] = '\0';
 		               ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2015: FILE: drivers/lguest/i386/hypercalls.c:61:
+		 * argument: */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2027: FILE: drivers/lguest/i386/hypercalls.c:73:
+		 * So we return true or false from this call. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2033: FILE: drivers/lguest/i386/hypercalls.c:79:
+	 * routines. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2081: FILE: drivers/lguest/i386/hypercalls.c:127:
+ * checking for a normal hcall). */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2091: FILE: drivers/lguest/i386/hypercalls.c:137:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2097: FILE: drivers/lguest/i386/hypercalls.c:143:
+		 * places them in the ring. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2105: FILE: drivers/lguest/i386/hypercalls.c:151:
+		 * and wrap back to 0 if we reach the end. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2110: FILE: drivers/lguest/i386/hypercalls.c:156:
+		 * structure.  This makes life simple for do_hcall(). */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2112: FILE: drivers/lguest/i386/hypercalls.c:158:
+		if (get_user(regs.eax, &lg->lguest_data->hcalls[n].eax)
+		    || get_user(regs.edx, &lg->lguest_data->hcalls[n].edx)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2113: FILE: drivers/lguest/i386/hypercalls.c:159:
+		    || get_user(regs.edx, &lg->lguest_data->hcalls[n].edx)
+		    || get_user(regs.ecx, &lg->lguest_data->hcalls[n].ecx)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2114: FILE: drivers/lguest/i386/hypercalls.c:160:
+		    || get_user(regs.ecx, &lg->lguest_data->hcalls[n].ecx)
+		    || get_user(regs.ebx, &lg->lguest_data->hcalls[n].ebx)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#2128: FILE: drivers/lguest/i386/hypercalls.c:174:
+ ^I^I/* Stop doing hypercalls if we've just done a DMA to the$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2128: FILE: drivers/lguest/i386/hypercalls.c:174:
+ ^I^I/* Stop doing hypercalls if we've just done a DMA to the$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2128: FILE: drivers/lguest/i386/hypercalls.c:174:
+ ^I^I/* Stop doing hypercalls if we've just done a DMA to the$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2129: FILE: drivers/lguest/i386/hypercalls.c:175:
+		 * Launcher: it needs to service this first. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2136: FILE: drivers/lguest/i386/hypercalls.c:182:
+ * Guest makes a hypercall, we end up here to set things up: */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2142: FILE: drivers/lguest/i386/hypercalls.c:188:
+	 * rules, so we're unforgiving here. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2155: FILE: drivers/lguest/i386/hypercalls.c:201:
+	 * TSCs for its own purposes, and we use that here. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2162: FILE: drivers/lguest/i386/hypercalls.c:208:
+	 * argument. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2167: FILE: drivers/lguest/i386/hypercalls.c:213:
+	 * optimizations. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2173: FILE: drivers/lguest/i386/hypercalls.c:219:
+	 * the range of addresses into "struct lguest_data". */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2175: FILE: drivers/lguest/i386/hypercalls.c:221:
+	if (get_user(lg->noirq_start, &lg->lguest_data->noirq_start)
+	    || get_user(lg->noirq_end, &lg->lguest_data->noirq_end)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2177: FILE: drivers/lguest/i386/hypercalls.c:223:
+	     * addresses used by the Switcher. */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2178: FILE: drivers/lguest/i386/hypercalls.c:224:
+	     * addresses used by the Switcher. */
+	    || put_user(4U*1024*1024, &lg->lguest_data->reserve_mem)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2178: FILE: drivers/lguest/i386/hypercalls.c:224:
+	    || put_user(4U*1024*1024, &lg->lguest_data->reserve_mem)
 	                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2178: FILE: drivers/lguest/i386/hypercalls.c:224:
+	    || put_user(4U*1024*1024, &lg->lguest_data->reserve_mem)
 	                       ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2179: FILE: drivers/lguest/i386/hypercalls.c:225:
+	    || put_user(4U*1024*1024, &lg->lguest_data->reserve_mem)
+	    || put_user(tsc_speed, &lg->lguest_data->tsc_khz)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2181: FILE: drivers/lguest/i386/hypercalls.c:227:
+	    /* We also give the Guest a unique id, as used in lguest_net.c. */
+	    || put_user(lg->guestid, &lg->lguest_data->guestid))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2190: FILE: drivers/lguest/i386/hypercalls.c:236:
+	 * page. */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2193: FILE: drivers/lguest/i386/hypercalls.c:239:
+}
+/* Now we've examined the hypercall code; our Guest can make requests.  There

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2195: FILE: drivers/lguest/i386/hypercalls.c:241:
+ * emulate_insn(). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2204: FILE: drivers/lguest/i386/hypercalls.c:250:
+ * to re-run the hypercall. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2221: FILE: drivers/lguest/i386/hypercalls.c:267:
+		 * some other reason (an interrupt, a different trap). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2233: FILE: drivers/lguest/i386/hypercalls.c:279:
+	 * Look in the hypercall ring for the async hypercalls: */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2238: FILE: drivers/lguest/i386/hypercalls.c:284:
+	 * Guest asked us to do a hypercall, we do it. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2247: FILE: drivers/lguest/i386/hypercalls.c:293:
+ * initial boot and as a rough time source if the TSC isn't available. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#2251: FILE: drivers/lguest/i386/hypercalls.c:297:
+	struct timespec now;
+	ktime_get_real_ts(&now);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2261: FILE: drivers/lguest/i386/interrupts_and_traps.c:1:
+/*P:800 Interrupts (traps) are complicated enough to earn their own file.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2273: FILE: drivers/lguest/i386/interrupts_and_traps.c:13:
+ * they had been delivered to it directly. :*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2284: FILE: drivers/lguest/i386/interrupts_and_traps.c:24:
+ * couple of types. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2297: FILE: drivers/lguest/i386/interrupts_and_traps.c:37:
+ * big part of what delivering an interrupt does. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2316: FILE: drivers/lguest/i386/interrupts_and_traps.c:56:
+ * it). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2324: FILE: drivers/lguest/i386/interrupts_and_traps.c:64:
+	 * userspace.  We check the privilege level to find out. */

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#2325: FILE: drivers/lguest/i386/interrupts_and_traps.c:65:
+	if ((lg->regs->ss&0x3) != GUEST_PL) {
 	                 ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2327: FILE: drivers/lguest/i386/interrupts_and_traps.c:67:
+		 * hypercall: both the virtual address and the segment */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2333: FILE: drivers/lguest/i386/interrupts_and_traps.c:73:
+		 * levels and expect these here. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2345: FILE: drivers/lguest/i386/interrupts_and_traps.c:85:
+	 * it back in "lguest_iret". */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2348: FILE: drivers/lguest/i386/interrupts_and_traps.c:88:
+	if (get_user(irq_enable, &lg->lguest_data->irq_enabled) == 0
+	    && !(irq_enable & X86_EFLAGS_IF))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2353: FILE: drivers/lguest/i386/interrupts_and_traps.c:93:
+	 * pointer. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2363: FILE: drivers/lguest/i386/interrupts_and_traps.c:103:
+	 * segment and the address to execute. */

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2366: FILE: drivers/lguest/i386/interrupts_and_traps.c:106:
+	lg->regs->cs = (__KERNEL_CS|GUEST_PL);
 	                           ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2370: FILE: drivers/lguest/i386/interrupts_and_traps.c:110:
+	 * gate" which expects interrupts to be disabled on entry. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2380: FILE: drivers/lguest/i386/interrupts_and_traps.c:120:
+ * we should divert the Guest to running an interrupt handler. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2392: FILE: drivers/lguest/i386/interrupts_and_traps.c:132:
+	 * wants blocked: the result ends up in "blk". */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2406: FILE: drivers/lguest/i386/interrupts_and_traps.c:146:
+	 * deliver interrupts. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#2419: FILE: drivers/lguest/i386/interrupts_and_traps.c:159:
+		u32 irq_enabled;
+		if (get_user(irq_enabled, &lg->lguest_data->irq_enabled))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2427: FILE: drivers/lguest/i386/interrupts_and_traps.c:167:
+	 * over them. */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2428: FILE: drivers/lguest/i386/interrupts_and_traps.c:168:
+	idt = &lg->idt[FIRST_EXTERNAL_VECTOR+irq];
 	                                    ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2435: FILE: drivers/lguest/i386/interrupts_and_traps.c:175:
+		 * the stack as well: virtual interrupts never do. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2443: FILE: drivers/lguest/i386/interrupts_and_traps.c:183:
+	 * timer interrupt. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2449: FILE: drivers/lguest/i386/interrupts_and_traps.c:189:
+ * traps should have error codes: */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2461: FILE: drivers/lguest/i386/interrupts_and_traps.c:201:
+	 * bogus one in): if we fail here, the Guest will be killed. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2478: FILE: drivers/lguest/i386/interrupts_and_traps.c:218:
+ * This routine determines if a trap can be delivered directly. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2484: FILE: drivers/lguest/i386/interrupts_and_traps.c:224:
+	 * call). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2491: FILE: drivers/lguest/i386/interrupts_and_traps.c:231:
+	 * trap. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2498: FILE: drivers/lguest/i386/interrupts_and_traps.c:238:
+	 * go direct, of course 8) */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2501: FILE: drivers/lguest/i386/interrupts_and_traps.c:241:
+}
+/*:*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2507: FILE: drivers/lguest/i386/interrupts_and_traps.c:247:
+ * within noirq_start and noirq_end, where it can safely disable interrupts. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2514: FILE: drivers/lguest/i386/interrupts_and_traps.c:254:
+ * entry.S :*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2522: FILE: drivers/lguest/i386/interrupts_and_traps.c:262:
+ * Which is deeply unfair, because (literally!) it wasn't the Guests' fault. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2528: FILE: drivers/lguest/i386/interrupts_and_traps.c:268:
+	 * two pages of stack space. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2541: FILE: drivers/lguest/i386/interrupts_and_traps.c:281:
+ * change stacks on each context switch. */

WARNING:TYPO_SPELLING: 'allowd' may be misspelled - perhaps 'allowed'?
#2544: FILE: drivers/lguest/i386/interrupts_and_traps.c:284:
+	/* You are not allowd have a stack segment with privilege level 0: bad
 	               ^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2545: FILE: drivers/lguest/i386/interrupts_and_traps.c:285:
+	 * Guest! */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2560: FILE: drivers/lguest/i386/interrupts_and_traps.c:300:
+ * part of the Host: page table handling. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2563: FILE: drivers/lguest/i386/interrupts_and_traps.c:303:
+ * transfers it into our entry in "struct lguest": */

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2571: FILE: drivers/lguest/i386/interrupts_and_traps.c:311:
+		trap->a = trap->b = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2582: FILE: drivers/lguest/i386/interrupts_and_traps.c:322:
+	 * except for system calls which userspace can use. */

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2583: FILE: drivers/lguest/i386/interrupts_and_traps.c:323:
+	trap->a = ((__KERNEL_CS|GUEST_PL)<<16) | (lo&0x0000FFFF);
 	                       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2583: FILE: drivers/lguest/i386/interrupts_and_traps.c:323:
+	trap->a = ((__KERNEL_CS|GUEST_PL)<<16) | (lo&0x0000FFFF);
 	                                 ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#2583: FILE: drivers/lguest/i386/interrupts_and_traps.c:323:
+	trap->a = ((__KERNEL_CS|GUEST_PL)<<16) | (lo&0x0000FFFF);
 	                                            ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#2584: FILE: drivers/lguest/i386/interrupts_and_traps.c:324:
+	trap->b = (hi&0xFFFFEF00);
 	             ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2593: FILE: drivers/lguest/i386/interrupts_and_traps.c:333:
+ * LHCALL_LOAD_IDT_ENTRY hypercall before: that comes here. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2597: FILE: drivers/lguest/i386/interrupts_and_traps.c:337:
+	 * hypercall.  We ignore when it tries to set them. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2602: FILE: drivers/lguest/i386/interrupts_and_traps.c:342:
+	 * to copy this again. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2609: FILE: drivers/lguest/i386/interrupts_and_traps.c:349:
+	 * for that. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2618: FILE: drivers/lguest/i386/interrupts_and_traps.c:358:
+ * deliver_trap() to bounce it back into the Guest. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2627: FILE: drivers/lguest/i386/interrupts_and_traps.c:367:
+	 * the Guest to use the "int" instruction to trigger it. */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2632: FILE: drivers/lguest/i386/interrupts_and_traps.c:372:
+	idt->a = (LGUEST_CS<<16) | (handler&0x0000FFFF);
 	                   ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#2632: FILE: drivers/lguest/i386/interrupts_and_traps.c:372:
+	idt->a = (LGUEST_CS<<16) | (handler&0x0000FFFF);
 	                                   ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#2633: FILE: drivers/lguest/i386/interrupts_and_traps.c:373:
+	idt->b = (handler&0xFFFF0000) | flags;
 	                 ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2648: FILE: drivers/lguest/i386/interrupts_and_traps.c:388:
+ * before we run the Guest.  This routine does that copy. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2655: FILE: drivers/lguest/i386/interrupts_and_traps.c:395:
+	 * ones in the Switcher: they will return to the Host. */

WARNING:TYPO_SPELLING: 'interupts' may be misspelled - perhaps 'interrupts'?
#2664: FILE: drivers/lguest/i386/interrupts_and_traps.c:404:
+	 * interupts never change, so no need to copy them. */
 	   ^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2664: FILE: drivers/lguest/i386/interrupts_and_traps.c:404:
+	 * interupts never change, so no need to copy them. */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2707: FILE: drivers/lguest/i386/lguest.c:1:
+/*P:010

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2733: FILE: drivers/lguest/i386/lguest.c:27:
+ * with our Guest versions, then boot like normal. :*/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2750: FILE: drivers/lguest/i386/lguest.c:44:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2751: FILE: drivers/lguest/i386/lguest.c:45:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/pgtable.h> instead of <asm/pgtable.h>
#2768: FILE: drivers/lguest/i386/lguest.c:62:
+#include <asm/pgtable.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#2773: FILE: drivers/lguest/i386/lguest.c:67:
+#include <asm/io.h>

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2779: FILE: drivers/lguest/i386/lguest.c:73:
+ * same kernel as the Host (or at least, built from the same source code). :*/

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2783: FILE: drivers/lguest/i386/lguest.c:77:
+extern const char lgstart_cli[], lgend_cli[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2784: FILE: drivers/lguest/i386/lguest.c:78:
+extern const char lgstart_sti[], lgend_sti[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2785: FILE: drivers/lguest/i386/lguest.c:79:
+extern const char lgstart_popf[], lgend_popf[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2786: FILE: drivers/lguest/i386/lguest.c:80:
+extern const char lgstart_pushf[], lgend_pushf[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2787: FILE: drivers/lguest/i386/lguest.c:81:
+extern const char lgstart_iret[], lgend_iret[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2788: FILE: drivers/lguest/i386/lguest.c:82:
+extern void lguest_iret(void);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2791: FILE: drivers/lguest/i386/lguest.c:85:
+	.hcall_status = { [0 ... LHCALL_RING_SIZE-1] = 0xFF },
 	                                         ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2796: FILE: drivers/lguest/i386/lguest.c:90:
+};
+struct lguest_device_desc *lguest_devices;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2817: FILE: drivers/lguest/i386/lguest.c:111:
+ * not, though, so there's nothing to do. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2851: FILE: drivers/lguest/i386/lguest.c:145:
+ * which empties it for next time! */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2861: FILE: drivers/lguest/i386/lguest.c:155:
+	 * one! */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2879: FILE: drivers/lguest/i386/lguest.c:173:
+}
+/*:*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2883: FILE: drivers/lguest/i386/lguest.c:177:
+ * helps remove most of them.   But also, it wraps some ugliness. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2897: FILE: drivers/lguest/i386/lguest.c:191:
+	 * argument.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2910: FILE: drivers/lguest/i386/lguest.c:204:
+ * __iomem to quieten sparse. */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2913: FILE: drivers/lguest/i386/lguest.c:207:
+	return (__force void *)ioremap(phys_addr, PAGE_SIZE*pages);
 	                                                   ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2936: FILE: drivers/lguest/i386/lguest.c:230:
+ * about the interrupt flag.  Our "save_flags()" just returns that. */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2959: FILE: drivers/lguest/i386/lguest.c:253:
+}
+/*:*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2966: FILE: drivers/lguest/i386/lguest.c:260:
+ * There will then be a page fault as soon as interrupts are re-enabled. :*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2987: FILE: drivers/lguest/i386/lguest.c:281:
+ * Host about them. */

CHECK:CAMELCASE: Avoid CamelCase: <Xgt_desc_struct>
#2988: FILE: drivers/lguest/i386/lguest.c:282:
+static void lguest_load_idt(const struct Xgt_desc_struct *desc)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2993: FILE: drivers/lguest/i386/lguest.c:287:
+	for (i = 0; i < (desc->size+1)/8; i++)
 	                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2993: FILE: drivers/lguest/i386/lguest.c:287:
+	for (i = 0; i < (desc->size+1)/8; i++)
 	                              ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3013: FILE: drivers/lguest/i386/lguest.c:307:
+	BUG_ON((desc->size+1)/8 != GDT_ENTRIES);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3013: FILE: drivers/lguest/i386/lguest.c:307:
+	BUG_ON((desc->size+1)/8 != GDT_ENTRIES);
 	                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3013: FILE: drivers/lguest/i386/lguest.c:307:
+	BUG_ON((desc->size+1)/8 != GDT_ENTRIES);
 	                     ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3019: FILE: drivers/lguest/i386/lguest.c:313:
+ * that this naive implementation is reasonable. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3029: FILE: drivers/lguest/i386/lguest.c:323:
+ * __thread variables).  So we have a hypercall specifically for this case. */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#3034: FILE: drivers/lguest/i386/lguest.c:328:
+}
+/*:*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3041: FILE: drivers/lguest/i386/lguest.c:335:
+ * here, so they'll get an informative and friendly Segmentation Fault. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3042: FILE: drivers/lguest/i386/lguest.c:336:
+static void lguest_set_ldt(const void *addr, unsigned entries)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3054: FILE: drivers/lguest/i386/lguest.c:348:
+ * override the native version with a do-nothing version. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3078: FILE: drivers/lguest/i386/lguest.c:372:
+ * too worked up about it. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3095: FILE: drivers/lguest/i386/lguest.c:389:
+		 * the Page Global Enable (PGE) feature bit is set. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3100: FILE: drivers/lguest/i386/lguest.c:394:
+		 * processor information there is, limit it to known fields. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3123: FILE: drivers/lguest/i386/lguest.c:417:
+ * unnecessarily. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3139: FILE: drivers/lguest/i386/lguest.c:433:
+ * the vowels have been optimized out. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3148: FILE: drivers/lguest/i386/lguest.c:442:
+ * just read it out of there. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3155: FILE: drivers/lguest/i386/lguest.c:449:
+ * cr0.  Keep a local copy, and tell the Host when it changes. */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3197: FILE: drivers/lguest/i386/lguest.c:491:
+ *^I    |  ^I   --------->+---------+$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3200: FILE: drivers/lguest/i386/lguest.c:494:
+ *^I  (PMD) page  |^I     | ^I       |$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3204: FILE: drivers/lguest/i386/lguest.c:498:
+ *^I      ....    ^I     ^I ....$

WARNING:REPEATED_WORD: Possible repeated word: 'page'
#3217: FILE: drivers/lguest/i386/lguest.c:511:
+ *    Index into top     Index into second      Offset within page
+ *  page directory page    pagetable page

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3229: FILE: drivers/lguest/i386/lguest.c:523:
+ * process, so we need to tell the Host which one we're changing (mm->pgd). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3239: FILE: drivers/lguest/i386/lguest.c:533:
+ * changed. */

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#3243: FILE: drivers/lguest/i386/lguest.c:537:
+	lazy_hcall(LHCALL_SET_PMD, __pa(pmdp)&PAGE_MASK,
 	                                     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#3244: FILE: drivers/lguest/i386/lguest.c:538:
+		   (__pa(pmdp)&(PAGE_SIZE-1))/4, 0);
 		              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3244: FILE: drivers/lguest/i386/lguest.c:538:
+		   (__pa(pmdp)&(PAGE_SIZE-1))/4, 0);
 		                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3244: FILE: drivers/lguest/i386/lguest.c:538:
+		   (__pa(pmdp)&(PAGE_SIZE-1))/4, 0);
 		                             ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3273: FILE: drivers/lguest/i386/lguest.c:567:
+ * bit is zero). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3282: FILE: drivers/lguest/i386/lguest.c:576:
+ * have changed, ie. virtual addresses below PAGE_OFFSET. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3290: FILE: drivers/lguest/i386/lguest.c:584:
+ * slow), so it's worth separating this from the user flushing above. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3330: FILE: drivers/lguest/i386/lguest.c:624:
+ * lguest interrupt controller. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#3337: FILE: drivers/lguest/i386/lguest.c:631:
+		int vector = FIRST_EXTERNAL_VECTOR + i;
+		if (vector != SYSCALL_VECTOR) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3344: FILE: drivers/lguest/i386/lguest.c:638:
+	 * separate stacks for hard and soft interrupts. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3371: FILE: drivers/lguest/i386/lguest.c:665:
+	 * time travel, we must be careful: */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3377: FILE: drivers/lguest/i386/lguest.c:671:
+		 * before going on. */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3387: FILE: drivers/lguest/i386/lguest.c:681:
+	return sec*1000000000ULL + nsec;
 	          ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3407: FILE: drivers/lguest/i386/lguest.c:701:
+ * just applied the patch. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#3409: FILE: drivers/lguest/i386/lguest.c:703:
+                                           struct clock_event_device *evt)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3409: FILE: drivers/lguest/i386/lguest.c:703:
+static int lguest_clockevent_set_next_event(unsigned long delta,
+                                           struct clock_event_device *evt)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3409: FILE: drivers/lguest/i386/lguest.c:703:
+                                           struct clock_event_device *evt)$

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#3412: FILE: drivers/lguest/i386/lguest.c:706:
+		if (printk_ratelimit())

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3413: FILE: drivers/lguest/i386/lguest.c:707:
+			printk(KERN_DEBUG "%s: small delta %lu ns\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#3414: FILE: drivers/lguest/i386/lguest.c:708:
+			       __FUNCTION__, delta);

ERROR:CODE_INDENT: code indent should use tabs where possible
#3422: FILE: drivers/lguest/i386/lguest.c:716:
+                                      struct clock_event_device *evt)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3422: FILE: drivers/lguest/i386/lguest.c:716:
+static void lguest_clockevent_set_mode(enum clock_event_mode mode,
+                                      struct clock_event_device *evt)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3422: FILE: drivers/lguest/i386/lguest.c:716:
+                                      struct clock_event_device *evt)$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3434: FILE: drivers/lguest/i386/lguest.c:728:
+		BUG();

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3454: FILE: drivers/lguest/i386/lguest.c:748:
+ * call the clockevent infrastructure and it does whatever needs doing. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3468: FILE: drivers/lguest/i386/lguest.c:762:
+ * lguest_data" so that timer interrupts were blocked until now. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3477: FILE: drivers/lguest/i386/lguest.c:771:
+	 * over any other clocksource. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3491: FILE: drivers/lguest/i386/lguest.c:785:
+	 * here and register our timer device. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3513: FILE: drivers/lguest/i386/lguest.c:807:
+ * of pages in the stack. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3515: FILE: drivers/lguest/i386/lguest.c:809:
+static void lguest_load_esp0(struct tss_struct *tss,
+				     struct thread_struct *thread)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3517: FILE: drivers/lguest/i386/lguest.c:811:
+	lazy_hcall(LHCALL_SET_STACK, __KERNEL_DS|0x1, thread->esp0,
 	                                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3518: FILE: drivers/lguest/i386/lguest.c:812:
+		   THREAD_SIZE/PAGE_SIZE);
 		              ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3545: FILE: drivers/lguest/i386/lguest.c:839:
+ * does, however, allow us to get through the Linux boot code. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3568: FILE: drivers/lguest/i386/lguest.c:862:
+ * rather than virtual addresses, so we use __pa() here. */

WARNING:TYPO_SPELLING: 'Panicing' may be misspelled - perhaps 'Panicking'?
#3575: FILE: drivers/lguest/i386/lguest.c:869:
+ * Panicing.
    ^^^^^^^^

WARNING:TYPO_SPELLING: 'paniced' may be misspelled - perhaps 'panicked'?
#3586: FILE: drivers/lguest/i386/lguest.c:880:
+static struct notifier_block paniced = {
                              ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3594: FILE: drivers/lguest/i386/lguest.c:888:
+	 * before start_kernel() */

WARNING:TYPO_SPELLING: 'paniced' may be misspelled - perhaps 'panicked'?
#3595: FILE: drivers/lguest/i386/lguest.c:889:
+	atomic_notifier_chain_register(&panic_notifier_list, &paniced);
 	                                                      ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3598: FILE: drivers/lguest/i386/lguest.c:892:
+	 * Launcher populated the first entry with our memory limit. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3626: FILE: drivers/lguest/i386/lguest.c:920:
+ * and these are in lguest_asm.S. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3641: FILE: drivers/lguest/i386/lguest.c:935:
+ * the available space we used. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3642: FILE: drivers/lguest/i386/lguest.c:936:
+static unsigned lguest_patch(u8 type, u16 clobber, void *insns, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3642: FILE: drivers/lguest/i386/lguest.c:936:
+static unsigned lguest_patch(u8 type, u16 clobber, void *insns, unsigned len)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3653: FILE: drivers/lguest/i386/lguest.c:947:
+	 * be thorough). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3664: FILE: drivers/lguest/i386/lguest.c:958:
+ * we have to override to avoid privileged instructions. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3669: FILE: drivers/lguest/i386/lguest.c:963:
+	 * it to us. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3672: FILE: drivers/lguest/i386/lguest.c:966:
+	 * that, too. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3677: FILE: drivers/lguest/i386/lguest.c:971:
+	 * privilege level 1, not 0 as normal. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3683: FILE: drivers/lguest/i386/lguest.c:977:
+	 * are detailed with the operations themselves. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3727: FILE: drivers/lguest/i386/lguest.c:1021:
+	 * before returning to the rest of lguest_init(). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3734: FILE: drivers/lguest/i386/lguest.c:1028:
+	 * lguest_data" is, so we do that first. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3741: FILE: drivers/lguest/i386/lguest.c:1035:
+	 * init_pg_tables_end to the end of the kernel. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3745: FILE: drivers/lguest/i386/lguest.c:1039:
+	 * the normal data segment to get through booting. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3750: FILE: drivers/lguest/i386/lguest.c:1044:
+	 * CONFIG_RELOCATALE=y, the relocations will be sitting here. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3755: FILE: drivers/lguest/i386/lguest.c:1049:
+	 * lguest_data.reserve_mem, set up on the LGUEST_INIT hypercall. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3759: FILE: drivers/lguest/i386/lguest.c:1053:
+	 * paravirt_disable_iospace. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3765: FILE: drivers/lguest/i386/lguest.c:1059:
+	 * kernel boot time on my machine from 4.1 seconds to 0.45 seconds. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3769: FILE: drivers/lguest/i386/lguest.c:1063:
+	 * start_kernel, so we have to do, too: */

WARNING:TYPO_SPELLING: 'perferred' may be misspelled - perhaps 'preferred'?
#3785: FILE: drivers/lguest/i386/lguest.c:1079:
+	/* We set the perferred console to "hvc".  This is the "hypervisor
 	              ^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3787: FILE: drivers/lguest/i386/lguest.c:1081:
+	 * adapted for lguest's use. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3791: FILE: drivers/lguest/i386/lguest.c:1085:
+	 * the Guest routine to power off. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3795: FILE: drivers/lguest/i386/lguest.c:1089:
+	 * to boot as normal.  It never returns. */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#3798: FILE: drivers/lguest/i386/lguest.c:1092:
+}
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3810: FILE: drivers/lguest/i386/lguest_asm.S:1:
+#include <linux/linkage.h>

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3909: FILE: drivers/lguest/i386/lguest_user.c:1:
+/*P:200 This contains all the /dev/lguest code, whereby the userspace launcher

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3914: FILE: drivers/lguest/i386/lguest_user.c:6:
+ * registered by the Guest and to send the Guest an interrupt. :*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3924: FILE: drivers/lguest/i386/lguest_user.c:16:
+ * allocate the structure, so they will be 0. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3933: FILE: drivers/lguest/i386/lguest_user.c:25:
+	 * at privilege level 1 (GUEST_PL).*/

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3934: FILE: drivers/lguest/i386/lguest_user.c:26:
+	regs->ds = regs->es = regs->ss = __KERNEL_DS|GUEST_PL;
 	                                            ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#3934: FILE: drivers/lguest/i386/lguest_user.c:26:
+	regs->ds = regs->es = regs->ss = __KERNEL_DS|GUEST_PL;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3935: FILE: drivers/lguest/i386/lguest_user.c:27:
+	regs->cs = __KERNEL_CS|GUEST_PL;
 	                      ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3940: FILE: drivers/lguest/i386/lguest_user.c:32:
+	 * running the Guest. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3944: FILE: drivers/lguest/i386/lguest_user.c:36:
+	 * running. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3948: FILE: drivers/lguest/i386/lguest_user.c:40:
+	 * touch it. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3953: FILE: drivers/lguest/i386/lguest_user.c:45:
+ * /dev/lguest. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3967: FILE: drivers/lguest/i386/lguest_user.c:59:
+	 * the buffer is filled.  We stash it in udma->used_len. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3971: FILE: drivers/lguest/i386/lguest_user.c:63:
+	 * the write(). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3977: FILE: drivers/lguest/i386/lguest_user.c:69:
+ * Launcher then writes LHREQ_BREAK and "0" to release the Waker. */

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#3992: FILE: drivers/lguest/i386/lguest_user.c:84:
+		return wait_event_interruptible(lg->break_wq, !lg->break_out);
+	} else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4000: FILE: drivers/lguest/i386/lguest_user.c:92:
+ * number to /dev/lguest. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4010: FILE: drivers/lguest/i386/lguest_user.c:102:
+	 * this interrupt. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4016: FILE: drivers/lguest/i386/lguest_user.c:108:
+ * from /dev/lguest. */

ERROR:POINTER_LOCATION: "foo*bar" should be "foo *bar"
#4017: FILE: drivers/lguest/i386/lguest_user.c:109:
+static ssize_t read(struct file *file, char __user *user, size_t size,loff_t*o)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4017: FILE: drivers/lguest/i386/lguest_user.c:109:
+static ssize_t read(struct file *file, char __user *user, size_t size,loff_t*o)
                                                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#4038: FILE: drivers/lguest/i386/lguest_user.c:130:
+		len = min(size, strlen(lg->dead)+1);
 		                                ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4045: FILE: drivers/lguest/i386/lguest_user.c:137:
+	 * clear the flag. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4074: FILE: drivers/lguest/i386/lguest_user.c:166:
+	 * Guest. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4080: FILE: drivers/lguest/i386/lguest_user.c:172:
+	 * "lguests" and multiple simultaneous initializations. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4100: FILE: drivers/lguest/i386/lguest_user.c:192:
+	 * pointer. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4109: FILE: drivers/lguest/i386/lguest_user.c:201:
+	 * to the Guest and we can only grant it access to whole pages. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4120: FILE: drivers/lguest/i386/lguest_user.c:212:
+	 * fail. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4126: FILE: drivers/lguest/i386/lguest_user.c:218:
+	 * address. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4130: FILE: drivers/lguest/i386/lguest_user.c:222:
+	 * booting. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4137: FILE: drivers/lguest/i386/lguest_user.c:229:
+	 * other Guests want to wake this one (inter-Guest I/O). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4141: FILE: drivers/lguest/i386/lguest_user.c:233:
+	 * reference, it is destroyed before close() is called. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4148: FILE: drivers/lguest/i386/lguest_user.c:240:
+	 * when the same Guest runs on the same CPU twice. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4171: FILE: drivers/lguest/i386/lguest_user.c:263:
+ * writes of other values to get DMA buffers and send interrupts. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4176: FILE: drivers/lguest/i386/lguest_user.c:268:
+	 * file private data. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4216: FILE: drivers/lguest/i386/lguest_user.c:308:
+ * letting them do it. :*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4226: FILE: drivers/lguest/i386/lguest_user.c:318:
+	 * Launchers initializing guests. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4235: FILE: drivers/lguest/i386/lguest_user.c:327:
+	 * Launcher's memory management structure. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4238: FILE: drivers/lguest/i386/lguest_user.c:330:
+	 * kmalloc()ed string, either of which is ok to hand to kfree(). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4244: FILE: drivers/lguest/i386/lguest_user.c:336:
+	 * next user. */

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#4258: FILE: drivers/lguest/i386/lguest_user.c:350:
+ * the Guest.  The Guest can't tell what's done by the the Launcher and what by

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4266: FILE: drivers/lguest/i386/lguest_user.c:358:
+ * work happens in the read(), write() and close() routines: */

WARNING:CONST_STRUCT: struct file_operations should normally be const
#4267: FILE: drivers/lguest/i386/lguest_user.c:359:
+static struct file_operations lguest_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4275: FILE: drivers/lguest/i386/lguest_user.c:367:
+ * miscdevice" and register it with misc_register(). */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4297: FILE: drivers/lguest/i386/page_tables.c:1:
+/*P:700 The pagetable code, on the other hand, still shows the scars of

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4302: FILE: drivers/lguest/i386/page_tables.c:6:
+ * actual Guest pages when running the Guest. :*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4305: FILE: drivers/lguest/i386/page_tables.c:9:
+ * GPL v2 and any later version */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4317: FILE: drivers/lguest/i386/page_tables.c:21:
+ * could probably consider launching Guests as non-root. :*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4341: FILE: drivers/lguest/i386/page_tables.c:45:
+ :*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4344: FILE: drivers/lguest/i386/page_tables.c:48:
+ * (or 2^10) entries per page. */

CHECK:BIT_MACRO: Prefer using the BIT macro
#4346: FILE: drivers/lguest/i386/page_tables.c:50:
+#define PTES_PER_PAGE (1 << PTES_PER_PAGE_SHIFT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4350: FILE: drivers/lguest/i386/page_tables.c:54:
+ * page.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4355: FILE: drivers/lguest/i386/page_tables.c:59:
+ * CPU's guest to see the pages of any other CPU. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4365: FILE: drivers/lguest/i386/page_tables.c:69:
+ * with 4M, this effectively divides by 4M. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4366: FILE: drivers/lguest/i386/page_tables.c:70:
+static unsigned vaddr_to_pgd_index(unsigned long vaddr)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4377: FILE: drivers/lguest/i386/page_tables.c:81:
+ * usually the current one). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4393: FILE: drivers/lguest/i386/page_tables.c:97:
+ * given address. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#4398: FILE: drivers/lguest/i386/page_tables.c:102:
+	BUG_ON(!(spgd.flags & _PAGE_PRESENT));

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4403: FILE: drivers/lguest/i386/page_tables.c:107:
+ * page tables.  Hence they return a Guest address. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#4407: FILE: drivers/lguest/i386/page_tables.c:111:
+	unsigned int index = vaddr >> (PAGE_SHIFT + PTES_PER_PAGE_SHIFT);
+	return lg->pgdirs[lg->pgdidx].cr3 + index * sizeof(gpgd_t);

WARNING:LINE_SPACING: Missing a blank line after declarations
#4414: FILE: drivers/lguest/i386/page_tables.c:118:
+	unsigned long gpage = gpgd.pfn << PAGE_SHIFT;
+	BUG_ON(!(gpgd.flags & _PAGE_PRESENT));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#4414: FILE: drivers/lguest/i386/page_tables.c:118:
+	BUG_ON(!(gpgd.flags & _PAGE_PRESENT));

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#4415: FILE: drivers/lguest/i386/page_tables.c:119:
+	return gpage + ((vaddr>>PAGE_SHIFT) % PTES_PER_PAGE) * sizeof(gpte_t);
 	                      ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4425: FILE: drivers/lguest/i386/page_tables.c:129:
+ * put that back. */

WARNING:TYPO_SPELLING: 'assocated' may be misspelled - perhaps 'associated'?
#4433: FILE: drivers/lguest/i386/page_tables.c:137:
+	 * vm_area_struct" and "struct page" assocated with a range of pages.
 	                                     ^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4435: FILE: drivers/lguest/i386/page_tables.c:139:
+	 * It returns the number of pages it got. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4447: FILE: drivers/lguest/i386/page_tables.c:151:
+ * number. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4456: FILE: drivers/lguest/i386/page_tables.c:160:
+	 * use the global bit, so throw it away. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4462: FILE: drivers/lguest/i386/page_tables.c:166:
+	 * page, given the virtual number. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4468: FILE: drivers/lguest/i386/page_tables.c:172:
+		 * this one is valid! */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4480: FILE: drivers/lguest/i386/page_tables.c:184:
+	 * get_pfn()?  We have to put it back now. */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4484: FILE: drivers/lguest/i386/page_tables.c:188:
+}
+/*:*/

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4488: FILE: drivers/lguest/i386/page_tables.c:192:
+	if ((gpte.flags & (_PAGE_PWT|_PAGE_PSE)) || gpte.pfn >= lg->pfn_limit)
 	                            ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4507: FILE: drivers/lguest/i386/page_tables.c:211:
+ * true. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4528: FILE: drivers/lguest/i386/page_tables.c:232:
+		 * simple for this corner case. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4536: FILE: drivers/lguest/i386/page_tables.c:240:
+		 * number in the shadow PGD is the page we just allocated. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4541: FILE: drivers/lguest/i386/page_tables.c:245:
+	 * address, because we might update it later. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4550: FILE: drivers/lguest/i386/page_tables.c:254:
+	 * read-only (bit 2 of errcode == write). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4559: FILE: drivers/lguest/i386/page_tables.c:263:
+	 * the pfn_limit (ie. not mapping the Launcher binary). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4569: FILE: drivers/lguest/i386/page_tables.c:273:
+	 * This can happen with a write to a previously read-only entry. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4573: FILE: drivers/lguest/i386/page_tables.c:277:
+	 * final arg to gpte_to_spte()). */

CHECK:BRACES: braces {} should be used on all arms of this statement
#4574: FILE: drivers/lguest/i386/page_tables.c:278:
+	if (gpte.flags & _PAGE_DIRTY)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#4576: FILE: drivers/lguest/i386/page_tables.c:280:
+	else {

WARNING:TYPO_SPELLING: 'ocur' may be misspelled - perhaps 'occur'?
#4579: FILE: drivers/lguest/i386/page_tables.c:283:
+		 * we come back here when a write does actually ocur, so we can
 		                                                ^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4580: FILE: drivers/lguest/i386/page_tables.c:284:
+		 * update the Guest's _PAGE_DIRTY flag. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#4582: FILE: drivers/lguest/i386/page_tables.c:286:
+		gpte_t ro_gpte = gpte;
+		ro_gpte.flags &= ~_PAGE_RW;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4587: FILE: drivers/lguest/i386/page_tables.c:291:
+	 * _PAGE_ACCESSED and maybe the _PAGE_DIRTY flags. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4601: FILE: drivers/lguest/i386/page_tables.c:305:
+ * mapped by the shadow page tables, and is it writable? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4613: FILE: drivers/lguest/i386/page_tables.c:317:
+	 * writable. */

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4615: FILE: drivers/lguest/i386/page_tables.c:319:
+	return (flags & (_PAGE_PRESENT|_PAGE_RW)) == (_PAGE_PRESENT|_PAGE_RW);
 	                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4615: FILE: drivers/lguest/i386/page_tables.c:319:
+	return (flags & (_PAGE_PRESENT|_PAGE_RW)) == (_PAGE_PRESENT|_PAGE_RW);
 	                                                           ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4620: FILE: drivers/lguest/i386/page_tables.c:324:
+ * (meaning "write"). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4635: FILE: drivers/lguest/i386/page_tables.c:339:
+		 * virtual address (easy for kernel pages like this one). */

WARNING:REPEATED_WORD: Possible repeated word: 'we'
#4642: FILE: drivers/lguest/i386/page_tables.c:346:
+		/* And zero out the PGD entry we we never release it twice. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4650: FILE: drivers/lguest/i386/page_tables.c:354:
+ * It simply releases every PTE page from 0 up to the kernel address. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4660: FILE: drivers/lguest/i386/page_tables.c:364:
+ * number of mappings have been changed. */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4666: FILE: drivers/lguest/i386/page_tables.c:370:
+}
+/*:*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4670: FILE: drivers/lguest/i386/page_tables.c:374:
+ * us. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#4674: FILE: drivers/lguest/i386/page_tables.c:378:
+	unsigned int i;
+	for (i = 0; i < ARRAY_SIZE(lg->pgdirs); i++)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4682: FILE: drivers/lguest/i386/page_tables.c:386:
+ * blank_pgdir. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4690: FILE: drivers/lguest/i386/page_tables.c:394:
+	 * Recently Used might be better, but this is easy. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4700: FILE: drivers/lguest/i386/page_tables.c:404:
+			 * mappings: caller must map the stack! */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4714: FILE: drivers/lguest/i386/page_tables.c:418:
+ * top-level pgdir).  This happens on almost every context switch. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4722: FILE: drivers/lguest/i386/page_tables.c:426:
+	 * repin gets set to 1. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4733: FILE: drivers/lguest/i386/page_tables.c:437:
+ * the shadow page tables.  This is used when we destroy the Guest. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4748: FILE: drivers/lguest/i386/page_tables.c:452:
+ * throw them all away.  This is amazingly slow, but thankfully rare. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#4780: FILE: drivers/lguest/i386/page_tables.c:484:
+		spte_t *spte = spte_addr(lg, *spgd, vaddr);
+		release_pte(*spte);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4784: FILE: drivers/lguest/i386/page_tables.c:488:
+		 * 10% off a copy-on-write micro-benchmark. */

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#4787: FILE: drivers/lguest/i386/page_tables.c:491:
+			*spte = gpte_to_spte(lg, gpte, gpte.flags&_PAGE_DIRTY);
 			                                         ^

CHECK:BRACES: Unbalanced braces around else statement
#4788: FILE: drivers/lguest/i386/page_tables.c:492:
+		} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4803: FILE: drivers/lguest/i386/page_tables.c:507:
+ * all the kernel mappings.  This speeds up context switch immensely. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4808: FILE: drivers/lguest/i386/page_tables.c:512:
+	 * doesn't happen often. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#4811: FILE: drivers/lguest/i386/page_tables.c:515:
+		unsigned int i;
+		for (i = 0; i < ARRAY_SIZE(lg->pgdirs); i++)

WARNING:LINE_SPACING: Missing a blank line after declarations
#4817: FILE: drivers/lguest/i386/page_tables.c:521:
+		int pgdir = find_pgdir(lg, cr3);
+		if (pgdir != ARRAY_SIZE(lg->pgdirs))

WARNING:REPEATED_WORD: Possible repeated word: 'to'
#4835: FILE: drivers/lguest/i386/page_tables.c:539:
+ * So with that in mind here's our code to to update a (top-level) PGD entry:

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4842: FILE: drivers/lguest/i386/page_tables.c:546:
+	 * attempts to map over the Switcher. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4856: FILE: drivers/lguest/i386/page_tables.c:560:
+ * its first page table is.  We set some things up here: */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4861: FILE: drivers/lguest/i386/page_tables.c:565:
+	 * the Switcher mappings, so check that now. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4865: FILE: drivers/lguest/i386/page_tables.c:569:
+	 * page. */

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#4868: FILE: drivers/lguest/i386/page_tables.c:572:
+	lg->pgdirs[lg->pgdidx].pgdir = (spgd_t*)get_zeroed_page(GFP_KERNEL);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4890: FILE: drivers/lguest/i386/page_tables.c:594:
+ * for each CPU already set up, we just need to hook them in. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4898: FILE: drivers/lguest/i386/page_tables.c:602:
+	 * page for this CPU (with appropriate flags). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4909: FILE: drivers/lguest/i386/page_tables.c:613:
+	 * again. */

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4912: FILE: drivers/lguest/i386/page_tables.c:616:
+	switcher_pte_page[(unsigned long)pages/PAGE_SIZE%PTES_PER_PAGE]
 	                                      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#4912: FILE: drivers/lguest/i386/page_tables.c:616:
+	switcher_pte_page[(unsigned long)pages/PAGE_SIZE%PTES_PER_PAGE]
 	                                                ^

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#4913: FILE: drivers/lguest/i386/page_tables.c:617:
+	switcher_pte_page[(unsigned long)pages/PAGE_SIZE%PTES_PER_PAGE]
+		= regs_pte;

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4915: FILE: drivers/lguest/i386/page_tables.c:619:
+}
+/*:*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4928: FILE: drivers/lguest/i386/page_tables.c:632:
+ * Currently the Switcher is less than a page long, so "pages" is always 1. */

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4939: FILE: drivers/lguest/i386/page_tables.c:643:
+		pte[i].flags = _PAGE_PRESENT|_PAGE_ACCESSED;
 		                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4943: FILE: drivers/lguest/i386/page_tables.c:647:
+	i = pages + cpu*2;
 	               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4947: FILE: drivers/lguest/i386/page_tables.c:651:
+	pte[i].flags = _PAGE_PRESENT|_PAGE_ACCESSED|_PAGE_RW;
 	                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4947: FILE: drivers/lguest/i386/page_tables.c:651:
+	pte[i].flags = _PAGE_PRESENT|_PAGE_ACCESSED|_PAGE_RW;
 	                                           ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4949: FILE: drivers/lguest/i386/page_tables.c:653:
+	 * read-only. */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#4950: FILE: drivers/lguest/i386/page_tables.c:654:
+	pte[i+1].pfn = page_to_pfn(switcher_page[i+1]);
 	     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#4950: FILE: drivers/lguest/i386/page_tables.c:654:
+	pte[i+1].pfn = page_to_pfn(switcher_page[i+1]);
 	                                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#4951: FILE: drivers/lguest/i386/page_tables.c:655:
+	pte[i+1].flags = _PAGE_PRESENT|_PAGE_ACCESSED;
 	     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4951: FILE: drivers/lguest/i386/page_tables.c:655:
+	pte[i+1].flags = _PAGE_PRESENT|_PAGE_ACCESSED;
 	                              ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4955: FILE: drivers/lguest/i386/page_tables.c:659:
+ * the Switcher PTE page for each CPU. */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4970: FILE: drivers/lguest/i386/page_tables.c:674:
+}
+/*:*/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4983: FILE: drivers/lguest/i386/segments.c:1:
+/*P:600 The x86 architecture has segments, which involve a table of descriptors

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4993: FILE: drivers/lguest/i386/segments.c:11:
+ * from frolicking through its parklike serenity. :*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5032: FILE: drivers/lguest/i386/segments.c:50:
+ * and the descriptor type must be 1 (a memory segment).  */

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#5047: FILE: drivers/lguest/i386/segments.c:65:
+ * LGUEST_CS and LGUEST_DS entries are reserved for the Switcher, and the
+ * the Guest can't be trusted to deal with double faults. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5047: FILE: drivers/lguest/i386/segments.c:65:
+ * the Guest can't be trusted to deal with double faults. */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5051: FILE: drivers/lguest/i386/segments.c:69:
+	return (num == GDT_ENTRY_TSS
+		|| num == GDT_ENTRY_LGUEST_CS

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5052: FILE: drivers/lguest/i386/segments.c:70:
+		|| num == GDT_ENTRY_LGUEST_CS
+		|| num == GDT_ENTRY_LGUEST_DS

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5053: FILE: drivers/lguest/i386/segments.c:71:
+		|| num == GDT_ENTRY_LGUEST_DS
+		|| num == GDT_ENTRY_DOUBLEFAULT_TSS);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5063: FILE: drivers/lguest/i386/segments.c:81:
+ * that register to 0 (unusable). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5067: FILE: drivers/lguest/i386/segments.c:85:
+	 * ignore the bottom bits. */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5075: FILE: drivers/lguest/i386/segments.c:93:
+	if (lg->regs->ds / 8 == desc
+	    || lg->regs->cs / 8 == desc

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5076: FILE: drivers/lguest/i386/segments.c:94:
+	    || lg->regs->cs / 8 == desc
+	    || lg->regs->ss / 8 == desc)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#5079: FILE: drivers/lguest/i386/segments.c:97:
+}
+/*:*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5082: FILE: drivers/lguest/i386/segments.c:100:
+ * optimization. :*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5086: FILE: drivers/lguest/i386/segments.c:104:
+ * get to use the invalid entries. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#5087: FILE: drivers/lguest/i386/segments.c:105:
+static void fixup_gdt_table(struct lguest *lg, unsigned start, unsigned end)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#5087: FILE: drivers/lguest/i386/segments.c:105:
+static void fixup_gdt_table(struct lguest *lg, unsigned start, unsigned end)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5093: FILE: drivers/lguest/i386/segments.c:111:
+		 * they say */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5098: FILE: drivers/lguest/i386/segments.c:116:
+		 * a removed segment. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5109: FILE: drivers/lguest/i386/segments.c:127:
+		 * running at privilege level 1.  If so, we fix it here. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5116: FILE: drivers/lguest/i386/segments.c:134:
+		 * writable by the Guest, so bad things can happen. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5122: FILE: drivers/lguest/i386/segments.c:140:
+ * "constant" GDT entries for Guests running on that CPU. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5133: FILE: drivers/lguest/i386/segments.c:151:
+	 * copy it from the Guest.  Forgive the magic flags */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5146: FILE: drivers/lguest/i386/segments.c:164:
+	 * level appropriately in the flags. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5153: FILE: drivers/lguest/i386/segments.c:171:
+ * a different Guest on that CPU. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5157: FILE: drivers/lguest/i386/segments.c:175:
+ * neater to have a single hypercall to cover both. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5172: FILE: drivers/lguest/i386/segments.c:190:
+	 * replaced.  See ignored_gdt() above. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5182: FILE: drivers/lguest/i386/segments.c:200:
+	 * Host, otherwise we'd have to dynamically allocate the Guest GDT. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5190: FILE: drivers/lguest/i386/segments.c:208:
+	 * even if the Guest is run on the same CPU. */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#5198: FILE: drivers/lguest/i386/segments.c:216:
+	lgread(lg, tls, gtls, sizeof(*tls)*GDT_ENTRY_TLS_ENTRIES);
 	                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5199: FILE: drivers/lguest/i386/segments.c:217:
+	fixup_gdt_table(lg, GDT_ENTRY_TLS_MIN, GDT_ENTRY_TLS_MAX+1);
 	                                                        ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#5218: FILE: drivers/lguest/i386/switcher.S:1:
+/*P:900 This is the Switcher: code which sits at 0xFFC00000 to do the low-level

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000394135.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 379 warnings, 102 checks, 4358 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000394135.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
