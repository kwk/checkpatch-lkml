WARNING:UNKNOWN_COMMIT_ID: Unknown commit id 'b789e972e23509ab27312b9cf7273b611feb25cb', maybe rebased or not pulled?
#28: 
commit b789e972e23509ab27312b9cf7273b611feb25cb

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#34: 
    Signed-off-by: Jeff Garzik <jgarzik@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#76: FILE: drivers/ata/ahci.h:280:
+extern void ahci_fill_cmd_slot(struct ahci_port_priv *pp, unsigned int tag, u32 opts);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#77: FILE: drivers/ata/ahci.h:281:
+extern unsigned int ahci_fill_sg(struct ata_queued_cmd *qc, void *cmd_tbl);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#78: FILE: drivers/ata/ahci.h:282:
+extern int ahci_deinit_port(struct ata_port *ap, const char **emsg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#79: FILE: drivers/ata/ahci.h:283:
+extern void ahci_port_init(struct pci_dev *pdev, struct ata_port *ap,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#168: FILE: drivers/ata/libahci.c:297:
+void ahci_port_init(struct pci_dev *pdev, struct ata_port *ap,
 			   int port_no, void __iomem *mmio,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#419: FILE: drivers/ata/mv-ahci.c:208:
+		AHCI_HFLAGS	(AHCI_HFLAG_NO_NCQ | AHCI_HFLAG_NO_MSI),

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#453: FILE: drivers/ata/mv-ahci.c:262:
+	printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#455: FILE: drivers/ata/mv-ahci.c:264:
+	       "%s %x, "
+	       "%s %x, "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#456: FILE: drivers/ata/mv-ahci.c:265:
+	       "%s %x, "
+	       "%s %x, "

WARNING:SPLIT_STRING: quoted string split across lines
#457: FILE: drivers/ata/mv-ahci.c:266:
+	       "%s %x, "
+	       "%s %x, "

WARNING:SPLIT_STRING: quoted string split across lines
#458: FILE: drivers/ata/mv-ahci.c:267:
+	       "%s %x, "
+	       "%s %x, "

WARNING:SPLIT_STRING: quoted string split across lines
#459: FILE: drivers/ata/mv-ahci.c:268:
+	       "%s %x, "
+	       "%s %x, "

WARNING:SPLIT_STRING: quoted string split across lines
#460: FILE: drivers/ata/mv-ahci.c:269:
+	       "%s %x, "
+	       "%s %x\n"

ERROR:SPACING: space required after that ',' (ctx:VxV)
#467: FILE: drivers/ata/mv-ahci.c:276:
+	       "PORT_CMD_ISSUE",readl(mmio + PORT_CMD_ISSUE),
 	                       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#475: FILE: drivers/ata/mv-ahci.c:284:
+	printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#492: FILE: drivers/ata/mv-ahci.c:301:
+	printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#494: FILE: drivers/ata/mv-ahci.c:303:
+	       "%s %x, "
+	       "%s %x, "

WARNING:SPLIT_STRING: quoted string split across lines
#495: FILE: drivers/ata/mv-ahci.c:304:
+	       "%s %x, "
+	       "%s %x, "

WARNING:SPLIT_STRING: quoted string split across lines
#496: FILE: drivers/ata/mv-ahci.c:305:
+	       "%s %x, "
+	       "%s %x, "

WARNING:SPLIT_STRING: quoted string split across lines
#497: FILE: drivers/ata/mv-ahci.c:306:
+	       "%s %x, "
+	       "%s %x\n"

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#516: FILE: drivers/ata/mv-ahci.c:325:
+	if (ap->flags & AHCI_FLAG_MV_PATA) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#576: FILE: drivers/ata/mv-ahci.c:385:
+	cmd_block[0] = cpu_to_le32(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#581: FILE: drivers/ata/mv-ahci.c:390:
+	cmd_block[1] = cpu_to_le32(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#586: FILE: drivers/ata/mv-ahci.c:395:
+	cmd_block[2] = cpu_to_le32(

WARNING:LINE_SPACING: Missing a blank line after declarations
#684: FILE: drivers/ata/mv-ahci.c:493:
+		struct ata_eh_info *ehi = &ap->link.eh_info;
+		ehi->err_mask |= AC_ERR_HSM;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#702: FILE: drivers/ata/mv-ahci.c:511:
+#if 0

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#711: FILE: drivers/ata/mv-ahci.c:520:
+	udelay(20);	/* paranoia - give bit time to assert? */

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#721: FILE: drivers/ata/mv-ahci.c:530:
+	msleep(2);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#723: FILE: drivers/ata/mv-ahci.c:532:
+#if 0

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#808: FILE: drivers/ata/mv-ahci.c:617:
+		msleep(1);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#826: FILE: drivers/ata/mv-ahci.c:635:
+#if 0

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#837: FILE: drivers/ata/mv-ahci.c:646:
+#if 0

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#855: FILE: drivers/ata/mv-ahci.c:664:
+	udelay(20);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#868: FILE: drivers/ata/mv-ahci.c:677:
+			ccrc = mvp_ctrl_cmd(ap, pp, mmio, port_mmio, is_slave,
+				    MVATA_REG_DEVICE,

ERROR:CODE_INDENT: code indent should use tabs where possible
#870: FILE: drivers/ata/mv-ahci.c:679:
+^I^I^I    ^I    1000);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#870: FILE: drivers/ata/mv-ahci.c:679:
+^I^I^I    ^I    1000);$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#887: FILE: drivers/ata/mv-ahci.c:696:
+#if 0

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mvp_dev_select', this function's name, in a string
#910: FILE: drivers/ata/mv-ahci.c:719:
+		ata_port_printk(ap, KERN_ERR, "mvp_dev_select dev%u "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#911: FILE: drivers/ata/mv-ahci.c:720:
+		ata_port_printk(ap, KERN_ERR, "mvp_dev_select dev%u "
+				"failed\n", device);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#915: FILE: drivers/ata/mv-ahci.c:724:
+static void mvp_port_init(struct pci_dev *pdev, struct ata_port *ap,
+			   int port_no, void __iomem *mmio,

WARNING:PREFER_DEV_LEVEL: Prefer dev_warn(... to dev_printk(KERN_WARNING, ...
#927: FILE: drivers/ata/mv-ahci.c:736:
+		dev_printk(KERN_WARNING, &pdev->dev,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i == mvp_port'
#1115: FILE: drivers/ata/mv-ahci.c:1036:
+		if ((i == mvp_port) && (hpriv->port_map & (1 << i))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1132: FILE: drivers/ata/mv-ahci.c:1052:
+		else {
+			VPRINTK("set up SATA port %d\n", i);
+		}

CHECK:BRACES: Unbalanced braces around else statement
#1132: FILE: drivers/ata/mv-ahci.c:1052:
+		else {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000138147.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 30 warnings, 14 checks, 1064 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000138147.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
