CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "_ss"
#145: FILE: kernel/cgroup.c:191:
+	    _ss != NULL;						      \

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: kernel/cgroup.c:192:
+    _ss = nth_ss(find_next_bit(&(_root)->subsys_bits, CGROUP_SUBSYS_COUNT,    \$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#151: FILE: kernel/cgroup.c:195:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#161: FILE: kernel/cgroup.c:205:
+	struct cgroupfs_root *root, *res = NULL;
+	for_each_root(root) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#163: FILE: kernel/cgroup.c:207:
+			BUG_ON(res);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#167: FILE: kernel/cgroup.c:211:
+	BUG_ON(!res);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#213: FILE: kernel/cgroup.c:896:
+			BUG_ON(!(rootnode.subsys_bits & bit));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#228: FILE: kernel/cgroup.c:909:
+			BUG_ON(rootnode.subsys_bits & bit);

WARNING:LINE_SPACING: Missing a blank line after declarations
#286: FILE: kernel/cgroup.c:2648:
+	struct cgroup_subsys *ss;
+	for_each_subsys(root, ss)

WARNING:LINE_SPACING: Missing a blank line after declarations
#300: FILE: kernel/cgroup.c:2655:
+	struct cgroup_subsys *ss;
+	for_each_subsys(root, ss)

WARNING:LINE_SPACING: Missing a blank line after declarations
#313: FILE: kernel/cgroup.c:2774:
+	struct cgroup_subsys *ss;
+	for_each_subsys(cgrp->root, ss) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#388: FILE: kernel/cgroup.c:3146:
+		struct cgroupfs_root *root;
+		for_each_root(root) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'root != find_root(subsys)'
#409: FILE: kernel/cgroup.c:3381:
+	if ((root != find_root(subsys)) ||
 	    (parent != task_cgroup(tsk, subsys->subsys_id))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'parent != task_cgroup(tsk, subsys->subsys_id)'
#409: FILE: kernel/cgroup.c:3381:
+	if ((root != find_root(subsys)) ||
 	    (parent != task_cgroup(tsk, subsys->subsys_id))) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000101452.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 10 warnings, 4 checks, 326 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000101452.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
