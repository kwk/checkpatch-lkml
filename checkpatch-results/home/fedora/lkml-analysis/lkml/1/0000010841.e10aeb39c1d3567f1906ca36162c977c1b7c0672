WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#54: FILE: arch/x86/include/asm/atomic_32.h:285:
+#define ATOMIC64_ALTERNATIVE(f) ALTERNATIVE("call generic_atomic64_" #f, "call cx8_atomic64_" #f, X86_FEATURE_CX8)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#70: FILE: arch/x86/include/asm/atomic_32.h:300:
+	unsigned high = (unsigned)(n >> 32);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#70: FILE: arch/x86/include/asm/atomic_32.h:300:
+	unsigned high = (unsigned)(n >> 32);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#71: FILE: arch/x86/include/asm/atomic_32.h:301:
+	unsigned low = (unsigned)n;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#71: FILE: arch/x86/include/asm/atomic_32.h:301:
+	unsigned low = (unsigned)n;

WARNING:LINE_SPACING: Missing a blank line after declarations
#72: FILE: arch/x86/include/asm/atomic_32.h:302:
+	unsigned low = (unsigned)n;
+	asm volatile(

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#72: FILE: arch/x86/include/asm/atomic_32.h:302:
+	asm volatile(

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#78: FILE: arch/x86/include/asm/atomic_32.h:308:
+			ALTERNATIVE("call generic_atomic64_cmpxchg_cx8call", "lock; cmpxchg8b (%%esi)\n\tnop", X86_FEATURE_CX8)

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#80: FILE: arch/x86/include/asm/atomic_32.h:310:
+			ALTERNATIVE("call generic_atomic64_cmpxchg_cx8call", "cmpxchg8b (%%esi)\n\t" ASM_NOP2, X86_FEATURE_CX8)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#202: FILE: arch/x86/lib/atomic64_32.c:31:
+
+

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#206: FILE: arch/x86/lib/atomic64_32.c:35:
+#define generic_atomic64_read static inline generic_atomic64_read

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#207: FILE: arch/x86/lib/atomic64_32.c:36:
+#define generic_atomic64_set static inline generic_atomic64_set

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#208: FILE: arch/x86/lib/atomic64_32.c:37:
+#define generic_atomic64_xchg static inline generic_atomic64_xchg

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#209: FILE: arch/x86/lib/atomic64_32.c:38:
+#define generic_atomic64_cmpxchg static inline generic_atomic64_cmpxchg

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#210: FILE: arch/x86/lib/atomic64_32.c:39:
+#define generic_atomic64_dec_if_positive static inline generic_atomic64_dec_if_positive

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#221: FILE: arch/x86/lib/atomic64_32.c:50:
+EXPORT_SYMBOL(generic_atomic64_add);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#222: FILE: arch/x86/lib/atomic64_32.c:51:
+EXPORT_SYMBOL(generic_atomic64_add_return);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#223: FILE: arch/x86/lib/atomic64_32.c:52:
+EXPORT_SYMBOL(generic_atomic64_sub);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#224: FILE: arch/x86/lib/atomic64_32.c:53:
+EXPORT_SYMBOL(generic_atomic64_sub_return);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#225: FILE: arch/x86/lib/atomic64_32.c:54:
+EXPORT_SYMBOL(generic_atomic64_add_unless);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#240: FILE: arch/x86/lib/atomic64_32.c:69:
+long long generic_atomic64_cmpxchg_cx8call(long long o, unsigned high)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#246: FILE: arch/x86/lib/atomic64_32.c:75:
+long long generic_atomic64_xchg_cx8call(long long dummy, unsigned high)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#252: FILE: arch/x86/lib/atomic64_32.c:81:
+void generic_atomic64_set_cx8call(long long dummy, unsigned high)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000010841.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 16 warnings, 2 checks, 231 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000010841.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
