WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
#include <fcntl.h>

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
#include <pthread.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
#include <signal.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
#include <stdio.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
#include <unistd.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
#include <netinet/in.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
#include <sys/socket.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
#include <sys/syscall.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
#define SOCK_CLOEXEC 0x40000000

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
#ifdef __x86_64__

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
#define __NR_paccept 288

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
#elif __i386__

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
#define SYS_PACCEPT     18

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
#define USE_SOCKETCALL 1

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
#else

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
#error "define syscall numbers for this architecture"

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
#endif

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
#define PORT 57392

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#237: 
#if USE_SOCKETCALL

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#238: 
      s2 = syscall (__NR_socketcall, SYS_PACCEPT, s, NULL, 0, NULL, 0, SOCK_CLOEXEC);

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#239: 
#else

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#241: 
#endif

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#282: 
#if USE_SOCKETCALL

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#284: 
#else

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#286: 
#endif

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#347: FILE: include/linux/net.h:215:
+extern int ^I     sock_map_fd(struct socket *sock, int flags);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#347: FILE: include/linux/net.h:215:
+extern int 	     sock_map_fd(struct socket *sock, int flags);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#351: FILE: include/linux/net.h:219:
+extern long	     do_accept(int fd, struct sockaddr __user *upeer_sockaddr,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#391: FILE: net/compat.c:526:
+static unsigned char nas[19]={AL(0),AL(3),AL(3),AL(3),AL(2),AL(3),
                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#391: FILE: net/compat.c:526:
+static unsigned char nas[19]={AL(0),AL(3),AL(3),AL(3),AL(2),AL(3),
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#391: FILE: net/compat.c:526:
+static unsigned char nas[19]={AL(0),AL(3),AL(3),AL(3),AL(2),AL(3),
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#391: FILE: net/compat.c:526:
+static unsigned char nas[19]={AL(0),AL(3),AL(3),AL(3),AL(2),AL(3),
                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#391: FILE: net/compat.c:526:
+static unsigned char nas[19]={AL(0),AL(3),AL(3),AL(3),AL(2),AL(3),
                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#391: FILE: net/compat.c:526:
+static unsigned char nas[19]={AL(0),AL(3),AL(3),AL(3),AL(2),AL(3),
                                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#394: FILE: net/compat.c:528:
+				AL(6),AL(2),AL(5),AL(5),AL(3),AL(3),
 				     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#394: FILE: net/compat.c:528:
+				AL(6),AL(2),AL(5),AL(5),AL(3),AL(3),
 				           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#394: FILE: net/compat.c:528:
+				AL(6),AL(2),AL(5),AL(5),AL(3),AL(3),
 				                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#394: FILE: net/compat.c:528:
+				AL(6),AL(2),AL(5),AL(5),AL(3),AL(3),
 				                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#394: FILE: net/compat.c:528:
+				AL(6),AL(2),AL(5),AL(5),AL(3),AL(3),
 				                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#419: FILE: net/compat.c:558:
+		sigdelsetmask(&ksigmask, sigmask(SIGKILL)|sigmask(SIGSTOP));
 		                                         ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#425: FILE: net/compat.c:564:
+	if (ret == -ERESTARTNOHAND) {
[...]
+	} else if (sigmask)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#427: FILE: net/compat.c:566:
+		/*
+		 * Don't restore the signal mask yet. Let do_signal() deliver

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#622: FILE: net/socket.c:1516:
+		sigdelsetmask(&ksigmask, sigmask(SIGKILL)|sigmask(SIGSTOP));
 		                                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#624: FILE: net/socket.c:1518:
+        }$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: net/socket.c:1518:
+        }$

CHECK:BRACES: braces {} should be used on all arms of this statement
#628: FILE: net/socket.c:1522:
+	if (ret < 0 && signal_pending(current)) {
[...]
+	} else if (sigmask)
[...]

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#630: FILE: net/socket.c:1524:
+		/*
+		 * Don't restore the signal mask yet. Let do_signal() deliver

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#659: FILE: net/socket.c:2055:
+static const unsigned char nargs[19]={
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#663: FILE: net/socket.c:2058:
+	AL(6),AL(2),AL(5),AL(5),AL(3),AL(3),
 	     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#663: FILE: net/socket.c:2058:
+	AL(6),AL(2),AL(5),AL(5),AL(3),AL(3),
 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#663: FILE: net/socket.c:2058:
+	AL(6),AL(2),AL(5),AL(5),AL(3),AL(3),
 	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#663: FILE: net/socket.c:2058:
+	AL(6),AL(2),AL(5),AL(5),AL(3),AL(3),
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#663: FILE: net/socket.c:2058:
+	AL(6),AL(2),AL(5),AL(5),AL(3),AL(3),
 	                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#695: FILE: net/socket.c:2158:
+^I^I^I        (int __user *)a[2],$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#695: FILE: net/socket.c:2158:
+		    sys_paccept(a0, (struct sockaddr __user *)a1,
+			        (int __user *)a[2],

CHECK:SPACING: No space is necessary after a cast
#696: FILE: net/socket.c:2159:
+				(const sigset_t __user *) a[3],

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000289948.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 19 errors, 29 warnings, 8 checks, 344 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000289948.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
