WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#40: 
Signed-off-by:  Kristen Carlson Accardi <kristen.c.accardi@intel.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#59: FILE: drivers/ata/ahci.c:63:
+static ssize_t ahci_transmit_led_message(struct ata_port *ap, u32 state,
+					ssize_t size);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#111: FILE: drivers/ata/ahci.c:247:
+^Iu32 ^I^I^Iem_loc; /* enclosure management location */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#120: FILE: drivers/ata/ahci.c:264:
+^I^I^I^I^I ^I * per PM slot */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#120: FILE: drivers/ata/ahci.c:264:
+^I^I^I^I^I ^I * per PM slot */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#120: FILE: drivers/ata/ahci.c:264:
+					 	 * per PM slot */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#120: FILE: drivers/ata/ahci.c:264:
+	struct ahci_em_priv	em_priv[MAX_SLOTS];/* enclosure management info
+					 	 * per PM slot */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#172: FILE: drivers/ata/ahci.c:583:
+MODULE_PARM_DESC(ahci_em_messages,
+	"Set AHCI Enclosure Management Message type (0 = disabled, 1 = LED");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#271: FILE: drivers/ata/ahci.c:1204:
+	emp->saved_activity = emp->activity = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#293: FILE: drivers/ata/ahci.c:1226:
+static ssize_t ahci_transmit_led_message(struct ata_port *ap, u32 state,
+					ssize_t size)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#334: FILE: drivers/ata/ahci.c:1267:
+	writel(message[1], mmio + hpriv->em_loc+4);
 	                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#363: FILE: drivers/ata/ahci.c:1296:
+static ssize_t ahci_led_store(struct ata_port *ap, const char *buf,
+				size_t size)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#370: FILE: drivers/ata/ahci.c:1303:
+	state = simple_strtoul(buf, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:SPLIT_STRING: quoted string split across lines
#450: FILE: drivers/ata/ahci.c:2341:
 		"%s%s%s%s%s%s%s"
+		"%s%s%s%s%s%s%s"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#451: FILE: drivers/ata/ahci.c:2342:
+		"%s%s%s%s%s%s%s"
+		"%s\n"

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#461: FILE: drivers/ata/ahci.c:2360:
+		cap & (1 << 6) ? "ems ": ""
 		                       ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ahci_em_messages == 1'
#478: FILE: drivers/ata/ahci.c:2483:
+		if ((messages & 0x01) && (ahci_em_messages == 1)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LINE_SPACING: Please don't use multiple blank lines
#508: FILE: drivers/ata/ahci.c:2522:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#524: FILE: drivers/ata/libata-scsi.c:197:
+	struct Scsi_Host *shost = class_to_shost(dev);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LINE_SPACING: Missing a blank line after declarations
#526: FILE: drivers/ata/libata-scsi.c:199:
+	struct ata_port *ap = ata_shost_to_port(shost);
+	if (ap->ops->em_store && (ap->flags & ATA_FLAG_EM))

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions 'S_IRUGO | S_IWUGO' used
#541: FILE: drivers/ata/libata-scsi.c:214:
+}

The permissions used in DEVICE_ATTR are unusual.
Typically only three permissions are used - 0644 (RW), 0444 (RO)
and 0200 (WO).

See: https://www.kernel.org/doc/html/latest/filesystems/sysfs.html#attributes

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#542: FILE: drivers/ata/libata-scsi.c:215:
+DEVICE_ATTR(em_message, S_IRUGO | S_IWUGO,

Exporting world writable sysfs/debugfs files is usually a bad thing.
When done arbitrarily they can introduce serious security bugs.
In the past, some of the debugfs vulnerabilities would seemingly allow
any local user to write arbitrary values into device registers - a
situation from which little good can be expected to emerge.

See: https://lore.kernel.org/linux-arm-kernel/cover.1296818921.git.segoon@openwall.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#542: FILE: drivers/ata/libata-scsi.c:215:
+DEVICE_ATTR(em_message, S_IRUGO | S_IWUGO,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#543: FILE: drivers/ata/libata-scsi.c:216:
+DEVICE_ATTR(em_message, S_IRUGO | S_IWUGO,
+		ata_scsi_em_message_show, ata_scsi_em_message_store);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'ata_scsi_em_message_type_show' to 'em_message_type_show'
#554: FILE: drivers/ata/libata-scsi.c:227:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#555: FILE: drivers/ata/libata-scsi.c:228:
+DEVICE_ATTR(em_message_type, S_IRUGO,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#556: FILE: drivers/ata/libata-scsi.c:229:
+DEVICE_ATTR(em_message_type, S_IRUGO,
+		  ata_scsi_em_message_type_show, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#561: FILE: drivers/ata/libata-scsi.c:234:
+ata_scsi_activity_show(struct device *dev, struct device_attribute *attr,
+		char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#574: FILE: drivers/ata/libata-scsi.c:247:
+ata_scsi_activity_store(struct device *dev, struct device_attribute *attr,
+	const char *buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#583: FILE: drivers/ata/libata-scsi.c:256:
+		val = simple_strtoul(buf, NULL, 0);

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions 'S_IWUGO | S_IRUGO' used
#594: FILE: drivers/ata/libata-scsi.c:267:
+}

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#595: FILE: drivers/ata/libata-scsi.c:268:
+DEVICE_ATTR(sw_activity, S_IWUGO | S_IRUGO, ata_scsi_activity_show,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO | S_IRUGO' are not preferred. Consider using octal permissions '0666'.
#595: FILE: drivers/ata/libata-scsi.c:268:
+DEVICE_ATTR(sw_activity, S_IWUGO | S_IRUGO, ata_scsi_activity_show,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#596: FILE: drivers/ata/libata-scsi.c:269:
+DEVICE_ATTR(sw_activity, S_IWUGO | S_IRUGO, ata_scsi_activity_show,
+			ata_scsi_activity_store);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#619: FILE: include/linux/libata.h:198:
+					      * management */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#621: FILE: include/linux/libata.h:200:
+					      * led */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000271995.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 20 warnings, 14 checks, 579 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000271995.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
