WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#134: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#139: FILE: tools/perf/util/include/asm/bitops.h:1:
+#include "../../../../include/asm-generic/bitops/__fls.h"

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#151: FILE: tools/perf/util/include/asm/byteorder.h:1:
+#include "../asm/types.h"

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#159: FILE: tools/perf/util/include/asm/swab.h:1:
+/* stub */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#166: FILE: tools/perf/util/include/asm/types.h:1:
+#ifndef PERF_ASM_TYPES_H_

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#189: FILE: tools/perf/util/include/asm/uaccess.h:1:
+#ifndef _PERF_ASM_UACCESS_H_

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dest' may be better as '(dest)' to avoid precedence issues
#192: FILE: tools/perf/util/include/asm/uaccess.h:4:
+#define __get_user(src, dest)						\
+({									\
+	(src) = *dest;							\
+	0;								\
+})

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#209: FILE: tools/perf/util/include/linux/bitmap.h:1:
+#include "../../../../include/linux/bitmap.h"

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#217: FILE: tools/perf/util/include/linux/bitops.h:1:
+#ifndef _PERF_LINUX_BITOPS_H_

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#250: FILE: tools/perf/util/include/linux/compiler.h:1:
+#ifndef _PERF_LINUX_COMPILER_H_

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#266: FILE: tools/perf/util/include/linux/ctype.h:1:
+#include "../../../../include/linux/ctype.h"

ERROR:SPACING: space required after that ',' (ctx:VxV)
#280: FILE: tools/perf/util/include/linux/kernel.h:9:
+#define DIV_ROUND_UP(n,d) (((n) + (d) - 1) / (d))
                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'd' - possible side-effects?
#280: FILE: tools/perf/util/include/linux/kernel.h:9:
+#define DIV_ROUND_UP(n,d) (((n) + (d) - 1) / (d))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#282: FILE: tools/perf/util/include/linux/kernel.h:11:
+#define ALIGN(x,a)		__ALIGN_MASK(x,(typeof(x))(a)-1)
                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#282: FILE: tools/perf/util/include/linux/kernel.h:11:
+#define ALIGN(x,a)		__ALIGN_MASK(x,(typeof(x))(a)-1)
                   		              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#282: FILE: tools/perf/util/include/linux/kernel.h:11:
+#define ALIGN(x,a)		__ALIGN_MASK(x,(typeof(x))(a)-1)
                   		                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#283: FILE: tools/perf/util/include/linux/kernel.h:12:
+#define __ALIGN_MASK(x,mask)	(((x)+(mask))&~(mask))
                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#283: FILE: tools/perf/util/include/linux/kernel.h:12:
+#define __ALIGN_MASK(x,mask)	(((x)+(mask))&~(mask))
                             	     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#283: FILE: tools/perf/util/include/linux/kernel.h:12:
+#define __ALIGN_MASK(x,mask)	(((x)+(mask))&~(mask))
                             	             ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'mask' - possible side-effects?
#283: FILE: tools/perf/util/include/linux/kernel.h:12:
+#define __ALIGN_MASK(x,mask)	(((x)+(mask))&~(mask))

CHECK:SPACING: No space is necessary after a cast
#296: FILE: tools/perf/util/include/linux/kernel.h:43:
+	(void) (&_min1 == &_min2);		\

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#300: FILE: tools/perf/util/include/linux/kernel.h:47:
+#ifndef BUG_ON

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#301: FILE: tools/perf/util/include/linux/kernel.h:48:
+#define BUG_ON(cond) assert(!(cond))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#322: FILE: tools/perf/util/include/linux/kernel.h:69:
+static inline int scnprintf(char * buf, size_t size, const char * fmt, ...)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#322: FILE: tools/perf/util/include/linux/kernel.h:69:
+static inline int scnprintf(char * buf, size_t size, const char * fmt, ...)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#336: FILE: tools/perf/util/include/linux/kernel.h:83:
+simple_strtoul(const char *nptr, char **endptr, int base)

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#348: FILE: tools/perf/util/include/linux/types.h:1:
+/* stub */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000058133.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 14 warnings, 7 checks, 195 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000058133.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
