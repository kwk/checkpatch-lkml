WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#47: 
If we could keep TS off and reenable it when returning to userspace,
                            ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long long' should also have an identifier name
#68: FILE: arch/x86/include/asm/atomic_32.h:271:
+long long sse_atomic64_read_cx8call(long long, const atomic64_t *v);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#69: FILE: arch/x86/include/asm/atomic_32.h:272:
+void sse_atomic64_set_cx8call(long long, unsigned high);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long long' should also have an identifier name
#69: FILE: arch/x86/include/asm/atomic_32.h:272:
+void sse_atomic64_set_cx8call(long long, unsigned high);

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#78: FILE: arch/x86/include/asm/atomic_32.h:287:
+#define ATOMIC64_ALTERNATIVE_XMM(f) ALTERNATIVE("call cx8_atomic64_" #f, "call sse_atomic64_" #g, X86_FEATURE_XMM)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 161 exceeds 100 columns
#81: FILE: arch/x86/include/asm/atomic_32.h:290:
+#define ATOMIC64_ALTERNATIVE_XMM(f) ALTERNATIVE3("call generic_atomic64_" #f, "call cx8_atomic64_" #f, X86_FEATURE_CX8, "call sse_atomic64_" #f, X86_FEATURE_XMM)

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#125: FILE: arch/x86/lib/atomic64_32.c:70:
+/* we actually only need 8-byte alignment, but using cacheline alignment is the only simple way to this */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#131: FILE: arch/x86/lib/atomic64_32.c:76:
+/* using the fpu/mmx looks infeasible due to the need to save the FPU environment, which is very slow

WARNING:LINE_SPACING: Missing a blank line after declarations
#139: FILE: arch/x86/lib/atomic64_32.c:84:
+	struct thread_info *me = current_thread_info();
+	preempt_disable();

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#145: FILE: arch/x86/lib/atomic64_32.c:90:
+	asm volatile(

WARNING:LONG_LINE: line length of 157 exceeds 100 columns
#150: FILE: arch/x86/lib/atomic64_32.c:95:
+			    : "+m" (per_cpu__sse_atomic64_percpu.xmm0_low), "=m" (per_cpu__sse_atomic64_percpu.low), "=m" (per_cpu__sse_atomic64_percpu.high)

WARNING:LONG_LINE: line length of 141 exceeds 100 columns
#154: FILE: arch/x86/lib/atomic64_32.c:99:
+	res = (long long)(unsigned)percpu_read(sse_atomic64_percpu.low) | ((long long)(unsigned)percpu_read(sse_atomic64_percpu.high) << 32);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#154: FILE: arch/x86/lib/atomic64_32.c:99:
+	res = (long long)(unsigned)percpu_read(sse_atomic64_percpu.low) | ((long long)(unsigned)percpu_read(sse_atomic64_percpu.high) << 32);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#154: FILE: arch/x86/lib/atomic64_32.c:99:
+	res = (long long)(unsigned)percpu_read(sse_atomic64_percpu.low) | ((long long)(unsigned)percpu_read(sse_atomic64_percpu.high) << 32);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#169: FILE: arch/x86/lib/atomic64_32.c:167:
+void sse_atomic64_set_cx8call(long long dummy, unsigned high)

WARNING:LINE_SPACING: Missing a blank line after declarations
#173: FILE: arch/x86/lib/atomic64_32.c:171:
+	unsigned long cr0 = 0;
+	preempt_disable();

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#181: FILE: arch/x86/lib/atomic64_32.c:179:
+	asm volatile(

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#187: FILE: arch/x86/lib/atomic64_32.c:185:
+			    : "m" (per_cpu__sse_atomic64_percpu.low), "m" (per_cpu__sse_atomic64_percpu.high));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000010838.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 16 warnings, 2 checks, 118 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000010838.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
