WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#81: FILE: arch/arm/mach-omap1/board-h2-mmc.c:22:
+#if defined(CONFIG_MMC_OMAP) || defined(CONFIG_MMC_OMAP_MODULE)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#84: FILE: arch/arm/mach-omap1/board-h2-mmc.c:25:
+static int mmc_set_power(struct device *dev, int slot, int power_on,
+				int vdd)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#191: FILE: arch/arm/mach-omap1/board-h3-mmc.c:22:
+#if defined(CONFIG_MMC_OMAP) || defined(CONFIG_MMC_OMAP_MODULE)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#194: FILE: arch/arm/mach-omap1/board-h3-mmc.c:25:
+static int mmc_set_power(struct device *dev, int slot, int power_on,
+				int vdd)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#266: FILE: arch/arm/mach-omap1/board-innovator.c:364:
+#if defined(CONFIG_MMC_OMAP) || defined(CONFIG_MMC_OMAP_MODULE)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#269: FILE: arch/arm/mach-omap1/board-innovator.c:367:
+static int mmc_set_power(struct device *dev, int slot, int power_on,
+				int vdd)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#273: FILE: arch/arm/mach-omap1/board-innovator.c:371:
+		fpga_write(fpga_read(OMAP1510_FPGA_POWER) | (1 << 3),
+				OMAP1510_FPGA_POWER);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#276: FILE: arch/arm/mach-omap1/board-innovator.c:374:
+		fpga_write(fpga_read(OMAP1510_FPGA_POWER) & ~(1 << 3),
+				OMAP1510_FPGA_POWER);

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#358: FILE: arch/arm/mach-omap1/board-nokia770.c:177:
+#if defined(CONFIG_MMC_OMAP) || defined(CONFIG_MMC_OMAP_MODULE)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#364: FILE: arch/arm/mach-omap1/board-nokia770.c:183:
+static int nokia770_mmc_set_power(struct device *dev, int slot, int power_on,
+				int vdd)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#449: FILE: arch/arm/mach-omap1/board-sx1-mmc.c:21:
+#if defined(CONFIG_MMC_OMAP) || defined(CONFIG_MMC_OMAP_MODULE)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#453: FILE: arch/arm/mach-omap1/board-sx1-mmc.c:24:
+static int mmc_set_power(struct device *dev, int slot, int power_on,
 				int vdd)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#545: FILE: arch/arm/mach-omap1/devices.c:105:
+#if defined(CONFIG_MMC_OMAP) || defined(CONFIG_MMC_OMAP_MODULE)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#548: FILE: arch/arm/mach-omap1/devices.c:108:
+static inline void omap1_mmc_mux(struct omap_mmc_platform_data *mmc_controller,
+			int controller_nr)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#590: FILE: arch/arm/mach-omap1/devices.c:150:
+			omap_writel(omap_readl(MOD_CONF_CTRL_1) | (1 << 24),
+					MOD_CONF_CTRL_1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#595: FILE: arch/arm/mach-omap1/devices.c:155:
+void __init omap1_init_mmc(struct omap_mmc_platform_data **mmc_data,
+			int nr_controllers)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#768: FILE: arch/arm/mach-omap2/devices.c:305:
+static inline void omap2_mmc_mux(struct omap_mmc_platform_data *mmc_controller,
+			int controller_nr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#792: FILE: arch/arm/mach-omap2/devices.c:329:
+			u32 v = omap_ctrl_readl(OMAP2_CONTROL_DEVCONF0);
+			v |= (1 << 24);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#799: FILE: arch/arm/mach-omap2/devices.c:336:
+void __init omap2_init_mmc(struct omap_mmc_platform_data **mmc_data,
+			int nr_controllers)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1013: FILE: arch/arm/plat-omap/devices.c:204:
+int __init omap_mmc_add(int id, unsigned long base, unsigned long size,
+		unsigned int irq, struct omap_mmc_platform_data *data)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1049: FILE: arch/arm/plat-omap/devices.c:218:
+	res[1].start = res[1].end = irq;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BIT_MACRO: Prefer using the BIT macro
#1179: FILE: arch/arm/plat-omap/include/mach/mmc.h:33:
+#define HSMMC3			(1 << 2)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#1180: FILE: arch/arm/plat-omap/include/mach/mmc.h:34:
+#define HSMMC2			(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1181: FILE: arch/arm/plat-omap/include/mach/mmc.h:35:
+#define HSMMC1			(1 << 0)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1200: FILE: arch/arm/plat-omap/include/mach/mmc.h:63:
 	struct omap_mmc_slot_data {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1244: FILE: arch/arm/plat-omap/include/mach/mmc.h:111:
+void omap1_init_mmc(struct omap_mmc_platform_data **mmc_data,
+				int nr_controllers);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1246: FILE: arch/arm/plat-omap/include/mach/mmc.h:113:
+void omap2_init_mmc(struct omap_mmc_platform_data **mmc_data,
+				int nr_controllers);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1249: FILE: arch/arm/plat-omap/include/mach/mmc.h:116:
+int omap_mmc_add(int id, unsigned long base, unsigned long size,
+			unsigned int irq, struct omap_mmc_platform_data *data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1252: FILE: arch/arm/plat-omap/include/mach/mmc.h:119:
+static inline void omap1_init_mmc(struct omap_mmc_platform_data **mmc_data,
+				int nr_controllers)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1255: FILE: arch/arm/plat-omap/include/mach/mmc.h:122:
+}
+static inline void omap2_init_mmc(struct omap_mmc_platform_data **mmc_data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1256: FILE: arch/arm/plat-omap/include/mach/mmc.h:123:
+static inline void omap2_init_mmc(struct omap_mmc_platform_data **mmc_data,
+				int nr_controllers)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1259: FILE: arch/arm/plat-omap/include/mach/mmc.h:126:
+}
+static inline void hsmmc_init(int controller_mask)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1262: FILE: arch/arm/plat-omap/include/mach/mmc.h:129:
+}
+static inline int omap_mmc_add(int id, unsigned long base, unsigned long size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1263: FILE: arch/arm/plat-omap/include/mach/mmc.h:130:
+static inline int omap_mmc_add(int id, unsigned long base, unsigned long size,
+		unsigned int irq, struct omap_mmc_platform_data *data)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000195138.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 27 checks, 1135 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000195138.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
