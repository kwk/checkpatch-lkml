ERROR:SPACING: space prohibited after that open square bracket '['
#75: FILE: arch/um/drivers/ubd_kern.c:191:
+static struct ubd ubd_devs[MAX_DEV] = { [ 0 ... MAX_DEV - 1 ] = DEFAULT_UBD };

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close square bracket ']'
#75: FILE: arch/um/drivers/ubd_kern.c:191:
+static struct ubd ubd_devs[MAX_DEV] = { [ 0 ... MAX_DEV - 1 ] = DEFAULT_UBD };

ERROR:SPACING: space required before the open parenthesis '('
#106: FILE: arch/um/drivers/ubd_kern.c:543:
+	if(err < 0)

ERROR:SPACING: space required before the open parenthesis '('
#110: FILE: arch/um/drivers/ubd_kern.c:547:
+	if(err < 0)

ERROR:SPACING: space required before the open brace '{'
#123: FILE: arch/um/drivers/ubd_kern.c:560:
+	if(err < 0){

ERROR:SPACING: space required before the open parenthesis '('
#123: FILE: arch/um/drivers/ubd_kern.c:560:
+	if(err < 0){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#124: FILE: arch/um/drivers/ubd_kern.c:561:
+		printk("Failed to get modification time of backing file "

WARNING:SPLIT_STRING: quoted string split across lines
#125: FILE: arch/um/drivers/ubd_kern.c:562:
+		printk("Failed to get modification time of backing file "
+		       "\"%s\", err = %d\n", file, -err);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space required before the open brace '{'
#130: FILE: arch/um/drivers/ubd_kern.c:567:
+	if(err < 0){

ERROR:SPACING: space required before the open parenthesis '('
#130: FILE: arch/um/drivers/ubd_kern.c:567:
+	if(err < 0){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#131: FILE: arch/um/drivers/ubd_kern.c:568:
+		printk("Failed to get size of backing file \"%s\", "

WARNING:SPLIT_STRING: quoted string split across lines
#132: FILE: arch/um/drivers/ubd_kern.c:569:
+		printk("Failed to get size of backing file \"%s\", "
+		       "err = %d\n", file, -err);

ERROR:SPACING: space required before the open brace '{'
#136: FILE: arch/um/drivers/ubd_kern.c:573:
+	if(actual != size){

ERROR:SPACING: space required before the open parenthesis '('
#136: FILE: arch/um/drivers/ubd_kern.c:573:
+	if(actual != size){

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#138: FILE: arch/um/drivers/ubd_kern.c:575:
+		 * the typecast.*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#139: FILE: arch/um/drivers/ubd_kern.c:576:
+		printk("Size mismatch (%llu vs %llu) of COW header vs backing "

CHECK:SPACING: No space is necessary after a cast
#140: FILE: arch/um/drivers/ubd_kern.c:577:
+		       "file\n", (unsigned long long) size, actual);

WARNING:SPLIT_STRING: quoted string split across lines
#140: FILE: arch/um/drivers/ubd_kern.c:577:
+		printk("Size mismatch (%llu vs %llu) of COW header vs backing "
+		       "file\n", (unsigned long long) size, actual);

ERROR:SPACING: space required before the open brace '{'
#143: FILE: arch/um/drivers/ubd_kern.c:580:
+	if(modtime != mtime){

ERROR:SPACING: space required before the open parenthesis '('
#143: FILE: arch/um/drivers/ubd_kern.c:580:
+	if(modtime != mtime){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#144: FILE: arch/um/drivers/ubd_kern.c:581:
+		printk("mtime mismatch (%ld vs %ld) of COW header vs backing "

WARNING:SPLIT_STRING: quoted string split across lines
#145: FILE: arch/um/drivers/ubd_kern.c:582:
+		printk("mtime mismatch (%ld vs %ld) of COW header vs backing "
+		       "file\n", mtime, modtime);

ERROR:SPACING: space required before the open parenthesis '('
#156: FILE: arch/um/drivers/ubd_kern.c:593:
+	if(from_cmdline == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!from_cmdline"
#156: FILE: arch/um/drivers/ubd_kern.c:593:
+	if(from_cmdline == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required before the open parenthesis '('
#158: FILE: arch/um/drivers/ubd_kern.c:595:
+	if(!strcmp(from_cmdline, from_cow))

ERROR:SPACING: space required before the open brace '{'
#162: FILE: arch/um/drivers/ubd_kern.c:599:
+	if(err < 0){

ERROR:SPACING: space required before the open parenthesis '('
#162: FILE: arch/um/drivers/ubd_kern.c:599:
+	if(err < 0){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#163: FILE: arch/um/drivers/ubd_kern.c:600:
+		printk("Couldn't stat '%s', err = %d\n", from_cmdline, -err);

ERROR:SPACING: space required before the open brace '{'
#167: FILE: arch/um/drivers/ubd_kern.c:604:
+	if(err < 0){

ERROR:SPACING: space required before the open parenthesis '('
#167: FILE: arch/um/drivers/ubd_kern.c:604:
+	if(err < 0){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#168: FILE: arch/um/drivers/ubd_kern.c:605:
+		printk("Couldn't stat '%s', err = %d\n", from_cow, -err);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'buf1.ust_dev == buf2.ust_dev'
#171: FILE: arch/um/drivers/ubd_kern.c:608:
+	if((buf1.ust_dev == buf2.ust_dev) && (buf1.ust_ino == buf2.ust_ino))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'buf1.ust_ino == buf2.ust_ino'
#171: FILE: arch/um/drivers/ubd_kern.c:608:
+	if((buf1.ust_dev == buf2.ust_dev) && (buf1.ust_ino == buf2.ust_ino))

ERROR:SPACING: space required before the open parenthesis '('
#171: FILE: arch/um/drivers/ubd_kern.c:608:
+	if((buf1.ust_dev == buf2.ust_dev) && (buf1.ust_ino == buf2.ust_ino))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#174: FILE: arch/um/drivers/ubd_kern.c:611:
+	printk("Backing file mismatch - \"%s\" requested,\n"

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#181: FILE: arch/um/drivers/ubd_kern.c:618:
+static int open_ubd_file(char *file, struct openflags *openflags, int shared,
+		  char **backing_file_out, int *bitmap_offset_out,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'create_cow_out != NULL'
#193: FILE: arch/um/drivers/ubd_kern.c:630:
+		if ((fd == -ENOENT) && (create_cow_out != NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "create_cow_out"
#193: FILE: arch/um/drivers/ubd_kern.c:630:
+		if ((fd == -ENOENT) && (create_cow_out != NULL))

ERROR:SPACING: space required before the open parenthesis '('
#204: FILE: arch/um/drivers/ubd_kern.c:641:
+	if(shared)

CHECK:BRACES: braces {} should be used on all arms of this statement
#204: FILE: arch/um/drivers/ubd_kern.c:641:
+	if(shared)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#205: FILE: arch/um/drivers/ubd_kern.c:642:
+		printk("Not locking \"%s\" on the host\n", file);

CHECK:BRACES: Unbalanced braces around else statement
#206: FILE: arch/um/drivers/ubd_kern.c:643:
+	else {

ERROR:SPACING: space required before the open brace '{'
#208: FILE: arch/um/drivers/ubd_kern.c:645:
+		if(err < 0){

ERROR:SPACING: space required before the open parenthesis '('
#208: FILE: arch/um/drivers/ubd_kern.c:645:
+		if(err < 0){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#209: FILE: arch/um/drivers/ubd_kern.c:646:
+			printk("Failed to lock '%s', err = %d\n", file, -err);

ERROR:SPACING: space required before the open parenthesis '('
#215: FILE: arch/um/drivers/ubd_kern.c:652:
+	if(backing_file_out == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!backing_file_out"
#215: FILE: arch/um/drivers/ubd_kern.c:652:
+	if(backing_file_out == NULL)

ERROR:SPACING: space required before the open brace '{'
#220: FILE: arch/um/drivers/ubd_kern.c:657:
+	if(err && (*backing_file_out != NULL)){

ERROR:SPACING: space required before the open parenthesis '('
#220: FILE: arch/um/drivers/ubd_kern.c:657:
+	if(err && (*backing_file_out != NULL)){

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "backing_file_out"
#220: FILE: arch/um/drivers/ubd_kern.c:657:
+	if(err && (*backing_file_out != NULL)){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#221: FILE: arch/um/drivers/ubd_kern.c:658:
+		printk("Failed to read COW header from COW file \"%s\", "

WARNING:SPLIT_STRING: quoted string split across lines
#222: FILE: arch/um/drivers/ubd_kern.c:659:
+		printk("Failed to read COW header from COW file \"%s\", "
+		       "errno = %d\n", file, -err);

ERROR:SPACING: space required before the open parenthesis '('
#225: FILE: arch/um/drivers/ubd_kern.c:662:
+	if(err)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#232: FILE: arch/um/drivers/ubd_kern.c:669:
+		printk("Switching backing file to '%s'\n", *backing_file_out);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#236: FILE: arch/um/drivers/ubd_kern.c:673:
+			printk("Switch failed, errno = %d\n", -err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#256: FILE: arch/um/drivers/ubd_kern.c:693:
+static int create_cow_file(char *cow_file, char *backing_file,
+		    struct openflags flags,

ERROR:SPACING: space required before the open brace '{'
#264: FILE: arch/um/drivers/ubd_kern.c:701:
+	if(fd < 0){

ERROR:SPACING: space required before the open parenthesis '('
#264: FILE: arch/um/drivers/ubd_kern.c:701:
+	if(fd < 0){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#266: FILE: arch/um/drivers/ubd_kern.c:703:
+		printk("Open of COW file '%s' failed, errno = %d\n", cow_file,

ERROR:SPACING: space required before the open parenthesis '('
#274: FILE: arch/um/drivers/ubd_kern.c:711:
+	if(!err)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000296640.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 29 errors, 19 warnings, 12 checks, 421 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000296640.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
