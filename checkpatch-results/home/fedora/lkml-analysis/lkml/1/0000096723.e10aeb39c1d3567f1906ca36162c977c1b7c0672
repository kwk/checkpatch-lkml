WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#46: FILE: drivers/input/touchscreen/Kconfig:216:
+config TOUCHSCREEN_SYNAPTICS_I2C_RMI
+	tristate "Synaptics i2c touchscreen"
+	depends on I2C
+	help
+	  This enables support for Synaptics RMI over I2C based touchscreens.
+	  Such touchscreen is used in HTC Dream.
+
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#70: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#75: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LINE_SPACING: Missing a blank line after declarations
#126: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:52:
+	int ret = i2c_smbus_write_byte_data(ts->client, reg, val);
+	if (ret < 0)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#134: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:60:
+	int ret = i2c_smbus_read_byte_data(ts->client, 0xf0);
+	if (ret < 0)

WARNING:LINE_SPACING: Missing a blank line after declarations
#164: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:90:
+		u32 flip_flag = SYNAPTICS_FLIP_X;
+		for (a = 0; a < 2; a++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#166: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:92:
+			int p = buf[base + 1];
+			p |= (u16)(buf[base] & 0x1f) << 8;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#234: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:160:
+			printk(KERN_ERR "ts_work: i2c_transfer failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#239: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:165:
+			printk(KERN_WARNING "synaptics_ts_work_func:"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'synaptics_ts_work_func', this function's name, in a string
#239: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:165:
+			printk(KERN_WARNING "synaptics_ts_work_func:"

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#240: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:166:
+			printk(KERN_WARNING "synaptics_ts_work_func:"
+			       " bad read %x %x %x %x %x %x %x %x %x"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#241: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:167:
+			       " bad read %x %x %x %x %x %x %x %x %x"
+			       " %x %x %x %x %x %x, ret %d\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#309: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:235:
+^Ipr_info("synaptics: version %x, product property %x\n", $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#314: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:240:
+static void compute_areas(struct synaptics_ts_data *ts,^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#368: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:294:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#383: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:309:
+	pr_info("synaptics_ts_probe: inactive_x %d %d, inactive_y %d %d\n",
+	       inactive_area_left, inactive_area_right,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#386: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:312:
+	pr_info("synaptics_ts_probe: snap_x %d-%d %d-%d, snap_y %d-%d %d-%d\n",
+	       snap_left_on, snap_left_off, snap_right_on, snap_right_off,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#390: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:316:
+^I^I^I     -inactive_area_left, max_x + inactive_area_right, $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#403: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:329:
+static int synaptics_ts_probe(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#416: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:342:
+		printk(KERN_ERR "synaptics_ts_probe: need I2C_FUNC_I2C\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'synaptics_ts_probe', this function's name, in a string
#416: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:342:
+		printk(KERN_ERR "synaptics_ts_probe: need I2C_FUNC_I2C\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ts"
#422: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:348:
+	if (ts == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#438: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:364:
+			printk(KERN_ERR "synaptics_ts_probe power on failed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'synaptics_ts_probe', this function's name, in a string
#438: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:364:
+			printk(KERN_ERR "synaptics_ts_probe power on failed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'synaptics_ts_probe', this function's name, in a string
#459: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:385:
+	pr_info("synaptics_ts_probe: interrupt enable %x\n", ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#476: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:402:
+		printk(KERN_ERR "i2c_transfer failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#479: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:405:
+	printk(KERN_INFO "synaptics_ts_probe: 0xe0: %x %x %x %x %x %x %x %x\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'synaptics_ts_probe', this function's name, in a string
#479: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:405:
+	printk(KERN_INFO "synaptics_ts_probe: 0xe0: %x %x %x %x %x %x %x %x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#489: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:415:
+		printk(KERN_ERR "i2c_smbus_read_word_data failed\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#492: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:418:
+	ts->max[0] = max_x = (ret >> 8 & 0xff) | ((ret & 0x1f) << 8);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#495: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:421:
+		printk(KERN_ERR "i2c_smbus_read_word_data failed\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#498: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:424:
+	ts->max[1] = max_y = (ret >> 8 & 0xff) | ((ret & 0x1f) << 8);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ts->input_dev"
#510: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:436:
+	if (ts->input_dev == NULL) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#524: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:450:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#527: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:453:
+^I^Ipr_err("synaptics: Unable to register %s input device\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#550: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:476:
+^Ipr_info("synaptics: Start touchscreen %s in %s mode\n", $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'synaptics_ts_suspend', this function's name, in a string
#598: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:524:
+			pr_err("synaptics_ts_suspend power off failed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'synaptics_ts_resume', this function's name, in a string
#611: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:537:
+			pr_err("synaptics_ts_resume power on failed\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#616: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:542:
+	if (ts->use_irq) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#619: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:545:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#625: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:551:
+
+

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#642: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:568:
+static int __devinit synaptics_ts_init(void)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#668: FILE: include/linux/synaptics_i2c_rmi.h:1:
+/*

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000096723.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 26 warnings, 12 checks, 661 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000096723.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
