WARNING:TYPO_SPELLING: 'visibile' may be misspelled - perhaps 'visible'?
#37: 
and not visibile to userspace compile. Therefore, define per arch
        ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: No space is necessary after a cast
#130: FILE: checkpoint/objhash.c:130:
+	atomic_inc(&((struct sighand_struct *) ptr)->count);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#136: FILE: checkpoint/objhash.c:136:
+	__cleanup_sighand((struct sighand_struct *) ptr);

CHECK:SPACING: No space is necessary after a cast
#141: FILE: checkpoint/objhash.c:141:
+	return atomic_read(&((struct sighand_struct *) ptr)->count);

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#183: FILE: checkpoint/process.c:221:
+		ckpt_write_err(ctx, "TE", "sighand_struct", sighand_objref);
 		                     ^^

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#239: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#244: FILE: checkpoint/signal.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: No space is necessary after a cast
#294: FILE: checkpoint/signal.c:51:
+		hh[i]._sa_handler = (unsigned long) sa->sa_handler;

CHECK:SPACING: No space is necessary after a cast
#296: FILE: checkpoint/signal.c:53:
+		hh[i].sa_restorer = (unsigned long) sa->sa_restorer;

CHECK:SPACING: No space is necessary after a cast
#309: FILE: checkpoint/signal.c:66:
+	return do_checkpoint_sighand(ctx, (struct sighand_struct *) ptr);

CHECK:SPACING: No space is necessary after a cast
#367: FILE: checkpoint/signal.c:124:
+		sa->sa_handler = (void *) (unsigned long) hh[i]._sa_handler;

CHECK:SPACING: No space is necessary after a cast
#369: FILE: checkpoint/signal.c:126:
+		sa->sa_restorer = (void *) (unsigned long) hh[i].sa_restorer;

CHECK:SPACING: No space is necessary after a cast
#379: FILE: checkpoint/signal.c:136:
+	return (void *) do_restore_sighand(ctx);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#416: FILE: include/linux/checkpoint.h:249:
+extern int checkpoint_obj_sighand(struct ckpt_ctx *ctx, struct task_struct *t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#417: FILE: include/linux/checkpoint.h:250:
+extern int restore_obj_sighand(struct ckpt_ctx *ctx, int sighand_objref);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#419: FILE: include/linux/checkpoint.h:252:
+extern int ckpt_collect_sighand(struct ckpt_ctx *ctx, struct task_struct *t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#420: FILE: include/linux/checkpoint.h:253:
+extern int checkpoint_sighand(struct ckpt_ctx *ctx, void *ptr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#421: FILE: include/linux/checkpoint.h:254:
+extern void *restore_sighand(struct ckpt_ctx *ctx);

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#479: FILE: include/linux/checkpoint_hdr.h:426:
+} __attribute__((aligned(8)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#486: FILE: include/linux/checkpoint_hdr.h:433:
+} __attribute__((aligned(8)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#491: FILE: include/linux/checkpoint_hdr.h:438:
+} __attribute__((aligned(8)));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000068232.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 14 checks, 377 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000068232.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
