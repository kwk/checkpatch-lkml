WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#61: FILE: drivers/battery/Kconfig:11:
+config BATTERY_DS2760
+	tristate "DS2760 battery driver (HP iPAQ & others)"
+	depends on BATTERY && W1
+	select W1_SLAVE_DS2760
+	help
+	  Say Y here to enable support for batteries with ds2760 chip.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#77: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#82: FILE: drivers/battery/ds2760_battery.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:CAMELCASE: Avoid CamelCase: <accum_current_mAh>
#125: FILE: drivers/battery/ds2760_battery.c:44:
+	int accum_current_mAh;          /* units of mAh */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <full_active_mAh>
#130: FILE: drivers/battery/ds2760_battery.c:49:
+	int full_active_mAh;            /* units of mAh */

CHECK:CAMELCASE: Avoid CamelCase: <empty_mAh>
#131: FILE: drivers/battery/ds2760_battery.c:50:
+	int empty_mAh;                  /* units of mAh */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#147: FILE: drivers/battery/ds2760_battery.c:66:
+ * others use an index into this table. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#165: FILE: drivers/battery/ds2760_battery.c:84:
+ * temp is in Celsius */

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: drivers/battery/ds2760_battery.c:105:
+^I                                   msecs_to_jiffies(cache_time)))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#193: FILE: drivers/battery/ds2760_battery.c:112:
+	 * but after that we just read the interesting bits that change. */

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#198: FILE: drivers/battery/ds2760_battery.c:117:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#198: FILE: drivers/battery/ds2760_battery.c:117:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#205: FILE: drivers/battery/ds2760_battery.c:124:
+		printk("call to w1_ds2760_read failed (0x%08x)\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#214: FILE: drivers/battery/ds2760_battery.c:133:
+	 * We approximate because integer math is cheap, and close enough. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: drivers/battery/ds2760_battery.c:135:
+^I                  (di->raw[DS2760_VOLTAGE_LSB] >> 5);$

CHECK:CAMELCASE: Avoid CamelCase: <voltage_mV>
#217: FILE: drivers/battery/ds2760_battery.c:136:
+	di->voltage_mV = (di->voltage_raw * 5) - (di->voltage_raw / 8);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#220: FILE: drivers/battery/ds2760_battery.c:139:
+	 * class reports in units of mA, so convert by multiplying by 0.625. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: drivers/battery/ds2760_battery.c:142:
+^I                  (di->raw[DS2760_CURRENT_LSB] >> 3);$

CHECK:CAMELCASE: Avoid CamelCase: <current_mA>
#224: FILE: drivers/battery/ds2760_battery.c:143:
+	di->current_mA = (di->current_raw / 2) + (di->current_raw / 8);

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: drivers/battery/ds2760_battery.c:148:
+^I                   di->raw[DS2760_CURRENT_ACCUM_LSB];$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#234: FILE: drivers/battery/ds2760_battery.c:153:
+	 * multiplying by .125 * 10 = 1.25. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: drivers/battery/ds2760_battery.c:155:
+^I                             (di->raw[DS2760_TEMP_LSB] >> 5);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#240: FILE: drivers/battery/ds2760_battery.c:159:
+	 * maximum rated capacity. */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '['
#242: FILE: drivers/battery/ds2760_battery.c:161:
+		di->rated_capacity = rated_capacities[

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: drivers/battery/ds2760_battery.c:162:
+^I^I        (unsigned int)di->raw[DS2760_RATED_CAPACITY]];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#249: FILE: drivers/battery/ds2760_battery.c:168:
+^I                      di->raw[DS2760_ACTIVE_FULL + 1];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#252: FILE: drivers/battery/ds2760_battery.c:171:
+^I           di->raw[DS2760_ACTIVE_FULL + 1];$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#266: FILE: drivers/battery/ds2760_battery.c:185:
+	 * ((ICA - Empty Value) / (Full Value - Empty Value)) x 100% */

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: drivers/battery/ds2760_battery.c:187:
+^I                    (di->full_active_mAh - di->empty_mAh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#277: FILE: drivers/battery/ds2760_battery.c:196:
+^I^I                 60) / di->current_mA;$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#298: FILE: drivers/battery/ds2760_battery.c:217:
+		}
+		else if (di->current_mA < -5) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#300: FILE: drivers/battery/ds2760_battery.c:219:
+				printk(KERN_WARNING "%s: not enough power to "

WARNING:SPLIT_STRING: quoted string split across lines
#301: FILE: drivers/battery/ds2760_battery.c:220:
+				printk(KERN_WARNING "%s: not enough power to "
+				       "charge\n", di->bi->name);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#305: FILE: drivers/battery/ds2760_battery.c:224:
+		}
+		else if (di->current_mA < 10 &&

ERROR:CODE_INDENT: code indent should use tabs where possible
#306: FILE: drivers/battery/ds2760_battery.c:225:
+^I^I            di->charge_status != BATTERY_STATUS_FULL) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: drivers/battery/ds2760_battery.c:225:
+		else if (di->current_mA < 10 &&
+		            di->charge_status != BATTERY_STATUS_FULL) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#307: FILE: drivers/battery/ds2760_battery.c:226:
+		            di->charge_status != BATTERY_STATUS_FULL) {
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#310: FILE: drivers/battery/ds2760_battery.c:229:
+			 * consecutive times. */

CHECK:BRACES: braces {} should be used on all arms of this statement
#314: FILE: drivers/battery/ds2760_battery.c:233:
+			if (di->full_counter < 2)
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#316: FILE: drivers/battery/ds2760_battery.c:235:
+			else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#323: FILE: drivers/battery/ds2760_battery.c:242:
+				if (w1_ds2760_write(di->w1_dev, acr,
+				    DS2760_CURRENT_ACCUM_MSB, 2) < 2)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#324: FILE: drivers/battery/ds2760_battery.c:243:
+					printk(KERN_ERR "ACR reset failed\n");

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#329: FILE: drivers/battery/ds2760_battery.c:248:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#329: FILE: drivers/battery/ds2760_battery.c:248:
+	else {

WARNING:RETURN_VOID: void function return statements are not generally useful
#338: FILE: drivers/battery/ds2760_battery.c:257:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#345: FILE: drivers/battery/ds2760_battery.c:264:
+	if (!(dev->driver && dev->driver->name &&
+	     (strcmp(dev->driver->name, "w1_slave_driver") == 0)))

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#364: FILE: drivers/battery/ds2760_battery.c:283:
+	pr_debug("%s\n", __FUNCTION__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#371: FILE: drivers/battery/ds2760_battery.c:290:
+^I^I^I                   ds2760_battery_match_callback);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#371: FILE: drivers/battery/ds2760_battery.c:290:
+			di->w1_dev = bus_find_device(bus, NULL, NULL,
+			                   ds2760_battery_match_callback);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#374: FILE: drivers/battery/ds2760_battery.c:293:
+			pr_debug("%s: no dev found\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#378: FILE: drivers/battery/ds2760_battery.c:297:
+		pr_debug("%s: dev found\n", __FUNCTION__);

WARNING:RETURN_VOID: void function return statements are not generally useful
#386: FILE: drivers/battery/ds2760_battery.c:305:
+	return;
+}

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#388: FILE: drivers/battery/ds2760_battery.c:307:
+#define to_ds2760_device_info(x) container_of((x), struct ds2760_device_info, \
+                                              batt);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:CODE_INDENT: code indent should use tabs where possible
#389: FILE: drivers/battery/ds2760_battery.c:308:
+                                              batt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: drivers/battery/ds2760_battery.c:308:
+                                              batt);$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#395: FILE: drivers/battery/ds2760_battery.c:314:
+	pr_debug("%s\n", __FUNCTION__);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#398: FILE: drivers/battery/ds2760_battery.c:317:
+	queue_delayed_work(di->monitor_wqueue, &di->monitor_work, HZ/10);
 	                                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:RETURN_VOID: void function return statements are not generally useful
#401: FILE: drivers/battery/ds2760_battery.c:320:
+	return;
+}

ERROR:CODE_INDENT: code indent should use tabs where possible
#404: FILE: drivers/battery/ds2760_battery.c:323:
+                                         enum battery_property bp)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: drivers/battery/ds2760_battery.c:323:
+                                         enum battery_property bp)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#475: FILE: drivers/battery/ds2760_battery.c:394:
+^I                          ds2760_battery_external_power_changed;$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#481: FILE: drivers/battery/ds2760_battery.c:400:
+		printk(KERN_ERR "Failed to register class dev for %s",

ERROR:CODE_INDENT: code indent should use tabs where possible
#510: FILE: drivers/battery/ds2760_battery.c:429:
+^I                                  &di->monitor_work);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#521: FILE: drivers/battery/ds2760_battery.c:440:
+                                  pm_message_t state)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#521: FILE: drivers/battery/ds2760_battery.c:440:
+                                  pm_message_t state)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#572: FILE: drivers/battery/ds2760_battery.c:491:
+              "Matt Reimer <mreimer@vpop.net>, "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#572: FILE: drivers/battery/ds2760_battery.c:491:
+              "Matt Reimer <mreimer@vpop.net>, "$

WARNING:SPLIT_STRING: quoted string split across lines
#572: FILE: drivers/battery/ds2760_battery.c:491:
+MODULE_AUTHOR("Szabolcs Gyurko <szabolcs.gyurko@tlt.hu>, "
+              "Matt Reimer <mreimer@vpop.net>, "

ERROR:CODE_INDENT: code indent should use tabs where possible
#573: FILE: drivers/battery/ds2760_battery.c:492:
+              "Anton Vorontsov <cbou@mail.ru>");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#573: FILE: drivers/battery/ds2760_battery.c:492:
+              "Anton Vorontsov <cbou@mail.ru>");$

WARNING:SPLIT_STRING: quoted string split across lines
#573: FILE: drivers/battery/ds2760_battery.c:492:
+              "Matt Reimer <mreimer@vpop.net>, "
+              "Anton Vorontsov <cbou@mail.ru>");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#581: FILE: include/linux/ds2760_battery.h:1:
+/*

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000445517.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 23 errors, 33 warnings, 16 checks, 538 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000445517.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
