WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#74: FILE: arch/powerpc/platforms/8xx/mpc86xads_setup.c:116:
+#if defined(CONFIG_PQ_WDT) || defined(CONFIG_PQ_WDT_MODULE)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#97: FILE: arch/powerpc/platforms/8xx/mpc885ads_setup.c:251:
+#if defined(CONFIG_PQ_WDT) || defined(CONFIG_PQ_WDT_MODULE)

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#117: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#122: FILE: arch/powerpc/sysdev/pq_wdt.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#143: FILE: arch/powerpc/sysdev/pq_wdt.c:22:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#185: FILE: arch/powerpc/sysdev/pq_wdt.c:64:
+	mod_timer(&wdt_timer, jiffies + (HZ/2));
 	                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#221: FILE: arch/powerpc/sysdev/pq_wdt.c:100:
+		printk(KERN_NOTICE "pq_wdt: wdt disabled (SWCRR: 0x%08X)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#228: FILE: arch/powerpc/sysdev/pq_wdt.c:107:
+	printk(KERN_NOTICE

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!np"
#282: FILE: arch/powerpc/sysdev/pq_wdt.c:161:
+	if (np == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!np"
#284: FILE: arch/powerpc/sysdev/pq_wdt.c:163:
+	if (np == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!np"
#288: FILE: arch/powerpc/sysdev/pq_wdt.c:167:
+	if (np == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#289: FILE: arch/powerpc/sysdev/pq_wdt.c:168:
+		printk(KERN_ERR "Could not find fsl,pq1/2/2pro-wdt node\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#295: FILE: arch/powerpc/sysdev/pq_wdt.c:174:
+		printk(KERN_ERR "Could not find soc node\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#303: FILE: arch/powerpc/sysdev/pq_wdt.c:182:
+		printk(KERN_ERR "Could not find bus-frequency in soc node\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!wdt_reg"
#310: FILE: arch/powerpc/sysdev/pq_wdt.c:189:
+	if (wdt_reg == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#311: FILE: arch/powerpc/sysdev/pq_wdt.c:190:
+		printk(KERN_ERR "Could not iomap wdt\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#331: FILE: arch/powerpc/sysdev/pq_wdt.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#350: FILE: arch/powerpc/sysdev/pq_wdt.h:20:
+extern int pq_wdt_get_timeout(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#351: FILE: arch/powerpc/sysdev/pq_wdt.h:21:
+extern void pq_wdt_reset(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#352: FILE: arch/powerpc/sysdev/pq_wdt.h:22:
+extern void pq_wdt_install_timer(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#353: FILE: arch/powerpc/sysdev/pq_wdt.h:23:
+extern void pq_wdt_stop_timer(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#354: FILE: arch/powerpc/sysdev/pq_wdt.h:24:
+extern int pq_wdt_setup(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#354: FILE: arch/powerpc/sysdev/pq_wdt.h:24:
+extern int pq_wdt_setup(int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#355: FILE: arch/powerpc/sysdev/pq_wdt.h:25:
+extern int pq_wdt_present(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#356: FILE: arch/powerpc/sysdev/pq_wdt.h:26:
+extern int pq_wdt_early_init(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#401: FILE: drivers/watchdog/pq_wdt.c:1:
+/*

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#423: FILE: drivers/watchdog/pq_wdt.c:23:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#424: FILE: drivers/watchdog/pq_wdt.c:24:
+#include <asm/io.h>

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#433: FILE: drivers/watchdog/pq_wdt.c:33:
+MODULE_PARM_DESC(timeout,
+	"Watchdog timeout in ticks. (0<timeout<65536, default=65535");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#438: FILE: drivers/watchdog/pq_wdt.c:38:
+MODULE_PARM_DESC(reset,
+	"Watchdog Interrupt/Reset Mode. 0 = interrupt, 1 = reset (default)");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#499: FILE: drivers/watchdog/pq_wdt.c:99:
+static ssize_t pq_wdt_write(struct file *file, const char *data, size_t len,
+				loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#508: FILE: drivers/watchdog/pq_wdt.c:108:
+static int pq_wdt_ioctl(struct inode *inode, struct file *file,
+			    unsigned int cmd, unsigned long arg)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#572: FILE: drivers/watchdog/pq_wdt.c:172:
+static int __devinit pq_wdt_probe(struct of_device *op,

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#586: FILE: drivers/watchdog/pq_wdt.c:186:
+static int __devexit pq_wdt_remove(struct of_device *op)

WARNING:CONST_STRUCT: struct of_device_id should normally be const
#592: FILE: drivers/watchdog/pq_wdt.c:192:
+static struct of_device_id pq_wdt_match[] = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:UNDOCUMENTED_DT_STRING: DT compatible string "fsl,pq1-wdt" appears un-documented -- check /home/fedora/lkml-analysis/linux/Documentation/devicetree/bindings/
#593: FILE: drivers/watchdog/pq_wdt.c:193:
+	{ .compatible = "fsl,pq1-wdt", },

WARNING:UNDOCUMENTED_DT_STRING: DT compatible string "fsl,pq2-wdt" appears un-documented -- check /home/fedora/lkml-analysis/linux/Documentation/devicetree/bindings/
#594: FILE: drivers/watchdog/pq_wdt.c:194:
+	{ .compatible = "fsl,pq2-wdt", },

WARNING:UNDOCUMENTED_DT_STRING: DT compatible string "fsl,pq2pro-wdt" appears un-documented -- check /home/fedora/lkml-analysis/linux/Documentation/devicetree/bindings/
#595: FILE: drivers/watchdog/pq_wdt.c:195:
+	{ .compatible = "fsl,pq2pro-wdt", },

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000335518.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 21 warnings, 17 checks, 524 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000335518.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
