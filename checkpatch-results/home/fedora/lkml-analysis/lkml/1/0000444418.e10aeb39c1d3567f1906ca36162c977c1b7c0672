WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#56: FILE: fs/Kconfig:554:
+config UNION_MOUNT
+       bool "Union mount support (EXPERIMENTAL)"
+       depends on EXPERIMENTAL
+       ---help---
+         If you say Y here, you will be able to mount file systems as
+         union mount stacks. This is a VFS based implementation and
+         should work with all file systems. If unsure, say N.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#64: FILE: fs/Kconfig:562:
+config UNION_MOUNT_DEBUG
+       bool "Union mount debugging output"
+       depends on UNION_MOUNT
+       ---help---
+         If you say Y here, the union mount debugging code will be
+         compiled in. You have activate the appropriate UNION_MOUNT_DEBUG
+         flags in <file:include/linux/union.h>, too.
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#78: FILE: include/linux/union_debug.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#81: FILE: include/linux/union_debug.h:4:
+ * Copyright © 2004-2007 IBM Corporation
              ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#119: FILE: include/linux/union_debug.h:42:
+		printk(KERN_DEBUG "%s: " fmt, __FUNCTION__, ## args);	\

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#119: FILE: include/linux/union_debug.h:42:
+		printk(KERN_DEBUG "%s: " fmt, __FUNCTION__, ## args);	\

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->uid == 7777'
#123: FILE: include/linux/union_debug.h:46:
+	if (UNION_MOUNT_DEBUG && (current->uid == 7777))		\

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#124: FILE: include/linux/union_debug.h:47:
+		printk(KERN_DEBUG "%s: " fmt, __FUNCTION__, ## args);	\

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#124: FILE: include/linux/union_debug.h:47:
+		printk(KERN_DEBUG "%s: " fmt, __FUNCTION__, ## args);	\

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->uid == 7777'
#128: FILE: include/linux/union_debug.h:51:
+	if (UNION_MOUNT_DEBUG_DCACHE && (current->uid == 7777))		\

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#129: FILE: include/linux/union_debug.h:52:
+		printk(KERN_DEBUG "%s: " fmt, __FUNCTION__, ## args);	\

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#129: FILE: include/linux/union_debug.h:52:
+		printk(KERN_DEBUG "%s: " fmt, __FUNCTION__, ## args);	\

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->uid == 7777'
#133: FILE: include/linux/union_debug.h:56:
+	if (UNION_MOUNT_DEBUG_LOCK && (current->uid == 7777))		\

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#134: FILE: include/linux/union_debug.h:57:
+		printk(KERN_DEBUG "%s: " fmt, __FUNCTION__, ## args);	\

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#134: FILE: include/linux/union_debug.h:57:
+		printk(KERN_DEBUG "%s: " fmt, __FUNCTION__, ## args);	\

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->uid == 7777'
#138: FILE: include/linux/union_debug.h:61:
+	if (UNION_MOUNT_DEBUG_READDIR && (current->uid == 7777))	\

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#139: FILE: include/linux/union_debug.h:62:
+		printk(KERN_DEBUG "%s: " fmt, __FUNCTION__, ## args);	\

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#139: FILE: include/linux/union_debug.h:62:
+		printk(KERN_DEBUG "%s: " fmt, __FUNCTION__, ## args);	\

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000444418.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 13 warnings, 5 checks, 98 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000444418.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
