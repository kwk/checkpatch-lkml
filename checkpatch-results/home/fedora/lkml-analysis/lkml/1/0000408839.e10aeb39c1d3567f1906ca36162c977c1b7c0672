WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#80: FILE: drivers/video/geode/Kconfig:11:
+config FB_GEODE_LX
+	tristate "AMD Geode LX framebuffer support (EXPERIMENTAL)"
+	depends on FB && FB_GEODE 
+	select FB_CFB_FILLRECT
+	select FB_CFB_COPYAREA
+	select FB_CFB_IMAGEBLIT
+	---help---
+	  Framebuffer driver for the display controller integrated into the
+	  AMD Geode LX processors.
+
+	  To compile this driver as a module, choose M here: the module will
+	  be called lxfb.
+
+	  If unsure, say N.
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#82: FILE: drivers/video/geode/Kconfig:13:
+^Idepends on FB && FB_GEODE $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#112: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#117: FILE: drivers/video/geode/lxfb.h:1:
+#ifndef _LXFB_H_

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fb_info *' should also have an identifier name
#141: FILE: drivers/video/geode/lxfb.h:25:
+void lx_get_gamma(struct fb_info *, unsigned int *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int *' should also have an identifier name
#141: FILE: drivers/video/geode/lxfb.h:25:
+void lx_get_gamma(struct fb_info *, unsigned int *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#141: FILE: drivers/video/geode/lxfb.h:25:
+void lx_get_gamma(struct fb_info *, unsigned int *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fb_info *' should also have an identifier name
#142: FILE: drivers/video/geode/lxfb.h:26:
+void lx_set_gamma(struct fb_info *, unsigned int *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int *' should also have an identifier name
#142: FILE: drivers/video/geode/lxfb.h:26:
+void lx_set_gamma(struct fb_info *, unsigned int *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#142: FILE: drivers/video/geode/lxfb.h:26:
+void lx_set_gamma(struct fb_info *, unsigned int *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fb_info *' should also have an identifier name
#144: FILE: drivers/video/geode/lxfb.h:28:
+int lx_blank_display(struct fb_info *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#144: FILE: drivers/video/geode/lxfb.h:28:
+int lx_blank_display(struct fb_info *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fb_info *' should also have an identifier name
#145: FILE: drivers/video/geode/lxfb.h:29:
+void lx_set_palette_reg(struct fb_info *, unsigned int, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#145: FILE: drivers/video/geode/lxfb.h:29:
+void lx_set_palette_reg(struct fb_info *, unsigned int, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#145: FILE: drivers/video/geode/lxfb.h:29:
+void lx_set_palette_reg(struct fb_info *, unsigned int, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#145: FILE: drivers/video/geode/lxfb.h:29:
+void lx_set_palette_reg(struct fb_info *, unsigned int, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#145: FILE: drivers/video/geode/lxfb.h:29:
+void lx_set_palette_reg(struct fb_info *, unsigned int, unsigned int,

CHECK:BIT_MACRO: Prefer using the BIT macro
#158: FILE: drivers/video/geode/lxfb.h:42:
+#define GLCP_DOTPLL_RESET    (1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#159: FILE: drivers/video/geode/lxfb.h:43:
+#define GLCP_DOTPLL_BYPASS   (1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#160: FILE: drivers/video/geode/lxfb.h:44:
+#define GLCP_DOTPLL_HALFPIX  (1 << 24)

CHECK:BIT_MACRO: Prefer using the BIT macro
#161: FILE: drivers/video/geode/lxfb.h:45:
+#define GLCP_DOTPLL_LOCK     (1 << 25)

CHECK:BIT_MACRO: Prefer using the BIT macro
#166: FILE: drivers/video/geode/lxfb.h:50:
+#define DF_SIMULTANEOUS_CRT_AND_FP  (1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#187: FILE: drivers/video/geode/lxfb.h:71:
+#define  DC_GCFG_DFLE     (1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#188: FILE: drivers/video/geode/lxfb.h:72:
+#define  DC_GCFG_VIDE     (1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#189: FILE: drivers/video/geode/lxfb.h:73:
+#define  DC_GCFG_VGAE     (1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#190: FILE: drivers/video/geode/lxfb.h:74:
+#define  DC_GCFG_CMPE     (1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#191: FILE: drivers/video/geode/lxfb.h:75:
+#define  DC_GCFG_DECE     (1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#192: FILE: drivers/video/geode/lxfb.h:76:
+#define  DC_GCFG_FDTY     (1 << 17)

CHECK:BIT_MACRO: Prefer using the BIT macro
#195: FILE: drivers/video/geode/lxfb.h:79:
+#define  DC_DCFG_TGEN     (1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#196: FILE: drivers/video/geode/lxfb.h:80:
+#define  DC_DCFG_GDEN     (1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#197: FILE: drivers/video/geode/lxfb.h:81:
+#define  DC_DCFG_VDEN     (1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#198: FILE: drivers/video/geode/lxfb.h:82:
+#define  DC_DCFG_TRUP     (1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#199: FILE: drivers/video/geode/lxfb.h:83:
+#define  DC_DCFG_DCEN     (1 << 24)

CHECK:BIT_MACRO: Prefer using the BIT macro
#200: FILE: drivers/video/geode/lxfb.h:84:
+#define  DC_DCFG_PALB     (1 << 25)

CHECK:BIT_MACRO: Prefer using the BIT macro
#201: FILE: drivers/video/geode/lxfb.h:85:
+#define  DC_DCFG_VISL     (1 << 27)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#211: FILE: drivers/video/geode/lxfb.h:95:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#219: FILE: drivers/video/geode/lxfb.h:103:
+#define DC_DV_TOP_ENABLE   (1 << 0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#243: FILE: drivers/video/geode/lxfb.h:127:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#247: FILE: drivers/video/geode/lxfb.h:131:
+
+

CHECK:BIT_MACRO: Prefer using the BIT macro
#249: FILE: drivers/video/geode/lxfb.h:133:
+#define  DC_IRQ_MASK         (1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#250: FILE: drivers/video/geode/lxfb.h:134:
+#define  DC_VSYNC_IRQ_MASK   (1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#251: FILE: drivers/video/geode/lxfb.h:135:
+#define  DC_IRQ_STATUS       (1 << 20)

CHECK:BIT_MACRO: Prefer using the BIT macro
#252: FILE: drivers/video/geode/lxfb.h:136:
+#define  DC_VSYNC_IRQ_STATUS (1 << 21)

CHECK:BIT_MACRO: Prefer using the BIT macro
#255: FILE: drivers/video/geode/lxfb.h:139:
+#define  DC_GENLCK_ENABLE   (1 << 18)

CHECK:BIT_MACRO: Prefer using the BIT macro
#256: FILE: drivers/video/geode/lxfb.h:140:
+#define  DC_GC_ALPHA_FLICK_ENABLE  (1 << 25)

CHECK:BIT_MACRO: Prefer using the BIT macro
#257: FILE: drivers/video/geode/lxfb.h:141:
+#define  DC_GC_FLICKER_FILTER_ENABLE (1 << 24)

CHECK:BIT_MACRO: Prefer using the BIT macro
#261: FILE: drivers/video/geode/lxfb.h:145:
+#define DC_CLR_KEY_ENABLE (1 << 24)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#263: FILE: drivers/video/geode/lxfb.h:147:
+
+

CHECK:BIT_MACRO: Prefer using the BIT macro
#271: FILE: drivers/video/geode/lxfb.h:155:
+#define  DF_VCFG_VID_EN    (1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#275: FILE: drivers/video/geode/lxfb.h:159:
+#define DF_DCFG_CRT_EN     (1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#276: FILE: drivers/video/geode/lxfb.h:160:
+#define DF_DCFG_HSYNC_EN   (1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#277: FILE: drivers/video/geode/lxfb.h:161:
+#define DF_DCFG_VSYNC_EN   (1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#278: FILE: drivers/video/geode/lxfb.h:162:
+#define DF_DCFG_DAC_BL_EN  (1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#279: FILE: drivers/video/geode/lxfb.h:163:
+#define DF_DCFG_CRT_HSYNC_POL  (1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#280: FILE: drivers/video/geode/lxfb.h:164:
+#define DF_DCFG_CRT_VSYNC_POL  (1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#281: FILE: drivers/video/geode/lxfb.h:165:
+#define DF_DCFG_GV_PAL_BYP     (1 << 21)

CHECK:BIT_MACRO: Prefer using the BIT macro
#291: FILE: drivers/video/geode/lxfb.h:175:
+#define  DF_MISC_GAM_BYPASS (1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#292: FILE: drivers/video/geode/lxfb.h:176:
+#define  DF_MISC_DAC_PWRDN  (1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#293: FILE: drivers/video/geode/lxfb.h:177:
+#define  DF_MISC_A_PWRDN    (1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#307: FILE: drivers/video/geode/lxfb.h:191:
+#define  DF_FP_PM_P          (1 << 24)

CHECK:BIT_MACRO: Prefer using the BIT macro
#312: FILE: drivers/video/geode/lxfb.h:196:
+#define  GP_BS_BLT_BUSY    (1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#313: FILE: drivers/video/geode/lxfb.h:197:
+#define  GP_BS_CB_EMPTY    (1 << 4)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#322: FILE: drivers/video/geode/lxfb_core.c:1:
+/*

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __initconst
#358: FILE: drivers/video/geode/lxfb_core.c:37:
+const struct fb_videomode geode_modedb[] __initdata = {

Const init definitions should use __initconst instead of
__initdata.

Similarly init definitions without const require a separate
use of const.

CHECK:BRACES: braces {} should be used on all arms of this statement
#544: FILE: drivers/video/geode/lxfb_core.c:223:
+	if (var->bits_per_pixel == 32) {
[...]
+	} else if (var->bits_per_pixel == 16) {
[...]
+	} else if (var->bits_per_pixel == 8) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#556: FILE: drivers/video/geode/lxfb_core.c:235:
+	} else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#562: FILE: drivers/video/geode/lxfb_core.c:241:
+	if ((lx_get_pitch(var->xres, var->bits_per_pixel) * var->yres)
[...]
+	  return -EINVAL;

WARNING:TABSTOP: Statements should start on a tabstop
#564: FILE: drivers/video/geode/lxfb_core.c:243:
+	  return -EINVAL;

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#576: FILE: drivers/video/geode/lxfb_core.c:255:
+		fb_alloc_cmap(&info->cmap, 1<<info->var.bits_per_pixel, 0);
 		                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#580: FILE: drivers/video/geode/lxfb_core.c:259:
+	info->fix.line_length = lx_get_pitch(info->var.xres,
+		info->var.bits_per_pixel);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#593: FILE: drivers/video/geode/lxfb_core.c:272:
+static int lxfb_setcolreg(unsigned regno, unsigned red, unsigned green,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#593: FILE: drivers/video/geode/lxfb_core.c:272:
+static int lxfb_setcolreg(unsigned regno, unsigned red, unsigned green,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#593: FILE: drivers/video/geode/lxfb_core.c:272:
+static int lxfb_setcolreg(unsigned regno, unsigned red, unsigned green,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#594: FILE: drivers/video/geode/lxfb_core.c:273:
+static int lxfb_setcolreg(unsigned regno, unsigned red, unsigned green,
+			   unsigned blue, unsigned transp,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#594: FILE: drivers/video/geode/lxfb_core.c:273:
+			   unsigned blue, unsigned transp,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#594: FILE: drivers/video/geode/lxfb_core.c:273:
+			   unsigned blue, unsigned transp,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#599: FILE: drivers/video/geode/lxfb_core.c:278:
+		red = green = blue = (red * 77 + green * 151 + blue * 28) >> 8;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#630: FILE: drivers/video/geode/lxfb_core.c:309:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info->screen_base"
#669: FILE: drivers/video/geode/lxfb_core.c:348:
+	if (info->screen_base == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#673: FILE: drivers/video/geode/lxfb_core.c:352:
+	par->gp_regs = ioremap(pci_resource_start(dev, 1),
+				pci_resource_len(dev, 1));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!par->gp_regs"
#675: FILE: drivers/video/geode/lxfb_core.c:354:
+	if (par->gp_regs == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!par->dc_regs"
#681: FILE: drivers/video/geode/lxfb_core.c:360:
+	if (par->dc_regs == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!par->df_regs"
#687: FILE: drivers/video/geode/lxfb_core.c:366:
+	if (par->df_regs == NULL)

WARNING:CONST_STRUCT: struct fb_ops should normally be const
#703: FILE: drivers/video/geode/lxfb_core.c:382:
+static struct fb_ops lxfb_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info"
#767: FILE: drivers/video/geode/lxfb_core.c:446:
+	if (info == NULL)

CHECK:SPACING: No space is necessary after a cast
#788: FILE: drivers/video/geode/lxfb_core.c:467:
+	modedb_ptr = (struct fb_videomode *) geode_modedb;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#801: FILE: drivers/video/geode/lxfb_core.c:480:
+	 * in which case we assume the user knows what he is doing */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#816: FILE: drivers/video/geode/lxfb_core.c:495:
+	printk(KERN_INFO "fb%d: %s frame buffer device\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#817: FILE: drivers/video/geode/lxfb_core.c:496:
+	printk(KERN_INFO "fb%d: %s frame buffer device\n",
+		info->node, info->fix.id);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!opt"
#893: FILE: drivers/video/geode/lxfb_core.c:572:
+		if (opt == NULL)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#900: FILE: drivers/video/geode/lxfb_core.c:579:
+			fbsize = simple_strtoul(opt+7, NULL, 0);
 			                           ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#900: FILE: drivers/video/geode/lxfb_core.c:579:
+			fbsize = simple_strtoul(opt+7, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#927: FILE: drivers/video/geode/lxfb_core.c:606:
+}
+static void __exit lxfb_cleanup(void)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#949: FILE: drivers/video/geode/lxfb_ops.c:1:
+/* Geode LX framebuffer driver

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#979: FILE: drivers/video/geode/lxfb_ops.c:31:
+ * pllval is the corresponding PLL value
+*/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#982: FILE: drivers/video/geode/lxfb_ops.c:34:
+  unsigned int pllval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#983: FILE: drivers/video/geode/lxfb_ops.c:35:
+  unsigned int freq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#985: FILE: drivers/video/geode/lxfb_ops.c:37:
+  { 0x000031AC, 24923 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#986: FILE: drivers/video/geode/lxfb_ops.c:38:
+  { 0x0000215D, 25175 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#987: FILE: drivers/video/geode/lxfb_ops.c:39:
+  { 0x00001087, 27000 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#988: FILE: drivers/video/geode/lxfb_ops.c:40:
+  { 0x0000216C, 28322 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#989: FILE: drivers/video/geode/lxfb_ops.c:41:
+  { 0x0000218D, 28560 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#990: FILE: drivers/video/geode/lxfb_ops.c:42:
+  { 0x000010C9, 31200 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#991: FILE: drivers/video/geode/lxfb_ops.c:43:
+  { 0x00003147, 31500 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#992: FILE: drivers/video/geode/lxfb_ops.c:44:
+  { 0x000010A7, 33032 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#993: FILE: drivers/video/geode/lxfb_ops.c:45:
+  { 0x00002159, 35112 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#994: FILE: drivers/video/geode/lxfb_ops.c:46:
+  { 0x00004249, 35500 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#995: FILE: drivers/video/geode/lxfb_ops.c:47:
+  { 0x00000057, 36000 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#996: FILE: drivers/video/geode/lxfb_ops.c:48:
+  { 0x0000219A, 37889 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#997: FILE: drivers/video/geode/lxfb_ops.c:49:
+  { 0x00002158, 39168 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#998: FILE: drivers/video/geode/lxfb_ops.c:50:
+  { 0x00000045, 40000 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#999: FILE: drivers/video/geode/lxfb_ops.c:51:
+  { 0x00000089, 43163 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1000: FILE: drivers/video/geode/lxfb_ops.c:52:
+  { 0x000010E7, 44900 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1001: FILE: drivers/video/geode/lxfb_ops.c:53:
+  { 0x00002136, 45720 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1002: FILE: drivers/video/geode/lxfb_ops.c:54:
+  { 0x00003207, 49500 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1003: FILE: drivers/video/geode/lxfb_ops.c:55:
+  { 0x00002187, 50000 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1004: FILE: drivers/video/geode/lxfb_ops.c:56:
+  { 0x00004286, 56250 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1005: FILE: drivers/video/geode/lxfb_ops.c:57:
+  { 0x000010E5, 60065 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1006: FILE: drivers/video/geode/lxfb_ops.c:58:
+  { 0x00004214, 65000 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1007: FILE: drivers/video/geode/lxfb_ops.c:59:
+  { 0x00001105, 68179 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1008: FILE: drivers/video/geode/lxfb_ops.c:60:
+  { 0x000031E4, 74250 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1009: FILE: drivers/video/geode/lxfb_ops.c:61:
+  { 0x00003183, 75000 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1010: FILE: drivers/video/geode/lxfb_ops.c:62:
+  { 0x00004284, 78750 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1011: FILE: drivers/video/geode/lxfb_ops.c:63:
+  { 0x00001104, 81600 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1012: FILE: drivers/video/geode/lxfb_ops.c:64:
+  { 0x00006363, 94500 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1013: FILE: drivers/video/geode/lxfb_ops.c:65:
+  { 0x00005303, 97520 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1014: FILE: drivers/video/geode/lxfb_ops.c:66:
+  { 0x00002183, 100187 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1015: FILE: drivers/video/geode/lxfb_ops.c:67:
+  { 0x00002122, 101420 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1016: FILE: drivers/video/geode/lxfb_ops.c:68:
+  { 0x00001081, 108000 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1017: FILE: drivers/video/geode/lxfb_ops.c:69:
+  { 0x00006201, 113310 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1018: FILE: drivers/video/geode/lxfb_ops.c:70:
+  { 0x00000041, 119650 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1019: FILE: drivers/video/geode/lxfb_ops.c:71:
+  { 0x000041A1, 129600 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1020: FILE: drivers/video/geode/lxfb_ops.c:72:
+  { 0x00002182, 133500 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1021: FILE: drivers/video/geode/lxfb_ops.c:73:
+  { 0x000041B1, 135000 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1022: FILE: drivers/video/geode/lxfb_ops.c:74:
+  { 0x00000051, 144000 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1023: FILE: drivers/video/geode/lxfb_ops.c:75:
+  { 0x000041E1, 148500 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1024: FILE: drivers/video/geode/lxfb_ops.c:76:
+  { 0x000062D1, 157500 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1025: FILE: drivers/video/geode/lxfb_ops.c:77:
+  { 0x000031A1, 162000 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1026: FILE: drivers/video/geode/lxfb_ops.c:78:
+  { 0x00000061, 169203 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1027: FILE: drivers/video/geode/lxfb_ops.c:79:
+  { 0x00004231, 172800 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1028: FILE: drivers/video/geode/lxfb_ops.c:80:
+  { 0x00002151, 175500 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1029: FILE: drivers/video/geode/lxfb_ops.c:81:
+  { 0x000052E1, 189000 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1030: FILE: drivers/video/geode/lxfb_ops.c:82:
+  { 0x00000071, 192000 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1031: FILE: drivers/video/geode/lxfb_ops.c:83:
+  { 0x00003201, 198000 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1032: FILE: drivers/video/geode/lxfb_ops.c:84:
+  { 0x00004291, 202500 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1033: FILE: drivers/video/geode/lxfb_ops.c:85:
+  { 0x00001101, 204750 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1034: FILE: drivers/video/geode/lxfb_ops.c:86:
+  { 0x00007481, 218250 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1035: FILE: drivers/video/geode/lxfb_ops.c:87:
+  { 0x00004170, 229500 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1036: FILE: drivers/video/geode/lxfb_ops.c:88:
+  { 0x00006210, 234000 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1037: FILE: drivers/video/geode/lxfb_ops.c:89:
+  { 0x00003140, 251182 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1038: FILE: drivers/video/geode/lxfb_ops.c:90:
+  { 0x00006250, 261000 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1039: FILE: drivers/video/geode/lxfb_ops.c:91:
+  { 0x000041C0, 278400 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1040: FILE: drivers/video/geode/lxfb_ops.c:92:
+  { 0x00005220, 280640 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1041: FILE: drivers/video/geode/lxfb_ops.c:93:
+  { 0x00000050, 288000 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1042: FILE: drivers/video/geode/lxfb_ops.c:94:
+  { 0x000041E0, 297000 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1043: FILE: drivers/video/geode/lxfb_ops.c:95:
+  { 0x00002130, 320207 }$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1046: FILE: drivers/video/geode/lxfb_ops.c:98:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dotpll_hi == pllval'
#1054: FILE: drivers/video/geode/lxfb_ops.c:106:
+	if ((dotpll_lo & GLCP_DOTPLL_LOCK) && (dotpll_hi == pllval))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1065: FILE: drivers/video/geode/lxfb_ops.c:117:
+	udelay(100);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:SPACING: No space is necessary after a cast
#1088: FILE: drivers/video/geode/lxfb_ops.c:140:
+	freq = (unsigned int) (0x3b9aca00 / info->var.pixclock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1115: FILE: drivers/video/geode/lxfb_ops.c:167:
+	val = readl (par->dc_regs + DC_GENERAL_CFG) &

ERROR:SPACING: space prohibited after that open parenthesis '('
#1123: FILE: drivers/video/geode/lxfb_ops.c:175:
+	writel( DC_IRQ_MASK | DC_VSYNC_IRQ_MASK |

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1134: FILE: drivers/video/geode/lxfb_ops.c:186:
+	/* We don't actually blank the panel, due to the long latency
+	   involved with bringing it back */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1134: FILE: drivers/video/geode/lxfb_ops.c:186:
+	   involved with bringing it back */

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1155: FILE: drivers/video/geode/lxfb_ops.c:207:
+	udelay(1000);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1403: FILE: drivers/video/geode/lxfb_ops.c:455:
+	writel( (info->var.xres - 1) << 16 | (info->var.yres - 1),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1404: FILE: drivers/video/geode/lxfb_ops.c:456:
+	writel( (info->var.xres - 1) << 16 | (info->var.yres - 1),
+		par->dc_regs + DC_FB_ACTIVE);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1418: FILE: drivers/video/geode/lxfb_ops.c:470:
+void lx_set_palette_reg(struct fb_info *info, unsigned regno,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1419: FILE: drivers/video/geode/lxfb_ops.c:471:
+			unsigned red, unsigned green, unsigned blue)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1419: FILE: drivers/video/geode/lxfb_ops.c:471:
+			unsigned red, unsigned green, unsigned blue)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1419: FILE: drivers/video/geode/lxfb_ops.c:471:
+			unsigned red, unsigned green, unsigned blue)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000408839.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 98 warnings, 69 checks, 1385 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000408839.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
