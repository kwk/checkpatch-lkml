CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#132: FILE: include/linux/fs.h:986:
+extern void send_sigio(struct fown_struct *fown, int fd, int band);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#135: FILE: include/linux/fs.h:989:
+extern int do_sync_mapping_range(struct address_space *mapping, loff_t offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#136: FILE: include/linux/fs.h:990:
+extern int do_sync_mapping_range(struct address_space *mapping, loff_t offset,
+			loff_t endbyte, unsigned int flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#195: FILE: include/linux/fs.h:1586:
+extern int rw_verify_area(int, struct file *, loff_t *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#195: FILE: include/linux/fs.h:1586:
+extern int rw_verify_area(int, struct file *, loff_t *, size_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#195: FILE: include/linux/fs.h:1586:
+extern int rw_verify_area(int, struct file *, loff_t *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#195: FILE: include/linux/fs.h:1586:
+extern int rw_verify_area(int, struct file *, loff_t *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#195: FILE: include/linux/fs.h:1586:
+extern int rw_verify_area(int, struct file *, loff_t *, size_t);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#236: FILE: init/Kconfig:735:
+config FILE_LOCKING
+	bool "Enable POSIX file locking API" if EMBEDDED
+	default y
+	help
+	  This option enables standard file locking support, required
+          for filesystems like NFS and for the flock() system
+          call. Disabling this option saves about 11k.
+

Kconfig symbols should have a help text which fully describes
it.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000246857.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 4 checks, 197 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000246857.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
