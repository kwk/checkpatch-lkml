WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#80: FILE: fs/proc/base.c:1501:
+		ret = proc_net_revalidate(task, dentry, nd);
 		                                        ^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#103: FILE: fs/proc/internal.h:68:
+extern int proc_net_revalidate(struct task_struct *task, struct dentry *dentry,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#104: FILE: fs/proc/internal.h:69:
+				struct nameidata *nd);
 				                  ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#104: FILE: fs/proc/internal.h:69:
+extern int proc_net_revalidate(struct task_struct *task, struct dentry *dentry,
+				struct nameidata *nd);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#107: FILE: fs/proc/internal.h:72:
+					struct nameidata *nd)
 					                  ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#107: FILE: fs/proc/internal.h:72:
+static inline int proc_net_revalidate(struct task_struct *t, struct dentry *d,
+					struct nameidata *nd)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#125: FILE: fs/proc/proc_net.c:178:
+			struct nameidata *nd)
 			                  ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#133: FILE: fs/proc/proc_net.c:186:
+	if (!nd || (inode->i_op != &proc_net_inode_operations))
 	     ^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'inode->i_op != &proc_net_inode_operations'
#133: FILE: fs/proc/proc_net.c:186:
+	if (!nd || (inode->i_op != &proc_net_inode_operations))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LINE_SPACING: Missing a blank line after declarations
#143: FILE: fs/proc/proc_net.c:196:
+		struct nsproxy *ns;
+		rcu_read_lock();

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ns == NULL'
#145: FILE: fs/proc/proc_net.c:198:
+		if ((ns == NULL) ||
+		     (tmnt->mnt_sb->s_magic != PROC_NET_SUPER_MAGIC) ||
+		     (tmnt->mnt_sb->s_fs_info != ns->net_ns))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmnt->mnt_sb->s_magic != PROC_NET_SUPER_MAGIC'
#145: FILE: fs/proc/proc_net.c:198:
+		if ((ns == NULL) ||
+		     (tmnt->mnt_sb->s_magic != PROC_NET_SUPER_MAGIC) ||
+		     (tmnt->mnt_sb->s_fs_info != ns->net_ns))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmnt->mnt_sb->s_fs_info != ns->net_ns'
#145: FILE: fs/proc/proc_net.c:198:
+		if ((ns == NULL) ||
+		     (tmnt->mnt_sb->s_magic != PROC_NET_SUPER_MAGIC) ||
+		     (tmnt->mnt_sb->s_fs_info != ns->net_ns))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ns"
#145: FILE: fs/proc/proc_net.c:198:
+		if ((ns == NULL) ||

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#146: FILE: fs/proc/proc_net.c:199:
+		if ((ns == NULL) ||
+		     (tmnt->mnt_sb->s_magic != PROC_NET_SUPER_MAGIC) ||

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000207583.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 9 checks, 81 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000207583.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
