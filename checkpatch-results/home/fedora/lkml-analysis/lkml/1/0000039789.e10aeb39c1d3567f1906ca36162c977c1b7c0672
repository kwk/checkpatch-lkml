WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
   git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip.git core-rcu-for-linus

ERROR:TRAILING_WHITESPACE: trailing whitespace
#374: FILE: Documentation/RCU/trace.txt:161:
+1/1 .>. 0:127 ^0    $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#375: FILE: Documentation/RCU/trace.txt:162:
+3/3 .>. 0:35 ^0    0/0 .>. 36:71 ^1    0/0 .>. 72:107 ^2    0/0 .>. 108:127 ^3    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#376: FILE: Documentation/RCU/trace.txt:163:
+3/3f .>. 0:5 ^0    2/3 .>. 6:11 ^1    0/0 .>. 12:17 ^2    0/0 .>. 18:23 ^3    0/0 .>. 24:29 ^4    0/0 .>. 30:35 ^5    0/0 .>. 36:41 ^0    0/0 .>. 42:47 ^1    0/0 .>. 48:53 ^2    0/0 .>. 54:59 ^3    0/0 .>. 60:65 ^4    0/0 .>. 66:71 ^5    0/0 .>. 72:77 ^0    0/0 .>. 78:83 ^1    0/0 .>. 84:89 ^2    0/0 .>. 90:95 ^3    0/0 .>. 96:101 ^4    0/0 .>. 102:107 ^5    0/0 .>. 108:113 ^0    0/0 .>. 114:119 ^1    0/0 .>. 120:125 ^2    0/0 .>. 126:127 ^3    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#383: FILE: Documentation/RCU/trace.txt:166:
+0/1 .>. 0:127 ^0    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#384: FILE: Documentation/RCU/trace.txt:167:
+0/3 .>. 0:35 ^0    0/0 .>. 36:71 ^1    0/0 .>. 72:107 ^2    0/0 .>. 108:127 ^3    $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#474: FILE: include/linux/hardirq.h:143:
+extern void rcu_enter_nohz(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#475: FILE: include/linux/hardirq.h:144:
+extern void rcu_exit_nohz(void);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#536: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#541: FILE: include/linux/rcutiny.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#555: FILE: include/linux/rcutiny.h:15:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#556: FILE: include/linux/rcutiny.h:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#580: FILE: include/linux/rcutiny.h:40:
+extern void rcu_check_callbacks(int cpu, int user);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#603: FILE: include/linux/rcutiny.h:63:
+extern int rcu_expedited_torture_stats(char *page);

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#609: FILE: include/linux/rcutiny.h:69:
+	synchronize_sched();

Usage of a deprecated RCU API is detected.  It is recommended to replace
old flavourful RCU APIs by their new vanilla-RCU counterparts.

The full list of available RCU APIs can be viewed from the kernel docs.

See: https://www.kernel.org/doc/html/latest/RCU/whatisRCU.html#full-list-of-rcu-apis

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_rcu_bh_expedited', prefer 'synchronize_rcu_expedited' instead
#612: FILE: include/linux/rcutiny.h:72:
+static inline void synchronize_rcu_bh_expedited(void)

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#614: FILE: include/linux/rcutiny.h:74:
+	synchronize_sched();

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#621: FILE: include/linux/rcutiny.h:81:
+extern void rcu_enter_nohz(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#622: FILE: include/linux/rcutiny.h:82:
+extern void rcu_exit_nohz(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#656: FILE: include/linux/rcutree.h:38:
+extern void rcu_scheduler_starting(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#663: FILE: include/linux/rcutree.h:45:
+extern void synchronize_rcu(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#878: FILE: kernel/rcutiny.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#892: FILE: kernel/rcutiny.c:15:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#893: FILE: kernel/rcutiny.c:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rcp->rcucblist"
#970: FILE: kernel/rcutiny.c:93:
+	if (rcp->rcucblist != NULL &&

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#1069: FILE: kernel/rcutiny.c:192:
+void synchronize_sched(void)

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_rcu_bh', prefer 'synchronize_rcu' instead
#1075: FILE: kernel/rcutiny.c:198:
+void synchronize_rcu_bh(void)

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#1077: FILE: kernel/rcutiny.c:200:
+	synchronize_sched();

WARNING:DEPRECATED_API: Deprecated use of 'call_rcu_bh', prefer 'call_rcu' instead
#1114: FILE: kernel/rcutiny.c:237:
+void call_rcu_bh(struct rcu_head *head, void (*func)(struct rcu_head *rcu))

WARNING:DEPRECATED_API: Deprecated use of 'rcu_barrier_bh', prefer 'rcu_barrier' instead
#1132: FILE: kernel/rcutiny.c:255:
+void rcu_barrier_bh(void)

WARNING:DEPRECATED_API: Deprecated use of 'call_rcu_bh', prefer 'call_rcu' instead
#1138: FILE: kernel/rcutiny.c:261:
+	call_rcu_bh(&rcu.head, wakeme_after_rcu);

WARNING:DEPRECATED_API: Deprecated use of 'rcu_barrier_sched', prefer 'rcu_barrier' instead
#1144: FILE: kernel/rcutiny.c:267:
+void rcu_barrier_sched(void)

WARNING:DEPRECATED_API: Deprecated use of 'call_rcu_sched', prefer 'call_rcu' instead
#1150: FILE: kernel/rcutiny.c:273:
+	call_rcu_sched(&rcu.head, wakeme_after_rcu);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1277: FILE: kernel/rcutorture.c:1134:
 	static struct rcu_torture_ops *torture_ops[] =
+		{ &rcu_ops, &rcu_sync_ops, &rcu_expedited_ops,

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#1289: FILE: kernel/rcutorture.c:1148:
+		printk(KERN_ALERT "rcu-torture: invalid torture type: \"%s\"\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#1291: FILE: kernel/rcutorture.c:1150:
+		printk(KERN_ALERT "rcu-torture types:");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#1293: FILE: kernel/rcutorture.c:1152:
+			printk(KERN_ALERT " %s", torture_ops[i]->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#1294: FILE: kernel/rcutorture.c:1153:
+		printk(KERN_ALERT "\n");

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1459: FILE: kernel/rcutree.c:587:
+	if (rdp->completed != rnp->completed) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#1840: FILE: kernel/rcutree.c:1213:
+	if(!rcu_gp_in_progress(rsp)) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#1906: FILE: kernel/rcutree.c:1436:
+void synchronize_sched(void)

WARNING:DEPRECATED_API: Deprecated use of 'call_rcu_sched', prefer 'call_rcu' instead
#1915: FILE: kernel/rcutree.c:1445:
+	call_rcu_sched(&rcu.head, wakeme_after_rcu);

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_rcu_bh', prefer 'synchronize_rcu' instead
#1930: FILE: kernel/rcutree.c:1460:
+void synchronize_rcu_bh(void)

WARNING:DEPRECATED_API: Deprecated use of 'call_rcu_bh', prefer 'call_rcu' instead
#1939: FILE: kernel/rcutree.c:1469:
+	call_rcu_bh(&rcu.head, wakeme_after_rcu);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2077: FILE: kernel/rcutree.c:1886:
+	printk(KERN_INFO "Experimental four-level hierarchy is enabled.\n");

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#2131: FILE: kernel/rcutree.h:64:
+#elif NR_CPUS <= RCU_FANOUT_FOURTH

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'rsp' - possible side-effects?
#2188: FILE: kernel/rcutree.h:140:
+#define rcu_for_each_nonleaf_node_breadth_first(rsp, rnp) \
+	for ((rnp) = &(rsp)->node[0]; \
+	     (rnp) < (rsp)->level[NUM_RCU_LVLS - 1]; (rnp)++)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'rnp' - possible side-effects?
#2188: FILE: kernel/rcutree.h:140:
+#define rcu_for_each_nonleaf_node_breadth_first(rsp, rnp) \
+	for ((rnp) = &(rsp)->node[0]; \
+	     (rnp) < (rsp)->level[NUM_RCU_LVLS - 1]; (rnp)++)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rnp_p"
#2343: FILE: kernel/rcutree_plugin.h:188:
+	if (rnp_p == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rnp->parent"
#2557: FILE: kernel/rcutree_plugin.h:523:
+		if (rnp->parent == NULL) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#2617: FILE: kernel/rcutree_plugin.h:582:
+		if (trycount++ < 10)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2619: FILE: kernel/rcutree_plugin.h:584:
+		else {

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched_expedited', prefer 'synchronize_rcu_expedited' instead
#2630: FILE: kernel/rcutree_plugin.h:595:
+	synchronize_sched_expedited();

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#2697: FILE: kernel/rcutree_plugin.h:827:
+ * Because preemptable RCU does not exist, there is never any need to
            ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:RETURN_VOID: void function return statements are not generally useful
#2704: FILE: kernel/rcutree_plugin.h:834:
+	return;
+}

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000039789.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 11 errors, 28 warnings, 16 checks, 2498 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000039789.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
