WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#46: FILE: security/tomoyo/domain.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#47: FILE: security/tomoyo/domain.c:2:
+ * security/tomoyo/domain.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#68: FILE: security/tomoyo/domain.c:23:
+extern int sbin_init_started;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LINE_SPACING: Missing a blank line after declarations
#130: FILE: security/tomoyo/domain.c:85:
+	const char *cp0 = domain->domainname->name, *cp1;
+	if ((cp1 = strrchr(cp0, ' ')) != NULL) return cp1 + 1;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#130: FILE: security/tomoyo/domain.c:85:
+	if ((cp1 = strrchr(cp0, ' ')) != NULL) return cp1 + 1;

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#130: FILE: security/tomoyo/domain.c:85:
+	if ((cp1 = strrchr(cp0, ' ')) != NULL) return cp1 + 1;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: security/tomoyo/domain.c:93:
+^I^I                 "%s",$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#139: FILE: security/tomoyo/domain.c:94:
+		                 ((struct tomoyo_security *) current->security)->domain_info->domainname->name);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: security/tomoyo/domain.c:94:
+^I^I                 ((struct tomoyo_security *) current->security)->domain_info->domainname->name);$

CHECK:SPACING: No space is necessary after a cast
#139: FILE: security/tomoyo/domain.c:94:
+		                 ((struct tomoyo_security *) current->security)->domain_info->domainname->name);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#145: FILE: security/tomoyo/domain.c:100:
+int tomoyo_add_domain_acl(struct acl_info *ptr, struct domain_info *domain, struct acl_info *new_ptr)

CHECK:SPACING: No space is necessary after a cast
#148: FILE: security/tomoyo/domain.c:103:
+	if (!ptr) domain->first_acl_ptr = (struct acl_info *) new_ptr;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#148: FILE: security/tomoyo/domain.c:103:
+	if (!ptr) domain->first_acl_ptr = (struct acl_info *) new_ptr;

CHECK:SPACING: No space is necessary after a cast
#149: FILE: security/tomoyo/domain.c:104:
+	else ptr->next = (struct acl_info *) new_ptr;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#149: FILE: security/tomoyo/domain.c:104:
+	else ptr->next = (struct acl_info *) new_ptr;

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#161: FILE: security/tomoyo/domain.c:116:
+int tomoyo_too_many_domain_acl(struct domain_info * const domain) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#164: FILE: security/tomoyo/domain.c:119:
+	struct acl_info *ptr;
+	for (ptr = domain->first_acl_ptr; ptr; ptr = ptr->next) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#165: FILE: security/tomoyo/domain.c:120:
+		if (!ptr->is_deleted) count++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#168: FILE: security/tomoyo/domain.c:123:
+	if (count < tomoyo_check_flags(TOMOYO_MAX_ACCEPT_ENTRY)) return 0;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#170: FILE: security/tomoyo/domain.c:125:
+		printk("TOMOYO-WARNING: Domain '%s' has so many ACLs to hold. "

WARNING:SPLIT_STRING: quoted string split across lines
#171: FILE: security/tomoyo/domain.c:126:
+		printk("TOMOYO-WARNING: Domain '%s' has so many ACLs to hold. "
+		       "Stopped auto-append mode.\n", domain->domainname->name);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#177: FILE: security/tomoyo/domain.c:132:
+
+

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#180: FILE: security/tomoyo/domain.c:135:
+static struct domain_initializer_entry *domain_initializer_list = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: security/tomoyo/domain.c:138:
+                                               const char *program,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: security/tomoyo/domain.c:138:
+                                               const char *program,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#184: FILE: security/tomoyo/domain.c:139:
+                                               const int is_not,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: security/tomoyo/domain.c:139:
+                                               const int is_not,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: security/tomoyo/domain.c:140:
+                                               const int is_delete,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: security/tomoyo/domain.c:140:
+                                               const int is_delete,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: security/tomoyo/domain.c:141:
+                                               const int is_oldstyle)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: security/tomoyo/domain.c:141:
+                                               const int is_oldstyle)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#193: FILE: security/tomoyo/domain.c:148:
+	int is_last_name = 0;
+	if (!tomoyo_is_correct_path(program, 1, -1, -1, __FUNCTION__))

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#193: FILE: security/tomoyo/domain.c:148:
+	if (!tomoyo_is_correct_path(program, 1, -1, -1, __FUNCTION__))

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#197: FILE: security/tomoyo/domain.c:152:
+		    tomoyo_is_correct_path(domainname, 1, -1, -1, __FUNCTION__)) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#199: FILE: security/tomoyo/domain.c:154:
+		} else if (!tomoyo_is_correct_domain(domainname, __FUNCTION__)) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#202: FILE: security/tomoyo/domain.c:157:
+		if ((saved_domainname = tomoyo_save_name(domainname)) == NULL) return -ENOMEM;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#202: FILE: security/tomoyo/domain.c:157:
+		if ((saved_domainname = tomoyo_save_name(domainname)) == NULL) return -ENOMEM;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#204: FILE: security/tomoyo/domain.c:159:
+	if ((saved_program = tomoyo_save_name(program)) == NULL) return -ENOMEM;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#204: FILE: security/tomoyo/domain.c:159:
+	if ((saved_program = tomoyo_save_name(program)) == NULL) return -ENOMEM;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#220: FILE: security/tomoyo/domain.c:175:
+	if ((new_entry = tomoyo_alloc_element(sizeof(*new_entry))) == NULL) goto out;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#220: FILE: security/tomoyo/domain.c:175:
+	if ((new_entry = tomoyo_alloc_element(sizeof(*new_entry))) == NULL) goto out;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#227: FILE: security/tomoyo/domain.c:182:
+	if ((ptr = domain_initializer_list) != NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#243: FILE: security/tomoyo/domain.c:198:
+	struct domain_initializer_entry *ptr = head->read_var2;
+	if (!ptr) ptr = domain_initializer_list;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#243: FILE: security/tomoyo/domain.c:198:
+	if (!ptr) ptr = domain_initializer_list;

ERROR:CODE_INDENT: code indent should use tabs where possible
#249: FILE: security/tomoyo/domain.c:204:
+^I^I^I^I                     "%s%s%s from %s\n",$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#250: FILE: security/tomoyo/domain.c:205:
+^I^I^I^I                     ptr->is_not ? "no_" : "", $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#250: FILE: security/tomoyo/domain.c:205:
+^I^I^I^I                     ptr->is_not ? "no_" : "", $

ERROR:CODE_INDENT: code indent should use tabs where possible
#251: FILE: security/tomoyo/domain.c:206:
+^I^I^I^I                     ptr->is_oldstyle ?$

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#252: FILE: security/tomoyo/domain.c:207:
+				                     	TOMOYO_KEYWORD_INITIALIZER : TOMOYO_KEYWORD_INITIALIZE_DOMAIN,

ERROR:CODE_INDENT: code indent should use tabs where possible
#252: FILE: security/tomoyo/domain.c:207:
+^I^I^I^I                     ^ITOMOYO_KEYWORD_INITIALIZER : TOMOYO_KEYWORD_INITIALIZE_DOMAIN,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#252: FILE: security/tomoyo/domain.c:207:
+^I^I^I^I                     ^ITOMOYO_KEYWORD_INITIALIZER : TOMOYO_KEYWORD_INITIALIZE_DOMAIN,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: security/tomoyo/domain.c:208:
+^I^I^I^I                     ptr->program->name, ptr->domainname->name))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#257: FILE: security/tomoyo/domain.c:212:
+^I^I^I^I                     "%s%s%s\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#258: FILE: security/tomoyo/domain.c:213:
+^I^I^I^I                     ptr->is_not ? "no_" : "",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: security/tomoyo/domain.c:214:
+^I^I^I^I                     ptr->is_oldstyle ?$

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#260: FILE: security/tomoyo/domain.c:215:
+				                     	TOMOYO_KEYWORD_INITIALIZER : TOMOYO_KEYWORD_INITIALIZE_DOMAIN,

ERROR:CODE_INDENT: code indent should use tabs where possible
#260: FILE: security/tomoyo/domain.c:215:
+^I^I^I^I                     ^ITOMOYO_KEYWORD_INITIALIZER : TOMOYO_KEYWORD_INITIALIZE_DOMAIN,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#260: FILE: security/tomoyo/domain.c:215:
+^I^I^I^I                     ^ITOMOYO_KEYWORD_INITIALIZER : TOMOYO_KEYWORD_INITIALIZE_DOMAIN,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#261: FILE: security/tomoyo/domain.c:216:
+^I^I^I^I                     ptr->program->name))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#271: FILE: security/tomoyo/domain.c:226:
+                                         const int is_not,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: security/tomoyo/domain.c:226:
+                                         const int is_not,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#272: FILE: security/tomoyo/domain.c:227:
+                                         const int is_delete,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: security/tomoyo/domain.c:227:
+                                         const int is_delete,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: security/tomoyo/domain.c:228:
+                                         const int is_oldstyle)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: security/tomoyo/domain.c:228:
+                                         const int is_oldstyle)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#276: FILE: security/tomoyo/domain.c:231:
+	char *cp = strstr(data, " from ");
+	if (cp) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#279: FILE: security/tomoyo/domain.c:234:
+^I^I                                           data,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#280: FILE: security/tomoyo/domain.c:235:
+^I^I                                           is_not,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#281: FILE: security/tomoyo/domain.c:236:
+^I^I                                           is_delete,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#282: FILE: security/tomoyo/domain.c:237:
+^I^I                                           is_oldstyle);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#285: FILE: security/tomoyo/domain.c:240:
+^I^I                                           data,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#286: FILE: security/tomoyo/domain.c:241:
+^I^I                                           is_not,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#287: FILE: security/tomoyo/domain.c:242:
+^I^I                                           is_delete,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#288: FILE: security/tomoyo/domain.c:243:
+^I^I                                           is_oldstyle);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#293: FILE: security/tomoyo/domain.c:248:
+                                        const struct path_info *program,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: security/tomoyo/domain.c:248:
+                                        const struct path_info *program,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#294: FILE: security/tomoyo/domain.c:249:
+                                        const struct path_info *last_name)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: security/tomoyo/domain.c:249:
+                                        const struct path_info *last_name)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#298: FILE: security/tomoyo/domain.c:253:
+	int flag = 0;
+	for (ptr = domain_initializer_list; ptr; ptr = ptr->next) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#299: FILE: security/tomoyo/domain.c:254:
+		if (ptr->is_deleted ) continue;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#299: FILE: security/tomoyo/domain.c:254:
+		if (ptr->is_deleted ) continue;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#302: FILE: security/tomoyo/domain.c:257:
+				if (ptr->domainname != domainname) continue;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#304: FILE: security/tomoyo/domain.c:259:
+				if (tomoyo_pathcmp(ptr->domainname, last_name)) continue;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#307: FILE: security/tomoyo/domain.c:262:
+		if (tomoyo_pathcmp(ptr->program, program)) continue;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#308: FILE: security/tomoyo/domain.c:263:
+		if (ptr->is_not) return 0;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#316: FILE: security/tomoyo/domain.c:271:
+static struct domain_keeper_entry *domain_keeper_list = NULL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: security/tomoyo/domain.c:274:
+                                          const char *program,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: security/tomoyo/domain.c:274:
+                                          const char *program,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: security/tomoyo/domain.c:275:
+                                          const int is_not,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: security/tomoyo/domain.c:275:
+                                          const int is_not,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#321: FILE: security/tomoyo/domain.c:276:
+                                          const int is_delete)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: security/tomoyo/domain.c:276:
+                                          const int is_delete)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#328: FILE: security/tomoyo/domain.c:283:
+	int is_last_name = 0;
+	if (!tomoyo_is_domain_def(domainname) &&

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#329: FILE: security/tomoyo/domain.c:284:
+	    tomoyo_is_correct_path(domainname, 1, -1, -1, __FUNCTION__)) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#331: FILE: security/tomoyo/domain.c:286:
+	} else if (!tomoyo_is_correct_domain(domainname, __FUNCTION__)) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#335: FILE: security/tomoyo/domain.c:290:
+		if (!tomoyo_is_correct_path(program, 1, -1, -1, __FUNCTION__)) return -EINVAL;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#335: FILE: security/tomoyo/domain.c:290:
+		if (!tomoyo_is_correct_path(program, 1, -1, -1, __FUNCTION__)) return -EINVAL;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#336: FILE: security/tomoyo/domain.c:291:
+		if ((saved_program = tomoyo_save_name(program)) == NULL) return -ENOMEM;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#336: FILE: security/tomoyo/domain.c:291:
+		if ((saved_program = tomoyo_save_name(program)) == NULL) return -ENOMEM;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#338: FILE: security/tomoyo/domain.c:293:
+	if ((saved_domainname = tomoyo_save_name(domainname)) == NULL) return -ENOMEM;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#338: FILE: security/tomoyo/domain.c:293:
+	if ((saved_domainname = tomoyo_save_name(domainname)) == NULL) return -ENOMEM;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#352: FILE: security/tomoyo/domain.c:307:
+	if ((new_entry = tomoyo_alloc_element(sizeof(*new_entry))) == NULL) goto out;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#352: FILE: security/tomoyo/domain.c:307:
+	if ((new_entry = tomoyo_alloc_element(sizeof(*new_entry))) == NULL) goto out;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#358: FILE: security/tomoyo/domain.c:313:
+	if ((ptr = domain_keeper_list) != NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#374: FILE: security/tomoyo/domain.c:329:
+	char *cp = strstr(data, " from ");
+	if (cp) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#385: FILE: security/tomoyo/domain.c:340:
+	struct domain_keeper_entry *ptr = head->read_var2;
+	if (!ptr) ptr = domain_keeper_list;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#385: FILE: security/tomoyo/domain.c:340:
+	if (!ptr) ptr = domain_keeper_list;

ERROR:CODE_INDENT: code indent should use tabs where possible
#391: FILE: security/tomoyo/domain.c:346:
+^I^I^I^I                     "%s" TOMOYO_KEYWORD_KEEP_DOMAIN "%s from %s\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#392: FILE: security/tomoyo/domain.c:347:
+^I^I^I^I                     ptr->is_not ? "no_" : "",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: security/tomoyo/domain.c:348:
+^I^I^I^I                     ptr->program->name,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#394: FILE: security/tomoyo/domain.c:349:
+^I^I^I^I                     ptr->domainname->name))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#398: FILE: security/tomoyo/domain.c:353:
+^I^I^I^I                     "%s" TOMOYO_KEYWORD_KEEP_DOMAIN "%s\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#399: FILE: security/tomoyo/domain.c:354:
+^I^I^I^I                     ptr->is_not ? "no_" : "",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#400: FILE: security/tomoyo/domain.c:355:
+^I^I^I^I                     ptr->domainname->name))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#410: FILE: security/tomoyo/domain.c:365:
+                                   const struct path_info *program,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: security/tomoyo/domain.c:365:
+                                   const struct path_info *program,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#411: FILE: security/tomoyo/domain.c:366:
+                                   const struct path_info *last_name)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: security/tomoyo/domain.c:366:
+                                   const struct path_info *last_name)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#415: FILE: security/tomoyo/domain.c:370:
+	int flag = 0;
+	for (ptr = domain_keeper_list; ptr; ptr = ptr->next) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#416: FILE: security/tomoyo/domain.c:371:
+		if (ptr->is_deleted) continue;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#418: FILE: security/tomoyo/domain.c:373:
+			if (ptr->domainname != domainname) continue;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#420: FILE: security/tomoyo/domain.c:375:
+^I^I^Iif (tomoyo_pathcmp(ptr->domainname, last_name)) continue; $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#420: FILE: security/tomoyo/domain.c:375:
+			if (tomoyo_pathcmp(ptr->domainname, last_name)) continue; 

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#422: FILE: security/tomoyo/domain.c:377:
+		if (ptr->program && tomoyo_pathcmp(ptr->program, program)) continue;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#423: FILE: security/tomoyo/domain.c:378:
+		if (ptr->is_not) return 0;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#431: FILE: security/tomoyo/domain.c:386:
+static struct alias_entry *alias_list = NULL;

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#433: FILE: security/tomoyo/domain.c:388:
+static int tomoyo_add_alias_entry(const char *original_name, const char *aliased_name, const int is_delete)

WARNING:LINE_SPACING: Missing a blank line after declarations
#439: FILE: security/tomoyo/domain.c:394:
+	int error = -ENOMEM;
+	if (!tomoyo_is_correct_path(original_name, 1, -1, -1, __FUNCTION__) ||

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#439: FILE: security/tomoyo/domain.c:394:
+	if (!tomoyo_is_correct_path(original_name, 1, -1, -1, __FUNCTION__) ||

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#440: FILE: security/tomoyo/domain.c:395:
+	    !tomoyo_is_correct_path(aliased_name, 1, -1, -1, __FUNCTION__))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#442: FILE: security/tomoyo/domain.c:397:
+	if ((saved_original_name = tomoyo_save_name(original_name)) == NULL ||

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#458: FILE: security/tomoyo/domain.c:413:
+	if ((new_entry = tomoyo_alloc_element(sizeof(*new_entry))) == NULL) goto out;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#458: FILE: security/tomoyo/domain.c:413:
+	if ((new_entry = tomoyo_alloc_element(sizeof(*new_entry))) == NULL) goto out;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#462: FILE: security/tomoyo/domain.c:417:
+	if ((ptr = alias_list) != NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#478: FILE: security/tomoyo/domain.c:433:
+	struct alias_entry *ptr = head->read_var2;
+	if (!ptr) ptr = alias_list;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#478: FILE: security/tomoyo/domain.c:433:
+	if (!ptr) ptr = alias_list;

ERROR:CODE_INDENT: code indent should use tabs where possible
#483: FILE: security/tomoyo/domain.c:438:
+^I^I                     TOMOYO_KEYWORD_ALIAS "%s %s\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#484: FILE: security/tomoyo/domain.c:439:
+^I^I                     ptr->original_name->name,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#485: FILE: security/tomoyo/domain.c:440:
+^I^I                     ptr->aliased_name->name))$

WARNING:LINE_SPACING: Missing a blank line after declarations
#495: FILE: security/tomoyo/domain.c:450:
+	char *cp = strchr(data, ' ');
+	if (!cp) return -EINVAL;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#495: FILE: security/tomoyo/domain.c:450:
+	if (!cp) return -EINVAL;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#502: FILE: security/tomoyo/domain.c:457:
+static struct aggregator_entry *aggregator_list = NULL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#505: FILE: security/tomoyo/domain.c:460:
+                                       const char *aggregated_name,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#505: FILE: security/tomoyo/domain.c:460:
+                                       const char *aggregated_name,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#506: FILE: security/tomoyo/domain.c:461:
+                                       const int is_delete)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: security/tomoyo/domain.c:461:
+                                       const int is_delete)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#512: FILE: security/tomoyo/domain.c:467:
+	int error = -ENOMEM;
+	if (!tomoyo_is_correct_path(original_name, 1, 0, -1, __FUNCTION__) ||

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#512: FILE: security/tomoyo/domain.c:467:
+	if (!tomoyo_is_correct_path(original_name, 1, 0, -1, __FUNCTION__) ||

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#513: FILE: security/tomoyo/domain.c:468:
+	    !tomoyo_is_correct_path(aggregated_name, 1, -1, -1, __FUNCTION__))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#515: FILE: security/tomoyo/domain.c:470:
+	if ((saved_original_name = tomoyo_save_name(original_name)) == NULL ||

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#531: FILE: security/tomoyo/domain.c:486:
+	if ((new_entry = tomoyo_alloc_element(sizeof(*new_entry))) == NULL) goto out;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#531: FILE: security/tomoyo/domain.c:486:
+	if ((new_entry = tomoyo_alloc_element(sizeof(*new_entry))) == NULL) goto out;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#535: FILE: security/tomoyo/domain.c:490:
+	if ((ptr = aggregator_list) != NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#551: FILE: security/tomoyo/domain.c:506:
+	struct aggregator_entry *ptr = head->read_var2;
+	if (!ptr) ptr = aggregator_list;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#551: FILE: security/tomoyo/domain.c:506:
+	if (!ptr) ptr = aggregator_list;

ERROR:CODE_INDENT: code indent should use tabs where possible
#556: FILE: security/tomoyo/domain.c:511:
+^I^I                     TOMOYO_KEYWORD_AGGREGATOR "%s %s\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#557: FILE: security/tomoyo/domain.c:512:
+^I^I                     ptr->original_name->name,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#558: FILE: security/tomoyo/domain.c:513:
+^I^I                     ptr->aggregated_name->name))$

WARNING:LINE_SPACING: Missing a blank line after declarations
#568: FILE: security/tomoyo/domain.c:523:
+	char *cp = strchr(data, ' ');
+	if (!cp) return -EINVAL;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#568: FILE: security/tomoyo/domain.c:523:
+	if (!cp) return -EINVAL;

WARNING:LINE_SPACING: Missing a blank line after declarations
#579: FILE: security/tomoyo/domain.c:534:
+	struct path_info domainname;
+	domainname.name = domainname0;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#584: FILE: security/tomoyo/domain.c:539:
+		if (domain->is_deleted || tomoyo_pathcmp(domain->domainname, &domainname)) continue;

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#591: FILE: security/tomoyo/domain.c:546:
+			if (!domain2->is_deleted || tomoyo_pathcmp(domain2->domainname, &domainname))

WARNING:LINE_SPACING: Missing a blank line after declarations
#606: FILE: security/tomoyo/domain.c:561:
+	struct path_info domainname;
+	domainname.name = domainname0;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#610: FILE: security/tomoyo/domain.c:565:
+		if (tomoyo_pathcmp(&domainname, domain->domainname)) continue;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#617: FILE: security/tomoyo/domain.c:572:
+		if (domain->is_deleted == 1) candidate_domain = domain;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#619: FILE: security/tomoyo/domain.c:574:
+	if (candidate_domain) {
+		candidate_domain->is_deleted = 0;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#633: FILE: security/tomoyo/domain.c:588:
+	struct path_info domainname;
+	domainname.name = domainname0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#650: FILE: security/tomoyo/domain.c:605:
+	const struct path_info *saved_domainname;
+	down(&new_domain_assign_lock);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#651: FILE: security/tomoyo/domain.c:606:
+	if ((domain = tomoyo_find_domain(domainname)) != NULL) goto out;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#651: FILE: security/tomoyo/domain.c:606:
+	if ((domain = tomoyo_find_domain(domainname)) != NULL) goto out;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#652: FILE: security/tomoyo/domain.c:607:
+	if (!tomoyo_is_correct_domain(domainname, __FUNCTION__)) goto out;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#652: FILE: security/tomoyo/domain.c:607:
+	if (!tomoyo_is_correct_domain(domainname, __FUNCTION__)) goto out;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#653: FILE: security/tomoyo/domain.c:608:
+	if ((saved_domainname = tomoyo_save_name(domainname)) == NULL) goto out;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#653: FILE: security/tomoyo/domain.c:608:
+	if ((saved_domainname = tomoyo_save_name(domainname)) == NULL) goto out;

WARNING:LINE_SPACING: Missing a blank line after declarations
#659: FILE: security/tomoyo/domain.c:614:
+		int flag;
+		if (!domain->is_deleted || domain->domainname != saved_domainname) continue;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#659: FILE: security/tomoyo/domain.c:614:
+		if (!domain->is_deleted || domain->domainname != saved_domainname) continue;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#671: FILE: security/tomoyo/domain.c:626:
+		if (flag) continue;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#672: FILE: security/tomoyo/domain.c:627:
+		for (ptr = domain->first_acl_ptr; ptr; ptr = ptr->next) ptr->is_deleted = 1;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#680: FILE: security/tomoyo/domain.c:635:
+	if ((domain = tomoyo_alloc_element(sizeof(*domain))) != NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#682: FILE: security/tomoyo/domain.c:637:
+		struct domain_info *ptr = &KERNEL_DOMAIN;
+		domain->domainname = saved_domainname;

WARNING:SPACING: space prohibited before semicolon
#689: FILE: security/tomoyo/domain.c:644:
+ out: ;

CHECK:SPACING: No space is necessary after a cast
#699: FILE: security/tomoyo/domain.c:654:
+		((struct tomoyo_security *) current->security)->domain_info, *domain = NULL;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#702: FILE: security/tomoyo/domain.c:657:
+	struct file *filp = bprm->file;
 	             ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#715: FILE: security/tomoyo/domain.c:670:
+		static int first = 1;
+		if (first) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#724: FILE: security/tomoyo/domain.c:679:
+	if ((real_program_name = tomoyo_realpath(original_name)) == NULL) goto out;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#724: FILE: security/tomoyo/domain.c:679:
+	if ((real_program_name = tomoyo_realpath(original_name)) == NULL) goto out;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#726: FILE: security/tomoyo/domain.c:681:
+	if ((symlink_program_name = tomoyo_realpath_nofollow(original_name)) == NULL) goto out;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#726: FILE: security/tomoyo/domain.c:681:
+	if ((symlink_program_name = tomoyo_realpath_nofollow(original_name)) == NULL) goto out;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#732: FILE: security/tomoyo/domain.c:687:
+	if ((l.name = strrchr(old_domain_name, ' ')) != NULL) l.name++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#732: FILE: security/tomoyo/domain.c:687:
+	if ((l.name = strrchr(old_domain_name, ' ')) != NULL) l.name++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#733: FILE: security/tomoyo/domain.c:688:
+	else l.name = old_domain_name;

ERROR:CODE_INDENT: code indent should use tabs where possible
#747: FILE: security/tomoyo/domain.c:702:
+^I^I^I        ptr->aliased_name->name,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#748: FILE: security/tomoyo/domain.c:703:
+^I^I^I        TOMOYO_MAX_PATHNAME_LEN - 1);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#753: FILE: security/tomoyo/domain.c:708:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#764: FILE: security/tomoyo/domain.c:719:
+^I^I^I        ptr->aggregated_name->name,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#765: FILE: security/tomoyo/domain.c:720:
+^I^I^I        TOMOYO_MAX_PATHNAME_LEN - 1);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#770: FILE: security/tomoyo/domain.c:725:
+^I$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#772: FILE: security/tomoyo/domain.c:727:
+	if ((retval = tomoyo_check_exec_perm(&r, filp)) < 0) goto out;
 	                                         ^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#772: FILE: security/tomoyo/domain.c:727:
+	if ((retval = tomoyo_check_exec_perm(&r, filp)) < 0) goto out;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#772: FILE: security/tomoyo/domain.c:727:
+	if ((retval = tomoyo_check_exec_perm(&r, filp)) < 0) goto out;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#776: FILE: security/tomoyo/domain.c:731:
+	if ((new_domain_name = tomoyo_alloc(TOMOYO_MAX_PATHNAME_LEN + 16)) == NULL) goto out;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#776: FILE: security/tomoyo/domain.c:731:
+	if ((new_domain_name = tomoyo_alloc(TOMOYO_MAX_PATHNAME_LEN + 16)) == NULL) goto out;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#777: FILE: security/tomoyo/domain.c:732:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#781: FILE: security/tomoyo/domain.c:736:
+^I^I         TOMOYO_MAX_PATHNAME_LEN + 1,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#782: FILE: security/tomoyo/domain.c:737:
+^I^I         TOMOYO_ROOT_NAME " " "%s",$

WARNING:STRING_FRAGMENTS: Consecutive strings are generally better as a single string
#782: FILE: security/tomoyo/domain.c:737:
+		         TOMOYO_ROOT_NAME " " "%s",

ERROR:CODE_INDENT: code indent should use tabs where possible
#783: FILE: security/tomoyo/domain.c:738:
+^I^I         real_program_name);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#797: FILE: security/tomoyo/domain.c:752:
+^I^I         TOMOYO_MAX_PATHNAME_LEN + 1,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#798: FILE: security/tomoyo/domain.c:753:
+^I^I         "%s %s",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#799: FILE: security/tomoyo/domain.c:754:
+^I^I         old_domain_name,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#800: FILE: security/tomoyo/domain.c:755:
+^I^I         real_program_name);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#807: FILE: security/tomoyo/domain.c:762:
+				if (tomoyo_check_supervisor("#Need to create domain\n%s\n",
+				    new_domain_name) == 0)

WARNING:LONG_LINE: line length of 152 exceeds 100 columns
#809: FILE: security/tomoyo/domain.c:764:
+						                                  ((struct tomoyo_security *) current->security)->domain_info->profile);

ERROR:CODE_INDENT: code indent should use tabs where possible
#809: FILE: security/tomoyo/domain.c:764:
+^I^I^I^I^I^I                                  ((struct tomoyo_security *) current->security)->domain_info->profile);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#809: FILE: security/tomoyo/domain.c:764:
+					domain = tomoyo_find_or_assign_new_domain(new_domain_name,
+						                                  ((struct tomoyo_security *) current->security)->domain_info->profile);

CHECK:SPACING: No space is necessary after a cast
#809: FILE: security/tomoyo/domain.c:764:
+						                                  ((struct tomoyo_security *) current->security)->domain_info->profile);

WARNING:LONG_LINE: line length of 136 exceeds 100 columns
#812: FILE: security/tomoyo/domain.c:767:
+			                                          ((struct tomoyo_security *) current->security)->domain_info->profile);

ERROR:CODE_INDENT: code indent should use tabs where possible
#812: FILE: security/tomoyo/domain.c:767:
+^I^I^I                                          ((struct tomoyo_security *) current->security)->domain_info->profile);$

CHECK:SPACING: No space is necessary after a cast
#812: FILE: security/tomoyo/domain.c:767:
+			                                          ((struct tomoyo_security *) current->security)->domain_info->profile);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#816: FILE: security/tomoyo/domain.c:771:
+		printk("TOMOYO-ERROR: Domain '%s' not defined.\n", new_domain_name);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#817: FILE: security/tomoyo/domain.c:772:
+		if (is_enforce) retval = -EPERM;

WARNING:SPACING: space prohibited before semicolon
#821: FILE: security/tomoyo/domain.c:776:
+ out: ;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000418660.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 142 errors, 72 warnings, 9 checks, 782 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000418660.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
