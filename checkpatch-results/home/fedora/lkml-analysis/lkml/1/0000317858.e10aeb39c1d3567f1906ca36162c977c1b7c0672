WARNING:TYPO_SPELLING: 'brokeness' may be misspelled - perhaps 'brokenness'?
#32: 
This patch hopefully fixes all the brokeness in my last submission. It
                                   ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'unneccesary' may be misspelled - perhaps 'unnecessary'?
#34: 
and removed the broken macro definition. The #ifdef's made it unneccesary.
                                                              ^^^^^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
This patch allows us to display information about all of the logical volumes

CHECK:CAMELCASE: Avoid CamelCase: <Qdepth>
#106: FILE: drivers/block/cciss.c:269:
+		h->Qdepth, h->commands_outstanding,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <maxQsinceinit>
#107: FILE: drivers/block/cciss.c:270:
+		h->maxQsinceinit, h->max_outstanding, h->maxSG);

CHECK:CAMELCASE: Avoid CamelCase: <maxSG>
#107: FILE: drivers/block/cciss.c:270:
+		h->maxQsinceinit, h->max_outstanding, h->maxSG);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#118: FILE: drivers/block/cciss.c:280:
+	unsigned ctlr = h->ctlr;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#176: FILE: drivers/block/cciss.c:304:
+	unsigned ctlr = h->ctlr;

WARNING:SPLIT_STRING: quoted string split across lines
#194: FILE: drivers/block/cciss.c:322:
+	seq_printf(seq, "cciss/c%dd%d:"
+			"\t%4u.%02uGB\tRAID %s\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#195: FILE: drivers/block/cciss.c:323:
+			ctlr, (int) *pos, (int)vol_sz, (int)vol_sz_frac,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#216: FILE: drivers/block/cciss.c:344:
+	 * it during cciss_seq_start. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#242: FILE: drivers/block/cciss.c:351:
+static struct seq_operations cciss_seq_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:SIZEOF_PARENTHESIS: sizeof ENGAGE_SCSI should be sizeof(ENGAGE_SCSI)
#298: FILE: drivers/block/cciss.c:393:
+	if (strncmp(ENGAGE_SCSI, buffer, sizeof ENGAGE_SCSI - 1) == 0) {

CHECK:BRACES: Unbalanced braces around else statement
#311: FILE: drivers/block/cciss.c:403:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:CONST_STRUCT: struct file_operations should normally be const
#328: FILE: drivers/block/cciss.c:414:
+static struct file_operations cciss_proc_fops = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#337: FILE: drivers/block/cciss.c:423:
 static void __devinit cciss_procinit(int i)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!proc_cciss"
#342: FILE: drivers/block/cciss.c:427:
+	if (proc_cciss == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUSR | S_IRGRP' are not preferred. Consider using octal permissions '0640'.
#349: FILE: drivers/block/cciss.c:431:
+	pde = proc_create(hba[i]->devname, S_IWUSR | S_IRUSR | S_IRGRP |

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IROTH' are not preferred. Consider using octal permissions '0004'.
#350: FILE: drivers/block/cciss.c:432:
+					S_IROTH, proc_cciss,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#382: FILE: drivers/block/cciss_scsi.c:1413:
+	seq_printf(seq,
 		"Sequential access devices: %d\n\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#388: FILE: drivers/block/cciss_scsi.c:1418:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000317858.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 13 warnings, 8 checks, 340 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000317858.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
