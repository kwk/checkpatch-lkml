CHECK:BIT_MACRO: Prefer using the BIT macro
#193: FILE: arch/sparc64/kernel/time.c:66:
+#define TICKCMP_IRQ_BIT	(1UL << 63)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#262: FILE: arch/sparc64/kernel/time.c:147:
+	__asm__ __volatile__("ba,pt	%%xcc, 1f\n\t"
 	                      ^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#279: FILE: arch/sparc64/kernel/time.c:160:
+	return ((long)(new_tick - (orig_tick+adj))) > 0L;
 	                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#324: FILE: arch/sparc64/kernel/time.c:191:
+	__asm__ __volatile__(

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#417: FILE: arch/sparc64/kernel/time.c:259:
+	return ((long)(new_tick - (orig_tick+adj))) > 0L;
 	                                    ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#659: FILE: arch/sparc64/kernel/time.c:942:
 };
+static DEFINE_PER_CPU(struct clock_event_device, sparc64_events);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#678: FILE: arch/sparc64/kernel/time.c:957:
+	if (unlikely(!evt->event_handler)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#679: FILE: arch/sparc64/kernel/time.c:958:
+		printk(KERN_WARNING

CHECK:BRACES: Unbalanced braces around else statement
#681: FILE: arch/sparc64/kernel/time.c:960:
+	} else

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#691: FILE: arch/sparc64/kernel/time.c:968:
+void __devinit setup_sparc64_timer(void)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#762: FILE: arch/sparc64/kernel/time.c:1034:
+	printk("clocksource: mult[%x] shift[%d]\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#776: FILE: arch/sparc64/kernel/time.c:1048:
+	printk("clockevent: mult[%lx] shift[%d]\n",

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#796: FILE: include/asm-sparc64/timer.h:15:
+	int (*add_compare)(unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#801: FILE: include/asm-sparc64/timer.h:20:
+	unsigned long (*add_tick)(unsigned long);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000460190.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 7 checks, 709 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000460190.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
