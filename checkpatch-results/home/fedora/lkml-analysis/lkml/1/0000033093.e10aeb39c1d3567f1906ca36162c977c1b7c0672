WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
supposed to go away real soon now, I added config GENERIC_HARDIRQS_NO__DO_IRQ

WARNING:TYPO_SPELLING: 'isnt' may be misspelled - perhaps 'isn't'?
#43: 
handle_irq isnt getting initialized in the early boot and indeed, adding an
           ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'atleast' may be misspelled - perhaps 'at least'?
#49: 
right thing to do (or atleast, its what all the other arches do) (and I didnt
                      ^^^^^^^

WARNING:TYPO_SPELLING: 'didnt' may be misspelled - perhaps 'didn't'?
#49: 
right thing to do (or atleast, its what all the other arches do) (and I didnt
                                                                        ^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type != IRQF_TRIGGER_RISING'
#176: FILE: arch/m68knommu/platform/5272/intc.c:109:
+	if ((type != IRQF_TRIGGER_RISING) || (type != IRQF_TRIGGER_FALLING))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type != IRQF_TRIGGER_FALLING'
#176: FILE: arch/m68knommu/platform/5272/intc.c:109:
+	if ((type != IRQF_TRIGGER_RISING) || (type != IRQF_TRIGGER_FALLING))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#209: FILE: arch/m68knommu/platform/5272/intc.c:153:
+			set_irq_chip_and_handler(irq, &intc_irq_chip,
+					handle_edge_irq);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#213: FILE: arch/m68knommu/platform/5272/intc.c:157:
+			set_irq_chip_and_handler(irq, &intc_irq_chip,
+					handle_level_irq);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#266: FILE: arch/m68knommu/platform/coldfire/intc-2.c:45:
+		if (irq >= MCFGPIO_IRQ_VECBASE ||
+				irq < (MCFGPIO_IRQ_VECBASE + MCFGPIO_IRQ_MAX)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#267: FILE: arch/m68knommu/platform/coldfire/intc-2.c:46:
+				irq < (MCFGPIO_IRQ_VECBASE + MCFGPIO_IRQ_MAX)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#269: FILE: arch/m68knommu/platform/coldfire/intc-2.c:48:
+			u8 epier = __raw_readb(MCFEPORT_EPIER);
+			epier &= ~(1 << (irq - MCFGPIO_IRQ_VECBASE));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#282: FILE: arch/m68knommu/platform/coldfire/intc-2.c:79:
+		if (irq >= MCFGPIO_IRQ_VECBASE ||
+				irq < (MCFGPIO_IRQ_VECBASE + MCFGPIO_IRQ_MAX)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#283: FILE: arch/m68knommu/platform/coldfire/intc-2.c:80:
+				irq < (MCFGPIO_IRQ_VECBASE + MCFGPIO_IRQ_MAX)) {
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#285: FILE: arch/m68knommu/platform/coldfire/intc-2.c:82:
+			u8 epier = __raw_readb(MCFEPORT_EPIER);
+			epier |= 1 << (irq - MCFGPIO_IRQ_VECBASE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#295: FILE: arch/m68knommu/platform/coldfire/intc-2.c:92:
+	if (irq >= MCFGPIO_IRQ_VECBASE ||
+			irq < (MCFGPIO_IRQ_VECBASE + MCFGPIO_IRQ_MAX)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#297: FILE: arch/m68knommu/platform/coldfire/intc-2.c:94:
+		u8 epfr = __raw_readb(MCFEPORT_EPFR);
+		epfr |= 1 << (irq - MCFGPIO_IRQ_VECBASE);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#304: FILE: arch/m68knommu/platform/coldfire/intc-2.c:101:
+	unsigned shift;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#309: FILE: arch/m68knommu/platform/coldfire/intc-2.c:106:
+	if (irq < MCFGPIO_IRQ_VECBASE ||
+			irq >= (MCFGPIO_IRQ_VECBASE + MCFGPIO_IRQ_MAX))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#314: FILE: arch/m68knommu/platform/coldfire/intc-2.c:111:
+	if ((flow_type & IRQF_TRIGGER_HIGH) ||
+			((flow_type & IRQF_TRIGGER_LOW) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#373: FILE: arch/m68knommu/platform/coldfire/intc-simr.c:32:
+	if (irq >= MCFGPIO_IRQ_VECBASE ||
+			irq < (MCFGPIO_IRQ_VECBASE + MCFGPIO_IRQ_MAX)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#374: FILE: arch/m68knommu/platform/coldfire/intc-simr.c:33:
+			irq < (MCFGPIO_IRQ_VECBASE + MCFGPIO_IRQ_MAX)) {
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#376: FILE: arch/m68knommu/platform/coldfire/intc-simr.c:35:
+		u8 epier = __raw_readb(MCFEPORT_EPIER);
+		epier &= ~(1 << (irq - MCFGPIO_IRQ_VECBASE));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#389: FILE: arch/m68knommu/platform/coldfire/intc-simr.c:51:
+	if (irq >= MCFGPIO_IRQ_VECBASE ||
+			irq < (MCFGPIO_IRQ_VECBASE + MCFGPIO_IRQ_MAX)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#390: FILE: arch/m68knommu/platform/coldfire/intc-simr.c:52:
+			irq < (MCFGPIO_IRQ_VECBASE + MCFGPIO_IRQ_MAX)) {
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#392: FILE: arch/m68knommu/platform/coldfire/intc-simr.c:54:
+		u8 epier = __raw_readb(MCFEPORT_EPIER);
+		epier |= 1 << (irq - MCFGPIO_IRQ_VECBASE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#401: FILE: arch/m68knommu/platform/coldfire/intc-simr.c:63:
+	if (irq >= MCFGPIO_IRQ_VECBASE ||
+			irq < (MCFGPIO_IRQ_VECBASE + MCFGPIO_IRQ_MAX)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#403: FILE: arch/m68knommu/platform/coldfire/intc-simr.c:65:
+		u8 epfr = __raw_readb(MCFEPORT_EPFR);
+		epfr |= 1 << (irq - MCFGPIO_IRQ_VECBASE);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#410: FILE: arch/m68knommu/platform/coldfire/intc-simr.c:72:
+	unsigned shift;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#415: FILE: arch/m68knommu/platform/coldfire/intc-simr.c:77:
+	if (irq < MCFGPIO_IRQ_VECBASE ||
+			irq >= (MCFGPIO_IRQ_VECBASE + MCFGPIO_IRQ_MAX))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#420: FILE: arch/m68knommu/platform/coldfire/intc-simr.c:82:
+	if ((type & IRQF_TRIGGER_HIGH) ||
+			((type & IRQF_TRIGGER_LOW) &&

CHECK:LINE_SPACING: Please don't use multiple blank lines
#442: FILE: arch/m68knommu/platform/coldfire/intc-simr.c:104:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'irq < MCFINTC2_GPIOIRQ0'
#524: FILE: arch/m68knommu/platform/coldfire/intc.c:168:
+	if ((irq < MCFINTC2_GPIOIRQ0) || (irq > MCFINTC2_GPIOIRQ7))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'irq > MCFINTC2_GPIOIRQ7'
#524: FILE: arch/m68knommu/platform/coldfire/intc.c:168:
+	if ((irq < MCFINTC2_GPIOIRQ0) || (irq > MCFINTC2_GPIOIRQ7))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000033093.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 12 warnings, 21 checks, 414 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000033093.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
