WARNING:TYPO_SPELLING: 'an userspace' may be misspelled - perhaps 'a userspace'?
#35: 
ehea ports via an userspace DLPAR tool. It creates a subnode for
               ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'port->adapter->handle'
#204: FILE: drivers/net/ehea/ehea_main.c:2327:
+				hret = ehea_h_modify_ehea_port(port->adapter->
+							       handle,

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

CHECK:BRACES: Unbalanced braces around else statement
#216: FILE: drivers/net/ehea/ehea_main.c:2336:
+		} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#229: FILE: drivers/net/ehea/ehea_main.c:2349:
+	struct ehea_port *port = container_of(dev, struct ehea_port, ofdev.dev);
+	return sprintf(buf, "0x%X", port->logical_port_id);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'ehea_show_port_id' to 'log_port_id_show'
#230: FILE: drivers/net/ehea/ehea_main.c:2350:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IRGRP | S_IROTH' are not preferred. Consider using octal permissions '0444'.
#232: FILE: drivers/net/ehea/ehea_main.c:2352:
+static DEVICE_ATTR(log_port_id, S_IRUSR | S_IRGRP | S_IROTH, ehea_show_port_id,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#235: FILE: drivers/net/ehea/ehea_main.c:2355:
+static void __devinit logical_port_release(struct device *dev)

WARNING:LINE_SPACING: Missing a blank line after declarations
#238: FILE: drivers/net/ehea/ehea_main.c:2358:
+	struct ehea_port *port = container_of(dev, struct ehea_port, ofdev.dev);
+	of_node_put(port->ofdev.node);

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: drivers/net/ehea/ehea_main.c:2379:
+        if (ret) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: drivers/net/ehea/ehea_main.c:2379:
+        if (ret) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#263: FILE: drivers/net/ehea/ehea_main.c:2383:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*port->mc_list)...) over kzalloc(sizeof(struct ehea_mc_list)...)
#309: FILE: drivers/net/ehea/ehea_main.c:2429:
+	port->mc_list = kzalloc(sizeof(struct ehea_mc_list), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#338: FILE: drivers/net/ehea/ehea_main.c:2482:
+^Iif (ret) $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#398: FILE: drivers/net/ehea/ehea_main.c:2529:
+		dn_log_port_id = (u32*)get_property(eth_dn, "ibm,hea-port-no",

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#412: FILE: drivers/net/ehea/ehea_main.c:2542:
+^I^I^I^I  adapter->port[i]->netdev->name, $

WARNING:TYPO_SPELLING: 'succesfully' may be misspelled - perhaps 'successfully'?
#421: FILE: drivers/net/ehea/ehea_main.c:2549:
+	/* Check for succesfully set up ports */
 	             ^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#434: FILE: drivers/net/ehea/ehea_main.c:2560:
+static struct device_node *ehea_get_eth_dn(struct ehea_adapter *adapter, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#435: FILE: drivers/net/ehea/ehea_main.c:2561:
+^I^I^I^I^I   u32 logical_port_id) $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#453: FILE: drivers/net/ehea/ehea_main.c:2573:
+		dn_log_port_id = (u32*)get_property(eth_dn, "ibm,hea-port-no",

WARNING:NAKED_SSCANF: unchecked sscanf return value
#487: FILE: drivers/net/ehea/ehea_main.c:2598:
+	sscanf(buf, "%X", &logical_port_id);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#487: FILE: drivers/net/ehea/ehea_main.c:2598:
+	sscanf(buf, "%X", &logical_port_id);

WARNING:SPLIT_STRING: quoted string split across lines
#493: FILE: drivers/net/ehea/ehea_main.c:2604:
+		ehea_info("adding port with logical port id=%d failed. port "
+			  "already configured as %s.", logical_port_id,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#497: FILE: drivers/net/ehea/ehea_main.c:2608:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#505: FILE: drivers/net/ehea/ehea_main.c:2615:
+^I^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#512: FILE: drivers/net/ehea/ehea_main.c:2618:
+	if (port) {
[...]
-	else
[...]

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#513: FILE: drivers/net/ehea/ehea_main.c:2619:
+		for (i=0; i < EHEA_MAX_PORTS; i++)
 		      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#525: FILE: drivers/net/ehea/ehea_main.c:2627:
+^I} else $

CHECK:BRACES: Unbalanced braces around else statement
#525: FILE: drivers/net/ehea/ehea_main.c:2627:
+	} else 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#526: FILE: drivers/net/ehea/ehea_main.c:2628:
+^I^Ireturn -EIO;^I       $

CHECK:SPACING: No space is necessary after a cast
#528: FILE: drivers/net/ehea/ehea_main.c:2630:
+	return (ssize_t) count;

WARNING:NAKED_SSCANF: unchecked sscanf return value
#540: FILE: drivers/net/ehea/ehea_main.c:2642:
+	sscanf(buf, "%X", &logical_port_id);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#540: FILE: drivers/net/ehea/ehea_main.c:2642:
+	sscanf(buf, "%X", &logical_port_id);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#550: FILE: drivers/net/ehea/ehea_main.c:2652:
+		for (i=0; i < EHEA_MAX_PORTS; i++)
 		      ^

WARNING:SPLIT_STRING: quoted string split across lines
#557: FILE: drivers/net/ehea/ehea_main.c:2659:
+		ehea_error("removing port with logical port id=%d failed. port "
+			   "not configured.", logical_port_id);

CHECK:SPACING: No space is necessary after a cast
#561: FILE: drivers/net/ehea/ehea_main.c:2663:
+	return (ssize_t) count;

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'ehea_probe_port' to 'probe_port_store'
#562: FILE: drivers/net/ehea/ehea_main.c:2664:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#564: FILE: drivers/net/ehea/ehea_main.c:2666:
+static DEVICE_ATTR(probe_port, S_IWUSR, NULL, ehea_probe_port);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'ehea_remove_port' to 'remove_port_store'
#565: FILE: drivers/net/ehea/ehea_main.c:2667:
+static DEVICE_ATTR(remove_port, S_IWUSR, NULL, ehea_remove_port);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#565: FILE: drivers/net/ehea/ehea_main.c:2667:
+static DEVICE_ATTR(remove_port, S_IWUSR, NULL, ehea_remove_port);

WARNING:LINE_SPACING: Missing a blank line after declarations
#570: FILE: drivers/net/ehea/ehea_main.c:2672:
+	int ret = device_create_file(&dev->ofdev.dev, &dev_attr_probe_port);
+	if (ret)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#586: FILE: drivers/net/ehea/ehea_main.c:2686:
+static int __devinit ehea_probe_adapter(struct ibmebus_dev *dev,

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#642: FILE: drivers/net/ehea/ehea_main.c:2787:
 static int __devexit ehea_remove(struct ibmebus_dev *dev)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000464810.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 14 errors, 22 warnings, 6 checks, 597 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000464810.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
