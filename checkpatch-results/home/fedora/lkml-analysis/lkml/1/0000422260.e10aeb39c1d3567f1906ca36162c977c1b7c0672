ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#93: FILE: drivers/serial/icom.c:21:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#94: FILE: drivers/serial/icom.c:22:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

CHECK:CAMELCASE: Avoid CamelCase: <statStg_pci>
#126: FILE: drivers/serial/icom.c:162:
+			icom_port->statStg_pci);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <xmitRestart_pci>
#133: FILE: drivers/serial/icom.c:168:
+			icom_port->xmitRestart_pci);

CHECK:SPACING: No space is necessary after a cast
#150: FILE: drivers/serial/icom.c:188:
+	trace(icom_port, "GET_PORT_MEM", (unsigned long) icom_port->xmit_buf);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#162: FILE: drivers/serial/icom.c:198:
+		(unsigned long) icom_port->recv_buf);

CHECK:SPACING: No space is necessary after a cast
#174: FILE: drivers/serial/icom.c:208:
+		(unsigned long) icom_port->statStg);

CHECK:CAMELCASE: Avoid CamelCase: <statStg>
#174: FILE: drivers/serial/icom.c:208:
+		(unsigned long) icom_port->statStg);

CHECK:SPACING: No space is necessary after a cast
#204: FILE: drivers/serial/icom.c:232:
+				(unsigned short int) cpu_to_le16(XMIT_BUFF_SZ);

CHECK:SPACING: No space is necessary after a cast
#208: FILE: drivers/serial/icom.c:235:
+				(unsigned long) icom_port->xmit_buf);

CHECK:SPACING: No space is necessary after a cast
#216: FILE: drivers/serial/icom.c:241:
+				(unsigned short int) cpu_to_le16(XMIT_BUFF_SZ);

CHECK:SPACING: No space is necessary after a cast
#219: FILE: drivers/serial/icom.c:243:
+				(unsigned long) icom_port->xmit_buf);

CHECK:SPACING: No space is necessary after a cast
#231: FILE: drivers/serial/icom.c:259:
+			(unsigned short int) cpu_to_le16(RCV_BUFF_SZ);

ERROR:SPACING: spaces prohibited around that '->' (ctx:VxW)
#236: FILE: drivers/serial/icom.c:263:
+				cpu_to_le32(icom_port-> statStg_pci + offset);
 				                     ^

CHECK:SPACING: No space is necessary after a cast
#239: FILE: drivers/serial/icom.c:265:
+				(unsigned long) icom_port->recv_buf);

ERROR:SPACING: spaces prohibited around that '->' (ctx:VxW)
#247: FILE: drivers/serial/icom.c:271:
+				cpu_to_le32(icom_port-> statStg_pci + offset);
 				                     ^

CHECK:SPACING: No space is necessary after a cast
#250: FILE: drivers/serial/icom.c:273:
+				(unsigned long) icom_port->recv_buf + 2048);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around icom_port->dram->HDLCConfigReg
#300: FILE: drivers/serial/icom.c:416:
+		&(icom_port->dram->HDLCConfigReg));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:CAMELCASE: Avoid CamelCase: <HDLCConfigReg>
#300: FILE: drivers/serial/icom.c:416:
+		&(icom_port->dram->HDLCConfigReg));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "new_page"
#366: FILE: drivers/serial/icom.c:505:
+	if (new_page != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#476: FILE: drivers/serial/icom.c:642:
+			(unsigned long) &ICOM_PORT->statStg->xmit[0] -

CHECK:SPACING: No space is necessary after a cast
#477: FILE: drivers/serial/icom.c:643:
+			(unsigned long) ICOM_PORT->statStg;

CHECK:CAMELCASE: Avoid CamelCase: <CmdReg>
#484: FILE: drivers/serial/icom.c:648:
+			&ICOM_PORT->dram->CmdReg);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#519: FILE: drivers/serial/icom.c:759:
 		if ((status & SA_FLAGS_FRAME_ERROR)
+			&& first == 0) {

CHECK:SPACING: No space is necessary after a cast
#548: FILE: drivers/serial/icom.c:871:
+					(u16) (adapter_interrupts >> 16);

CHECK:SPACING: No space is necessary after a cast
#637: FILE: drivers/serial/icom.c:1219:
+			(unsigned short int) cpu_to_le16(RCV_BUFF_SZ);

CHECK:SPACING: No space is necessary after a cast
#647: FILE: drivers/serial/icom.c:1247:
+		(unsigned long) &ICOM_PORT->statStg->rcv[0] -

CHECK:SPACING: No space is necessary after a cast
#648: FILE: drivers/serial/icom.c:1248:
+		(unsigned long) ICOM_PORT->statStg;

CHECK:CAMELCASE: Avoid CamelCase: <RcvStatusAddr>
#651: FILE: drivers/serial/icom.c:1250:
+		&ICOM_PORT->dram->RcvStatusAddr);

CHECK:CAMELCASE: Avoid CamelCase: <XmitStatusAddr>
#657: FILE: drivers/serial/icom.c:1255:
+		&ICOM_PORT->dram->XmitStatusAddr);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#688: FILE: drivers/serial/icom.c:1380:
 static int __devinit icom_load_ports(struct icom_adapter *icom_adapter)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#704: FILE: drivers/serial/icom.c:1407:
+static int __devinit icom_alloc_adapter(struct icom_adapter **icom_adapter_ref)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#724: FILE: drivers/serial/icom.c:1424:
+			list_entry(tmp, struct icom_adapter,
+				icom_adapter_entry);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#744: FILE: drivers/serial/icom.c:1490:
 static int __devinit icom_probe(struct pci_dev *dev,

ERROR:SPACING: space prohibited after that open parenthesis '('
#781: FILE: drivers/serial/icom.c:1513:
+	if ( (retval = pci_read_config_dword(dev, PCI_COMMAND, &command_reg))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#781: FILE: drivers/serial/icom.c:1513:
+	if ( (retval = pci_read_config_dword(dev, PCI_COMMAND, &command_reg))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#831: FILE: drivers/serial/icom.c:1548:
+	icom_adapter->base_addr = ioremap(icom_adapter->base_addr_pci,
+		pci_resource_len(dev, 0));

ERROR:SPACING: space prohibited after that open parenthesis '('
#842: FILE: drivers/serial/icom.c:1554:
+	if ( (retval = request_irq(dev->irq, icom_interrupt,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#842: FILE: drivers/serial/icom.c:1554:
+	if ( (retval = request_irq(dev->irq, icom_interrupt,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#843: FILE: drivers/serial/icom.c:1555:
+	if ( (retval = request_irq(dev->irq, icom_interrupt,
+		IRQF_DISABLED | IRQF_SHARED, ICOM_DRIVER_NAME,

CHECK:SPACING: No space is necessary after a cast
#844: FILE: drivers/serial/icom.c:1556:
+		(void *) icom_adapter))) {

CHECK:SPACING: No space is necessary after a cast
#860: FILE: drivers/serial/icom.c:1570:
+				(char *) icom_adapter->base_addr_pci;

CHECK:BRACES: Unbalanced braces around else statement
#871: FILE: drivers/serial/icom.c:1578:
+			} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#886: FILE: drivers/serial/icom.c:1599:
 static void __devexit icom_remove(struct pci_dev *dev)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000422260.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 4 warnings, 32 checks, 812 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000422260.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
