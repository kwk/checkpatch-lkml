ERROR:SPACING: space required before the open parenthesis '('
#64: FILE: arch/x86_64/kernel/e820.c:741:
+		if(e820.map[i].type != E820_RAM)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#72: FILE: arch/x86_64/kernel/e820.c:749:
+	*size = min_t(u64, e820.map[i].size + e820.map[i].addr,
+		max_pfn << PAGE_SHIFT) - *addr;

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'pdev' may be better as '(pdev)' to avoid precedence issues
#95: FILE: drivers/pci/intel-iommu.c:39:
+#define IS_GFX_DEVICE(pdev) ((pdev->class >> 16) == PCI_BASE_CLASS_DISPLAY)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#113: FILE: drivers/pci/intel-iommu.c:112:
+			printk(KERN_INFO"Intel-IOMMU: disable GFX device mapping\n");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#113: FILE: drivers/pci/intel-iommu.c:112:
+			printk(KERN_INFO"Intel-IOMMU: disable GFX device mapping\n");

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#116: FILE: drivers/pci/intel-iommu.c:115:
+			printk(KERN_INFO"Intel-IOMMU: do 1-1 mapping whole physical memory for GFX device\n");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#116: FILE: drivers/pci/intel-iommu.c:115:
+			printk(KERN_INFO"Intel-IOMMU: do 1-1 mapping whole physical memory for GFX device\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#126: FILE: drivers/pci/intel-iommu.c:1330:
 };
+#define DUMMY_DEVICE_DOMAIN_INFO ((struct device_domain_info *)(-1))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#152: FILE: drivers/pci/intel-iommu.c:1569:
+		if (pdev->sysdata == DUMMY_DEVICE_DOMAIN_INFO ||
+				!IS_GFX_DEVICE(pdev))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#154: FILE: drivers/pci/intel-iommu.c:1571:
+		printk(KERN_INFO "IOMMU: gfx device %s 1-1 mapping\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#155: FILE: drivers/pci/intel-iommu.c:1572:
+		printk(KERN_INFO "IOMMU: gfx device %s 1-1 mapping\n",
+			pci_name(pdev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#164: FILE: drivers/pci/intel-iommu.c:1581:
+		printk(KERN_ERR "IOMMU: mapping reserved region failed\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#182: FILE: drivers/pci/intel-iommu.c:1638:
 	end_for_each_rmrr_device(rmrr, pdev)
[...]
+	iommu_prepare_gfx_mapping();

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#249: FILE: drivers/pci/intel-iommu.c:1932:
+static int intel_nontranslate_map_sg(struct device* hddev,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#250: FILE: drivers/pci/intel-iommu.c:1933:
+static int intel_nontranslate_map_sg(struct device* hddev,
+	struct scatterlist *sg, int nelems, int dir)

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: drivers/pci/intel-iommu.c:1937:
+ ^Ifor (i = 0; i < nelems; i++) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#254: FILE: drivers/pci/intel-iommu.c:1937:
+ ^Ifor (i = 0; i < nelems; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: drivers/pci/intel-iommu.c:1937:
+ ^Ifor (i = 0; i < nelems; i++) {$

WARNING:LINE_SPACING: Missing a blank line after declarations
#256: FILE: drivers/pci/intel-iommu.c:1939:
+		struct scatterlist *s = &sg[i];
+		BUG_ON(!s->page);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#256: FILE: drivers/pci/intel-iommu.c:1939:
+		BUG_ON(!s->page);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LINE_SPACING: Missing a blank line after declarations
#285: FILE: drivers/pci/intel-iommu.c:2054:
+		int i;
+		if (drhd->devices_cnt == 0 && !drhd->include_all)  {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "drhd->devices[i]"
#290: FILE: drivers/pci/intel-iommu.c:2059:
+			if (drhd->devices[i] != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#303: FILE: drivers/pci/intel-iommu.c:2072:
+		int i;
+		if (drhd->ignored || drhd->include_all)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#342: FILE: include/linux/intel-iommu.h:266:
+extern int arch_get_ram_range(int slot, u64 *addr, u64 *size);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000441739.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 11 warnings, 10 checks, 263 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000441739.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
