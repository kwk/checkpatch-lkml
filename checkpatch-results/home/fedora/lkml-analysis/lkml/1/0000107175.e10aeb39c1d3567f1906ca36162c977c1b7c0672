WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
   git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip.git x86-fixes-for-linus

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#195: FILE: arch/x86/include/asm/amd_iommu.h:32:
+extern void amd_iommu_shutdown(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/atomic.h> instead of <asm/atomic.h>
#276: FILE: arch/x86/include/asm/mce.h:107:
+#include <asm/atomic.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#340: FILE: arch/x86/include/asm/mce.h:195:
+extern void (*machine_check_vector)(struct pt_regs *, long error_code);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#341: FILE: arch/x86/include/asm/mce.h:196:
+void do_machine_check(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long' should also have an identifier name
#341: FILE: arch/x86/include/asm/mce.h:196:
+void do_machine_check(struct pt_regs *, long);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#391: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: arch/x86/kernel/amd_iommu.c:440:
+       u64 address = CMD_INV_IOMMU_ALL_PAGES_ADDRESS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: arch/x86/kernel/amd_iommu.c:442:
+       INC_STATS_COUNTER(domain_flush_single);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#420: FILE: arch/x86/kernel/amd_iommu.c:444:
+       iommu_queue_inv_iommu_pages(iommu, address, domid, 1, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#431: FILE: arch/x86/kernel/amd_iommu.c:1092:
+        * We might boot into a crash-kernel here. The crashed kernel$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#432: FILE: arch/x86/kernel/amd_iommu.c:1093:
+        * left the caches in the IOMMU dirty. So we have to flush$

ERROR:CODE_INDENT: code indent should use tabs where possible
#433: FILE: arch/x86/kernel/amd_iommu.c:1094:
+        * here to evict all dirty stuff.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#434: FILE: arch/x86/kernel/amd_iommu.c:1095:
+        */$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#534: FILE: arch/x86/kernel/apic/io_apic.c:2009:
+		disconnect_bsp_APIC(!intr_remapping_enabled &&
+				ioapic_i8259.pin != -1);

WARNING:MEMORY_BARRIER: memory barrier without comment
#760: FILE: arch/x86/kernel/cpu/mcheck/mce.c:724:
+	smp_rmb();

WARNING:TABSTOP: Statements should start on a tabstop
#867: FILE: arch/x86/kernel/cpu/mcheck/mce.c:1252:
+		 if (c->x86 == 6 && banks > 0)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#941: FILE: arch/x86/kernel/cpu/mcheck/mce.c:1698:
+	mce_helper[sizeof(mce_helper)-1] = 0;
 	                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONSIDER_KSTRTO: strict_strtoull is obsolete, use kstrtoull instead
#957: FILE: arch/x86/kernel/cpu/mcheck/mce.c:1714:
+	if (strict_strtoull(buf, 0, &new) < 0)

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: strict_strtoull is obsolete, use kstrtoull instead
#980: FILE: arch/x86/kernel/cpu/mcheck/mce.c:1737:
+	if (strict_strtoull(buf, 0, &new) < 0)

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#1169: FILE: arch/x86/kernel/cpu/mcheck/mce_intel.c:12:
+#include <asm/processor.h>

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1224: FILE: arch/x86/kernel/cpu/mcheck/mce_intel.c:50:
+	*banks = min_t(unsigned, MAX_NR_BANKS, cap & 0xff);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1243: FILE: arch/x86/kernel/cpu/mcheck/mce_intel.c:69:
+		printk(KERN_INFO "CPU %d MCA banks", smp_processor_id());

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#1245: FILE: arch/x86/kernel/cpu/mcheck/mce_intel.c:71:
+	printk(KERN_CONT " %s:%d", type, num);

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#1245: FILE: arch/x86/kernel/cpu/mcheck/mce_intel.c:71:
+	printk(KERN_CONT " %s:%d", type, num);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#1292: FILE: arch/x86/kernel/cpu/mcheck/mce_intel.c:118:
+		printk(KERN_CONT "\n");

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#1292: FILE: arch/x86/kernel/cpu/mcheck/mce_intel.c:118:
+		printk(KERN_CONT "\n");

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1337: FILE: arch/x86/kernel/cpu/mcheck/mce_intel.c:156:
+		val &= ~(CMCI_EN|CMCI_THRESHOLD_MASK);
 		                ^

WARNING:TYPO_SPELLING: 'Reenable' may be misspelled - perhaps 'Re-enable'?
#1382: FILE: arch/x86/kernel/cpu/mcheck/mce_intel.c:194:
+ * Reenable CMCI on this CPU in case a CPU down failed.
    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#1387: FILE: arch/x86/kernel/cpu/mcheck/mce_intel.c:199:
+	int banks;
+	if (cmci_supported(&banks))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1413: FILE: arch/x86/kernel/cpu/mcheck/mce_intel.c:218:
+	apic_write(APIC_LVTCMCI, THRESHOLD_APIC_VECTOR|APIC_DM_FIXED);
 	                                              ^

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#1843: FILE: arch/x86/kernel/cpu/mcheck/therm_throt.c:27:
+#include <asm/processor.h>

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1891: FILE: arch/x86/kernel/cpu/mcheck/therm_throt.c:215:
+	printk(KERN_ERR "CPU%d: Unexpected LVT TMR interrupt!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1892: FILE: arch/x86/kernel/cpu/mcheck/therm_throt.c:216:
+	printk(KERN_ERR "CPU%d: Unexpected LVT TMR interrupt!\n",
+			smp_processor_id());

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1927: FILE: arch/x86/kernel/cpu/mcheck/therm_throt.c:251:
+		printk(KERN_DEBUG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1937: FILE: arch/x86/kernel/cpu/mcheck/therm_throt.c:261:
+		printk(KERN_DEBUG

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1949: FILE: arch/x86/kernel/cpu/mcheck/therm_throt.c:273:
+	wrmsr(MSR_IA32_THERM_INTERRUPT,
+		l | (THERM_INT_LOW_ENABLE | THERM_INT_HIGH_ENABLE), h);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1960: FILE: arch/x86/kernel/cpu/mcheck/therm_throt.c:284:
+	printk(KERN_INFO "CPU%d: Thermal monitoring enabled (%s)\n",

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000107175.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 24 warnings, 10 checks, 1598 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000107175.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
