WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
# mount -t ecryptfs /secret /secret

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
# echo "abc" > /secret/file.txt

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
# umount /secret

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
# mount -t ecryptfs /secret /secret

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
# echo "def" >> /secret/file.txt

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
# cat /secret/file.txt

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#107: FILE: fs/ecryptfs/mmap.c:285:
+			&ecryptfs_inode_to_private(

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#111: FILE: fs/ecryptfs/mmap.c:289:
+		if (!(crypt_stat->flags & ECRYPTFS_ENCRYPTED)
+		    || (crypt_stat->flags & ECRYPTFS_NEW_FILE)) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#112: FILE: fs/ecryptfs/mmap.c:290:
+			rc = ecryptfs_read_lower_page_segment(

CHECK:BRACES: braces {} should be used on all arms of this statement
#115: FILE: fs/ecryptfs/mmap.c:293:
+			if (rc) {
[...]
+			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'attemping' may be misspelled - perhaps 'attempting'?
#116: FILE: fs/ecryptfs/mmap.c:294:
+				printk(KERN_ERR "%s: Error attemping to read "
 				                           ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#116: FILE: fs/ecryptfs/mmap.c:294:
+				printk(KERN_ERR "%s: Error attemping to read "

WARNING:SPLIT_STRING: quoted string split across lines
#117: FILE: fs/ecryptfs/mmap.c:295:
+				printk(KERN_ERR "%s: Error attemping to read "
+				       "lower page segment; rc = [%d]\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#118: FILE: fs/ecryptfs/mmap.c:296:
+				       __FUNCTION__, rc);

CHECK:BRACES: Unbalanced braces around else statement
#121: FILE: fs/ecryptfs/mmap.c:299:
+			} else

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#125: FILE: fs/ecryptfs/mmap.c:303:
+				rc = ecryptfs_copy_up_encrypted_with_header(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#128: FILE: fs/ecryptfs/mmap.c:306:
+					printk(KERN_ERR "%s: Error attempting "

WARNING:SPLIT_STRING: quoted string split across lines
#129: FILE: fs/ecryptfs/mmap.c:307:
+					printk(KERN_ERR "%s: Error attempting "
+					       "to copy the encrypted content "

WARNING:SPLIT_STRING: quoted string split across lines
#130: FILE: fs/ecryptfs/mmap.c:308:
+					       "to copy the encrypted content "
+					       "from the lower file whilst "

WARNING:SPLIT_STRING: quoted string split across lines
#131: FILE: fs/ecryptfs/mmap.c:309:
+					       "from the lower file whilst "
+					       "inserting the metadata from "

WARNING:SPLIT_STRING: quoted string split across lines
#132: FILE: fs/ecryptfs/mmap.c:310:
+					       "inserting the metadata from "
+					       "the xattr into the header; rc "

WARNING:SPLIT_STRING: quoted string split across lines
#133: FILE: fs/ecryptfs/mmap.c:311:
+					       "the xattr into the header; rc "
+					       "= [%d]\n", __FUNCTION__, rc);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#133: FILE: fs/ecryptfs/mmap.c:311:
+					       "= [%d]\n", __FUNCTION__, rc);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#139: FILE: fs/ecryptfs/mmap.c:317:
+				rc = ecryptfs_read_lower_page_segment(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#143: FILE: fs/ecryptfs/mmap.c:321:
+					printk(KERN_ERR "%s: Error reading "

WARNING:SPLIT_STRING: quoted string split across lines
#144: FILE: fs/ecryptfs/mmap.c:322:
+					printk(KERN_ERR "%s: Error reading "
+					       "page; rc = [%d]\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#145: FILE: fs/ecryptfs/mmap.c:323:
+					       __FUNCTION__, rc);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#154: FILE: fs/ecryptfs/mmap.c:332:
+				printk(KERN_ERR "%s: Error decrypting page "

WARNING:SPLIT_STRING: quoted string split across lines
#155: FILE: fs/ecryptfs/mmap.c:333:
+				printk(KERN_ERR "%s: Error decrypting page "
+				       "at index [%ld]; rc = [%d]\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#156: FILE: fs/ecryptfs/mmap.c:334:
+				       __FUNCTION__, page->index, rc);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#171: FILE: fs/ecryptfs/mmap.c:343:
+	 * Note, this will increase i_size. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#178: FILE: fs/ecryptfs/mmap.c:349:
+				printk(KERN_ERR "%s: Error on attempt to "

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#181: FILE: fs/ecryptfs/mmap.c:351:
+				       " rc = [%d]\n", __FUNCTION__,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#194: FILE: fs/ecryptfs/mmap.c:358:
+	 * of page?  Zero it out. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'from != 0'
#195: FILE: fs/ecryptfs/mmap.c:359:
+	if ((i_size_read(page->mapping->host) == prev_page_end_size)
+	    && (from != 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#196: FILE: fs/ecryptfs/mmap.c:360:
+	if ((i_size_read(page->mapping->host) == prev_page_end_size)
+	    && (from != 0))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000304848.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 27 warnings, 9 checks, 128 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000304848.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
