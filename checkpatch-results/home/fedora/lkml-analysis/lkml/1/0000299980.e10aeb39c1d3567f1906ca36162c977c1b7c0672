WARNING:TYPO_SPELLING: 'prevoius' may be misspelled - perhaps 'previous'?
#85: 
it to the prevoius extent block and change all the related extent blocks
          ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#126: FILE: fs/ocfs2/alloc.c:2729:
+	BUG_ON(left_path->p_tree_depth == 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#129: FILE: fs/ocfs2/alloc.c:2732:
+	BUG_ON(left_el->l_next_free_rec != left_el->l_count);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#139: FILE: fs/ocfs2/alloc.c:2742:
+	BUG_ON(right_cpos == 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#208: FILE: fs/ocfs2/alloc.c:2803:
+		BUG_ON(next_free <= 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#211: FILE: fs/ocfs2/alloc.c:2806:
+			BUG_ON(le16_to_cpu(next_free) <= 1);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#215: FILE: fs/ocfs2/alloc.c:2810:
+		BUG_ON(le32_to_cpu(left_rec->e_cpos) +

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#231: FILE: fs/ocfs2/alloc.c:2826:
+		BUG_ON(root_bh != right_path->p_node[subtree_index].bh);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#260: FILE: fs/ocfs2/alloc.c:2855:
+		BUG_ON(index == le16_to_cpu(el->l_next_free_rec) - 1);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#295: FILE: fs/ocfs2/alloc.c:2904:
+	BUG_ON(right_path->p_tree_depth == 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#305: FILE: fs/ocfs2/alloc.c:2914:
+	BUG_ON(left_cpos == 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#360: FILE: fs/ocfs2/alloc.c:2964:
+	BUG_ON(index < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#375: FILE: fs/ocfs2/alloc.c:2976:
+		BUG_ON(le16_to_cpu(left_el->l_next_free_rec) !=

CHECK:OPEN_ENDED_LINE: Lines should not end with a '['
#378: FILE: fs/ocfs2/alloc.c:2979:
+		left_rec = &left_el->l_recs[

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#380: FILE: fs/ocfs2/alloc.c:2981:
+		BUG_ON(le32_to_cpu(left_rec->e_cpos) +

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#396: FILE: fs/ocfs2/alloc.c:2997:
+		BUG_ON(root_bh != right_path->p_node[subtree_index].bh);

CHECK:BRACES: Unbalanced braces around else statement
#436: FILE: fs/ocfs2/alloc.c:3044:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#458: FILE: fs/ocfs2/alloc.c:3070:
+		    le16_to_cpu(el->l_next_free_rec) == 1) {
+

CHECK:BRACES: Unbalanced braces around else statement
#471: FILE: fs/ocfs2/alloc.c:3083:
+		} else

WARNING:TYPO_SPELLING: 'prevoius' may be misspelled - perhaps 'previous'?
#520: FILE: fs/ocfs2/alloc.c:3143:
+		 * prevoius extent block. It is more efficient and easier
 		   ^^^^^^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000299980.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 16 warnings, 4 checks, 492 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000299980.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
