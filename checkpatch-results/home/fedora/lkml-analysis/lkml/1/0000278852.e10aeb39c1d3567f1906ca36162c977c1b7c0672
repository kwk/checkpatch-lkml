WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
> >  git://git.kernel.org/pub/scm/linux/kernel/git/mszeredi/vfs.git vfs-cleanups

WARNING:TYPO_SPELLING: 'somehwere' may be misspelled - perhaps 'somewhere'?
#53: 
> changes somehwere?  Alternatively, when do you expect your changes to
          ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#107: FILE: fs/open.c:203:
+ * @filp: an open file or NULL (see file_truncate() as well)
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#118: FILE: fs/open.c:233:
+ * @filp: the open file
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#122: FILE: fs/open.c:237:
+int file_truncate(struct file *filp, loff_t length, unsigned int time_attrs)
                                ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#124: FILE: fs/open.c:239:
+	return do_truncate(filp->f_path.dentry, length, time_attrs, filp);
 	                                                            ^^^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#162: FILE: fs/open.c:346:
+		error = file_truncate(file, length, ATTR_MTIME|ATTR_CTIME);
 		                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#355: FILE: fs/utimes.c:128:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#362: FILE: fs/utimes.c:135:
+	error = __user_walk_fd(dfd, filename, lookup_flags, &nd);
 	                                                     ^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#366: FILE: fs/utimes.c:139:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#368: FILE: fs/utimes.c:141:
+		struct inode *inode = nd.path.dentry->d_inode;
 		                      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#392: FILE: fs/utimes.c:148:
+			error = vfs_permission(&nd, MAY_WRITE);
 			                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#408: FILE: fs/utimes.c:153:
+	error = utimes_common(&nd.path, times);
 	                       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#411: FILE: fs/utimes.c:156:
+	path_put(&nd.path);
 	          ^^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#415: FILE: fs/utimes.c:160:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!filename"
#439: FILE: fs/utimes.c:184:
+	if (filename == NULL && dfd != AT_FDCWD) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#458: FILE: include/linux/fs.h:1603:
+extern int file_truncate(struct file *filp, loff_t start,
                                       ^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#458: FILE: include/linux/fs.h:1603:
+extern int file_truncate(struct file *filp, loff_t start,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#472: FILE: include/linux/time.h:112:
+extern int do_utimes(int dfd, char __user *filename, struct timespec *times,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000278852.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 13 warnings, 6 checks, 379 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000278852.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
