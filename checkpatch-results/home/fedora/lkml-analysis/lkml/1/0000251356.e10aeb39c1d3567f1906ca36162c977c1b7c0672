WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
power. This patch implements a 'range' timer which will fire at a 'convenient'

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#56: FILE: include/linux/timer.h:27:
+/* This can probably be optimised somehow, but for now we do it the
+   simple way: two timers, one deferrable and one for the deadline. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#56: FILE: include/linux/timer.h:27:
+   simple way: two timers, one deferrable and one for the deadline. */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#60: FILE: include/linux/timer.h:31:
+	void (*function)(unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_name' - possible side-effects?
#94: FILE: include/linux/timer.h:63:
+#define DEFINE_RANGE_TIMER(_name, _function, _expires, _deadline, _data)\
+	struct range_timer _name = {					\
+		.early = TIMER_INITIALIZER_DEFERRABLE(range_timer_func,	\
+			(_expires), (unsigned long)&(_name)),		\
+		.deadline = TIMER_INITIALIZER(range_timer_func,		\
+			(_deadline), (unsigned long)(&(_name))),	\
+		.function = (_function),				\
+		.data = (_data),					\
+	}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#138: FILE: include/linux/timer.h:137:
 }
+static inline int range_timer_pending(const struct range_timer *timer)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#153: FILE: include/linux/timer.h:152:
+}
+static inline int del_range_timer(struct range_timer *timer)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#157: FILE: include/linux/timer.h:156:
+}
+static inline int __mod_range_timer(struct range_timer *timer,

WARNING:LINE_SPACING: Missing a blank line after declarations
#162: FILE: include/linux/timer.h:161:
+	int ret;
+	WARN_ON(deadline < expires);

WARNING:LINE_SPACING: Missing a blank line after declarations
#177: FILE: include/linux/timer.h:176:
+	int ret;
+	WARN_ON(deadline < expires);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000251356.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 4 checks, 172 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000251356.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
