WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#51: FILE: fs/nfsd/nfs4acl.c:133:
+void nfs4_acl_add_ace(struct nfs4_acl *, u32, u32, u32, int, uid_t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfs4_acl *' should also have an identifier name
#51: FILE: fs/nfsd/nfs4acl.c:133:
+void nfs4_acl_add_ace(struct nfs4_acl *, u32, u32, u32, int, uid_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#51: FILE: fs/nfsd/nfs4acl.c:133:
+void nfs4_acl_add_ace(struct nfs4_acl *, u32, u32, u32, int, uid_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#51: FILE: fs/nfsd/nfs4acl.c:133:
+void nfs4_acl_add_ace(struct nfs4_acl *, u32, u32, u32, int, uid_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#51: FILE: fs/nfsd/nfs4acl.c:133:
+void nfs4_acl_add_ace(struct nfs4_acl *, u32, u32, u32, int, uid_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#51: FILE: fs/nfsd/nfs4acl.c:133:
+void nfs4_acl_add_ace(struct nfs4_acl *, u32, u32, u32, int, uid_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'uid_t' should also have an identifier name
#51: FILE: fs/nfsd/nfs4acl.c:133:
+void nfs4_acl_add_ace(struct nfs4_acl *, u32, u32, u32, int, uid_t);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#75: FILE: fs/nfsd/nfs4acl.c:145:
+		size += 2*pacl->a_count;
 		         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#80: FILE: fs/nfsd/nfs4acl.c:150:
+		size += 2*dpacl->a_count;
 		         ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!acl"
#85: FILE: fs/nfsd/nfs4acl.c:155:
+	if (acl == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#125: FILE: fs/nfsd/nfs4acl.c:172:
+	nfs4_acl_add_ace(acl, NFS4_ACE_ACCESS_ALLOWED_ACE_TYPE,
 				 eflag, mask, whotype, owner);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#130: FILE: fs/nfsd/nfs4acl.c:174:
+	nfs4_acl_add_ace(acl, NFS4_ACE_ACCESS_DENIED_ACE_TYPE,
 				eflag, deny_mask(mask, flags), whotype, owner);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#159: FILE: fs/nfsd/nfs4acl.c:204:
+		nfs4_acl_add_ace(acl, NFS4_ACE_ACCESS_DENIED_ACE_TYPE,
 				eflag,  mask_mask, NFS4_ACL_WHO_NAMED, pa->e_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#166: FILE: fs/nfsd/nfs4acl.c:207:
+		nfs4_acl_add_pair(acl, eflag, mask,
 				NFS4_ACL_WHO_NAMED, pa->e_id, flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#178: FILE: fs/nfsd/nfs4acl.c:219:
+		nfs4_acl_add_ace(acl, NFS4_ACE_ACCESS_DENIED_ACE_TYPE,
 				NFS4_ACE_IDENTIFIER_GROUP | eflag, mask_mask,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#187: FILE: fs/nfsd/nfs4acl.c:225:
+	nfs4_acl_add_ace(acl, NFS4_ACE_ACCESS_ALLOWED_ACE_TYPE,
 			NFS4_ACE_IDENTIFIER_GROUP | eflag, mask,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#197: FILE: fs/nfsd/nfs4acl.c:232:
+		nfs4_acl_add_ace(acl, NFS4_ACE_ACCESS_DENIED_ACE_TYPE,
 				NFS4_ACE_IDENTIFIER_GROUP | eflag, mask_mask,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#204: FILE: fs/nfsd/nfs4acl.c:235:
+		nfs4_acl_add_ace(acl, NFS4_ACE_ACCESS_ALLOWED_ACE_TYPE,
 		    		NFS4_ACE_IDENTIFIER_GROUP | eflag, mask,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#217: FILE: fs/nfsd/nfs4acl.c:245:
+	nfs4_acl_add_ace(acl, NFS4_ACE_ACCESS_DENIED_ACE_TYPE,
 			NFS4_ACE_IDENTIFIER_GROUP | eflag,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#226: FILE: fs/nfsd/nfs4acl.c:251:
+		nfs4_acl_add_ace(acl, NFS4_ACE_ACCESS_DENIED_ACE_TYPE,
 		    		NFS4_ACE_IDENTIFIER_GROUP | eflag,

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#264: FILE: fs/nfsd/nfs4acl.c:673:
+	acl = kmalloc(sizeof(*acl) + n*sizeof(struct nfs4_ace), GFP_KERNEL);
 	                              ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!acl"
#265: FILE: fs/nfsd/nfs4acl.c:674:
+	if (acl == NULL)

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#431: FILE: include/linux/nfs4_acl.h:43:
+ * fit in a page: */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#434: FILE: include/linux/nfs4_acl.h:46:
+struct nfs4_acl *nfs4_acl_new(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfs4_acl *' should also have an identifier name
#435: FILE: include/linux/nfs4_acl.h:47:
+void nfs4_acl_add_ace(struct nfs4_acl *, u32, u32, u32, int, uid_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#435: FILE: include/linux/nfs4_acl.h:47:
+void nfs4_acl_add_ace(struct nfs4_acl *, u32, u32, u32, int, uid_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#435: FILE: include/linux/nfs4_acl.h:47:
+void nfs4_acl_add_ace(struct nfs4_acl *, u32, u32, u32, int, uid_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#435: FILE: include/linux/nfs4_acl.h:47:
+void nfs4_acl_add_ace(struct nfs4_acl *, u32, u32, u32, int, uid_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#435: FILE: include/linux/nfs4_acl.h:47:
+void nfs4_acl_add_ace(struct nfs4_acl *, u32, u32, u32, int, uid_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'uid_t' should also have an identifier name
#435: FILE: include/linux/nfs4_acl.h:47:
+void nfs4_acl_add_ace(struct nfs4_acl *, u32, u32, u32, int, uid_t);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000468234.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 19 warnings, 15 checks, 387 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000468234.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
