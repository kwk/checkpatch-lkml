WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
Subject: [PATCH 4/6] [Target_Core_Mod/ALUA]: Add ALUA struct kmem_caches and update EVPD 0x83 information

WARNING:TYPO_SPELLING: 'assocations' may be misspelled - perhaps 'associations'?
#47: 
from different ALUA Logical Unit Group and Target Port Group assocations in
                                                             ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#67: FILE: drivers/lio-core/target_core_transport.c:212:
+struct kmem_cache *t10_alua_lu_gp_cache = NULL;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#68: FILE: drivers/lio-core/target_core_transport.c:213:
+struct kmem_cache *t10_alua_tg_pt_gp_cache = NULL;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#89: FILE: drivers/lio-core/target_core_transport.c:289:
+	if (!(t10_alua_lu_gp_cache = kmem_cache_create("t10_alua_lu_gp_cache",

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#90: FILE: drivers/lio-core/target_core_transport.c:290:
+	if (!(t10_alua_lu_gp_cache = kmem_cache_create("t10_alua_lu_gp_cache",
+			sizeof(t10_alua_lu_gp_t), __alignof__(t10_alua_lu_gp_t),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#92: FILE: drivers/lio-core/target_core_transport.c:292:
+		printk(KERN_ERR "kmem_cache_create() for t10_alua_lu_gp_cache failed\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#95: FILE: drivers/lio-core/target_core_transport.c:295:
+	if (!(t10_alua_tg_pt_gp_cache = kmem_cache_create("t10_alua_tg_pt_gp_cache",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#96: FILE: drivers/lio-core/target_core_transport.c:296:
+	if (!(t10_alua_tg_pt_gp_cache = kmem_cache_create("t10_alua_tg_pt_gp_cache",
+			sizeof(t10_alua_tg_pt_gp_t), __alignof__(t10_alua_tg_pt_gp_t),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#98: FILE: drivers/lio-core/target_core_transport.c:298:
+		printk(KERN_ERR "kmem_cache_create() for t10_alua_tg_pt_gp_cache failed\n");

WARNING:NEEDLESS_IF: kmem_cache_destroy(NULL) is safe and this check is probably not required
#110: FILE: drivers/lio-core/target_core_transport.c:342:
+	if (t10_alua_lu_gp_cache)
+		kmem_cache_destroy(t10_alua_lu_gp_cache);

WARNING:NEEDLESS_IF: kmem_cache_destroy(NULL) is safe and this check is probably not required
#112: FILE: drivers/lio-core/target_core_transport.c:344:
+	if (t10_alua_tg_pt_gp_cache)
+		kmem_cache_destroy(t10_alua_tg_pt_gp_cache);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#166: FILE: drivers/lio-core/target_core_transport.c:4231:
+^I^I^Iif (T10_ALUA(dev->se_sub_dev)->alua_type != SPC3_ALUA_EMULATED)^I^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#166: FILE: drivers/lio-core/target_core_transport.c:4231:
+			if (T10_ALUA(dev->se_sub_dev)->alua_type != SPC3_ALUA_EMULATED)			

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#174: FILE: drivers/lio-core/target_core_transport.c:4239:
+			if ((tg_pt_gp_p = port->sep_alua_tg_pt_gp))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#197: FILE: drivers/lio-core/target_core_transport.c:4263:
+			if ((lu_gp_p = dev->dev_alua_lu_gp))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000170762.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 7 warnings, 2 checks, 139 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000170762.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
