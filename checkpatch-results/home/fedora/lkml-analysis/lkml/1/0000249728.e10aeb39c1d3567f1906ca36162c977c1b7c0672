WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#337: FILE: include/asm-x86/numaq/apic.h:1:
+#ifndef __ASM_NUMAQ_APIC_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#340: FILE: include/asm-x86/numaq/apic.h:4:
+#include <asm/io.h>

CHECK:CAMELCASE: Avoid CamelCase: <dest_LowestPrio>
#356: FILE: include/asm-x86/numaq/apic.h:20:
+#define INT_DELIVERY_MODE dest_LowestPrio

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_WHITESPACE: trailing whitespace
#358: FILE: include/asm-x86/numaq/apic.h:22:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: include/asm-x86/numaq/apic.h:22:
+ $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#363: FILE: include/asm-x86/numaq/apic.h:27:
+}
+static inline unsigned long check_apicid_present(int bit)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#367: FILE: include/asm-x86/numaq/apic.h:31:
+}
+#define apicid_cluster(apicid) (apicid & 0xF0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'apicid' may be better as '(apicid)' to avoid precedence issues
#367: FILE: include/asm-x86/numaq/apic.h:31:
+#define apicid_cluster(apicid) (apicid & 0xF0)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#381: FILE: include/asm-x86/numaq/apic.h:45:
+	printk("Enabling APIC mode:  %s.  Using %d I/O APICs\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#382: FILE: include/asm-x86/numaq/apic.h:46:
+	printk("Enabling APIC mode:  %s.  Using %d I/O APICs\n",
+		"NUMA-Q", nr_ioapics);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: include/asm-x86/numaq/apic.h:68:
+       if (cpu >= NR_CPUS)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#404: FILE: include/asm-x86/numaq/apic.h:68:
+       if (cpu >= NR_CPUS)
+	       return BAD_APICID;

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#404: FILE: include/asm-x86/numaq/apic.h:68:
+       if (cpu >= NR_CPUS)

WARNING:TABSTOP: Statements should start on a tabstop
#405: FILE: include/asm-x86/numaq/apic.h:69:
+	       return BAD_APICID;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#422: FILE: include/asm-x86/numaq/apic.h:86:
+static inline int apicid_to_node(int logical_apicid) $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#432: FILE: include/asm-x86/numaq/apic.h:96:
+	return physid_mask_of_physid(cpu + 4*node);
 	                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#442: FILE: include/asm-x86/numaq/apic.h:106:
+       ^I^Ireturn;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#442: FILE: include/asm-x86/numaq/apic.h:106:
+       ^I^Ireturn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: include/asm-x86/numaq/apic.h:106:
+       ^I^Ireturn;$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#444: FILE: include/asm-x86/numaq/apic.h:108:
+	printk("Remapping cross-quad port I/O for %d quads\n", num_quads);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#445: FILE: include/asm-x86/numaq/apic.h:109:
+	xquad_portio = ioremap(XQUAD_PORTIO_BASE, num_quads*XQUAD_PORTIO_QUAD);
 	                                                   ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#446: FILE: include/asm-x86/numaq/apic.h:110:
+	printk("xquad_portio vaddr 0x%08lx, len %08lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#447: FILE: include/asm-x86/numaq/apic.h:111:
+	printk("xquad_portio vaddr 0x%08lx, len %08lx\n",
+		(u_long) xquad_portio, (u_long) num_quads*XQUAD_PORTIO_QUAD);

CHECK:SPACING: No space is necessary after a cast
#447: FILE: include/asm-x86/numaq/apic.h:111:
+		(u_long) xquad_portio, (u_long) num_quads*XQUAD_PORTIO_QUAD);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#447: FILE: include/asm-x86/numaq/apic.h:111:
+		(u_long) xquad_portio, (u_long) num_quads*XQUAD_PORTIO_QUAD);
 		                                         ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#452: FILE: include/asm-x86/numaq/apic.h:116:
+	return (1);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:SPACING: No space is necessary after a cast
#465: FILE: include/asm-x86/numaq/apic.h:129:
+	return (int) 0xF;

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(int) 0xF' could be '0xF'
#465: FILE: include/asm-x86/numaq/apic.h:129:
+	return (int) 0xF;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#480: FILE: include/asm-x86/numaq/apicdef.h:1:
+#ifndef __ASM_NUMAQ_APICDEF_H

CHECK:LINE_SPACING: Please don't use multiple blank lines
#483: FILE: include/asm-x86/numaq/apicdef.h:4:
+
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#484: FILE: include/asm-x86/numaq/apicdef.h:5:
+#define APIC_ID_MASK (0xF<<24)
                          ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#486: FILE: include/asm-x86/numaq/apicdef.h:7:
+static inline unsigned get_apic_id(unsigned long x)

ERROR:CODE_INDENT: code indent should use tabs where possible
#488: FILE: include/asm-x86/numaq/apicdef.h:9:
+^I        return (((x)>>24)&0x0F);$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#488: FILE: include/asm-x86/numaq/apicdef.h:9:
+	        return (((x)>>24)&0x0F);
 	                    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#488: FILE: include/asm-x86/numaq/apicdef.h:9:
+	        return (((x)>>24)&0x0F);
 	                         ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#499: FILE: include/asm-x86/numaq/ipi.h:1:
+#ifndef __ASM_NUMAQ_IPI_H

WARNING:FUNCTION_ARGUMENTS: function definition argument 'cpumask_t' should also have an identifier name
#502: FILE: include/asm-x86/numaq/ipi.h:4:
+void send_IPI_mask_sequence(cpumask_t, int vector);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:LINE_SPACING: Missing a blank line after declarations
#512: FILE: include/asm-x86/numaq/ipi.h:14:
+	cpumask_t mask = cpu_online_map;
+	cpu_clear(smp_processor_id(), mask);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#529: FILE: include/asm-x86/numaq/mpparse.h:1:
+#ifndef __ASM_NUMAQ_MPPARSE_H

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#532: FILE: include/asm-x86/numaq/mpparse.h:4:
+extern void numaq_mps_oem_check(struct mp_config_table *mpc, char *oem,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#541: FILE: include/asm-x86/numaq/wakecpu.h:1:
+#ifndef __ASM_NUMAQ_WAKECPU_H

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#569: FILE: include/asm-x86/numaq/wakecpu.h:29:
+	printk("Storing NMI vector\n");

CHECK:SPACING: No space is necessary after a cast
#570: FILE: include/asm-x86/numaq/wakecpu.h:30:
+	*high = *((volatile unsigned short *) TRAMPOLINE_HIGH);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#570: FILE: include/asm-x86/numaq/wakecpu.h:30:
+	*high = *((volatile unsigned short *) TRAMPOLINE_HIGH);

CHECK:SPACING: No space is necessary after a cast
#571: FILE: include/asm-x86/numaq/wakecpu.h:31:
+	*low = *((volatile unsigned short *) TRAMPOLINE_LOW);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#571: FILE: include/asm-x86/numaq/wakecpu.h:31:
+	*low = *((volatile unsigned short *) TRAMPOLINE_LOW);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#576: FILE: include/asm-x86/numaq/wakecpu.h:36:
+	printk("Restoring NMI vector\n");

CHECK:SPACING: No space is necessary after a cast
#577: FILE: include/asm-x86/numaq/wakecpu.h:37:
+	*((volatile unsigned short *) TRAMPOLINE_HIGH) = *high;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#577: FILE: include/asm-x86/numaq/wakecpu.h:37:
+	*((volatile unsigned short *) TRAMPOLINE_HIGH) = *high;

CHECK:SPACING: No space is necessary after a cast
#578: FILE: include/asm-x86/numaq/wakecpu.h:38:
+	*((volatile unsigned short *) TRAMPOLINE_LOW) = *low;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#578: FILE: include/asm-x86/numaq/wakecpu.h:38:
+	*((volatile unsigned short *) TRAMPOLINE_LOW) = *low;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000249728.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 27 warnings, 20 checks, 244 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000249728.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
