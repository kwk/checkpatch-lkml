WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
master.kernel.org:/pub/scm/linux/kernel/git/jgarzik/libata-dev.git upstream-linus

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'ahci_show_host_cap2' to 'ahci_host_cap2_show'
#130: FILE: drivers/ata/ahci.c:358:
+DEVICE_ATTR(ahci_host_cap2, S_IRUGO, ahci_show_host_cap2, NULL);

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#130: FILE: drivers/ata/ahci.c:358:
+DEVICE_ATTR(ahci_host_cap2, S_IRUGO, ahci_show_host_cap2, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#159: FILE: drivers/ata/ahci.c:759:
+	struct Scsi_Host *shost = class_to_shost(dev);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#185: FILE: drivers/ata/ahci.c:821:
+	if ((vers >> 16) > 1 ||
+	   ((vers >> 16) == 1 && (vers & 0xFFFF) >= 0x200))

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#186: FILE: drivers/ata/ahci.c:822:
+		hpriv->saved_cap2 = cap2 = readl(mmio + HOST_CAP2);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#188: FILE: drivers/ata/ahci.c:824:
+		hpriv->saved_cap2 = cap2 = 0;

WARNING:SPLIT_STRING: quoted string split across lines
#231: FILE: drivers/ata/ahci.c:2629:
 		"%s%s%s%s%s%s%s"
+		"%s%s%s%s%s%s\n"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_DEV_LEVEL: Prefer dev_warn(... to dev_printk(KERN_WARNING, ...
#339: FILE: drivers/ata/ahci.c:2735:
+		dev_printk(KERN_WARNING, &pdev->dev, "%s: enabling 64bit DMA\n",

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#342: FILE: drivers/ata/ahci.c:2738:
+		return true;
+	} else {

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#388: FILE: drivers/ata/ahci.c:2916:
+	dev_printk(KERN_INFO, host->dev,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000063626.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 4 checks, 483 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000063626.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
