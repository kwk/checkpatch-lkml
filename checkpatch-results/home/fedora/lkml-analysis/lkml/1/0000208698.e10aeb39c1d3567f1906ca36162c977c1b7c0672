WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#41: FILE: security/tomoyo/file.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#42: FILE: security/tomoyo/file.c:2:
+ * security/tomoyo/file.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#55: FILE: security/tomoyo/file.c:15:
+#define ACC_MODE(x) ("\000\004\002\006"[(x)&O_ACCMODE])
                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'unconditionnaly' may be misspelled - perhaps 'unconditionally'?
#281: FILE: security/tomoyo/file.c:241:
+ * is_globally_readable_file - Check if the file is unconditionnaly permitted to be open()ed for reading.
                                                     ^^^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#281: FILE: security/tomoyo/file.c:241:
+ * is_globally_readable_file - Check if the file is unconditionnaly permitted to be open()ed for reading.

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LINE_SPACING: Missing a blank line after declarations
#325: FILE: security/tomoyo/file.c:285:
+		struct globally_readable_file_entry *ptr;
+		ptr = list1_entry(pos, struct globally_readable_file_entry,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#450: FILE: security/tomoyo/file.c:410:
+		struct pattern_entry *ptr;
+		ptr = list1_entry(pos, struct pattern_entry, list);

WARNING:TYPO_SPELLING: 'rewrited' may be misspelled - perhaps 'rewrote'?
#517: FILE: security/tomoyo/file.c:477:
+ * is_no_rewrite_file - Check if the given pathname is not permitted to be rewrited.
                                                                            ^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#564: FILE: security/tomoyo/file.c:524:
+		struct no_rewrite_entry *ptr;
+		ptr = list1_entry(pos, struct no_rewrite_entry, list);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#596: FILE: security/tomoyo/file.c:556:
+		printk(KERN_DEBUG "%s: Invalid permission '%d %s'\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#636: FILE: security/tomoyo/file.c:596:
+		struct single_path_acl_record *acl;
+		if (tmy_acl_type2(ptr) != TYPE_SINGLE_PATH_ACL)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#678: FILE: security/tomoyo/file.c:638:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#717: FILE: security/tomoyo/file.c:677:
+		BUG();

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#721: FILE: security/tomoyo/file.c:681:
+		printk(KERN_WARNING "TOMOYO-%s: Access '%s(%s) %s' denied "

WARNING:SPLIT_STRING: quoted string split across lines
#722: FILE: security/tomoyo/file.c:682:
+		printk(KERN_WARNING "TOMOYO-%s: Access '%s(%s) %s' denied "
+		       "for %s\n", tmy_get_msg(is_enforce), msg, operation,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#756: FILE: security/tomoyo/file.c:716:
+	if (sscanf(data, "%u", &perm) == 1)
+		return update_file_acl(filename, (u8) perm, domain, is_delete);

CHECK:SPACING: No space is necessary after a cast
#757: FILE: security/tomoyo/file.c:717:
+		return update_file_acl(filename, (u8) perm, domain, is_delete);

WARNING:LINE_SPACING: Missing a blank line after declarations
#980: FILE: security/tomoyo/file.c:940:
+		struct double_path_acl_record *acl;
+		if (tmy_acl_type2(ptr) != TYPE_DOUBLE_PATH_ACL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1021: FILE: security/tomoyo/file.c:981:
+		printk(KERN_WARNING "TOMOYO-%s: Access '%s %s' denied for %s\n",

WARNING:LONG_LINE_COMMENT: line length of 151 exceeds 100 columns
#1143: FILE: security/tomoyo/file.c:1103:
+ * tmy_check_1path_perm - Check permission for "create", "unlink", "mkdir", "rmdir", "mkfifo", "mksock", "mkblock", "mkchar", "truncate" and "symlink".

CHECK:SPACING: No space is necessary after a cast
#1169: FILE: security/tomoyo/file.c:1129:
+			strcat((char *) buf->name, "/");

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1185: FILE: security/tomoyo/file.c:1145:
+ * @filp: Pointer to "struct file".
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1189: FILE: security/tomoyo/file.c:1149:
+int tmy_check_rewrite_permission(struct domain_info *domain, struct file *filp)
                                                                           ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1241: FILE: security/tomoyo/file.c:1201:
+		struct dentry *dentry = path1->dentry;
+		if (dentry->d_inode && S_ISDIR(dentry->d_inode->i_mode)) {

CHECK:SPACING: No space is necessary after a cast
#1244: FILE: security/tomoyo/file.c:1204:
+				strcat((char *) buf1->name, "/");

CHECK:SPACING: No space is necessary after a cast
#1248: FILE: security/tomoyo/file.c:1208:
+				strcat((char *) buf2->name, "/");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1258: FILE: security/tomoyo/file.c:1218:
+		printk(KERN_WARNING "TOMOYO-%s: Access '%s %s %s' "

WARNING:SPLIT_STRING: quoted string split across lines
#1259: FILE: security/tomoyo/file.c:1219:
+		printk(KERN_WARNING "TOMOYO-%s: Access '%s %s %s' "
+		       "denied for %s\n", tmy_get_msg(is_enforce),

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000208698.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 23 warnings, 5 checks, 1232 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000208698.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
