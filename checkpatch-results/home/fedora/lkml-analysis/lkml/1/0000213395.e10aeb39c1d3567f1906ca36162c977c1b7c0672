CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm' - possible side-effects?
#76: FILE: include/linux/cpumask.h:158:
+#define	CPUMASK_ALLOC(m)	struct m *m = kmalloc(sizeof(*m), GFP_KERNEL)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'm' may be better as '(m)' to avoid precedence issues
#76: FILE: include/linux/cpumask.h:158:
+#define	CPUMASK_ALLOC(m)	struct m *m = kmalloc(sizeof(*m), GFP_KERNEL)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm' - possible side-effects?
#79: FILE: include/linux/cpumask.h:161:
+#define	CPUMASK_ALLOC(m)	struct m _m, *m = &_m

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#82: FILE: include/linux/cpumask.h:164:
+#define^ICPUMASK_PTR(v, m) ^Icpumask_t *v = &(m->v)$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around m->v
#82: FILE: include/linux/cpumask.h:164:
+#define	CPUMASK_PTR(v, m) 	cpumask_t *v = &(m->v)

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'v' - possible side-effects?
#82: FILE: include/linux/cpumask.h:164:
+#define	CPUMASK_PTR(v, m) 	cpumask_t *v = &(m->v)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'v' may be better as '(v)' to avoid precedence issues
#82: FILE: include/linux/cpumask.h:164:
+#define	CPUMASK_PTR(v, m) 	cpumask_t *v = &(m->v)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'm' may be better as '(m)' to avoid precedence issues
#82: FILE: include/linux/cpumask.h:164:
+#define	CPUMASK_PTR(v, m) 	cpumask_t *v = &(m->v)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000213395.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 1 warnings, 7 checks, 64 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000213395.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
