WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#92: FILE: Makefile:4:
+EXTRAVERSION = .7
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#186: FILE: arch/x86/kernel/cpuid.c:237:
+	__unregister_chrdev(CPUID_MAJOR, 0, NR_CPUS, "cpu/cpuid");

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#199: FILE: arch/x86/kernel/msr.c:293:
+	__unregister_chrdev(MSR_MAJOR, 0, NR_CPUS, "cpu/msr");

CHECK:BRACES: braces {} should be used on all arms of this statement
#223: FILE: arch/x86/kvm/lapic.c:377:
+		if (trig_mode) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#226: FILE: arch/x86/kvm/lapic.c:380:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#327: FILE: drivers/acpi/processor_idle.c:308:
+		ACPI_DEBUG_PRINT((ACPI_DB_INFO,
+			"C2 latency too large [%d]\n", acpi_gbl_FADT.C2latency));

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#386: FILE: drivers/ata/ahci.c:522:
+	[board_ahci_nosntf] =
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#387: FILE: drivers/ata/ahci.c:523:
+		AHCI_HFLAGS	(AHCI_HFLAG_NO_SNTF),

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#410: FILE: drivers/ata/ahci.c:863:
+		dev_printk(KERN_INFO, &pdev->dev,

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#523: FILE: drivers/hid/usbhid/hid-quirks.c:280:
 	if (idVendor == USB_VENDOR_ID_NCR &&
[...]
+			return HID_QUIRK_NO_INIT_REPORTS;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#566: FILE: drivers/infiniband/ulp/ipoib/ipoib_main.c:887:
+	memset(&neigh->dgid.raw, 0, sizeof (union ib_gid));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#587: FILE: drivers/input/mouse/alps.c:40:
+#define ALPS_PS2_INTERLEAVED	0x80	/* 3-byte PS/2 packet interleaved with
+					   6-byte ALPS packet */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#587: FILE: drivers/input/mouse/alps.c:40:
+					   6-byte ALPS packet */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#746: FILE: drivers/input/mouse/alps.c:256:
+		alps_report_buttons(psmouse, dev2, psmouse->dev,
+				packet[0] & 1, packet[0] & 2, packet[0] & 4);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#749: FILE: drivers/input/mouse/alps.c:259:
+	input_report_rel(dev2, REL_X,
+		packet[1] ? packet[1] - ((packet[0] << 4) & 0x100) : 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#751: FILE: drivers/input/mouse/alps.c:261:
+	input_report_rel(dev2, REL_Y,
+		packet[2] ? ((packet[0] << 3) & 0x100) - packet[2] : 0);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#777: FILE: drivers/input/mouse/alps.c:287:
+	if (psmouse->packet[6] & 0x80) {
+

WARNING:SPLIT_STRING: quoted string split across lines
#789: FILE: drivers/input/mouse/alps.c:299:
+			dbg("refusing packet %x %x %x %x "
+			    "(suspected interleaved ps/2)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#802: FILE: drivers/input/mouse/alps.c:312:
+	} else {
+

WARNING:TYPO_SPELLING: 'becase' may be misspelled - perhaps 'because'?
#810: FILE: drivers/input/mouse/alps.c:320:
+		 * becase the latter is unlikely to happen in course of
 		   ^^^^^^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#843: FILE: drivers/input/mouse/alps.c:353:
+	if (psmouse->pktcnt == 6) {
+

WARNING:SPLIT_STRING: quoted string split across lines
#853: FILE: drivers/input/mouse/alps.c:363:
+			dbg("refusing packet %x %x %x "
+			    "(suspected interleaved ps/2)\n",

WARNING:MISPLACED_INIT: __initconst should be placed after i8042_dmi_noloop_table[]
#943: FILE: drivers/input/serio/i8042-x86ia64io.h:70:
+static const struct dmi_system_id __initconst i8042_dmi_noloop_table[] = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:MISPLACED_INIT: __initconst should be placed after i8042_dmi_nomux_table[]
#1065: FILE: drivers/input/serio/i8042-x86ia64io.h:185:
+static const struct dmi_system_id __initconst i8042_dmi_nomux_table[] = {

WARNING:MISPLACED_INIT: __initconst should be placed after i8042_dmi_reset_table[]
#1316: FILE: drivers/input/serio/i8042-x86ia64io.h:408:
+static const struct dmi_system_id __initconst i8042_dmi_reset_table[] = {

WARNING:MISPLACED_INIT: __initconst should be placed after i8042_dmi_nopnp_table[]
#1392: FILE: drivers/input/serio/i8042-x86ia64io.h:476:
+static const struct dmi_system_id __initconst i8042_dmi_nopnp_table[] = {

WARNING:MISPLACED_INIT: __initconst should be placed after i8042_dmi_laptop_table[]
#1412: FILE: drivers/input/serio/i8042-x86ia64io.h:494:
+static const struct dmi_system_id __initconst i8042_dmi_laptop_table[] = {

WARNING:MISPLACED_INIT: __initconst should be placed after i8042_dmi_dritek_table[]
#1441: FILE: drivers/input/serio/i8042-x86ia64io.h:525:
+static const struct dmi_system_id __initconst i8042_dmi_dritek_table[] = {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1673: FILE: drivers/net/atl1c/atl1c.h:538:
+#define ATL1C_WORK_EVENT_RESET ^I^I0x01$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1774: FILE: drivers/net/atl1c/atl1c_main.c:314:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1782: FILE: drivers/net/atl1c/atl1c_main.c:320:
 
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#2093: FILE: drivers/pci/pcie/aer/aer_inject.c:395:
+	if (find_aer_device(rpdev, &edev)) {
[...]
 	else
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2095: FILE: drivers/pci/pcie/aer/aer_inject.c:397:
+			printk(KERN_WARNING "AER service is not initialized\n");

WARNING:TYPO_SPELLING: 'recieving' may be misspelled - perhaps 'receiving'?
#2555: FILE: drivers/scsi/libfc/fc_lport.c:391:
+ * @lport: The local port recieving the RNID
                           ^^^^^^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#2679: FILE: drivers/scsi/libfc/fc_rport.c:328:
+		if (restart) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2684: FILE: drivers/scsi/libfc/fc_rport.c:333:
+		} else

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2858: FILE: drivers/scsi/lpfc/lpfc_init.c:4388:
+	if (pci_set_dma_mask(pdev, DMA_BIT_MASK(64)) != 0
+	 || pci_set_consistent_dma_mask(pdev,DMA_BIT_MASK(64)) != 0) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2858: FILE: drivers/scsi/lpfc/lpfc_init.c:4388:
+	 || pci_set_consistent_dma_mask(pdev,DMA_BIT_MASK(64)) != 0) {
 	                                    ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2860: FILE: drivers/scsi/lpfc/lpfc_init.c:4390:
+		if (pci_set_dma_mask(pdev, DMA_BIT_MASK(32)) != 0
+		 || pci_set_consistent_dma_mask(pdev,DMA_BIT_MASK(32)) != 0) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2860: FILE: drivers/scsi/lpfc/lpfc_init.c:4390:
+		 || pci_set_consistent_dma_mask(pdev,DMA_BIT_MASK(32)) != 0) {
 		                                    ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2874: FILE: drivers/scsi/lpfc/lpfc_init.c:5948:
+	if (pci_set_dma_mask(pdev, DMA_BIT_MASK(64)) != 0
+	 || pci_set_consistent_dma_mask(pdev,DMA_BIT_MASK(64)) != 0) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2874: FILE: drivers/scsi/lpfc/lpfc_init.c:5948:
+	 || pci_set_consistent_dma_mask(pdev,DMA_BIT_MASK(64)) != 0) {
 	                                    ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2876: FILE: drivers/scsi/lpfc/lpfc_init.c:5950:
+		if (pci_set_dma_mask(pdev, DMA_BIT_MASK(32)) != 0
+		 || pci_set_consistent_dma_mask(pdev,DMA_BIT_MASK(32)) != 0) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2876: FILE: drivers/scsi/lpfc/lpfc_init.c:5950:
+		 || pci_set_consistent_dma_mask(pdev,DMA_BIT_MASK(32)) != 0) {
 		                                    ^

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#3187: FILE: drivers/usb/serial/mos7840.c:199:
 static __devinitdata struct usb_device_id moschip_id_table_combined[] = {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3459: FILE: fs/partitions/efi.c:265:
+	unsigned ssz = bdev_logical_block_size(bdev);

CHECK:SPACING: No space is necessary after a cast
#3471: FILE: fs/partitions/efi.c:274:
+	if (read_lba(bdev, lba, (u8 *) gpt, ssz) < ssz) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3479: FILE: fs/partitions/efi.c:610:
+	unsigned ssz = bdev_logical_block_size(bdev) / 512;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3498: FILE: fs/partitions/efi.c:628:
+		put_partition(state, i+1, start * ssz, size * ssz);
 		                      ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3621: FILE: include/linux/time.h:151:
+extern u64 timekeeping_max_deferment(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPLIT_STRING: quoted string split across lines
#3668: FILE: init/calibrate.c:132:
+			pr_info("Calibrating delay loop (skipped) "
+				"preset value.. ");

WARNING:SPLIT_STRING: quoted string split across lines
#3680: FILE: init/calibrate.c:140:
+			pr_info("Calibrating delay using timer "
+				"specific routine.. ");

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#3696: FILE: init/calibrate.c:177:
+		pr_cont("%lu.%02lu BogoMIPS (lpj=%lu)\n",

CHECK:BRACES: Unbalanced braces around else statement
#3751: FILE: kernel/cpu.c:405:
+		else {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cpu_isolated_map"
#3826: FILE: kernel/sched.c:9599:
+	if (cpu_isolated_map == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#3944: FILE: kernel/time/clocksource.c:447:
+	max_cycles = min_t(u64, max_cycles, (u64) cs->mask);

WARNING:TABSTOP: Statements should start on a tabstop
#4049: FILE: kernel/time/tick-sched.c:379:
+		 if (unlikely(expires.tv64 == KTIME_MAX)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#4107: FILE: net/netfilter/xt_conntrack.c:117:
+             u16 state_mask, u16 status_mask)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4107: FILE: net/netfilter/xt_conntrack.c:117:
+             u16 state_mask, u16 status_mask)$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4308: FILE: sound/pci/ice1712/juli.c:508:
+ * */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000018707.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 31 warnings, 24 checks, 3755 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000018707.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
