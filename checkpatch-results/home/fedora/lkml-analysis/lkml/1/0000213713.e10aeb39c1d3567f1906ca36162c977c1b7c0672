WARNING:EMAIL_SUBJECT: A patch subject line should describe the change not the tool that found it
#15: 
Subject: [PATCH 31/42] Staging: PCC-ACPI: Fix all checkpatch errors

Naming the tool that found the issue is not very useful in the
subject line.  A good subject line summarizes the change that
the patch brings.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#44: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:30:
+ * ^I^I^Iadd /proc/acpi/pcc/brightness interface to$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#45: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:31:
+ * ^I^I^Iallow HAL to access.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#122: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:219:
+			      * as SINF_CUR_BRIGHT and don't know AC state */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#136: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:239:
 static int __devinit acpi_pcc_hotkey_add(struct acpi_device *device);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#138: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:240:
+static int __devexit acpi_pcc_hotkey_remove(struct acpi_device *device,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#174: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:297:
+	status = acpi_evaluate_object(hotkey->handle, METHOD_HKEY_SSET,
+								&params, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#184: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:310:
+	status = acpi_evaluate_integer(device->handle, METHOD_HKEY_SQTY,
+								NULL, &s);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#207: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:333:
+		ACPI_DEBUG_PRINT((ACPI_DB_ERROR,
+				 "evaluation error HKEY.SINF\n"));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#217: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:346:
+		ACPI_DEBUG_PRINT((ACPI_DB_ERROR,
+				 "SQTY reports bad SINF length\n"));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#227: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:357:
+			ACPI_DEBUG_PRINT((ACPI_DB_ERROR,
+					 "Invalid HKEY.SINF data\n"));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#243: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:380:
+		ACPI_DEBUG_PRINT((ACPI_DB_ERROR,
+				 "Couldn't retrieve BIOS data\n"));

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#281: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:425:
+^Istruct acpi_hotkey ^I*hotkey = seq->private;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#369: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:504:
+		ACPI_DEBUG_PRINT((ACPI_DB_ERROR,
+				 "Couldn't retrieve BIOS data\n"));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#503: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:626:
+		/*  3 */ -1, /* vga/lcd switch event is not occur on
+				hotkey driver. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#503: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:626:
+				hotkey driver. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hkey_num > ARRAY_SIZE(key_map)'
#518: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:643:
+	if ((0 > hkey_num) ||
 	    (hkey_num > ARRAY_SIZE(key_map))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#518: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:643:
+	if ((0 > hkey_num) ||

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#529: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:669:
+	status = acpi_evaluate_integer(hotkey->handle, METHOD_HKEY_QUERY,
+								NULL, &result);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#537: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:674:
+		ACPI_DEBUG_PRINT((ACPI_DB_ERROR,
+			"error getting hotkey status\n"));

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#552: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:689:
+			 * when Fn+F4 pressed */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#554: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:691:
+			acpi_bus_generate_proc_event(hotkey->device, event,
+								hotkey->status);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#612: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:724:
+static struct file_operations acpi_pcc_numbatteries_fops =

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct file_operations should normally be const
#614: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:726:
+static struct file_operations acpi_pcc_lcdtype_fops =

WARNING:CONST_STRUCT: struct file_operations should normally be const
#616: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:728:
+static struct file_operations acpi_pcc_mute_fops =

WARNING:CONST_STRUCT: struct file_operations should normally be const
#618: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:730:
+static struct file_operations acpi_pcc_ac_brightness_fops =

WARNING:CONST_STRUCT: struct file_operations should normally be const
#621: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:733:
+static struct file_operations acpi_pcc_ac_brightness_max_fops =

WARNING:CONST_STRUCT: struct file_operations should normally be const
#623: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:735:
+static struct file_operations acpi_pcc_ac_brightness_min_fops =

WARNING:CONST_STRUCT: struct file_operations should normally be const
#625: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:737:
+static struct file_operations acpi_pcc_dc_brightness_fops =

WARNING:CONST_STRUCT: struct file_operations should normally be const
#628: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:740:
+static struct file_operations acpi_pcc_dc_brightness_max_fops =

WARNING:CONST_STRUCT: struct file_operations should normally be const
#630: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:742:
+static struct file_operations acpi_pcc_dc_brightness_min_fops =

WARNING:CONST_STRUCT: struct file_operations should normally be const
#632: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:744:
+static struct file_operations acpi_pcc_brightness_fops =

WARNING:CONST_STRUCT: struct file_operations should normally be const
#635: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:747:
+static struct file_operations acpi_pcc_sticky_key_fops =

WARNING:CONST_STRUCT: struct file_operations should normally be const
#637: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:749:
+static struct file_operations acpi_pcc_keyinput_fops =

WARNING:CONST_STRUCT: struct file_operations should normally be const
#639: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:751:
+static struct file_operations acpi_pcc_version_fops =

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#662: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:762:
+	{ "num_batteries", &acpi_pcc_numbatteries_fops, S_IRUGO },

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#663: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:763:
+	{ "lcd_type", &acpi_pcc_lcdtype_fops, S_IRUGO },

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#664: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:764:
+	{ "ac_brightness_max", &acpi_pcc_ac_brightness_max_fops, S_IRUGO },

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#665: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:765:
+	{ "ac_brightness_min", &acpi_pcc_ac_brightness_min_fops, S_IRUGO },

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#667: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:767:
+		S_IFREG | S_IRUGO | S_IWUSR },

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#668: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:768:
+	{ "dc_brightness_max", &acpi_pcc_dc_brightness_max_fops, S_IRUGO },

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#669: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:769:
+	{ "dc_brightness_min", &acpi_pcc_dc_brightness_min_fops, S_IRUGO },

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#671: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:771:
+		S_IFREG | S_IRUGO | S_IWUSR },

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#672: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:772:
+	{ "brightness", &acpi_pcc_brightness_fops, S_IFREG | S_IRUGO | S_IWUSR},

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#673: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:773:
+	{ "mute", &acpi_pcc_mute_fops, S_IFREG | S_IRUGO | S_IWUSR },

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#682: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:778:
+	{ "sticky_key", &acpi_pcc_sticky_key_fops, S_IFREG | S_IRUGO | S_IWUSR},

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#683: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:779:
+	{ "keyinput", &acpi_pcc_keyinput_fops, S_IFREG | S_IRUGO | S_IWUSR },

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#684: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:780:
+	{ "version", &acpi_pcc_version_fops, S_IRUGO },

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#688: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:784:
 static int __devinit acpi_pcc_add_device(struct acpi_device *device,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#714: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:804:
+				remove_proc_entry(item->name,
+					hotkey->proc_dir_entry);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#719: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:812:
 static int __devinit acpi_pcc_proc_init(struct acpi_device *device)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#733: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:824:
+		ACPI_DEBUG_PRINT((ACPI_DB_ERROR,
+				 "Couldn't create dir in /proc\n"));

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#752: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:844:
 static void __devexit acpi_pcc_remove_device(struct acpi_device *device,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "item->name"
#765: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:853:
+	     item->name != NULL && i < num;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!device"
#775: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:872:
+	if (device == NULL || hotkey == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hotkey"
#775: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:872:
+	if (device == NULL || hotkey == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#781: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:877:
+		ACPI_DEBUG_PRINT((ACPI_DB_INFO, "Sticky mode restore: %d\n",
+				 hotkey->sticky_mode));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#799: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:906:
+		ACPI_DEBUG_PRINT((ACPI_DB_ERROR,
+				 "Couldn't allocate input device for hotkey"));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#808: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:914:
+		ACPI_DEBUG_PRINT((ACPI_DB_ERROR,
+				 "Couldn't allocate mem for private data"));

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#828: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:979:
+static int __devinit acpi_pcc_hotkey_add(struct acpi_device *device)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!device"
#837: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:987:
+	if (device == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#849: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:1007:
+		ACPI_DEBUG_PRINT((ACPI_DB_ERROR,
+				 "Couldn't allocate mem for hotkey"));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#859: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:1025:
+		ACPI_DEBUG_PRINT((ACPI_DB_ERROR,
+				 "Error installing notify handler\n"));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#868: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:1033:
+		ACPI_DEBUG_PRINT((ACPI_DB_ERROR,
+				 "Error installing keyinput handler\n"));

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#877: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:1041:
+static int __devexit acpi_pcc_hotkey_remove(struct acpi_device *device,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#906: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:1065:
+		ACPI_DEBUG_PRINT((ACPI_DB_ERROR,
+				 "Error removing notify handler\n"));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#923: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:1092:
+		ACPI_DEBUG_PRINT((ACPI_DB_ERROR,
+				 "Error registering hotkey driver\n"));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000213713.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 42 warnings, 25 checks, 843 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000213713.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
