ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#77: FILE: arch/arm/mach-omap2/cpuidle34xx.c:265:
+		}
+		else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#77: FILE: arch/arm/mach-omap2/cpuidle34xx.c:265:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#78: FILE: arch/arm/mach-omap2/cpuidle34xx.c:266:
+			if ((omap3_power_states[i].mpu_state
[...]
+			omap3_power_states[i].valid = 0;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'omap3_power_states[i].mpu_state
 					== PWRDM_POWER_OFF'
#78: FILE: arch/arm/mach-omap2/cpuidle34xx.c:266:
+			if ((omap3_power_states[i].mpu_state
+					== PWRDM_POWER_OFF)
+				|| (omap3_power_states[i].core_state
+					== PWRDM_POWER_RET))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'omap3_power_states[i].core_state
 					== PWRDM_POWER_RET'
#78: FILE: arch/arm/mach-omap2/cpuidle34xx.c:266:
+			if ((omap3_power_states[i].mpu_state
+					== PWRDM_POWER_OFF)
+				|| (omap3_power_states[i].core_state
+					== PWRDM_POWER_RET))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#80: FILE: arch/arm/mach-omap2/cpuidle34xx.c:268:
+					== PWRDM_POWER_OFF)
+				|| (omap3_power_states[i].core_state

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#107: FILE: arch/arm/mach-omap2/pm.h:89:
+extern void omap3_cpuidle_update_states(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000076133.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 1 warnings, 5 checks, 68 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000076133.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
