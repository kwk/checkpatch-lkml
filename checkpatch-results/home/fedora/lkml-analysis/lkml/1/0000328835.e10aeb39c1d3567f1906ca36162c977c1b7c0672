CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#47: FILE: include/net/ip_fib.h:221:
+extern int fib_sync_down_dev(struct net_device *dev, int force);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#48: FILE: include/net/ip_fib.h:222:
+extern int fib_sync_down_addr(__be32 local);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fib_info_laddrhash"
#101: FILE: net/ipv4/fib_semantics.c:1042:
+	if (fib_info_laddrhash == NULL || local == 0)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#155: FILE: net/ipv4/fib_semantics.c:1071:
+		BUG_ON(!fi->fib_nhs);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#161: FILE: net/ipv4/fib_semantics.c:1077:
+			if (nh->nh_flags&RTNH_F_DEAD)
 			                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#161: FILE: net/ipv4/fib_semantics.c:1077:
+			if (nh->nh_flags&RTNH_F_DEAD)
[...]
+			else if (nh->nh_dev == dev &&
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#164: FILE: net/ipv4/fib_semantics.c:1080:
+			else if (nh->nh_dev == dev &&
+					nh->nh_scope != scope) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000328835.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 1 warnings, 6 checks, 148 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000328835.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
