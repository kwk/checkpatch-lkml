CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#79: FILE: drivers/char/sonypi.c:781:
+	while (kfifo_get_locked(&sonypi_device.input_fifo, (unsigned char *)&kp,
+			 sizeof(kp), &sonypi_device.input_fifo_lock)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#91: FILE: drivers/char/sonypi.c:832:
+		kfifo_put_locked(&sonypi_device.input_fifo,
+			(unsigned char *)&kp, sizeof(kp),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#102: FILE: drivers/char/sonypi.c:886:
+	kfifo_put_locked(&sonypi_device.fifo, (unsigned char *)&event,
+			sizeof(event), &sonypi_device.fifo_lock);

CHECK:SPACING: No space is necessary after a cast
#152: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:89:
+		kfifo_get_locked(fifo, (unsigned char *) &entry,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:90:
+		kfifo_get_locked(fifo, (unsigned char *) &entry,
+				sizeof(u32), fifo_lock);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#172: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:180:
+static u32 cxio_hal_get_resource(struct kfifo *fifo, spinlock_t * lock)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#176: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:183:
+	if (kfifo_get_locked(fifo, (unsigned char *) &entry, sizeof(u32), lock))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#183: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:189:
+static void cxio_hal_put_resource(struct kfifo *fifo, spinlock_t * lock,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#184: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:190:
+static void cxio_hal_put_resource(struct kfifo *fifo, spinlock_t * lock,
+		u32 entry)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#187: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:192:
+	BUG_ON(

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#187: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:192:
+	BUG_ON(

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: No space is necessary after a cast
#188: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:193:
+	kfifo_put_locked(fifo, (unsigned char *) &entry, sizeof(u32), lock)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#255: FILE: drivers/media/video/meye.c:804:
+		if (kfifo_get_locked(&meye.grabq, (unsigned char *)&reqnr,
+			      sizeof(int), &meye.grabq_lock) != sizeof(int)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#265: FILE: drivers/media/video/meye.c:815:
+		kfifo_put_locked(&meye.doneq, (unsigned char *)&reqnr,
+				sizeof(int), &meye.doneq_lock);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#276: FILE: drivers/media/video/meye.c:825:
+		if (kfifo_get_locked(&meye.grabq, (unsigned char *)&reqnr,
+			      sizeof(int), &meye.grabq_lock) != sizeof(int)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#286: FILE: drivers/media/video/meye.c:836:
+		kfifo_put_locked(&meye.doneq, (unsigned char *)&reqnr,
+				sizeof(int), &meye.doneq_lock);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: drivers/media/video/meye.c:972:
+		kfifo_get_locked(&meye.doneq, (unsigned char *)&unused,
+				sizeof(int), &meye.doneq_lock);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#316: FILE: drivers/media/video/meye.c:1460:
+	kfifo_put_locked(&meye.grabq, (unsigned char *)&buf->index,
+			sizeof(int), &meye.grabq_lock);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#327: FILE: drivers/media/video/meye.c:1487:
+	if (!kfifo_get_locked(&meye.doneq, (unsigned char *)&reqnr,
+		       sizeof(int), &meye.doneq_lock)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#338: FILE: drivers/media/video/meye.c:1755:
+	if (kfifo_alloc(&meye.grabq, sizeof(int) * MEYE_MAX_BUFNBRS,
+				GFP_KERNEL)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#346: FILE: drivers/media/video/meye.c:1761:
+	if (kfifo_alloc(&meye.doneq, sizeof(int) * MEYE_MAX_BUFNBRS,
+				GFP_KERNEL)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#380: FILE: drivers/platform/x86/fujitsu-laptop.c:1010:
+				status = kfifo_put_locked(&fujitsu_hotkey->fifo,
 						   (unsigned char *)&keycode,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#396: FILE: drivers/platform/x86/fujitsu-laptop.c:1023:
+					kfifo_get_locked(

CHECK:SPACING: No space is necessary after a cast
#398: FILE: drivers/platform/x86/fujitsu-laptop.c:1025:
+					 (unsigned char *) &keycode_r,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#415: FILE: drivers/platform/x86/sony-laptop.c:304:
+	while (kfifo_get_locked(&sony_laptop_input.fifo, (unsigned char *)&kp,
+			sizeof(kp), &sony_laptop_input.fifo_lock)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#427: FILE: drivers/platform/x86/sony-laptop.c:367:
+		kfifo_put_locked(&sony_laptop_input.fifo,
+			  (unsigned char *)&kp, sizeof(kp),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#458: FILE: drivers/platform/x86/sony-laptop.c:2314:
+	kfifo_put_locked(&sonypi_compat.fifo, (unsigned char *)&event,
+			sizeof(event), &sonypi_compat.fifo_lock);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#480: FILE: drivers/scsi/libiscsi.c:2255:
+	kfifo_init(&q->queue, (void*)q->pool, max * sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#480: FILE: drivers/scsi/libiscsi.c:2255:
+	kfifo_init(&q->queue, (void*)q->pool, max * sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#492: FILE: drivers/scsi/libiscsi_tcp.c:1131:
+		      session->max_r2t * 4 * sizeof(void*), GFP_KERNEL)) {

CHECK:SPACING: No space is necessary after a cast
#505: FILE: drivers/scsi/libsrp.c:61:
+	kfifo_init(&q->queue, (void *) q->pool, max * sizeof(void *));

CHECK:SPACING: No space is necessary after a cast
#514: FILE: drivers/scsi/libsrp.c:167:
+	kfifo_get_locked(&target->iu_queue.queue, (void *) &iue,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#515: FILE: drivers/scsi/libsrp.c:168:
+	kfifo_get_locked(&target->iu_queue.queue, (void *) &iue,
+			sizeof(void *), &target->iu_queue.lock);

CHECK:SPACING: No space is necessary after a cast
#524: FILE: drivers/scsi/libsrp.c:180:
+	kfifo_put_locked(&iue->target->iu_queue.queue, (void *) &iue,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#525: FILE: drivers/scsi/libsrp.c:181:
+	kfifo_put_locked(&iue->target->iu_queue.queue, (void *) &iue,
+			sizeof(void *), &iue->target->iu_queue.lock);

WARNING:MEMORY_BARRIER: memory barrier without comment
#615: FILE: include/linux/kfifo.h:72:
+	smp_rmb();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#636: FILE: include/linux/kfifo.h:88:
+static inline __must_check unsigned int kfifo_put_locked(struct kfifo *fifo,
+		const unsigned char *from, unsigned int n, spinlock_t *lock)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#669: FILE: include/linux/kfifo.h:113:
+static inline __must_check unsigned int kfifo_get_locked(struct kfifo *fifo,
+	unsigned char *to, unsigned int n, spinlock_t *lock)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000056246.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 2 warnings, 31 checks, 662 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000056246.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
