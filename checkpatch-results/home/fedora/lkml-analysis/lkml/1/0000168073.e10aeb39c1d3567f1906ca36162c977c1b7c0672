WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#37: 
more completely by making the limit fully dynamic (upto the 128 boundary)
                                                   ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#123: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:466:
+		printk(KERN_WARNING

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#128: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:471:
+		bank = kmalloc(banks * sizeof(u64), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#160: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:498:
+		wrmsrl(MSR_IA32_MC0_CTL+4*i, bank[i]);
 		                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#160: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:498:
+		wrmsrl(MSR_IA32_MC0_CTL+4*i, bank[i]);
 		                         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#212: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:848:
+	u64 b = bank[attr - bank_attrs];
+	return sprintf(buf, "%Lx\n", b);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#212: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:848:
+	return sprintf(buf, "%Lx\n", b);

WARNING:CONSIDER_KSTRTO: simple_strtoull is obsolete, use kstrtoull instead
#219: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:855:
+	u64 new = simple_strtoull(buf, &end, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:LINE_SPACING: Missing a blank line after declarations
#220: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:856:
+	u64 new = simple_strtoull(buf, &end, 0);
+	if (end == buf)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#224: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:860:
+	return end-buf;
 	          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#244: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:919:
+		err = sysdev_create_file(&per_cpu(device_mce, cpu),
+					&bank_attrs[i]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#254: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:929:
+		sysdev_remove_file(&per_cpu(device_mce, cpu),
+					&bank_attrs[i]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#268: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:953:
+		sysdev_remove_file(&per_cpu(device_mce, cpu),
+			&bank_attrs[i]);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*bank_attrs)...) over kzalloc(sizeof(struct sysdev_attribute)...)
#280: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:1022:
+	bank_attrs = kzalloc(sizeof(struct sysdev_attribute) * banks,

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#280: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:1022:
+	bank_attrs = kzalloc(sizeof(struct sysdev_attribute) * banks,
+				GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#281: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:1023:
+	bank_attrs = kzalloc(sizeof(struct sysdev_attribute) * banks,
+				GFP_KERNEL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#287: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:1029:
+		struct sysdev_attribute *a = &bank_attrs[i];
+		a->attr.name = kasprintf(GFP_KERNEL, "bank%d", i);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000168073.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 8 checks, 244 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000168073.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
