WARNING:EMAIL_SUBJECT: A patch subject line should describe the change not the tool that found it
#21: 
Subject: [PATCH 3/3] Staging:dt3155: fix coding style issue in dt3155_isr.c This is a patch to the dt3155_isr.c file that fixes up a coding style warning and errors found by the checkpatch.pl tool

Naming the tool that found the issue is not very useful in the
subject line.  A good subject line summarizes the change that
the patch brings.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: drivers/staging/dt3155/dt3155_isr.c:82:
+  return dt3155_fbuffer[m]->empty_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: drivers/staging/dt3155/dt3155_isr.c:97:
+  dt3155_fbuffer[m]->empty_buffers[dt3155_fbuffer[m]->empty_len] = index;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: drivers/staging/dt3155/dt3155_isr.c:108:
+  return dt3155_fbuffer[m]->empty_buffers[dt3155_fbuffer[m]->empty_len];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: drivers/staging/dt3155/dt3155_isr.c:117:
+  return ((dt3155_fbuffer[m]->ready_len) == 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: drivers/staging/dt3155/dt3155_isr.c:129:
+  return dt3155_fbuffer[m]->ready_len == dt3155_fbuffer[m]->nbuffers;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: drivers/staging/dt3155/dt3155_isr.c:141:
+  dt3155_fbuffer[m]->ready_que[head] = index;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: drivers/staging/dt3155/dt3155_isr.c:142:
+  dt3155_fbuffer[m]->ready_head = ((head + 1) %$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: drivers/staging/dt3155/dt3155_isr.c:144:
+  dt3155_fbuffer[m]->ready_len++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: drivers/staging/dt3155/dt3155_isr.c:156:
+  return (dt3155_fbuffer[m]->ready_head -$

CHECK:SPACING: space preferred before that '%' (ctx:VxE)
#177: FILE: drivers/staging/dt3155/dt3155_isr.c:158:
+	   dt3155_fbuffer[m]->nbuffers)%
 	                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: drivers/staging/dt3155/dt3155_isr.c:175:
+  dt3155_fbuffer[m]->ready_len--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: drivers/staging/dt3155/dt3155_isr.c:176:
+  return dt3155_fbuffer[m]->ready_que[tail];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: drivers/staging/dt3155/dt3155_isr.c:186:
+  int head = dt3155_fbuffer[m]->ready_head;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: drivers/staging/dt3155/dt3155_isr.c:188:
+  int num = dt3155_fbuffer[m]->nbuffers;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: drivers/staging/dt3155/dt3155_isr.c:195:
+    for (index = tail; index != head; index++, index = index % (num)) {$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#222: FILE: drivers/staging/dt3155/dt3155_isr.c:197:
+	printk(" %d ", frame_index);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: drivers/staging/dt3155/dt3155_isr.c:201:
+    for (index = 0; index < dt3155_fbuffer[m]->empty_len; index++) {$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#232: FILE: drivers/staging/dt3155/dt3155_isr.c:203:
+	printk(" %d ", frame_index);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: drivers/staging/dt3155/dt3155_isr.c:206:
+  frame_index = dt3155_fbuffer[m]->active_buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: drivers/staging/dt3155/dt3155_isr.c:209:
+  frame_index = dt3155_fbuffer[m]->locked_buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: drivers/staging/dt3155/dt3155_isr.c:210:
+  printk("\n L: %d\n", frame_index);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#242: FILE: drivers/staging/dt3155/dt3155_isr.c:210:
+  printk("\n L: %d\n", frame_index);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: drivers/staging/dt3155/dt3155_isr.c:223:
+    if (((buf_addr+bufsize) & UPPER_10_BITS) != (buf_addr & UPPER_10_BITS))$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#257: FILE: drivers/staging/dt3155/dt3155_isr.c:223:
+    if (((buf_addr+bufsize) & UPPER_10_BITS) != (buf_addr & UPPER_10_BITS))
                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#258: FILE: drivers/staging/dt3155/dt3155_isr.c:224:
+	return (buf_addr+bufsize) & UPPER_10_BITS;
 	                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: drivers/staging/dt3155/dt3155_isr.c:225:
+    else$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#269: FILE: drivers/staging/dt3155/dt3155_isr.c:237:
+void allocate_buffers(u32 *buf_addr, u32* total_size_kbs,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#270: FILE: drivers/staging/dt3155/dt3155_isr.c:238:
+void allocate_buffers(u32 *buf_addr, u32* total_size_kbs,
 		       u32 bufsize)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: drivers/staging/dt3155/dt3155_isr.c:270:
+    if (size_kbs > min_size_kbs) {$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#283: FILE: drivers/staging/dt3155/dt3155_isr.c:271:
+	if ((*buf_addr = allocator_allocate_dma(size_kbs, GFP_KERNEL)) != 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#284: FILE: drivers/staging/dt3155/dt3155_isr.c:272:
+		printk("DT3155:  Managed to allocate: %d KB\n", size_kbs);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: drivers/staging/dt3155/dt3155_isr.c:278:
+  printk("DT3155: Allocator failed!\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#292: FILE: drivers/staging/dt3155/dt3155_isr.c:278:
+  printk("DT3155: Allocator failed!\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: drivers/staging/dt3155/dt3155_isr.c:314:
+    for (m = 0; m < ndevices; m++) {$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around dt3155_status[m].fbuffer
#304: FILE: drivers/staging/dt3155/dt3155_isr.c:315:
+	dt3155_fbuffer[m] = &(dt3155_status[m].fbuffer);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: No space is necessary after a cast
#311: FILE: drivers/staging/dt3155/dt3155_isr.c:319:
+	u8 *ptr = (u8 *) dt3155_fbuffer[m];

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: drivers/staging/dt3155/dt3155_isr.c:326:
+  allocate_buffers(&rambuff_addr, &rambuff_size, bufsize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: drivers/staging/dt3155/dt3155_isr.c:328:
+  printk("  - rambuf_addr = 0x%x\n", rambuff_addr);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#328: FILE: drivers/staging/dt3155/dt3155_isr.c:328:
+  printk("  - rambuf_addr = 0x%x\n", rambuff_addr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: drivers/staging/dt3155/dt3155_isr.c:329:
+  printk("  - length (kb) = %u\n", rambuff_size);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#329: FILE: drivers/staging/dt3155/dt3155_isr.c:329:
+  printk("  - length (kb) = %u\n", rambuff_size);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: drivers/staging/dt3155/dt3155_isr.c:330:
+    if (rambuff_addr == 0) {$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#331: FILE: drivers/staging/dt3155/dt3155_isr.c:331:
+	printk(KERN_INFO

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: drivers/staging/dt3155/dt3155_isr.c:341:
+    for (index = 0; index < MAXBUFFERS; index++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: drivers/staging/dt3155/dt3155_isr.c:346:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: drivers/staging/dt3155/dt3155_isr.c:351:
+    if (numbufs < 2) {$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#363: FILE: drivers/staging/dt3155/dt3155_isr.c:352:
+	printk(KERN_INFO

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: drivers/staging/dt3155/dt3155_isr.c:355:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: drivers/staging/dt3155/dt3155_isr.c:359:
+    rambuff_acm = rambuff_addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: drivers/staging/dt3155/dt3155_isr.c:360:
+    for (m = 0; m < ndevices; m++) {$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#406: FILE: drivers/staging/dt3155/dt3155_isr.c:370:
+			printk("DT3155 PROGRAM ERROR (GCS)\n"

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#414: FILE: drivers/staging/dt3155/dt3155_isr.c:378:
+		/* printk("  - Buffer : %lx\n",
+		* dt3155_fbuffer[m]->frame_info[index].addr);

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#447: FILE: drivers/staging/dt3155/dt3155_isr.c:398:
+	printk("Available buffers for device %d: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#448: FILE: drivers/staging/dt3155/dt3155_isr.c:399:
+	printk("Available buffers for device %d: %d\n",
+	    m, dt3155_fbuffer[m]->nbuffers);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: drivers/staging/dt3155/dt3155_isr.c:402:
+    return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: drivers/staging/dt3155/dt3155_isr.c:416:
+    if (dt3155_fbuffer[m]->locked_buf >= 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: drivers/staging/dt3155/dt3155_isr.c:452:
+  internal_release_locked_buffer(m);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: drivers/staging/dt3155/dt3155_isr.c:453:
+  dt3155_fbuffer[m]->empty_len = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#502: FILE: drivers/staging/dt3155/dt3155_isr.c:455:
+    for (index = 0; index < dt3155_fbuffer[m]->nbuffers; index++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#507: FILE: drivers/staging/dt3155/dt3155_isr.c:459:
+  dt3155_fbuffer[m]->active_buf = pop_empty(m);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#511: FILE: drivers/staging/dt3155/dt3155_isr.c:461:
+  dt3155_fbuffer[m]->even_happened = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#512: FILE: drivers/staging/dt3155/dt3155_isr.c:462:
+  dt3155_fbuffer[m]->even_stopped  = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#517: FILE: drivers/staging/dt3155/dt3155_isr.c:465:
+  dt3155_fbuffer[m]->ready_head = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#518: FILE: drivers/staging/dt3155/dt3155_isr.c:466:
+  dt3155_fbuffer[m]->ready_len = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#536: FILE: drivers/staging/dt3155/dt3155_isr.c:490:
+  printques(m);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#540: FILE: drivers/staging/dt3155/dt3155_isr.c:493:
+  internal_release_locked_buffer(m);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#548: FILE: drivers/staging/dt3155/dt3155_isr.c:495:
+    if (is_ready_buf_empty(m))$

CHECK:BRACES: braces {} should be used on all arms of this statement
#548: FILE: drivers/staging/dt3155/dt3155_isr.c:495:
+    if (is_ready_buf_empty(m))
[...]
+    else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#550: FILE: drivers/staging/dt3155/dt3155_isr.c:497:
+    else {$

CHECK:BRACES: Unbalanced braces around else statement
#550: FILE: drivers/staging/dt3155/dt3155_isr.c:497:
+    else {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#557: FILE: drivers/staging/dt3155/dt3155_isr.c:503:
+  printques(m);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000000371.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 62 warnings, 9 checks, 505 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000000371.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
