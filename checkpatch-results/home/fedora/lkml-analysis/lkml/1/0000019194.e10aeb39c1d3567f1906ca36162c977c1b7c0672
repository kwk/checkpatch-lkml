WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
      qla2xxx: Perform fast mailbox read of flash regardless of size nor address alignment.

WARNING:INCLUDE_LINUX: Use #include <linux/compat.h> instead of <asm/compat.h>
#130: FILE: drivers/s390/scsi/zfcp_cfdc.c:15:
+#include <asm/compat.h>

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#177: FILE: drivers/s390/scsi/zfcp_ext.h:111:
+extern int zfcp_fc_timeout_bsg_job(struct fc_bsg_job *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fc_bsg_job *' should also have an identifier name
#177: FILE: drivers/s390/scsi/zfcp_ext.h:111:
+extern int zfcp_fc_timeout_bsg_job(struct fc_bsg_job *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:SPACING: No space is necessary after a cast
#240: FILE: drivers/s390/scsi/zfcp_fc.c:692:
+	adapter = (struct zfcp_adapter *) job->shost->hostdata[0];

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#249: FILE: drivers/s390/scsi/zfcp_fc.c:701:
+		return &adapter->gs->ts;
+		break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#252: FILE: drivers/s390/scsi/zfcp_fc.c:704:
+		return &adapter->gs->ds;
+		break;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#458: FILE: drivers/scsi/aacraid/aachba.c:317:
+			 * receives a response from F/W */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#491: FILE: drivers/scsi/aacraid/aachba.c:1259:
+		 * getting the response from the F/W */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#531: FILE: drivers/scsi/aacraid/aachba.c:1658:
+		printk(KERN_WARNING "aac_read: fib allocation failed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aac_read', this function's name, in a string
#531: FILE: drivers/scsi/aacraid/aachba.c:1658:
+		printk(KERN_WARNING "aac_read: fib allocation failed\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#548: FILE: drivers/scsi/aacraid/aachba.c:1744:
+		printk(KERN_WARNING "aac_write: fib allocation failed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aac_write', this function's name, in a string
#548: FILE: drivers/scsi/aacraid/aachba.c:1744:
+		printk(KERN_WARNING "aac_write: fib allocation failed\n");

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#571: FILE: drivers/scsi/aacraid/aacraid.h:1040:
+	spinlock_t		manage_lock;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#738: FILE: drivers/scsi/aacraid/commsup.c:484:
+	if (wait) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#741: FILE: drivers/scsi/aacraid/commsup.c:487:
+			printk(KERN_INFO "No management Fibs Available:%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#742: FILE: drivers/scsi/aacraid/commsup.c:488:
+			printk(KERN_INFO "No management Fibs Available:%d\n",
+						dev->management_fib_count);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#753: FILE: drivers/scsi/aacraid/commsup.c:498:
+		printk(KERN_ERR "aac_fib_send: returned -EBUSY\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aac_fib_send', this function's name, in a string
#753: FILE: drivers/scsi/aacraid/commsup.c:498:
+		printk(KERN_ERR "aac_fib_send: returned -EBUSY\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#773: FILE: drivers/scsi/aacraid/commsup.c:551:
+			 * down_interruptible must_check */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#814: FILE: drivers/scsi/aacraid/commsup.c:1399:
+			 * the response from the F/W */

CHECK:CAMELCASE: Avoid CamelCase: <SendHostTime>
#833: FILE: drivers/scsi/aacraid/commsup.c:1816:
+					status = aac_fib_send(SendHostTime,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#834: FILE: drivers/scsi/aacraid/commsup.c:1817:
+					status = aac_fib_send(SendHostTime,
 						fibptr,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#843: FILE: drivers/scsi/aacraid/commsup.c:1824:
+					 * receives a response from F/W */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#847: FILE: drivers/scsi/aacraid/commsup.c:1828:
+					 * getting the response from the F/W */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "scb"
#944: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:3174:
+				if (scb != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "scb"
#968: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:3200:
+			if (scb != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "scb"
#992: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:3226:
+			if (scb != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "scb"
#1010: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:3263:
+	if (scb != NULL && printerror != 0

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1209: FILE: include/scsi/scsi_bsg_fc.h:295:
+} __attribute__((packed));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000019194.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 19 warnings, 11 checks, 931 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000019194.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
