CHECK:SPACING: No space is necessary after a cast
#109: FILE: fs/union.c:484:
+	struct dentry *topmost_dentry = (struct dentry *) buf;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#127: FILE: fs/union.c:502:
+		printk(KERN_WARNING "%s: error looking up %s\n", __func__,

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#137: FILE: fs/union.c:512:
+	 * system, it is a whiteout, or it is a fallthru.  In each

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#145: FILE: fs/union.c:520:
+	 * If the entry doesn't exist, create a fallthru entry in the

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#148: FILE: fs/union.c:523:
+	 * storing a fallthru entry.

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#167: FILE: fs/union.c:542:
+ * objects as "fallthru" entries.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#190: FILE: fs/union.c:565:
+	BUG_ON(IS_OPAQUE(topmost_dentry->d_inode));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#197: FILE: fs/union.c:572:
+	 * the lower entries.  Only fallthru entries pass through to

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#205: FILE: fs/union.c:580:
+		struct file * ftmp;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#206: FILE: fs/union.c:581:
+		struct inode * inode;

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#208: FILE: fs/union.c:583:
+		/* XXX Permit fallthrus on lower-level? Would need to

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#210: FILE: fs/union.c:585:
+		 * only copy up fallthru entries there.  We allow

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#211: FILE: fs/union.c:586:
+		 * fallthrus in lower level opaque directories on

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#213: FILE: fs/union.c:588:
+		 * other in both places. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#223: FILE: fs/union.c:598:
+			printk (KERN_ERR "unable to open dir %s for "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#223: FILE: fs/union.c:598:
+			printk (KERN_ERR "unable to open dir %s for "

WARNING:SPLIT_STRING: quoted string split across lines
#224: FILE: fs/union.c:599:
+			printk (KERN_ERR "unable to open dir %s for "
+				"directory copyup: %ld\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#263: FILE: include/linux/union.h:56:
+extern int union_copyup_dir(struct path *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct path *' should also have an identifier name
#263: FILE: include/linux/union.h:56:
+extern int union_copyup_dir(struct path *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#271: FILE: include/linux/union.h:70:
+#define union_copyup_dir(x)		({ BUG(); (0); })

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000005284.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 16 warnings, 2 checks, 213 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000005284.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
