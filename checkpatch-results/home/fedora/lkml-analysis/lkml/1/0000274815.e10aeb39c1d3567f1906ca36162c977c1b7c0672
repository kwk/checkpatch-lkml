WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
a simple nop.  If no functions were recorded, the daemon goes back to sleep.

CHECK:BRACES: braces {} should be used on all arms of this statement
#127: FILE: kernel/trace/ftrace.c:483:
+	if (*command & FTRACE_ENABLE_CALLS) {
[...]
-	else if (*command & FTRACE_DISABLE_CALLS)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPLIT_STRING: quoted string split across lines
#214: FILE: kernel/trace/ftrace.c:698:
 				pr_info("hm, dftrace overflow: %lu change%s"
+					" (%lu total) in %lu usec%s\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#239: FILE: kernel/trace/ftrace.c:1248:
+ftraced_read(struct file *filp, char __user *ubuf,
                           ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#240: FILE: kernel/trace/ftrace.c:1249:
+ftraced_read(struct file *filp, char __user *ubuf,
+		     size_t cnt, loff_t *ppos)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#250: FILE: kernel/trace/ftrace.c:1259:
+ftraced_write(struct file *filp, const char __user *ubuf,
                            ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#251: FILE: kernel/trace/ftrace.c:1260:
+ftraced_write(struct file *filp, const char __user *ubuf,
+		      size_t cnt, loff_t *ppos)

CHECK:BRACES: braces {} should be used on all arms of this statement
#263: FILE: kernel/trace/ftrace.c:1272:
+	if (strncmp(buf, "enable", 6) == 0)
[...]
+	else if (strncmp(buf, "disable", 7) == 0)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#267: FILE: kernel/trace/ftrace.c:1276:
+	else {

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#270: FILE: kernel/trace/ftrace.c:1279:
+		ret = strict_strtoul(buf, 10, &val);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONST_STRUCT: struct file_operations should normally be const
#294: FILE: kernel/trace/ftrace.c:1319:
+static struct file_operations ftraced_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:SPLIT_STRING: quoted string split across lines
#365: FILE: kernel/trace/ftrace.c:1396:
+		pr_warning("Could not create debugfs "
+			   "'ftraced_enabled' entry\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000274815.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 5 checks, 275 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000274815.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
