ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#124: FILE: drivers/net/ehea/ehea_main.c:83:
+u64 ehea_driver_flags = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#129: FILE: drivers/net/ehea/ehea_main.c:88:
 static int __devinit ehea_probe_adapter(struct ibmebus_dev *dev,

WARNING:SPLIT_STRING: quoted string split across lines
#293: FILE: drivers/net/ehea/ehea_main.c:2363:
+				ehea_error("unregister MR failed - driver"
+					   " inoperable!");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#312: FILE: drivers/net/ehea/ehea_main.c:2382:
+				ehea_error("register MR failed - driver"
+					   " inoperable!");

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#329: FILE: drivers/net/ehea/ehea_main.c:2399:
+						if (!ret) {

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#432: FILE: drivers/net/ehea/ehea_qmr.c:34:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#434: FILE: drivers/net/ehea/ehea_qmr.c:36:
+extern u64 ehea_driver_flags;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#435: FILE: drivers/net/ehea/ehea_qmr.c:37:
+extern struct workqueue_struct *ehea_driver_wq;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#436: FILE: drivers/net/ehea/ehea_qmr.c:38:
+extern struct work_struct ehea_rereg_mr_task;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#438: FILE: drivers/net/ehea/ehea_qmr.c:40:
+
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#446: FILE: drivers/net/ehea/ehea_qmr.c:557:
+int ehea_create_busmap( void )

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#446: FILE: drivers/net/ehea/ehea_qmr.c:557:
+int ehea_create_busmap( void )

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#454: FILE: drivers/net/ehea/ehea_qmr.c:565:
+	/*
+	 * Sections are not in ascending order -> Loop over all sections and

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#456: FILE: drivers/net/ehea/ehea_qmr.c:567:
+	 * find the highest PFN to compute the required map size.
+	*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:BRACES: braces {} should be used on all arms of this statement
#476: FILE: drivers/net/ehea/ehea_qmr.c:587:
+		if (pfn_valid(pfn)) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#479: FILE: drivers/net/ehea/ehea_qmr.c:590:
+		} else

ERROR:SPACING: space prohibited after that open parenthesis '('
#486: FILE: drivers/net/ehea/ehea_qmr.c:597:
+void ehea_destroy_busmap( void )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#486: FILE: drivers/net/ehea/ehea_qmr.c:597:
+void ehea_destroy_busmap( void )

CHECK:BRACES: braces {} should be used on all arms of this statement
#496: FILE: drivers/net/ehea/ehea_qmr.c:607:
+	if (likely(index < ehea_bmap.entries)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#503: FILE: drivers/net/ehea/ehea_qmr.c:614:
+	} else

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#530: FILE: drivers/net/ehea/ehea_qmr.c:634:
+	pt =  kzalloc(EHEA_MAX_RPAGE * sizeof(u64), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#587: FILE: drivers/net/ehea/ehea_qmr.c:659:
+			      j++) {
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hret != H_SUCCESS'
#597: FILE: drivers/net/ehea/ehea_qmr.c:669:
+				if ((hret != H_SUCCESS)
+				    && (hret != H_PAGE_REGISTERED)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hret != H_PAGE_REGISTERED'
#597: FILE: drivers/net/ehea/ehea_qmr.c:669:
+				if ((hret != H_SUCCESS)
+				    && (hret != H_PAGE_REGISTERED)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#598: FILE: drivers/net/ehea/ehea_qmr.c:670:
+				if ((hret != H_SUCCESS)
+				    && (hret != H_PAGE_REGISTERED)) {

CHECK:BIT_MACRO: Prefer using the BIT macro
#635: FILE: drivers/net/ehea/ehea_qmr.h:40:
+#define EHEA_PAGESIZE          (1UL << EHEA_PAGESHIFT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#636: FILE: drivers/net/ehea/ehea_qmr.h:41:
+#define EHEA_SECTSIZE          (1UL << 24)

ERROR:SPACING: space prohibited after that open parenthesis '('
#649: FILE: drivers/net/ehea/ehea_qmr.h:381:
+int ehea_create_busmap( void );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#649: FILE: drivers/net/ehea/ehea_qmr.h:381:
+int ehea_create_busmap( void );

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#649: FILE: drivers/net/ehea/ehea_qmr.h:381:
+int ehea_create_busmap( void );

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:SPACING: space prohibited after that open parenthesis '('
#650: FILE: drivers/net/ehea/ehea_qmr.h:382:
+void ehea_destroy_busmap( void );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#650: FILE: drivers/net/ehea/ehea_qmr.h:382:
+void ehea_destroy_busmap( void );

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#650: FILE: drivers/net/ehea/ehea_qmr.h:382:
+void ehea_destroy_busmap( void );

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000407815.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 12 warnings, 12 checks, 552 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000407815.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
