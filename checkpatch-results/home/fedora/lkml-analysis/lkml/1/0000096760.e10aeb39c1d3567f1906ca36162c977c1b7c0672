WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#51: 
> > >> I don't see this driver picked up yet in your -next branch. We should

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#304: FILE: drivers/input/touchscreen/mcs5000_ts.c:233:
+	error = request_threaded_irq(client->irq,
+				mcs5000_ts_hardirq, mcs5000_ts_interrupt,

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#332: FILE: drivers/input/touchscreen/mcs5000_ts.c:257:
 static int __devexit mcs5000_ts_remove(struct i2c_client *client)

WARNING:BAD_SIGN_OFF: Duplicate signature
#378: 
Signed-off-by: Dmitry Torokhov <dtor@mail.ru>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#421: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#426: FILE: drivers/input/touchscreen/mcs5000_ts.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:BIT_MACRO: Prefer using the BIT macro
#454: FILE: drivers/input/touchscreen/mcs5000_ts.c:29:
+#define STATUS_INIT			(1 << STATUS_OFFSET)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#460: FILE: drivers/input/touchscreen/mcs5000_ts.c:35:
+#define ERROR_POWER_ON_RESET		(1 << ERROR_OFFSET)

CHECK:BIT_MACRO: Prefer using the BIT macro
#469: FILE: drivers/input/touchscreen/mcs5000_ts.c:44:
+#define RESET_EXT_SOFT			(1 << RESET_OFFSET)

CHECK:BIT_MACRO: Prefer using the BIT macro
#472: FILE: drivers/input/touchscreen/mcs5000_ts.c:47:
+#define OP_MODE_ACTIVE			(1 << OP_MODE_OFFSET)

CHECK:BIT_MACRO: Prefer using the BIT macro
#475: FILE: drivers/input/touchscreen/mcs5000_ts.c:50:
+#define GESTURE_ENABLE			(1 << GESTURE_OFFSET)

CHECK:BIT_MACRO: Prefer using the BIT macro
#478: FILE: drivers/input/touchscreen/mcs5000_ts.c:53:
+#define PROXIMITY_ENABLE		(1 << PROXIMITY_OFFSET)

CHECK:BIT_MACRO: Prefer using the BIT macro
#481: FILE: drivers/input/touchscreen/mcs5000_ts.c:56:
+#define SCAN_MODE_POLLING		(1 << SCAN_MODE_OFFSET)

CHECK:BIT_MACRO: Prefer using the BIT macro
#484: FILE: drivers/input/touchscreen/mcs5000_ts.c:59:
+#define REPORT_RATE_80			(1 << REPORT_RATE_OFFSET)

CHECK:BIT_MACRO: Prefer using the BIT macro
#499: FILE: drivers/input/touchscreen/mcs5000_ts.c:74:
+#define INPUT_TYPE_SINGLE		(1 << INPUT_TYPE_OFFSET)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#551: FILE: drivers/input/touchscreen/mcs5000_ts.c:126:
+	err = i2c_smbus_read_i2c_block_data(client, MCS5000_TS_INPUT_INFO,
+			READ_BLOCK_SIZE, buffer);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#582: FILE: drivers/input/touchscreen/mcs5000_ts.c:157:
+		dev_err(&client->dev, "Unknown ts input type %d\n",
+				buffer[READ_INPUT_INFO]);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data->input_dev"
#619: FILE: drivers/input/touchscreen/mcs5000_ts.c:194:
+	if (data->input_dev == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#641: FILE: drivers/input/touchscreen/mcs5000_ts.c:216:
+	ret = request_irq(data->irq, mcs5000_ts_interrupt, IRQF_TRIGGER_LOW,
+			"mcs5000_ts_input", data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#666: FILE: drivers/input/touchscreen/mcs5000_ts.c:241:
+	i2c_smbus_write_byte_data(client, MCS5000_TS_OP_MODE,
+			RESET_EXT_SOFT | OP_MODE_SLEEP);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#670: FILE: drivers/input/touchscreen/mcs5000_ts.c:245:
+	i2c_smbus_write_byte_data(client, MCS5000_TS_X_SIZE_UPPER,
+			platform_data->x_size >> 8);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#672: FILE: drivers/input/touchscreen/mcs5000_ts.c:247:
+	i2c_smbus_write_byte_data(client, MCS5000_TS_X_SIZE_LOWER,
+			platform_data->x_size & 0xff);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#674: FILE: drivers/input/touchscreen/mcs5000_ts.c:249:
+	i2c_smbus_write_byte_data(client, MCS5000_TS_Y_SIZE_UPPER,
+			platform_data->y_size >> 8);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#676: FILE: drivers/input/touchscreen/mcs5000_ts.c:251:
+	i2c_smbus_write_byte_data(client, MCS5000_TS_Y_SIZE_LOWER,
+			platform_data->y_size & 0xff);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#680: FILE: drivers/input/touchscreen/mcs5000_ts.c:255:
+	i2c_smbus_write_byte_data(data->client, MCS5000_TS_OP_MODE,
+			OP_MODE_ACTIVE | REPORT_RATE_80);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#683: FILE: drivers/input/touchscreen/mcs5000_ts.c:258:
+static int __devinit mcs5000_ts_probe(struct i2c_client *client,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#684: FILE: drivers/input/touchscreen/mcs5000_ts.c:259:
+static int __devinit mcs5000_ts_probe(struct i2c_client *client,
+		const struct i2c_device_id *idp)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*data)...) over kzalloc(sizeof(struct mcs5000_ts_data)...)
#689: FILE: drivers/input/touchscreen/mcs5000_ts.c:264:
+	data = kzalloc(sizeof(struct mcs5000_ts_data), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#691: FILE: drivers/input/touchscreen/mcs5000_ts.c:266:
+	if (!data) {
+		dev_err(&client->dev, "Failed to allocate driver data\n");

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#721: FILE: drivers/input/touchscreen/mcs5000_ts.c:296:
+static int __devexit mcs5000_ts_remove(struct i2c_client *client)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#806: FILE: include/linux/i2c/mcs5000_ts.h:1:
+#ifndef __LINUX_MCS5000_TS_H

WARNING:BAD_SIGN_OFF: Duplicate signature
#832: 
Signed-off-by: Dmitry Torokhov <dtor@mail.ru>

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#882: FILE: drivers/input/keyboard/max7359_keypad.c:1:
+/*

CHECK:BIT_MACRO: Prefer using the BIT macro
#921: FILE: drivers/input/keyboard/max7359_keypad.c:40:
+#define MAX7359_CFG_SLEEP	(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#922: FILE: drivers/input/keyboard/max7359_keypad.c:41:
+#define MAX7359_CFG_INTERRUPT	(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#923: FILE: drivers/input/keyboard/max7359_keypad.c:42:
+#define MAX7359_CFG_KEY_RELEASE	(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#924: FILE: drivers/input/keyboard/max7359_keypad.c:43:
+#define MAX7359_CFG_WAKEUP	(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#925: FILE: drivers/input/keyboard/max7359_keypad.c:44:
+#define MAX7359_CFG_TIMEOUT	(1 << 0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#970: FILE: drivers/input/keyboard/max7359_keypad.c:89:
+static void max7359_build_keycode(struct max7359_keypad *keypad,
+				const struct matrix_keymap_data *keymap_data)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1007: FILE: drivers/input/keyboard/max7359_keypad.c:126:
+	dev_dbg(&keypad->client->dev, "key[%d:%d] %s\n", row, col,
+					(release ? "release" : "press"));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1060: FILE: drivers/input/keyboard/max7359_keypad.c:179:
+	max7359_write_reg(client, MAX7359_REG_CONFIG,
+		MAX7359_CFG_INTERRUPT | /* Irq clears after host read */

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1073: FILE: drivers/input/keyboard/max7359_keypad.c:192:
+static int __devinit max7359_probe(struct i2c_client *client,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1074: FILE: drivers/input/keyboard/max7359_keypad.c:193:
+static int __devinit max7359_probe(struct i2c_client *client,
+					const struct i2c_device_id *id)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*keypad)...) over kzalloc(sizeof(struct max7359_keypad)...)
#1096: FILE: drivers/input/keyboard/max7359_keypad.c:215:
+	keypad = kzalloc(sizeof(struct max7359_keypad), GFP_KERNEL);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1155: FILE: drivers/input/keyboard/max7359_keypad.c:274:
+static int __devexit max7359_remove(struct i2c_client *client)

WARNING:BAD_SIGN_OFF: Duplicate signature
#1242: 
Signed-off-by: Dmitry Torokhov <dtor@mail.ru>

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000096760.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 14 warnings, 32 checks, 1151 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000096760.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
