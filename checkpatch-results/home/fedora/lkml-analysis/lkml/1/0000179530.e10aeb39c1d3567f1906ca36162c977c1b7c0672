WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
master.kernel.org:/pub/scm/linux/kernel/git/jgarzik/libata-dev.git upstream-linus

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#79: FILE: drivers/ata/Kconfig:701:
+config PATA_OCTEON_CF
+	tristate "OCTEON Boot Bus Compact Flash support"
+	depends on CPU_CAVIUM_OCTEON
+	help
+	  This option enables a polled compact flash driver for use with
+	  compact flash cards attached to the OCTEON boot bus.
+
+	  If unsure, say N.
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#196: FILE: drivers/ata/libata-core.c:3088:
+	if (what & ATA_TIMING_DMACK_HOLD) m->dmack_hold = max(a->dmack_hold, b->dmack_hold);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#230: FILE: drivers/ata/libata-scsi.c:649:
+int ata_sas_scsi_ioctl(struct ata_port *ap, struct scsi_device *scsidev,
+		     int cmd, void __user *arg)

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#403: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#408: FILE: drivers/ata/pata_octeon_cf.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#445: FILE: drivers/ata/pata_octeon_cf.c:38:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#470: FILE: drivers/ata/pata_octeon_cf.c:63:
+	val = DIV_ROUND_UP(nsecs * (octeon_get_clock_rate() / 1000000),
+			  1000 * tim_mult);

WARNING:LINE_SPACING: Missing a blank line after declarations
#478: FILE: drivers/ata/pata_octeon_cf.c:71:
+	union cvmx_mio_boot_reg_cfgx reg_cfg;
+	reg_cfg.u64 = cvmx_read_csr(CVMX_MIO_BOOT_REG_CFGX(cs));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#518: FILE: drivers/ata/pata_octeon_cf.c:111:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LINE_SPACING: Please don't use multiple blank lines
#543: FILE: drivers/ata/pata_octeon_cf.c:136:
+
+

WARNING:TYPO_SPELLING: 'coninue' may be misspelled - perhaps 'continue'?
#557: FILE: drivers/ata/pata_octeon_cf.c:150:
+	/* Time after IORDY to coninue to assert the data */
 	                       ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:CAMELCASE: Avoid CamelCase: <Tkr>
#590: FILE: drivers/ata/pata_octeon_cf.c:183:
+	unsigned int T0, Tkr, Td;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Td>
#590: FILE: drivers/ata/pata_octeon_cf.c:183:
+	unsigned int T0, Tkr, Td;

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#623: FILE: drivers/ata/pata_octeon_cf.c:216:
+	dma_tim.s.dmack_s = ns_to_tim_reg(tim_mult, 20);;

WARNING:SPLIT_STRING: quoted string split across lines
#638: FILE: drivers/ata/pata_octeon_cf.c:231:
+	pr_debug("oe_n: %d, oe_a: %d, dmack_s: %d, dmack_h: "
+		 "%d, dmarq: %d, pause: %d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#645: FILE: drivers/ata/pata_octeon_cf.c:238:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#807: FILE: drivers/ata/pata_octeon_cf.c:400:
+	udelay(20);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#809: FILE: drivers/ata/pata_octeon_cf.c:402:
+	udelay(20);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#865: FILE: drivers/ata/pata_octeon_cf.c:458:
+
+

WARNING:RETURN_VOID: void function return statements are not generally useful
#870: FILE: drivers/ata/pata_octeon_cf.c:463:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#877: FILE: drivers/ata/pata_octeon_cf.c:470:
+static void octeon_cf_exec_command16(struct ata_port *ap,
+				const struct ata_taskfile *tf)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#894: FILE: drivers/ata/pata_octeon_cf.c:487:
+
+

WARNING:RETURN_VOID: void function return statements are not generally useful
#906: FILE: drivers/ata/pata_octeon_cf.c:499:
+	return;
+}

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#938: FILE: drivers/ata/pata_octeon_cf.c:531:
+	BUG_ON(!sg);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#990: FILE: drivers/ata/pata_octeon_cf.c:583:
+static unsigned int octeon_cf_dma_finished(struct ata_port *ap,
+					struct ata_queued_cmd *qc)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1002: FILE: drivers/ata/pata_octeon_cf.c:595:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'qc->tf.protocol == ATA_PROT_DMA'
#1032: FILE: drivers/ata/pata_octeon_cf.c:625:
+	if (unlikely(qc->err_mask) && (qc->tf.protocol == ATA_PROT_DMA))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1169: FILE: drivers/ata/pata_octeon_cf.c:762:
+	BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1174: FILE: drivers/ata/pata_octeon_cf.c:767:
+	BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1201: FILE: drivers/ata/pata_octeon_cf.c:794:
+		BUG();

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1228: FILE: drivers/ata/pata_octeon_cf.c:821:
+static int __devinit octeon_cf_probe(struct platform_device *pdev)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1339: FILE: drivers/ata/pata_octeon_cf.c:932:
+
+

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1340: FILE: drivers/ata/pata_octeon_cf.c:933:
+	dev_info(&pdev->dev, "version " DRV_VERSION" %d bit%s.\n",

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1344: FILE: drivers/ata/pata_octeon_cf.c:937:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1365: FILE: drivers/ata/pata_octeon_cf.c:958:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1459: FILE: include/linux/libata.h:933:
+extern int ata_sas_scsi_ioctl(struct ata_port *ap, struct scsi_device *dev,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1460: FILE: include/linux/libata.h:934:
+extern int ata_sas_scsi_ioctl(struct ata_port *ap, struct scsi_device *dev,
+			    int cmd, void __user *arg);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000179530.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 16 warnings, 21 checks, 1317 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000179530.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
