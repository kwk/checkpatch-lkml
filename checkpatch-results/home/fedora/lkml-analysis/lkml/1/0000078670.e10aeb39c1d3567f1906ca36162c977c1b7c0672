WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#159: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#164: FILE: drivers/video/omap2/omapfb/Kconfig:1:
+menuconfig FB_OMAP2
+        tristate "OMAP2/3 frame buffer support (EXPERIMENTAL)"
+        depends on FB && OMAP2_DSS
+
+	select OMAP2_VRAM
+	select OMAP2_VRFB
+        select FB_CFB_FILLRECT
+        select FB_CFB_COPYAREA
+        select FB_CFB_IMAGEBLIT
+        help
+          Frame buffer driver for OMAP2/3 based boards.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#176: FILE: drivers/video/omap2/omapfb/Kconfig:13:
+config FB_OMAP2_DEBUG_SUPPORT
+	bool "Debug support for OMAP2/3 FB"
+	default y
+	depends on FB_OMAP2
+	help
+	  Support for debug output. You have to enable the actual printing
+	  with debug module parameter.
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#215: FILE: drivers/video/omap2/omapfb/omapfb-ioctl.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'omapfb_setup_plane', this function's name, in a string
#260: FILE: drivers/video/omap2/omapfb/omapfb-ioctl.c:46:
+	DBG("omapfb_setup_plane\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#386: FILE: drivers/video/omap2/omapfb/omapfb-ioctl.c:172:
+static int omapfb_update_window(struct fb_info *fbi,
+		u32 x, u32 y, u32 w, u32 h)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#408: FILE: drivers/video/omap2/omapfb/omapfb-ioctl.c:194:
+static int omapfb_set_update_mode(struct fb_info *fbi,
+				   enum omapfb_update_mode mode)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#440: FILE: drivers/video/omap2/omapfb/omapfb-ioctl.c:226:
+static int omapfb_get_update_mode(struct fb_info *fbi,
+		enum omapfb_update_mode *mode)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#461: FILE: drivers/video/omap2/omapfb/omapfb-ioctl.c:247:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#471: FILE: drivers/video/omap2/omapfb/omapfb-ioctl.c:257:
+static int _omapfb_set_color_key(struct omap_overlay_manager *mgr,
+		struct omapfb_color_key *ck)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#520: FILE: drivers/video/omap2/omapfb/omapfb-ioctl.c:306:
+static int omapfb_set_color_key(struct fb_info *fbi,
+		struct omapfb_color_key *ck)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#550: FILE: drivers/video/omap2/omapfb/omapfb-ioctl.c:336:
+static int omapfb_get_color_key(struct fb_info *fbi,
+		struct omapfb_color_key *ck)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#580: FILE: drivers/video/omap2/omapfb/omapfb-ioctl.c:366:
+static int omapfb_memory_read(struct fb_info *fbi,
+		struct omapfb_memory_read *mr)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#615: FILE: drivers/video/omap2/omapfb/omapfb-ioctl.c:401:
+static int omapfb_get_ovl_colormode(struct omapfb2_device *fbdev,
+			     struct omapfb_ovl_colormode *mode)

WARNING:LINE_SPACING: Missing a blank line after declarations
#668: FILE: drivers/video/omap2/omapfb/omapfb-ioctl.c:454:
+		struct omap_overlay *ovl = ofbi->overlays[i];
+		r = ovl->wait_for_go(ovl);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#718: FILE: drivers/video/omap2/omapfb/omapfb-ioctl.c:504:
+		if (copy_from_user(&p.uwnd_o,
+					(void __user *)arg,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#725: FILE: drivers/video/omap2/omapfb/omapfb-ioctl.c:511:
+		r = omapfb_update_window(fbi, p.uwnd_o.x, p.uwnd_o.y,
+				p.uwnd_o.width, p.uwnd_o.height);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#736: FILE: drivers/video/omap2/omapfb/omapfb-ioctl.c:522:
+		if (copy_from_user(&p.uwnd, (void __user *)arg,
+					sizeof(p.uwnd))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#742: FILE: drivers/video/omap2/omapfb/omapfb-ioctl.c:528:
+		r = omapfb_update_window(fbi, p.uwnd.x, p.uwnd.y,
+				p.uwnd.width, p.uwnd.height);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#748: FILE: drivers/video/omap2/omapfb/omapfb-ioctl.c:534:
+		if (copy_from_user(&p.plane_info, (void __user *)arg,
+					sizeof(p.plane_info)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#760: FILE: drivers/video/omap2/omapfb/omapfb-ioctl.c:546:
+		if (copy_to_user((void __user *)arg, &p.plane_info,
+					sizeof(p.plane_info)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#767: FILE: drivers/video/omap2/omapfb/omapfb-ioctl.c:553:
+		if (copy_from_user(&p.mem_info, (void __user *)arg,
+					sizeof(p.mem_info)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#779: FILE: drivers/video/omap2/omapfb/omapfb-ioctl.c:565:
+		if (copy_to_user((void __user *)arg, &p.mem_info,
+					sizeof(p.mem_info)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#826: FILE: drivers/video/omap2/omapfb/omapfb-ioctl.c:612:
+		if (put_user(p.update_mode,
+					(enum omapfb_update_mode __user *)arg))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#870: FILE: drivers/video/omap2/omapfb/omapfb-ioctl.c:656:
+	 * compatibility */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#905: FILE: drivers/video/omap2/omapfb/omapfb-ioctl.c:691:
+		if (copy_from_user(&p.memory_read, (void __user *)arg,
+					sizeof(p.memory_read))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#925: FILE: drivers/video/omap2/omapfb/omapfb-ioctl.c:711:
+		if (copy_to_user((void __user *)arg, &p.vram_info,
+					sizeof(p.vram_info)))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#941: FILE: drivers/video/omap2/omapfb/omapfb-ioctl.c:727:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#948: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1:
+/*

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1006: FILE: drivers/video/omap2/omapfb/omapfb-main.c:59:
+static void draw_pixel(struct fb_info *fbi, int x, int y, unsigned color)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1011: FILE: drivers/video/omap2/omapfb/omapfb-main.c:64:
+	const unsigned bytespp = var->bits_per_pixel >> 3;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1012: FILE: drivers/video/omap2/omapfb/omapfb-main.c:65:
+	const unsigned line_len = fix->line_length / bytespp;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1020: FILE: drivers/video/omap2/omapfb/omapfb-main.c:73:
+		u16 __iomem *p = (u16 __iomem *)addr;
+		p += y * line_len + x;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1029: FILE: drivers/video/omap2/omapfb/omapfb-main.c:82:
+		u8 __iomem *p = (u8 __iomem *)addr;
+		p += (y * line_len + x) * 3;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1036: FILE: drivers/video/omap2/omapfb/omapfb-main.c:89:
+		u32 __iomem *p = (u32 __iomem *)addr;
+		p += y * line_len + x;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'fill_fb', this function's name, in a string
#1052: FILE: drivers/video/omap2/omapfb/omapfb-main.c:105:
+	DBG("fill_fb %dx%d, line_len %d bytes\n", w, h, fbi->fix.line_length);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1056: FILE: drivers/video/omap2/omapfb/omapfb-main.c:109:
+			if (x < 20 && y < 20)
[...]
+			else if (x < 20 && (y > 20 && y < h - 20))
[...]
+			else if (y < 20 && (x > 20 && x < w - 20))
[...]
+			else if (x > w - 20 && (y > 20 && y < h - 20))
[...]
+			else if (y > h - 20 && (x > 20 && x < w - 20))
[...]
+			else if (x == 20 || x == w - 20 ||
[...]
+			else if (x == y || w - x == h - y)
[...]
+			else if (w - x == y || x == h - y)
[...]
+			else if (x > 20 && y > 20 && x < w - 20 && y < h - 20) {
[...]
+			} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1067: FILE: drivers/video/omap2/omapfb/omapfb-main.c:120:
+			else if (x == 20 || x == w - 20 ||
+					y == 20 || y == h - 20)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1075: FILE: drivers/video/omap2/omapfb/omapfb-main.c:128:
+				unsigned r = 0, g = 0, b = 0;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1076: FILE: drivers/video/omap2/omapfb/omapfb-main.c:129:
+				unsigned c;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1077: FILE: drivers/video/omap2/omapfb/omapfb-main.c:130:
+				unsigned c;
+				if (var->bits_per_pixel == 16) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1102: FILE: drivers/video/omap2/omapfb/omapfb-main.c:155:
+static unsigned omapfb_get_vrfb_offset(struct omapfb_info *ofbi, int rot)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1105: FILE: drivers/video/omap2/omapfb/omapfb-main.c:158:
+	unsigned offset;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1121: FILE: drivers/video/omap2/omapfb/omapfb-main.c:174:
+		BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1217: FILE: drivers/video/omap2/omapfb/omapfb-main.c:270:
+static bool cmp_var_to_colormode(struct fb_var_screeninfo *var,
+		struct omapfb_colormode *color)

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1219: FILE: drivers/video/omap2/omapfb/omapfb-main.c:272:
+	bool cmp_component(struct fb_bitfield *f1, struct fb_bitfield *f2)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1227: FILE: drivers/video/omap2/omapfb/omapfb-main.c:280:
+	if (var->bits_per_pixel == 0 ||
+			var->red.length == 0 ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1240: FILE: drivers/video/omap2/omapfb/omapfb-main.c:293:
+static void assign_colormode_to_var(struct fb_var_screeninfo *var,
+		struct omapfb_colormode *color)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1259: FILE: drivers/video/omap2/omapfb/omapfb-main.c:312:
+			struct omapfb_colormode *mode = &omapfb_colormodes[i];
+			if (var->nonstd == mode->nonstd) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1271: FILE: drivers/video/omap2/omapfb/omapfb-main.c:324:
+		struct omapfb_colormode *mode = &omapfb_colormodes[i];
+		if (cmp_var_to_colormode(var, mode)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1278: FILE: drivers/video/omap2/omapfb/omapfb-main.c:331:
+	 * properly */

WARNING:LINE_SPACING: Missing a blank line after declarations
#1310: FILE: drivers/video/omap2/omapfb/omapfb-main.c:363:
+		struct omapfb_colormode *mode = &omapfb_colormodes[i];
+		if (dssmode == mode->dssmode) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1326: FILE: drivers/video/omap2/omapfb/omapfb-main.c:379:
+		struct omapfb_colormode *mode = &omapfb_colormodes[i];
+		if (dssmode == mode->dssmode) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_fb_fix', this function's name, in a string
#1341: FILE: drivers/video/omap2/omapfb/omapfb-main.c:394:
+	DBG("set_fb_fix\n");

CHECK:BRACES: Unbalanced braces around else statement
#1361: FILE: drivers/video/omap2/omapfb/omapfb-main.c:414:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#1369: FILE: drivers/video/omap2/omapfb/omapfb-main.c:422:
+	if (var->nonstd)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1371: FILE: drivers/video/omap2/omapfb/omapfb-main.c:424:
+	else {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1395: FILE: drivers/video/omap2/omapfb/omapfb-main.c:448:
+		unsigned bytespp;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'check_fb_var', this function's name, in a string
#1428: FILE: drivers/video/omap2/omapfb/omapfb-main.c:481:
+	DBG("check_fb_var %d\n", ofbi->id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1528: FILE: drivers/video/omap2/omapfb/omapfb-main.c:581:
+	DBG("xres = %d, yres = %d, vxres = %d, vyres = %d\n",
+			var->xres, var->yres,

WARNING:LINE_SPACING: Missing a blank line after declarations
#1537: FILE: drivers/video/omap2/omapfb/omapfb-main.c:590:
+		struct omap_video_timings timings;
+		display->get_timings(display, &timings);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1578: FILE: drivers/video/omap2/omapfb/omapfb-main.c:631:
+#if 0

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1589: FILE: drivers/video/omap2/omapfb/omapfb-main.c:642:
+		 * good for debugging */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1612: FILE: drivers/video/omap2/omapfb/omapfb-main.c:665:
+static int omapfb_setup_overlay(struct fb_info *fbi, struct omap_overlay *ovl,
+		u16 posx, u16 posy, u16 outw, u16 outh)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1638: FILE: drivers/video/omap2/omapfb/omapfb-main.c:691:
+	DBG("setup_overlay %d, posx %d, posy %d, outw %d, outh %d\n", ofbi->id,
+			posx, posy, outw, outh);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1749: FILE: drivers/video/omap2/omapfb/omapfb-main.c:802:
+			int rotation = (var->rotate + ofbi->rotation[i]) % 4;
+			if (rotation == FB_ROTATE_CW ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1750: FILE: drivers/video/omap2/omapfb/omapfb-main.c:803:
+			if (rotation == FB_ROTATE_CW ||
+					rotation == FB_ROTATE_CCW) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1784: FILE: drivers/video/omap2/omapfb/omapfb-main.c:837:
+ * DO NOT MODIFY PAR */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1810: FILE: drivers/video/omap2/omapfb/omapfb-main.c:863:
+static int omapfb_pan_display(struct fb_var_screeninfo *var,
+		struct fb_info *fbi)

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#1851: FILE: drivers/video/omap2/omapfb/omapfb-main.c:904:
+static struct vm_operations_struct mmap_user_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1887: FILE: drivers/video/omap2/omapfb/omapfb-main.c:940:
+	if (io_remap_pfn_range(vma, vma->vm_start, off >> PAGE_SHIFT,
+			     vma->vm_end - vma->vm_start, vma->vm_page_prot))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1899: FILE: drivers/video/omap2/omapfb/omapfb-main.c:952:
+static int _setcolreg(struct fb_info *fbi, u_int regno, u_int red, u_int green,
+		u_int blue, u_int transp, int update_hw_pal)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1920: FILE: drivers/video/omap2/omapfb/omapfb-main.c:973:
+		/*
+		   if (fbdev->ctrl->setcolreg)

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1924: FILE: drivers/video/omap2/omapfb/omapfb-main.c:977:
+		/* Fallthrough */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:LINE_SPACING: Missing a blank line after declarations
#1941: FILE: drivers/video/omap2/omapfb/omapfb-main.c:994:
+			u16 pal;
+			pal = ((red >> (16 - var->red.length)) <<

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1950: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1003:
+		BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1956: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1009:
+static int omapfb_setcolreg(u_int regno, u_int red, u_int green, u_int blue,
+		u_int transp, struct fb_info *info)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1981: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1034:
+		r = _setcolreg(info, index++, *red++, *green++, *blue++, trans,
+				count == cmap->len - 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2034: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1087:
+		if (r == 0 && display->get_update_mode &&
+				display->get_update_mode(display) ==

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2042: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1095:
+		 * Needs DSS additions. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#2065: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1118:
+		u16 w, h;
+		display->get_resolution(display, &w, &h);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2073: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1126:
+#if 0

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2076: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1129:
+ssize_t omapfb_write(struct fb_info *info, const char __user *buf,
+		size_t count, loff_t *ppos)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'omapfb_write', this function's name, in a string
#2078: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1131:
+	DBG("omapfb_write %d, %lu\n", count, (unsigned long)*ppos);

WARNING:CONST_STRUCT: struct fb_ops should normally be const
#2084: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1137:
+static struct fb_ops omapfb_ops = {

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#2135: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1188:
+	strlcpy(fbi->fix.id, MODULE_NAME, sizeof(fbi->fix.id));

WARNING:LINE_SPACING: Missing a blank line after declarations
#2146: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1199:
+		struct fb_info *fbi = fbdev->fbs[i];
+		omapfb_free_fbmem(fbi);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2154: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1207:
+static int omapfb_alloc_fbmem(struct fb_info *fbi, unsigned long size,
+		unsigned long paddr)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2172: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1225:
+		DBG("reserving %lu bytes at %lx for fb %d\n", size, paddr,
+				ofbi->id);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2204: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1257:
+			printk(KERN_ERR "vrfb: ioremap failed\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2226: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1279:
+static int omapfb_alloc_fbmem_display(struct fb_info *fbi, unsigned long size,
+		unsigned long paddr)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2262: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1315:
+			 * view, we need to alloc max(w, h) for height */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2267: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1320:
+			DBG("adjusting fb mem size for VRFB, %dx%d -> %dx%d\n",
+					oldw, oldh, w, h);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2334: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1387:
+static int omapfb_parse_vram_param(const char *param, int max_entries,
+		unsigned long *sizes, unsigned long *paddrs)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2346: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1399:
+		fbnum = simple_strtoul(p, &p, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2365: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1418:
+			paddr = simple_strtoul(p + 1, &p, 16);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2370: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1423:
+
+		}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2399: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1452:
+	if (def_vram &&	omapfb_parse_vram_param(def_vram, 10,
+				vram_sizes, vram_paddrs)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#2408: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1461:
+		struct omapfb_platform_data *opd;
+		opd = fbdev->dev->platform_data;

WARNING:TYPO_SPELLING: 'excplicitly' may be misspelled - perhaps 'explicitly'?
#2425: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1478:
+		 * excplicitly defined with vram or plat data option */
 		   ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2425: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1478:
+		 * excplicitly defined with vram or plat data option */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2428: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1481:
+			r = omapfb_alloc_fbmem_display(fbdev->fbs[i],
+					vram_sizes[i], vram_paddrs[i]);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2438: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1491:
+		struct omapfb2_mem_region *rg;
+		rg = &ofbi->region;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2441: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1494:
+		DBG("region%d phys %08x virt %p size=%lu\n",
+				i,

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#2469: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1522:
+	if (display && display->sync)
+			display->sync(display);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2508: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1561:
+		struct fb_var_screeninfo new_var;
+		memcpy(&new_var, &fbi->var, sizeof(new_var));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2578: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1631:
+		if (rotation == FB_ROTATE_CW ||
+				rotation == FB_ROTATE_CCW) {

WARNING:SPLIT_STRING: quoted string split across lines
#2599: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1652:
+				dev_err(fbdev->dev, "illegal display "
+						"bpp\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2632: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1685:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fbdev"
#2639: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1692:
+	if (fbdev == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2678: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1731:
+		fbi = framebuffer_alloc(sizeof(struct omapfb_info),
+				fbdev->dev);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fbi"
#2680: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1733:
+		if (fbi == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2769: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1822:
+				dev_err(fbdev->dev,
+						"failed to enable overlay\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2781: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1834:
+static int omapfb_mode_to_timings(const char *mode_str,
+		struct omap_video_timings *timings, u8 *bpp)

WARNING:CONST_STRUCT: struct fb_ops should normally be const
#2785: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1838:
+	struct fb_ops fbops;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2801: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1854:
+	 * that we need fb_info and var, so we create dummy ones */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2889: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1942:
+			if (strcmp(fbdev->displays[i]->name,
+						display_str) == 0) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'omapfb_probe', this function's name, in a string
#2919: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1972:
+	DBG("omapfb_probe\n");

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*fbdev)...) over kzalloc(sizeof(struct omapfb2_device)...)
#2927: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1980:
+	fbdev = kzalloc(sizeof(struct omapfb2_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fbdev"
#2928: FILE: drivers/video/omap2/omapfb/omapfb-main.c:1981:
+	if (fbdev == NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#2970: FILE: drivers/video/omap2/omapfb/omapfb-main.c:2023:
+		struct omap_overlay_manager *mgr;
+		mgr = fbdev->managers[i];

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2979: FILE: drivers/video/omap2/omapfb/omapfb-main.c:2032:
+	 * connected to that, and use it as default display */

WARNING:LINE_SPACING: Missing a blank line after declarations
#2990: FILE: drivers/video/omap2/omapfb/omapfb-main.c:2043:
+		u16 w, h;
+		r = def_display->enable(def_display);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2993: FILE: drivers/video/omap2/omapfb/omapfb-main.c:2046:
+			dev_warn(fbdev->dev, "Failed to enable display '%s'\n",
+					def_display->name);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'omapfb_init', this function's name, in a string
#3053: FILE: drivers/video/omap2/omapfb/omapfb-main.c:2106:
+	DBG("omapfb_init\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3056: FILE: drivers/video/omap2/omapfb/omapfb-main.c:2109:
+		printk(KERN_ERR "failed to register omapfb driver\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'omapfb_exit', this function's name, in a string
#3065: FILE: drivers/video/omap2/omapfb/omapfb-main.c:2118:
+	DBG("omapfb_exit\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3077: FILE: drivers/video/omap2/omapfb/omapfb-main.c:2130:
+ * so that omapfb reacts to new panels when they are loaded */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3091: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:1:
+/*

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3128: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:38:
+static ssize_t show_rotate_type(struct device *dev,
+		struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3137: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:47:
+static ssize_t store_rotate_type(struct device *dev,
+		struct device_attribute *attr,

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#3145: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:55:
+	rot_type = simple_strtoul(buf, NULL, 0);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3173: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:83:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3175: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:85:
+static ssize_t show_mirror(struct device *dev,
+		struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3184: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:94:
+static ssize_t store_mirror(struct device *dev,
+		struct device_attribute *attr,

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#3193: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:103:
+	mirror = simple_strtoul(buf, NULL, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3222: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:132:
+static ssize_t show_overlays(struct device *dev,
+		struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3254: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:164:
+static struct omapfb_info *get_overlay_fb(struct omapfb2_device *fbdev,
+		struct omap_overlay *ovl)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3271: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:181:
+static ssize_t store_overlays(struct device *dev, struct device_attribute *attr,
+		const char *buf, size_t count)

WARNING:LINE_SPACING: Missing a blank line after declarations
#3297: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:207:
+			int found;
+			if (num_ovls == OMAPFB_MAX_OVL_PER_FB) {

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#3302: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:212:
+			ovlnum = simple_strtoul(p, &p, 0);

WARNING:LINE_SPACING: Missing a blank line after declarations
#3325: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:235:
+		struct omapfb_info *ofbi2 = get_overlay_fb(fbdev, ovls[i]);
+		if (ofbi2 && ofbi2 != ofbi) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3358: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:268:
+			ofbi->rotation[t-1] = ofbi->rotation[t];
 			                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3359: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:269:
+			ofbi->overlays[t-1] = ofbi->overlays[t];
 			                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3403: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:313:
+static ssize_t show_overlays_rotate(struct device *dev,
+		struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3425: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:335:
+static ssize_t store_overlays_rotate(struct device *dev,
+		struct device_attribute *attr, const char *buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#3451: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:361:
+			rot = simple_strtoul(p, &p, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3490: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:400:
+static ssize_t show_size(struct device *dev,
+		struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3499: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:409:
+static ssize_t store_size(struct device *dev, struct device_attribute *attr,
+		const char *buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#3507: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:417:
+	size = PAGE_ALIGN(simple_strtoul(buf, NULL, 0));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3534: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:444:
+static ssize_t show_phys(struct device *dev,
+		struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3543: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:453:
+static ssize_t show_virt(struct device *dev,
+		struct device_attribute *attr, char *buf)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#3552: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:462:
+	__ATTR(rotate_type, S_IRUGO | S_IWUSR, show_rotate_type,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3553: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:463:
+	__ATTR(rotate_type, S_IRUGO | S_IWUSR, show_rotate_type,
+			store_rotate_type),

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#3554: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:464:
+	__ATTR(mirror, S_IRUGO | S_IWUSR, show_mirror, store_mirror),

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#3555: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:465:
+	__ATTR(size, S_IRUGO | S_IWUSR, show_size, store_size),

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#3556: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:466:
+	__ATTR(overlays, S_IRUGO | S_IWUSR, show_overlays, store_overlays),

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#3557: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:467:
+	__ATTR(overlays_rotate, S_IRUGO | S_IWUSR, show_overlays_rotate,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3558: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:468:
+	__ATTR(overlays_rotate, S_IRUGO | S_IWUSR, show_overlays_rotate,
+			store_overlays_rotate),

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#3559: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:469:
+	__ATTR(phys_addr, S_IRUGO, show_phys, NULL),

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#3560: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:470:
+	__ATTR(virt_addr, S_IRUGO, show_virt, NULL),

WARNING:LINE_SPACING: Missing a blank line after declarations
#3571: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:481:
+		int t;
+		for (t = 0; t < ARRAY_SIZE(omapfb_attrs); t++) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3573: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:483:
+			r = device_create_file(fbdev->fbs[i]->dev,
+					&omapfb_attrs[t]);

WARNING:SPLIT_STRING: quoted string split across lines
#3577: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:487:
+				dev_err(fbdev->dev, "failed to create sysfs "
+						"file\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3594: FILE: drivers/video/omap2/omapfb/omapfb-sysfs.c:504:
+			device_remove_file(fbdev->fbs[i]->dev,
+					&omapfb_attrs[t]);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3604: FILE: drivers/video/omap2/omapfb/omapfb.h:1:
+/*

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#3637: FILE: drivers/video/omap2/omapfb/omapfb.h:34:
+#define DBG(format, ...) \
+	if (omapfb_debug) \
+		printk(KERN_DEBUG "OMAPFB: " format, ## __VA_ARGS__)

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3639: FILE: drivers/video/omap2/omapfb/omapfb.h:36:
+		printk(KERN_DEBUG "OMAPFB: " format, ## __VA_ARGS__)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'fb_info' may be better as '(fb_info)' to avoid precedence issues
#3644: FILE: drivers/video/omap2/omapfb/omapfb.h:41:
+#define FB2OFB(fb_info) ((struct omapfb_info *)(fb_info->par))

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#3674: FILE: drivers/video/omap2/omapfb/omapfb.h:71:
+	struct mutex  mtx;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3680: FILE: drivers/video/omap2/omapfb/omapfb.h:77:
+	unsigned num_fbs;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3683: FILE: drivers/video/omap2/omapfb/omapfb.h:80:
+	unsigned num_displays;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3685: FILE: drivers/video/omap2/omapfb/omapfb.h:82:
+	unsigned num_overlays;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3687: FILE: drivers/video/omap2/omapfb/omapfb.h:84:
+	unsigned num_managers;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3740: FILE: drivers/video/omap2/omapfb/omapfb.h:137:
+static inline int omapfb_overlay_enable(struct omap_overlay *ovl,
+		int enable)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078670.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 92 warnings, 82 checks, 3705 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078670.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
