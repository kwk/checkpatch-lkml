WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
BOOTMEM_EXCLUSIVE. If that flag is set, the function returns with -EBUSY if the

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: arch/alpha/mm/numa.c:246:
+	reserve_bootmem_node(NODE_DATA(nid), PFN_PHYS(bootmap_start),
+			bootmap_size, BOOTMEM_DEFAULT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#164: FILE: arch/arm/mm/mmu.c:609:
+	reserve_bootmem_node(pgdat, __pa(&__data_start), &_end - &__data_start,
+			BOOTMEM_DEFAULT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#168: FILE: arch/arm/mm/mmu.c:612:
+	reserve_bootmem_node(pgdat, __pa(&_stext), &_end - &_stext,
+			BOOTMEM_DEFAULT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#188: FILE: arch/arm/mm/mmu.c:644:
+		reserve_bootmem_node(pgdat, 0x30003000, 0x1000,
+				BOOTMEM_DEFAULT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#190: FILE: arch/arm/mm/mmu.c:646:
+		reserve_bootmem_node(pgdat, 0x30081000, 0x1000,
+				BOOTMEM_DEFAULT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#200: FILE: arch/arm/mm/mmu.c:658:
+		reserve_bootmem_node(pgdat, PHYS_OFFSET, res_size,
+				BOOTMEM_DEFAULT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#212: FILE: arch/arm/mm/nommu.c:31:
+	reserve_bootmem_node(pgdat, __pa(&__data_start), &_end - &__data_start,
+			BOOTMEM_DEFAULT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#216: FILE: arch/arm/mm/nommu.c:34:
+	reserve_bootmem_node(pgdat, __pa(&_stext), &_end - &_stext,
+			BOOTMEM_DEFAULT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#226: FILE: arch/arm/mm/nommu.c:43:
+	reserve_bootmem_node(pgdat, CONFIG_VECTORS_BASE, PAGE_SIZE,
+			BOOTMEM_DEFAULT);

CHECK:SPACING: No space is necessary after a cast
#313: FILE: arch/frv/kernel/setup.c:993:
+			kend - (unsigned long) &__kernel_image_start,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_PPFN>
#323: FILE: arch/frv/kernel/setup.c:1002:
+	reserve_bootmem(__get_DAMPR(0) & xAMPRx_PPFN, dampr, BOOTMEM_DEFAULT);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#532: FILE: arch/parisc/mm/init.c:353:
+			reserve_bootmem_node(NODE_DATA(0), __pa(initrd_start),
+					initrd_reserve, BOOTMEM_DEFAULT);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#607: FILE: arch/sh/kernel/setup.c:188:
+		(PFN_PHYS(free_pfn)+bootmap_size+PAGE_SIZE-1)-__MEMORY_START,
 		                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#607: FILE: arch/sh/kernel/setup.c:188:
+		(PFN_PHYS(free_pfn)+bootmap_size+PAGE_SIZE-1)-__MEMORY_START,
 		                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#607: FILE: arch/sh/kernel/setup.c:188:
+		(PFN_PHYS(free_pfn)+bootmap_size+PAGE_SIZE-1)-__MEMORY_START,
 		                                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#607: FILE: arch/sh/kernel/setup.c:188:
+		(PFN_PHYS(free_pfn)+bootmap_size+PAGE_SIZE-1)-__MEMORY_START,
 		                                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#857: FILE: arch/x86/kernel/setup_32.c:443:
+			 bootmap_size + PAGE_SIZE-1) - __pa_symbol(_text),
 			                         ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 13)
#871: FILE: arch/x86/kernel/setup_32.c:458:
 	if (boot_cpu_data.x86_vendor == X86_VENDOR_AMD &&
[...]
+	     reserve_bootmem(0xa0000 - 4096, 4096, BOOTMEM_DEFAULT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#953: FILE: arch/x86/mm/numa_64.c:223:
+	reserve_bootmem_node(NODE_DATA(nodeid), nodedata_phys, pgdat_size,
+			BOOTMEM_DEFAULT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#955: FILE: arch/x86/mm/numa_64.c:225:
+	reserve_bootmem_node(NODE_DATA(nodeid), bootmap_start,
+			bootmap_pages<<PAGE_SHIFT, BOOTMEM_DEFAULT);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#955: FILE: arch/x86/mm/numa_64.c:225:
+			bootmap_pages<<PAGE_SHIFT, BOOTMEM_DEFAULT);
 			             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#995: FILE: include/linux/bootmem.h:69:
+#define BOOTMEM_EXCLUSIVE	(1<<0)
                          	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#995: FILE: include/linux/bootmem.h:69:
+#define BOOTMEM_EXCLUSIVE	(1<<0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1004: FILE: include/linux/bootmem.h:77:
+extern int reserve_bootmem(unsigned long addr, unsigned long size, int flags);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1027: FILE: mm/bootmem.c:115:
+static int __init reserve_bootmem_core(bootmem_data_t *bdata, unsigned long addr,
+					unsigned long size, int flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1074: FILE: mm/bootmem.c:416:
+int __init reserve_bootmem(unsigned long addr, unsigned long size,
+			    int flags)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000365942.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 25 checks, 833 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000365942.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
