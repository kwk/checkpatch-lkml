CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#77: FILE: arch/ia64/kvm/kvm-ia64.c:417:
+		if (vcpui->arch.mp_state == KVM_MP_STATE_UNINITIALIZED ||
+				vcpu == vcpui)

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#82: FILE: arch/ia64/kvm/kvm-ia64.c:420:
+		if (waitqueue_active(&vcpui->wq))

CHECK:BRACES: braces {} should be used on all arms of this statement
#88: FILE: arch/ia64/kvm/kvm-ia64.c:423:
+		if (vcpui->cpu != -1) {
[...]
 		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#91: FILE: arch/ia64/kvm/kvm-ia64.c:426:
+			smp_call_function_single(vcpui->cpu,
 					vcpu_global_purge, &call_data, 1);

WARNING:MEMORY_BARRIER: memory barrier without comment
#282: FILE: include/linux/kvm_host.h:184:
+	smp_rmb();

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'idx' - possible side-effects?
#286: FILE: include/linux/kvm_host.h:188:
+#define kvm_for_each_vcpu(idx, vcpup, kvm) \
+	for (idx = 0, vcpup = kvm_get_vcpu(kvm, idx); \
+	     idx < atomic_read(&kvm->online_vcpus) && vcpup; \
+	     vcpup = kvm_get_vcpu(kvm, ++idx))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'vcpup' - possible side-effects?
#286: FILE: include/linux/kvm_host.h:188:
+#define kvm_for_each_vcpu(idx, vcpup, kvm) \
+	for (idx = 0, vcpup = kvm_get_vcpu(kvm, idx); \
+	     idx < atomic_read(&kvm->online_vcpus) && vcpup; \
+	     vcpup = kvm_get_vcpu(kvm, ++idx))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'kvm' - possible side-effects?
#286: FILE: include/linux/kvm_host.h:188:
+#define kvm_for_each_vcpu(idx, vcpup, kvm) \
+	for (idx = 0, vcpup = kvm_get_vcpu(kvm, idx); \
+	     idx < atomic_read(&kvm->online_vcpus) && vcpup; \
+	     vcpup = kvm_get_vcpu(kvm, ++idx))

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#357: FILE: virt/kvm/kvm_main.c:2527:
+			*val += *(u32 *)((void *)vcpu + offset);
 			^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000084041.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 7 checks, 269 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000084041.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
