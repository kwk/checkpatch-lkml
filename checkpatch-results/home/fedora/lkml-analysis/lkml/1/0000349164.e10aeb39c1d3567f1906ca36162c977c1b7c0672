WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#39: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#44: FILE: fs/unionfs/super.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#90: FILE: fs/unionfs/super.c:47:
+		printk(KERN_CRIT "unionfs: no kernel memory when allocating "

WARNING:SPLIT_STRING: quoted string split across lines
#91: FILE: fs/unionfs/super.c:48:
+		printk(KERN_CRIT "unionfs: no kernel memory when allocating "
+		       "lower-pointer array!\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#92: FILE: fs/unionfs/super.c:49:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#108: FILE: fs/unionfs/super.c:65:
+ * size (and its pages) and then clear our own inode, which will do an iput
                                                                        ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#144: FILE: fs/unionfs/super.c:101:
+			printk(KERN_CRIT

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#149: FILE: fs/unionfs/super.c:106:
+	BUG_ON(leaks != 0);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#213: FILE: fs/unionfs/super.c:170:
+	struct nameidata nd;
 	                 ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#217: FILE: fs/unionfs/super.c:174:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#222: FILE: fs/unionfs/super.c:179:
+		printk(KERN_ERR "unionfs: branch \"%s\" requires a mode\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#229: FILE: fs/unionfs/super.c:186:
+		printk(KERN_ERR "unionfs: invalid mode \"%s\" for \"%s\"\n",

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#240: FILE: fs/unionfs/super.c:197:
+	err = path_lookup(optarg, LOOKUP_FOLLOW, &nd);
 	                                          ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#242: FILE: fs/unionfs/super.c:199:
+		printk(KERN_ERR "unionfs: error accessing "

WARNING:SPLIT_STRING: quoted string split across lines
#243: FILE: fs/unionfs/super.c:200:
+		printk(KERN_ERR "unionfs: error accessing "
+		       "lower directory \"%s\" (error %d)\n",

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#248: FILE: fs/unionfs/super.c:205:
+		if (nd.mnt == new_lower_paths[idx].mnt &&
 		    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#249: FILE: fs/unionfs/super.c:206:
+		    nd.dentry == new_lower_paths[idx].dentry)
 		    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#251: FILE: fs/unionfs/super.c:208:
+	path_release(&nd);	/* no longer needed */
 	              ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#254: FILE: fs/unionfs/super.c:211:
+		printk(KERN_ERR "unionfs: branch \"%s\" "

WARNING:SPLIT_STRING: quoted string split across lines
#255: FILE: fs/unionfs/super.c:212:
+		printk(KERN_ERR "unionfs: branch \"%s\" "
+		       "not found\n", optarg);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#273: FILE: fs/unionfs/super.c:230:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#283: FILE: fs/unionfs/super.c:240:
+	err = path_lookup(optarg, LOOKUP_FOLLOW, &nd);
 	                                          ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#285: FILE: fs/unionfs/super.c:242:
+		printk(KERN_ERR "unionfs: error accessing "

WARNING:SPLIT_STRING: quoted string split across lines
#286: FILE: fs/unionfs/super.c:243:
+		printk(KERN_ERR "unionfs: error accessing "
+		       "lower directory \"%s\" (error %d)\n",

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#291: FILE: fs/unionfs/super.c:248:
+		if (nd.mnt == new_lower_paths[idx].mnt &&
 		    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#292: FILE: fs/unionfs/super.c:249:
+		    nd.dentry == new_lower_paths[idx].dentry)
 		    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#294: FILE: fs/unionfs/super.c:251:
+	path_release(&nd);	/* no longer needed */
 	              ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#296: FILE: fs/unionfs/super.c:253:
+		printk(KERN_ERR "unionfs: branch \"%s\" "

WARNING:SPLIT_STRING: quoted string split across lines
#297: FILE: fs/unionfs/super.c:254:
+		printk(KERN_ERR "unionfs: branch \"%s\" "
+		       "not found\n", optarg);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#317: FILE: fs/unionfs/super.c:274:
+		memmove(&new_data[idx], &new_data[idx+1],
 		                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#320: FILE: fs/unionfs/super.c:277:
+		memmove(&new_lower_paths[idx], &new_lower_paths[idx+1],
 		                                                   ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#338: FILE: fs/unionfs/super.c:295:
+	char *new_branch , *modename = NULL;
 	                 ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#339: FILE: fs/unionfs/super.c:296:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#367: FILE: fs/unionfs/super.c:324:
+	err = path_lookup(optarg, LOOKUP_FOLLOW, &nd);
 	                                          ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#369: FILE: fs/unionfs/super.c:326:
+		printk(KERN_ERR "unionfs: error accessing "

WARNING:SPLIT_STRING: quoted string split across lines
#370: FILE: fs/unionfs/super.c:327:
+		printk(KERN_ERR "unionfs: error accessing "
+		       "lower directory \"%s\" (error %d)\n",

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#375: FILE: fs/unionfs/super.c:332:
+		if (nd.mnt == new_lower_paths[idx].mnt &&
 		    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#376: FILE: fs/unionfs/super.c:333:
+		    nd.dentry == new_lower_paths[idx].dentry)
 		    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#378: FILE: fs/unionfs/super.c:335:
+	path_release(&nd);	/* no longer needed */
 	              ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#380: FILE: fs/unionfs/super.c:337:
+		printk(KERN_ERR "unionfs: branch \"%s\" "

WARNING:SPLIT_STRING: quoted string split across lines
#381: FILE: fs/unionfs/super.c:338:
+		printk(KERN_ERR "unionfs: branch \"%s\" "
+		       "not found\n", optarg);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#397: FILE: fs/unionfs/super.c:354:
+		printk(KERN_ERR "unionfs: null new branch\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#403: FILE: fs/unionfs/super.c:360:
+		printk(KERN_ERR "unionfs: invalid mode \"%s\" for "

WARNING:SPLIT_STRING: quoted string split across lines
#404: FILE: fs/unionfs/super.c:361:
+		printk(KERN_ERR "unionfs: invalid mode \"%s\" for "
+		       "branch \"%s\"\n", modename, new_branch);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#407: FILE: fs/unionfs/super.c:364:
+	err = path_lookup(new_branch, LOOKUP_FOLLOW, &nd);
 	                                              ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#409: FILE: fs/unionfs/super.c:366:
+		printk(KERN_ERR "unionfs: error accessing "

WARNING:SPLIT_STRING: quoted string split across lines
#410: FILE: fs/unionfs/super.c:367:
+		printk(KERN_ERR "unionfs: error accessing "
+		       "lower directory \"%s\" (error %d)\n",

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#421: FILE: fs/unionfs/super.c:378:
+	err = check_branch(&nd);
 	                    ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#423: FILE: fs/unionfs/super.c:380:
+		printk(KERN_ERR "unionfs: lower directory "

WARNING:SPLIT_STRING: quoted string split across lines
#424: FILE: fs/unionfs/super.c:381:
+		printk(KERN_ERR "unionfs: lower directory "
+		       "\"%s\" is not a valid branch\n", optarg);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#425: FILE: fs/unionfs/super.c:382:
+		path_release(&nd);
 		              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#433: FILE: fs/unionfs/super.c:390:
+	 * We don't release nd here; it's kept until umount/remount.
 	                    ^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#437: FILE: fs/unionfs/super.c:394:
+		memmove(&new_data[idx+1], &new_data[idx],
 		                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#439: FILE: fs/unionfs/super.c:396:
+		memmove(&new_lower_paths[idx+1], &new_lower_paths[idx],
 		                            ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#442: FILE: fs/unionfs/super.c:399:
+	new_lower_paths[idx].dentry = nd.dentry;
 	                              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#443: FILE: fs/unionfs/super.c:400:
+	new_lower_paths[idx].mnt = nd.mnt;
 	                           ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#445: FILE: fs/unionfs/super.c:402:
+	new_data[idx].sb = nd.dentry->d_sb;
 	                   ^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#455: FILE: fs/unionfs/super.c:412:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#507: FILE: fs/unionfs/super.c:464:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#555: FILE: fs/unionfs/super.c:512:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#636: FILE: fs/unionfs/super.c:593:
+			printk(KERN_ERR "unionfs: all remount options require "

WARNING:SPLIT_STRING: quoted string split across lines
#637: FILE: fs/unionfs/super.c:594:
+			printk(KERN_ERR "unionfs: all remount options require "
+			       "an argument (%s)\n", optname);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#651: FILE: fs/unionfs/super.c:608:
+				printk(KERN_ERR "unionfs: command exceeds "

WARNING:SPLIT_STRING: quoted string split across lines
#652: FILE: fs/unionfs/super.c:609:
+				printk(KERN_ERR "unionfs: command exceeds "
+				       "%d branches\n", UNIONFS_MAX_BRANCHES);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#686: FILE: fs/unionfs/super.c:643:
+			printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#693: FILE: fs/unionfs/super.c:650:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#709: FILE: fs/unionfs/super.c:666:
+		printk(KERN_ERR "unionfs: leftmost branch cannot be read-only "

WARNING:SPLIT_STRING: quoted string split across lines
#710: FILE: fs/unionfs/super.c:667:
+		printk(KERN_ERR "unionfs: leftmost branch cannot be read-only "
+		       "(use \"remount,ro\" to create a read-only union)\n");

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#804: FILE: fs/unionfs/super.c:761:
+		iput(unionfs_lower_inode_idx(sb->s_root->d_inode, i));
 		^^^^

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#828: FILE: fs/unionfs/super.c:785:
+	 * The code above falls through to the next label, and releases the

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#853: FILE: fs/unionfs/super.c:810:
+ * Called by iput() when the inode reference count reached zero
              ^^^^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#884: FILE: fs/unionfs/super.c:841:
+			iput(lower_inode);
 			^^^^

WARNING:NEEDLESS_IF: kmem_cache_destroy(NULL) is safe and this check is probably not required
#937: FILE: fs/unionfs/super.c:894:
+	if (unionfs_inode_cachep)
+		kmem_cache_destroy(unionfs_inode_cachep);

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#955: FILE: fs/unionfs/super.c:912:
+		if ((rdstate->access + RDCACHE_JIFFIES) > jiffies)

CHECK:SPACING: No space is necessary after a cast
#1014: FILE: fs/unionfs/super.c:971:
+	tmp_page = (char *) __get_free_page(GFP_KERNEL);

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#1023: FILE: fs/unionfs/super.c:980:
+	seq_printf(m, ",dirs=");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#1038: FILE: fs/unionfs/super.c:995:
+			seq_printf(m, ":");

CHECK:SPACING: No space is necessary after a cast
#1042: FILE: fs/unionfs/super.c:999:
+	free_page((unsigned long) tmp_page);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000349164.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 70 warnings, 7 checks, 1020 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000349164.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
