WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#42: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#47: FILE: fs/ubifs/replay.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#62: FILE: fs/ubifs/replay.c:16:
+ * this program; if not, write to the Free Software Foundation, Inc., 51$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#170: FILE: fs/ubifs/replay.c:124:
+		dbg_gc("bud LEB %d was GC'd (%d free, %d dirty)", r->lnum,
+			lp->free, lp->dirty);

WARNING:SPLIT_STRING: quoted string split across lines
#174: FILE: fs/ubifs/replay.c:128:
+			dbg_msg("LEB %d lp: %d free %d dirty "
+				"replay: %d free %d dirty", r->lnum, lp->free,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#195: FILE: fs/ubifs/replay.c:149:
+	unsigned min_blk, max_blk;

CHECK:BRACES: braces {} should be used on all arms of this statement
#228: FILE: fs/ubifs/replay.c:182:
+	if (r->flags & REPLAY_REF)
[...]
+	else if (is_hash_key(c, &r->key)) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*r)...) over kzalloc(sizeof(struct replay_entry)...)
#371: FILE: fs/ubifs/replay.c:325:
+	r = kzalloc(sizeof(struct replay_entry), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*r)...) over kzalloc(sizeof(struct replay_entry)...)
#438: FILE: fs/ubifs/replay.c:392:
+	r = kzalloc(sizeof(struct replay_entry), GFP_KERNEL);

WARNING:TYPO_SPELLING: 'trun' may be misspelled - perhaps 'turn'?
#572: FILE: fs/ubifs/replay.c:526:
+			struct ubifs_trun_node *trun = snod->node;
 			                        ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#601: FILE: fs/ubifs/replay.c:555:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*r)...) over kzalloc(sizeof(struct replay_entry)...)
#662: FILE: fs/ubifs/replay.c:616:
+	r = kzalloc(sizeof(struct replay_entry), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*bud)...) over kmalloc(sizeof(struct ubifs_bud)...)
#739: FILE: fs/ubifs/replay.c:693:
+	bud = kmalloc(sizeof(struct ubifs_bud), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*b)...) over kmalloc(sizeof(struct bud_entry)...)
#743: FILE: fs/ubifs/replay.c:697:
+	b = kmalloc(sizeof(struct bud_entry), GFP_KERNEL);

WARNING:SPLIT_STRING: quoted string split across lines
#851: FILE: fs/ubifs/replay.c:805:
+			dbg_err("first CS node at LEB %d:%d has wrong "
+				"commit number %llu expected %llu",

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#880: FILE: fs/ubifs/replay.c:834:
+	list_for_each_entry(snod, &sleb->nodes, list) {
+

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1013: FILE: fs/ubifs/replay.c:967:
+	lnum = c->ltail_lnum = c->lhead_lnum;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SPLIT_STRING: quoted string split across lines
#1044: FILE: fs/ubifs/replay.c:998:
+	dbg_mnt("finished, log head LEB %d:%d, max_sqnum %llu, "
+		"highest_inum %lu", c->lhead_lnum, c->lhead_offs, c->max_sqnum,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000302602.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 8 warnings, 9 checks, 1006 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000302602.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
