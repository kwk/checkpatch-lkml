WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
Some basic changes to allocation bus range, MMIO resource for SR-IOV device.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#128: FILE: drivers/pci/bus.c:137:
+		 * properly registered. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPLIT_STRING: quoted string split across lines
#136: FILE: drivers/pci/bus.c:145:
+			dev_err(&dev->dev, "Error registering pci_bus,"
+					   " continuing...\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#144: FILE: drivers/pci/bus.c:153:
+			dev_err(&dev->dev, "Error creating cpuaffinity"
+					   " file, continuing...\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#198: FILE: drivers/pci/hotplug/pci_hotplug_core.c:363:
+static ssize_t param_write_file(struct pci_slot *slot, const char *buf,
+		size_t count)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#215: FILE: drivers/pci/hotplug/pci_hotplug_core.c:380:
+	.attr = {.name = "param", .mode = S_IFREG | S_IRUGO | S_IWUSR},

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:LINE_SPACING: Missing a blank line after declarations
#230: FILE: drivers/pci/hotplug/pci_hotplug_core.c:461:
+	struct hotplug_slot *slot = pci_slot->hotplug;
+	if ((!slot) || (!slot->ops))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!slot'
#230: FILE: drivers/pci/hotplug/pci_hotplug_core.c:461:
+	if ((!slot) || (!slot->ops))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!slot->ops'
#230: FILE: drivers/pci/hotplug/pci_hotplug_core.c:461:
+	if ((!slot) || (!slot->ops))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'slot->ops->set_param'
#232: FILE: drivers/pci/hotplug/pci_hotplug_core.c:463:
+	if ((slot->ops->set_param) ||
+	    (slot->ops->get_param))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'slot->ops->get_param'
#232: FILE: drivers/pci/hotplug/pci_hotplug_core.c:463:
+	if ((slot->ops->set_param) ||
+	    (slot->ops->get_param))

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#374: FILE: drivers/pci/pci.c:1899:
 static void __devinit pci_no_domains(void)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#385: FILE: drivers/pci/pci.h:147:
+extern int pci_resource_alignment(struct pci_dev *dev, int resno);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#386: FILE: drivers/pci/pci.h:148:
+extern int pci_resource_bar(struct pci_dev *dev, int resno,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#424: FILE: drivers/pci/probe.c:230:
+int pci_read_base(struct pci_dev *dev, enum pci_bar_type type,
 			struct resource *res, unsigned int pos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#660: FILE: drivers/pci/setup-res.c:249:
+				align = pci_resource_alignment(ln->dev,
+						ln->res - ln->dev->resource);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#730: FILE: include/linux/pci.h:333:
+extern int pci_read_base(struct pci_dev *dev, enum pci_bar_type type,

WARNING:SPACING: Unnecessary space before function pointer arguments
#766: FILE: include/linux/pci_hotplug.h:120:
+	int (*get_max_bus_speed)	(struct hotplug_slot *slot,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#767: FILE: include/linux/pci_hotplug.h:121:
+	int (*get_max_bus_speed)	(struct hotplug_slot *slot,
+						enum pci_bus_speed *value);

WARNING:SPACING: Unnecessary space before function pointer arguments
#768: FILE: include/linux/pci_hotplug.h:122:
+	int (*get_cur_bus_speed)	(struct hotplug_slot *slot,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#769: FILE: include/linux/pci_hotplug.h:123:
+	int (*get_cur_bus_speed)	(struct hotplug_slot *slot,
+						enum pci_bus_speed *value);

WARNING:SPACING: Unnecessary space before function pointer arguments
#770: FILE: include/linux/pci_hotplug.h:124:
+	int (*set_param)		(struct hotplug_slot *slot,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#771: FILE: include/linux/pci_hotplug.h:125:
+	int (*set_param)		(struct hotplug_slot *slot,
+						const char *param, int len);

WARNING:SPACING: Unnecessary space before function pointer arguments
#772: FILE: include/linux/pci_hotplug.h:126:
+	int (*get_param)		(struct hotplug_slot *slot,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#773: FILE: include/linux/pci_hotplug.h:127:
+	int (*get_param)		(struct hotplug_slot *slot,
+						const char **param);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000232919.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 11 warnings, 14 checks, 636 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000232919.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
