WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#38: FILE: Makefile:4:
+EXTRAVERSION = .4
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: No space is necessary after a cast
#75: FILE: arch/sparc/kernel/process.c:432:
+		      (int __user *) parent_tid_ptr,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#76: FILE: arch/sparc/kernel/process.c:433:
+		      (int __user *) child_tid_ptr);

CHECK:SPACING: No space is necessary after a cast
#215: FILE: arch/sparc/kernel/signal.c:361:
+		return (void __user *) -1L;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#240: FILE: arch/sparc/kernel/signal.c:1017:
+asmlinkage void do_signal(struct pt_regs * regs, unsigned long orig_i0)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: arch/sparc/kernel/signal.c:1036:
+ ^Iif (pt_regs_is_syscall(regs) && (regs->psr & PSR_C))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#259: FILE: arch/sparc/kernel/signal.c:1036:
+ ^Iif (pt_regs_is_syscall(regs) && (regs->psr & PSR_C))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: arch/sparc/kernel/signal.c:1036:
+ ^Iif (pt_regs_is_syscall(regs) && (regs->psr & PSR_C))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#260: FILE: arch/sparc/kernel/signal.c:1037:
+ ^I^Irestart_syscall = 1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#260: FILE: arch/sparc/kernel/signal.c:1037:
+ ^I^Irestart_syscall = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: arch/sparc/kernel/signal.c:1037:
+ ^I^Irestart_syscall = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#261: FILE: arch/sparc/kernel/signal.c:1038:
+ ^Ielse$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#261: FILE: arch/sparc/kernel/signal.c:1038:
+ ^Ielse$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: arch/sparc/kernel/signal.c:1038:
+ ^Ielse$

ERROR:CODE_INDENT: code indent should use tabs where possible
#262: FILE: arch/sparc/kernel/signal.c:1039:
+ ^I^Irestart_syscall = 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#262: FILE: arch/sparc/kernel/signal.c:1039:
+ ^I^Irestart_syscall = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: arch/sparc/kernel/signal.c:1039:
+ ^I^Irestart_syscall = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: arch/sparc/kernel/signal.c:1046:
+ ^Isignr = get_signal_to_deliver(&info, &ka, regs, NULL);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#270: FILE: arch/sparc/kernel/signal.c:1046:
+ ^Isignr = get_signal_to_deliver(&info, &ka, regs, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: arch/sparc/kernel/signal.c:1046:
+ ^Isignr = get_signal_to_deliver(&info, &ka, regs, NULL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#272: FILE: arch/sparc/kernel/signal.c:1048:
+ ^I/* If the debugger messes with the program counter, it clears$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#272: FILE: arch/sparc/kernel/signal.c:1048:
+ ^I/* If the debugger messes with the program counter, it clears$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: arch/sparc/kernel/signal.c:1048:
+ ^I/* If the debugger messes with the program counter, it clears$

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: arch/sparc/kernel/signal.c:1049:
+ ^I * the software "in syscall" bit, directing us to not perform$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#273: FILE: arch/sparc/kernel/signal.c:1049:
+ ^I * the software "in syscall" bit, directing us to not perform$

ERROR:CODE_INDENT: code indent should use tabs where possible
#274: FILE: arch/sparc/kernel/signal.c:1050:
+ ^I * a syscall restart.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#274: FILE: arch/sparc/kernel/signal.c:1050:
+ ^I * a syscall restart.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#275: FILE: arch/sparc/kernel/signal.c:1051:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#275: FILE: arch/sparc/kernel/signal.c:1051:
+ ^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#276: FILE: arch/sparc/kernel/signal.c:1052:
+ ^Iif (restart_syscall && !pt_regs_is_syscall(regs))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#276: FILE: arch/sparc/kernel/signal.c:1052:
+ ^Iif (restart_syscall && !pt_regs_is_syscall(regs))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: arch/sparc/kernel/signal.c:1052:
+ ^Iif (restart_syscall && !pt_regs_is_syscall(regs))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#277: FILE: arch/sparc/kernel/signal.c:1053:
+ ^I^Irestart_syscall = 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#277: FILE: arch/sparc/kernel/signal.c:1053:
+ ^I^Irestart_syscall = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: arch/sparc/kernel/signal.c:1053:
+ ^I^Irestart_syscall = 0;$

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#508: FILE: arch/sparc64/kernel/pci.c:403:
+	 * firmware can sample the value before the the IDE

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#612: FILE: arch/sparc64/kernel/pci.c:777:
 struct pci_bus * __devinit pci_scan_one_pbm(struct pci_pbm_info *pbm)

CHECK:SPACING: No space is necessary after a cast
#799: FILE: arch/sparc64/kernel/signal.c:390:
+		return (void __user *) -1L;

ERROR:CODE_INDENT: code indent should use tabs where possible
#847: FILE: arch/sparc64/kernel/signal.c:538:
+ ^Iif (pt_regs_is_syscall(regs) &&$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#847: FILE: arch/sparc64/kernel/signal.c:538:
+ ^Iif (pt_regs_is_syscall(regs) &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#847: FILE: arch/sparc64/kernel/signal.c:538:
+ ^Iif (pt_regs_is_syscall(regs) &&$

CHECK:BRACES: braces {} should be used on all arms of this statement
#847: FILE: arch/sparc64/kernel/signal.c:538:
+ 	if (pt_regs_is_syscall(regs) &&
[...]
+ 	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#848: FILE: arch/sparc64/kernel/signal.c:539:
+ ^I    (regs->tstate & (TSTATE_XCARRY | TSTATE_ICARRY))) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#848: FILE: arch/sparc64/kernel/signal.c:539:
+ ^I    (regs->tstate & (TSTATE_XCARRY | TSTATE_ICARRY))) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#848: FILE: arch/sparc64/kernel/signal.c:539:
+ 	if (pt_regs_is_syscall(regs) &&
+ 	    (regs->tstate & (TSTATE_XCARRY | TSTATE_ICARRY))) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#848: FILE: arch/sparc64/kernel/signal.c:539:
+ ^I    (regs->tstate & (TSTATE_XCARRY | TSTATE_ICARRY))) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#849: FILE: arch/sparc64/kernel/signal.c:540:
+ ^I^Irestart_syscall = 1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#849: FILE: arch/sparc64/kernel/signal.c:540:
+ ^I^Irestart_syscall = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#849: FILE: arch/sparc64/kernel/signal.c:540:
+ ^I^Irestart_syscall = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#850: FILE: arch/sparc64/kernel/signal.c:541:
+ ^I} else$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#850: FILE: arch/sparc64/kernel/signal.c:541:
+ ^I} else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#850: FILE: arch/sparc64/kernel/signal.c:541:
+ ^I} else$

CHECK:BRACES: Unbalanced braces around else statement
#850: FILE: arch/sparc64/kernel/signal.c:541:
+ 	} else

ERROR:CODE_INDENT: code indent should use tabs where possible
#851: FILE: arch/sparc64/kernel/signal.c:542:
+ ^I^Irestart_syscall = 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#851: FILE: arch/sparc64/kernel/signal.c:542:
+ ^I^Irestart_syscall = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#851: FILE: arch/sparc64/kernel/signal.c:542:
+ ^I^Irestart_syscall = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#940: FILE: arch/sparc64/kernel/signal32.c:298:
+ ^I/* Prevent syscall restart.  */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#940: FILE: arch/sparc64/kernel/signal32.c:298:
+ ^I/* Prevent syscall restart.  */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#940: FILE: arch/sparc64/kernel/signal32.c:298:
+ ^I/* Prevent syscall restart.  */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#941: FILE: arch/sparc64/kernel/signal32.c:299:
+ ^Ipt_regs_clear_syscall(regs);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#941: FILE: arch/sparc64/kernel/signal32.c:299:
+ ^Ipt_regs_clear_syscall(regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#941: FILE: arch/sparc64/kernel/signal32.c:299:
+ ^Ipt_regs_clear_syscall(regs);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#950: FILE: arch/sparc64/kernel/signal32.c:454:
+ ^I/* Prevent syscall restart.  */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#950: FILE: arch/sparc64/kernel/signal32.c:454:
+ ^I/* Prevent syscall restart.  */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#950: FILE: arch/sparc64/kernel/signal32.c:454:
+ ^I/* Prevent syscall restart.  */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#951: FILE: arch/sparc64/kernel/signal32.c:455:
+ ^Ipt_regs_clear_syscall(regs);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#951: FILE: arch/sparc64/kernel/signal32.c:455:
+ ^Ipt_regs_clear_syscall(regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#951: FILE: arch/sparc64/kernel/signal32.c:455:
+ ^Ipt_regs_clear_syscall(regs);$

CHECK:SPACING: No space is necessary after a cast
#965: FILE: arch/sparc64/kernel/signal32.c:511:
+		return (void __user *) -1L;

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#1220: FILE: drivers/ata/ata_piix.c:1571:
+			dev_printk(KERN_INFO, host->dev, "SCR access via "

WARNING:SPLIT_STRING: quoted string split across lines
#1221: FILE: drivers/ata/ata_piix.c:1572:
+			dev_printk(KERN_INFO, host->dev, "SCR access via "
+				   "SIDPR is available but doesn't work\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1262: FILE: drivers/i2c/busses/i2c-piix4.c:111:
+static struct dmi_system_id __devinitdata piix4_dmi_blacklist[] = {

WARNING:MISPLACED_INIT: __devinitdata should be placed after piix4_dmi_blacklist[]
#1262: FILE: drivers/i2c/busses/i2c-piix4.c:111:
+static struct dmi_system_id __devinitdata piix4_dmi_blacklist[] = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1281: FILE: drivers/i2c/busses/i2c-piix4.c:130:
+/* The IBM entry is in a separate table because we only check it
+   on Intel-based systems */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1281: FILE: drivers/i2c/busses/i2c-piix4.c:130:
+   on Intel-based systems */

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1282: FILE: drivers/i2c/busses/i2c-piix4.c:131:
+static struct dmi_system_id __devinitdata piix4_dmi_ibm[] = {

WARNING:MISPLACED_INIT: __devinitdata should be placed after piix4_dmi_ibm[]
#1282: FILE: drivers/i2c/busses/i2c-piix4.c:131:
+static struct dmi_system_id __devinitdata piix4_dmi_ibm[] = {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1291: FILE: drivers/i2c/busses/i2c-piix4.c:147:
+	/* On some motherboards, it was reported that accessing the SMBus
+	   caused severe hardware problems */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1291: FILE: drivers/i2c/busses/i2c-piix4.c:147:
+	   caused severe hardware problems */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1301: FILE: drivers/i2c/busses/i2c-piix4.c:156:
+	if (dmi_check_system(piix4_dmi_ibm) &&
 			PIIX4_dev->vendor == PCI_VENDOR_ID_INTEL) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1343: FILE: drivers/md/raid5.c:2405:
+	    test_bit(STRIPE_OP_MOD_REPAIR_PD, &sh->ops.pending)) {
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1350: FILE: drivers/md/raid5.c:2412:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1376: FILE: drivers/media/dvb/dvb-usb/dib0700_devices.c:307:
+	 * P_agc_time_est=3, P_agc_freeze=0, P_agc_nb_est=2, P_agc_write=0 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1418: FILE: drivers/media/dvb/dvb-usb/dib0700_devices.c:349:
+	0, 0, 1, 1, 0, /* misc: refdiv, bypclk_div, IO_CLK_en_core, ADClkSrc,
+			  modulo */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1418: FILE: drivers/media/dvb/dvb-usb/dib0700_devices.c:349:
+			  modulo */

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1445: FILE: drivers/media/dvb/dvb-usb/dib0700_devices.c:376:
+		dib7000p_set_gpio(adap->fe, 8, 0, 0); msleep(10);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1452: FILE: drivers/media/dvb/dvb-usb/dib0700_devices.c:383:
+		err("%s: unknown command %d, arg %d\n", __func__,
+			command, arg);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#1474: FILE: drivers/media/dvb/dvb-usb/dib0700_devices.c:405:
+	if (desc->idVendor  == USB_VID_PINNACLE &&
[...]
+	dib0700_set_gpio(adap->dev, GPIO6, GPIO_OUT, 0);

CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#1474: FILE: drivers/media/dvb/dvb-usb/dib0700_devices.c:405:
+	if (desc->idVendor  == USB_VID_PINNACLE &&

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#1475: FILE: drivers/media/dvb/dvb-usb/dib0700_devices.c:406:
+	    desc->idProduct == USB_PID_PINNACLE_EXPRESSCARD_320CX)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#1477: FILE: drivers/media/dvb/dvb-usb/dib0700_devices.c:408:
+	else
+	dib0700_set_gpio(adap->dev, GPIO6, GPIO_OUT, 1);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1484: FILE: drivers/media/dvb/dvb-usb/dib0700_devices.c:415:
+	msleep(10);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1488: FILE: drivers/media/dvb/dvb-usb/dib0700_devices.c:419:
+	msleep(10);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1491: FILE: drivers/media/dvb/dvb-usb/dib0700_devices.c:422:
+	dib7000p_i2c_enumeration(&adap->dev->i2c_adap, 1, 18,
+		&stk7700ph_dib7700_xc3028_config);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1494: FILE: drivers/media/dvb/dvb-usb/dib0700_devices.c:425:
+	adap->fe = dvb_attach(dib7000p_attach, &adap->dev->i2c_adap, 0x80,
+		&stk7700ph_dib7700_xc3028_config);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!adap->fe"
#1496: FILE: drivers/media/dvb/dvb-usb/dib0700_devices.c:427:
+	return adap->fe == NULL ? -ENODEV : 0;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1504: FILE: drivers/media/dvb/dvb-usb/dib0700_devices.c:435:
+	tun_i2c = dib7000p_get_i2c_master(adap->fe,
+		DIBX000_I2C_INTERFACE_TUNER, 1);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#1520: FILE: drivers/media/dvb/dvb-usb/dib0700_devices.c:941:
+	if (adap->dev->udev->descriptor.idVendor  == USB_VID_PINNACLE &&
[...]
+	dib0700_set_gpio(adap->dev, GPIO6, GPIO_OUT, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1521: FILE: drivers/media/dvb/dvb-usb/dib0700_devices.c:942:
+	if (adap->dev->udev->descriptor.idVendor  == USB_VID_PINNACLE &&
+	adap->dev->udev->descriptor.idProduct == USB_PID_PINNACLE_PCTV72E)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#1523: FILE: drivers/media/dvb/dvb-usb/dib0700_devices.c:944:
+	else
 	dib0700_set_gpio(adap->dev, GPIO6, GPIO_OUT, 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1533: FILE: drivers/media/dvb/dvb-usb/dib0700_devices.c:960:
+	dib7000p_i2c_enumeration(&adap->dev->i2c_adap, 1, 18,
+		&dib7070p_dib7000p_config);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1537: FILE: drivers/media/dvb/dvb-usb/dib0700_devices.c:963:
+	adap->fe = dvb_attach(dib7000p_attach, &adap->dev->i2c_adap, 0x80,
+		&dib7070p_dib7000p_config);

CHECK:BRACES: Unbalanced braces around else statement
#1838: FILE: drivers/scsi/libiscsi.c:638:
+			} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#1881: FILE: drivers/scsi/libiscsi.c:1382:
+	if (time_before_eq(last_recv + recv_timeout, jiffies)) {
[...]
 	} else
[...]

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1997: FILE: drivers/serial/sunzilog.c:1352:
 static int __devinit zs_probe(struct of_device *op, const struct of_device_id *match)

CHECK:BRACES: Unbalanced braces around else statement
#2142: FILE: drivers/usb/host/ohci-hub.c:360:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2146: FILE: drivers/usb/host/ohci-hub.c:364:
+			ohci_writel(ohci, RH_PS_PPS,
+					&ohci->regs->roothub.portstatus[port]);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2295: FILE: include/asm-sparc/mman.h:40:
+#define arch_mmap_check(addr,len,flags)	sparc_mmap_check(addr,len)
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2295: FILE: include/asm-sparc/mman.h:40:
+#define arch_mmap_check(addr,len,flags)	sparc_mmap_check(addr,len)
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2295: FILE: include/asm-sparc/mman.h:40:
+#define arch_mmap_check(addr,len,flags)	sparc_mmap_check(addr,len)
                                        	                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2380: FILE: include/asm-sparc64/mman.h:40:
+#define arch_mmap_check(addr,len,flags)	sparc64_mmap_check(addr,len)
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2380: FILE: include/asm-sparc64/mman.h:40:
+#define arch_mmap_check(addr,len,flags)	sparc64_mmap_check(addr,len)
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2380: FILE: include/asm-sparc64/mman.h:40:
+#define arch_mmap_check(addr,len,flags)	sparc64_mmap_check(addr,len)
                                        	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2413: FILE: include/asm-sparc64/pstate.h:65:
+#define TSTATE_SYSCALL	_AC(0x0000000000000020,UL) /* in syscall trap   */
                       	                      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2482: FILE: include/asm-sparc64/ttable.h:94:
+	rdpr	%pil, %g2;				\
 	    	^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2482: FILE: include/asm-sparc64/ttable.h:94:
+	rdpr	%pil, %g2;				\
 	    	      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2483: FILE: include/asm-sparc64/ttable.h:95:
+	mov	TSTATE_SYSCALL, %g3;			\
 	   	                ^

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#2486: FILE: include/asm-sparc64/ttable.h:97:
+	ba,pt	%xcc, etrap_syscall;			\
 	^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2486: FILE: include/asm-sparc64/ttable.h:97:
+	ba,pt	%xcc, etrap_syscall;			\
 	  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2486: FILE: include/asm-sparc64/ttable.h:97:
+	ba,pt	%xcc, etrap_syscall;			\
 	     	^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2492: FILE: include/asm-sparc64/ttable.h:101:
+	 or	%l7, %lo(systbl), %l7;
 	   	^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2492: FILE: include/asm-sparc64/ttable.h:101:
+	 or	%l7, %lo(systbl), %l7;
 	   	     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2492: FILE: include/asm-sparc64/ttable.h:101:
+	 or	%l7, %lo(systbl), %l7;
 	   	                  ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2648: FILE: net/ipv4/ipvs/ip_vs_proto.c:151:
+		return (IPPROTO_IP == proto) ? "NONE" : "ERR!";

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2727: FILE: net/ipv4/ipvs/ip_vs_sync.c:315:
+		if (p + SIMPLE_CONN_SIZE > buffer+buflen) {
 		                                 ^

CHECK:SPACING: No space is necessary after a cast
#2731: FILE: net/ipv4/ipvs/ip_vs_sync.c:319:
+		s = (struct ip_vs_sync_conn *) p;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2737: FILE: net/ipv4/ipvs/ip_vs_sync.c:325:
+			if (p > buffer+buflen) {
 			              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2751: FILE: net/ipv4/ipvs/ip_vs_sync.c:339:
+				IP_VS_ERR_RL("Unsupported protocol %u in sync msg\n",
+					s->protocol);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2756: FILE: net/ipv4/ipvs/ip_vs_sync.c:344:
+				IP_VS_DBG(2, "Invalid %s state %u in sync msg\n",
+					pp->name, state);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2764: FILE: net/ipv4/ipvs/ip_vs_sync.c:352:
+				IP_VS_DBG(2, "Invalid template state %u in sync msg\n",
+					state);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2806: FILE: net/ipv4/ipvs/ip_vs_sync.c:419:
+		/*
+		 * We can not recover the right timeout for templates

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2814: FILE: net/ipv4/ipvs/ip_vs_sync.c:427:
+			cp->timeout = (3*60*HZ);
 			                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2814: FILE: net/ipv4/ipvs/ip_vs_sync.c:427:
+			cp->timeout = (3*60*HZ);
 			                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Qdisc>
#2917: FILE: net/sched/sch_htb.c:1201:
+			       struct Qdisc *new_q)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000280481.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 29 errors, 65 warnings, 41 checks, 2426 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000280481.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
