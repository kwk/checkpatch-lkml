WARNING:SPACING: space prohibited between function name and open parenthesis '('
#142: FILE: arch/um/include/init.h:48:
+#define __exit_call	__used __attribute__ ((__section__ (".exitcall.exit")))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#142: FILE: arch/um/include/init.h:48:
+#define __exit_call	__used __attribute__ ((__section__ (".exitcall.exit")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".exitcall.exit") over __attribute__((__section__(".exitcall.exit")))
#142: FILE: arch/um/include/init.h:48:
+#define __exit_call	__used __attribute__ ((__section__ (".exitcall.exit")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#148: FILE: arch/um/include/init.h:53:
+#define __exit		__used __attribute__ ((__section__(".exit.text")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".exit.text") over __attribute__((__section__(".exit.text")))
#148: FILE: arch/um/include/init.h:53:
+#define __exit		__used __attribute__ ((__section__(".exit.text")))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#161: FILE: arch/um/include/init.h:106:
+#define __uml_init_setup	__used __attribute__ ((__section__ (".uml.setup.init")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#161: FILE: arch/um/include/init.h:106:
+#define __uml_init_setup	__used __attribute__ ((__section__ (".uml.setup.init")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".uml.setup.init") over __attribute__((__section__(".uml.setup.init")))
#161: FILE: arch/um/include/init.h:106:
+#define __uml_init_setup	__used __attribute__ ((__section__ (".uml.setup.init")))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#162: FILE: arch/um/include/init.h:107:
+#define __uml_setup_help	__used __attribute__ ((__section__ (".uml.help.init")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#162: FILE: arch/um/include/init.h:107:
+#define __uml_setup_help	__used __attribute__ ((__section__ (".uml.help.init")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".uml.help.init") over __attribute__((__section__(".uml.help.init")))
#162: FILE: arch/um/include/init.h:107:
+#define __uml_setup_help	__used __attribute__ ((__section__ (".uml.help.init")))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#163: FILE: arch/um/include/init.h:108:
+#define __uml_init_call		__used __attribute__ ((__section__ (".uml.initcall.init")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#163: FILE: arch/um/include/init.h:108:
+#define __uml_init_call		__used __attribute__ ((__section__ (".uml.initcall.init")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".uml.initcall.init") over __attribute__((__section__(".uml.initcall.init")))
#163: FILE: arch/um/include/init.h:108:
+#define __uml_init_call		__used __attribute__ ((__section__ (".uml.initcall.init")))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#164: FILE: arch/um/include/init.h:109:
+#define __uml_postsetup_call	__used __attribute__ ((__section__ (".uml.postsetup.init")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#164: FILE: arch/um/include/init.h:109:
+#define __uml_postsetup_call	__used __attribute__ ((__section__ (".uml.postsetup.init")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".uml.postsetup.init") over __attribute__((__section__(".uml.postsetup.init")))
#164: FILE: arch/um/include/init.h:109:
+#define __uml_postsetup_call	__used __attribute__ ((__section__ (".uml.postsetup.init")))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#165: FILE: arch/um/include/init.h:110:
+#define __uml_exit_call		__used __attribute__ ((__section__ (".uml.exitcall.exit")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#165: FILE: arch/um/include/init.h:110:
+#define __uml_exit_call		__used __attribute__ ((__section__ (".uml.exitcall.exit")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".uml.exitcall.exit") over __attribute__((__section__(".uml.exitcall.exit")))
#165: FILE: arch/um/include/init.h:110:
+#define __uml_exit_call		__used __attribute__ ((__section__ (".uml.exitcall.exit")))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#180: FILE: arch/um/include/init.h:125:
+#define __init_call	__used __attribute__ ((__section__ (".initcall.init")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#180: FILE: arch/um/include/init.h:125:
+#define __init_call	__used __attribute__ ((__section__ (".initcall.init")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".initcall.init") over __attribute__((__section__(".initcall.init")))
#180: FILE: arch/um/include/init.h:125:
+#define __init_call	__used __attribute__ ((__section__ (".initcall.init")))

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: drivers/rapidio/rio.h:34:
+        static struct rio_route_ops __rio_route_ops __used   \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: drivers/rapidio/rio.h:34:
+        static struct rio_route_ops __rio_route_ops __used   \$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#219: FILE: include/asm-avr32/setup.h:113:
+#define __tag __used __attribute__((__section__(".taglist.init")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".taglist.init") over __attribute__((__section__(".taglist.init")))
#219: FILE: include/asm-avr32/setup.h:113:
+#define __tag __used __attribute__((__section__(".taglist.init")))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#245: FILE: include/asm-sh/machvec.h:71:
+	__used __attribute__((__section__ (".machvec.init")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".machvec.init") over __attribute__((__section__(".machvec.init")))
#245: FILE: include/asm-sh/machvec.h:71:
+	__used __attribute__((__section__ (".machvec.init")))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#338: FILE: include/linux/init.h:46:
+#define __exit_call	__used __attribute__ ((__section__ (".exitcall.exit")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#338: FILE: include/linux/init.h:46:
+#define __exit_call	__used __attribute__ ((__section__ (".exitcall.exit")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".exitcall.exit") over __attribute__((__section__(".exitcall.exit")))
#338: FILE: include/linux/init.h:46:
+#define __exit_call	__used __attribute__ ((__section__ (".exitcall.exit")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#347: FILE: include/linux/init.h:65:
+#define __exit		__used __attribute__ ((__section__(".exit.text"))) __cold

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".exit.text") over __attribute__((__section__(".exit.text")))
#347: FILE: include/linux/init.h:65:
+#define __exit		__used __attribute__ ((__section__(".exit.text"))) __cold

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#365: FILE: include/linux/init.h:145:
+	__used __attribute__((__section__(".con_initcall.init")))=fn
 	                                                         ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".con_initcall.init") over __attribute__((__section__(".con_initcall.init")))
#365: FILE: include/linux/init.h:145:
+	__used __attribute__((__section__(".con_initcall.init")))=fn

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".security_initcall.init") over __attribute__((__section__(".security_initcall.init")))
#370: FILE: include/linux/init.h:149:
+	__used __attribute__((__section__(".security_initcall.init"))) = fn

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: include/linux/moduleparam.h:21:
+  __used^I^I^I^I^I^I^I^I  \$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000362938.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 13 errors, 25 warnings, 0 checks, 286 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000362938.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
