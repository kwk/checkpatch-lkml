WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
This patch updates lio-core-2.6.git code to support a optional millisecond delay of

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#38: 
ALUA primary and secondary access state transition via explict (via MO SET_TARGET_PORT_GROUPS)
                                                       ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'implict' may be misspelled - perhaps 'implicit'?
#39: 
and implict (via configfs) ALUA operations.
    ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#90: FILE: drivers/target/target_core_alua.c:634:
+	atomic_set(&tg_pt_gp->tg_pt_gp_alua_access_state,
+			ALUA_ACCESS_STATE_TRANSITION);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#97: FILE: drivers/target/target_core_alua.c:641:
+^Iif (tg_pt_gp->tg_pt_gp_trans_delay_msecs != 0) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: drivers/target/target_core_alua.c:854:
+^I^Imsleep_interruptible(trans_delay_msecs);^I$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#160: FILE: drivers/target/target_core_alua.c:1596:
+ssize_t core_alua_show_trans_delay_msecs(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#167: FILE: drivers/target/target_core_alua.c:1603:
+ssize_t core_alua_store_trans_delay_msecs(

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#175: FILE: drivers/target/target_core_alua.c:1611:
+	ret = strict_strtoul(page, 0, &tmp);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#177: FILE: drivers/target/target_core_alua.c:1613:
+		printk(KERN_ERR "Unable to extract trans_delay_msecs\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#181: FILE: drivers/target/target_core_alua.c:1617:
+		printk(KERN_ERR "Passed trans_delay_msecs: %lu, exceeds"

WARNING:SPLIT_STRING: quoted string split across lines
#182: FILE: drivers/target/target_core_alua.c:1618:
+		printk(KERN_ERR "Passed trans_delay_msecs: %lu, exceeds"
+			" ALUA_MAX_TRANS_DELAY_MSECS: %d\n", tmp,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#204: FILE: drivers/target/target_core_configfs.c:2271:
+static ssize_t target_core_alua_tg_pt_gp_show_attr_trans_delay_msecs(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#211: FILE: drivers/target/target_core_configfs.c:2278:
+static ssize_t target_core_alua_tg_pt_gp_store_attr_trans_delay_msecs(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: drivers/target/target_core_configfs.c:2283:
+^Ireturn core_alua_store_trans_delay_msecs(tg_pt_gp, page, count);^I$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#219: FILE: drivers/target/target_core_configfs.c:2286:
+SE_DEV_ALUA_TG_PT_ATTR(trans_delay_msecs, S_IRUGO | S_IWUSR);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:TYPO_SPELLING: 'implict' may be misspelled - perhaps 'implicit'?
#242: FILE: include/target/target_core_alua.h:49:
+ * Used for implict and explict ALUA transitional delay, that is disabled
             ^^^^^^^

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#242: FILE: include/target/target_core_alua.h:49:
+ * Used for implict and explict ALUA transitional delay, that is disabled
                         ^^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#255: FILE: include/target/target_core_alua.h:114:
+extern ssize_t core_alua_show_trans_delay_msecs(struct t10_alua_tg_pt_gp_s *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_tg_pt_gp_s *' should also have an identifier name
#255: FILE: include/target/target_core_alua.h:114:
+extern ssize_t core_alua_show_trans_delay_msecs(struct t10_alua_tg_pt_gp_s *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#255: FILE: include/target/target_core_alua.h:114:
+extern ssize_t core_alua_show_trans_delay_msecs(struct t10_alua_tg_pt_gp_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#256: FILE: include/target/target_core_alua.h:115:
+extern ssize_t core_alua_show_trans_delay_msecs(struct t10_alua_tg_pt_gp_s *,
+					char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#257: FILE: include/target/target_core_alua.h:116:
+extern ssize_t core_alua_store_trans_delay_msecs(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_tg_pt_gp_s *' should also have an identifier name
#257: FILE: include/target/target_core_alua.h:116:
+extern ssize_t core_alua_store_trans_delay_msecs(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#257: FILE: include/target/target_core_alua.h:116:
+extern ssize_t core_alua_store_trans_delay_msecs(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#257: FILE: include/target/target_core_alua.h:116:
+extern ssize_t core_alua_store_trans_delay_msecs(struct t10_alua_tg_pt_gp_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#258: FILE: include/target/target_core_alua.h:117:
+extern ssize_t core_alua_store_trans_delay_msecs(struct t10_alua_tg_pt_gp_s *,
+					const char *, size_t);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078058.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 15 warnings, 9 checks, 172 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078058.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
