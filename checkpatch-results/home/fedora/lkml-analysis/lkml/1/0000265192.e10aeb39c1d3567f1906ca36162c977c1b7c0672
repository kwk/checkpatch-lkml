WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#114: FILE: drivers/usb/serial/mct_u232.c:97:
+			struct usb_serial_port *port, struct file *filp);
 			                                           ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: drivers/usb/serial/mct_u232.c:97:
+static int  mct_u232_open(struct tty_struct *tty,
+			struct usb_serial_port *port, struct file *filp);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#116: FILE: drivers/usb/serial/mct_u232.c:99:
+			struct usb_serial_port *port, struct file *filp);
 			                                           ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#116: FILE: drivers/usb/serial/mct_u232.c:99:
+static void mct_u232_close(struct tty_struct *tty,
+			struct usb_serial_port *port, struct file *filp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#119: FILE: drivers/usb/serial/mct_u232.c:102:
+static void mct_u232_set_termios(struct tty_struct *tty,
+			struct usb_serial_port *port, struct ktermios *old);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: drivers/usb/serial/mct_u232.c:106:
+static int  mct_u232_tiocmset(struct tty_struct *tty, struct file *file,
+			unsigned int set, unsigned int clear);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#150: FILE: drivers/usb/serial/mct_u232.c:182:
 	if (le16_to_cpu(serial->dev->descriptor.idProduct) == MCT_U232_SITECOM_PID
+		|| le16_to_cpu(serial->dev->descriptor.idProduct) == MCT_U232_BELKIN_F5U109_PID) {

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#150: FILE: drivers/usb/serial/mct_u232.c:182:
+		|| le16_to_cpu(serial->dev->descriptor.idProduct) == MCT_U232_BELKIN_F5U109_PID) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#207: FILE: drivers/usb/serial/mct_u232.c:241:
+	divisor = cpu_to_le32(mct_u232_calculate_baud_rate(serial, value,
+								&speed));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#210: FILE: drivers/usb/serial/mct_u232.c:244:
+	rc = usb_control_msg(serial->dev, usb_sndctrlpipe(serial->dev, 0),
+				MCT_U232_SET_BAUD_RATE_REQUEST,

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 11)
#244: FILE: drivers/usb/serial/mct_u232.c:280:
+	if (port && C_CRTSCTS(tty))
 	   cts_enable_byte = 1;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#250: FILE: drivers/usb/serial/mct_u232.c:284:
+	dbg("set_baud_rate: send second control message, data = %02X",
+							cts_enable_byte);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#264: FILE: drivers/usb/serial/mct_u232.c:292:
+		err("Sending USB device request code %d failed (error = %d)",
+					MCT_U232_SET_CTS_REQUEST, rc);

WARNING:LINE_SPACING: Missing a blank line after declarations
#279: FILE: drivers/usb/serial/mct_u232.c:300:
+	int rc;
+	rc = usb_control_msg(serial->dev, usb_sndctrlpipe(serial->dev, 0),

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#280: FILE: drivers/usb/serial/mct_u232.c:301:
+	rc = usb_control_msg(serial->dev, usb_sndctrlpipe(serial->dev, 0),
+			MCT_U232_SET_LINE_CTRL_REQUEST,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#309: FILE: drivers/usb/serial/mct_u232.c:323:
+	rc = usb_control_msg(serial->dev, usb_sndctrlpipe(serial->dev, 0),
+			MCT_U232_SET_MODEM_CTRL_REQUEST,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#323: FILE: drivers/usb/serial/mct_u232.c:335:
+static int mct_u232_get_modem_stat(struct usb_serial *serial,
+						unsigned char *msr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#332: FILE: drivers/usb/serial/mct_u232.c:338:
+	int rc;
+	rc = usb_control_msg(serial->dev, usb_rcvctrlpipe(serial->dev, 0),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#333: FILE: drivers/usb/serial/mct_u232.c:339:
+	rc = usb_control_msg(serial->dev, usb_rcvctrlpipe(serial->dev, 0),
+			MCT_U232_GET_MODEM_STAT_REQUEST,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#348: FILE: drivers/usb/serial/mct_u232.c:352:
+static void mct_u232_msr_to_state(unsigned int *control_state,
+						unsigned char msr)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#401: FILE: drivers/usb/serial/mct_u232.c:422:
+static int  mct_u232_open(struct tty_struct *tty,
 			struct usb_serial_port *port, struct file *filp)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#455: FILE: drivers/usb/serial/mct_u232.c:560:
+	usb_serial_debug_data(debug, &port->dev, __func__,
+					urb->actual_length, data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#499: FILE: drivers/usb/serial/mct_u232.c:616:
+		err("%s - usb_submit_urb failed with result %d",
 		     __func__, retval);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000265192.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 18 checks, 517 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000265192.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
