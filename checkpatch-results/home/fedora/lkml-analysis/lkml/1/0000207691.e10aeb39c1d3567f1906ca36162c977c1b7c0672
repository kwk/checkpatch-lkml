WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
master.kernel.org:/pub/scm/linux/kernel/git/jgarzik/netdev-2.6.git davem-next

WARNING:TYPO_SPELLING: 'adminstrative' may be misspelled - perhaps 'administrative'?
#141: FILE: Documentation/networking/bonding.txt:224:
+		- The bond's adminstrative state changes to up
 		             ^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#186: FILE: MAINTAINERS:3858:
+P:	Steve Glendinning
+M:	steve.glendinning@smsc.com

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#209: FILE: drivers/net/Kconfig:982:
+config SMSC911X
+	tristate "SMSC LAN911x/LAN921x families embedded ethernet support"
+	depends on ARM || SUPERH
+	select CRC32
+	select MII
+	select PHYLIB
+	---help---
+	  Say Y here if you want support for SMSC LAN911x and LAN921x families
+	  of ethernet controllers.
+
+	  To compile this driver as a module, choose M here and read
+	  <file:Documentation/networking/net-modules.txt>. The module
+	  will be called smsc911x.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#266: FILE: drivers/net/bonding/bond_3ad.c:241:
+/*
+ * __agg_has_partner

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#307: FILE: drivers/net/bonding/bond_3ad.c:1434:
+/*
+ * Decide if "agg" is a better choice for the new active aggregator that

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#314: FILE: drivers/net/bonding/bond_3ad.c:1441:
+	/*
+	 * 0. If no best, select current.

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#361: FILE: drivers/net/bonding/bond_3ad.c:1488:
+		/*FALLTHROUGH*/

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#370: FILE: drivers/net/bonding/bond_3ad.c:1497:
+		printk(KERN_WARNING DRV_NAME

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#448: FILE: drivers/net/bonding/bond_3ad.c:1553:
+		/*
+		 * For the STABLE policy, don't replace the old active

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'best == active'
#527: FILE: drivers/net/bonding/bond_3ad.c:1570:
+	if (best && (best == active)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#544: FILE: drivers/net/bonding/bond_3ad.c:1578:
+		dprintk("best Agg=%d; P=%d; a k=%d; p k=%d; Ind=%d; Act=%d\n",
+		       best->aggregator_identifier, best->num_of_ports,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#549: FILE: drivers/net/bonding/bond_3ad.c:1583:
+		dprintk("best ports %p slave %p %s\n",
+		       best->lag_ports, best->slave,

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#554: FILE: drivers/net/bonding/bond_3ad.c:1588:
+		     agg = __get_next_agg(agg)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#574: FILE: drivers/net/bonding/bond_3ad.c:1598:
+			printk(KERN_WARNING DRV_NAME ": %s: Warning: No 802.3ad"

WARNING:SPLIT_STRING: quoted string split across lines
#575: FILE: drivers/net/bonding/bond_3ad.c:1599:
+			printk(KERN_WARNING DRV_NAME ": %s: Warning: No 802.3ad"
+			       " response from the link partner for any"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#576: FILE: drivers/net/bonding/bond_3ad.c:1600:
+			       " response from the link partner for any"
+			       " adapters in the bond\n",

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#609: FILE: drivers/net/bonding/bond_3ad.c:1623:
+	/*
+	 * if the selected aggregator is of join individuals

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#641: FILE: drivers/net/bonding/bond_3ad.c:1901:
+/*
+ * bond_3ad_initiate_agg_selection(struct bonding *bond)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#726: FILE: drivers/net/bonding/bond_alb.c:375:
+		printk("rar: update orig %s bond_dev %s\n", orig_dev->name,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#747: FILE: drivers/net/bonding/bond_ipv6.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#761: FILE: drivers/net/bonding/bond_ipv6.c:15:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#762: FILE: drivers/net/bonding/bond_ipv6.c:16:
+ * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#779: FILE: drivers/net/bonding/bond_ipv6.c:33:
+/*
+ * Assign bond->master_ipv6 to the next IPv6 address in the list, or

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#824: FILE: drivers/net/bonding/bond_ipv6.c:78:
+	dprintk("ipv6 na on slave %s: dest %pI6, src %pI6\n",
+	       slave->name, &mcaddr, daddr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#830: FILE: drivers/net/bonding/bond_ipv6.c:84:
+		printk(KERN_ERR DRV_NAME ": NA packet allocation failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#837: FILE: drivers/net/bonding/bond_ipv6.c:91:
+			printk(KERN_ERR DRV_NAME ": failed to insert VLAN tag\n");

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#846: FILE: drivers/net/bonding/bond_ipv6.c:100:
+/*
+ * Kick out an unsolicited Neighbor Advertisement for an IPv6 address on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#860: FILE: drivers/net/bonding/bond_ipv6.c:114:
+	dprintk("bond_send_unsol_na: bond %s slave %s\n", bond->dev->name,
+				slave ? slave->dev->name : "NULL");

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#888: FILE: drivers/net/bonding/bond_ipv6.c:142:
+/*
+ * bond_inet6addr_event: handle inet6addr notifier chain events.

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#981: FILE: drivers/net/bonding/bond_main.c:100:
+static char *ad_select  = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*vlan)...) over kzalloc(sizeof(struct vlan_entry)...)
#1022: FILE: drivers/net/bonding/bond_main.c:258:
+	vlan = kzalloc(sizeof(struct vlan_entry), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1109: FILE: drivers/net/bonding/bond_main.c:4782:
+			printk(KERN_ERR DRV_NAME

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ad_select"
#1111: FILE: drivers/net/bonding/bond_main.c:4784:
+			       ad_select == NULL ? "NULL" : ad_select);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1116: FILE: drivers/net/bonding/bond_main.c:4789:
+			printk(KERN_WARNING DRV_NAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1131: FILE: drivers/net/bonding/bond_main.c:4844:
+		printk(KERN_WARNING DRV_NAME

WARNING:SPLIT_STRING: quoted string split across lines
#1133: FILE: drivers/net/bonding/bond_main.c:4846:
+		       ": Warning: num_unsol_na (%d) not in range 0-255 so it "
+		       "was reset to 1 \n", num_unsol_na);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1133: FILE: drivers/net/bonding/bond_main.c:4846:
+		       "was reset to 1 \n", num_unsol_na);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1172: FILE: drivers/net/bonding/bond_sysfs.c:51:
+extern struct bond_parm_tbl ad_select_tbl[];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1191: FILE: drivers/net/bonding/bond_sysfs.c:959:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1200: FILE: drivers/net/bonding/bond_sysfs.c:968:
+		printk(KERN_ERR DRV_NAME

WARNING:SPLIT_STRING: quoted string split across lines
#1202: FILE: drivers/net/bonding/bond_sysfs.c:970:
+		       ": %s: Unable to update ad_select because interface "
+		       "is up.\n", bond->dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1211: FILE: drivers/net/bonding/bond_sysfs.c:979:
+		printk(KERN_INFO DRV_NAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1216: FILE: drivers/net/bonding/bond_sysfs.c:984:
+		printk(KERN_ERR DRV_NAME

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'bonding_show_ad_select' to 'ad_select_show' 'bonding_store_ad_select' to 'ad_select_store'
#1223: FILE: drivers/net/bonding/bond_sysfs.c:991:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1225: FILE: drivers/net/bonding/bond_sysfs.c:993:
+static DEVICE_ATTR(ad_select, S_IRUGO | S_IWUSR, bonding_show_ad_select, bonding_store_ad_select);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:TYPO_SPELLING: 'unsolicted' may be misspelled - perhaps 'unsolicited'?
#1236: FILE: drivers/net/bonding/bond_sysfs.c:1036:
+ * Show and set the number of unsolicted NA's to send after a failover event.
                               ^^^^^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1236: FILE: drivers/net/bonding/bond_sysfs.c:1036:
+/*
+ * Show and set the number of unsolicted NA's to send after a failover event.

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#1254: FILE: drivers/net/bonding/bond_sysfs.c:1054:
+	if (sscanf(buf, "%d", &new_value) != 1) {
+		printk(KERN_ERR DRV_NAME
+		       ": %s: no num_unsol_na value specified.\n",
+		       bond->dev->name);
+		ret = -EINVAL;
+		goto out;
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1255: FILE: drivers/net/bonding/bond_sysfs.c:1055:
+		printk(KERN_ERR DRV_NAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1262: FILE: drivers/net/bonding/bond_sysfs.c:1062:
+		printk(KERN_ERR DRV_NAME

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'bonding_show_n_unsol_na' to 'num_unsol_na_show' 'bonding_store_n_unsol_na' to 'num_unsol_na_store'
#1272: FILE: drivers/net/bonding/bond_sysfs.c:1072:
+}

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1273: FILE: drivers/net/bonding/bond_sysfs.c:1073:
+static DEVICE_ATTR(num_unsol_na, S_IRUGO | S_IWUSR, bonding_show_n_unsol_na, bonding_store_n_unsol_na);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1273: FILE: drivers/net/bonding/bond_sysfs.c:1073:
+static DEVICE_ATTR(num_unsol_na, S_IRUGO | S_IWUSR, bonding_show_n_unsol_na, bonding_store_n_unsol_na);

WARNING:RETURN_VOID: void function return statements are not generally useful
#1371: FILE: drivers/net/bonding/bonding.h:364:
+	return;
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1372: FILE: drivers/net/bonding/bonding.h:365:
+}
+static inline void bond_register_ipv6_notifier(void)

WARNING:RETURN_VOID: void function return statements are not generally useful
#1375: FILE: drivers/net/bonding/bonding.h:368:
+	return;
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1376: FILE: drivers/net/bonding/bonding.h:369:
+}
+static inline void bond_unregister_ipv6_notifier(void)

WARNING:RETURN_VOID: void function return statements are not generally useful
#1379: FILE: drivers/net/bonding/bonding.h:372:
+	return;
+}

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1449: FILE: drivers/net/pcmcia/fmvj18x_cs.c:128:
+    u_char __iomem *base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1457: FILE: drivers/net/pcmcia/fmvj18x_cs.c:246:
+    lp->base = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1467: FILE: drivers/net/pcmcia/fmvj18x_cs.c:447:
+    if (link->io.BasePort2 != 0) {$

CHECK:CAMELCASE: Avoid CamelCase: <BasePort2>
#1467: FILE: drivers/net/pcmcia/fmvj18x_cs.c:447:
+    if (link->io.BasePort2 != 0) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1469: FILE: drivers/net/pcmcia/fmvj18x_cs.c:449:
+	if (ret != 0) goto failed;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1470: FILE: drivers/net/pcmcia/fmvj18x_cs.c:450:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1480: FILE: drivers/net/pcmcia/fmvj18x_cs.c:617:
+    int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1483: FILE: drivers/net/pcmcia/fmvj18x_cs.c:620:
+    local_info_t *lp = netdev_priv(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1492: FILE: drivers/net/pcmcia/fmvj18x_cs.c:632:
+    lp->base = ioremap(req.Base, req.Size);$

CHECK:CAMELCASE: Avoid CamelCase: <Base>
#1492: FILE: drivers/net/pcmcia/fmvj18x_cs.c:632:
+    lp->base = ioremap(req.Base, req.Size);

CHECK:CAMELCASE: Avoid CamelCase: <Size>
#1492: FILE: drivers/net/pcmcia/fmvj18x_cs.c:632:
+    lp->base = ioremap(req.Base, req.Size);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1493: FILE: drivers/net/pcmcia/fmvj18x_cs.c:633:
+    if (lp->base == NULL) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lp->base"
#1493: FILE: drivers/net/pcmcia/fmvj18x_cs.c:633:
+    if (lp->base == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1494: FILE: drivers/net/pcmcia/fmvj18x_cs.c:634:
+	printk(KERN_NOTICE "fmvj18x_cs: ioremap failed\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1496: FILE: drivers/net/pcmcia/fmvj18x_cs.c:636:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1502: FILE: drivers/net/pcmcia/fmvj18x_cs.c:640:
+    i = pcmcia_map_mem_page(link->win, &mem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1503: FILE: drivers/net/pcmcia/fmvj18x_cs.c:641:
+    if (i != 0) {$

CHECK:CAMELCASE: Avoid CamelCase: <MapMemPage>
#1506: FILE: drivers/net/pcmcia/fmvj18x_cs.c:644:
+	cs_error(link, MapMemPage, i);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1508: FILE: drivers/net/pcmcia/fmvj18x_cs.c:646:
+    }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1509: FILE: drivers/net/pcmcia/fmvj18x_cs.c:647:
+    $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1509: FILE: drivers/net/pcmcia/fmvj18x_cs.c:647:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1513: FILE: drivers/net/pcmcia/fmvj18x_cs.c:649:
+    writeb(0x47, lp->base+0x800);^I/* Config Option Register of LAN */$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1513: FILE: drivers/net/pcmcia/fmvj18x_cs.c:649:
+    writeb(0x47, lp->base+0x800);	/* Config Option Register of LAN */
                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1514: FILE: drivers/net/pcmcia/fmvj18x_cs.c:650:
+    writeb(0x0,  lp->base+0x802);^I/* Config and Status Register */$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1514: FILE: drivers/net/pcmcia/fmvj18x_cs.c:650:
+    writeb(0x0,  lp->base+0x802);	/* Config and Status Register */
                          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1518: FILE: drivers/net/pcmcia/fmvj18x_cs.c:652:
+    writeb(ioaddr & 0xff, lp->base+0x80a);^I  /* I/O Base(Low) of LAN */$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1518: FILE: drivers/net/pcmcia/fmvj18x_cs.c:652:
+    writeb(ioaddr & 0xff, lp->base+0x80a);	  /* I/O Base(Low) of LAN */
                                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1519: FILE: drivers/net/pcmcia/fmvj18x_cs.c:653:
+    writeb((ioaddr >> 8) & 0xff, lp->base+0x80c); /* I/O Base(High) of LAN */$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1519: FILE: drivers/net/pcmcia/fmvj18x_cs.c:653:
+    writeb((ioaddr >> 8) & 0xff, lp->base+0x80c); /* I/O Base(High) of LAN */
                                          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1523: FILE: drivers/net/pcmcia/fmvj18x_cs.c:655:
+    writeb(0x45, lp->base+0x820);^I/* Config Option Register of Modem */$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1523: FILE: drivers/net/pcmcia/fmvj18x_cs.c:655:
+    writeb(0x45, lp->base+0x820);	/* Config Option Register of Modem */
                          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1524: FILE: drivers/net/pcmcia/fmvj18x_cs.c:656:
+    writeb(0x8,  lp->base+0x822);^I/* Config and Status Register */$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1524: FILE: drivers/net/pcmcia/fmvj18x_cs.c:656:
+    writeb(0x8,  lp->base+0x822);	/* Config and Status Register */
                          ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1539: FILE: drivers/net/pcmcia/fmvj18x_cs.c:665:
 {
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1540: FILE: drivers/net/pcmcia/fmvj18x_cs.c:666:
+    struct net_device *dev = link->priv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1541: FILE: drivers/net/pcmcia/fmvj18x_cs.c:667:
+    local_info_t *lp = netdev_priv(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1542: FILE: drivers/net/pcmcia/fmvj18x_cs.c:668:
+    u_char __iomem *tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1543: FILE: drivers/net/pcmcia/fmvj18x_cs.c:669:
+    int j;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1545: FILE: drivers/net/pcmcia/fmvj18x_cs.c:671:
+    DEBUG(0, "fmvj18x_release(0x%p)\n", link);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1547: FILE: drivers/net/pcmcia/fmvj18x_cs.c:673:
+    if (lp->base != NULL) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "lp->base"
#1547: FILE: drivers/net/pcmcia/fmvj18x_cs.c:673:
+    if (lp->base != NULL) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1552: FILE: drivers/net/pcmcia/fmvj18x_cs.c:678:
+	if (j != 0)
+	    cs_error(link, ReleaseWindow, j);

CHECK:CAMELCASE: Avoid CamelCase: <ReleaseWindow>
#1553: FILE: drivers/net/pcmcia/fmvj18x_cs.c:679:
+	    cs_error(link, ReleaseWindow, j);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1554: FILE: drivers/net/pcmcia/fmvj18x_cs.c:680:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1556: FILE: drivers/net/pcmcia/fmvj18x_cs.c:682:
+    pcmcia_disable_device(link);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1566: FILE: drivers/net/pcmcia/fmvj18x_cs.c:815:
+    if (lp->base != NULL) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "lp->base"
#1566: FILE: drivers/net/pcmcia/fmvj18x_cs.c:815:
+    if (lp->base != NULL) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1568: FILE: drivers/net/pcmcia/fmvj18x_cs.c:817:
+	writeb(0x01, lp->base+0x802);
 	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1569: FILE: drivers/net/pcmcia/fmvj18x_cs.c:818:
+	writeb(0x09, lp->base+0x822);
 	                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1570: FILE: drivers/net/pcmcia/fmvj18x_cs.c:819:
+    }$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1611: FILE: drivers/net/phy/smsc.c:166:
+	ret = phy_driver_register (&lan911x_int_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1618: FILE: drivers/net/phy/smsc.c:173:
+	phy_driver_unregister (&lan8700_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1626: FILE: drivers/net/phy/smsc.c:184:
+	phy_driver_unregister (&lan911x_int_driver);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1638: FILE: drivers/net/sfc/Kconfig:15:
+config SFC_MTD
+	bool "Solarflare Solarstorm SFC4000 flash MTD support"
+	depends on SFC && MTD
+	default y
+	help
+	  This exposes the on-board flash memory as an MTD device (e.g.
+          /dev/mtd1).  This makes it possible to upload new boot code
+          to the NIC.

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1677: FILE: drivers/net/sfc/boards.c:60:
+#define LM87_IN_LIMITS(nr, _min, _max)			\
+	0x2B + (nr) * 2, _max, 0x2C + (nr) * 2, _min

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nr' - possible side-effects?
#1677: FILE: drivers/net/sfc/boards.c:60:
+#define LM87_IN_LIMITS(nr, _min, _max)			\
+	0x2B + (nr) * 2, _max, 0x2C + (nr) * 2, _min

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1679: FILE: drivers/net/sfc/boards.c:62:
+#define LM87_AIN_LIMITS(nr, _min, _max)			\
+	0x3B + (nr), _max, 0x1A + (nr), _min

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nr' - possible side-effects?
#1679: FILE: drivers/net/sfc/boards.c:62:
+#define LM87_AIN_LIMITS(nr, _min, _max)			\
+	0x3B + (nr), _max, 0x1A + (nr), _min

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1681: FILE: drivers/net/sfc/boards.c:64:
+#define LM87_TEMP_INT_LIMITS(_min, _max)		\
+	0x39, _max, 0x3A, _min

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1683: FILE: drivers/net/sfc/boards.c:66:
+#define LM87_TEMP_EXT1_LIMITS(_min, _max)		\
+	0x37, _max, 0x38, _min

WARNING:LINE_SPACING: Missing a blank line after declarations
#1703: FILE: drivers/net/sfc/boards.c:86:
+		u8 value = *reg_values++;
+		rc = i2c_smbus_write_byte_data(client, reg, value);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1721: FILE: drivers/net/sfc/boards.c:104:
+static int efx_check_lm87(struct efx_nic *efx, unsigned mask)

WARNING:SPLIT_STRING: quoted string split across lines
#1741: FILE: drivers/net/sfc/boards.c:124:
+			"LM87 detected a hardware failure (status %02x:%02x)"
+			"%s%s\n",

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1759: FILE: drivers/net/sfc/boards.c:142:
+}
+static inline void efx_fini_lm87(struct efx_nic *efx)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1762: FILE: drivers/net/sfc/boards.c:145:
+}
+static inline int efx_check_lm87(struct efx_nic *efx, unsigned mask)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1762: FILE: drivers/net/sfc/boards.c:145:
+static inline int efx_check_lm87(struct efx_nic *efx, unsigned mask)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1805: FILE: drivers/net/sfc/boards.c:210:
+	 * (bad sensor) so we mask it out. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1806: FILE: drivers/net/sfc/boards.c:211:
+	unsigned alarm_mask =

WARNING:LINE_SPACING: Missing a blank line after declarations
#1816: FILE: drivers/net/sfc/boards.c:221:
+	int rc = efx_init_lm87(efx, &sfe4002_hwmon_info, sfe4002_lm87_regs);
+	if (rc)

WARNING:SPLIT_STRING: quoted string split across lines
#1868: FILE: drivers/net/sfc/efx.c:1346:
+	EFX_ERR(efx, "TX stuck with stop_count=%d port_enabled=%d:"
+		" resetting channels\n",

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1936: FILE: drivers/net/sfc/efx.h:63:
+extern int efx_mtd_probe(struct efx_nic *efx);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1937: FILE: drivers/net/sfc/efx.h:64:
+extern void efx_mtd_rename(struct efx_nic *efx);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1938: FILE: drivers/net/sfc/efx.h:65:
+extern void efx_mtd_remove(struct efx_nic *efx);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2040: FILE: drivers/net/sfc/falcon.c:1644:
+	BUG_ON(!mutex_is_locked(&efx->spi_lock));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2124: FILE: drivers/net/sfc/mdio_10g.c:274:
+		ctrl1 = ctrl2 = mdio_clause45_read(efx, phy,

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LINE_SPACING: Missing a blank line after declarations
#2140: FILE: drivers/net/sfc/mdio_10g.c:290:
+	int mmd = 0;
+	while (mmd_mask) {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2170: FILE: drivers/net/sfc/mdio_10g.h:247:
+extern void mdio_clause45_set_mmds_lpower(struct efx_nic *efx,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2182: FILE: drivers/net/sfc/mtd.c:1:
+/****************************************************************************

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2270: FILE: drivers/net/sfc/mtd.c:89:
+	unsigned pos, block_len;

WARNING:RETURN_VOID: void function return statements are not generally useful
#2383: FILE: drivers/net/sfc/mtd.c:202:
+	return;
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#2406: FILE: drivers/net/sfc/mtd.c:225:
+		struct efx_mtd *efx_mtd = efx->spi_flash->mtd;
+		snprintf(efx_mtd->name, sizeof(efx_mtd->name),

WARNING:SPACING: Unnecessary space before function pointer arguments
#2466: FILE: drivers/net/sfc/net_driver.h:432:
+	int (*monitor) (struct efx_nic *nic);

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#2498: FILE: drivers/net/sfc/net_driver.h:741:
+	struct mutex spi_lock;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2603: FILE: drivers/net/sfc/sfe4001.c:189:
+	 * it during power-on. Assume failure now is bad news. */

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2736: FILE: drivers/net/sfc/spi.h:71:
+		   int address, const void* in, void *out, unsigned int len);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2744: FILE: drivers/net/sfc/spi.h:79:
+/*
+ * SFC4000 flash is partitioned into:

WARNING:LINE_SPACING: Missing a blank line after declarations
#2822: FILE: drivers/net/sfc/xfp_phy.c:134:
+		struct xfp_phy_data *phy_data = efx->phy_data;
+		EFX_ERR(efx, "XFP sensor alert; putting PHY into low power\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2837: FILE: drivers/net/smsc911x.c:1:
+/***************************************************************************

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2853: FILE: drivers/net/smsc911x.c:17:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2854: FILE: drivers/net/smsc911x.c:18:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2994: FILE: drivers/net/smsc911x.c:158:
+ * the 32-bit access functions instead. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3003: FILE: drivers/net/smsc911x.c:167:
+	 * read operation) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3019: FILE: drivers/net/smsc911x.c:183:
+	 * read operation) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3047: FILE: drivers/net/smsc911x.c:211:
+ * and smsc911x_mac_write, so assumes mac_lock is held */

WARNING:SPLIT_STRING: quoted string split across lines
#3061: FILE: drivers/net/smsc911x.c:225:
+	SMSC_WARNING(HW, "Timed out waiting for MAC not BUSY. "
+		"MAC_CSR_CMD: 0x%08X", val);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3104: FILE: drivers/net/smsc911x.c:268:
+		SMSC_WARNING(HW,
+			"smsc911x_mac_write failed, MAC busy at entry");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'smsc911x_mac_write', this function's name, in a string
#3104: FILE: drivers/net/smsc911x.c:268:
+			"smsc911x_mac_write failed, MAC busy at entry");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3123: FILE: drivers/net/smsc911x.c:287:
+	SMSC_WARNING(HW,
+		"smsc911x_mac_write failed, MAC busy after write");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'smsc911x_mac_write', this function's name, in a string
#3123: FILE: drivers/net/smsc911x.c:287:
+		"smsc911x_mac_write failed, MAC busy after write");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3139: FILE: drivers/net/smsc911x.c:303:
+		SMSC_WARNING(HW,
+			"MII is busy in smsc911x_mii_read???");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'smsc911x_mii_read', this function's name, in a string
#3139: FILE: drivers/net/smsc911x.c:303:
+			"MII is busy in smsc911x_mii_read???");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3165: FILE: drivers/net/smsc911x.c:329:
+static int smsc911x_mii_write(struct mii_bus *bus, int phyaddr, int regidx,
+			   u16 val)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3177: FILE: drivers/net/smsc911x.c:341:
+		SMSC_WARNING(HW,
+			"MII is busy in smsc911x_mii_write???");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'smsc911x_mii_write', this function's name, in a string
#3177: FILE: drivers/net/smsc911x.c:341:
+			"MII is busy in smsc911x_mii_write???");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3207: FILE: drivers/net/smsc911x.c:371:
+ * Performed at initialisation only, so interrupts are enabled */

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#3214: FILE: drivers/net/smsc911x.c:378:
+	if (hwcfg & HW_CFG_EXT_PHY_DET_) {
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3217: FILE: drivers/net/smsc911x.c:381:
+		 * smsc911x_rx_initialise and tx_initialise. */

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#3223: FILE: drivers/net/smsc911x.c:387:
+		udelay(10);	/* Enough time for clocks to stop */

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#3233: FILE: drivers/net/smsc911x.c:397:
+		udelay(10);	/* Enough time for clocks to restart */

WARNING:SPLIT_STRING: quoted string split across lines
#3242: FILE: drivers/net/smsc911x.c:406:
+		SMSC_WARNING(HW, "No external PHY detected, "
+			"Using internal PHY instead.");

WARNING:SPLIT_STRING: quoted string split across lines
#3317: FILE: drivers/net/smsc911x.c:481:
+			SMSC_WARNING(HW, "Failed to transmit "
+				"during loopback test");

WARNING:SPLIT_STRING: quoted string split across lines
#3322: FILE: drivers/net/smsc911x.c:486:
+			SMSC_WARNING(HW, "Transmit encountered "
+				"errors during loopback test");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3335: FILE: drivers/net/smsc911x.c:499:
+			SMSC_WARNING(HW,
+				"Failed to receive during loopback test");

WARNING:SPLIT_STRING: quoted string split across lines
#3340: FILE: drivers/net/smsc911x.c:504:
+			SMSC_WARNING(HW, "Receive encountered "
+				"errors during loopback test");

WARNING:SPLIT_STRING: quoted string split across lines
#3354: FILE: drivers/net/smsc911x.c:518:
+			SMSC_WARNING(HW, "Unexpected packet size "
+				"during loop back test, size=%d, will retry",

WARNING:LINE_SPACING: Missing a blank line after declarations
#3359: FILE: drivers/net/smsc911x.c:523:
+			int mismatch = 0;
+			for (j = 0; j < MIN_PACKET_SIZE; j++) {

WARNING:SPLIT_STRING: quoted string split across lines
#3368: FILE: drivers/net/smsc911x.c:532:
+				SMSC_TRACE(HW, "Successfully verified "
+					   "loopback packet");

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#3370: FILE: drivers/net/smsc911x.c:534:
+				return 0;
+			} else {

WARNING:SPLIT_STRING: quoted string split across lines
#3372: FILE: drivers/net/smsc911x.c:536:
+				SMSC_WARNING(HW, "Data mismatch "
+					"during loop back test, will retry");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3386: FILE: drivers/net/smsc911x.c:550:
+	BUG_ON(!phy_dev);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3387: FILE: drivers/net/smsc911x.c:551:
+	BUG_ON(!phy_dev->bus);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#3392: FILE: drivers/net/smsc911x.c:556:
+		msleep(1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3394: FILE: drivers/net/smsc911x.c:558:
+		temp = smsc911x_mii_read(phy_dev->bus, phy_dev->addr,
+			MII_BMCR);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#3402: FILE: drivers/net/smsc911x.c:566:
+	/* Extra delay required because the phy may not be completed with
+	* its reset when BMCR_RESET is cleared. Specs say 256 uS is

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3403: FILE: drivers/net/smsc911x.c:567:
+	* enough delay but using 1ms here to be safe */

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#3404: FILE: drivers/net/smsc911x.c:568:
+	msleep(1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3438: FILE: drivers/net/smsc911x.c:602:
+	smsc911x_reg_write(pdata, RX_CFG,
+		(u32)((ulong)pdata->loopback_rx_pkt & 0x03) << 8);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3443: FILE: drivers/net/smsc911x.c:607:
+		smsc911x_mii_write(phy_dev->bus, phy_dev->addr,	MII_BMCR,
+			BMCR_LOOPBACK | BMCR_FULLDPLX);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3525: FILE: drivers/net/smsc911x.c:689:
+		SMSC_TRACE(HW, "rx pause %s, tx pause %s",
+			(cap & FLOW_CTRL_RX ? "enabled" : "disabled"),

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3541: FILE: drivers/net/smsc911x.c:705:
+ * PHY is in polling mode, even if nothing has changed. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#3551: FILE: drivers/net/smsc911x.c:715:
+		unsigned int mac_cr;
+		SMSC_TRACE(HW, "duplex state has changed");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3557: FILE: drivers/net/smsc911x.c:721:
+			SMSC_TRACE(HW,
+				"configuring for full duplex mode");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3561: FILE: drivers/net/smsc911x.c:725:
+			SMSC_TRACE(HW,
+				"configuring for half duplex mode");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!pdata->using_extphy'
#3576: FILE: drivers/net/smsc911x.c:740:
+			if ((pdata->gpio_orig_setting & GPIO_CFG_LED1_EN_) &&
+			    (!pdata->using_extphy)) {

WARNING:TYPO_SPELLING: 'orginal' may be misspelled - perhaps 'original'?
#3578: FILE: drivers/net/smsc911x.c:742:
+				/* Restore orginal GPIO configuration */
 				           ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3581: FILE: drivers/net/smsc911x.c:745:
+				smsc911x_reg_write(pdata, GPIO_CFG,
+					pdata->gpio_setting);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3586: FILE: drivers/net/smsc911x.c:750:
+			 * usage is 10/100 indicator */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3588: FILE: drivers/net/smsc911x.c:752:
+			pdata->gpio_setting = smsc911x_reg_read(pdata,
+				GPIO_CFG);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!pdata->using_extphy'
#3589: FILE: drivers/net/smsc911x.c:753:
+			if ((pdata->gpio_setting & GPIO_CFG_LED1_EN_)
+			    && (!pdata->using_extphy)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#3590: FILE: drivers/net/smsc911x.c:754:
+			if ((pdata->gpio_setting & GPIO_CFG_LED1_EN_)
+			    && (!pdata->using_extphy)) {

WARNING:TYPO_SPELLING: 'orginal' may be misspelled - perhaps 'original'?
#3592: FILE: drivers/net/smsc911x.c:756:
+				 * orginal GPIO configuration */
 				   ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3592: FILE: drivers/net/smsc911x.c:756:
+				 * orginal GPIO configuration */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3600: FILE: drivers/net/smsc911x.c:764:
+				smsc911x_reg_write(pdata, GPIO_CFG,
+					pdata->gpio_setting);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3618: FILE: drivers/net/smsc911x.c:782:
+			SMSC_TRACE(PROBE, "PHY %d: addr %d, phy_id 0x%08X",
+				phy_addr, phydev->addr, phydev->phy_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3629: FILE: drivers/net/smsc911x.c:793:
+	phydev = phy_connect(dev, phydev->dev.bus_id,
+		&smsc911x_phy_adjust_link, 0, pdata->phy_interface);

WARNING:TYPO_SPELLING: 'succesfully' may be misspelled - perhaps 'successfully'?
#3656: FILE: drivers/net/smsc911x.c:820:
+	SMSC_TRACE(HW, "phy initialised succesfully");
 	                                ^^^^^^^^^^^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#3660: FILE: drivers/net/smsc911x.c:824:
+static int __devinit smsc911x_mii_init(struct platform_device *pdev,

WARNING:SPLIT_STRING: quoted string split across lines
#3694: FILE: drivers/net/smsc911x.c:858:
+			SMSC_TRACE(HW, "No external PHY detected, "
+				"using internal PHY");

WARNING:SPLIT_STRING: quoted string split across lines
#3699: FILE: drivers/net/smsc911x.c:863:
+		SMSC_TRACE(HW, "External PHY is not supported, "
+			"using internal PHY");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3751: FILE: drivers/net/smsc911x.c:915:
+			SMSC_WARNING(HW,
+				"Packet tag reserved bit is high");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3792: FILE: drivers/net/smsc911x.c:956:
+			 * and length error is set */

WARNING:LINE_SPACING: Missing a blank line after declarations
#3809: FILE: drivers/net/smsc911x.c:973:
+		unsigned int val;
+		smsc911x_reg_write(pdata, RX_DP_CTRL, RX_DP_CTRL_RX_FFWD_);

WARNING:SPLIT_STRING: quoted string split across lines
#3817: FILE: drivers/net/smsc911x.c:981:
+			SMSC_WARNING(HW, "Timed out waiting for "
+				"RX FFWD to finish, RX_DP_CTRL: 0x%08X", val);

WARNING:LINE_SPACING: Missing a blank line after declarations
#3820: FILE: drivers/net/smsc911x.c:984:
+		unsigned int temp;
+		while (pktwords--)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3842: FILE: drivers/net/smsc911x.c:1006:
+			 * stop polling then re-enable rx interrupts */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3852: FILE: drivers/net/smsc911x.c:1016:
+		 * Error packets still require cycles to discard */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3861: FILE: drivers/net/smsc911x.c:1025:
+			SMSC_WARNING(RX_ERR,
+				"Discarding packet with error bit set");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3863: FILE: drivers/net/smsc911x.c:1027:
+			 * the next */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3872: FILE: drivers/net/smsc911x.c:1036:
+			SMSC_WARNING(RX_ERR,
+				"Unable to allocate skb for rx packet");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3903: FILE: drivers/net/smsc911x.c:1067:
+ * 01 00 5E 00 00 01 -> returns bit number 31 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3912: FILE: drivers/net/smsc911x.c:1076:
+	 * safe on the current hardware, and with the mac_lock held */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3924: FILE: drivers/net/smsc911x.c:1088:
+	SMSC_TRACE(HW, "maccr 0x%08X, HASHH 0x%08X, HASHL 0x%08X",
+		mac_cr, pdata->hashhi, pdata->hashlo);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3936: FILE: drivers/net/smsc911x.c:1100:
+	 * This is called from interrupt context */

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#3966: FILE: drivers/net/smsc911x.c:1130:
+		udelay(10);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#4022: FILE: drivers/net/smsc911x.c:1186:
+		udelay(10);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4027: FILE: drivers/net/smsc911x.c:1191:
+		SMSC_WARNING(IFUP,
+			"Timed out waiting for EEPROM busy bit to clear");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4032: FILE: drivers/net/smsc911x.c:1196:
+	 * restore it from local copy (set in probe) */

WARNING:MEMORY_BARRIER: memory barrier without comment
#4062: FILE: drivers/net/smsc911x.c:1226:
+	smp_wmb();

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#4072: FILE: drivers/net/smsc911x.c:1236:
+		msleep(1);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4090: FILE: drivers/net/smsc911x.c:1254:
+	temp &= (HW_CFG_TX_FIF_SZ_|0x00000FFF);
 	                          ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#4127: FILE: drivers/net/smsc911x.c:1291:
+	BUG_ON(!pdata->phy_dev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4164: FILE: drivers/net/smsc911x.c:1328:
+		SMSC_WARNING(TX_ERR,
+			"Tx data fifo low, space available: %d", freespace);

WARNING:LINE_SPACING: Missing a blank line after declarations
#4205: FILE: drivers/net/smsc911x.c:1369:
+	struct smsc911x_data *pdata = netdev_priv(dev);
+	smsc911x_tx_update_txcounters(dev);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mc_list->dmi_addrlen'
#4240: FILE: drivers/net/smsc911x.c:1404:
+			if ((mc_list->dmi_addrlen) == ETH_ALEN) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#4244: FILE: drivers/net/smsc911x.c:1408:
+				unsigned int mask = 0x01 << (bitnum & 0x1F);
+				if (bitnum & 0x20)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4271: FILE: drivers/net/smsc911x.c:1435:
+		 * receiving data */

WARNING:LINE_SPACING: Missing a blank line after declarations
#4274: FILE: drivers/net/smsc911x.c:1438:
+			unsigned int temp;
+			SMSC_TRACE(HW, "scheduling mcast update");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4278: FILE: drivers/net/smsc911x.c:1442:
+			 * update when we get an RX_STOP interrupt */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4289: FILE: drivers/net/smsc911x.c:1453:
+			 * use the newer values */

WARNING:MEMORY_BARRIER: memory barrier without comment
#4314: FILE: drivers/net/smsc911x.c:1478:
+		smp_wmb();

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4320: FILE: drivers/net/smsc911x.c:1484:
+		 * it is now safe to complete the update */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4355: FILE: drivers/net/smsc911x.c:1519:
+			SMSC_WARNING(RX_ERR,
+				"netif_rx_schedule_prep failed");

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#4404: FILE: drivers/net/smsc911x.c:1568:
+	strlcpy(info->driver, SMSC_CHIPNAME, sizeof(info->driver));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#4405: FILE: drivers/net/smsc911x.c:1569:
+	strlcpy(info->version, SMSC_DRV_VERSION, sizeof(info->version));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#4406: FILE: drivers/net/smsc911x.c:1570:
+	strlcpy(info->bus_info, dev->dev.parent->bus_id,

WARNING:LINE_SPACING: Missing a blank line after declarations
#4420: FILE: drivers/net/smsc911x.c:1584:
+	struct smsc911x_data *pdata = netdev_priv(dev);
+	return pdata->msg_enable;

WARNING:LINE_SPACING: Missing a blank line after declarations
#4426: FILE: drivers/net/smsc911x.c:1590:
+	struct smsc911x_data *pdata = netdev_priv(dev);
+	pdata->msg_enable = level;

WARNING:LINE_SPACING: Missing a blank line after declarations
#4463: FILE: drivers/net/smsc911x.c:1627:
+	unsigned int temp = smsc911x_reg_read(pdata, GPIO_CFG);
+	temp &= ~GPIO_CFG_EEPR_EN_;

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#4465: FILE: drivers/net/smsc911x.c:1629:
+	msleep(1);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#4483: FILE: drivers/net/smsc911x.c:1647:
+		msleep(1);

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#4493: FILE: drivers/net/smsc911x.c:1657:
+		SMSC_TRACE(DRV, "Error occured during eeprom operation");
 		                       ^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#4551: FILE: drivers/net/smsc911x.c:1715:
+		int ret = smsc911x_eeprom_read_location(pdata, i, eeprom_data);
+		if (ret < 0) {

WARNING:CONST_STRUCT: struct ethtool_ops should normally be const
#4579: FILE: drivers/net/smsc911x.c:1743:
+static struct ethtool_ops smsc911x_ethtool_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#4595: FILE: drivers/net/smsc911x.c:1759:
+static int __devinit smsc911x_init(struct net_device *dev)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4602: FILE: drivers/net/smsc911x.c:1766:
+	SMSC_TRACE(PROBE, "LAN base: 0x%08lX",
+		(unsigned long)pdata->ioaddr);

WARNING:SPLIT_STRING: quoted string split across lines
#4620: FILE: drivers/net/smsc911x.c:1784:
+		SMSC_TRACE(PROBE, "BYTE_TEST looks swapped, "
+			"applying WORD_SWAP");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4624: FILE: drivers/net/smsc911x.c:1788:
+		 * WORD_SWAP before its contents are valid */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4634: FILE: drivers/net/smsc911x.c:1798:
+			SMSC_WARNING(PROBE,
+				"top 16 bits equal to bottom 16 bits");

WARNING:SPLIT_STRING: quoted string split across lines
#4636: FILE: drivers/net/smsc911x.c:1800:
+			SMSC_TRACE(PROBE, "This may mean the chip is set "
+				"for 32 bit while the bus is reading 16 bit");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4672: FILE: drivers/net/smsc911x.c:1836:
+		SMSC_WARNING(PROBE, "LAN911x not identified, idrev: 0x%08X",
+			pdata->idrev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4677: FILE: drivers/net/smsc911x.c:1841:
+	SMSC_TRACE(PROBE, "LAN911x identified, idrev: 0x%08X, generation: %d",
+		pdata->idrev, pdata->generation);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4681: FILE: drivers/net/smsc911x.c:1845:
+		SMSC_WARNING(PROBE,
+			"This driver is not intended for this chip revision");

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#4708: FILE: drivers/net/smsc911x.c:1872:
+static int __devexit smsc911x_drv_remove(struct platform_device *pdev)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#4715: FILE: drivers/net/smsc911x.c:1879:
+	BUG_ON(!dev);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#4717: FILE: drivers/net/smsc911x.c:1881:
+	BUG_ON(!pdata);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#4718: FILE: drivers/net/smsc911x.c:1882:
+	BUG_ON(!pdata->ioaddr);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#4719: FILE: drivers/net/smsc911x.c:1883:
+	BUG_ON(!pdata->phy_dev);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#4745: FILE: drivers/net/smsc911x.c:1909:
+static int __devinit smsc911x_drv_probe(struct platform_device *pdev)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4763: FILE: drivers/net/smsc911x.c:1927:
+		pr_warning("%s: Could not allocate resource.\n",
+			SMSC_CHIPNAME);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4789: FILE: drivers/net/smsc911x.c:1953:
+	 * defaults to zeros */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pdata->ioaddr"
#4801: FILE: drivers/net/smsc911x.c:1965:
+	if (pdata->ioaddr == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4803: FILE: drivers/net/smsc911x.c:1967:
+		SMSC_WARNING(PROBE,
+			"Error smsc911x base address invalid");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4829: FILE: drivers/net/smsc911x.c:1993:
+		SMSC_WARNING(PROBE,
+			"Unable to claim requested irq: %d", dev->irq);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4838: FILE: drivers/net/smsc911x.c:2002:
+		SMSC_WARNING(PROBE,
+			"Error %i registering device", retval);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4849: FILE: drivers/net/smsc911x.c:2013:
+		SMSC_WARNING(PROBE,
+			"Error %i initialising mii", retval);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4861: FILE: drivers/net/smsc911x.c:2025:
+		 * it will already have been set */

WARNING:LINE_SPACING: Missing a blank line after declarations
#4864: FILE: drivers/net/smsc911x.c:2028:
+		u32 mac_low32 = smsc911x_mac_read(pdata, ADDRL);
+		dev->dev_addr[0] = (u8)(mac_low32);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4874: FILE: drivers/net/smsc911x.c:2038:
+			SMSC_TRACE(PROBE,
+				"Mac Address is read from LAN911x EEPROM");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4880: FILE: drivers/net/smsc911x.c:2044:
+			SMSC_TRACE(PROBE,
+				"MAC Address is set to random_ether_addr");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4934: FILE: drivers/net/smsc911x.h:1:
+/***************************************************************************

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#4950: FILE: drivers/net/smsc911x.h:17:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#4951: FILE: drivers/net/smsc911x.h:18:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4963: FILE: drivers/net/smsc911x.h:30:
+ * NAPI poll */

WARNING:TYPO_SPELLING: 'succesfully' may be misspelled - perhaps 'successfully'?
#4967: FILE: drivers/net/smsc911x.h:34:
+ * can be succesfully looped back */
           ^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4967: FILE: drivers/net/smsc911x.h:34:
+ * can be succesfully looped back */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4972: FILE: drivers/net/smsc911x.h:39:
+	printk(KERN_##klevel "%s: %s: " fmt "\n", \

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'pdata' may be better as '(pdata)' to avoid precedence issues
#4992: FILE: drivers/net/smsc911x.h:59:
+#define SMSC_ASSERT_MAC_LOCK(pdata) \
+		WARN_ON(!spin_is_locked(&pdata->mac_lock))

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#4993: FILE: drivers/net/smsc911x.h:60:
+		WARN_ON(!spin_is_locked(&pdata->mac_lock))

lockdep_assert_held() annotations should be preferred over
assertions based on spin_is_locked()

See: https://www.kernel.org/doc/html/latest/locking/lockdep-design.html#annotations

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#5134: FILE: drivers/net/smsc911x.h:201:
+#define HW_CFG_SMI_SEL_^I^I ^I0x00000010$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#5242: FILE: drivers/net/smsc911x.h:309:
+/*
+ * MAC Control and Status Register (Indirect Address)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#5302: FILE: drivers/net/smsc911x.h:369:
+/*
+ * Phy definitions (vendor-specific)

CHECK:BIT_MACRO: Prefer using the BIT macro
#5309: FILE: drivers/net/smsc911x.h:376:
+#define PHY_INTMSK_AN_RCV_		(1 << 1)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#5310: FILE: drivers/net/smsc911x.h:377:
+#define PHY_INTMSK_PDFAULT_		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#5311: FILE: drivers/net/smsc911x.h:378:
+#define PHY_INTMSK_AN_ACK_		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#5312: FILE: drivers/net/smsc911x.h:379:
+#define PHY_INTMSK_LNKDOWN_		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#5313: FILE: drivers/net/smsc911x.h:380:
+#define PHY_INTMSK_RFAULT_		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#5314: FILE: drivers/net/smsc911x.h:381:
+#define PHY_INTMSK_AN_COMP_		(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#5315: FILE: drivers/net/smsc911x.h:382:
+#define PHY_INTMSK_ENERGYON_		(1 << 7)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5385: FILE: drivers/net/usb/usbnet.c:936:
+static int __usbnet_start_xmit (struct sk_buff *skb, struct net_device *net)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5419: FILE: drivers/net/usb/usbnet.c:1032:
+		if (!schedule_work (&dev->waker))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&dev->waker'
#5419: FILE: drivers/net/usb/usbnet.c:1032:
+		if (!schedule_work (&dev->waker))

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#5439: FILE: drivers/net/usb/usbnet.c:1064:
+			/* fall through */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5447: FILE: drivers/net/usb/usbnet.c:1084:
 			&& !timer_pending (&dev->delay)
+			&& !dev->suspend_count

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5455: FILE: drivers/net/usb/usbnet.c:1202:
+	INIT_WORK (&dev->waker, waker);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#5467: FILE: drivers/net/usb/usbnet.c:1315:
+	if (!usb_autopm_get_interface(dev->intf)) {
[...]
+	} else {
[...]

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5477: FILE: drivers/net/usb/usbnet.c:1325:
+	DECLARE_WAIT_QUEUE_HEAD_ONSTACK (unlink_wakeup);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5478: FILE: drivers/net/usb/usbnet.c:1326:
+	DECLARE_WAITQUEUE (wait, current);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5481: FILE: drivers/net/usb/usbnet.c:1329:
+	add_wait_queue (&unlink_wakeup, &wait);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5483: FILE: drivers/net/usb/usbnet.c:1331:
+	temp = unlink_urbs (dev, &dev->txq) + unlink_urbs (dev, &dev->rxq);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5483: FILE: drivers/net/usb/usbnet.c:1331:
+	temp = unlink_urbs (dev, &dev->txq) + unlink_urbs (dev, &dev->rxq);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5487: FILE: drivers/net/usb/usbnet.c:1335:
+	while (!skb_queue_empty(&dev->rxq)
+			&& !skb_queue_empty(&dev->txq)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5488: FILE: drivers/net/usb/usbnet.c:1336:
+			&& !skb_queue_empty(&dev->txq)
+			&& !skb_queue_empty(&dev->done)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5490: FILE: drivers/net/usb/usbnet.c:1338:
+		if (netif_msg_ifdown (dev))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5491: FILE: drivers/net/usb/usbnet.c:1339:
+			devdbg (dev, "waited for %d urb completions", temp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5494: FILE: drivers/net/usb/usbnet.c:1342:
+	remove_wait_queue (&unlink_wakeup, &wait);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#5517: FILE: drivers/net/usb/usbnet.c:1351:
+	devdbg(dev, "%s: begin", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#5535: FILE: drivers/net/usb/usbnet.c:1369:
+	devdbg(dev, "%s: end", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#5546: FILE: drivers/net/usb/usbnet.c:1380:
+	devdbg(dev, "%s: begin", __FUNCTION__);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5551: FILE: drivers/net/usb/usbnet.c:1385:
+	status = init_status (dev, dev->intf);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5553: FILE: drivers/net/usb/usbnet.c:1387:
+		status = usb_submit_urb (dev->interrupt, GFP_KERNEL);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#5554: FILE: drivers/net/usb/usbnet.c:1388:
+		if (status < 0) {
+			devdbg(dev, "failed restarting interrupt urb");
+		}

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#5571: FILE: drivers/net/usb/usbnet.c:1403:
+	devdbg(dev, "%s: end", __FUNCTION__);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#5581: FILE: include/linux/smsc911x.h:1:
+/***************************************************************************

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#5597: FILE: include/linux/smsc911x.h:17:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#5598: FILE: include/linux/smsc911x.h:18:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5607: FILE: include/linux/smsc911x.h:27:
+ * the platform_device's dev.platform_data */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5648: FILE: include/net/ndisc.h:111:
+extern struct sk_buff		*ndisc_build_skb(struct net_device *dev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5655: FILE: include/net/ndisc.h:118:
+extern void			ndisc_send_skb(struct sk_buff *skb,

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#5732: FILE: net/ipv6/ndisc.c:500:
+EXPORT_SYMBOL(ndisc_build_skb);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#5772: FILE: net/ipv6/ndisc.c:549:
+EXPORT_SYMBOL(ndisc_send_skb);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#5775: FILE: net/ipv6/ndisc.c:552:
+/*
+ *	Send a Neighbour Discover packet

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000207691.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 16 errors, 215 warnings, 99 checks, 5382 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000207691.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
