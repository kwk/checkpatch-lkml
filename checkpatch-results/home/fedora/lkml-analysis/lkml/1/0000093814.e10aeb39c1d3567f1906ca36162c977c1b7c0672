WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
This patch adds a "phase" of checkpoint that saves out information about any

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#124: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#129: FILE: checkpoint/namespace.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: No space is necessary after a cast
#181: FILE: checkpoint/namespace.c:53:
+	return do_checkpoint_uts_ns(ctx, (struct uts_namespace *) ptr);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#192: FILE: checkpoint/namespace.c:64:
+		return (struct uts_namespace *) h;

CHECK:SPACING: No space is necessary after a cast
#227: FILE: checkpoint/namespace.c:99:
+	return (void *) do_restore_uts_ns(ctx);

CHECK:SPACING: No space is necessary after a cast
#239: FILE: checkpoint/objhash.c:153:
+	get_uts_ns((struct uts_namespace *) ptr);

CHECK:SPACING: No space is necessary after a cast
#245: FILE: checkpoint/objhash.c:159:
+	put_uts_ns((struct uts_namespace *) ptr);

CHECK:SPACING: No space is necessary after a cast
#250: FILE: checkpoint/objhash.c:164:
+	return atomic_read(&((struct uts_namespace *) ptr)->kref.refcount);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#352: FILE: include/linux/checkpoint.h:69:
+extern int ckpt_read_consume(struct ckpt_ctx *ctx, int len, int type);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#361: FILE: include/linux/checkpoint.h:136:
+extern int checkpoint_uts_ns(struct ckpt_ctx *ctx, void *ptr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#362: FILE: include/linux/checkpoint.h:137:
+extern void *restore_uts_ns(struct ckpt_ctx *ctx);

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#420: FILE: include/linux/checkpoint_hdr.h:278:
+} __attribute__((aligned(8)));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#457: FILE: include/linux/utsname.h:53:
+extern struct uts_namespace *create_uts_ns(void);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#534: FILE: kernel/nsproxy.c:327:
+	BUG_ON(nsproxy->uts_ns != uts_ns);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000093814.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 10 checks, 402 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000093814.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
