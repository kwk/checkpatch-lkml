WARNING:TYPO_SPELLING: 'decorder' may be misspelled - perhaps 'decoder'?
#54: 
  - x86: instruction decorder API
                     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#69: 
breakpoint with a jump instruction for reducing probing overhead drastically.

WARNING:TYPO_SPELLING: 'checkes' may be misspelled - perhaps 'checks'?
#134: 
 it may replaces multiple instructions, and it checkes whether those
                                               ^^^^^^^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ap)...) over kzalloc(sizeof(struct kprobe)...)
#275: FILE: kernel/kprobes.c:574:
+		ap = kzalloc(sizeof(struct kprobe), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:BAD_SIGN_OFF: Duplicate signature
#343: 
Signed-off-by: Masami Hiramatsu <mhiramat@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Duplicate signature
#344: 
Acked-by: Ananth N Mavinakayanahalli <ananth@in.ibm.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#345: 
Cc: Anil S Keshavamurthy <anil.s.keshavamurthy@intel.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#346: 
Cc: David S. Miller <davem@davemloft.net>

WARNING:BAD_SIGN_OFF: Duplicate signature
#347: 
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>

WARNING:BAD_SIGN_OFF: Duplicate signature
#394: 
Signed-off-by: Masami Hiramatsu <mhiramat@redhat.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#395: 
Acked-by: Ananth N Mavinakayanahalli <ananth@in.ibm.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#396: 
Cc: Anil S Keshavamurthy <anil.s.keshavamurthy@intel.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#397: 
Cc: David S. Miller <davem@davemloft.net>

WARNING:BAD_SIGN_OFF: Duplicate signature
#398: 
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#532: FILE: kernel/kprobes.c:1438:
+/* defined in arch/.../kernel/kprobes.c */

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:BAD_SIGN_OFF: Duplicate signature
#552: 
Signed-off-by: Masami Hiramatsu <mhiramat@redhat.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#553: 
Acked-by: Ananth N Mavinakayanahalli <ananth@in.ibm.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#554: 
Cc: Anil S Keshavamurthy <anil.s.keshavamurthy@intel.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#555: 
Cc: David S. Miller <davem@davemloft.net>

WARNING:BAD_SIGN_OFF: Duplicate signature
#556: 
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>

WARNING:BAD_SIGN_OFF: Duplicate signature
#704: 
Signed-off-by: Masami Hiramatsu <mhiramat@redhat.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#705: 
Acked-by: Ananth N Mavinakayanahalli <ananth@in.ibm.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#706: 
Cc: Anil S Keshavamurthy <anil.s.keshavamurthy@intel.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#707: 
Cc: David S. Miller <davem@davemloft.net>

WARNING:BAD_SIGN_OFF: Duplicate signature
#708: 
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#764: FILE: include/linux/kprobes.h:378:
+}
+static inline int enable_kretprobe(struct kretprobe *rp)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#768: FILE: include/linux/kprobes.h:382:
+}
+static inline int disable_jprobe(struct jprobe *jp)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#772: FILE: include/linux/kprobes.h:386:
+}
+static inline int enable_jprobe(struct jprobe *jp)

WARNING:BAD_SIGN_OFF: Duplicate signature
#801: 
Signed-off-by: Masami Hiramatsu <mhiramat@redhat.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#802: 
Acked-by: Ananth N Mavinakayanahalli <ananth@in.ibm.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#803: 
Cc: Anil S Keshavamurthy <anil.s.keshavamurthy@intel.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#804: 
Cc: David S. Miller <davem@davemloft.net>

WARNING:BAD_SIGN_OFF: Duplicate signature
#805: 
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#920: FILE: include/linux/kprobes.h:365:
 }
+static inline int disable_kprobe(struct kprobe *kp)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#922: FILE: include/linux/kprobes.h:367:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#924: FILE: include/linux/kprobes.h:369:
+}
+static inline int enable_kprobe(struct kprobe *kp)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#926: FILE: include/linux/kprobes.h:371:
+	return -ENOSYS;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#956: FILE: kernel/kprobes.c:526:
+	BUG_ON(kprobe_gone(ap) || kprobe_gone(p));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!old_p"
#1077: FILE: kernel/kprobes.c:781:
+	if (old_p == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1120: FILE: kernel/kprobes.c:1267:
+		seq_printf(pi, "%p  %s  %s+0x%x  %s %s%s\n",
+			p->addr, kprobe_type, sym, offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1129: FILE: kernel/kprobes.c:1274:
+		seq_printf(pi, "%p  %s  %p %s%s\n",
+			p->addr, kprobe_type, p->addr,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p"
#1150: FILE: kernel/kprobes.c:1352:
+	if (unlikely(p == NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p"
#1182: FILE: kernel/kprobes.c:1384:
+	if (unlikely(p == NULL)) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000143516.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 32 warnings, 11 checks, 779 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000143516.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
