WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#49: FILE: security/tomoyo/util.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#50: FILE: security/tomoyo/util.c:2:
+ * security/tomoyo/util.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#97: FILE: security/tomoyo/util.c:49:
+	[TOMOYO_MAX_MAC_INDEX + TOMOYO_INET_STREAM_SOCKET_CREATE]
+	= TOMOYO_MAC_CATEGORY_CAPABILITY,

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#99: FILE: security/tomoyo/util.c:51:
+	[TOMOYO_MAX_MAC_INDEX + TOMOYO_INET_STREAM_SOCKET_LISTEN]
+	= TOMOYO_MAC_CATEGORY_CAPABILITY,

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#101: FILE: security/tomoyo/util.c:53:
+	[TOMOYO_MAX_MAC_INDEX + TOMOYO_INET_STREAM_SOCKET_CONNECT]
+	= TOMOYO_MAC_CATEGORY_CAPABILITY,

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#103: FILE: security/tomoyo/util.c:55:
+	[TOMOYO_MAX_MAC_INDEX + TOMOYO_USE_INET_DGRAM_SOCKET]
+	= TOMOYO_MAC_CATEGORY_CAPABILITY,

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#105: FILE: security/tomoyo/util.c:57:
+	[TOMOYO_MAX_MAC_INDEX + TOMOYO_USE_INET_RAW_SOCKET]
+	= TOMOYO_MAC_CATEGORY_CAPABILITY,

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#107: FILE: security/tomoyo/util.c:59:
+	[TOMOYO_MAX_MAC_INDEX + TOMOYO_USE_ROUTE_SOCKET]
+	= TOMOYO_MAC_CATEGORY_CAPABILITY,

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#109: FILE: security/tomoyo/util.c:61:
+	[TOMOYO_MAX_MAC_INDEX + TOMOYO_USE_PACKET_SOCKET]
+	= TOMOYO_MAC_CATEGORY_CAPABILITY,

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#111: FILE: security/tomoyo/util.c:63:
+	[TOMOYO_MAX_MAC_INDEX + TOMOYO_SYS_MOUNT]
+	= TOMOYO_MAC_CATEGORY_CAPABILITY,

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#113: FILE: security/tomoyo/util.c:65:
+	[TOMOYO_MAX_MAC_INDEX + TOMOYO_SYS_UMOUNT]
+	= TOMOYO_MAC_CATEGORY_CAPABILITY,

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#115: FILE: security/tomoyo/util.c:67:
+	[TOMOYO_MAX_MAC_INDEX + TOMOYO_SYS_CHROOT]
+	= TOMOYO_MAC_CATEGORY_CAPABILITY,

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#117: FILE: security/tomoyo/util.c:69:
+	[TOMOYO_MAX_MAC_INDEX + TOMOYO_CREATE_FIFO]
+	= TOMOYO_MAC_CATEGORY_CAPABILITY,

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#119: FILE: security/tomoyo/util.c:71:
+	[TOMOYO_MAX_MAC_INDEX + TOMOYO_CREATE_BLOCK_DEV]
+	= TOMOYO_MAC_CATEGORY_CAPABILITY,

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#121: FILE: security/tomoyo/util.c:73:
+	[TOMOYO_MAX_MAC_INDEX + TOMOYO_CREATE_CHAR_DEV]
+	= TOMOYO_MAC_CATEGORY_CAPABILITY,

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#123: FILE: security/tomoyo/util.c:75:
+	[TOMOYO_MAX_MAC_INDEX + TOMOYO_CREATE_UNIX_SOCKET]
+	= TOMOYO_MAC_CATEGORY_CAPABILITY,

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#125: FILE: security/tomoyo/util.c:77:
+	[TOMOYO_MAX_MAC_INDEX + TOMOYO_SYS_LINK]
+	= TOMOYO_MAC_CATEGORY_CAPABILITY,

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#127: FILE: security/tomoyo/util.c:79:
+	[TOMOYO_MAX_MAC_INDEX + TOMOYO_SYS_SYMLINK]
+	= TOMOYO_MAC_CATEGORY_CAPABILITY,

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#129: FILE: security/tomoyo/util.c:81:
+	[TOMOYO_MAX_MAC_INDEX + TOMOYO_SYS_RENAME]
+	= TOMOYO_MAC_CATEGORY_CAPABILITY,

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#131: FILE: security/tomoyo/util.c:83:
+	[TOMOYO_MAX_MAC_INDEX + TOMOYO_SYS_UNLINK]
+	= TOMOYO_MAC_CATEGORY_CAPABILITY,

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#133: FILE: security/tomoyo/util.c:85:
+	[TOMOYO_MAX_MAC_INDEX + TOMOYO_SYS_CHMOD]
+	= TOMOYO_MAC_CATEGORY_CAPABILITY,

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#135: FILE: security/tomoyo/util.c:87:
+	[TOMOYO_MAX_MAC_INDEX + TOMOYO_SYS_CHOWN]
+	= TOMOYO_MAC_CATEGORY_CAPABILITY,

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#137: FILE: security/tomoyo/util.c:89:
+	[TOMOYO_MAX_MAC_INDEX + TOMOYO_SYS_IOCTL]
+	= TOMOYO_MAC_CATEGORY_CAPABILITY,

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#139: FILE: security/tomoyo/util.c:91:
+	[TOMOYO_MAX_MAC_INDEX + TOMOYO_SYS_PIVOT_ROOT]
+	= TOMOYO_MAC_CATEGORY_CAPABILITY,

WARNING:LINE_SPACING: Missing a blank line after declarations
#160: FILE: security/tomoyo/util.c:112:
+	int base = 10;
+	if (*cp == '0') {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#162: FILE: security/tomoyo/util.c:114:
+		char c = *(cp + 1);
+		if (c == 'x' || c == 'X') {

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#170: FILE: security/tomoyo/util.c:122:
+	*result = simple_strtoul(cp, &ep, base);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ptr->group"
#223: FILE: security/tomoyo/util.c:175:
+		return ptr->group != NULL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ptr->filename"
#227: FILE: security/tomoyo/util.c:179:
+	return ptr->filename != NULL;

WARNING:LINE_SPACING: Missing a blank line after declarations
#242: FILE: security/tomoyo/util.c:194:
+	unsigned long v;
+	memset(num, 0, sizeof(*num));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "num->group"
#248: FILE: security/tomoyo/util.c:200:
+		return num->group != NULL;

WARNING:LINE_SPACING: Missing a blank line after declarations
#351: FILE: security/tomoyo/util.c:303:
+	char *tmp = *src;
+	if (strncmp(tmp, find, len))

WARNING:LINE_SPACING: Missing a blank line after declarations
#373: FILE: security/tomoyo/util.c:325:
+	bool first = true;
+	while (*sp && (*sp <= ' ' || *sp >= 127))

WARNING:LINE_SPACING: Missing a blank line after declarations
#400: FILE: security/tomoyo/util.c:352:
+	int i;
+	for (i = 0; i < count; i++)

WARNING:LINE_SPACING: Missing a blank line after declarations
#404: FILE: security/tomoyo/util.c:356:
+		char *cp = strchr(buffer, ' ');
+		if (cp)

WARNING:LINE_SPACING: Missing a blank line after declarations
#437: FILE: security/tomoyo/util.c:389:
+	unsigned char e;
+	if (!filename)

WARNING:LINE_SPACING: Missing a blank line after declarations
#539: FILE: security/tomoyo/util.c:491:
+	unsigned char e;
+	if (!domainname || strncmp(domainname, ROOT_NAME, ROOT_NAME_LEN))

WARNING:LINE_SPACING: Missing a blank line after declarations
#610: FILE: security/tomoyo/util.c:562:
+	struct tomoyo_path_info name;
+	name.name = domainname;

WARNING:LINE_SPACING: Missing a blank line after declarations
#631: FILE: security/tomoyo/util.c:583:
+	int len = 0;
+	if (!filename)

WARNING:LINE_SPACING: Missing a blank line after declarations
#675: FILE: security/tomoyo/util.c:627:
+	const int len = strlen(name);
+	ptr->const_len = tomoyo_const_part_length(name);

WARNING:LINE_SPACING: Missing a blank line after declarations
#698: FILE: security/tomoyo/util.c:650:
+		char c;
+		if (*pattern != '\\') {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#743: FILE: security/tomoyo/util.c:695:
+			if (c == '\\' && tomoyo_is_byte_range(filename + 1)
+			    && !strncmp(filename + 1, pattern, 3)) {

WARNING:REPEATED_WORD: Possible repeated word: 'without'
#803: FILE: security/tomoyo/util.c:755:
+ * tomoyo_file_matches_pattern - Pattern matching without without '/' character.

WARNING:LINE_SPACING: Missing a blank line after declarations
#820: FILE: security/tomoyo/util.c:772:
+	bool result;
+	while (pattern < pattern_end - 1) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#851: FILE: security/tomoyo/util.c:803:
+	const char *p_delimiter;
+	while (*f && *p) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#962: FILE: security/tomoyo/util.c:914:
+	const char *cp = NULL;
+	if (!mm)

WARNING:TYPO_SPELLING: 'otehrwise' may be misspelled - perhaps 'otherwise'?
#980: FILE: security/tomoyo/util.c:932:
+ * @is_granted: True if granted log, false otehrwise.
                                            ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#1038: FILE: security/tomoyo/util.c:990:
+	u8 profile;
+	memset(r, 0, sizeof(*r));

WARNING:LINE_SPACING: Missing a blank line after declarations
#1059: FILE: security/tomoyo/util.c:1011:
+	const char *cp = strrchr(name, ' ');
+	if (cp)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1093: FILE: security/tomoyo/util.c:1045:
+		int len2;
+		buffer = kmalloc(len, GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1106: FILE: security/tomoyo/util.c:1058:
+	printk(KERN_WARNING "%s: Access %s denied for %s\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#1126: FILE: security/tomoyo/util.c:1078:
+	struct tomoyo_acl_info *ptr;
+	if (r->mode != 1)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1187: FILE: security/tomoyo/util.c:1139:
+		printk(KERN_WARNING "WARNING: "

WARNING:SPLIT_STRING: quoted string split across lines
#1188: FILE: security/tomoyo/util.c:1140:
+		printk(KERN_WARNING "WARNING: "
+		       "Domain '%s' has so many ACLs to hold. "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#1189: FILE: security/tomoyo/util.c:1141:
+		       "Domain '%s' has so many ACLs to hold. "
+		       "Stopped learning mode.\n", domain->domainname->name);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000064253.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 29 warnings, 26 checks, 1144 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000064253.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
