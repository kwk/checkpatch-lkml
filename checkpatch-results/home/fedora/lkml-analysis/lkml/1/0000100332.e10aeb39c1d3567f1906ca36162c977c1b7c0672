WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
Gitweb:     http://git.kernel.org/tip/63f9600fadb10ea739108ae93e3e842d9843c58b

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#102: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#118: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:17:
+ * License along with this library; if not, write to the Free$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#119: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:18:
+ * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#132: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:30:
+#include <asm/processor.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#213: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:159:
+#define Dprintk(x...) do { if (debug_print) printk(KERN_DEBUG x); } while (0)

CHECK:CAMELCASE: Avoid CamelCase: <Dprintk>
#213: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:159:
+#define Dprintk(x...) do { if (debug_print) printk(KERN_DEBUG x); } while (0)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:LINE_SPACING: Please don't use multiple blank lines
#215: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:161:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#351: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:455:
+			range0_basek<<10,
 			            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#352: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:456:
+			(range0_basek + state->range_sizek)<<10);
 			                                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#392: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:500:
+			range0_basek<<10,
 			            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#393: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:501:
+			(range0_basek + range0_sizek)<<10);
 			                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#408: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:511:
+		Dprintk("range: %016lx - %016lx\n",
+			 range_basek<<10,

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#408: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:511:
+			 range_basek<<10,
 			            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#409: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:512:
+			 (range_basek + range_sizek)<<10);
 			                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#422: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:521:
+		Dprintk("hole: %016lx - %016lx\n",
+			 hole_basek<<10,

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#422: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:521:
+			 hole_basek<<10,
 			           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#423: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:522:
+			 (hole_basek + hole_sizek)<<10);
 			                          ^

WARNING:TYPO_SPELLING: 'Mininum' may be misspelled - perhaps 'Minimum'?
#451: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:559:
+/* Mininum size of mtrr block that can take hole: */
    ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#661: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:765:
+	pr_cont("num_reg: %d  \tlose cover RAM: %s%ld%c\n",

CHECK:CAMELCASE: Avoid CamelCase: <Tom2Enabled>
#790: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:944:
+#define Tom2Enabled		(1U << 21)

CHECK:BIT_MACRO: Prefer using the BIT macro
#790: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:944:
+#define Tom2Enabled		(1U << 21)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:CAMELCASE: Avoid CamelCase: <Tom2ForceMemTypeWB>
#791: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:945:
+#define Tom2ForceMemTypeWB	(1U << 22)

CHECK:BIT_MACRO: Prefer using the BIT macro
#791: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:945:
+#define Tom2ForceMemTypeWB	(1U << 22)

WARNING:LONG_LINE: line length of 133 exceeds 100 columns
#932: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:1091:
+		pr_warning("WARNING: BIOS bug: CPU MTRRs don't cover all of memory, losing %lluMB of RAM.\n", total_trim_size >> 20);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000100332.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 6 warnings, 17 checks, 821 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000100332.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
