WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

CHECK:CAMELCASE: Avoid CamelCase: <freeSpaceTable>
#52: FILE: fs/udf/balloc.c:192:
+				udf_sb_lvid(sb)->freeSpaceTable[udf_sb_partition(sb)] =

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#53: FILE: fs/udf/balloc.c:193:
+					cpu_to_le32(le32_to_cpu(udf_sb_lvid(sb)->freeSpaceTable[udf_sb_partition(sb)]) + 1);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#64: FILE: fs/udf/balloc.c:266:
+			cpu_to_le32(le32_to_cpu(udf_sb_lvid(sb)->freeSpaceTable[partition]) - alloc_count);

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#86: FILE: fs/udf/balloc.c:437:
+			cpu_to_le32(le32_to_cpu(udf_sb_lvid(sb)->freeSpaceTable[udf_sb_partition(sb)]) + count);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#97: FILE: fs/udf/balloc.c:675:
+			cpu_to_le32(le32_to_cpu(udf_sb_lvid(sb)->freeSpaceTable[partition]) - alloc_count);

CHECK:CAMELCASE: Avoid CamelCase: <logicalVolHeaderDesc>
#121: FILE: fs/udf/ialloc.c:94:
+		lvhd = (struct logicalVolHeaderDesc *)(udf_sb_lvid(sb)->logicalVolContentsUse);

CHECK:CAMELCASE: Avoid CamelCase: <logicalVolContentsUse>
#121: FILE: fs/udf/ialloc.c:94:
+		lvhd = (struct logicalVolHeaderDesc *)(udf_sb_lvid(sb)->logicalVolContentsUse);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#134: FILE: fs/udf/namei.c:1020:
+		lvhd = (struct logicalVolHeaderDesc *)(udf_sb_lvid(inode->i_sb)->logicalVolContentsUse);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#143: FILE: fs/udf/namei.c:1072:
+		lvhd = (struct logicalVolHeaderDesc *)(udf_sb_lvid(inode->i_sb)->logicalVolContentsUse);

CHECK:CAMELCASE: Avoid CamelCase: <nextIntegrityExt>
#156: FILE: fs/udf/super.c:1102:
+		if (udf_sb_lvid(sb)->nextIntegrityExt.extLength)

CHECK:CAMELCASE: Avoid CamelCase: <extLength>
#156: FILE: fs/udf/super.c:1102:
+		if (udf_sb_lvid(sb)->nextIntegrityExt.extLength)

CHECK:CAMELCASE: Avoid CamelCase: <recordingDateAndTime>
#169: FILE: fs/udf/super.c:1387:
+			udf_sb_lvid(sb)->recordingDateAndTime = cpu_to_lets(cpu_time);

CHECK:CAMELCASE: Avoid CamelCase: <integrityType>
#170: FILE: fs/udf/super.c:1388:
+		udf_sb_lvid(sb)->integrityType = LVID_INTEGRITY_TYPE_OPEN;

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#174: FILE: fs/udf/super.c:1390:
+		udf_sb_lvid(sb)->descTag.descCRC = cpu_to_le16(udf_crc((char *)udf_sb_lvid(sb) + sizeof(tag),

CHECK:CAMELCASE: Avoid CamelCase: <descTag>
#174: FILE: fs/udf/super.c:1390:
+		udf_sb_lvid(sb)->descTag.descCRC = cpu_to_le16(udf_crc((char *)udf_sb_lvid(sb) + sizeof(tag),

CHECK:CAMELCASE: Avoid CamelCase: <descCRC>
#174: FILE: fs/udf/super.c:1390:
+		udf_sb_lvid(sb)->descTag.descCRC = cpu_to_le16(udf_crc((char *)udf_sb_lvid(sb) + sizeof(tag),

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#175: FILE: fs/udf/super.c:1391:
+								       le16_to_cpu(udf_sb_lvid(sb)->descTag.descCRCLength), 0));

CHECK:CAMELCASE: Avoid CamelCase: <descCRCLength>
#175: FILE: fs/udf/super.c:1391:
+								       le16_to_cpu(udf_sb_lvid(sb)->descTag.descCRCLength), 0));

CHECK:CAMELCASE: Avoid CamelCase: <tagChecksum>
#178: FILE: fs/udf/super.c:1393:
+		udf_sb_lvid(sb)->descTag.tagChecksum = 0;

CHECK:SPACING: No space is necessary after a cast
#184: FILE: fs/udf/super.c:1397:
+					((uint8_t *) &(udf_sb_lvid(sb)->descTag))[i];

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#213: FILE: fs/udf/super.c:1424:
+					    le16_to_cpu(udf_sb_lvid(sb)->descTag.descCRCLength), 0));

CHECK:CAMELCASE: Avoid CamelCase: <numOfPartitions>
#232: FILE: fs/udf/super.c:1841:
+		if (le32_to_cpu(udf_sb_lvid(sb)->numOfPartitions) > udf_sb_partition(sb)) {

CHECK:CAMELCASE: Avoid CamelCase: <logicalVolIntegrityDesc>
#245: FILE: fs/udf/udf_sb.h:93:
+static inline struct logicalVolIntegrityDesc *udf_sb_lvid(struct super_block *sb)

WARNING:LONG_LINE: line length of 202 exceeds 100 columns
#259: FILE: fs/udf/udf_sb.h:162:
+#define UDF_SB_LVIDIU(X)			( (struct logicalVolIntegrityDescImpUse *)&(udf_sb_lvid(X)->impUse[le32_to_cpu(udf_sb_lvid(X)->numOfPartitions) * 2 * sizeof(uint32_t)/sizeof(uint8_t)]) )

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#259: FILE: fs/udf/udf_sb.h:162:
+#define UDF_SB_LVIDIU(X)			( (struct logicalVolIntegrityDescImpUse *)&(udf_sb_lvid(X)->impUse[le32_to_cpu(udf_sb_lvid(X)->numOfPartitions) * 2 * sizeof(uint32_t)/sizeof(uint8_t)]) )
                         			                                                                                                                                      ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#259: FILE: fs/udf/udf_sb.h:162:
+#define UDF_SB_LVIDIU(X)			( (struct logicalVolIntegrityDescImpUse *)&(udf_sb_lvid(X)->impUse[le32_to_cpu(udf_sb_lvid(X)->numOfPartitions) * 2 * sizeof(uint32_t)/sizeof(uint8_t)]) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#259: FILE: fs/udf/udf_sb.h:162:
+#define UDF_SB_LVIDIU(X)			( (struct logicalVolIntegrityDescImpUse *)&(udf_sb_lvid(X)->impUse[le32_to_cpu(udf_sb_lvid(X)->numOfPartitions) * 2 * sizeof(uint32_t)/sizeof(uint8_t)]) )

CHECK:CAMELCASE: Avoid CamelCase: <logicalVolIntegrityDescImpUse>
#259: FILE: fs/udf/udf_sb.h:162:
+#define UDF_SB_LVIDIU(X)			( (struct logicalVolIntegrityDescImpUse *)&(udf_sb_lvid(X)->impUse[le32_to_cpu(udf_sb_lvid(X)->numOfPartitions) * 2 * sizeof(uint32_t)/sizeof(uint8_t)]) )

CHECK:CAMELCASE: Avoid CamelCase: <impUse>
#259: FILE: fs/udf/udf_sb.h:162:
+#define UDF_SB_LVIDIU(X)			( (struct logicalVolIntegrityDescImpUse *)&(udf_sb_lvid(X)->impUse[le32_to_cpu(udf_sb_lvid(X)->numOfPartitions) * 2 * sizeof(uint32_t)/sizeof(uint8_t)]) )

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'X' - possible side-effects?
#259: FILE: fs/udf/udf_sb.h:162:
+#define UDF_SB_LVIDIU(X)			( (struct logicalVolIntegrityDescImpUse *)&(udf_sb_lvid(X)->impUse[le32_to_cpu(udf_sb_lvid(X)->numOfPartitions) * 2 * sizeof(uint32_t)/sizeof(uint8_t)]) )

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000343820.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 11 warnings, 18 checks, 186 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000343820.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
