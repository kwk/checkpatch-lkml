WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#63: FILE: drivers/char/tty_ioctl.c:78:
+#define NOSET_MASK(x, y, z) (x = ((x) & ~(z)) | ((y) & (z)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'z' - possible side-effects?
#63: FILE: drivers/char/tty_ioctl.c:78:
+#define NOSET_MASK(x, y, z) (x = ((x) & ~(z)) | ((y) & (z)))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#162: FILE: drivers/char/tty_ioctl.c:481:
+	 * with the real speed so its unconditionally usable */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#252: FILE: drivers/char/tty_ioctl.c:631:
+	tty_termios_encode_baud_rate(&termios, termios.c_ispeed,
+						termios.c_ospeed);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#321: FILE: drivers/char/tty_ioctl.c:746:
+int tty_mode_ioctl(struct tty_struct *tty, struct file *file,
 			unsigned int cmd, unsigned long arg)

CHECK:SPACING: No space is necessary after a cast
#338: FILE: drivers/char/tty_ioctl.c:760:
+		return get_sgttyb(real_tty, (struct sgttyb __user *) arg);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#341: FILE: drivers/char/tty_ioctl.c:763:
+		return set_sgttyb(real_tty, (struct sgttyb __user *) arg);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#410: FILE: drivers/char/tty_ioctl.c:790:
+		if (kernel_termios_to_user_termios_1((struct termios __user *)arg, real_tty->termios))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#414: FILE: drivers/char/tty_ioctl.c:794:
+		if (kernel_termios_to_user_termios((struct termios2 __user *)arg, real_tty->termios))

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#445: FILE: drivers/char/tty_ioctl.c:814:
+		if (kernel_termios_to_user_termios((struct termios __user *)arg, real_tty->termios_locked))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#452: FILE: drivers/char/tty_ioctl.c:821:
+		if (user_termios_to_kernel_termios(real_tty->termios_locked,
+					       (struct termios __user *) arg))

CHECK:SPACING: No space is necessary after a cast
#452: FILE: drivers/char/tty_ioctl.c:821:
+					       (struct termios __user *) arg))

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#467: FILE: drivers/char/tty_ioctl.c:826:
+		if (kernel_termios_to_user_termios_1((struct termios __user *)arg, real_tty->termios_locked))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#474: FILE: drivers/char/tty_ioctl.c:833:
+		if (user_termios_to_kernel_termios_1(real_tty->termios_locked,
+					       (struct termios __user *) arg))

CHECK:SPACING: No space is necessary after a cast
#474: FILE: drivers/char/tty_ioctl.c:833:
+					       (struct termios __user *) arg))

CHECK:SPACING: No space is necessary after a cast
#495: FILE: drivers/char/tty_ioctl.c:841:
+		if (get_user(arg, (unsigned int __user *) arg))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#520: FILE: drivers/char/tty_ioctl.c:886:
+int n_tty_ioctl(struct tty_struct *tty, struct file *file,
 		       unsigned int cmd, unsigned long arg)

CHECK:SPACING: No space is necessary after a cast
#624: FILE: drivers/char/tty_ioctl.c:932:
+				(int __user *) arg);

CHECK:SPACING: No space is necessary after a cast
#629: FILE: drivers/char/tty_ioctl.c:937:
+		return put_user(retval, (unsigned int __user *) arg);

CHECK:SPACING: No space is necessary after a cast
#637: FILE: drivers/char/tty_ioctl.c:945:
+		if (get_user(pktmode, (int __user *) arg))

CHECK:BRACES: braces {} should be used on all arms of this statement
#639: FILE: drivers/char/tty_ioctl.c:947:
+		if (pktmode) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#644: FILE: drivers/char/tty_ioctl.c:952:
+		} else

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000356178.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 17 checks, 593 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000356178.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
