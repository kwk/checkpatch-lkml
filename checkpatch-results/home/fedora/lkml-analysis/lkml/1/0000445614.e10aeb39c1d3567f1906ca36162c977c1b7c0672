WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
# cd /sys/devices/platform/applesmc

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
# echo 2 > key_at_index

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
# cat key_at_index_name

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
# cat key_at_index_type

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
# cat key_at_index_data_length

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
# hexdump -C key_at_index_data

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#55: 
00000000  ba 31 96 0b 50 05 10 74 |.1..P..t|
          ^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#92: FILE: drivers/hwmon/applesmc.c:138:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#109: FILE: drivers/hwmon/applesmc.c:252:
+static int applesmc_get_key_at_index(int index, char* key)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#113: FILE: drivers/hwmon/applesmc.c:256:
+	u8 readkey[4];
+	readkey[0] = index >> 24;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#127: FILE: drivers/hwmon/applesmc.c:270:
+^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#145: FILE: drivers/hwmon/applesmc.c:288:
+static int applesmc_get_key_type(char* key, char* type)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#145: FILE: drivers/hwmon/applesmc.c:288:
+static int applesmc_get_key_type(char* key, char* type)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#158: FILE: drivers/hwmon/applesmc.c:301:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#180: FILE: drivers/hwmon/applesmc.c:737:
+static ssize_t applesmc_key_count_show(struct device *dev,
+				struct device_attribute *attr, char *sysfsbuf)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#189: FILE: drivers/hwmon/applesmc.c:746:
+	count = ((u32)buffer[0]<<24) + ((u32)buffer[1]<<16) +
 	                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#189: FILE: drivers/hwmon/applesmc.c:746:
+	count = ((u32)buffer[0]<<24) + ((u32)buffer[1]<<16) +
 	                                              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#190: FILE: drivers/hwmon/applesmc.c:747:
+						((u32)buffer[2]<<8) + buffer[3];
 						               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#200: FILE: drivers/hwmon/applesmc.c:757:
+static ssize_t applesmc_key_at_index_read_show(struct device *dev,
+				struct device_attribute *attr, char *sysfsbuf)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: drivers/hwmon/applesmc.c:778:
+^I^Ireturn ret;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#224: FILE: drivers/hwmon/applesmc.c:781:
+^I/* $

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#232: FILE: drivers/hwmon/applesmc.c:789:
+	if (!ret) {
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#235: FILE: drivers/hwmon/applesmc.c:792:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#235: FILE: drivers/hwmon/applesmc.c:792:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#241: FILE: drivers/hwmon/applesmc.c:798:
+static ssize_t applesmc_key_at_index_data_length_show(struct device *dev,
+				struct device_attribute *attr, char *sysfsbuf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#268: FILE: drivers/hwmon/applesmc.c:825:
+static ssize_t applesmc_key_at_index_type_show(struct device *dev,
+				struct device_attribute *attr, char *sysfsbuf)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#289: FILE: drivers/hwmon/applesmc.c:846:
+		return snprintf(sysfsbuf, PAGE_SIZE, "%s\n", info+1);
 		                                                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#295: FILE: drivers/hwmon/applesmc.c:852:
+static ssize_t applesmc_key_at_index_name_show(struct device *dev,
+				struct device_attribute *attr, char *sysfsbuf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#313: FILE: drivers/hwmon/applesmc.c:870:
+static ssize_t applesmc_key_at_index_show(struct device *dev,
+				struct device_attribute *attr, char *sysfsbuf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#319: FILE: drivers/hwmon/applesmc.c:876:
+static ssize_t applesmc_key_at_index_store(struct device *dev,
+	struct device_attribute *attr, const char *sysfsbuf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#323: FILE: drivers/hwmon/applesmc.c:880:
+	key_at_index = simple_strtoul(sysfsbuf, NULL, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'applesmc_key_count_show' to 'key_count_show'
#337: FILE: drivers/hwmon/applesmc.c:908:
+static DEVICE_ATTR(key_count, 0444, applesmc_key_count_show, NULL);

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'applesmc_key_at_index_show' to 'key_at_index_show' 'applesmc_key_at_index_store' to 'key_at_index_store'
#338: FILE: drivers/hwmon/applesmc.c:909:
+static DEVICE_ATTR(key_at_index, 0644,

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'applesmc_key_at_index_name_show' to 'key_at_index_name_show'
#340: FILE: drivers/hwmon/applesmc.c:911:
+static DEVICE_ATTR(key_at_index_name, 0444,

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'applesmc_key_at_index_type_show' to 'key_at_index_type_show'
#342: FILE: drivers/hwmon/applesmc.c:913:
+static DEVICE_ATTR(key_at_index_type, 0444,

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'applesmc_key_at_index_data_length_show' to 'key_at_index_data_length_show'
#344: FILE: drivers/hwmon/applesmc.c:915:
+static DEVICE_ATTR(key_at_index_data_length, 0444,

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'applesmc_key_at_index_read_show' to 'key_at_index_data_show'
#346: FILE: drivers/hwmon/applesmc.c:917:
+static DEVICE_ATTR(key_at_index_data, 0444,

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#360: FILE: drivers/hwmon/applesmc.c:931:
+static const struct attribute_group key_enumeration_group =
+	{ .attrs = key_enumeration_attributes };

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000445614.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 16 warnings, 12 checks, 317 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000445614.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
