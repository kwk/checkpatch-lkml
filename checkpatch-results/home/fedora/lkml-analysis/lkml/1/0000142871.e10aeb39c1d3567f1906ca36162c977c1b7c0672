WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
New version of tp6800 driver, have hopefully taken care of comments from Alexey

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#114: FILE: linux/drivers/media/video/gspca/tp6800.c:1:
+/* -*- linux-c -*-

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#131: FILE: linux/drivers/media/video/gspca/tp6800.c:18:
+ *^Ialong with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#132: FILE: linux/drivers/media/video/gspca/tp6800.c:19:
+ *^IFoundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:TABSTOP: Statements should start on a tabstop
#797: FILE: linux/drivers/media/video/gspca/tp6800.c:684:
+	 }

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#849: FILE: linux/drivers/media/video/gspca/tp6800.c:736:
+#define REG_W(dev, index, value)					\
+	do {								\
+		res = reg_w(dev, index, value);				\
+		if (res < 0) {						\
+			PDEBUG(D_PROBE, "reg_w failure %s:%d:%d",	\
+			       __FILE__, __LINE__, res);		\
+			goto out;					\
+		}							\
+	} while (0);

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#849: FILE: linux/drivers/media/video/gspca/tp6800.c:736:
+#define REG_W(dev, index, value)					\
+	do {								\
+		res = reg_w(dev, index, value);				\
+		if (res < 0) {						\
+			PDEBUG(D_PROBE, "reg_w failure %s:%d:%d",	\
+			       __FILE__, __LINE__, res);		\
+			goto out;					\
+		}							\
+	} while (0);

do {} while(0) macros should not have a trailing semicolon.

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#871: FILE: linux/drivers/media/video/gspca/tp6800.c:758:
+#define REG_R(dev, index, value)					\
+	do {								\
+		res = reg_r(dev, index, value);				\
+		if (res < 0) {						\
+			PDEBUG(D_PROBE, "reg_r failure %s:%d:%d",	\
+			       __FILE__, __LINE__, res);		\
+			goto out;					\
+		}							\
+	} while (0);

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#871: FILE: linux/drivers/media/video/gspca/tp6800.c:758:
+#define REG_R(dev, index, value)					\
+	do {								\
+		res = reg_r(dev, index, value);				\
+		if (res < 0) {						\
+			PDEBUG(D_PROBE, "reg_r failure %s:%d:%d",	\
+			       __FILE__, __LINE__, res);		\
+			goto out;					\
+		}							\
+	} while (0);

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#893: FILE: linux/drivers/media/video/gspca/tp6800.c:780:
+#define CX0342_W(dev, index, value)					\
+	do {								\
+		res = cx0342_w(dev, index, value);			\
+		if (res < 0) {						\
+			PDEBUG(D_PROBE, "cx0342_w failure %s:%d:%d",	\
+			       __FILE__, __LINE__, res);		\
+			goto out;					\
+		}							\
+	} while (0);

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#893: FILE: linux/drivers/media/video/gspca/tp6800.c:780:
+#define CX0342_W(dev, index, value)					\
+	do {								\
+		res = cx0342_w(dev, index, value);			\
+		if (res < 0) {						\
+			PDEBUG(D_PROBE, "cx0342_w failure %s:%d:%d",	\
+			       __FILE__, __LINE__, res);		\
+			goto out;					\
+		}							\
+	} while (0);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#903: FILE: linux/drivers/media/video/gspca/tp6800.c:790:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#939: FILE: linux/drivers/media/video/gspca/tp6800.c:826:
+#define BULK_W(dev, tag, data, length)					\
+	do {								\
+		res = bulk_w(dev, tag, data, length);			\
+		if (res < 0) {						\
+			PDEBUG(D_PROBE, "bulk_w failure %s:%d:%d",	\
+			       __FILE__, __LINE__, res);		\
+			goto out;					\
+		}							\
+	} while (0);

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#939: FILE: linux/drivers/media/video/gspca/tp6800.c:826:
+#define BULK_W(dev, tag, data, length)					\
+	do {								\
+		res = bulk_w(dev, tag, data, length);			\
+		if (res < 0) {						\
+			PDEBUG(D_PROBE, "bulk_w failure %s:%d:%d",	\
+			       __FILE__, __LINE__, res);		\
+			goto out;					\
+		}							\
+	} while (0);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#949: FILE: linux/drivers/media/video/gspca/tp6800.c:836:
+
+

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#959: FILE: linux/drivers/media/video/gspca/tp6800.c:846:
+	if (0 <= sd->quality && sd->quality <= 16)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:TABSTOP: Statements should start on a tabstop
#1361: FILE: linux/drivers/media/video/gspca/tp6800.c:1248:
+	 }

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1406: FILE: linux/drivers/media/video/gspca/tp6800.c:1293:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1468: FILE: linux/drivers/media/video/gspca/tp6800.c:1355:
+			if (0 <= menu->index && menu->index <= 6) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1508: FILE: linux/drivers/media/video/gspca/tp6800.c:1395:
+	} else if (0 <= val && val <= 6) {

WARNING:TABSTOP: Statements should start on a tabstop
#1611: FILE: linux/drivers/media/video/gspca/tp6800.c:1498:
+	 {

WARNING:TABSTOP: Statements should start on a tabstop
#1625: FILE: linux/drivers/media/video/gspca/tp6800.c:1512:
+	 {

WARNING:TYPO_SPELLING: 'cant' may be misspelled - perhaps 'can't'?
#1627: FILE: linux/drivers/media/video/gspca/tp6800.c:1514:
+	  /* VLC cant select with this: .type	 = V4L2_CTRL_TYPE_MENU, */
 	         ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TABSTOP: Statements should start on a tabstop
#1640: FILE: linux/drivers/media/video/gspca/tp6800.c:1527:
+	 {

WARNING:TABSTOP: Statements should start on a tabstop
#1654: FILE: linux/drivers/media/video/gspca/tp6800.c:1541:
+	 {

WARNING:TABSTOP: Statements should start on a tabstop
#1668: FILE: linux/drivers/media/video/gspca/tp6800.c:1555:
+	 {

WARNING:TABSTOP: Statements should start on a tabstop
#1682: FILE: linux/drivers/media/video/gspca/tp6800.c:1569:
+	 {

WARNING:TABSTOP: Statements should start on a tabstop
#1694: FILE: linux/drivers/media/video/gspca/tp6800.c:1581:
+	 }

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1820: FILE: linux/drivers/media/video/gspca/tp6800.c:1707:
+{
+

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1880: FILE: linux/drivers/media/video/gspca/tp6800.c:1767:
+static const __devinitdata struct usb_device_id device_table[] = {

WARNING:MISPLACED_INIT: __devinitdata should be placed after device_table[]
#1880: FILE: linux/drivers/media/video/gspca/tp6800.c:1767:
+static const __devinitdata struct usb_device_id device_table[] = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#1880: FILE: linux/drivers/media/video/gspca/tp6800.c:1767:
+static const __devinitdata struct usb_device_id device_table[] = {

Const init definitions should use __initconst instead of
__initdata.

Similarly init definitions without const require a separate
use of const.

ERROR:DATE_TIME: Use of the '__DATE__' macro makes the build non-deterministic
#1914: FILE: linux/drivers/media/video/gspca/tp6800.c:1801:
+	PDEBUG(D_PROBE, "registered (compiled %s %s)", __DATE__, __TIME__);

It is generally desirable that building the same source code with
the same set of tools is reproducible, i.e. the output is always
exactly the same.

The kernel does *not* use the ``__DATE__`` and ``__TIME__`` macros,
and enables warnings if they are used as they can lead to
non-deterministic builds.

See: https://www.kernel.org/doc/html/latest/kbuild/reproducible-builds.html#timestamps

ERROR:DATE_TIME: Use of the '__TIME__' macro makes the build non-deterministic
#1914: FILE: linux/drivers/media/video/gspca/tp6800.c:1801:
+	PDEBUG(D_PROBE, "registered (compiled %s %s)", __DATE__, __TIME__);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000142871.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 25 warnings, 4 checks, 1849 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000142871.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
