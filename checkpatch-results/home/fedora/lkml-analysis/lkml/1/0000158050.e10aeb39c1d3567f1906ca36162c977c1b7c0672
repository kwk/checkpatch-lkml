WARNING:BAD_SIGN_OFF: Unexpected content after email: 'Zachary Amsden <zach@vmware.com>, Nick Piggin <npiggin@suse.de>, ', should be: '"Zachary Amsden <zach@vmware.com>, Nick Piggin" <npiggin@suse.de>'
#466: 
CC: Zachary Amsden <zach@vmware.com>, Nick Piggin <npiggin@suse.de>, 

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#476: 
References: <20090120112634.GA20858@elte.hu> <20090120140324.GA26424@elte.hu> <49763806.5090009@goop.org> <20090120205653.GA19710@elte.hu> <20090121072718.GN24891@wotan.suse.de> <4977A051.8050203@goop.org> <1232663311.16317.176.camel@bodhitayantram.eng.vmware.com> <4978F6C6.3090003@goop.org> <1232664907.16317.182.camel@bodhitayantram.eng.vmware.com> <49790BCC.1040807@goop.org> <20090127075912.GA6551@elte.hu>

WARNING:TYPO_SPELLING: 'Fo' may be misspelled - perhaps 'Of'?
#630: 
6U2HJqRzlU0Hs+Fo+njT+et/97u684eP//Rh9vAwGmTXw9ngeZJNy+5gNi3x9xUePS2u3d6b
              ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'Fo' may be misspelled - perhaps 'Of'?
#632: 
GvtHD/P05diDbVs0qn/4w+zYg78V4+7DDK0+maflaAPFt/Fo+uWm81SW8+te7+XlJXlhySx/
                                              ^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1138: FILE: arch/x86/include/asm/paravirt.h:393:
+unsigned paravirt_patch_ident_32(void *insnbuf, unsigned len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1138: FILE: arch/x86/include/asm/paravirt.h:393:
+unsigned paravirt_patch_ident_32(void *insnbuf, unsigned len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1139: FILE: arch/x86/include/asm/paravirt.h:394:
+unsigned paravirt_patch_ident_64(void *insnbuf, unsigned len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1139: FILE: arch/x86/include/asm/paravirt.h:394:
+unsigned paravirt_patch_ident_64(void *insnbuf, unsigned len);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#1147: FILE: arch/x86/include/asm/paravirt.h:1383:
+u32 _paravirt_ident_32(u32);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#1148: FILE: arch/x86/include/asm/paravirt.h:1384:
+u64 _paravirt_ident_64(u64);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1206: FILE: arch/x86/kernel/paravirt.c:404:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1209: FILE: arch/x86/kernel/paravirt.c:407:
+#define paravirt_native_make_pte	(make_pte_t *)_paravirt_ident_32

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1210: FILE: arch/x86/kernel/paravirt.c:408:
+#define paravirt_native_pte_val		(pte_val_t *)_paravirt_ident_32

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1212: FILE: arch/x86/kernel/paravirt.c:410:
+#define paravirt_native_make_pmd	(make_pmd_t *)_paravirt_ident_32

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1213: FILE: arch/x86/kernel/paravirt.c:411:
+#define paravirt_native_pmd_val		(pmd_val_t *)_paravirt_ident_32

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1215: FILE: arch/x86/kernel/paravirt.c:413:
+#define paravirt_native_make_pud	(make_pud_t *)_paravirt_ident_32

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1216: FILE: arch/x86/kernel/paravirt.c:414:
+#define paravirt_native_pud_val		(pud_val_t *)_paravirt_ident_32

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1218: FILE: arch/x86/kernel/paravirt.c:416:
+#define paravirt_native_make_pgd	(make_pgd_t *)_paravirt_ident_32

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1219: FILE: arch/x86/kernel/paravirt.c:417:
+#define paravirt_native_pgd_val		(pgd_val_t *)_paravirt_ident_32

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1222: FILE: arch/x86/kernel/paravirt.c:420:
+#define paravirt_native_make_pte	(make_pte_t *)_paravirt_ident_64

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1223: FILE: arch/x86/kernel/paravirt.c:421:
+#define paravirt_native_pte_val		(pte_val_t *)_paravirt_ident_64

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1225: FILE: arch/x86/kernel/paravirt.c:423:
+#define paravirt_native_make_pmd	(make_pmd_t *)_paravirt_ident_64

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1226: FILE: arch/x86/kernel/paravirt.c:424:
+#define paravirt_native_pmd_val		(pmd_val_t *)_paravirt_ident_64

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1228: FILE: arch/x86/kernel/paravirt.c:426:
+#define paravirt_native_make_pud	(make_pud_t *)_paravirt_ident_64

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1229: FILE: arch/x86/kernel/paravirt.c:427:
+#define paravirt_native_pud_val		(pud_val_t *)_paravirt_ident_64

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1231: FILE: arch/x86/kernel/paravirt.c:429:
+#define paravirt_native_make_pgd	(make_pgd_t *)_paravirt_ident_64

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1232: FILE: arch/x86/kernel/paravirt.c:430:
+#define paravirt_native_pgd_val		(pgd_val_t *)_paravirt_ident_64

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1275: FILE: arch/x86/kernel/paravirt_patch_32.c:15:
+unsigned paravirt_patch_ident_32(void *insnbuf, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1275: FILE: arch/x86/kernel/paravirt_patch_32.c:15:
+unsigned paravirt_patch_ident_32(void *insnbuf, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1281: FILE: arch/x86/kernel/paravirt_patch_32.c:21:
+unsigned paravirt_patch_ident_64(void *insnbuf, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1281: FILE: arch/x86/kernel/paravirt_patch_32.c:21:
+unsigned paravirt_patch_ident_64(void *insnbuf, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1300: FILE: arch/x86/kernel/paravirt_patch_64.c:25:
+unsigned paravirt_patch_ident_32(void *insnbuf, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1300: FILE: arch/x86/kernel/paravirt_patch_64.c:25:
+unsigned paravirt_patch_ident_32(void *insnbuf, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1306: FILE: arch/x86/kernel/paravirt_patch_64.c:31:
+unsigned paravirt_patch_ident_64(void *insnbuf, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1306: FILE: arch/x86/kernel/paravirt_patch_64.c:31:
+unsigned paravirt_patch_ident_64(void *insnbuf, unsigned len)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000158050.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 16 errors, 18 warnings, 1 checks, 164 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000158050.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
