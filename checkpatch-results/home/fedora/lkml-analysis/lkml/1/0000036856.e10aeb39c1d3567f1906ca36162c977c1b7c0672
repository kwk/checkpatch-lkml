WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#50: FILE: kernel/trace/Kconfig:156:
+config FUNCTION_DURATION_TRACER
+       bool "Kernel Function Duration Tracer"
+       depends on FUNCTION_GRAPH_TRACER
+       default y
+       help
+         Enable the kernel to record function durations, with
+         filtering.  Can also be used in early startup.
+         See Documentation/trace/func-duration.txt

Kconfig symbols should have a help text which fully describes
it.

ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: kernel/trace/trace.c:984:
+                               struct ftrace_graph_ret *trace,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#79: FILE: kernel/trace/trace.c:984:
+void __duration_return(struct trace_array *tr,
+                               struct ftrace_graph_ret *trace,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: kernel/trace/trace.c:984:
+                               struct ftrace_graph_ret *trace,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#80: FILE: kernel/trace/trace.c:985:
+                               unsigned long flags,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: kernel/trace/trace.c:985:
+                               unsigned long flags,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: kernel/trace/trace.c:986:
+                               int pc)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: kernel/trace/trace.c:986:
+                               int pc)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: kernel/trace/trace.c:988:
+       struct ftrace_event_call *call = &event_funcgraph_exit;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: kernel/trace/trace.c:989:
+       struct ring_buffer_event *event;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: kernel/trace/trace.c:990:
+       struct ring_buffer *buffer = tr->buffer;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: kernel/trace/trace.c:991:
+       struct ftrace_graph_ret_entry *entry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: kernel/trace/trace.c:993:
+       if (unlikely(local_read(&__get_cpu_var(ftrace_cpu_disabled))))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#88: FILE: kernel/trace/trace.c:993:
+       if (unlikely(local_read(&__get_cpu_var(ftrace_cpu_disabled))))
+               return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: kernel/trace/trace.c:994:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: kernel/trace/trace.c:994:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: kernel/trace/trace.c:997:
+       if (tracing_thresh &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#92: FILE: kernel/trace/trace.c:997:
+       if (tracing_thresh &&
[...]
+               return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#93: FILE: kernel/trace/trace.c:998:
+                       (trace->rettime - trace->calltime) < tracing_thresh) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#93: FILE: kernel/trace/trace.c:998:
+       if (tracing_thresh &&
+                       (trace->rettime - trace->calltime) < tracing_thresh) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: kernel/trace/trace.c:998:
+                       (trace->rettime - trace->calltime) < tracing_thresh) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: kernel/trace/trace.c:999:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: kernel/trace/trace.c:999:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: kernel/trace/trace.c:1000:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: kernel/trace/trace.c:1002:
+       event = trace_buffer_lock_reserve(buffer, TRACE_GRAPH_RET,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#98: FILE: kernel/trace/trace.c:1003:
+                                         sizeof(*entry), flags, pc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: kernel/trace/trace.c:1003:
+                                         sizeof(*entry), flags, pc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: kernel/trace/trace.c:1004:
+       if (!event)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#99: FILE: kernel/trace/trace.c:1004:
+       if (!event)
+               return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: kernel/trace/trace.c:1005:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: kernel/trace/trace.c:1005:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: kernel/trace/trace.c:1006:
+       entry   = ring_buffer_event_data(event);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: kernel/trace/trace.c:1007:
+       entry->ret = *trace;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: kernel/trace/trace.c:1009:
+       if (!filter_current_check_discard(buffer, call, entry, event))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#104: FILE: kernel/trace/trace.c:1009:
+       if (!filter_current_check_discard(buffer, call, entry, event))
+               ring_buffer_unlock_commit(buffer, event);

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: kernel/trace/trace.c:1010:
+               ring_buffer_unlock_commit(buffer, event);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: kernel/trace/trace.c:1010:
+               ring_buffer_unlock_commit(buffer, event);$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#115: FILE: kernel/trace/trace_duration.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: kernel/trace/trace_duration.c:18:
+       int             depth;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: kernel/trace/trace_duration.c:31:
+       { TRACER_OPT(duration-overrun, DURATION_PRINT_OVERRUN) },$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#145: FILE: kernel/trace/trace_duration.c:31:
+       { TRACER_OPT(duration-overrun, DURATION_PRINT_OVERRUN) },
                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: kernel/trace/trace_duration.c:33:
+       { TRACER_OPT(duration-cpu, DURATION_PRINT_CPU) },$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#147: FILE: kernel/trace/trace_duration.c:33:
+       { TRACER_OPT(duration-cpu, DURATION_PRINT_CPU) },
                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: kernel/trace/trace_duration.c:35:
+       { TRACER_OPT(duration-proc, DURATION_PRINT_PROC) },$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#149: FILE: kernel/trace/trace_duration.c:35:
+       { TRACER_OPT(duration-proc, DURATION_PRINT_PROC) },
                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: kernel/trace/trace_duration.c:37:
+       { TRACER_OPT(duration-abstime, DURATION_PRINT_ABS_TIME) },$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#151: FILE: kernel/trace/trace_duration.c:37:
+       { TRACER_OPT(duration-abstime, DURATION_PRINT_ABS_TIME) },
                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: kernel/trace/trace_duration.c:38:
+       { } /* Empty entry */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: kernel/trace/trace_duration.c:43:
+       .val = DURATION_PRINT_CPU,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: kernel/trace/trace_duration.c:44:
+       .opts = trace_opts$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#161: FILE: kernel/trace/trace_duration.c:47:
+extern void __duration_return(struct trace_array *tr,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: kernel/trace/trace_duration.c:48:
+                               struct ftrace_graph_ret *trace,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#162: FILE: kernel/trace/trace_duration.c:48:
+extern void __duration_return(struct trace_array *tr,
+                               struct ftrace_graph_ret *trace,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: kernel/trace/trace_duration.c:48:
+                               struct ftrace_graph_ret *trace,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: kernel/trace/trace_duration.c:49:
+                               unsigned long flags,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: kernel/trace/trace_duration.c:49:
+                               unsigned long flags,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: kernel/trace/trace_duration.c:50:
+                               int pc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: kernel/trace/trace_duration.c:50:
+                               int pc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: kernel/trace/trace_duration.c:55:
+       if (!ftrace_trace_task(current))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#169: FILE: kernel/trace/trace_duration.c:55:
+       if (!ftrace_trace_task(current))
+               return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: kernel/trace/trace_duration.c:56:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: kernel/trace/trace_duration.c:56:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: kernel/trace/trace_duration.c:58:
+       if (!ftrace_graph_addr(trace->func))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#172: FILE: kernel/trace/trace_duration.c:58:
+       if (!ftrace_graph_addr(trace->func))
+               return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: kernel/trace/trace_duration.c:59:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: kernel/trace/trace_duration.c:59:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: kernel/trace/trace_duration.c:61:
+       return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: kernel/trace/trace_duration.c:66:
+       struct trace_array *tr = &global_trace;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: kernel/trace/trace_duration.c:67:
+       struct trace_array_cpu *data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: kernel/trace/trace_duration.c:68:
+       unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: kernel/trace/trace_duration.c:69:
+       long disabled;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: kernel/trace/trace_duration.c:70:
+       int cpu;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: kernel/trace/trace_duration.c:71:
+       int pc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: kernel/trace/trace_duration.c:73:
+       local_irq_save(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: kernel/trace/trace_duration.c:74:
+       cpu = raw_smp_processor_id();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: kernel/trace/trace_duration.c:75:
+       data = tr->data[cpu];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: kernel/trace/trace_duration.c:76:
+       disabled = atomic_inc_return(&data->disabled);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: kernel/trace/trace_duration.c:77:
+       if (likely(disabled == 1)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#191: FILE: kernel/trace/trace_duration.c:77:
+       if (likely(disabled == 1)) {
+               pc = preempt_count();

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: kernel/trace/trace_duration.c:78:
+               pc = preempt_count();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: kernel/trace/trace_duration.c:78:
+               pc = preempt_count();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: kernel/trace/trace_duration.c:79:
+               __duration_return(tr, trace, flags, pc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: kernel/trace/trace_duration.c:79:
+               __duration_return(tr, trace, flags, pc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: kernel/trace/trace_duration.c:80:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: kernel/trace/trace_duration.c:81:
+       atomic_dec(&data->disabled);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: kernel/trace/trace_duration.c:82:
+       local_irq_restore(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: kernel/trace/trace_duration.c:87:
+       int ret = register_ftrace_graph(&duration_return,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: kernel/trace/trace_duration.c:88:
+                                       &duration_entry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: kernel/trace/trace_duration.c:88:
+                                       &duration_entry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: kernel/trace/trace_duration.c:89:
+       if (ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#203: FILE: kernel/trace/trace_duration.c:89:
+       if (ret)
+               return ret;

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: kernel/trace/trace_duration.c:90:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: kernel/trace/trace_duration.c:90:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: kernel/trace/trace_duration.c:91:
+       tracing_start_cmdline_record();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: kernel/trace/trace_duration.c:93:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: kernel/trace/trace_duration.c:98:
+       tracing_stop_cmdline_record();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: kernel/trace/trace_duration.c:99:
+       unregister_ftrace_graph();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: kernel/trace/trace_duration.c:104:
+       if (nb / 100)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#218: FILE: kernel/trace/trace_duration.c:104:
+       if (nb / 100)
+               return 3;

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: kernel/trace/trace_duration.c:105:
+               return 3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: kernel/trace/trace_duration.c:105:
+               return 3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: kernel/trace/trace_duration.c:106:
+       if (nb / 10)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#220: FILE: kernel/trace/trace_duration.c:106:
+       if (nb / 10)
+               return 2;

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: kernel/trace/trace_duration.c:107:
+               return 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: kernel/trace/trace_duration.c:107:
+               return 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: kernel/trace/trace_duration.c:108:
+       return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: kernel/trace/trace_duration.c:114:
+       int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: kernel/trace/trace_duration.c:115:
+       int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: kernel/trace/trace_duration.c:116:
+       int log10_this = log10_cpu(cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: kernel/trace/trace_duration.c:117:
+       int log10_all = log10_cpu(cpumask_weight(cpu_online_mask));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: kernel/trace/trace_duration.c:120:
+        * Start with a space character - to make it stand out$

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: kernel/trace/trace_duration.c:121:
+        * to the right a bit when trace output is pasted into$

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: kernel/trace/trace_duration.c:122:
+        * email:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: kernel/trace/trace_duration.c:123:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: kernel/trace/trace_duration.c:124:
+       ret = trace_seq_printf(s, " ");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#241: FILE: kernel/trace/trace_duration.c:127:
+        * Tricky - we space the CPU field according to the max$

ERROR:CODE_INDENT: code indent should use tabs where possible
#242: FILE: kernel/trace/trace_duration.c:128:
+        * number of online CPUs. On a 2-cpu system it would take$

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: kernel/trace/trace_duration.c:129:
+        * a maximum of 1 digit - on a 128 cpu system it would$

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: kernel/trace/trace_duration.c:130:
+        * take up to 3 digits:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#245: FILE: kernel/trace/trace_duration.c:131:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: kernel/trace/trace_duration.c:132:
+       for (i = 0; i < log10_all - log10_this; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#246: FILE: kernel/trace/trace_duration.c:132:
+       for (i = 0; i < log10_all - log10_this; i++) {
+               ret = trace_seq_printf(s, " ");

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: kernel/trace/trace_duration.c:133:
+               ret = trace_seq_printf(s, " ");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: kernel/trace/trace_duration.c:133:
+               ret = trace_seq_printf(s, " ");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: kernel/trace/trace_duration.c:134:
+               if (!ret)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: kernel/trace/trace_duration.c:134:
+               if (!ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#248: FILE: kernel/trace/trace_duration.c:134:
+               if (!ret)
+                       return TRACE_TYPE_PARTIAL_LINE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#249: FILE: kernel/trace/trace_duration.c:135:
+                       return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: kernel/trace/trace_duration.c:135:
+                       return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: kernel/trace/trace_duration.c:136:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: kernel/trace/trace_duration.c:137:
+       ret = trace_seq_printf(s, "%d) ", cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: kernel/trace/trace_duration.c:138:
+       if (!ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#252: FILE: kernel/trace/trace_duration.c:138:
+       if (!ret)
+               return TRACE_TYPE_PARTIAL_LINE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: kernel/trace/trace_duration.c:139:
+               return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: kernel/trace/trace_duration.c:139:
+               return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: kernel/trace/trace_duration.c:141:
+       return TRACE_TYPE_HANDLED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: kernel/trace/trace_duration.c:149:
+       char comm[TASK_COMM_LEN];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: kernel/trace/trace_duration.c:151:
+       char pid_str[11];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: kernel/trace/trace_duration.c:152:
+       int spaces = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: kernel/trace/trace_duration.c:153:
+       int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: kernel/trace/trace_duration.c:154:
+       int len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: kernel/trace/trace_duration.c:155:
+       int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: kernel/trace/trace_duration.c:157:
+       trace_find_cmdline(pid, comm);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: kernel/trace/trace_duration.c:158:
+       comm[7] = '\0';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: kernel/trace/trace_duration.c:159:
+       sprintf(pid_str, "%d", pid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: kernel/trace/trace_duration.c:162:
+       len = strlen(comm) + strlen(pid_str) + 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: kernel/trace/trace_duration.c:164:
+       if (len < DURATION_PROCINFO_LENGTH)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#278: FILE: kernel/trace/trace_duration.c:164:
+       if (len < DURATION_PROCINFO_LENGTH)
+               spaces = DURATION_PROCINFO_LENGTH - len;

ERROR:CODE_INDENT: code indent should use tabs where possible
#279: FILE: kernel/trace/trace_duration.c:165:
+               spaces = DURATION_PROCINFO_LENGTH - len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: kernel/trace/trace_duration.c:165:
+               spaces = DURATION_PROCINFO_LENGTH - len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: kernel/trace/trace_duration.c:168:
+       for (i = 0; i < spaces / 2; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#282: FILE: kernel/trace/trace_duration.c:168:
+       for (i = 0; i < spaces / 2; i++) {
+               ret = trace_seq_printf(s, " ");

ERROR:CODE_INDENT: code indent should use tabs where possible
#283: FILE: kernel/trace/trace_duration.c:169:
+               ret = trace_seq_printf(s, " ");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: kernel/trace/trace_duration.c:169:
+               ret = trace_seq_printf(s, " ");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#284: FILE: kernel/trace/trace_duration.c:170:
+               if (!ret)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: kernel/trace/trace_duration.c:170:
+               if (!ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#284: FILE: kernel/trace/trace_duration.c:170:
+               if (!ret)
+                       return TRACE_TYPE_PARTIAL_LINE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#285: FILE: kernel/trace/trace_duration.c:171:
+                       return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: kernel/trace/trace_duration.c:171:
+                       return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: kernel/trace/trace_duration.c:172:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: kernel/trace/trace_duration.c:174:
+       ret = trace_seq_printf(s, "%s-%s", comm, pid_str);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: kernel/trace/trace_duration.c:175:
+       if (!ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#289: FILE: kernel/trace/trace_duration.c:175:
+       if (!ret)
+               return TRACE_TYPE_PARTIAL_LINE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#290: FILE: kernel/trace/trace_duration.c:176:
+               return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: kernel/trace/trace_duration.c:176:
+               return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: kernel/trace/trace_duration.c:179:
+       for (i = 0; i < spaces - (spaces / 2); i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#293: FILE: kernel/trace/trace_duration.c:179:
+       for (i = 0; i < spaces - (spaces / 2); i++) {
+               ret = trace_seq_printf(s, " ");

ERROR:CODE_INDENT: code indent should use tabs where possible
#294: FILE: kernel/trace/trace_duration.c:180:
+               ret = trace_seq_printf(s, " ");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: kernel/trace/trace_duration.c:180:
+               ret = trace_seq_printf(s, " ");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#295: FILE: kernel/trace/trace_duration.c:181:
+               if (!ret)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: kernel/trace/trace_duration.c:181:
+               if (!ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#295: FILE: kernel/trace/trace_duration.c:181:
+               if (!ret)
+                       return TRACE_TYPE_PARTIAL_LINE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#296: FILE: kernel/trace/trace_duration.c:182:
+                       return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: kernel/trace/trace_duration.c:182:
+                       return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: kernel/trace/trace_duration.c:183:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: kernel/trace/trace_duration.c:184:
+       return TRACE_TYPE_HANDLED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: kernel/trace/trace_duration.c:189:
+       unsigned long usecs_rem;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: kernel/trace/trace_duration.c:191:
+       usecs_rem = do_div(t, NSEC_PER_SEC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: kernel/trace/trace_duration.c:192:
+       usecs_rem /= 1000;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: kernel/trace/trace_duration.c:194:
+       return trace_seq_printf(s, "%5lu.%06lu |  ",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#309: FILE: kernel/trace/trace_duration.c:195:
+                       (unsigned long)t, usecs_rem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: kernel/trace/trace_duration.c:195:
+                       (unsigned long)t, usecs_rem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: kernel/trace/trace_duration.c:200:
+       unsigned long usecs_rem;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: kernel/trace/trace_duration.c:202:
+       usecs_rem = do_div(t, NSEC_PER_SEC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: kernel/trace/trace_duration.c:204:
+       return trace_seq_printf(s, "%5lu.%09lu |  ",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: kernel/trace/trace_duration.c:205:
+                       (unsigned long)t, usecs_rem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: kernel/trace/trace_duration.c:205:
+                       (unsigned long)t, usecs_rem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: kernel/trace/trace_duration.c:211:
+       unsigned long nsecs_rem = do_div(duration, 1000);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: kernel/trace/trace_duration.c:213:
+       char msecs_str[21];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: kernel/trace/trace_duration.c:214:
+       char nsecs_str[5];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: kernel/trace/trace_duration.c:215:
+       int ret, len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: kernel/trace/trace_duration.c:216:
+       int i;$

CHECK:SPACING: No space is necessary after a cast
#332: FILE: kernel/trace/trace_duration.c:218:
+       sprintf(msecs_str, "%lu", (unsigned long) duration);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: kernel/trace/trace_duration.c:218:
+       sprintf(msecs_str, "%lu", (unsigned long) duration);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: kernel/trace/trace_duration.c:221:
+       ret = trace_seq_printf(s, "%s", msecs_str);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: kernel/trace/trace_duration.c:222:
+       if (!ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#336: FILE: kernel/trace/trace_duration.c:222:
+       if (!ret)
+               return TRACE_TYPE_PARTIAL_LINE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#337: FILE: kernel/trace/trace_duration.c:223:
+               return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: kernel/trace/trace_duration.c:223:
+               return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: kernel/trace/trace_duration.c:225:
+       len = strlen(msecs_str);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: kernel/trace/trace_duration.c:228:
+       if (len < 7) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#342: FILE: kernel/trace/trace_duration.c:228:
+       if (len < 7) {
+               snprintf(nsecs_str, 8 - len, "%03lu", nsecs_rem);

ERROR:CODE_INDENT: code indent should use tabs where possible
#343: FILE: kernel/trace/trace_duration.c:229:
+               snprintf(nsecs_str, 8 - len, "%03lu", nsecs_rem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: kernel/trace/trace_duration.c:229:
+               snprintf(nsecs_str, 8 - len, "%03lu", nsecs_rem);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: kernel/trace/trace_duration.c:230:
+               ret = trace_seq_printf(s, ".%s", nsecs_str);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: kernel/trace/trace_duration.c:230:
+               ret = trace_seq_printf(s, ".%s", nsecs_str);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#345: FILE: kernel/trace/trace_duration.c:231:
+               if (!ret)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: kernel/trace/trace_duration.c:231:
+               if (!ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#345: FILE: kernel/trace/trace_duration.c:231:
+               if (!ret)
+                       return TRACE_TYPE_PARTIAL_LINE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: kernel/trace/trace_duration.c:232:
+                       return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: kernel/trace/trace_duration.c:232:
+                       return TRACE_TYPE_PARTIAL_LINE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: kernel/trace/trace_duration.c:233:
+               len += strlen(nsecs_str);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: kernel/trace/trace_duration.c:233:
+               len += strlen(nsecs_str);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: kernel/trace/trace_duration.c:234:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: kernel/trace/trace_duration.c:236:
+       ret = trace_seq_printf(s, " us ");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: kernel/trace/trace_duration.c:237:
+       if (!ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#351: FILE: kernel/trace/trace_duration.c:237:
+       if (!ret)
+               return TRACE_TYPE_PARTIAL_LINE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#352: FILE: kernel/trace/trace_duration.c:238:
+               return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: kernel/trace/trace_duration.c:238:
+               return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: kernel/trace/trace_duration.c:241:
+       for (i = len; i < 7; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#355: FILE: kernel/trace/trace_duration.c:241:
+       for (i = len; i < 7; i++) {
+               ret = trace_seq_printf(s, " ");

ERROR:CODE_INDENT: code indent should use tabs where possible
#356: FILE: kernel/trace/trace_duration.c:242:
+               ret = trace_seq_printf(s, " ");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: kernel/trace/trace_duration.c:242:
+               ret = trace_seq_printf(s, " ");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#357: FILE: kernel/trace/trace_duration.c:243:
+               if (!ret)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#357: FILE: kernel/trace/trace_duration.c:243:
+               if (!ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#357: FILE: kernel/trace/trace_duration.c:243:
+               if (!ret)
+                       return TRACE_TYPE_PARTIAL_LINE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#358: FILE: kernel/trace/trace_duration.c:244:
+                       return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: kernel/trace/trace_duration.c:244:
+                       return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: kernel/trace/trace_duration.c:245:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: kernel/trace/trace_duration.c:246:
+       return TRACE_TYPE_HANDLED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: kernel/trace/trace_duration.c:252:
+       int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: kernel/trace/trace_duration.c:254:
+       ret = trace_print_duration_duration(duration, s);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: kernel/trace/trace_duration.c:255:
+       if (ret != TRACE_TYPE_HANDLED)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#369: FILE: kernel/trace/trace_duration.c:255:
+       if (ret != TRACE_TYPE_HANDLED)
+               return ret;

ERROR:CODE_INDENT: code indent should use tabs where possible
#370: FILE: kernel/trace/trace_duration.c:256:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: kernel/trace/trace_duration.c:256:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: kernel/trace/trace_duration.c:258:
+       ret = trace_seq_printf(s, "|  ");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: kernel/trace/trace_duration.c:259:
+       if (!ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#373: FILE: kernel/trace/trace_duration.c:259:
+       if (!ret)
+               return TRACE_TYPE_PARTIAL_LINE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#374: FILE: kernel/trace/trace_duration.c:260:
+               return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: kernel/trace/trace_duration.c:260:
+               return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: kernel/trace/trace_duration.c:262:
+       return TRACE_TYPE_HANDLED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: kernel/trace/trace_duration.c:269:
+       struct trace_entry *ent = iter->ent;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: kernel/trace/trace_duration.c:270:
+       int cpu = iter->cpu;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: kernel/trace/trace_duration.c:271:
+       int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: kernel/trace/trace_duration.c:274:
+       if (tracer_flags.val & DURATION_PRINT_ABS_TIME) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#388: FILE: kernel/trace/trace_duration.c:274:
+       if (tracer_flags.val & DURATION_PRINT_ABS_TIME) {
+               ret = print_duration_abs_time(iter->ts, s);

ERROR:CODE_INDENT: code indent should use tabs where possible
#389: FILE: kernel/trace/trace_duration.c:275:
+               ret = print_duration_abs_time(iter->ts, s);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: kernel/trace/trace_duration.c:275:
+               ret = print_duration_abs_time(iter->ts, s);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#390: FILE: kernel/trace/trace_duration.c:276:
+               if (!ret)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: kernel/trace/trace_duration.c:276:
+               if (!ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#390: FILE: kernel/trace/trace_duration.c:276:
+               if (!ret)
+                       return TRACE_TYPE_PARTIAL_LINE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#391: FILE: kernel/trace/trace_duration.c:277:
+                       return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: kernel/trace/trace_duration.c:277:
+                       return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: kernel/trace/trace_duration.c:278:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: kernel/trace/trace_duration.c:281:
+       if (tracer_flags.val & DURATION_PRINT_CPU) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#395: FILE: kernel/trace/trace_duration.c:281:
+       if (tracer_flags.val & DURATION_PRINT_CPU) {
+               ret = print_duration_cpu(s, cpu);

ERROR:CODE_INDENT: code indent should use tabs where possible
#396: FILE: kernel/trace/trace_duration.c:282:
+               ret = print_duration_cpu(s, cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: kernel/trace/trace_duration.c:282:
+               ret = print_duration_cpu(s, cpu);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#397: FILE: kernel/trace/trace_duration.c:283:
+               if (ret == TRACE_TYPE_PARTIAL_LINE)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: kernel/trace/trace_duration.c:283:
+               if (ret == TRACE_TYPE_PARTIAL_LINE)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#397: FILE: kernel/trace/trace_duration.c:283:
+               if (ret == TRACE_TYPE_PARTIAL_LINE)
+                       return TRACE_TYPE_PARTIAL_LINE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#398: FILE: kernel/trace/trace_duration.c:284:
+                       return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: kernel/trace/trace_duration.c:284:
+                       return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: kernel/trace/trace_duration.c:285:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: kernel/trace/trace_duration.c:288:
+       if (tracer_flags.val & DURATION_PRINT_PROC) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#402: FILE: kernel/trace/trace_duration.c:288:
+       if (tracer_flags.val & DURATION_PRINT_PROC) {
+               ret = print_duration_proc(s, ent->pid);

ERROR:CODE_INDENT: code indent should use tabs where possible
#403: FILE: kernel/trace/trace_duration.c:289:
+               ret = print_duration_proc(s, ent->pid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: kernel/trace/trace_duration.c:289:
+               ret = print_duration_proc(s, ent->pid);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#404: FILE: kernel/trace/trace_duration.c:290:
+               if (ret == TRACE_TYPE_PARTIAL_LINE)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: kernel/trace/trace_duration.c:290:
+               if (ret == TRACE_TYPE_PARTIAL_LINE)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#404: FILE: kernel/trace/trace_duration.c:290:
+               if (ret == TRACE_TYPE_PARTIAL_LINE)
+                       return TRACE_TYPE_PARTIAL_LINE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#405: FILE: kernel/trace/trace_duration.c:291:
+                       return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#405: FILE: kernel/trace/trace_duration.c:291:
+                       return TRACE_TYPE_PARTIAL_LINE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#407: FILE: kernel/trace/trace_duration.c:293:
+               ret = trace_seq_printf(s, " | ");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: kernel/trace/trace_duration.c:293:
+               ret = trace_seq_printf(s, " | ");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#408: FILE: kernel/trace/trace_duration.c:294:
+               if (!ret)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: kernel/trace/trace_duration.c:294:
+               if (!ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#408: FILE: kernel/trace/trace_duration.c:294:
+               if (!ret)
+                       return TRACE_TYPE_PARTIAL_LINE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#409: FILE: kernel/trace/trace_duration.c:295:
+                       return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: kernel/trace/trace_duration.c:295:
+                       return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: kernel/trace/trace_duration.c:296:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: kernel/trace/trace_duration.c:298:
+       return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#417: FILE: kernel/trace/trace_duration.c:303:
+                  struct trace_entry *ent, struct trace_iterator *iter)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#417: FILE: kernel/trace/trace_duration.c:303:
+print_duration_return(struct ftrace_graph_ret *trace, struct trace_seq *s,
+                  struct trace_entry *ent, struct trace_iterator *iter)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: kernel/trace/trace_duration.c:303:
+                  struct trace_entry *ent, struct trace_iterator *iter)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: kernel/trace/trace_duration.c:305:
+       unsigned long long duration = trace->rettime - trace->calltime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#420: FILE: kernel/trace/trace_duration.c:306:
+       struct fgraph_data *data = iter->private;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: kernel/trace/trace_duration.c:307:
+       pid_t pid = ent->pid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: kernel/trace/trace_duration.c:308:
+       int cpu = iter->cpu;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: kernel/trace/trace_duration.c:309:
+       int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: kernel/trace/trace_duration.c:310:
+       int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: kernel/trace/trace_duration.c:312:
+       if (data) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#426: FILE: kernel/trace/trace_duration.c:312:
+       if (data) {
+               int cpu = iter->cpu;

ERROR:CODE_INDENT: code indent should use tabs where possible
#427: FILE: kernel/trace/trace_duration.c:313:
+               int cpu = iter->cpu;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#427: FILE: kernel/trace/trace_duration.c:313:
+               int cpu = iter->cpu;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#428: FILE: kernel/trace/trace_duration.c:314:
+               int *depth = &(per_cpu_ptr(data, cpu)->depth);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: kernel/trace/trace_duration.c:314:
+               int *depth = &(per_cpu_ptr(data, cpu)->depth);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#430: FILE: kernel/trace/trace_duration.c:316:
+               /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#431: FILE: kernel/trace/trace_duration.c:317:
+                * Comments display at + 1 to depth. This is the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#432: FILE: kernel/trace/trace_duration.c:318:
+                * return from a function, we now want the comments$

ERROR:CODE_INDENT: code indent should use tabs where possible
#433: FILE: kernel/trace/trace_duration.c:319:
+                * to display at the same level of the bracket.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#434: FILE: kernel/trace/trace_duration.c:320:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#435: FILE: kernel/trace/trace_duration.c:321:
+               *depth = trace->depth - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: kernel/trace/trace_duration.c:321:
+               *depth = trace->depth - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: kernel/trace/trace_duration.c:322:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: kernel/trace/trace_duration.c:324:
+       if (print_duration_prologue(iter, s))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#438: FILE: kernel/trace/trace_duration.c:324:
+       if (print_duration_prologue(iter, s))
+               return TRACE_TYPE_PARTIAL_LINE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#439: FILE: kernel/trace/trace_duration.c:325:
+               return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#439: FILE: kernel/trace/trace_duration.c:325:
+               return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: kernel/trace/trace_duration.c:328:
+       ret = print_duration_calltime(trace->calltime, s);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#443: FILE: kernel/trace/trace_duration.c:329:
+       if (!ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#443: FILE: kernel/trace/trace_duration.c:329:
+       if (!ret)
+               return TRACE_TYPE_PARTIAL_LINE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#444: FILE: kernel/trace/trace_duration.c:330:
+               return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#444: FILE: kernel/trace/trace_duration.c:330:
+               return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#447: FILE: kernel/trace/trace_duration.c:333:
+       ret = print_duration_duration(duration, s);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#448: FILE: kernel/trace/trace_duration.c:334:
+       if (ret == TRACE_TYPE_PARTIAL_LINE)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#448: FILE: kernel/trace/trace_duration.c:334:
+       if (ret == TRACE_TYPE_PARTIAL_LINE)
+               return TRACE_TYPE_PARTIAL_LINE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#449: FILE: kernel/trace/trace_duration.c:335:
+               return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: kernel/trace/trace_duration.c:335:
+               return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: kernel/trace/trace_duration.c:338:
+       for (i = 0; i < trace->depth * DURATION_INDENT; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#452: FILE: kernel/trace/trace_duration.c:338:
+       for (i = 0; i < trace->depth * DURATION_INDENT; i++) {
+               ret = trace_seq_printf(s, " ");

ERROR:CODE_INDENT: code indent should use tabs where possible
#453: FILE: kernel/trace/trace_duration.c:339:
+               ret = trace_seq_printf(s, " ");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#453: FILE: kernel/trace/trace_duration.c:339:
+               ret = trace_seq_printf(s, " ");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#454: FILE: kernel/trace/trace_duration.c:340:
+               if (!ret)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#454: FILE: kernel/trace/trace_duration.c:340:
+               if (!ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#454: FILE: kernel/trace/trace_duration.c:340:
+               if (!ret)
+                       return TRACE_TYPE_PARTIAL_LINE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#455: FILE: kernel/trace/trace_duration.c:341:
+                       return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#455: FILE: kernel/trace/trace_duration.c:341:
+                       return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#456: FILE: kernel/trace/trace_duration.c:342:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#459: FILE: kernel/trace/trace_duration.c:345:
+       ret = seq_print_ip_sym(s, trace->func, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: kernel/trace/trace_duration.c:347:
+       if (!ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#461: FILE: kernel/trace/trace_duration.c:347:
+       if (!ret)
+               return TRACE_TYPE_PARTIAL_LINE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#462: FILE: kernel/trace/trace_duration.c:348:
+               return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: kernel/trace/trace_duration.c:348:
+               return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: kernel/trace/trace_duration.c:350:
+       ret = trace_seq_printf(s, "\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#465: FILE: kernel/trace/trace_duration.c:351:
+       if (!ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#465: FILE: kernel/trace/trace_duration.c:351:
+       if (!ret)
+               return TRACE_TYPE_PARTIAL_LINE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#466: FILE: kernel/trace/trace_duration.c:352:
+               return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#466: FILE: kernel/trace/trace_duration.c:352:
+               return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#469: FILE: kernel/trace/trace_duration.c:355:
+       if (tracer_flags.val & DURATION_PRINT_OVERRUN) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#469: FILE: kernel/trace/trace_duration.c:355:
+       if (tracer_flags.val & DURATION_PRINT_OVERRUN) {
+               ret = trace_seq_printf(s, " (Overruns: %lu)\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#470: FILE: kernel/trace/trace_duration.c:356:
+               ret = trace_seq_printf(s, " (Overruns: %lu)\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: kernel/trace/trace_duration.c:356:
+               ret = trace_seq_printf(s, " (Overruns: %lu)\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#471: FILE: kernel/trace/trace_duration.c:357:
+                                       trace->overrun);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#471: FILE: kernel/trace/trace_duration.c:357:
+               ret = trace_seq_printf(s, " (Overruns: %lu)\n",
+                                       trace->overrun);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: kernel/trace/trace_duration.c:357:
+                                       trace->overrun);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#472: FILE: kernel/trace/trace_duration.c:358:
+               if (!ret)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: kernel/trace/trace_duration.c:358:
+               if (!ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#472: FILE: kernel/trace/trace_duration.c:358:
+               if (!ret)
+                       return TRACE_TYPE_PARTIAL_LINE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#473: FILE: kernel/trace/trace_duration.c:359:
+                       return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#473: FILE: kernel/trace/trace_duration.c:359:
+                       return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: kernel/trace/trace_duration.c:360:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: kernel/trace/trace_duration.c:362:
+       return TRACE_TYPE_HANDLED;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#481: FILE: kernel/trace/trace_duration.c:367:
+                   struct trace_iterator *iter)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#481: FILE: kernel/trace/trace_duration.c:367:
+print_duration_comment(struct trace_seq *s,  struct trace_entry *ent,
+                   struct trace_iterator *iter)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: kernel/trace/trace_duration.c:367:
+                   struct trace_iterator *iter)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: kernel/trace/trace_duration.c:369:
+       unsigned long sym_flags = (trace_flags & TRACE_ITER_SYM_MASK);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: kernel/trace/trace_duration.c:370:
+       struct fgraph_data *data = iter->private;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#485: FILE: kernel/trace/trace_duration.c:371:
+       struct trace_event *event;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: kernel/trace/trace_duration.c:372:
+       int depth = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: kernel/trace/trace_duration.c:373:
+       int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: kernel/trace/trace_duration.c:374:
+       int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: kernel/trace/trace_duration.c:376:
+       if (data)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#490: FILE: kernel/trace/trace_duration.c:376:
+       if (data)
+               depth = per_cpu_ptr(data, iter->cpu)->depth;

ERROR:CODE_INDENT: code indent should use tabs where possible
#491: FILE: kernel/trace/trace_duration.c:377:
+               depth = per_cpu_ptr(data, iter->cpu)->depth;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: kernel/trace/trace_duration.c:377:
+               depth = per_cpu_ptr(data, iter->cpu)->depth;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: kernel/trace/trace_duration.c:379:
+       if (print_duration_prologue(iter, s))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#493: FILE: kernel/trace/trace_duration.c:379:
+       if (print_duration_prologue(iter, s))
+               return TRACE_TYPE_PARTIAL_LINE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#494: FILE: kernel/trace/trace_duration.c:380:
+               return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: kernel/trace/trace_duration.c:380:
+               return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: kernel/trace/trace_duration.c:383:
+       ret = trace_seq_printf(s, "            |  ");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: kernel/trace/trace_duration.c:384:
+       if (!ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#498: FILE: kernel/trace/trace_duration.c:384:
+       if (!ret)
+               return TRACE_TYPE_PARTIAL_LINE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#499: FILE: kernel/trace/trace_duration.c:385:
+               return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#499: FILE: kernel/trace/trace_duration.c:385:
+               return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#502: FILE: kernel/trace/trace_duration.c:388:
+       if (depth > 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#502: FILE: kernel/trace/trace_duration.c:388:
+       if (depth > 0)
+               for (i = 0; i < (depth + 1) * DURATION_INDENT; i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#503: FILE: kernel/trace/trace_duration.c:389:
+               for (i = 0; i < (depth + 1) * DURATION_INDENT; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#503: FILE: kernel/trace/trace_duration.c:389:
+               for (i = 0; i < (depth + 1) * DURATION_INDENT; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#503: FILE: kernel/trace/trace_duration.c:389:
+               for (i = 0; i < (depth + 1) * DURATION_INDENT; i++) {
+                       ret = trace_seq_printf(s, " ");

ERROR:CODE_INDENT: code indent should use tabs where possible
#504: FILE: kernel/trace/trace_duration.c:390:
+                       ret = trace_seq_printf(s, " ");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#504: FILE: kernel/trace/trace_duration.c:390:
+                       ret = trace_seq_printf(s, " ");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#505: FILE: kernel/trace/trace_duration.c:391:
+                       if (!ret)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#505: FILE: kernel/trace/trace_duration.c:391:
+                       if (!ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#505: FILE: kernel/trace/trace_duration.c:391:
+                       if (!ret)
+                               return TRACE_TYPE_PARTIAL_LINE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#506: FILE: kernel/trace/trace_duration.c:392:
+                               return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: kernel/trace/trace_duration.c:392:
+                               return TRACE_TYPE_PARTIAL_LINE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#507: FILE: kernel/trace/trace_duration.c:393:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#507: FILE: kernel/trace/trace_duration.c:393:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: kernel/trace/trace_duration.c:396:
+       ret = trace_seq_printf(s, "/* ");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#511: FILE: kernel/trace/trace_duration.c:397:
+       if (!ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#511: FILE: kernel/trace/trace_duration.c:397:
+       if (!ret)
+               return TRACE_TYPE_PARTIAL_LINE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#512: FILE: kernel/trace/trace_duration.c:398:
+               return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#512: FILE: kernel/trace/trace_duration.c:398:
+               return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#514: FILE: kernel/trace/trace_duration.c:400:
+       switch (iter->ent->type) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#515: FILE: kernel/trace/trace_duration.c:401:
+       case TRACE_BPRINT:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#516: FILE: kernel/trace/trace_duration.c:402:
+               ret = trace_print_bprintk_msg_only(iter);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#516: FILE: kernel/trace/trace_duration.c:402:
+               ret = trace_print_bprintk_msg_only(iter);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#517: FILE: kernel/trace/trace_duration.c:403:
+               if (ret != TRACE_TYPE_HANDLED)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#517: FILE: kernel/trace/trace_duration.c:403:
+               if (ret != TRACE_TYPE_HANDLED)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#517: FILE: kernel/trace/trace_duration.c:403:
+               if (ret != TRACE_TYPE_HANDLED)
+                       return ret;

ERROR:CODE_INDENT: code indent should use tabs where possible
#518: FILE: kernel/trace/trace_duration.c:404:
+                       return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#518: FILE: kernel/trace/trace_duration.c:404:
+                       return ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#519: FILE: kernel/trace/trace_duration.c:405:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#519: FILE: kernel/trace/trace_duration.c:405:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#520: FILE: kernel/trace/trace_duration.c:406:
+       case TRACE_PRINT:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#521: FILE: kernel/trace/trace_duration.c:407:
+               ret = trace_print_printk_msg_only(iter);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#521: FILE: kernel/trace/trace_duration.c:407:
+               ret = trace_print_printk_msg_only(iter);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#522: FILE: kernel/trace/trace_duration.c:408:
+               if (ret != TRACE_TYPE_HANDLED)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: kernel/trace/trace_duration.c:408:
+               if (ret != TRACE_TYPE_HANDLED)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#522: FILE: kernel/trace/trace_duration.c:408:
+               if (ret != TRACE_TYPE_HANDLED)
+                       return ret;

ERROR:CODE_INDENT: code indent should use tabs where possible
#523: FILE: kernel/trace/trace_duration.c:409:
+                       return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#523: FILE: kernel/trace/trace_duration.c:409:
+                       return ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#524: FILE: kernel/trace/trace_duration.c:410:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#524: FILE: kernel/trace/trace_duration.c:410:
+               break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#526: FILE: kernel/trace/trace_duration.c:412:
+               event = ftrace_find_event(ent->type);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: kernel/trace/trace_duration.c:412:
+               event = ftrace_find_event(ent->type);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#527: FILE: kernel/trace/trace_duration.c:413:
+               if (!event)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#527: FILE: kernel/trace/trace_duration.c:413:
+               if (!event)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#527: FILE: kernel/trace/trace_duration.c:413:
+               if (!event)
+                       return TRACE_TYPE_UNHANDLED;

ERROR:CODE_INDENT: code indent should use tabs where possible
#528: FILE: kernel/trace/trace_duration.c:414:
+                       return TRACE_TYPE_UNHANDLED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#528: FILE: kernel/trace/trace_duration.c:414:
+                       return TRACE_TYPE_UNHANDLED;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#530: FILE: kernel/trace/trace_duration.c:416:
+               ret = event->trace(iter, sym_flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#530: FILE: kernel/trace/trace_duration.c:416:
+               ret = event->trace(iter, sym_flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#531: FILE: kernel/trace/trace_duration.c:417:
+               if (ret != TRACE_TYPE_HANDLED)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: kernel/trace/trace_duration.c:417:
+               if (ret != TRACE_TYPE_HANDLED)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#531: FILE: kernel/trace/trace_duration.c:417:
+               if (ret != TRACE_TYPE_HANDLED)
+                       return ret;

ERROR:CODE_INDENT: code indent should use tabs where possible
#532: FILE: kernel/trace/trace_duration.c:418:
+                       return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#532: FILE: kernel/trace/trace_duration.c:418:
+                       return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: kernel/trace/trace_duration.c:419:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#536: FILE: kernel/trace/trace_duration.c:422:
+       if (s->buffer[s->len - 1] == '\n') {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#536: FILE: kernel/trace/trace_duration.c:422:
+       if (s->buffer[s->len - 1] == '\n') {
+               s->buffer[s->len - 1] = '\0';

ERROR:CODE_INDENT: code indent should use tabs where possible
#537: FILE: kernel/trace/trace_duration.c:423:
+               s->buffer[s->len - 1] = '\0';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#537: FILE: kernel/trace/trace_duration.c:423:
+               s->buffer[s->len - 1] = '\0';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#538: FILE: kernel/trace/trace_duration.c:424:
+               s->len--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#538: FILE: kernel/trace/trace_duration.c:424:
+               s->len--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#539: FILE: kernel/trace/trace_duration.c:425:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#541: FILE: kernel/trace/trace_duration.c:427:
+       ret = trace_seq_printf(s, " */\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#542: FILE: kernel/trace/trace_duration.c:428:
+       if (!ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#542: FILE: kernel/trace/trace_duration.c:428:
+       if (!ret)
+               return TRACE_TYPE_PARTIAL_LINE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#543: FILE: kernel/trace/trace_duration.c:429:
+               return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#543: FILE: kernel/trace/trace_duration.c:429:
+               return TRACE_TYPE_PARTIAL_LINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#545: FILE: kernel/trace/trace_duration.c:431:
+       return TRACE_TYPE_HANDLED;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#548: FILE: kernel/trace/trace_duration.c:434:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#552: FILE: kernel/trace/trace_duration.c:438:
+       struct trace_entry *entry = iter->ent;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#553: FILE: kernel/trace/trace_duration.c:439:
+       struct trace_seq *s = &iter->seq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: kernel/trace/trace_duration.c:441:
+       switch (entry->type) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#556: FILE: kernel/trace/trace_duration.c:442:
+       case TRACE_GRAPH_RET: {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#557: FILE: kernel/trace/trace_duration.c:443:
+               /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#558: FILE: kernel/trace/trace_duration.c:444:
+                * Note: No need for trace_assign_type() here.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#559: FILE: kernel/trace/trace_duration.c:445:
+                * Case statement already checks the type.)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#560: FILE: kernel/trace/trace_duration.c:446:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#561: FILE: kernel/trace/trace_duration.c:447:
+               struct ftrace_graph_ret_entry *ret_entry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#561: FILE: kernel/trace/trace_duration.c:447:
+               struct ftrace_graph_ret_entry *ret_entry;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#562: FILE: kernel/trace/trace_duration.c:448:
+               ret_entry = (struct ftrace_graph_ret_entry *)entry;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#562: FILE: kernel/trace/trace_duration.c:448:
+               struct ftrace_graph_ret_entry *ret_entry;
+               ret_entry = (struct ftrace_graph_ret_entry *)entry;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#562: FILE: kernel/trace/trace_duration.c:448:
+               ret_entry = (struct ftrace_graph_ret_entry *)entry;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#563: FILE: kernel/trace/trace_duration.c:449:
+               return print_duration_return( &ret_entry->ret, s, entry, iter);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#563: FILE: kernel/trace/trace_duration.c:449:
+               return print_duration_return( &ret_entry->ret, s, entry, iter);$

ERROR:SPACING: space prohibited after that open parenthesis '('
#563: FILE: kernel/trace/trace_duration.c:449:
+               return print_duration_return( &ret_entry->ret, s, entry, iter);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: kernel/trace/trace_duration.c:450:
+       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#566: FILE: kernel/trace/trace_duration.c:452:
+               return print_duration_comment(s, entry, iter);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#566: FILE: kernel/trace/trace_duration.c:452:
+               return print_duration_comment(s, entry, iter);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#567: FILE: kernel/trace/trace_duration.c:453:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#569: FILE: kernel/trace/trace_duration.c:455:
+       return TRACE_TYPE_HANDLED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#575: FILE: kernel/trace/trace_duration.c:461:
+       seq_printf(s, "# tracing_thresh=%lu\n", tracing_thresh/1000);$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#575: FILE: kernel/trace/trace_duration.c:461:
+       seq_printf(s, "# tracing_thresh=%lu\n", tracing_thresh/1000);
                                                              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#578: FILE: kernel/trace/trace_duration.c:464:
+       seq_printf(s, "# ");$

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#578: FILE: kernel/trace/trace_duration.c:464:
+       seq_printf(s, "# ");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#579: FILE: kernel/trace/trace_duration.c:465:
+       if (tracer_flags.val & DURATION_PRINT_ABS_TIME)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#579: FILE: kernel/trace/trace_duration.c:465:
+       if (tracer_flags.val & DURATION_PRINT_ABS_TIME)
+               seq_printf(s, "     TIME       ");

ERROR:CODE_INDENT: code indent should use tabs where possible
#580: FILE: kernel/trace/trace_duration.c:466:
+               seq_printf(s, "     TIME       ");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#580: FILE: kernel/trace/trace_duration.c:466:
+               seq_printf(s, "     TIME       ");$

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#580: FILE: kernel/trace/trace_duration.c:466:
+               seq_printf(s, "     TIME       ");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: kernel/trace/trace_duration.c:467:
+       if (tracer_flags.val & DURATION_PRINT_CPU)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#581: FILE: kernel/trace/trace_duration.c:467:
+       if (tracer_flags.val & DURATION_PRINT_CPU)
+               seq_printf(s, "CPU");

ERROR:CODE_INDENT: code indent should use tabs where possible
#582: FILE: kernel/trace/trace_duration.c:468:
+               seq_printf(s, "CPU");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#582: FILE: kernel/trace/trace_duration.c:468:
+               seq_printf(s, "CPU");$

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#582: FILE: kernel/trace/trace_duration.c:468:
+               seq_printf(s, "CPU");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#583: FILE: kernel/trace/trace_duration.c:469:
+       if (tracer_flags.val & DURATION_PRINT_PROC)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#583: FILE: kernel/trace/trace_duration.c:469:
+       if (tracer_flags.val & DURATION_PRINT_PROC)
+               seq_printf(s, "  TASK/PID      ");

ERROR:CODE_INDENT: code indent should use tabs where possible
#584: FILE: kernel/trace/trace_duration.c:470:
+               seq_printf(s, "  TASK/PID      ");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#584: FILE: kernel/trace/trace_duration.c:470:
+               seq_printf(s, "  TASK/PID      ");$

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#584: FILE: kernel/trace/trace_duration.c:470:
+               seq_printf(s, "  TASK/PID      ");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#585: FILE: kernel/trace/trace_duration.c:471:
+       seq_printf(s, "  CALLTIME     ");$

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#585: FILE: kernel/trace/trace_duration.c:471:
+       seq_printf(s, "  CALLTIME     ");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#586: FILE: kernel/trace/trace_duration.c:472:
+       seq_printf(s, "  DURATION   ");$

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#586: FILE: kernel/trace/trace_duration.c:472:
+       seq_printf(s, "  DURATION   ");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#587: FILE: kernel/trace/trace_duration.c:473:
+       seq_printf(s, "               FUNCTION CALLS\n");$

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#587: FILE: kernel/trace/trace_duration.c:473:
+       seq_printf(s, "               FUNCTION CALLS\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#590: FILE: kernel/trace/trace_duration.c:476:
+       seq_printf(s, "# ");$

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#590: FILE: kernel/trace/trace_duration.c:476:
+       seq_printf(s, "# ");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#591: FILE: kernel/trace/trace_duration.c:477:
+       if (tracer_flags.val & DURATION_PRINT_ABS_TIME)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#591: FILE: kernel/trace/trace_duration.c:477:
+       if (tracer_flags.val & DURATION_PRINT_ABS_TIME)
+               seq_printf(s, "      |         ");

ERROR:CODE_INDENT: code indent should use tabs where possible
#592: FILE: kernel/trace/trace_duration.c:478:
+               seq_printf(s, "      |         ");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#592: FILE: kernel/trace/trace_duration.c:478:
+               seq_printf(s, "      |         ");$

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#592: FILE: kernel/trace/trace_duration.c:478:
+               seq_printf(s, "      |         ");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#593: FILE: kernel/trace/trace_duration.c:479:
+       if (tracer_flags.val & DURATION_PRINT_CPU)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#593: FILE: kernel/trace/trace_duration.c:479:
+       if (tracer_flags.val & DURATION_PRINT_CPU)
+               seq_printf(s, "|  ");

ERROR:CODE_INDENT: code indent should use tabs where possible
#594: FILE: kernel/trace/trace_duration.c:480:
+               seq_printf(s, "|  ");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#594: FILE: kernel/trace/trace_duration.c:480:
+               seq_printf(s, "|  ");$

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#594: FILE: kernel/trace/trace_duration.c:480:
+               seq_printf(s, "|  ");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#595: FILE: kernel/trace/trace_duration.c:481:
+       if (tracer_flags.val & DURATION_PRINT_PROC)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#595: FILE: kernel/trace/trace_duration.c:481:
+       if (tracer_flags.val & DURATION_PRINT_PROC)
+               seq_printf(s, "  |    |        ");

ERROR:CODE_INDENT: code indent should use tabs where possible
#596: FILE: kernel/trace/trace_duration.c:482:
+               seq_printf(s, "  |    |        ");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#596: FILE: kernel/trace/trace_duration.c:482:
+               seq_printf(s, "  |    |        ");$

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#596: FILE: kernel/trace/trace_duration.c:482:
+               seq_printf(s, "  |    |        ");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#597: FILE: kernel/trace/trace_duration.c:483:
+       seq_printf(s, "    |           ");$

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#597: FILE: kernel/trace/trace_duration.c:483:
+       seq_printf(s, "    |           ");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#598: FILE: kernel/trace/trace_duration.c:484:
+       seq_printf(s, "   |   |      ");$

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#598: FILE: kernel/trace/trace_duration.c:484:
+       seq_printf(s, "   |   |      ");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#599: FILE: kernel/trace/trace_duration.c:485:
+       seq_printf(s, "               |   |   |   |\n");$

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#599: FILE: kernel/trace/trace_duration.c:485:
+       seq_printf(s, "               |   |   |   |\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#605: FILE: kernel/trace/trace_duration.c:491:
+       struct fgraph_data *data = alloc_percpu(struct fgraph_data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#606: FILE: kernel/trace/trace_duration.c:492:
+       int cpu;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#608: FILE: kernel/trace/trace_duration.c:494:
+       if (!data)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#608: FILE: kernel/trace/trace_duration.c:494:
+       if (!data)
+               pr_warning("duration tracer: not enough memory\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#609: FILE: kernel/trace/trace_duration.c:495:
+               pr_warning("duration tracer: not enough memory\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#609: FILE: kernel/trace/trace_duration.c:495:
+               pr_warning("duration tracer: not enough memory\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#610: FILE: kernel/trace/trace_duration.c:496:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#610: FILE: kernel/trace/trace_duration.c:496:
+       else
+               for_each_possible_cpu(cpu) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#611: FILE: kernel/trace/trace_duration.c:497:
+               for_each_possible_cpu(cpu) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#611: FILE: kernel/trace/trace_duration.c:497:
+               for_each_possible_cpu(cpu) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#611: FILE: kernel/trace/trace_duration.c:497:
+               for_each_possible_cpu(cpu) {
+                       int *depth = &(per_cpu_ptr(data, cpu)->depth);

ERROR:CODE_INDENT: code indent should use tabs where possible
#612: FILE: kernel/trace/trace_duration.c:498:
+                       int *depth = &(per_cpu_ptr(data, cpu)->depth);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#612: FILE: kernel/trace/trace_duration.c:498:
+                       int *depth = &(per_cpu_ptr(data, cpu)->depth);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#613: FILE: kernel/trace/trace_duration.c:499:
+                       *depth = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#613: FILE: kernel/trace/trace_duration.c:499:
+                       *depth = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#614: FILE: kernel/trace/trace_duration.c:500:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#614: FILE: kernel/trace/trace_duration.c:500:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#616: FILE: kernel/trace/trace_duration.c:502:
+       iter->private = data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#621: FILE: kernel/trace/trace_duration.c:507:
+       free_percpu(iter->private);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#625: FILE: kernel/trace/trace_duration.c:511:
+       .name           = "function_duration",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#626: FILE: kernel/trace/trace_duration.c:512:
+       .open           = duration_trace_open,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#627: FILE: kernel/trace/trace_duration.c:513:
+       .close          = duration_trace_close,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#628: FILE: kernel/trace/trace_duration.c:514:
+       .wait_pipe      = poll_wait_pipe,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#629: FILE: kernel/trace/trace_duration.c:515:
+       .init           = duration_trace_init,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#630: FILE: kernel/trace/trace_duration.c:516:
+       .reset          = duration_trace_reset,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#631: FILE: kernel/trace/trace_duration.c:517:
+       .print_line     = print_duration_function,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#632: FILE: kernel/trace/trace_duration.c:518:
+       .print_header   = print_duration_headers,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#633: FILE: kernel/trace/trace_duration.c:519:
+       .flags          = &tracer_flags,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#638: FILE: kernel/trace/trace_duration.c:524:
+       return register_tracer(&duration_trace);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000036856.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 135 errors, 395 warnings, 13 checks, 586 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000036856.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
