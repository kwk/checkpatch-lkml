CHECK:BRACES: braces {} should be used on all arms of this statement
#92: FILE: mm/memcontrol.c:434:
+	if (lim > memcg->res.memsw_limit)
[...]
+	else if (memcg->res.pages < lim) {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#104: FILE: mm/memcontrol.c:576:
+static int mem_cgroup_set_memsw_limit(struct mem_cgroup *memcg,
+		unsigned long lim)

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: mm/memcontrol.c:581:
+        spin_lock_irqsave(&memcg->res.lock, flags);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: mm/memcontrol.c:581:
+        spin_lock_irqsave(&memcg->res.lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: mm/memcontrol.c:582:
+        if (memcg->res.pages_limit > lim)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: mm/memcontrol.c:582:
+        if (memcg->res.pages_limit > lim)$

CHECK:BRACES: braces {} should be used on all arms of this statement
#110: FILE: mm/memcontrol.c:582:
+        if (memcg->res.pages_limit > lim)
[...]
+        else if (memcg->res.pages + memcg->res.swaps < lim) {
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: mm/memcontrol.c:583:
+                ret = -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: mm/memcontrol.c:583:
+                ret = -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: mm/memcontrol.c:584:
+        else if (memcg->res.pages + memcg->res.swaps < lim) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: mm/memcontrol.c:584:
+        else if (memcg->res.pages + memcg->res.swaps < lim) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: mm/memcontrol.c:588:
+        spin_unlock_irqrestore(&memcg->res.lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: mm/memcontrol.c:588:
+        spin_unlock_irqrestore(&memcg->res.lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: mm/memcontrol.c:590:
+        return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: mm/memcontrol.c:590:
+        return ret;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#120: FILE: mm/memcontrol.c:592:
+
+}

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: mm/memcontrol.c:1348:
+        ^Iret = mem_cgroup_set_memsw_limit(memcg, pages);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#168: FILE: mm/memcontrol.c:1348:
+        ^Iret = mem_cgroup_set_memsw_limit(memcg, pages);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: mm/memcontrol.c:1348:
+        ^Iret = mem_cgroup_set_memsw_limit(memcg, pages);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: mm/memcontrol.c:1351:
+                if (signal_pending(current)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: mm/memcontrol.c:1351:
+                if (signal_pending(current)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: mm/memcontrol.c:1352:
+                        ret = -EINTR;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: mm/memcontrol.c:1352:
+                        ret = -EINTR;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: mm/memcontrol.c:1353:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: mm/memcontrol.c:1353:
+                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: mm/memcontrol.c:1354:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: mm/memcontrol.c:1354:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: mm/memcontrol.c:1355:
+                if (!retry_count) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: mm/memcontrol.c:1355:
+                if (!retry_count) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: mm/memcontrol.c:1356:
+                        ret = -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: mm/memcontrol.c:1356:
+                        ret = -EBUSY;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#177: FILE: mm/memcontrol.c:1357:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: mm/memcontrol.c:1357:
+                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: mm/memcontrol.c:1358:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: mm/memcontrol.c:1358:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: mm/memcontrol.c:1359:
+                progress = try_to_free_mem_cgroup_pages(memcg, GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: mm/memcontrol.c:1359:
+                progress = try_to_free_mem_cgroup_pages(memcg, GFP_KERNEL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: mm/memcontrol.c:1360:
+                if (!progress)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: mm/memcontrol.c:1360:
+                if (!progress)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: mm/memcontrol.c:1361:
+                        retry_count--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: mm/memcontrol.c:1361:
+                        retry_count--;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: mm/memcontrol.c:1362:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: mm/memcontrol.c:1362:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: mm/memcontrol.c:1363:
+        return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: mm/memcontrol.c:1363:
+        return ret;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#185: FILE: mm/memcontrol.c:1365:
+
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#194: FILE: mm/memcontrol.c:1374:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000238312.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 20 errors, 21 warnings, 6 checks, 172 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000238312.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
