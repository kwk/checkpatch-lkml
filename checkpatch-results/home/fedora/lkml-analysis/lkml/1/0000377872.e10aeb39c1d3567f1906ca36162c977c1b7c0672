WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#16: 
Subject: [PATCH] [13/50] x86: Fix and reenable CLFLUSH support in change_page_attr()
                                      ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'Reenable' may be misspelled - perhaps 'Re-enable'?
#23: 
Reenable CLFLUSH support in change_page_attr()
^^^^^^^^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#93: FILE: arch/x86_64/mm/pageattr.c:89:
+	else list_for_each_entry(pg, &a->l, lru) {

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LINE_SPACING: Missing a blank line after declarations
#127: FILE: arch/x86_64/mm/pageattr.c:142:
+	struct page *p;
+	if (!(pfn_valid(__pa(address) >> PAGE_SHIFT)))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#144: FILE: arch/x86_64/mm/pageattr.c:162:
+	BUG_ON(PageLRU(kpte_page));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#147: FILE: arch/x86_64/mm/pageattr.c:165:
+	/* Do caching attributes change?
+	   Note: this will need changes if the PAT bit is used (it isn't

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: arch/x86_64/mm/pageattr.c:166:
+   ^I   currently) because that one varies between 2MB and 4K pages. */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#148: FILE: arch/x86_64/mm/pageattr.c:166:
+   ^I   currently) because that one varies between 2MB and 4K pages. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#148: FILE: arch/x86_64/mm/pageattr.c:166:
+   	   currently) because that one varies between 2MB and 4K pages. */

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#149: FILE: arch/x86_64/mm/pageattr.c:167:
+	if ((pte_val(*kpte)&_PAGE_CACHE) != (pgprot_val(prot)&_PAGE_CACHE)) {
 	                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#149: FILE: arch/x86_64/mm/pageattr.c:167:
+	if ((pte_val(*kpte)&_PAGE_CACHE) != (pgprot_val(prot)&_PAGE_CACHE)) {
 	                                                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#151: FILE: arch/x86_64/mm/pageattr.c:169:
+		struct page *p = flush_page(address);
+		if (!p)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#202: FILE: include/asm-x86_64/pgtable.h:168:
+#define _PAGE_CACHE	(_PAGE_PCD|_PAGE_PWT)
                    	          ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#248: FILE: arch/i386/mm/pageattr.c:95:
+	if (!a->full_flush && cpu_has_clflush) {
[...]
 	} else if (boot_cpu_data.x86_model >= 4)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#249: FILE: arch/i386/mm/pageattr.c:96:
+		list_for_each_entry (p, &a->l, lru) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#276: FILE: arch/i386/mm/pageattr.c:164:
+	struct page *p;
+	if (!(pfn_valid(__pa(address) >> PAGE_SHIFT)))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#289: FILE: arch/i386/mm/pageattr.c:188:
+	BUG_ON(PageLRU(kpte_page));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#292: FILE: arch/i386/mm/pageattr.c:191:
+	/* Do caching attributes change?
+	   Note: this will need changes if the PAT bit is used (it isn't

ERROR:CODE_INDENT: code indent should use tabs where possible
#293: FILE: arch/i386/mm/pageattr.c:192:
+   ^I   currently) because that one varies between 2MB and 4K pages. */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#293: FILE: arch/i386/mm/pageattr.c:192:
+   ^I   currently) because that one varies between 2MB and 4K pages. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#293: FILE: arch/i386/mm/pageattr.c:192:
+   	   currently) because that one varies between 2MB and 4K pages. */

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#294: FILE: arch/i386/mm/pageattr.c:193:
+	if ((pte_val(*kpte)&_PAGE_CACHE) != (pgprot_val(prot)&_PAGE_CACHE)) {
 	                   ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#294: FILE: arch/i386/mm/pageattr.c:193:
+	if ((pte_val(*kpte)&_PAGE_CACHE) != (pgprot_val(prot)&_PAGE_CACHE)) {
 	                                                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#296: FILE: arch/i386/mm/pageattr.c:195:
+		struct page *p = flush_page(address);
+		if (!p)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#348: FILE: include/asm-i386/pgtable.h:131:
+#define _PAGE_CACHE	(_PAGE_PCD|_PAGE_PWT)
                    	          ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000377872.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 15 warnings, 7 checks, 272 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000377872.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
