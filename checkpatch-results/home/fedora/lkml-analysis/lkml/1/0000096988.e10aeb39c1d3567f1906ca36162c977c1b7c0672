CHECK:CAMELCASE: Avoid CamelCase: <bHwSec>
#142: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:85:
+	u8 bHwSec:1; /* indicate whether use Hw security */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <aSifsTime>
#275: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:177:
+#define aSifsTime (((priv->ieee80211->current_network.mode == IEEE_A) || \

CHECK:CAMELCASE: Avoid CamelCase: <IsDataFrame>
#311: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:301:
+#define IsDataFrame(pdu)	(((pdu[0] & 0x0C) == 0x08) ? true : false)

CHECK:CAMELCASE: Avoid CamelCase: <IsLegacyDataFrame>
#312: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:302:
+#define IsLegacyDataFrame(pdu)	(IsDataFrame(pdu) && (!(pdu[0] & FC_QOS_BIT)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pdu' - possible side-effects?
#312: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:302:
+#define IsLegacyDataFrame(pdu)	(IsDataFrame(pdu) && (!(pdu[0] & FC_QOS_BIT)))

CHECK:CAMELCASE: Avoid CamelCase: <IsQoSDataFrame>
#313: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:303:
+#define IsQoSDataFrame(pframe) \

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'pframe' may be better as '(pframe)' to avoid precedence issues
#313: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:303:
+#define IsQoSDataFrame(pframe) \
+	((*(u16 *)pframe & (IEEE80211_STYPE_QOS_DATA | IEEE80211_FTYPE_DATA)) \
+	 == (IEEE80211_STYPE_QOS_DATA | IEEE80211_FTYPE_DATA))

CHECK:CAMELCASE: Avoid CamelCase: <Frame_Order>
#317: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:307:
+#define Frame_Order(pframe)	(*(u16 *)pframe & IEEE80211_FCTL_ORDER)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'pframe' may be better as '(pframe)' to avoid precedence issues
#317: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:307:
+#define Frame_Order(pframe)	(*(u16 *)pframe & IEEE80211_FCTL_ORDER)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#319: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:309:
+#define SN_LESS(a, b)		(((a - b) & 0x800) != 0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'b' may be better as '(b)' to avoid precedence issues
#319: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:309:
+#define SN_LESS(a, b)		(((a - b) & 0x800) != 0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#320: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:310:
+#define SN_EQUAL(a, b)		(a == b)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'b' may be better as '(b)' to avoid precedence issues
#320: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:310:
+#define SN_EQUAL(a, b)		(a == b)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#391: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:341:
+typedef enum _LED_CTL_MODE {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#429: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:362:
+			printk(KERN_DEBUG "ieee80211: " fmt, ## args); \

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'level' - possible side-effects?
#431: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:364:
+#define IEEE80211_DEBUG_DATA(level, data, datalen) \
+	do { \
+		if ((ieee80211_debug_level & (level)) == (level)) { \
+			u8 *pdata = (u8 *)data; \
+			int i; \
+			printk(KERN_DEBUG "ieee80211: %s()\n", __func__); \
+			for (i = 0; i < (int)(datalen); i++) { \
+				printk("%2x ", pdata[i]); \
+				if ((i + 1) % 16 == 0) \
+					printk("\n"); \
+			} \
+			printk("\n"); \
+		} \
 	} while (0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#436: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:369:
+			printk(KERN_DEBUG "ieee80211: %s()\n", __func__); \

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#438: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:371:
+				printk("%2x ", pdata[i]); \

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#440: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:373:
+					printk("\n"); \

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#442: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:375:
+			printk("\n"); \

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#454: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:384:
+#define MAC_ARG(x) ((u8 *)(x))[0], ((u8 *)(x))[1], ((u8 *)(x))[2], \
+		   ((u8 *)(x))[3], ((u8 *)(x))[4], ((u8 *)(x))[5]

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#454: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:384:
+#define MAC_ARG(x) ((u8 *)(x))[0], ((u8 *)(x))[1], ((u8 *)(x))[2], \
+		   ((u8 *)(x))[3], ((u8 *)(x))[4], ((u8 *)(x))[5]

CHECK:BIT_MACRO: Prefer using the BIT macro
#473: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:425:
+#define IEEE80211_DL_HT		   (1 << 10)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#474: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:426:
+#define IEEE80211_DL_BA		   (1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#475: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:427:
+#define IEEE80211_DL_TS		   (1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#476: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:428:
+#define IEEE80211_DL_QOS           (1 << 13)

CHECK:BIT_MACRO: Prefer using the BIT macro
#477: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:429:
+#define IEEE80211_DL_REORDER	   (1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#478: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:430:
+#define IEEE80211_DL_IOT	   (1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#479: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:431:
+#define IEEE80211_DL_IPS	   (1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#480: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:432:
+#define IEEE80211_DL_TRACE	   (1 << 29)

CHECK:BIT_MACRO: Prefer using the BIT macro
#481: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:433:
+#define IEEE80211_DL_DATA	   (1 << 30)

CHECK:BIT_MACRO: Prefer using the BIT macro
#482: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:434:
+#define IEEE80211_DL_ERR	   (1 << 31)

CHECK:CAMELCASE: Avoid CamelCase: <SignalQuality>
#515: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:602:
+	u8	  SignalQuality;	/* in 0-100 index */

CHECK:CAMELCASE: Avoid CamelCase: <RecvSignalPower>
#517: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:604:
+	s32       RecvSignalPower;

CHECK:CAMELCASE: Avoid CamelCase: <RxPower>
#518: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:605:
+	s8	  RxPower;		/* in dBm Translate from PWdB */

CHECK:CAMELCASE: Avoid CamelCase: <SignalStrength>
#519: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:606:
+	u8	  SignalStrength;	/* in 0-100 index */

CHECK:CAMELCASE: Avoid CamelCase: <Antenna>
#528: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:611:
+	u16	  Antenna:1;		/* RTL8185 */

CHECK:CAMELCASE: Avoid CamelCase: <Decrypted>
#529: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:612:
+	u16	  Decrypted:1;		/* RTL8185, RTL8187 */

CHECK:CAMELCASE: Avoid CamelCase: <Wakeup>
#530: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:613:
+	u16	  Wakeup:1;		/* RTL8185 */

CHECK:CAMELCASE: Avoid CamelCase: <Reserved0>
#531: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:614:
+	u16	  Reserved0:1;		/* RTL8185 */

CHECK:CAMELCASE: Avoid CamelCase: <bIsQosData>
#537: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:619:
+	bool      bIsQosData;

CHECK:CAMELCASE: Avoid CamelCase: <RxMIMOSignalStrength>
#553: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:630:
+	u8	  RxMIMOSignalStrength[4]; /* in 0~100 index */

CHECK:CAMELCASE: Avoid CamelCase: <bPacketBeacon>
#580: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:644:
+	bool	  bPacketBeacon;	/* for rssi */

CHECK:CAMELCASE: Avoid CamelCase: <bToSelfBA>
#581: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:645:
+	bool	  bToSelfBA;		/* for rssi */

CHECK:CAMELCASE: Avoid CamelCase: <Seq_Num>
#583: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:647:
+	u16	  Seq_Num;

CHECK:CAMELCASE: Avoid CamelCase: <nTotalAggPkt>
#584: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:648:
+	u8	  nTotalAggPkt;		/* number of aggregated packets */

CHECK:BIT_MACRO: Prefer using the BIT macro
#682: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:953:
+#define NETWORK_EMPTY_ESSID	(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#683: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:954:
+#define NETWORK_HAS_OFDM	(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#684: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:955:
+#define NETWORK_HAS_CCK		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#697: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:958:
+#define NETWORK_HAS_QOS_PARAMETERS	(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#698: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:959:
+#define NETWORK_HAS_QOS_INFORMATION	(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#703: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:963:
+#define NETWORK_HAS_ERP_VALUE		(1 << 10)

CHECK:CAMELCASE: Avoid CamelCase: <Frame_QoSTID>
#740: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1069:
+static inline u8 Frame_QoSTID(u8 *buf)

CHECK:CAMELCASE: Avoid CamelCase: <threshold_40Mhzto20Mhz>
#942: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1342:
+	long threshold_40Mhzto20Mhz;

CHECK:CAMELCASE: Avoid CamelCase: <Fsync_State>
#964: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1360:
+} Fsync_State;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#974: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1363:
+typedef enum _RT_PS_MODE {

CHECK:CAMELCASE: Avoid CamelCase: <eActive>
#975: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1364:
+	eActive,	/* Active/Continuous access. */

CHECK:CAMELCASE: Avoid CamelCase: <eMaxPs>
#976: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1365:
+	eMaxPs,		/* Max power save mode. */

CHECK:CAMELCASE: Avoid CamelCase: <eFastPs>
#977: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1366:
+	eFastPs		/* Fast power save mode. */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#982: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1369:
+typedef enum _IPS_CALLBACK_FUNCION {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#991: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1375:
+typedef enum _RT_JOIN_ACTION {

CHECK:CAMELCASE: Avoid CamelCase: <atimWin>
#1000: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1383:
+	u16 atimWin;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1013: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1389:
+typedef enum _RT_RF_POWER_STATE {

CHECK:CAMELCASE: Avoid CamelCase: <bInactivePs>
#1032: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1397:
+	bool			bInactivePs;

CHECK:CAMELCASE: Avoid CamelCase: <bIPSModeBackup>
#1033: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1398:
+	bool			bIPSModeBackup;

CHECK:CAMELCASE: Avoid CamelCase: <bHaltAdapterClkRQ>
#1034: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1399:
+	bool			bHaltAdapterClkRQ;

CHECK:CAMELCASE: Avoid CamelCase: <bSwRfProcessing>
#1035: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1400:
+	bool			bSwRfProcessing;

WARNING:TYPO_SPELLING: 'Recored' may be misspelled - perhaps 'Recorded'?
#1046: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1408:
+	/* Recored Parameters for rescheduled JoinRequest */
 	   ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:CAMELCASE: Avoid CamelCase: <bTmpBssDesc>
#1047: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1409:
+	bool			bTmpBssDesc;

WARNING:TYPO_SPELLING: 'Recored' may be misspelled - perhaps 'Recorded'?
#1101: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1413:
+	/* Recored Parameters for rescheduled MgntLinkRequest */
 	   ^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <bTmpScanOnly>
#1102: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1414:
+	bool			bTmpScanOnly;

CHECK:CAMELCASE: Avoid CamelCase: <bTmpActiveScan>
#1103: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1415:
+	bool			bTmpActiveScan;

CHECK:CAMELCASE: Avoid CamelCase: <bTmpFilterHiddenAP>
#1104: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1416:
+	bool			bTmpFilterHiddenAP;

CHECK:CAMELCASE: Avoid CamelCase: <bTmpUpdateParms>
#1105: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1417:
+	bool			bTmpUpdateParms;

CHECK:CAMELCASE: Avoid CamelCase: <tmpSsidBuf>
#1106: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1418:
+	u8			tmpSsidBuf[33];

CHECK:CAMELCASE: Avoid CamelCase: <tmpSsid2Scan>
#1107: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1419:
+	OCTET_STRING		tmpSsid2Scan;

CHECK:CAMELCASE: Avoid CamelCase: <bTmpSsid2Scan>
#1108: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1420:
+	bool			bTmpSsid2Scan;

CHECK:CAMELCASE: Avoid CamelCase: <tmpNetworkType>
#1109: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1421:
+	u8			tmpNetworkType;

CHECK:CAMELCASE: Avoid CamelCase: <tmpChannelNumber>
#1110: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1422:
+	u8			tmpChannelNumber;

CHECK:CAMELCASE: Avoid CamelCase: <tmpBcnPeriod>
#1111: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1423:
+	u16			tmpBcnPeriod;

CHECK:CAMELCASE: Avoid CamelCase: <tmpDtimPeriod>
#1112: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1424:
+	u8			tmpDtimPeriod;

CHECK:CAMELCASE: Avoid CamelCase: <tmpmCap>
#1113: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1425:
+	u16			tmpmCap;

CHECK:CAMELCASE: Avoid CamelCase: <tmpSuppRateSet>
#1114: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1426:
+	OCTET_STRING		tmpSuppRateSet;

CHECK:CAMELCASE: Avoid CamelCase: <tmpSuppRateBuf>
#1115: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1427:
+	u8			tmpSuppRateBuf[MAX_NUM_RATES];

CHECK:CAMELCASE: Avoid CamelCase: <bTmpSuppRate>
#1116: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1428:
+	bool			bTmpSuppRate;

CHECK:CAMELCASE: Avoid CamelCase: <tmpIbpm>
#1117: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1429:
+	struct ibss_parms	tmpIbpm;

CHECK:CAMELCASE: Avoid CamelCase: <bTmpIbpm>
#1118: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1430:
+	bool			bTmpIbpm;

CHECK:CAMELCASE: Avoid CamelCase: <bLeisurePs>
#1121: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1433:
+	bool			bLeisurePs;

CHECK:CAMELCASE: Avoid CamelCase: <PowerProfile>
#1122: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1434:
+	u32			PowerProfile;

CHECK:CAMELCASE: Avoid CamelCase: <LpsIdleCount>
#1123: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1435:
+	u8			LpsIdleCount;

CHECK:CAMELCASE: Avoid CamelCase: <RegMaxLPSAwakeIntvl>
#1124: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1436:
+	u8			RegMaxLPSAwakeIntvl;

CHECK:CAMELCASE: Avoid CamelCase: <LPSAwakeIntvl>
#1125: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1437:
+	u8			LPSAwakeIntvl;

CHECK:CAMELCASE: Avoid CamelCase: <CurPsLevel>
#1128: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1440:
+	u32			CurPsLevel;

CHECK:CAMELCASE: Avoid CamelCase: <RegRfPsLevel>
#1129: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1441:
+	u32			RegRfPsLevel;

CHECK:CAMELCASE: Avoid CamelCase: <bFwCtrlLPS>
#1132: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1444:
+	bool			bFwCtrlLPS;

CHECK:CAMELCASE: Avoid CamelCase: <FWCtrlPSMode>
#1133: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1445:
+	u8			FWCtrlPSMode;

CHECK:CAMELCASE: Avoid CamelCase: <LinkReqInIPSRFOffPgs>
#1138: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1448:
+	bool			LinkReqInIPSRFOffPgs;

CHECK:CAMELCASE: Avoid CamelCase: <BufConnectinfoBefore>
#1143: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1453:
+	bool			BufConnectinfoBefore;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1168: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1478:
+typedef enum _FW_CMD_IO_TYPE {

CHECK:CAMELCASE: Avoid CamelCase: <NumRecvBcnInPeriod>
#1219: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1503:
+	u32	NumRecvBcnInPeriod;

CHECK:CAMELCASE: Avoid CamelCase: <NumRecvDataInPeriod>
#1220: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1504:
+	u32	NumRecvDataInPeriod;

CHECK:CAMELCASE: Avoid CamelCase: <RxBcnNum>
#1223: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1507:
+	u32	RxBcnNum[RT_MAX_LD_SLOT_NUM];

CHECK:CAMELCASE: Avoid CamelCase: <RxDataNum>
#1225: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1509:
+	u32	RxDataNum[RT_MAX_LD_SLOT_NUM];

CHECK:CAMELCASE: Avoid CamelCase: <SlotNum>
#1227: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1511:
+	u16	SlotNum;

CHECK:CAMELCASE: Avoid CamelCase: <SlotIndex>
#1228: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1512:
+	u16	SlotIndex;

CHECK:CAMELCASE: Avoid CamelCase: <NumTxOkInPeriod>
#1230: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1514:
+	u32	NumTxOkInPeriod;

CHECK:CAMELCASE: Avoid CamelCase: <NumRxOkInPeriod>
#1231: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1515:
+	u32	NumRxOkInPeriod;

CHECK:CAMELCASE: Avoid CamelCase: <bBusyTraffic>
#1232: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1516:
+	bool	bBusyTraffic;

CHECK:CAMELCASE: Avoid CamelCase: <dot11PowerSaveMode>
#1250: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1529:
+	RT_PS_MODE dot11PowerSaveMode;

CHECK:CAMELCASE: Avoid CamelCase: <eRFPowerState>
#1257: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1533:
+	RT_RF_POWER_STATE eRFPowerState;

CHECK:CAMELCASE: Avoid CamelCase: <RfOffReason>
#1258: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1534:
+	u32 RfOffReason;

CHECK:CAMELCASE: Avoid CamelCase: <pHTInfo>
#1267: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1538:
+	PRT_HIGH_THROUGHPUT pHTInfo;

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#1277: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1544:
+	 * seperate different descriptors the way fill this is the same as
 	   ^^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <Regdot11HTOperationalRateSet>
#1280: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1547:
+	u8	Regdot11HTOperationalRateSet[16];	/* use RATR format */

CHECK:CAMELCASE: Avoid CamelCase: <dot11HTOperationalRateSet>
#1281: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1548:
+	u8	dot11HTOperationalRateSet[16];		/* use RATR format */

CHECK:CAMELCASE: Avoid CamelCase: <HTCurrentOperaRate>
#1286: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1550:
+	u8	HTCurrentOperaRate;

CHECK:CAMELCASE: Avoid CamelCase: <HTHighestOperaRate>
#1287: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1551:
+	u8	HTHighestOperaRate;

CHECK:CAMELCASE: Avoid CamelCase: <Tx_TS_Admit_List>
#1301: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1559:
+	struct list_head	Tx_TS_Admit_List;

CHECK:CAMELCASE: Avoid CamelCase: <Tx_TS_Pending_List>
#1302: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1560:
+	struct list_head	Tx_TS_Pending_List;

CHECK:CAMELCASE: Avoid CamelCase: <Tx_TS_Unused_List>
#1303: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1561:
+	struct list_head	Tx_TS_Unused_List;

CHECK:CAMELCASE: Avoid CamelCase: <Rx_TS_Admit_List>
#1310: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1564:
+	struct list_head	Rx_TS_Admit_List;

CHECK:CAMELCASE: Avoid CamelCase: <Rx_TS_Pending_List>
#1311: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1565:
+	struct list_head	Rx_TS_Pending_List;

CHECK:CAMELCASE: Avoid CamelCase: <Rx_TS_Unused_List>
#1312: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1566:
+	struct list_head	Rx_TS_Unused_List;

CHECK:CAMELCASE: Avoid CamelCase: <RxReorder_Unused_List>
#1322: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1570:
+	struct list_head	RxReorder_Unused_List;

CHECK:CAMELCASE: Avoid CamelCase: <ForcedPriority>
#1326: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1574:
+	u8 ForcedPriority;

WARNING:TYPO_SPELLING: 'remeber' may be misspelled - perhaps 'remember'?
#1338: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1682:
+	 * map of allowed channels. 0 is dummy, FIXME: remeber to default to
 	                                               ^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <pDot11dInfo>
#1341: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1685:
+	void *pDot11dInfo;

CHECK:CAMELCASE: Avoid CamelCase: <skb_aggQ>
#1359: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1759:
+	struct sk_buff_head skb_aggQ[MAX_QUEUE_SIZE];

CHECK:CAMELCASE: Avoid CamelCase: <skb_drv_aggQ>
#1360: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1760:
+	struct sk_buff_head skb_drv_aggQ[MAX_QUEUE_SIZE];

WARNING:TYPO_SPELLING: 'BA' may be misspelled - perhaps 'BY'?
#1364: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1763:
+	/* Enable/Disable Rx immediate BA capability. */
 	                               ^^

CHECK:CAMELCASE: Avoid CamelCase: <CTSToSelfTH>
#1376: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1771:
+	u8 CTSToSelfTH;

CHECK:CAMELCASE: Avoid CamelCase: <LinkDetectInfo>
#1407: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1789:
+	struct rt_link_detect LinkDetectInfo;

CHECK:CAMELCASE: Avoid CamelCase: <PowerSaveControl>
#1409: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1791:
+	struct rt_power_save_control PowerSaveControl;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1468: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1909:
+	int (*handle_assoc_response)(struct net_device *dev,
+				struct ieee80211_assoc_response_frame *resp,

CHECK:CAMELCASE: Avoid CamelCase: <SetBWModeHandler>
#1478: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1915:
+	void (*SetBWModeHandler)(struct net_device *dev,

CHECK:CAMELCASE: Avoid CamelCase: <Bandwidth>
#1479: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1916:
+				 HT_CHANNEL_WIDTH Bandwidth,

CHECK:CAMELCASE: Avoid CamelCase: <Offset>
#1480: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1917:
+				 HT_EXTCHNL_OFFSET Offset);

CHECK:CAMELCASE: Avoid CamelCase: <SetFwCmdHandler>
#1488: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1923:
+	bool (*SetFwCmdHandler)(struct net_device *dev, FW_CMD_IO_TYPE FwCmdIO);

CHECK:CAMELCASE: Avoid CamelCase: <FwCmdIO>
#1488: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1923:
+	bool (*SetFwCmdHandler)(struct net_device *dev, FW_CMD_IO_TYPE FwCmdIO);

CHECK:CAMELCASE: Avoid CamelCase: <LedControlHandler>
#1489: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1924:
+	void (*LedControlHandler)(struct net_device *dev,

CHECK:CAMELCASE: Avoid CamelCase: <LedAction>
#1490: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:1925:
+				  LED_CTL_MODE LedAction);

CHECK:CAMELCASE: Avoid CamelCase: <HTDebugHTCapability>
#1519: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2246:
+extern void HTDebugHTCapability(u8 *CapIE, u8 *TitleString);

CHECK:CAMELCASE: Avoid CamelCase: <CapIE>
#1519: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2246:
+extern void HTDebugHTCapability(u8 *CapIE, u8 *TitleString);

CHECK:CAMELCASE: Avoid CamelCase: <TitleString>
#1519: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2246:
+extern void HTDebugHTCapability(u8 *CapIE, u8 *TitleString);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1519: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2246:
+extern void HTDebugHTCapability(u8 *CapIE, u8 *TitleString);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:CAMELCASE: Avoid CamelCase: <HTDebugHTInfo>
#1520: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2247:
+extern void HTDebugHTInfo(u8 *InfoIE, u8 *TitleString);

CHECK:CAMELCASE: Avoid CamelCase: <InfoIE>
#1520: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2247:
+extern void HTDebugHTInfo(u8 *InfoIE, u8 *TitleString);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1520: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2247:
+extern void HTDebugHTInfo(u8 *InfoIE, u8 *TitleString);

CHECK:CAMELCASE: Avoid CamelCase: <HTSetConnectBwMode>
#1522: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2249:
+extern void HTSetConnectBwMode(struct ieee80211_device *ieee,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1522: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2249:
+extern void HTSetConnectBwMode(struct ieee80211_device *ieee,

CHECK:CAMELCASE: Avoid CamelCase: <HTUpdateDefaultSetting>
#1525: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2252:
+extern void HTUpdateDefaultSetting(struct ieee80211_device *ieee);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1525: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2252:
+extern void HTUpdateDefaultSetting(struct ieee80211_device *ieee);

CHECK:CAMELCASE: Avoid CamelCase: <HTConstructCapabilityElement>
#1526: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2253:
+extern void HTConstructCapabilityElement(struct ieee80211_device *ieee,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1526: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2253:
+extern void HTConstructCapabilityElement(struct ieee80211_device *ieee,

CHECK:CAMELCASE: Avoid CamelCase: <posHTCap>
#1527: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2254:
+					 u8 *posHTCap, u8 *len, u8 isEncrypt);

CHECK:CAMELCASE: Avoid CamelCase: <isEncrypt>
#1527: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2254:
+					 u8 *posHTCap, u8 *len, u8 isEncrypt);

CHECK:CAMELCASE: Avoid CamelCase: <HTConstructInfoElement>
#1528: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2255:
+extern void HTConstructInfoElement(struct ieee80211_device *ieee,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1528: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2255:
+extern void HTConstructInfoElement(struct ieee80211_device *ieee,

CHECK:CAMELCASE: Avoid CamelCase: <posHTInfo>
#1529: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2256:
+				   u8 *posHTInfo, u8 *len, u8 isEncrypt);

CHECK:CAMELCASE: Avoid CamelCase: <HTConstructRT2RTAggElement>
#1530: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2257:
+extern void HTConstructRT2RTAggElement(struct ieee80211_device *ieee,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1530: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2257:
+extern void HTConstructRT2RTAggElement(struct ieee80211_device *ieee,

CHECK:CAMELCASE: Avoid CamelCase: <posRT2RTAgg>
#1531: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2258:
+				       u8 *posRT2RTAgg, u8 *len);

CHECK:CAMELCASE: Avoid CamelCase: <HTInitializeHTInfo>
#1534: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2260:
+extern void HTInitializeHTInfo(struct ieee80211_device *ieee);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1534: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2260:
+extern void HTInitializeHTInfo(struct ieee80211_device *ieee);

CHECK:CAMELCASE: Avoid CamelCase: <HTResetSelfAndSavePeerSetting>
#1539: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2262:
+extern void HTResetSelfAndSavePeerSetting(struct ieee80211_device *ieee,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1539: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2262:
+extern void HTResetSelfAndSavePeerSetting(struct ieee80211_device *ieee,

CHECK:CAMELCASE: Avoid CamelCase: <pNetwork>
#1540: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2263:
+					  struct ieee80211_network *pNetwork);

CHECK:CAMELCASE: Avoid CamelCase: <HTUpdateSelfAndPeerSetting>
#1541: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2264:
+extern void HTUpdateSelfAndPeerSetting(struct ieee80211_device *ieee,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1541: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2264:
+extern void HTUpdateSelfAndPeerSetting(struct ieee80211_device *ieee,

CHECK:CAMELCASE: Avoid CamelCase: <HTGetHighestMCSRate>
#1543: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2266:
+extern u8 HTGetHighestMCSRate(struct ieee80211_device *ieee, u8 *pMCSRateSet,

CHECK:CAMELCASE: Avoid CamelCase: <pMCSRateSet>
#1543: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2266:
+extern u8 HTGetHighestMCSRate(struct ieee80211_device *ieee, u8 *pMCSRateSet,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1543: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2266:
+extern u8 HTGetHighestMCSRate(struct ieee80211_device *ieee, u8 *pMCSRateSet,

CHECK:CAMELCASE: Avoid CamelCase: <pMCSFilter>
#1544: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2267:
+			      u8 *pMCSFilter);

CHECK:CAMELCASE: Avoid CamelCase: <HTCCheck>
#1560: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2270:
+extern u8 HTCCheck(struct ieee80211_device *ieee, u8 *pFrame);

CHECK:CAMELCASE: Avoid CamelCase: <pFrame>
#1560: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2270:
+extern u8 HTCCheck(struct ieee80211_device *ieee, u8 *pFrame);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1560: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2270:
+extern u8 HTCCheck(struct ieee80211_device *ieee, u8 *pFrame);

CHECK:CAMELCASE: Avoid CamelCase: <HTResetIOTSetting>
#1561: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2271:
+extern void HTResetIOTSetting(PRT_HIGH_THROUGHPUT pHTInfo);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1561: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2271:
+extern void HTResetIOTSetting(PRT_HIGH_THROUGHPUT pHTInfo);

CHECK:CAMELCASE: Avoid CamelCase: <IsHTHalfNmodeAPs>
#1562: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2272:
+extern bool IsHTHalfNmodeAPs(struct ieee80211_device *ieee);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1562: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2272:
+extern bool IsHTHalfNmodeAPs(struct ieee80211_device *ieee);

CHECK:CAMELCASE: Avoid CamelCase: <HTHalfMcsToDataRate>
#1563: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2273:
+extern u16 HTHalfMcsToDataRate(struct ieee80211_device *ieee, u8 nMcsRate);

CHECK:CAMELCASE: Avoid CamelCase: <nMcsRate>
#1563: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2273:
+extern u16 HTHalfMcsToDataRate(struct ieee80211_device *ieee, u8 nMcsRate);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1563: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2273:
+extern u16 HTHalfMcsToDataRate(struct ieee80211_device *ieee, u8 nMcsRate);

CHECK:CAMELCASE: Avoid CamelCase: <HTMcsToDataRate>
#1564: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2274:
+extern u16 HTMcsToDataRate(struct ieee80211_device *ieee, u8 nMcsRate);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1564: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2274:
+extern u16 HTMcsToDataRate(struct ieee80211_device *ieee, u8 nMcsRate);

CHECK:CAMELCASE: Avoid CamelCase: <TxCountToDataRate>
#1565: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2275:
+extern u16  TxCountToDataRate(struct ieee80211_device *ieee, u8 nDataRate);

CHECK:CAMELCASE: Avoid CamelCase: <nDataRate>
#1565: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2275:
+extern u16  TxCountToDataRate(struct ieee80211_device *ieee, u8 nDataRate);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1565: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2275:
+extern u16  TxCountToDataRate(struct ieee80211_device *ieee, u8 nDataRate);

CHECK:CAMELCASE: Avoid CamelCase: <ieee80211_rx_ADDBAReq>
#1566: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2276:
+extern int ieee80211_rx_ADDBAReq(struct ieee80211_device *ieee,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1566: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2276:
+extern int ieee80211_rx_ADDBAReq(struct ieee80211_device *ieee,

CHECK:CAMELCASE: Avoid CamelCase: <ieee80211_rx_ADDBARsp>
#1568: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2278:
+extern int ieee80211_rx_ADDBARsp(struct ieee80211_device *ieee,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1568: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2278:
+extern int ieee80211_rx_ADDBARsp(struct ieee80211_device *ieee,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1570: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2280:
+extern int ieee80211_rx_DELBA(struct ieee80211_device *ieee,

CHECK:CAMELCASE: Avoid CamelCase: <TsInitAddBA>
#1572: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2282:
+extern void TsInitAddBA(struct ieee80211_device *ieee, PTX_TS_RECORD pTS,

CHECK:CAMELCASE: Avoid CamelCase: <pTS>
#1572: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2282:
+extern void TsInitAddBA(struct ieee80211_device *ieee, PTX_TS_RECORD pTS,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1572: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2282:
+extern void TsInitAddBA(struct ieee80211_device *ieee, PTX_TS_RECORD pTS,

CHECK:CAMELCASE: Avoid CamelCase: <Policy>
#1573: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2283:
+			u8 Policy, u8 bOverwritePending);

CHECK:CAMELCASE: Avoid CamelCase: <bOverwritePending>
#1573: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2283:
+			u8 Policy, u8 bOverwritePending);

CHECK:CAMELCASE: Avoid CamelCase: <TsInitDelBA>
#1574: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2284:
+extern void TsInitDelBA(struct ieee80211_device *ieee,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1574: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2284:
+extern void TsInitDelBA(struct ieee80211_device *ieee,

CHECK:CAMELCASE: Avoid CamelCase: <pTsCommonInfo>
#1575: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2285:
+			PTS_COMMON_INFO pTsCommonInfo, TR_SELECT TxRxSelect);

CHECK:CAMELCASE: Avoid CamelCase: <TxRxSelect>
#1575: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2285:
+			PTS_COMMON_INFO pTsCommonInfo, TR_SELECT TxRxSelect);

CHECK:CAMELCASE: Avoid CamelCase: <GetTs>
#1589: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2290:
+extern bool GetTs(struct ieee80211_device *ieee, PTS_COMMON_INFO *ppTS,

CHECK:CAMELCASE: Avoid CamelCase: <ppTS>
#1589: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2290:
+extern bool GetTs(struct ieee80211_device *ieee, PTS_COMMON_INFO *ppTS,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1589: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2290:
+extern bool GetTs(struct ieee80211_device *ieee, PTS_COMMON_INFO *ppTS,

CHECK:CAMELCASE: Avoid CamelCase: <Addr>
#1590: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2291:
+		  u8 *Addr, u8 TID, TR_SELECT TxRxSelect,  /* Rx:1, Tx:0 */

WARNING:LINE_SPACING: Missing a blank line after declarations
#1591: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2292:
+		  u8 *Addr, u8 TID, TR_SELECT TxRxSelect,  /* Rx:1, Tx:0 */
+		  bool bAddNewTs);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <bAddNewTs>
#1591: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2292:
+		  bool bAddNewTs);

CHECK:CAMELCASE: Avoid CamelCase: <TsStartAddBaProcess>
#1597: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2294:
+extern void TsStartAddBaProcess(struct ieee80211_device *ieee,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1597: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2294:
+extern void TsStartAddBaProcess(struct ieee80211_device *ieee,

CHECK:CAMELCASE: Avoid CamelCase: <pTxTS>
#1598: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2295:
+				PTX_TS_RECORD pTxTS);

CHECK:CAMELCASE: Avoid CamelCase: <RemovePeerTS>
#1599: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2296:
+extern void RemovePeerTS(struct ieee80211_device *ieee, u8 *Addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1599: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2296:
+extern void RemovePeerTS(struct ieee80211_device *ieee, u8 *Addr);

CHECK:CAMELCASE: Avoid CamelCase: <RemoveAllTS>
#1600: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2297:
+extern void RemoveAllTS(struct ieee80211_device *ieee);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1600: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2297:
+extern void RemoveAllTS(struct ieee80211_device *ieee);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1602: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2299:
+extern void ieee80211_softmac_scan_syncro(struct ieee80211_device *ieee);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1611: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2348:
+extern void ieee80211_indicate_packets(struct ieee80211_device *ieee,

CHECK:CAMELCASE: Avoid CamelCase: <prxbIndicateArray>
#1612: FILE: drivers/staging/rtl8192su/ieee80211/ieee80211.h:2349:
+				       struct ieee80211_rxb **prxbIndicateArray,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000096988.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 17 warnings, 200 checks, 1558 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000096988.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
