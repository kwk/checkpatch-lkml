WARNING:LINE_SPACING: Missing a blank line after declarations
#60: FILE: arch/i386/perfmon/perfmon.c:75:
+	struct pfm_arch_pmu_info *arch_info = pfm_pmu_conf->arch_info;
+	return arch_info->vpmds[get_smt_id()][vpmd];

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#66: FILE: arch/i386/perfmon/perfmon.c:81:
+	struct pfm_arch_pmu_info *arch_info = pfm_pmu_conf->arch_info;
+	arch_info->vpmds[get_smt_id()][vpmd] = val;

WARNING:LINE_SPACING: Missing a blank line after declarations
#74: FILE: arch/i386/perfmon/perfmon.c:89:
+	unsigned int vpmd = pfm_pmu_conf->pmd_desc[cnum].hw_addr;
+	BUG_ON(! spin_is_locked(&ctx->lock));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#74: FILE: arch/i386/perfmon/perfmon.c:89:
+	BUG_ON(! spin_is_locked(&ctx->lock));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#74: FILE: arch/i386/perfmon/perfmon.c:89:
+	BUG_ON(! spin_is_locked(&ctx->lock));
 	       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#74: FILE: arch/i386/perfmon/perfmon.c:89:
+	BUG_ON(! spin_is_locked(&ctx->lock));

lockdep_assert_held() annotations should be preferred over
assertions based on spin_is_locked()

See: https://www.kernel.org/doc/html/latest/locking/lockdep-design.html#annotations

WARNING:LINE_SPACING: Missing a blank line after declarations
#83: FILE: arch/i386/perfmon/perfmon.c:98:
+	unsigned int vpmd = pfm_pmu_conf->pmd_desc[cnum].hw_addr;
+	BUG_ON(! spin_is_locked(&ctx->lock));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#83: FILE: arch/i386/perfmon/perfmon.c:98:
+	BUG_ON(! spin_is_locked(&ctx->lock));

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#83: FILE: arch/i386/perfmon/perfmon.c:98:
+	BUG_ON(! spin_is_locked(&ctx->lock));
 	       ^

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#83: FILE: arch/i386/perfmon/perfmon.c:98:
+	BUG_ON(! spin_is_locked(&ctx->lock));

WARNING:LINE_SPACING: Missing a blank line after declarations
#93: FILE: arch/i386/perfmon/perfmon.c:108:
+	u64 val = 0;
+	BUG_ON(! spin_is_locked(&ctx->lock));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#93: FILE: arch/i386/perfmon/perfmon.c:108:
+	BUG_ON(! spin_is_locked(&ctx->lock));

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#93: FILE: arch/i386/perfmon/perfmon.c:108:
+	BUG_ON(! spin_is_locked(&ctx->lock));
 	       ^

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#93: FILE: arch/i386/perfmon/perfmon.c:108:
+	BUG_ON(! spin_is_locked(&ctx->lock));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#136: FILE: arch/i386/perfmon/perfmon.c:388:
+		BUG_ON(!spin_is_locked(&ctx->lock));

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#136: FILE: arch/i386/perfmon/perfmon.c:388:
+		BUG_ON(!spin_is_locked(&ctx->lock));

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#186: FILE: arch/i386/perfmon/perfmon.c:740:
+	struct pfm_reg_desc* pmc_desc;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#202: FILE: arch/i386/perfmon/perfmon.c:784:
+			 * interrupts disabled. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPLIT_STRING: quoted string split across lines
#301: FILE: arch/i386/perfmon/perfmon.c:1176:
+					PFM_INFO("Invalid PMU configuration (PMC%d), "
+						 "IBS fetch control already configured", i);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#307: FILE: arch/i386/perfmon/perfmon.c:1182:
+			}
+			else if (arch_info->pmc_addrs[i].addrs[0] == MSR_AMD64_IBSOPCTL) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPLIT_STRING: quoted string split across lines
#311: FILE: arch/i386/perfmon/perfmon.c:1186:
+					PFM_INFO("Invalid PMU configuration (PMC%d), "
+						 "IBS execution control already configured", i);

WARNING:SPLIT_STRING: quoted string split across lines
#342: FILE: arch/i386/perfmon/perfmon.c:1216:
+					PFM_INFO("Invalid PMU configuration (PMD%d), "
+						 "IBS fetch counter already configured", i);

WARNING:SPLIT_STRING: quoted string split across lines
#351: FILE: arch/i386/perfmon/perfmon.c:1225:
+					PFM_INFO("Invalid PMU configuration (PMD%d), "
+						 "IBS execution counter already configured", i);

WARNING:SPLIT_STRING: quoted string split across lines
#360: FILE: arch/i386/perfmon/perfmon.c:1234:
+			PFM_INFO("Invalid PMU configuration, "
+				 "Missing settings: 0x%02x", ibs_check);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#395: FILE: arch/x86_64/perfmon/perfmon_k8.c:45:
+/* pmc4  */	{{MSR_AMD64_IBSFETCHCTL, 0}, 0, PFM_REGT_EN|PFM_REGT_IBS},
            	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#396: FILE: arch/x86_64/perfmon/perfmon_k8.c:46:
+/* pmc5  */	{{MSR_AMD64_IBSOPCTL, 0}, 0, PFM_REGT_EN|PFM_REGT_IBS},
            	                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#403: FILE: arch/x86_64/perfmon/perfmon_k8.c:53:
+/* pmd4  */	{{0, 0}, 0, PFM_REGT_CTR|PFM_REGT_IBS},
            	                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#407: FILE: arch/x86_64/perfmon/perfmon_k8.c:57:
+/* pmd8  */	{{0, 0}, 0, PFM_REGT_CTR|PFM_REGT_IBS},
            	                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#412: FILE: arch/x86_64/perfmon/perfmon_k8.c:62:
+/* pmd13 */	{{MSR_AMD64_IBSOPDATA3, 0}, 0, PFM_REGT_IBS|PFM_REGT_IBS_EXT},
            	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#413: FILE: arch/x86_64/perfmon/perfmon_k8.c:63:
+/* pmd14 */	{{MSR_AMD64_IBSDCLINAD, 0}, 0, PFM_REGT_IBS|PFM_REGT_IBS_EXT},
            	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#414: FILE: arch/x86_64/perfmon/perfmon_k8.c:64:
+/* pmd15 */	{{MSR_AMD64_IBSDCPHYSAD, 0}, 0, PFM_REGT_IBS|PFM_REGT_IBS_EXT},
            	                                            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#430: FILE: arch/x86_64/perfmon/perfmon_k8.c:94:
+#define PFM_AMD64_IBSFETCHCTL_RSVD	(~((1ULL<<16)-1))
                                   	        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#430: FILE: arch/x86_64/perfmon/perfmon_k8.c:94:
+#define PFM_AMD64_IBSFETCHCTL_RSVD	(~((1ULL<<16)-1))
                                   	             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#433: FILE: arch/x86_64/perfmon/perfmon_k8.c:97:
+#define PFM_AMD64_IBSOPCTL_RSVD		(~((1ULL<<16)-1))
                                		        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#433: FILE: arch/x86_64/perfmon/perfmon_k8.c:97:
+#define PFM_AMD64_IBSOPCTL_RSVD		(~((1ULL<<16)-1))
                                		             ^

WARNING:LONG_LINE: line length of 150 exceeds 100 columns
#440: FILE: arch/x86_64/perfmon/perfmon_k8.c:104:
+/* pmc4  */ PMC_D(PFM_REG_I, "IBSFETCHCTL", PFM_AMD64_IBSFETCHCTL_VAL, PFM_AMD64_IBSFETCHCTL_RSVD, PFM_AMD64_IBSFETCHCTL_NO64, MSR_AMD64_IBSFETCHCTL),

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 135 exceeds 100 columns
#441: FILE: arch/x86_64/perfmon/perfmon_k8.c:105:
+/* pmc5  */ PMC_D(PFM_REG_I, "IBSOPCTL", PFM_AMD64_IBSOPCTL_VAL, PFM_AMD64_IBSOPCTL_RSVD, PFM_AMD64_IBSOPCTL_NO64, MSR_AMD64_IBSOPCTL),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#506: FILE: arch/x86_64/perfmon/perfmon_k8.c:411:
+	case (PFM_REGT_IBS|PFM_REGT_IBS_EXT):
 	                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#525: FILE: arch/x86_64/perfmon/perfmon_k8.c:430:
+	arch_info->flags &= ~(PFM_X86_FL_IBS|PFM_X86_FL_IBS_EXT);
 	                                    ^

WARNING:TYPO_SPELLING: 'Familiy' may be misspelled - perhaps 'Family'?
#621: FILE: include/asm-i386/perfmon.h:57:
+/* Familiy 10h */
    ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#622: FILE: include/asm-i386/perfmon.h:58:
+#define PFM_AMD64_IBSFETCHEN	(1ULL<<48)
                             	     ^

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#622: FILE: include/asm-i386/perfmon.h:58:
+#define PFM_AMD64_IBSFETCHEN	(1ULL<<48)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#623: FILE: include/asm-i386/perfmon.h:59:
+#define PFM_AMD64_IBSFETCHVAL	(1ULL<<49)
                              	     ^

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#623: FILE: include/asm-i386/perfmon.h:59:
+#define PFM_AMD64_IBSFETCHVAL	(1ULL<<49)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#624: FILE: include/asm-i386/perfmon.h:60:
+#define PFM_AMD64_IBSOPEN	(1ULL<<17)
                          	     ^

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#624: FILE: include/asm-i386/perfmon.h:60:
+#define PFM_AMD64_IBSOPEN	(1ULL<<17)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#625: FILE: include/asm-i386/perfmon.h:61:
+#define PFM_AMD64_IBSOPVAL	(1ULL<<18)
                           	     ^

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#625: FILE: include/asm-i386/perfmon.h:61:
+#define PFM_AMD64_IBSOPVAL	(1ULL<<18)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#639: FILE: include/asm-i386/perfmon.h:78:
+#define PFM_REGT_AMD64		(PFM_REGT_IBS|PFM_REGT_IBS_EXT)
                       		             ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#642: FILE: include/asm-i386/perfmon.h:81:
+ * features */

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#702: FILE: include/linux/perfmon_pmu.h:84:
+#define PFM_REG_IRO	(PFM_REG_RO|PFM_REG_I)
                    	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#703: FILE: include/linux/perfmon_pmu.h:85:
+#define PFM_REG_ICV	(PFM_REG_C64|PFM_REG_I|PFM_REG_V) /* virtual (sw) counter */
                    	            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#703: FILE: include/linux/perfmon_pmu.h:85:
+#define PFM_REG_ICV	(PFM_REG_C64|PFM_REG_I|PFM_REG_V) /* virtual (sw) counter */
                    	                      ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#726: FILE: perfmon/perfmon_intr.c:169:
+		if (likely(!(pfm_pmu_conf->pmd_desc[i].type & PFM_REG_V)))
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#728: FILE: perfmon/perfmon_intr.c:171:
+		else {

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#736: FILE: perfmon/perfmon_intr.c:179:
+			if (! new_val)
 			    ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000417748.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 23 warnings, 27 checks, 649 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000417748.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
