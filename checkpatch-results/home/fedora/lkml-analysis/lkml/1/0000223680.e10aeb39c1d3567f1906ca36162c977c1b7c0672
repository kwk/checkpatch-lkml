CHECK:LINE_SPACING: Please don't use multiple blank lines
#170: FILE: fs/notify/fanotify.h:67:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#204: FILE: fs/notify/fanotify.h:119:
+extern int fanotify_fastpath_user_create(struct fanotify_group *group);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#205: FILE: fs/notify/fanotify.h:120:
+extern int fanotify_fastpath_user_destroy(struct fanotify_group *group);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#207: FILE: fs/notify/fanotify.h:122:
+extern void fanotify_fastpath_get(struct fanotify_fastpath_entry *entry);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#208: FILE: fs/notify/fanotify.h:123:
+extern void fanotify_fastpath_put(struct fanotify_fastpath_entry *entry);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#209: FILE: fs/notify/fanotify.h:124:
+extern int is_fastpath(struct file *file, unsigned int mask, struct fanotify_group *group);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#210: FILE: fs/notify/fanotify.h:125:
+extern int fanotify_fastpath_clear(struct inode *inode);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#211: FILE: fs/notify/fanotify.h:126:
+extern int fanotify_fastpath_add(struct fanotify_group *group, int fd, unsigned int mask);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#212: FILE: fs/notify/fanotify.h:127:
+extern __init int fastpath_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#213: FILE: fs/notify/fanotify.h:128:
+extern __init int fastpath_uninit(void);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#219: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#224: FILE: fs/notify/fastpath.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#239: FILE: fs/notify/fastpath.c:16:
+ *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:TYPO_SPELLING: 'noone' may be misspelled - perhaps 'no one'?
#299: FILE: fs/notify/fastpath.c:76:
+	/* if noone is listening, might as well fastpath this group huh? */
 	      ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#305: FILE: fs/notify/fastpath.c:82:
+		/* is the entry for this group and is the entry->mask a superset of this event mask? */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'entry->group == group'
#306: FILE: fs/notify/fastpath.c:83:
+		if ((entry->group == group) && ((entry->mask & mask) == mask)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#323: FILE: fs/notify/fastpath.c:100:
+		entry = list_first_entry(&inode->fastpath_entries, struct fanotify_fastpath_entry, i_list);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:TYPO_SPELLING: 'doens't' may be misspelled - perhaps 'doesn't'?
#376: FILE: fs/notify/fastpath.c:153:
+		/* be sure that used==TRUE here so it doens't try to free */
 		                                      ^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#413: FILE: fs/notify/fastpath.c:190:
+
+

WARNING:LONG_LINE: line length of 136 exceeds 100 columns
#424: FILE: fs/notify/fastpath.c:201:
+	fastpath_kmem_cache = kmem_cache_create("fanotify_fastpath_entry", sizeof(struct fanotify_fastpath_entry), 0, SLAB_PANIC, NULL);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#434: FILE: fs/notify/fastpath_user.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#449: FILE: fs/notify/fastpath_user.c:16:
+ *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#491: FILE: fs/notify/fastpath_user.c:58:
+static ssize_t fastpath_write(struct file *file, const char __user *buf, size_t lenp, loff_t *offset)

WARNING:CONST_STRUCT: struct file_operations should normally be const
#532: FILE: fs/notify/fastpath_user.c:99:
+static struct file_operations fanotify_fastpath_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#538: FILE: fs/notify/fastpath_user.c:105:
+
+

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#546: FILE: fs/notify/fastpath_user.c:113:
+		entry = list_first_entry(&group->fastpath_entries, struct fanotify_fastpath_entry, g_list);

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#580: FILE: fs/notify/fastpath_user.c:147:
+	d_fastpath = securityfs_create_file("fastpath", S_IRUSR|S_IWUSR, parent, group, &fanotify_fastpath_fops);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#580: FILE: fs/notify/fastpath_user.c:147:
+	d_fastpath = securityfs_create_file("fastpath", S_IRUSR|S_IWUSR, parent, group, &fanotify_fastpath_fops);
 	                                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR|S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#580: FILE: fs/notify/fastpath_user.c:147:
+	d_fastpath = securityfs_create_file("fastpath", S_IRUSR|S_IWUSR, parent, group, &fanotify_fastpath_fops);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#582: FILE: fs/notify/fastpath_user.c:149:
+		printk(KERN_ERR "fanotify: failed to create fastpath file: %ld\n", PTR_ERR(d_fastpath));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#582: FILE: fs/notify/fastpath_user.c:149:
+		printk(KERN_ERR "fanotify: failed to create fastpath file: %ld\n", PTR_ERR(d_fastpath));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#646: FILE: include/linux/fanotify.h:44:
+extern void fanotify_inode_delete(struct inode *inode);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000223680.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 15 warnings, 15 checks, 582 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000223680.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
