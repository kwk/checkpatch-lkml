WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#64: FILE: drivers/power/Kconfig:32:
+config WM8350_POWER
+        tristate "WM8350 PMU support"
+        depends on MFD_WM8350
+        help
+          Say Y here to enable support for the power management unit
+	  provided by the Wolfson Microelectronics WM8350 PMIC.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#87: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#92: FILE: drivers/power/wm8350_power.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#161: FILE: drivers/power/wm8350_power.c:70:
+	 * without battery, otherwise check for wall supply */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sm == WM8350_USB_SM_100_SLV'
#162: FILE: drivers/power/wm8350_power.c:71:
+	if (((sm == WM8350_USB_SM_100_SLV) ||
+	     (sm == WM8350_USB_SM_500_SLV) ||
+	     (sm == WM8350_USB_SM_STDBY_SLV))
+	    && !(ov & WM8350_USB_LIMIT_OVRDE))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sm == WM8350_USB_SM_500_SLV'
#162: FILE: drivers/power/wm8350_power.c:71:
+	if (((sm == WM8350_USB_SM_100_SLV) ||
+	     (sm == WM8350_USB_SM_500_SLV) ||
+	     (sm == WM8350_USB_SM_STDBY_SLV))
+	    && !(ov & WM8350_USB_LIMIT_OVRDE))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sm == WM8350_USB_SM_STDBY_SLV'
#162: FILE: drivers/power/wm8350_power.c:71:
+	if (((sm == WM8350_USB_SM_100_SLV) ||
+	     (sm == WM8350_USB_SM_500_SLV) ||
+	     (sm == WM8350_USB_SM_STDBY_SLV))
+	    && !(ov & WM8350_USB_LIMIT_OVRDE))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#165: FILE: drivers/power/wm8350_power.c:74:
+	     (sm == WM8350_USB_SM_STDBY_SLV))
+	    && !(ov & WM8350_USB_LIMIT_OVRDE))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#170: FILE: drivers/power/wm8350_power.c:79:
+		  (sm == WM8350_USB_SM_STDBY_SLV))
+		 && (ov & WM8350_USB_LIMIT_OVRDE) && (chrg == 0))

CHECK:CAMELCASE: Avoid CamelCase: <fast_limit_USB_mA>
#192: FILE: drivers/power/wm8350_power.c:101:
+	if (policy->fast_limit_USB_mA > 500) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <eoc_mA>
#197: FILE: drivers/power/wm8350_power.c:106:
+	eoc_mA = WM8350_CHG_EOC_mA(policy->eoc_mA);

CHECK:CAMELCASE: Avoid CamelCase: <trickle_start_mV>
#204: FILE: drivers/power/wm8350_power.c:113:
+			 reg | eoc_mA | policy->trickle_start_mV |

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#213: FILE: drivers/power/wm8350_power.c:122:
+		wm8350_reg_write(wm8350, WM8350_BATTERY_CHARGER_CONTROL_2,
+			    policy->charge_mV | policy->trickle_charge_USB_mA |

CHECK:CAMELCASE: Avoid CamelCase: <charge_mV>
#213: FILE: drivers/power/wm8350_power.c:122:
+			    policy->charge_mV | policy->trickle_charge_USB_mA |

CHECK:CAMELCASE: Avoid CamelCase: <trickle_charge_USB_mA>
#213: FILE: drivers/power/wm8350_power.c:122:
+			    policy->charge_mV | policy->trickle_charge_USB_mA |

CHECK:CAMELCASE: Avoid CamelCase: <fast_limit_mA>
#219: FILE: drivers/power/wm8350_power.c:128:
+			WM8350_CHG_FAST_LIMIT_mA(policy->fast_limit_mA);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#221: FILE: drivers/power/wm8350_power.c:130:
+		wm8350_reg_write(wm8350, WM8350_BATTERY_CHARGER_CONTROL_2,
+			    policy->charge_mV | policy->trickle_charge_mA |

CHECK:CAMELCASE: Avoid CamelCase: <trickle_charge_mA>
#221: FILE: drivers/power/wm8350_power.c:130:
+			    policy->charge_mV | policy->trickle_charge_mA |

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#251: FILE: drivers/power/wm8350_power.c:160:
+static ssize_t charger_state_show(struct device *dev,
+				 struct device_attribute *attr, char *buf)

WARNING:DEVICE_ATTR_RO: Use DEVICE_ATTR_RO
#274: FILE: drivers/power/wm8350_power.c:183:
+}

The DEVICE_ATTR_RO(name) helper macro can be used instead of
DEVICE_ATTR(name, 0444, name_show, NULL);

Note that the macro automatically appends _show to the named
attribute variable of the device for the show method.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#323: FILE: drivers/power/wm8350_power.c:232:
+		 * no harm. */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#327: FILE: drivers/power/wm8350_power.c:236:
+	case WM8350_IRQ_EXT_BAT_FB:   /* Fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#512: FILE: drivers/power/wm8350_power.c:421:
+static __devinit int wm8350_power_probe(struct platform_device *pdev)

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#540: FILE: drivers/power/wm8350_power.c:449:
+	usb->name = "wm8350-usb",
+	usb->type = POWER_SUPPLY_TYPE_USB;

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#571: FILE: drivers/power/wm8350_power.c:480:
+static __devexit int wm8350_power_remove(struct platform_device *pdev)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#637: FILE: include/linux/mfd/wm8350/core.h:541:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#673: FILE: include/linux/mfd/wm8350/supply.h:112:
+struct wm8350_charger_policy {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000205565.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 10 warnings, 17 checks, 610 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000205565.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
