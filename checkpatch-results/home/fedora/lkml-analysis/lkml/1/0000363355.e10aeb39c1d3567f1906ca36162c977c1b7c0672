WARNING:TYPO_SPELLING: 'comparition' may be misspelled - perhaps 'comparison'?
#36: 
- Flip the comparition statement to stick to physical addresses
           ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BIT_MACRO: Prefer using the BIT macro
#103: FILE: drivers/net/cris/eth_v10.c:126:
+#define MDIO_INT_FULL_DUPLEX_IND       (1 << 9)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#104: FILE: drivers/net/cris/eth_v10.c:127:
+#define MDIO_INT_SPEED                (1 << 14)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#140: FILE: drivers/net/cris/eth_v10.c:203:
+static void e100_hardware_send_packet(struct net_local* np, char *buf, int length);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#150: FILE: drivers/net/cris/eth_v10.c:227:
+static void dummy_check_speed(struct net_device* dev);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#151: FILE: drivers/net/cris/eth_v10.c:228:
+static void dummy_check_duplex(struct net_device* dev);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#162: FILE: drivers/net/cris/eth_v10.c:240:
+static void e100_netpoll(struct net_device* dev);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#171: FILE: drivers/net/cris/eth_v10.c:249:
+#else
 	{0x1018, broadcom_check_speed, broadcom_check_duplex},  /* Broadcom */

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#180: FILE: drivers/net/cris/eth_v10.c:258:
+struct transceiver_ops* transceiver = &transceivers[0];

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#195: FILE: drivers/net/cris/eth_v10.c:281:
+		printk(KERN_CRIT "etrax_ethernet_init failed to get IO interface\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#207: FILE: drivers/net/cris/eth_v10.c:293:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#289: FILE: drivers/net/cris/eth_v10.c:517:
+	/*
+	 * Always allocate the DMA channels after the IRQ,

ERROR:CODE_INDENT: code indent should use tabs where possible
#294: FILE: drivers/net/cris/eth_v10.c:522:
+^I                     cardname,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#295: FILE: drivers/net/cris/eth_v10.c:523:
+^I                     DMA_VERBOSE_ON_ERROR,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#296: FILE: drivers/net/cris/eth_v10.c:524:
+^I                     dma_eth)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#298: FILE: drivers/net/cris/eth_v10.c:526:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: drivers/net/cris/eth_v10.c:526:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: drivers/net/cris/eth_v10.c:529:
+^I                     cardname,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#302: FILE: drivers/net/cris/eth_v10.c:530:
+^I                     DMA_VERBOSE_ON_ERROR,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#303: FILE: drivers/net/cris/eth_v10.c:531:
+^I                     dma_eth)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#305: FILE: drivers/net/cris/eth_v10.c:533:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: drivers/net/cris/eth_v10.c:533:
+        }$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#367: FILE: drivers/net/cris/eth_v10.c:636:
+dummy_check_speed(struct net_device* dev)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#469: FILE: drivers/net/cris/eth_v10.c:735:
 	switch (current_speed_selection) {
+		case 10:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#509: FILE: drivers/net/cris/eth_v10.c:773:
+	if (autoneg_normal) {
+	  data = e100_get_mdio_reg(dev, np->mii_if.phy_id, MII_BMCR);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#552: FILE: drivers/net/cris/eth_v10.c:815:
 }
+#if defined(CONFIG_ETRAX_NO_PHY)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#554: FILE: drivers/net/cris/eth_v10.c:817:
+dummy_check_duplex(struct net_device* dev)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#635: FILE: drivers/net/cris/eth_v10.c:895:
+^Ifor (np->mii_if.phy_id = 0; np->mii_if.phy_id <= 31; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#637: FILE: drivers/net/cris/eth_v10.c:897:
+^I^Iif (e100_get_mdio_reg(dev, $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#642: FILE: drivers/net/cris/eth_v10.c:901:
+	if (np->mii_if.phy_id == 32)
 		 return -ENODEV;

CHECK:CAMELCASE: Avoid CamelCase: <myFirstTxDesc>
#694: FILE: drivers/net/cris/eth_v10.c:1059:
+	while (myFirstTxDesc != myNextTxDesc) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <myNextTxDesc>
#694: FILE: drivers/net/cris/eth_v10.c:1059:
+	while (myFirstTxDesc != myNextTxDesc) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#729: FILE: drivers/net/cris/eth_v10.c:1124:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#730: FILE: drivers/net/cris/eth_v10.c:1125:
+^I * Note that both rx and tx interrupts are blocked at this point, $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#730: FILE: drivers/net/cris/eth_v10.c:1125:
+	/* 
+	 * Note that both rx and tx interrupts are blocked at this point, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#733: FILE: drivers/net/cris/eth_v10.c:1128:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#763: FILE: drivers/net/cris/eth_v10.c:1169:
+                /* Wake up queue. */$

CHECK:CAMELCASE: Avoid CamelCase: <prevRxDesc>
#810: FILE: drivers/net/cris/eth_v10.c:1224:
+	etrax_eth_descr *prevRxDesc;  /* The descriptor right before myNextRxDesc */

WARNING:LINE_SPACING: Missing a blank line after declarations
#811: FILE: drivers/net/cris/eth_v10.c:1225:
+	etrax_eth_descr *prevRxDesc;  /* The descriptor right before myNextRxDesc */
+	spin_lock(&np->led_lock);

WARNING:INDENTED_LABEL: labels should not be indented
#859: FILE: drivers/net/cris/eth_v10.c:1299:
+  update_nextrxdesc:

CHECK:CAMELCASE: Avoid CamelCase: <myNextRxDesc>
#863: FILE: drivers/net/cris/eth_v10.c:1302:
+	prevRxDesc = myNextRxDesc;

CHECK:CAMELCASE: Avoid CamelCase: <myLastRxDesc>
#875: FILE: drivers/net/cris/eth_v10.c:1312:
+		myLastRxDesc = prevRxDesc;

ERROR:CODE_INDENT: code indent should use tabs where possible
#903: FILE: drivers/net/cris/eth_v10.c:1370:
+        int old_autoneg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#903: FILE: drivers/net/cris/eth_v10.c:1370:
+        int old_autoneg;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#939: FILE: drivers/net/cris/eth_v10.c:1394:
+^I        case SET_ETH_AUTONEG:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#941: FILE: drivers/net/cris/eth_v10.c:1396:
+^I^I        autoneg_normal = *(int*)data;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#941: FILE: drivers/net/cris/eth_v10.c:1396:
+		        autoneg_normal = *(int*)data;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#948: FILE: drivers/net/cris/eth_v10.c:1402:
+			rc = generic_mii_ioctl(&np->mii_if, if_mii(ifr),
+						cmd, NULL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1000: FILE: drivers/net/cris/eth_v10.c:1420:
+^Icmd->supported &= ~(SUPPORTED_1000baseT_Half $

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_1000baseT_Half>
#1000: FILE: drivers/net/cris/eth_v10.c:1420:
+	cmd->supported &= ~(SUPPORTED_1000baseT_Half 

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_1000baseT_Full>
#1001: FILE: drivers/net/cris/eth_v10.c:1421:
+			    | SUPPORTED_1000baseT_Full);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1141: FILE: drivers/net/cris/eth_v10.c:1716:
+e100_netpoll(struct net_device* netdev)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1157: FILE: include/asm-cris/ethernet.h:18:
+#define SET_ETH_ENABLE_LEDS     SIOCDEVPRIVATE+6        /* Enable net LEDs */
                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1157: FILE: include/asm-cris/ethernet.h:18:
+#define SET_ETH_ENABLE_LEDS     SIOCDEVPRIVATE+6        /* Enable net LEDs */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1158: FILE: include/asm-cris/ethernet.h:19:
+#define SET_ETH_DISABLE_LEDS    SIOCDEVPRIVATE+7        /* Disable net LEDs */
                                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1158: FILE: include/asm-cris/ethernet.h:19:
+#define SET_ETH_DISABLE_LEDS    SIOCDEVPRIVATE+7        /* Disable net LEDs */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1159: FILE: include/asm-cris/ethernet.h:20:
+#define SET_ETH_AUTONEG         SIOCDEVPRIVATE+8
                                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1159: FILE: include/asm-cris/ethernet.h:20:
+#define SET_ETH_AUTONEG         SIOCDEVPRIVATE+8

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000363355.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 32 errors, 12 warnings, 14 checks, 1028 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000363355.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
