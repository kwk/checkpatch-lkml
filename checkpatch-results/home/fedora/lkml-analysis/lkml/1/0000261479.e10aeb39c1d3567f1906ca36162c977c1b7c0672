WARNING:TYPO_SPELLING: 'serie' may be misspelled - perhaps 'series'?
#38: 
8168 devices. Let aside the first two patches of the serie I am quite
                                                     ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'serie' may be misspelled - perhaps 'series'?
#39: 
comfortable with, it needs some seriously wider testing. The serie could
                                                             ^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#85: 
      r8169: multicast register update (sync with Realtek's 8.004.00 8168 driver)

CHECK:BIT_MACRO: Prefer using the BIT macro
#231: FILE: drivers/net/r8169.c:240:
+#define	FIX_NAK_1			(1 << 4)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#232: FILE: drivers/net/r8169.c:241:
+#define	FIX_NAK_2			(1 << 3)

CHECK:CAMELCASE: Avoid CamelCase: <Speed_down>
#245: FILE: drivers/net/r8169.c:300:
+	Speed_down	= (1 << 4),

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Beacon_en>
#256: FILE: drivers/net/r8169.c:313:
+	Beacon_en	= (1 << 0),	/* 8168 only. Reserved in the 8168b */

CHECK:CAMELCASE: Avoid CamelCase: <EnableBist>
#264: FILE: drivers/net/r8169.c:331:
+	EnableBist	= (1 << 15),	// 8168

CHECK:CAMELCASE: Avoid CamelCase: <Mac_dbgo_oe>
#265: FILE: drivers/net/r8169.c:332:
+	Mac_dbgo_oe	= (1 << 14),	// 8168

CHECK:CAMELCASE: Avoid CamelCase: <Normal_mode>
#266: FILE: drivers/net/r8169.c:333:
+	Normal_mode	= (1 << 13),	// 8168 (unused)

CHECK:CAMELCASE: Avoid CamelCase: <Force_half_dup>
#267: FILE: drivers/net/r8169.c:334:
+	Force_half_dup	= (1 << 12),	// 8168

CHECK:CAMELCASE: Avoid CamelCase: <Force_rxflow_en>
#268: FILE: drivers/net/r8169.c:335:
+	Force_rxflow_en	= (1 << 11),	// 8168

CHECK:CAMELCASE: Avoid CamelCase: <Force_txflow_en>
#269: FILE: drivers/net/r8169.c:336:
+	Force_txflow_en	= (1 << 10),	// 8168

CHECK:CAMELCASE: Avoid CamelCase: <Cxpl_dbg_sel>
#270: FILE: drivers/net/r8169.c:337:
+	Cxpl_dbg_sel	= (1 << 9),	// 8168c

CHECK:CAMELCASE: Avoid CamelCase: <Mac_dbgo_sel>
#273: FILE: drivers/net/r8169.c:340:
+	Mac_dbgo_sel	= 0x001c,	// 8168

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#318: FILE: drivers/net/r8169.c:546:
+		udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#334: FILE: drivers/net/r8169.c:562:
+		udelay(10);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#351: FILE: drivers/net/r8169.c:579:
+		udelay(10);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#368: FILE: drivers/net/r8169.c:596:
+		udelay(10);

CHECK:CAMELCASE: Avoid CamelCase: <RxVlanTag>
#386: FILE: drivers/net/r8169.c:945:
+	if (vlgrp && (opts2 & RxVlanTag)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#386: FILE: drivers/net/r8169.c:945:
+	if (vlgrp && (opts2 & RxVlanTag)) {
[...]
 	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#605: FILE: drivers/net/r8169.c:2303:
+/*
+ * Taken from Realtek's 8168 driver.

CHECK:CAMELCASE: Avoid CamelCase: <CPlusCmd>
#614: FILE: drivers/net/r8169.c:2312:
+	RTL_W16(CPlusCmd, RTL_R16(CPlusCmd) & ~(EnableBist | Mac_dbgo_oe |

CHECK:CAMELCASE: Avoid CamelCase: <PktCntrDisable>
#616: FILE: drivers/net/r8169.c:2314:
+		Cxpl_dbg_sel | ASF | PktCntrDisable | Mac_dbgo_sel));

CHECK:CAMELCASE: Avoid CamelCase: <Config3>
#647: FILE: drivers/net/r8169.c:2345:
+	RTL_W8(Config3, RTL_R8(Config3) & ~Beacon_en);

CHECK:CAMELCASE: Avoid CamelCase: <EarlyTxThres>
#658: FILE: drivers/net/r8169.c:2356:
+	RTL_W8(EarlyTxThres, EarlyTxThld);

CHECK:CAMELCASE: Avoid CamelCase: <EarlyTxThld>
#658: FILE: drivers/net/r8169.c:2356:
+	RTL_W8(EarlyTxThres, EarlyTxThld);

CHECK:CAMELCASE: Avoid CamelCase: <Config4>
#660: FILE: drivers/net/r8169.c:2358:
+	RTL_W8(Config4, RTL_R8(Config4) & ~(1 << 0));

CHECK:CAMELCASE: Avoid CamelCase: <Config1>
#665: FILE: drivers/net/r8169.c:2363:
+	RTL_W8(Config1, RTL_R8(Config1) | Speed_down);

CHECK:CAMELCASE: Avoid CamelCase: <TxConfig>
#782: FILE: drivers/net/r8169.c:2473:
+	RTL_W32(TxConfig, (TX_DMA_BURST << TxDMAShift) |

CHECK:CAMELCASE: Avoid CamelCase: <TxDMAShift>
#782: FILE: drivers/net/r8169.c:2473:
+	RTL_W32(TxConfig, (TX_DMA_BURST << TxDMAShift) |

CHECK:CAMELCASE: Avoid CamelCase: <InterFrameGap>
#783: FILE: drivers/net/r8169.c:2474:
+		(InterFrameGap << TxInterFrameGapShift));

CHECK:CAMELCASE: Avoid CamelCase: <TxInterFrameGapShift>
#783: FILE: drivers/net/r8169.c:2474:
+		(InterFrameGap << TxInterFrameGapShift));

CHECK:CAMELCASE: Avoid CamelCase: <IntrMask>
#788: FILE: drivers/net/r8169.c:2478:
+	RTL_R8(IntrMask);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#825: FILE: drivers/net/r8169.c:2515:
+		printk(KERN_ERR PFX "%s: unknown chipset (mac_version = %d).\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#826: FILE: drivers/net/r8169.c:2516:
+		printk(KERN_ERR PFX "%s: unknown chipset (mac_version = %d).\n",
+			dev->name, tp->mac_version);

CHECK:CAMELCASE: Avoid CamelCase: <Cfg9346>
#832: FILE: drivers/net/r8169.c:2522:
+	RTL_W8(Cfg9346, Cfg9346_Lock);

CHECK:CAMELCASE: Avoid CamelCase: <Cfg9346_Lock>
#832: FILE: drivers/net/r8169.c:2522:
+	RTL_W8(Cfg9346, Cfg9346_Lock);

CHECK:CAMELCASE: Avoid CamelCase: <IntrStatus>
#895: FILE: drivers/net/r8169.c:3264:
+	status = RTL_R16(IntrStatus);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'status == 0xffff'
#901: FILE: drivers/net/r8169.c:3267:
+	if ((status == 0xffff) || !status)

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:CAMELCASE: Avoid CamelCase: <RxFIFOOver>
#921: FILE: drivers/net/r8169.c:3279:
+		(status & RxFIFOOver) ? (status | RxOverflow) : status);

CHECK:CAMELCASE: Avoid CamelCase: <RxOverflow>
#921: FILE: drivers/net/r8169.c:3279:
+		(status & RxFIFOOver) ? (status | RxOverflow) : status);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tp->mac_version == RTL_GIGA_MAC_VER_11'
#936: FILE: drivers/net/r8169.c:3285:
+	if (unlikely(status & RxFIFOOver) &&
+	    (tp->mac_version == RTL_GIGA_MAC_VER_11)) {

CHECK:CAMELCASE: Avoid CamelCase: <SYSErr>
#947: FILE: drivers/net/r8169.c:3292:
+	if (unlikely(status & SYSErr)) {

CHECK:CAMELCASE: Avoid CamelCase: <LinkChg>
#954: FILE: drivers/net/r8169.c:3297:
+	if (status & LinkChg)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#991: FILE: drivers/net/r8169.c:3307:
+			printk(KERN_INFO "%s: interrupt %04x in poll\n",

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000261479.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 40 checks, 894 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000261479.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
