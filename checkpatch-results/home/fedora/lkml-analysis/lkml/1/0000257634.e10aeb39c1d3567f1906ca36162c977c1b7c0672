WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#98: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#103: FILE: arch/microblaze/kernel/sys_microblaze.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/uaccess.h> instead of <asm/uaccess.h>
#135: FILE: arch/microblaze/kernel/sys_microblaze.c:33:
+#include <asm/uaccess.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#165: FILE: arch/microblaze/kernel/sys_microblaze.c:63:
+		if ((ret = access_ok(VERIFY_READ, ptr,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#166: FILE: arch/microblaze/kernel/sys_microblaze.c:64:
+		if ((ret = access_ok(VERIFY_READ, ptr,
+					sizeof(long)) ? 0 : -EFAULT)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#167: FILE: arch/microblaze/kernel/sys_microblaze.c:65:
+					sizeof(long)) ? 0 : -EFAULT)
+			|| (ret = get_user(fourth.__pad, (void **)ptr)))

CHECK:SPACING: No space is necessary after a cast
#173: FILE: arch/microblaze/kernel/sys_microblaze.c:71:
+		ret = sys_msgsnd(first, (struct msgbuf *) ptr, second, third);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#182: FILE: arch/microblaze/kernel/sys_microblaze.c:80:
+			if ((ret = access_ok(VERIFY_READ, ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#183: FILE: arch/microblaze/kernel/sys_microblaze.c:81:
+			if ((ret = access_ok(VERIFY_READ, ptr,
+					sizeof(tmp)) ? 0 : -EFAULT)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#184: FILE: arch/microblaze/kernel/sys_microblaze.c:82:
+					sizeof(tmp)) ? 0 : -EFAULT)
+				|| (ret = copy_from_user(&tmp,

CHECK:SPACING: No space is necessary after a cast
#185: FILE: arch/microblaze/kernel/sys_microblaze.c:83:
+						(struct ipc_kludge *) ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#189: FILE: arch/microblaze/kernel/sys_microblaze.c:87:
+			ret = sys_msgrcv(first, tmp.msgp, second, tmp.msgtyp,
+					third);

CHECK:SPACING: No space is necessary after a cast
#193: FILE: arch/microblaze/kernel/sys_microblaze.c:91:
+			ret = sys_msgrcv(first, (struct msgbuf *) ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#194: FILE: arch/microblaze/kernel/sys_microblaze.c:92:
+			ret = sys_msgrcv(first, (struct msgbuf *) ptr,
+					second, fifth, third);

CHECK:SPACING: No space is necessary after a cast
#199: FILE: arch/microblaze/kernel/sys_microblaze.c:97:
+		ret = sys_msgget((key_t) first, second);

CHECK:SPACING: No space is necessary after a cast
#202: FILE: arch/microblaze/kernel/sys_microblaze.c:100:
+		ret = sys_msgctl(first, second, (struct msqid_ds *) ptr);

CHECK:SPACING: No space is necessary after a cast
#209: FILE: arch/microblaze/kernel/sys_microblaze.c:107:
+			if ((ret = access_ok(VERIFY_WRITE, (ulong *) third,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#209: FILE: arch/microblaze/kernel/sys_microblaze.c:107:
+			if ((ret = access_ok(VERIFY_WRITE, (ulong *) third,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#210: FILE: arch/microblaze/kernel/sys_microblaze.c:108:
+			if ((ret = access_ok(VERIFY_WRITE, (ulong *) third,
+					sizeof(ulong)) ? 0 : -EFAULT))

CHECK:SPACING: No space is necessary after a cast
#212: FILE: arch/microblaze/kernel/sys_microblaze.c:110:
+			ret = do_shmat(first, (char *) ptr, second, &raddr);

CHECK:SPACING: No space is necessary after a cast
#215: FILE: arch/microblaze/kernel/sys_microblaze.c:113:
+			ret = put_user(raddr, (ulong *) third);

CHECK:SPACING: No space is necessary after a cast
#221: FILE: arch/microblaze/kernel/sys_microblaze.c:119:
+			ret = do_shmat(first, (char *) ptr, second,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#222: FILE: arch/microblaze/kernel/sys_microblaze.c:120:
+			ret = do_shmat(first, (char *) ptr, second,
+					(ulong *) third);

CHECK:SPACING: No space is necessary after a cast
#222: FILE: arch/microblaze/kernel/sys_microblaze.c:120:
+					(ulong *) third);

CHECK:SPACING: No space is necessary after a cast
#233: FILE: arch/microblaze/kernel/sys_microblaze.c:131:
+		ret = sys_shmctl(first, second, (struct shmid_ds *) ptr);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#262: FILE: arch/microblaze/kernel/sys_microblaze.c:160:
+	asm volatile ("addk	r5, r0, %0	\n\t"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#263: FILE: arch/microblaze/kernel/sys_microblaze.c:161:
+			"addk	r6, r0, %1	\n\t"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#265: FILE: arch/microblaze/kernel/sys_microblaze.c:163:
+			"brlid	r15, memmove	\n\t"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#266: FILE: arch/microblaze/kernel/sys_microblaze.c:164:
+			"addik	r7, r0, %2	\n\t"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#267: FILE: arch/microblaze/kernel/sys_microblaze.c:165:
+			"brid	ret_to_user	\n\t"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#269: FILE: arch/microblaze/kernel/sys_microblaze.c:167:
+			"addk	r1, r0, r3	\n\t"

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#295: FILE: arch/microblaze/kernel/sys_microblaze.c:193:
+asmlinkage int sys_execve(char __user *filenamei, char __user * __user *argv,
+			char __user * __user *envp, struct pt_regs *regs)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#312: FILE: arch/microblaze/kernel/sys_microblaze.c:210:
+do_mmap2(unsigned long addr, size_t len,
+	unsigned long prot, unsigned long flags,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#320: FILE: arch/microblaze/kernel/sys_microblaze.c:218:
+		if (!(file = fget(fd))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#321: FILE: arch/microblaze/kernel/sys_microblaze.c:219:
+			printk(KERN_INFO "no fd in mmap\r\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#342: FILE: arch/microblaze/kernel/sys_microblaze.c:240:
+unsigned long sys_mmap(unsigned long addr, size_t len,
+			unsigned long prot, unsigned long flags,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#348: FILE: arch/microblaze/kernel/sys_microblaze.c:246:
+		printk(KERN_INFO "no pagemask in mmap\r\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000257634.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 10 warnings, 23 checks, 272 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000257634.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
