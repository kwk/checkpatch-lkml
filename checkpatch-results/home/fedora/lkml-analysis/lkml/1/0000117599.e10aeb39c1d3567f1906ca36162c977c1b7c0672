WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#68: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#73: FILE: kernel/trace/trace_test.c:1:
+#include "trace_stat.h"

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#81: FILE: kernel/trace/trace_test.c:9:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#88: FILE: kernel/trace/trace_test.c:16:
+
+

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#91: FILE: kernel/trace/trace_test.c:19:
+	seq_printf(s, "# Function       hit\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#98: FILE: kernel/trace/trace_test.c:26:
+	struct stat_example *stat = p;
+	seq_printf(s, "%s         %d\n", stat->func, stat->hit);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#103: FILE: kernel/trace/trace_test.c:31:
+static struct tracer_stat sample_stat_tracer ={
                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#112: FILE: kernel/trace/trace_test.c:40:
+
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#120: FILE: kernel/trace/trace_test.c:48:
+	if (!stat) {
+		return;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pf' - use %ps instead
#122: FILE: kernel/trace/trace_test.c:50:
+	}
+	if (is_first)
+		sprintf(stat->func, "%pf", work->func);

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pf' - use %ps instead
#123: FILE: kernel/trace/trace_test.c:51:
+	if (is_first)
+		sprintf(stat->func, "%pf", work->func);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#137: FILE: kernel/trace/trace_test.c:65:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#144: FILE: kernel/trace/trace_test.c:72:
+	while (!kthread_should_stop()) {
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#168: FILE: kernel/trace/trace_test.c:96:
+
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#175: FILE: kernel/trace/trace_test.c:103:
+		printk("Can't rengister sample stat tracer: %d", ret);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000117599.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 8 warnings, 6 checks, 115 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000117599.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
