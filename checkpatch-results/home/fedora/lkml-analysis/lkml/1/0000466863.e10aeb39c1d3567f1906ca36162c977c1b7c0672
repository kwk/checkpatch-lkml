WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#64: FILE: drivers/xen/core/grant_table.c:1:
+/******************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/pgtable.h> instead of <asm/pgtable.h>
#105: FILE: drivers/xen/core/grant_table.c:42:
+#include <asm/pgtable.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#106: FILE: drivers/xen/core/grant_table.c:43:
+#include <asm/uaccess.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#109: FILE: drivers/xen/core/grant_table.c:46:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#131: FILE: drivers/xen/core/grant_table.c:68:
+	grant_ref_t head;
+	spin_lock_irqsave(&gnttab_list_lock, flags);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#136: FILE: drivers/xen/core/grant_table.c:73:
+	ref = head = gnttab_free_head;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "callback"
#155: FILE: drivers/xen/core/grant_table.c:92:
+	while (callback != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#177: FILE: drivers/xen/core/grant_table.c:114:
+	unsigned long flags;
+	spin_lock_irqsave(&gnttab_list_lock, flags);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#194: FILE: drivers/xen/core/grant_table.c:131:
+	if (unlikely((ref = get_free_entry()) == -1))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:MEMORY_BARRIER: memory barrier without comment
#199: FILE: drivers/xen/core/grant_table.c:136:
+	wmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#211: FILE: drivers/xen/core/grant_table.c:148:
+	wmb();

CHECK:LINE_SPACING: Please don't use multiple blank lines
#216: FILE: drivers/xen/core/grant_table.c:153:
+
+

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#223: FILE: drivers/xen/core/grant_table.c:160:
+	return (nflags & (GTF_reading|GTF_writing));
 	                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#233: FILE: drivers/xen/core/grant_table.c:170:
+		if ((flags = nflags) & (GTF_reading|GTF_writing)) {
 		                                   ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#233: FILE: drivers/xen/core/grant_table.c:170:
+		if ((flags = nflags) & (GTF_reading|GTF_writing)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#234: FILE: drivers/xen/core/grant_table.c:171:
+			printk(KERN_ALERT "WARNING: g.e. still in use!\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#253: FILE: drivers/xen/core/grant_table.c:190:
+		/* XXX This needs to be fixed so that the ref and page are
+		   placed on a list to be freed up later. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#253: FILE: drivers/xen/core/grant_table.c:190:
+		   placed on a list to be freed up later. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#254: FILE: drivers/xen/core/grant_table.c:191:
+		printk(KERN_WARNING

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#264: FILE: drivers/xen/core/grant_table.c:201:
+	if (unlikely((ref = get_free_entry()) == -1))

WARNING:MEMORY_BARRIER: memory barrier without comment
#277: FILE: drivers/xen/core/grant_table.c:214:
+	wmb();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#306: FILE: drivers/xen/core/grant_table.c:243:
+	BUG_ON(frame == 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LINE_SPACING: Missing a blank line after declarations
#315: FILE: drivers/xen/core/grant_table.c:252:
+	unsigned long frame = gnttab_end_foreign_transfer_ref(ref);
+	put_free_entry(ref);

WARNING:LINE_SPACING: Missing a blank line after declarations
#331: FILE: drivers/xen/core/grant_table.c:268:
+	int count = 1;
+	if (head == GNTTAB_LIST_END)

WARNING:LINE_SPACING: Missing a blank line after declarations
#369: FILE: drivers/xen/core/grant_table.c:306:
+	grant_ref_t g = *private_head;
+	if (unlikely(g == GNTTAB_LIST_END))

WARNING:LINE_SPACING: Missing a blank line after declarations
#388: FILE: drivers/xen/core/grant_table.c:325:
+	unsigned long flags;
+	spin_lock_irqsave(&gnttab_list_lock, flags);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#432: FILE: drivers/xen/core/grant_table.c:369:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#449: FILE: drivers/xen/core/grant_table.c:386:
+	if (rc == -ENOSYS)

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#450: FILE: drivers/xen/core/grant_table.c:387:
+		return -ENOSYS;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#452: FILE: drivers/xen/core/grant_table.c:389:
+	BUG_ON(rc || setup.status);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!shared"
#459: FILE: drivers/xen/core/grant_table.c:396:
+		if (shared == NULL) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#462: FILE: drivers/xen/core/grant_table.c:399:
+			BUG_ON(area == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!area"
#462: FILE: drivers/xen/core/grant_table.c:399:
+			BUG_ON(area == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#468: FILE: drivers/xen/core/grant_table.c:405:
+		BUG_ON(rc);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#472: FILE: drivers/xen/core/grant_table.c:409:
+	printk("grant table at %p\n", shared);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#480: FILE: drivers/xen/core/grant_table.c:417:
+{
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#505: FILE: drivers/xen/core/grant_table.c:442:
+	printk("Grant table initialized\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#514: FILE: include/xen/grant_table.h:1:
+/******************************************************************************

ERROR:TRAILING_WHITESPACE: trailing whitespace
#516: FILE: include/xen/grant_table.h:3:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#521: FILE: include/xen/grant_table.h:8:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#524: FILE: include/xen/grant_table.h:11:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#530: FILE: include/xen/grant_table.h:17:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#537: FILE: include/xen/grant_table.h:24:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#540: FILE: include/xen/grant_table.h:27:
+ * $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#561: FILE: include/xen/grant_table.h:48:
+	void (*fn)(void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'grant_ref_t' should also have an identifier name
#615: FILE: include/xen/grant_table.h:102:
+void gnttab_grant_foreign_transfer_ref(grant_ref_t, domid_t domid,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000466863.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 27 warnings, 10 checks, 556 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000466863.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
