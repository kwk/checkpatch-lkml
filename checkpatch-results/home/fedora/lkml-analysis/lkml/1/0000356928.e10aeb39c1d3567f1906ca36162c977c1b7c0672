WARNING:SPACING: Unnecessary space before function pointer arguments
#98: FILE: arch/s390/kernel/ipl.c:67:
+	void (*fn) (struct shutdown_trigger *trigger);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#99: FILE: arch/s390/kernel/ipl.c:68:
+	int (*init) (void);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ipl_init', this function's name, in a string
#266: FILE: arch/s390/kernel/ipl.c:464:
+		panic("ipl_init failed: rc = %i\n", rc);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:SPACING: No space is necessary after a cast
#455: FILE: arch/s390/kernel/ipl.c:701:
+	buffer = (void *) get_zeroed_page(GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#675: FILE: arch/s390/kernel/ipl.c:940:
+	printk(KERN_EMERG "Dump failed!\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cmd"
#768: FILE: arch/s390/kernel/ipl.c:1066:
+	} while (cmd != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#777: FILE: arch/s390/kernel/ipl.c:1074:
+		return -ENOTSUPP;

ENOTSUPP is not a standard error code and should be avoided in new patches.
EOPNOTSUPP should be used instead.

See: https://lore.kernel.org/netdev/20200510182252.GA411829@lunn.ch/

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#798: FILE: arch/s390/kernel/ipl.c:1091:
+	for (;;);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#862: FILE: arch/s390/kernel/ipl.c:1150:
+}
+void (*_machine_restart)(char *command) = do_machine_restart;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#906: FILE: arch/s390/kernel/ipl.c:1193:
 
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#913: FILE: arch/s390/kernel/ipl.c:1200:
+}
+void (*_machine_halt)(void) = do_machine_halt;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#932: FILE: arch/s390/kernel/ipl.c:1219:
+
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#939: FILE: arch/s390/kernel/ipl.c:1226:
+}
+void (*_machine_power_off)(void) = do_machine_power_off;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'shutdown_triggers_init', this function's name, in a string
#956: FILE: arch/s390/kernel/ipl.c:1243:
+	panic("shutdown_triggers_init failed\n");

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#1016: FILE: arch/s390/kernel/ipl.c:1291:
+__setup("vmreboot=", vmcmd_on_reboot_setup);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#1027: FILE: arch/s390/kernel/ipl.c:1302:
+__setup("vmpanic=", vmcmd_on_panic_setup);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#1038: FILE: arch/s390/kernel/ipl.c:1313:
+__setup("vmhalt=", vmcmd_on_halt_setup);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#1049: FILE: arch/s390/kernel/ipl.c:1324:
+__setup("vmpoff=", vmcmd_on_poff_setup);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1270: FILE: include/asm-s390/ipl.h:86:
+extern void do_halt(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1271: FILE: include/asm-s390/ipl.h:87:
+extern void do_poff(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1280: FILE: include/asm-s390/ipl.h:123:
+extern void setup_ipl(void);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000356928.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 6 warnings, 14 checks, 1202 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000356928.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
