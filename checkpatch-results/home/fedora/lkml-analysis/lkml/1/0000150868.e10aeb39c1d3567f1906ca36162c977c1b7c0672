ERROR:CODE_INDENT: code indent should use tabs where possible
#59: FILE: kerneltop.c:104:
+        struct timespec ts;                             \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: kerneltop.c:104:
+        struct timespec ts;                             \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#60: FILE: kerneltop.c:105:
+                                                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: kerneltop.c:105:
+                                                        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#61: FILE: kerneltop.c:106:
+        clock_gettime(CLOCK_MONOTONIC, &ts);            \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: kerneltop.c:106:
+        clock_gettime(CLOCK_MONOTONIC, &ts);            \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#62: FILE: kerneltop.c:107:
+        ts.tv_sec * 1000000000ULL + ts.tv_nsec;         \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#62: FILE: kerneltop.c:107:
+        ts.tv_sec * 1000000000ULL + ts.tv_nsec;         \$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#75: FILE: kerneltop.c:120:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#80: FILE: kerneltop.c:125:
+#ifdef __i386__

Architecture specific defines should be avoided wherever
possible.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#88: FILE: kerneltop.c:133:
+asmlinkage int sys_perf_counter_open(

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: kerneltop.c:134:
+        struct perf_counter_hw_event    *hw_event_uptr          __user,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: kerneltop.c:134:
+        struct perf_counter_hw_event    *hw_event_uptr          __user,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: kerneltop.c:135:
+        pid_t                           pid,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: kerneltop.c:135:
+        pid_t                           pid,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#91: FILE: kerneltop.c:136:
+        int                             cpu,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: kerneltop.c:136:
+        int                             cpu,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#92: FILE: kerneltop.c:137:
+        int                             group_fd,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: kerneltop.c:137:
+        int                             group_fd,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#93: FILE: kerneltop.c:138:
+        unsigned long                   flags)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: kerneltop.c:138:
+        unsigned long                   flags)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#95: FILE: kerneltop.c:140:
+        int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: kerneltop.c:140:
+        int ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: kerneltop.c:142:
+        ret = syscall($

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: kerneltop.c:142:
+        ret = syscall($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#97: FILE: kerneltop.c:142:
+        ret = syscall(

ERROR:CODE_INDENT: code indent should use tabs where possible
#98: FILE: kerneltop.c:143:
+                __NR_perf_counter_open, hw_event_uptr, pid, cpu, group_fd, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: kerneltop.c:143:
+                __NR_perf_counter_open, hw_event_uptr, pid, cpu, group_fd, flags);$

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#99: FILE: kerneltop.c:144:
+#if defined(__x86_64__) || defined(__i386__)

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: kerneltop.c:145:
+        if (ret < 0 && ret > -4096) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: kerneltop.c:145:
+        if (ret < 0 && ret > -4096) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: kerneltop.c:146:
+                errno = -ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: kerneltop.c:146:
+                errno = -ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: kerneltop.c:147:
+                ret = -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: kerneltop.c:147:
+                ret = -1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: kerneltop.c:148:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: kerneltop.c:148:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: kerneltop.c:150:
+        return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: kerneltop.c:150:
+        return ret;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#131: FILE: kerneltop.c:173:
+};
+static int			default_interval = 100000;

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'config' may be better as '(config)' to avoid precedence issues
#190: FILE: kerneltop.c:261:
+#define __PERF_COUNTER_FIELD(config, name) \
+	((config & PERF_COUNTER_##name##_MASK) >> PERF_COUNTER_##name##_SHIFT)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#222: FILE: kerneltop.c:285:
+		printf("\n                             %d:%d: %-20s",
+				type, id, event_symbols[i].symbol);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#370: FILE: kerneltop.c:1067:
+		case 'c': default_interval		=   atoi(optarg); break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#397: FILE: kerneltop.c:1156:
+			printf("FOO: %d %llx %llx\n", counter, event_id[counter], event_count[counter]);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000150868.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 18 errors, 18 warnings, 8 checks, 352 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000150868.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
