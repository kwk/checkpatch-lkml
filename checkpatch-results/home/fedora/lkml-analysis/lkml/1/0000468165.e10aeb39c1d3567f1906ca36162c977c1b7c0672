WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
-#define VM_PURE_PRIVATE	0x04000000	/* Is the vma is only belonging to a mm,

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#135: FILE: mm/vmscan.c:1107:
+static int accelerate_kppsd = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#147: FILE: mm/vmscan.c:1124:
+static int get_series_stage(struct series_t* series, pte_t* pte, int index)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#147: FILE: mm/vmscan.c:1124:
+static int get_series_stage(struct series_t* series, pte_t* pte, int index)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#156: FILE: mm/vmscan.c:1128:
+	struct page* page = pfn_to_page(pte_pfn(series->orig_ptes[index]));

WARNING:LINE_SPACING: Missing a blank line after declarations
#157: FILE: mm/vmscan.c:1129:
+	struct page* page = pfn_to_page(pte_pfn(series->orig_ptes[index]));
+	series->pages[index] = page;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#178: FILE: mm/vmscan.c:1150:
+static void find_series(struct series_t* series, pte_t** start, unsigned long*

ERROR:POINTER_LOCATION: "foo** bar" should be "foo **bar"
#178: FILE: mm/vmscan.c:1150:
+static void find_series(struct series_t* series, pte_t** start, unsigned long*

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#206: FILE: mm/vmscan.c:1287:
+static unsigned long shrink_pvma_scan_ptes(struct scan_control* sc, struct

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#207: FILE: mm/vmscan.c:1288:
+		mm_struct* mm, struct vm_area_struct* vma, pmd_t* pmd, unsigned

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#207: FILE: mm/vmscan.c:1288:
+		mm_struct* mm, struct vm_area_struct* vma, pmd_t* pmd, unsigned

CHECK:SPACING: spaces preferred around that '*' (ctx:VxW)
#207: FILE: mm/vmscan.c:1288:
+		mm_struct* mm, struct vm_area_struct* vma, pmd_t* pmd, unsigned
 		         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#246: FILE: mm/vmscan.c:1319:
+			pte_t pte_new = series.orig_ptes[i];
+			pte_new = pte_mkold(pte_mkclean(series.orig_ptes[i]));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#248: FILE: mm/vmscan.c:1321:
+			if (cmpxchg(&series.ptes[i]->pte_low,
+						series.orig_ptes[i].pte_low,

WARNING:LINE_SPACING: Missing a blank line after declarations
#285: FILE: mm/vmscan.c:1350:
+			pte_t pte_unmapped = series.orig_ptes[i];
+			pte_unmapped.pte_low &= ~_PAGE_PRESENT;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#288: FILE: mm/vmscan.c:1353:
+			if (cmpxchg(&series.ptes[i]->pte_low,
+						series.orig_ptes[i].pte_low,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#343: FILE: mm/vmscan.c:1400:
+			struct page* page = series.pages[i];

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#438: FILE: mm/vmscan.c:1484:
+static unsigned long shrink_pvma_pmd_range(struct scan_control* sc, struct

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#439: FILE: mm/vmscan.c:1485:
+		mm_struct* mm, struct vm_area_struct* vma, pud_t* pud, unsigned

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#439: FILE: mm/vmscan.c:1485:
+		mm_struct* mm, struct vm_area_struct* vma, pud_t* pud, unsigned

CHECK:SPACING: spaces preferred around that '*' (ctx:VxW)
#439: FILE: mm/vmscan.c:1485:
+		mm_struct* mm, struct vm_area_struct* vma, pud_t* pud, unsigned
 		         ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#458: FILE: mm/vmscan.c:1500:
+static unsigned long shrink_pvma_pud_range(struct scan_control* sc, struct

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#459: FILE: mm/vmscan.c:1501:
+		mm_struct* mm, struct vm_area_struct* vma, pgd_t* pgd, unsigned

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#459: FILE: mm/vmscan.c:1501:
+		mm_struct* mm, struct vm_area_struct* vma, pgd_t* pgd, unsigned

CHECK:SPACING: spaces preferred around that '*' (ctx:VxW)
#459: FILE: mm/vmscan.c:1501:
+		mm_struct* mm, struct vm_area_struct* vma, pgd_t* pgd, unsigned
 		         ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#477: FILE: mm/vmscan.c:1516:
+static unsigned long shrink_pvma_pgd_range(struct scan_control* sc, struct

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#478: FILE: mm/vmscan.c:1517:
+		mm_struct* mm, struct vm_area_struct* vma)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxW)
#478: FILE: mm/vmscan.c:1517:
+		mm_struct* mm, struct vm_area_struct* vma)
 		         ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#496: FILE: mm/vmscan.c:1533:
+static unsigned long shrink_private_vma(struct scan_control* sc)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#578: FILE: mm/vmscan.c:2222:
+		wait_event_timeout(kppsd_wait, accelerate_kppsd != 0,
+				msecs_to_jiffies(2000));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000468165.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 19 errors, 4 warnings, 7 checks, 503 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000468165.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
