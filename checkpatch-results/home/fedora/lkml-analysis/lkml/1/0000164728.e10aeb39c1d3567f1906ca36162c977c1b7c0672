WARNING:TYPO_SPELLING: 'formating' may be misspelled - perhaps 'formatting'?
#33: 
Add ABI Documentation entry and fix some /sys directory formating
                                                        ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'specificed' may be misspelled - perhaps 'specified'?
#59: FILE: Documentation/ABI/testing/sysfs-devices-cache_disable:10:
+		 files will cause the specificed cache index to be disabled.
 		                      ^^^^^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'boot_cpu_data.x86 == 0x10'
#103: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:283:
+	if ((boot_cpu_data.x86 == 0x10) && (boot_cpu_data.x86_model < 0x15))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'boot_cpu_data.x86_model < 0x15'
#103: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:283:
+	if ((boot_cpu_data.x86 == 0x10) && (boot_cpu_data.x86_model < 0x15))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:622:
+static ssize_t show_cache_disable(struct _cpuid4_info *this_leaf, char *buf,
+		 unsigned int index)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#129: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:637:
+show_cache_disable_##index(struct _cpuid4_info *this_leaf, char *buf)  ^I\$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#136: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:644:
+store_cache_disable(struct _cpuid4_info *this_leaf, const char *buf,
+		 size_t count, unsigned int index)

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#148: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:656:
+	if (strict_strtoul(buf, 10, &val) < 0)

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#160: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:668:
+store_cache_disable_##index(struct _cpuid4_info *this_leaf,^I     ^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#161: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:669:
+^I^I const char *buf, size_t count)^I^I^I     ^I\$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000164728.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 4 checks, 234 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000164728.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
