WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
Added an API and associated supporting routines for multiqueue network devices.

WARNING:TYPO_SPELLING: 'independantly' may be misspelled - perhaps 'independently'?
#29: 
queue within the netdevice and manage each queue independantly.  Changes to the
                                                 ^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#56: FILE: include/linux/etherdevice.h:42:
+extern struct net_device *alloc_etherdev_mq(int sizeof_priv, int queue_count);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#70: FILE: include/linux/netdevice.h:110:
+struct net_device_subqueue
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#95: FILE: include/linux/netdevice.h:549:
+	struct net_device_stats* (*get_subqueue_stats)(struct net_device *dev,
+							int queue_index);

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: include/linux/netdevice.h:716:
+                                         u16 queue_index)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: include/linux/netdevice.h:716:
+                                         u16 queue_index)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: include/linux/netdevice.h:719:
+^I                &dev->egress_subqueue[queue_index].state);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: include/linux/netdevice.h:729:
+^I                       &dev->egress_subqueue[queue_index].state))$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#158: FILE: include/linux/netdevice.h:1030:
+extern struct net_device *alloc_netdev_mq(int sizeof_priv, const char *name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#209: FILE: net/core/dev.c:3306:
+struct net_device *alloc_netdev_mq(int sizeof_priv, const char *name,
+		void (*setup)(struct net_device *), int queue_count)

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: net/core/dev.c:3331:
+ ^Ialloc_size = (sizeof(struct net_device_subqueue) * queue_count);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#217: FILE: net/core/dev.c:3331:
+ ^Ialloc_size = (sizeof(struct net_device_subqueue) * queue_count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: net/core/dev.c:3331:
+ ^Ialloc_size = (sizeof(struct net_device_subqueue) * queue_count);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#218: FILE: net/core/dev.c:3332:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: net/core/dev.c:3332:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: net/core/dev.c:3333:
+ ^Ip = kzalloc(alloc_size, GFP_KERNEL);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#219: FILE: net/core/dev.c:3333:
+ ^Ip = kzalloc(alloc_size, GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: net/core/dev.c:3333:
+ ^Ip = kzalloc(alloc_size, GFP_KERNEL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: net/core/dev.c:3334:
+ ^Iif (!p) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#220: FILE: net/core/dev.c:3334:
+ ^Iif (!p) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: net/core/dev.c:3334:
+ ^Iif (!p) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: net/core/dev.c:3335:
+ ^I^Iprintk(KERN_ERR "alloc_netdev: Unable to allocate queues.\n");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#221: FILE: net/core/dev.c:3335:
+ ^I^Iprintk(KERN_ERR "alloc_netdev: Unable to allocate queues.\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: net/core/dev.c:3335:
+ ^I^Iprintk(KERN_ERR "alloc_netdev: Unable to allocate queues.\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#221: FILE: net/core/dev.c:3335:
+ 		printk(KERN_ERR "alloc_netdev: Unable to allocate queues.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'alloc_netdev', this function's name, in a string
#221: FILE: net/core/dev.c:3335:
+ 		printk(KERN_ERR "alloc_netdev: Unable to allocate queues.\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#221: FILE: net/core/dev.c:3335:
+ 	if (!p) {
+ 		printk(KERN_ERR "alloc_netdev: Unable to allocate queues.\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: net/core/dev.c:3336:
+ ^I^Ireturn NULL;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#222: FILE: net/core/dev.c:3336:
+ ^I^Ireturn NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: net/core/dev.c:3336:
+ ^I^Ireturn NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: net/core/dev.c:3337:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#223: FILE: net/core/dev.c:3337:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: net/core/dev.c:3337:
+ ^I}$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#224: FILE: net/core/dev.c:3338:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: net/core/dev.c:3338:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: net/core/dev.c:3339:
+ ^Idev->egress_subqueue = p;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#225: FILE: net/core/dev.c:3339:
+ ^Idev->egress_subqueue = p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: net/core/dev.c:3339:
+ ^Idev->egress_subqueue = p;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: net/core/dev.c:3340:
+ ^Idev->egress_subqueue_count = queue_count;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#226: FILE: net/core/dev.c:3340:
+ ^Idev->egress_subqueue_count = queue_count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: net/core/dev.c:3340:
+ ^Idev->egress_subqueue_count = queue_count;$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#356: FILE: net/sched/sch_prio.c:74:
+				  q->prio2band[q->band2queue[band&TC_PRIO_MAX]];
 				                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#425: FILE: net/sched/sch_prio.c:276:
+		if ( ((i + 1) - offset) == qmapoffset) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000447020.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 15 errors, 24 warnings, 5 checks, 335 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000447020.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
