WARNING:TYPO_SPELLING: 'sybsystem' may be misspelled - perhaps 'subsystem'?
#54: 
> agreed on the sybsystem architecture? Noone _in kernel_ user lirc-dev
                ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'Noone' may be misspelled - perhaps 'No one'?
#54: 
> agreed on the sybsystem architecture? Noone _in kernel_ user lirc-dev
                                        ^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#74: 
To make my life easy, I've moved the code temporarily into drivers/media/IR.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#172: FILE: linux/drivers/media/IR/ir-sysfs.c:1:
+/* ir-register.c - handle IR scancode->keycode tables

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s)
#196: FILE: linux/drivers/media/IR/ir-sysfs.c:25:
+static DEVICE_ATTR(ir_protocol, S_IRUGO | S_IWUSR, NULL, NULL);

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#196: FILE: linux/drivers/media/IR/ir-sysfs.c:25:
+static DEVICE_ATTR(ir_protocol, S_IRUGO | S_IWUSR, NULL, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: linux/drivers/media/IR/ir-sysfs.c:38:
+^I^I^I^I        IRRCV_NUM_DEVICES);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#218: FILE: linux/drivers/media/IR/ir-sysfs.c:47:
+	kobj= &ir_dev->class_dev->kobj;
 	    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#220: FILE: linux/drivers/media/IR/ir-sysfs.c:49:
+	printk(KERN_WARNING "Creating IR device %s\n", kobject_name(kobj));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#222: FILE: linux/drivers/media/IR/ir-sysfs.c:51:
+	if (unlikely (rc < 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rc < 0'
#222: FILE: linux/drivers/media/IR/ir-sysfs.c:51:
+	if (unlikely (rc < 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#240: FILE: linux/drivers/media/IR/ir-sysfs.c:69:
+	kobj= &ir_dev->class_dev->kobj;
 	    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#252: FILE: linux/drivers/media/IR/ir-sysfs.c:81:
+		printk(KERN_ERR "ir_core: unable to register irrcv class\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000035350.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 9 warnings, 1 checks, 154 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000035350.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
