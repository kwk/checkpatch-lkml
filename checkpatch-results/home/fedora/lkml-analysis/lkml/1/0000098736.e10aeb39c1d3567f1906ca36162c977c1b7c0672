WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
inode_operations structures for sysfs. This handler uses two new LSM hooks. The

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#90: FILE: fs/sysfs/inode.c:110:
+int sysfs_setxattr(struct dentry *dentry, const char *name, const void *value,
+		size_t size, int flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#155: FILE: fs/sysfs/sysfs.h:153:
+int sysfs_setxattr(struct dentry *dentry, const char *name, const void *value,
+		size_t size, int flags);

WARNING:SPACING: Unnecessary space before function pointer arguments
#168: FILE: include/linux/security.h:1444:
+	int (*xattr_to_secid) (const char *name, const void *value,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#169: FILE: include/linux/security.h:1445:
+	int (*xattr_to_secid) (const char *name, const void *value,
+			size_t size, u32 *secid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#179: FILE: include/linux/security.h:1707:
+int security_xattr_to_secid(const char *name, const void *value,
+		size_t size, u32 *secid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#192: FILE: include/linux/security.h:2186:
+static inline int security_xattr_to_secid(const char *name, const void *value,
+		size_t size, u32 *secid)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#213: FILE: security/capability.c:271:
+int cap_xattr_to_secid(const char *name, const void *value,
+		size_t size, u32 *secid)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: security/capability.c:273:
+     return -EOPNOTSUPP;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#244: FILE: security/security.c:624:
+int security_xattr_to_secid(const char *name, const void *value,
+		size_t size, u32 *secid)

WARNING:LINE_SPACING: Missing a blank line after declarations
#274: FILE: security/selinux/hooks.c:2941:
+	struct inode_security_struct *isec = inode->i_security;
+	isec->sid = secid;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#278: FILE: security/selinux/hooks.c:2945:
+static int selinux_xattr_to_secid(const char *name, const void *value,
+		size_t size, u32 *secid)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#317: FILE: security/smack/smack_lsm.c:880:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#318: FILE: security/smack/smack_lsm.c:881:
+^Iisp->smk_inode = smack_from_secid(secid);^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#328: FILE: security/smack/smack_lsm.c:891:
+static int smack_xattr_to_secid(const char *name, const void* value,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#329: FILE: security/smack/smack_lsm.c:892:
+static int smack_xattr_to_secid(const char *name, const void* value,
+			size_t size, u32 *secid)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#331: FILE: security/smack/smack_lsm.c:894:
+^Ichar *sp;^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sp"
#340: FILE: security/smack/smack_lsm.c:903:
+	if (sp == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LINE_SPACING: Please don't use multiple blank lines
#346: FILE: security/smack/smack_lsm.c:909:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#355: FILE: security/smack/smack_lsm.c:3103:
+^I.inode_setsecid = ^I^Ismack_inode_setsecid,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#357: FILE: security/smack/smack_lsm.c:3105:
+^I$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000098736.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 5 warnings, 11 checks, 252 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000098736.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
