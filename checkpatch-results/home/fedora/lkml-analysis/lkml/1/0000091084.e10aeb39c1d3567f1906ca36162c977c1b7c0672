CHECK:CAMELCASE: Avoid CamelCase: <Request>
#86: FILE: drivers/staging/hv/StorVsc.c:46:
+	struct hv_storvsc_request *Request;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LONG_LINE: line length of 132 exceeds 100 columns
#104: FILE: drivers/staging/hv/StorVsc.c:275:
+		sizeof(struct hv_storvsc_request), sizeof(STORVSC_REQUEST_EXTENSION), sizeof(VSTOR_PACKET), sizeof(VMSCSI_REQUEST));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#156: FILE: drivers/staging/hv/blkvsc_drv.c:137:
+static int blkvsc_submit_request(struct blkvsc_request *blkvsc_req, void (*request_completion)(struct hv_storvsc_request*) );

CHECK:SPACING: No space is necessary after a cast
#156: FILE: drivers/staging/hv/blkvsc_drv.c:137:
+static int blkvsc_submit_request(struct blkvsc_request *blkvsc_req, void (*request_completion)(struct hv_storvsc_request*) );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#156: FILE: drivers/staging/hv/blkvsc_drv.c:137:
+static int blkvsc_submit_request(struct blkvsc_request *blkvsc_req, void (*request_completion)(struct hv_storvsc_request*) );

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#156: FILE: drivers/staging/hv/blkvsc_drv.c:137:
+static int blkvsc_submit_request(struct blkvsc_request *blkvsc_req, void (*request_completion)(struct hv_storvsc_request*) );

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#168: FILE: drivers/staging/hv/blkvsc_drv.c:903:
+static int blkvsc_submit_request(struct blkvsc_request *blkvsc_req, void (*request_completion)(struct hv_storvsc_request*) )

CHECK:SPACING: No space is necessary after a cast
#168: FILE: drivers/staging/hv/blkvsc_drv.c:903:
+static int blkvsc_submit_request(struct blkvsc_request *blkvsc_req, void (*request_completion)(struct hv_storvsc_request*) )

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#168: FILE: drivers/staging/hv/blkvsc_drv.c:903:
+static int blkvsc_submit_request(struct blkvsc_request *blkvsc_req, void (*request_completion)(struct hv_storvsc_request*) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#168: FILE: drivers/staging/hv/blkvsc_drv.c:903:
+static int blkvsc_submit_request(struct blkvsc_request *blkvsc_req, void (*request_completion)(struct hv_storvsc_request*) )

CHECK:CAMELCASE: Avoid CamelCase: <Device>
#215: FILE: drivers/staging/hv/include/StorVscApi.h:59:
+typedef int (*PFN_ON_IO_REQUEST)(struct hv_device *Device, struct hv_storvsc_request *Request);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000091084.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 3 warnings, 4 checks, 158 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000091084.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
