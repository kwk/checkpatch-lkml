WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#202: FILE: include/asm-x86/pgtable.h:1:
+#ifndef _ASM_X86_PGTABLE_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#213: FILE: include/asm-x86/pgtable.h:12:
+extern unsigned long empty_zero_page[PAGE_SIZE/sizeof(unsigned long)];
                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#220: FILE: include/asm-x86/pgtable.h:19:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#241: FILE: include/asm-x86/pgtable.h:40:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#264: FILE: include/asm-x86/pgtable.h:63:
+#define _PAGE_PROTNONE	_PAGE_PSE	/* if the user mapped it with PROT_NONE;
+					   pte_present gives true */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#264: FILE: include/asm-x86/pgtable.h:63:
+					   pte_present gives true */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#318: FILE: include/asm-x86/pgtable.h:117:
+#define PUD_SIZE	(_AC(1,UL) << PUD_SHIFT)
                 	      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#319: FILE: include/asm-x86/pgtable.h:118:
+#define PUD_MASK	(~(PUD_SIZE-1))
                 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#323: FILE: include/asm-x86/pgtable.h:122:
+#define PMD_SIZE	(_AC(1,UL) << PMD_SHIFT)
                 	      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#324: FILE: include/asm-x86/pgtable.h:123:
+#define PMD_MASK	(~(PMD_SIZE-1))
                 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#327: FILE: include/asm-x86/pgtable.h:126:
+#define PGDIR_SIZE	(_AC(1,UL) << PGDIR_SHIFT)
                   	      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#328: FILE: include/asm-x86/pgtable.h:127:
+#define PGDIR_MASK	(~(PGDIR_SIZE-1))
                   	             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#330: FILE: include/asm-x86/pgtable.h:129:
+#define USER_PTRS_PER_PGD	((TASK_SIZE-1)/PGDIR_SIZE+1)
                          	           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#330: FILE: include/asm-x86/pgtable.h:129:
+#define USER_PTRS_PER_PGD	((TASK_SIZE-1)/PGDIR_SIZE+1)
                          	              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#330: FILE: include/asm-x86/pgtable.h:129:
+#define USER_PTRS_PER_PGD	((TASK_SIZE-1)/PGDIR_SIZE+1)
                          	                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#335: FILE: include/asm-x86/pgtable.h:134:
+#define KERNEL_PGD_PTRS (PTRS_PER_PGD-USER_PGD_PTRS)
                                      ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#370: FILE: include/asm-x86/pgtable.h:169:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#381: FILE: include/asm-x86/pgtable.h:180:
+
+

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#417: FILE: include/asm-x86/pgtable.h:216:
+static inline pte_t pte_mkclean(pte_t pte)	{ set_pte(&pte, __pte(pte_val(pte) & ~_PAGE_DIRTY)); return pte; }

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#418: FILE: include/asm-x86/pgtable.h:217:
+static inline pte_t pte_mkold(pte_t pte)	{ set_pte(&pte, __pte(pte_val(pte) & ~_PAGE_ACCESSED)); return pte; }

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#419: FILE: include/asm-x86/pgtable.h:218:
+static inline pte_t pte_wrprotect(pte_t pte)	{ set_pte(&pte, __pte(pte_val(pte) & ~_PAGE_RW)); return pte; }

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#420: FILE: include/asm-x86/pgtable.h:219:
+static inline pte_t pte_mkexec(pte_t pte)	{ set_pte(&pte, __pte(pte_val(pte) & ~_PAGE_NX)); return pte; }

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#421: FILE: include/asm-x86/pgtable.h:220:
+static inline pte_t pte_mkdirty(pte_t pte)	{ set_pte(&pte, __pte(pte_val(pte) | _PAGE_DIRTY)); return pte; }

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#422: FILE: include/asm-x86/pgtable.h:221:
+static inline pte_t pte_mkyoung(pte_t pte)	{ set_pte(&pte, __pte(pte_val(pte) | _PAGE_ACCESSED)); return pte; }

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#423: FILE: include/asm-x86/pgtable.h:222:
+static inline pte_t pte_mkwrite(pte_t pte)	{ set_pte(&pte, __pte(pte_val(pte) | _PAGE_RW)); return pte; }

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#424: FILE: include/asm-x86/pgtable.h:223:
+static inline pte_t pte_mkhuge(pte_t pte)	{ set_pte(&pte, __pte(pte_val(pte) | _PAGE_PSE)); return pte; }

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#425: FILE: include/asm-x86/pgtable.h:224:
+static inline pte_t pte_clrhuge(pte_t pte)	{ set_pte(&pte, __pte(pte_val(pte) & ~_PAGE_PSE)); return pte; }

WARNING:LINE_SPACING: Missing a blank line after declarations
#448: FILE: include/asm-x86/pgtable.h:247:
+	pteval_t pte = pte_val(pte_old);
+	pte &= _PAGE_CHG_MASK;

CHECK:SPACING: No space is necessary after a cast
#464: FILE: include/asm-x86/pgtable.h:263:
+#define pmd_page_vaddr(pmd) ((unsigned long) __va(pmd_val(pmd) & PTE_MASK))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#473: FILE: include/asm-x86/pgtable.h:272:
+#define pmd_index(address) (((address) >> PMD_SHIFT) & (PTRS_PER_PMD-1))
                                                                     ^

CHECK:SPACING: No space is necessary after a cast
#478: FILE: include/asm-x86/pgtable.h:277:
+	((pmd_t *) pud_page_vaddr(*(dir)) + pmd_index(address))

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#485: FILE: include/asm-x86/pgtable.h:284:
+}
+#define pmd_pfn(x)  ((pmd_val(x) & __PHYSICAL_MASK) >> PAGE_SHIFT)

CHECK:SPACING: No space is necessary after a cast
#505: FILE: include/asm-x86/pgtable.h:304:
+	((pte_t *) pmd_page_vaddr(*(dir)) +  pte_index(address))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#510: FILE: include/asm-x86/pgtable.h:309:
+#define pages_to_mb(x)	((x) >> (20-PAGE_SHIFT))
                       	           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#517: FILE: include/asm-x86/pgtable.h:316:
+	unsigned long pte;
+	pte = (page_nr << PAGE_SHIFT);

WARNING:LINE_SPACING: Missing a blank line after declarations
#526: FILE: include/asm-x86/pgtable.h:325:
+	pte_t pte = native_ptep_get_and_clear(ptep);
+	pte_update(mm, addr, ptep);

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#530: FILE: include/asm-x86/pgtable.h:329:
+static inline pte_t ptep_get_and_clear_full(struct mm_struct *mm, unsigned long addr, pte_t *ptep, int full)

WARNING:LINE_SPACING: Missing a blank line after declarations
#533: FILE: include/asm-x86/pgtable.h:332:
+	pte_t pte;
+	if (full) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#545: FILE: include/asm-x86/pgtable.h:344:
+
+

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#924: FILE: include/asm-x86/pgtable_64.h:97:
+static inline void native_set_pte(pte_t *ptep , pte_t pte)
                                               ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#932: FILE: include/asm-x86/pgtable_64.h:103:
+				     pte_t *ptep , pte_t pte)
 				                 ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#962: FILE: include/asm-x86/pgtable_64.h:123:
+static inline void native_pud_clear (pud_t *pud)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#972: FILE: include/asm-x86/pgtable_64.h:133:
+static inline void native_pgd_clear (pgd_t * pgd)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#972: FILE: include/asm-x86/pgtable_64.h:133:
+static inline void native_pgd_clear (pgd_t * pgd)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000348892.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 19 warnings, 19 checks, 1129 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000348892.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
