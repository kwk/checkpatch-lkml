WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
2.6.27-stable review patch.  If anyone has any objections, please let us know.

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id 'fa3795a7308df099f0f2c9e5ca2c20a5ff65bdc4', maybe rebased or not pulled?
#36: 
(cherry picked from commit fa3795a7308df099f0f2c9e5ca2c20a5ff65bdc4)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*kvm_sregs)...) over kzalloc(sizeof(struct kvm_sregs)...)
#64: FILE: virt/kvm/kvm_main.c:1170:
+		kvm_sregs = kzalloc(sizeof(struct kvm_sregs), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*kvm_sregs)...) over kmalloc(sizeof(struct kvm_sregs)...)
#81: FILE: virt/kvm/kvm_main.c:1184:
+		kvm_sregs = kmalloc(sizeof(struct kvm_sregs), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*fpu)...) over kzalloc(sizeof(struct kvm_fpu)...)
#102: FILE: virt/kvm/kvm_main.c:1272:
+		fpu = kzalloc(sizeof(struct kvm_fpu), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*fpu)...) over kmalloc(sizeof(struct kvm_fpu)...)
#119: FILE: virt/kvm/kvm_main.c:1286:
+		fpu = kmalloc(sizeof(struct kvm_fpu), GFP_KERNEL);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000076105.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 4 checks, 90 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000076105.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
