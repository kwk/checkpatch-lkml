WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#86: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#91: FILE: arch/score/include/asm/scatterlist.h:1:
+#ifndef _ASM_SCORE_SCATTERLIST_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#104: FILE: arch/score/include/asm/scoreregs.h:1:
+#ifndef _ASM_SCORE_SCOREREGS_H

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#153: FILE: arch/score/include/asm/scoreregs.h:50:
+#define SYSTEM_CLOCK           (27*1000000/4)          /* 27 MHz */
                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#153: FILE: arch/score/include/asm/scoreregs.h:50:
+#define SYSTEM_CLOCK           (27*1000000/4)          /* 27 MHz */
                                           ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#162: FILE: arch/score/include/asm/sections.h:1:
+#ifndef _ASM_SCORE_SECTIONS_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#175: FILE: arch/score/include/asm/segment.h:1:
+#ifndef _ASM_SCORE_SEGMENT_H

WARNING:NEW_TYPEDEFS: do not add new typedefs
#180: FILE: arch/score/include/asm/segment.h:6:
+typedef struct {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: arch/score/include/asm/segment.h:7:
+       unsigned long seg;$

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#189: FILE: arch/score/include/asm/segment.h:15:
+# define set_fs(x)     \
+       do { current_thread_info()->addr_limit = (x); } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: arch/score/include/asm/segment.h:16:
+       do { current_thread_info()->addr_limit = (x); } while (0)$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#203: FILE: arch/score/include/asm/sembuf.h:1:
+#ifndef _ASM_SCORE_SEMBUF_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#216: FILE: arch/score/include/asm/setup.h:1:
+#ifndef _ASM_SCORE_SETUP_H

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#224: FILE: arch/score/include/asm/setup.h:9:
+extern void pagetable_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#225: FILE: arch/score/include/asm/setup.h:10:
+extern void pgd_init(unsigned long page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#227: FILE: arch/score/include/asm/setup.h:12:
+extern void setup_early_printk(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#228: FILE: arch/score/include/asm/setup.h:13:
+extern void cpu_cache_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#229: FILE: arch/score/include/asm/setup.h:14:
+extern void tlb_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#231: FILE: arch/score/include/asm/setup.h:16:
+extern void handle_nmi(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#232: FILE: arch/score/include/asm/setup.h:17:
+extern void handle_adelinsn(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#233: FILE: arch/score/include/asm/setup.h:18:
+extern void handle_adedata(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#234: FILE: arch/score/include/asm/setup.h:19:
+extern void handle_ibe(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#235: FILE: arch/score/include/asm/setup.h:20:
+extern void handle_pel(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#236: FILE: arch/score/include/asm/setup.h:21:
+extern void handle_sys(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#237: FILE: arch/score/include/asm/setup.h:22:
+extern void handle_ccu(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#238: FILE: arch/score/include/asm/setup.h:23:
+extern void handle_ri(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#239: FILE: arch/score/include/asm/setup.h:24:
+extern void handle_tr(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#240: FILE: arch/score/include/asm/setup.h:25:
+extern void handle_ades(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#241: FILE: arch/score/include/asm/setup.h:26:
+extern void handle_cee(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#242: FILE: arch/score/include/asm/setup.h:27:
+extern void handle_cpe(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#243: FILE: arch/score/include/asm/setup.h:28:
+extern void handle_dve(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#244: FILE: arch/score/include/asm/setup.h:29:
+extern void handle_dbe(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#245: FILE: arch/score/include/asm/setup.h:30:
+extern void handle_reserved(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#246: FILE: arch/score/include/asm/setup.h:31:
+extern void handle_tlb_refill(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#247: FILE: arch/score/include/asm/setup.h:32:
+extern void handle_tlb_invaild(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#248: FILE: arch/score/include/asm/setup.h:33:
+extern void handle_mod(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#249: FILE: arch/score/include/asm/setup.h:34:
+extern void debug_exception_vector(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#250: FILE: arch/score/include/asm/setup.h:35:
+extern void general_exception_vector(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#251: FILE: arch/score/include/asm/setup.h:36:
+extern void interrupt_exception_vector(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#263: FILE: arch/score/include/asm/shmbuf.h:1:
+#ifndef _ASM_SCORE_SHMBUF_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#276: FILE: arch/score/include/asm/shmparam.h:1:
+#ifndef _ASM_SCORE_SHMPARAM_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#289: FILE: arch/score/include/asm/sigcontext.h:1:
+#ifndef _ASM_SCORE_SIGCONTEXT_H

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: arch/score/include/asm/sigcontext.h:9:
+       unsigned int            sc_regmask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: arch/score/include/asm/sigcontext.h:10:
+       unsigned int            sc_psr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: arch/score/include/asm/sigcontext.h:11:
+       unsigned int            sc_condition;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: arch/score/include/asm/sigcontext.h:12:
+       unsigned long           sc_pc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: arch/score/include/asm/sigcontext.h:13:
+       unsigned long           sc_regs[32];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: arch/score/include/asm/sigcontext.h:14:
+       unsigned int            sc_ssflags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: arch/score/include/asm/sigcontext.h:15:
+       unsigned int            sc_mdceh;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: arch/score/include/asm/sigcontext.h:16:
+       unsigned int            sc_mdcel;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: arch/score/include/asm/sigcontext.h:17:
+       unsigned int            sc_ecr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: arch/score/include/asm/sigcontext.h:18:
+       unsigned long           sc_ema;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: arch/score/include/asm/sigcontext.h:19:
+       unsigned long           sc_sigset[4];$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#318: FILE: arch/score/include/asm/siginfo.h:1:
+#ifndef _ASM_SCORE_SIGINFO_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#331: FILE: arch/score/include/asm/signal.h:1:
+#ifndef _ASM_SCORE_SIGNAL_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#344: FILE: arch/score/include/asm/socket.h:1:
+#ifndef _ASM_SCORE_SOCKET_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#357: FILE: arch/score/include/asm/sockios.h:1:
+#ifndef _ASM_SCORE_SOCKIOS_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#369: FILE: arch/score/include/asm/stat.h:1:
+#ifndef _ASM_SCORE_STAT_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#382: FILE: arch/score/include/asm/statfs.h:1:
+#ifndef _ASM_SCORE_STATFS_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#395: FILE: arch/score/include/asm/string.h:1:
+#ifndef _ASM_SCORE_STRING_H

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#398: FILE: arch/score/include/asm/string.h:4:
+extern void *memset(void *__s, int __c, size_t __count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#399: FILE: arch/score/include/asm/string.h:5:
+extern void *memcpy(void *__to, __const__ void *__from, size_t __n);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#400: FILE: arch/score/include/asm/string.h:6:
+extern void *memmove(void *__dest, __const__ void *__src, size_t __n);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#409: FILE: arch/score/include/asm/swab.h:1:
+#ifndef _ASM_SCORE_SWAB_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#422: FILE: arch/score/include/asm/syscalls.h:1:
+#ifndef _ASM_SCORE_SYSCALLS_H

ERROR:TRAILING_WHITESPACE: trailing whitespace
#425: FILE: arch/score/include/asm/syscalls.h:4:
+asmlinkage long sys_clone(int flags, unsigned long stack, struct pt_regs $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#426: FILE: arch/score/include/asm/syscalls.h:4:
*regs);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#439: FILE: arch/score/include/asm/system.h:1:
+#ifndef _ASM_SCORE_SYSTEM_H

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#448: FILE: arch/score/include/asm/system.h:10:
+extern void *resume(void *last, void *next, void *next_ti);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'next' - possible side-effects?
#450: FILE: arch/score/include/asm/system.h:12:
+#define switch_to(prev, next, last)                            \
+do {                                                           \
+       (last) = resume(prev, next, task_thread_info(next));    \
+} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#450: FILE: arch/score/include/asm/system.h:12:
+#define switch_to(prev, next, last)                            \
+do {                                                           \
+       (last) = resume(prev, next, task_thread_info(next));    \
+} while (0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 7)
#451: FILE: arch/score/include/asm/system.h:13:
+do {                                                           \
+       (last) = resume(prev, next, task_thread_info(next));    \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: arch/score/include/asm/system.h:14:
+       (last) = resume(prev, next, task_thread_info(next));    \$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#458: FILE: arch/score/include/asm/system.h:20:
+extern unsigned long arch_align_stack(unsigned long sp);

WARNING:MEMORY_BARRIER: memory barrier without comment
#460: FILE: arch/score/include/asm/system.h:22:
+#define mb()           barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#461: FILE: arch/score/include/asm/system.h:23:
+#define rmb()          barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#462: FILE: arch/score/include/asm/system.h:24:
+#define wmb()          barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#463: FILE: arch/score/include/asm/system.h:25:
+#define smp_mb()       barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#464: FILE: arch/score/include/asm/system.h:26:
+#define smp_rmb()      barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#465: FILE: arch/score/include/asm/system.h:27:
+#define smp_wmb()      barrier()

ERROR:TRAILING_WHITESPACE: trailing whitespace
#470: FILE: arch/score/include/asm/system.h:32:
+#define set_mb(var, value)             do {var = value; wmb(); } while $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#470: FILE: arch/score/include/asm/system.h:32:
+#define set_mb(var, value)             do {var = value; wmb(); } while 

WARNING:MEMORY_BARRIER: memory barrier without comment
#470: FILE: arch/score/include/asm/system.h:32:
+#define set_mb(var, value)             do {var = value; wmb(); } while 

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#483: FILE: arch/score/include/asm/system.h:44:
+unsigned long __xchg(volatile unsigned long *m, unsigned long val)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#485: FILE: arch/score/include/asm/system.h:46:
+       unsigned long retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: arch/score/include/asm/system.h:47:
+       unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: arch/score/include/asm/system.h:49:
+       local_irq_save(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: arch/score/include/asm/system.h:50:
+       retval = *m;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: arch/score/include/asm/system.h:51:
+       *m = val;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: arch/score/include/asm/system.h:52:
+       local_irq_restore(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: arch/score/include/asm/system.h:53:
+       return retval;$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#495: FILE: arch/score/include/asm/system.h:56:
+#define xchg(ptr, v)                                           \
+       ((__typeof__(*(ptr))) __xchg((unsigned long *)(ptr),    \
+                                       (unsigned long)(v)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: arch/score/include/asm/system.h:57:
+       ((__typeof__(*(ptr))) __xchg((unsigned long *)(ptr),    \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#497: FILE: arch/score/include/asm/system.h:58:
+                                       (unsigned long)(v)))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: arch/score/include/asm/system.h:58:
+                                       (unsigned long)(v)))$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#499: FILE: arch/score/include/asm/system.h:60:
+static inline unsigned long __cmpxchg(volatile unsigned long *m,

ERROR:CODE_INDENT: code indent should use tabs where possible
#500: FILE: arch/score/include/asm/system.h:61:
+                               unsigned long old, unsigned long new)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#500: FILE: arch/score/include/asm/system.h:61:
+static inline unsigned long __cmpxchg(volatile unsigned long *m,
+                               unsigned long old, unsigned long new)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#500: FILE: arch/score/include/asm/system.h:61:
+                               unsigned long old, unsigned long new)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#502: FILE: arch/score/include/asm/system.h:63:
+       unsigned long retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#503: FILE: arch/score/include/asm/system.h:64:
+       unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#505: FILE: arch/score/include/asm/system.h:66:
+       local_irq_save(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: arch/score/include/asm/system.h:67:
+       retval = *m;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#507: FILE: arch/score/include/asm/system.h:68:
+       if (retval == old)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#507: FILE: arch/score/include/asm/system.h:68:
+       if (retval == old)
+               *m = new;

ERROR:CODE_INDENT: code indent should use tabs where possible
#508: FILE: arch/score/include/asm/system.h:69:
+               *m = new;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#508: FILE: arch/score/include/asm/system.h:69:
+               *m = new;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#509: FILE: arch/score/include/asm/system.h:70:
+       local_irq_restore(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: arch/score/include/asm/system.h:71:
+       return retval;$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#513: FILE: arch/score/include/asm/system.h:74:
+#define cmpxchg(ptr, o, n)                                     \
+       ((__typeof__(*(ptr))) __cmpxchg((unsigned long *)(ptr), \
+                                       (unsigned long)(o),     \
+                                       (unsigned long)(n)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#514: FILE: arch/score/include/asm/system.h:75:
+       ((__typeof__(*(ptr))) __cmpxchg((unsigned long *)(ptr), \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#515: FILE: arch/score/include/asm/system.h:76:
+                                       (unsigned long)(o),     \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#515: FILE: arch/score/include/asm/system.h:76:
+                                       (unsigned long)(o),     \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#516: FILE: arch/score/include/asm/system.h:77:
+                                       (unsigned long)(n)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#516: FILE: arch/score/include/asm/system.h:77:
+                                       (unsigned long)(n)))$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#518: FILE: arch/score/include/asm/system.h:79:
+extern void __die(const char *, struct pt_regs *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#518: FILE: arch/score/include/asm/system.h:79:
+extern void __die(const char *, struct pt_regs *, const char *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#518: FILE: arch/score/include/asm/system.h:79:
+extern void __die(const char *, struct pt_regs *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#518: FILE: arch/score/include/asm/system.h:79:
+extern void __die(const char *, struct pt_regs *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#518: FILE: arch/score/include/asm/system.h:79:
+extern void __die(const char *, struct pt_regs *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#518: FILE: arch/score/include/asm/system.h:79:
+extern void __die(const char *, struct pt_regs *, const char *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#519: FILE: arch/score/include/asm/system.h:80:
+extern void __die(const char *, struct pt_regs *, const char *,
+       const char *, unsigned long) __attribute__((noreturn));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#519: FILE: arch/score/include/asm/system.h:80:
+       const char *, unsigned long) __attribute__((noreturn));$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __noreturn over __attribute__((noreturn))
#519: FILE: arch/score/include/asm/system.h:80:
+       const char *, unsigned long) __attribute__((noreturn));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#520: FILE: arch/score/include/asm/system.h:81:
+extern void __die_if_kernel(const char *, struct pt_regs *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#520: FILE: arch/score/include/asm/system.h:81:
+extern void __die_if_kernel(const char *, struct pt_regs *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#520: FILE: arch/score/include/asm/system.h:81:
+extern void __die_if_kernel(const char *, struct pt_regs *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#520: FILE: arch/score/include/asm/system.h:81:
+extern void __die_if_kernel(const char *, struct pt_regs *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#520: FILE: arch/score/include/asm/system.h:81:
+extern void __die_if_kernel(const char *, struct pt_regs *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#520: FILE: arch/score/include/asm/system.h:81:
+extern void __die_if_kernel(const char *, struct pt_regs *, const char *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#521: FILE: arch/score/include/asm/system.h:82:
+extern void __die_if_kernel(const char *, struct pt_regs *, const char *,
+       const char *, unsigned long);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#521: FILE: arch/score/include/asm/system.h:82:
+       const char *, unsigned long);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#524: FILE: arch/score/include/asm/system.h:85:
+       __die(msg, regs, __FILE__ ":", __func__, __LINE__)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: arch/score/include/asm/system.h:87:
+       __die_if_kernel(msg, regs, __FILE__ ":", __func__, __LINE__)$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000113552.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 84 warnings, 41 checks, 315 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000113552.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
