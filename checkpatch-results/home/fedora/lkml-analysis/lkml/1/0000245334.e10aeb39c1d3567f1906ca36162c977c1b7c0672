WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#36: FILE: debug/mdb-ia32-proc.h:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#38: FILE: debug/mdb-ia32-proc.h:3:
+/***************************************************************************
+*

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#50: FILE: debug/mdb-ia32-proc.h:15:
+*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU +* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#56: FILE: debug/mdb-ia32-proc.h:20:
works and you are required to provide the source code for this +*  

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:NEW_TYPEDEFS: do not add new typedefs
#164: FILE: debug/mdb-ia32-proc.h:125:
+typedef struct _GDT {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: debug/mdb-ia32-proc.h:126:
+    WORD Limit;^I    //^I0xFFFF$

CHECK:CAMELCASE: Avoid CamelCase: <Limit>
#165: FILE: debug/mdb-ia32-proc.h:126:
+    WORD Limit;	    //	0xFFFF

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: debug/mdb-ia32-proc.h:127:
+    WORD Base1;^I    //  0$

CHECK:CAMELCASE: Avoid CamelCase: <Base1>
#166: FILE: debug/mdb-ia32-proc.h:127:
+    WORD Base1;	    //  0

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: debug/mdb-ia32-proc.h:128:
+    BYTE Base2;^I    //^I0$

CHECK:CAMELCASE: Avoid CamelCase: <Base2>
#167: FILE: debug/mdb-ia32-proc.h:128:
+    BYTE Base2;	    //	0

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: debug/mdb-ia32-proc.h:129:
+    BYTE GDTType;   //^I10010010b$

CHECK:CAMELCASE: Avoid CamelCase: <GDTType>
#168: FILE: debug/mdb-ia32-proc.h:129:
+    BYTE GDTType;   //	10010010b

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: debug/mdb-ia32-proc.h:130:
+    BYTE OtherType; //^I11001111b$

CHECK:CAMELCASE: Avoid CamelCase: <OtherType>
#169: FILE: debug/mdb-ia32-proc.h:130:
+    BYTE OtherType; //	11001111b

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: debug/mdb-ia32-proc.h:131:
+    BYTE Base3;^I    //^I0$

CHECK:CAMELCASE: Avoid CamelCase: <Base3>
#170: FILE: debug/mdb-ia32-proc.h:131:
+    BYTE Base3;	    //	0

WARNING:NEW_TYPEDEFS: do not add new typedefs
#173: FILE: debug/mdb-ia32-proc.h:134:
+typedef struct _IDT {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: debug/mdb-ia32-proc.h:135:
+    WORD IDTLow;     //^I0$

CHECK:CAMELCASE: Avoid CamelCase: <IDTLow>
#174: FILE: debug/mdb-ia32-proc.h:135:
+    WORD IDTLow;     //	0

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: debug/mdb-ia32-proc.h:136:
+    WORD IDTSegment; //^I0x08$

CHECK:CAMELCASE: Avoid CamelCase: <IDTSegment>
#175: FILE: debug/mdb-ia32-proc.h:136:
+    WORD IDTSegment; //	0x08

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: debug/mdb-ia32-proc.h:137:
+    BYTE IDTSkip;    //^I0$

CHECK:CAMELCASE: Avoid CamelCase: <IDTSkip>
#176: FILE: debug/mdb-ia32-proc.h:137:
+    BYTE IDTSkip;    //	0

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: debug/mdb-ia32-proc.h:138:
+    BYTE IDTFlags;   //^I10001110b$

CHECK:CAMELCASE: Avoid CamelCase: <IDTFlags>
#177: FILE: debug/mdb-ia32-proc.h:138:
+    BYTE IDTFlags;   //	10001110b

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: debug/mdb-ia32-proc.h:139:
+    WORD IDTHigh;    //^I0$

CHECK:CAMELCASE: Avoid CamelCase: <IDTHigh>
#178: FILE: debug/mdb-ia32-proc.h:139:
+    WORD IDTHigh;    //	0

WARNING:NEW_TYPEDEFS: do not add new typedefs
#181: FILE: debug/mdb-ia32-proc.h:142:
+typedef struct _TSS {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: debug/mdb-ia32-proc.h:143:
+    WORD TSSLimit;^I// 0x0080$

CHECK:CAMELCASE: Avoid CamelCase: <TSSLimit>
#182: FILE: debug/mdb-ia32-proc.h:143:
+    WORD TSSLimit;	// 0x0080

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: debug/mdb-ia32-proc.h:144:
+    WORD TSSBase1;^I// 0$

CHECK:CAMELCASE: Avoid CamelCase: <TSSBase1>
#183: FILE: debug/mdb-ia32-proc.h:144:
+    WORD TSSBase1;	// 0

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: debug/mdb-ia32-proc.h:145:
+    BYTE TSSBase2;^I// 0$

CHECK:CAMELCASE: Avoid CamelCase: <TSSBase2>
#184: FILE: debug/mdb-ia32-proc.h:145:
+    BYTE TSSBase2;	// 0

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: debug/mdb-ia32-proc.h:146:
+    BYTE TSSType;^I// 10001001b$

CHECK:CAMELCASE: Avoid CamelCase: <TSSType>
#185: FILE: debug/mdb-ia32-proc.h:146:
+    BYTE TSSType;	// 10001001b

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: debug/mdb-ia32-proc.h:147:
+    BYTE TSSOtherType;^I// 00000000b$

CHECK:CAMELCASE: Avoid CamelCase: <TSSOtherType>
#186: FILE: debug/mdb-ia32-proc.h:147:
+    BYTE TSSOtherType;	// 00000000b

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: debug/mdb-ia32-proc.h:148:
+    BYTE TSSBase3;^I// 0$

CHECK:CAMELCASE: Avoid CamelCase: <TSSBase3>
#187: FILE: debug/mdb-ia32-proc.h:148:
+    BYTE TSSBase3;	// 0

WARNING:NEW_TYPEDEFS: do not add new typedefs
#190: FILE: debug/mdb-ia32-proc.h:151:
+typedef struct _TSS_GATE {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#191: FILE: debug/mdb-ia32-proc.h:152:
+    WORD TSSRes1;  ^I// 0$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: debug/mdb-ia32-proc.h:152:
+    WORD TSSRes1;  ^I// 0$

CHECK:CAMELCASE: Avoid CamelCase: <TSSRes1>
#191: FILE: debug/mdb-ia32-proc.h:152:
+    WORD TSSRes1;  	// 0

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: debug/mdb-ia32-proc.h:153:
+    WORD TSSSelector;^I// 0$

CHECK:CAMELCASE: Avoid CamelCase: <TSSSelector>
#192: FILE: debug/mdb-ia32-proc.h:153:
+    WORD TSSSelector;	// 0

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#193: FILE: debug/mdb-ia32-proc.h:154:
+    BYTE TSSRes2; ^I// 0$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: debug/mdb-ia32-proc.h:154:
+    BYTE TSSRes2; ^I// 0$

CHECK:CAMELCASE: Avoid CamelCase: <TSSRes2>
#193: FILE: debug/mdb-ia32-proc.h:154:
+    BYTE TSSRes2; 	// 0

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: debug/mdb-ia32-proc.h:155:
+    BYTE TSSFlags;^I// 10000101b$

CHECK:CAMELCASE: Avoid CamelCase: <TSSFlags>
#194: FILE: debug/mdb-ia32-proc.h:155:
+    BYTE TSSFlags;	// 10000101b

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#195: FILE: debug/mdb-ia32-proc.h:156:
+    WORD TSSRes3; ^I// 0$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: debug/mdb-ia32-proc.h:156:
+    WORD TSSRes3; ^I// 0$

CHECK:CAMELCASE: Avoid CamelCase: <TSSRes3>
#195: FILE: debug/mdb-ia32-proc.h:156:
+    WORD TSSRes3; 	// 0

WARNING:NEW_TYPEDEFS: do not add new typedefs
#198: FILE: debug/mdb-ia32-proc.h:159:
+typedef struct _LDT {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: debug/mdb-ia32-proc.h:160:
+    WORD LDTLimit;^I// 0xFFFF$

CHECK:CAMELCASE: Avoid CamelCase: <LDTLimit>
#199: FILE: debug/mdb-ia32-proc.h:160:
+    WORD LDTLimit;	// 0xFFFF

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: debug/mdb-ia32-proc.h:161:
+    WORD LDTBase1;^I// 0$

CHECK:CAMELCASE: Avoid CamelCase: <LDTBase1>
#200: FILE: debug/mdb-ia32-proc.h:161:
+    WORD LDTBase1;	// 0

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: debug/mdb-ia32-proc.h:162:
+    BYTE LDTBase2;^I// 0$

CHECK:CAMELCASE: Avoid CamelCase: <LDTBase2>
#201: FILE: debug/mdb-ia32-proc.h:162:
+    BYTE LDTBase2;	// 0

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: debug/mdb-ia32-proc.h:163:
+    BYTE LDTGDTType;^I// 10000010b$

CHECK:CAMELCASE: Avoid CamelCase: <LDTGDTType>
#202: FILE: debug/mdb-ia32-proc.h:163:
+    BYTE LDTGDTType;	// 10000010b

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: debug/mdb-ia32-proc.h:164:
+    BYTE LDTOtherType;^I// 10001111b$

CHECK:CAMELCASE: Avoid CamelCase: <LDTOtherType>
#203: FILE: debug/mdb-ia32-proc.h:164:
+    BYTE LDTOtherType;	// 10001111b

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: debug/mdb-ia32-proc.h:165:
+    BYTE LDTBase3;^I// 0$

CHECK:CAMELCASE: Avoid CamelCase: <LDTBase3>
#204: FILE: debug/mdb-ia32-proc.h:165:
+    BYTE LDTBase3;	// 0

CHECK:CAMELCASE: Avoid CamelCase: <ReadDR0>
#207: FILE: debug/mdb-ia32-proc.h:168:
+extern ULONG ReadDR0(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#207: FILE: debug/mdb-ia32-proc.h:168:
+extern ULONG ReadDR0(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:CAMELCASE: Avoid CamelCase: <ReadDR1>
#208: FILE: debug/mdb-ia32-proc.h:169:
+extern ULONG ReadDR1(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#208: FILE: debug/mdb-ia32-proc.h:169:
+extern ULONG ReadDR1(void);

CHECK:CAMELCASE: Avoid CamelCase: <ReadDR2>
#209: FILE: debug/mdb-ia32-proc.h:170:
+extern ULONG ReadDR2(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#209: FILE: debug/mdb-ia32-proc.h:170:
+extern ULONG ReadDR2(void);

CHECK:CAMELCASE: Avoid CamelCase: <ReadDR3>
#210: FILE: debug/mdb-ia32-proc.h:171:
+extern ULONG ReadDR3(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#210: FILE: debug/mdb-ia32-proc.h:171:
+extern ULONG ReadDR3(void);

CHECK:CAMELCASE: Avoid CamelCase: <ReadDR6>
#211: FILE: debug/mdb-ia32-proc.h:172:
+extern ULONG ReadDR6(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#211: FILE: debug/mdb-ia32-proc.h:172:
+extern ULONG ReadDR6(void);

CHECK:CAMELCASE: Avoid CamelCase: <ReadDR7>
#212: FILE: debug/mdb-ia32-proc.h:173:
+extern ULONG ReadDR7(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#212: FILE: debug/mdb-ia32-proc.h:173:
+extern ULONG ReadDR7(void);

CHECK:CAMELCASE: Avoid CamelCase: <WriteDR0>
#213: FILE: debug/mdb-ia32-proc.h:174:
+extern void WriteDR0(ULONG);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#213: FILE: debug/mdb-ia32-proc.h:174:
+extern void WriteDR0(ULONG);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ULONG' should also have an identifier name
#213: FILE: debug/mdb-ia32-proc.h:174:
+extern void WriteDR0(ULONG);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:CAMELCASE: Avoid CamelCase: <WriteDR1>
#214: FILE: debug/mdb-ia32-proc.h:175:
+extern void WriteDR1(ULONG);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#214: FILE: debug/mdb-ia32-proc.h:175:
+extern void WriteDR1(ULONG);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ULONG' should also have an identifier name
#214: FILE: debug/mdb-ia32-proc.h:175:
+extern void WriteDR1(ULONG);

CHECK:CAMELCASE: Avoid CamelCase: <WriteDR2>
#215: FILE: debug/mdb-ia32-proc.h:176:
+extern void WriteDR2(ULONG);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#215: FILE: debug/mdb-ia32-proc.h:176:
+extern void WriteDR2(ULONG);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ULONG' should also have an identifier name
#215: FILE: debug/mdb-ia32-proc.h:176:
+extern void WriteDR2(ULONG);

CHECK:CAMELCASE: Avoid CamelCase: <WriteDR3>
#216: FILE: debug/mdb-ia32-proc.h:177:
+extern void WriteDR3(ULONG);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#216: FILE: debug/mdb-ia32-proc.h:177:
+extern void WriteDR3(ULONG);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ULONG' should also have an identifier name
#216: FILE: debug/mdb-ia32-proc.h:177:
+extern void WriteDR3(ULONG);

CHECK:CAMELCASE: Avoid CamelCase: <WriteDR6>
#217: FILE: debug/mdb-ia32-proc.h:178:
+extern void WriteDR6(ULONG);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#217: FILE: debug/mdb-ia32-proc.h:178:
+extern void WriteDR6(ULONG);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ULONG' should also have an identifier name
#217: FILE: debug/mdb-ia32-proc.h:178:
+extern void WriteDR6(ULONG);

CHECK:CAMELCASE: Avoid CamelCase: <WriteDR7>
#218: FILE: debug/mdb-ia32-proc.h:179:
+extern void WriteDR7(ULONG);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#218: FILE: debug/mdb-ia32-proc.h:179:
+extern void WriteDR7(ULONG);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ULONG' should also have an identifier name
#218: FILE: debug/mdb-ia32-proc.h:179:
+extern void WriteDR7(ULONG);

CHECK:CAMELCASE: Avoid CamelCase: <ReadCR0>
#219: FILE: debug/mdb-ia32-proc.h:180:
+extern ULONG ReadCR0(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#219: FILE: debug/mdb-ia32-proc.h:180:
+extern ULONG ReadCR0(void);

CHECK:CAMELCASE: Avoid CamelCase: <ReadCR2>
#220: FILE: debug/mdb-ia32-proc.h:181:
+extern ULONG ReadCR2(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#220: FILE: debug/mdb-ia32-proc.h:181:
+extern ULONG ReadCR2(void);

CHECK:CAMELCASE: Avoid CamelCase: <ReadCR3>
#221: FILE: debug/mdb-ia32-proc.h:182:
+extern ULONG ReadCR3(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#221: FILE: debug/mdb-ia32-proc.h:182:
+extern ULONG ReadCR3(void);

CHECK:CAMELCASE: Avoid CamelCase: <ReadCR4>
#222: FILE: debug/mdb-ia32-proc.h:183:
+extern ULONG ReadCR4(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#222: FILE: debug/mdb-ia32-proc.h:183:
+extern ULONG ReadCR4(void);

CHECK:CAMELCASE: Avoid CamelCase: <ReadGDTR>
#223: FILE: debug/mdb-ia32-proc.h:184:
+extern void ReadGDTR(ULONG *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#223: FILE: debug/mdb-ia32-proc.h:184:
+extern void ReadGDTR(ULONG *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ULONG *' should also have an identifier name
#223: FILE: debug/mdb-ia32-proc.h:184:
+extern void ReadGDTR(ULONG *);

CHECK:CAMELCASE: Avoid CamelCase: <ReadIDTR>
#224: FILE: debug/mdb-ia32-proc.h:185:
+extern void ReadIDTR(ULONG *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#224: FILE: debug/mdb-ia32-proc.h:185:
+extern void ReadIDTR(ULONG *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ULONG *' should also have an identifier name
#224: FILE: debug/mdb-ia32-proc.h:185:
+extern void ReadIDTR(ULONG *);

CHECK:CAMELCASE: Avoid CamelCase: <ReadLDTR>
#225: FILE: debug/mdb-ia32-proc.h:186:
+extern ULONG ReadLDTR(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#225: FILE: debug/mdb-ia32-proc.h:186:
+extern ULONG ReadLDTR(void);

CHECK:CAMELCASE: Avoid CamelCase: <ReadTR>
#226: FILE: debug/mdb-ia32-proc.h:187:
+extern ULONG ReadTR(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#226: FILE: debug/mdb-ia32-proc.h:187:
+extern ULONG ReadTR(void);

CHECK:CAMELCASE: Avoid CamelCase: <ReadMSR>
#228: FILE: debug/mdb-ia32-proc.h:189:
+extern void ReadMSR(ULONG msr, ULONG *val1, ULONG *val2);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#228: FILE: debug/mdb-ia32-proc.h:189:
+extern void ReadMSR(ULONG msr, ULONG *val1, ULONG *val2);

CHECK:CAMELCASE: Avoid CamelCase: <WriteMSR>
#229: FILE: debug/mdb-ia32-proc.h:190:
+extern void WriteMSR(ULONG msr, ULONG *val1, ULONG *val2);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#229: FILE: debug/mdb-ia32-proc.h:190:
+extern void WriteMSR(ULONG msr, ULONG *val1, ULONG *val2);

CHECK:CAMELCASE: Avoid CamelCase: <MTRROpen>
#230: FILE: debug/mdb-ia32-proc.h:191:
+extern void MTRROpen(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#230: FILE: debug/mdb-ia32-proc.h:191:
+extern void MTRROpen(void);

CHECK:CAMELCASE: Avoid CamelCase: <MTRRClose>
#231: FILE: debug/mdb-ia32-proc.h:192:
+extern void MTRRClose(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#231: FILE: debug/mdb-ia32-proc.h:192:
+extern void MTRRClose(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#232: FILE: debug/mdb-ia32-proc.h:193:
+extern void save_npx(NUMERIC_FRAME *npx);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#233: FILE: debug/mdb-ia32-proc.h:194:
+extern void load_npx(NUMERIC_FRAME *npx);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#235: FILE: debug/mdb-ia32-proc.h:196:
+extern ULONG get_processor_id(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#236: FILE: debug/mdb-ia32-proc.h:197:
+extern ULONG get_physical_processor(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#237: FILE: debug/mdb-ia32-proc.h:198:
+extern ULONG fpu_present(void);

CHECK:CAMELCASE: Avoid CamelCase: <DisplayTSS>
#239: FILE: debug/mdb-ia32-proc.h:200:
+extern void DisplayTSS(StackFrame *stackFrame);

CHECK:CAMELCASE: Avoid CamelCase: <StackFrame>
#239: FILE: debug/mdb-ia32-proc.h:200:
+extern void DisplayTSS(StackFrame *stackFrame);

CHECK:CAMELCASE: Avoid CamelCase: <stackFrame>
#239: FILE: debug/mdb-ia32-proc.h:200:
+extern void DisplayTSS(StackFrame *stackFrame);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#239: FILE: debug/mdb-ia32-proc.h:200:
+extern void DisplayTSS(StackFrame *stackFrame);

CHECK:CAMELCASE: Avoid CamelCase: <DisplayGeneralRegisters>
#240: FILE: debug/mdb-ia32-proc.h:201:
+extern void DisplayGeneralRegisters(StackFrame *stackFrame);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#240: FILE: debug/mdb-ia32-proc.h:201:
+extern void DisplayGeneralRegisters(StackFrame *stackFrame);

CHECK:CAMELCASE: Avoid CamelCase: <DisplaySegmentRegisters>
#241: FILE: debug/mdb-ia32-proc.h:202:
+extern void DisplaySegmentRegisters(StackFrame *stackFrame);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#241: FILE: debug/mdb-ia32-proc.h:202:
+extern void DisplaySegmentRegisters(StackFrame *stackFrame);

CHECK:CAMELCASE: Avoid CamelCase: <DisplayControlRegisters>
#242: FILE: debug/mdb-ia32-proc.h:203:
+extern void DisplayControlRegisters(ULONG processor, StackFrame

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#242: FILE: debug/mdb-ia32-proc.h:203:
+extern void DisplayControlRegisters(ULONG processor, StackFrame

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#244: FILE: debug/mdb-ia32-proc.h:204:
+extern double ldexp(double v, int e);

CHECK:CAMELCASE: Avoid CamelCase: <DisplayNPXRegisters>
#245: FILE: debug/mdb-ia32-proc.h:205:
+extern void DisplayNPXRegisters(ULONG processor);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#245: FILE: debug/mdb-ia32-proc.h:205:
+extern void DisplayNPXRegisters(ULONG processor);

CHECK:CAMELCASE: Avoid CamelCase: <processProceedACC>
#247: FILE: debug/mdb-ia32-proc.h:207:
+extern ULONG processProceedACC(ULONG key, void *stackFrame,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#247: FILE: debug/mdb-ia32-proc.h:207:
+extern ULONG processProceedACC(ULONG key, void *stackFrame,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#248: FILE: debug/mdb-ia32-proc.h:208:
+extern ULONG processProceedACC(ULONG key, void *stackFrame,
+		  ACCELERATOR *accel);

CHECK:CAMELCASE: Avoid CamelCase: <processTraceACC>
#249: FILE: debug/mdb-ia32-proc.h:209:
+extern ULONG processTraceACC(ULONG key, void *stackFrame,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#249: FILE: debug/mdb-ia32-proc.h:209:
+extern ULONG processTraceACC(ULONG key, void *stackFrame,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#250: FILE: debug/mdb-ia32-proc.h:210:
+extern ULONG processTraceACC(ULONG key, void *stackFrame,
+		  ACCELERATOR *accel);

CHECK:CAMELCASE: Avoid CamelCase: <processTraceSSBACC>
#251: FILE: debug/mdb-ia32-proc.h:211:
+extern ULONG processTraceSSBACC(ULONG key, void *stackFrame,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#251: FILE: debug/mdb-ia32-proc.h:211:
+extern ULONG processTraceSSBACC(ULONG key, void *stackFrame,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#252: FILE: debug/mdb-ia32-proc.h:212:
+extern ULONG processTraceSSBACC(ULONG key, void *stackFrame,
+		  ACCELERATOR *accel);

CHECK:CAMELCASE: Avoid CamelCase: <processGoACC>
#253: FILE: debug/mdb-ia32-proc.h:213:
+extern ULONG processGoACC(ULONG key, void *stackFrame,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#253: FILE: debug/mdb-ia32-proc.h:213:
+extern ULONG processGoACC(ULONG key, void *stackFrame,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#254: FILE: debug/mdb-ia32-proc.h:214:
+extern ULONG processGoACC(ULONG key, void *stackFrame,
+		  ACCELERATOR *accel);

CHECK:CAMELCASE: Avoid CamelCase: <executeCommandHelp>
#256: FILE: debug/mdb-ia32-proc.h:216:
+extern ULONG executeCommandHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <commandLine>
#256: FILE: debug/mdb-ia32-proc.h:216:
+extern ULONG executeCommandHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#256: FILE: debug/mdb-ia32-proc.h:216:
+extern ULONG executeCommandHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <processProceed>
#257: FILE: debug/mdb-ia32-proc.h:217:
+extern ULONG processProceed(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#257: FILE: debug/mdb-ia32-proc.h:217:
+extern ULONG processProceed(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#258: FILE: debug/mdb-ia32-proc.h:218:
+extern ULONG processProceed(BYTE *cmd,
+		    StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <Exception>
#258: FILE: debug/mdb-ia32-proc.h:218:
+		    StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <processTrace>
#260: FILE: debug/mdb-ia32-proc.h:220:
+extern ULONG processTrace(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#260: FILE: debug/mdb-ia32-proc.h:220:
+extern ULONG processTrace(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#261: FILE: debug/mdb-ia32-proc.h:221:
+extern ULONG processTrace(BYTE *cmd,
+		  StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <processTraceSSB>
#263: FILE: debug/mdb-ia32-proc.h:223:
+extern ULONG processTraceSSB(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#263: FILE: debug/mdb-ia32-proc.h:223:
+extern ULONG processTraceSSB(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#264: FILE: debug/mdb-ia32-proc.h:224:
+extern ULONG processTraceSSB(BYTE *cmd,
+		  StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <processGo>
#266: FILE: debug/mdb-ia32-proc.h:226:
+extern ULONG processGo(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#266: FILE: debug/mdb-ia32-proc.h:226:
+extern ULONG processGo(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#267: FILE: debug/mdb-ia32-proc.h:227:
+extern ULONG processGo(BYTE *cmd,
+	       StackFrame *stackFrame, ULONG Exception,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#270: FILE: debug/mdb-ia32-proc.h:230:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <processorCommandHelp>
#271: FILE: debug/mdb-ia32-proc.h:231:
+extern ULONG processorCommandHelp(BYTE *commandLine, DEBUGGER_PARSER

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#271: FILE: debug/mdb-ia32-proc.h:231:
+extern ULONG processorCommandHelp(BYTE *commandLine, DEBUGGER_PARSER

CHECK:CAMELCASE: Avoid CamelCase: <breakProcessor>
#273: FILE: debug/mdb-ia32-proc.h:232:
+extern ULONG breakProcessor(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#273: FILE: debug/mdb-ia32-proc.h:232:
+extern ULONG breakProcessor(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: debug/mdb-ia32-proc.h:233:
+extern ULONG breakProcessor(BYTE *cmd,
+		    StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <TSSDisplayHelp>
#276: FILE: debug/mdb-ia32-proc.h:235:
+extern ULONG TSSDisplayHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#276: FILE: debug/mdb-ia32-proc.h:235:
+extern ULONG TSSDisplayHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <TSSDisplay>
#277: FILE: debug/mdb-ia32-proc.h:236:
+extern ULONG TSSDisplay(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#277: FILE: debug/mdb-ia32-proc.h:236:
+extern ULONG TSSDisplay(BYTE *cmd,

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: debug/mdb-ia32-proc.h:237:
+                    StackFrame *stackFrame, ULONG Exception,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#278: FILE: debug/mdb-ia32-proc.h:237:
+extern ULONG TSSDisplay(BYTE *cmd,
+                    StackFrame *stackFrame, ULONG Exception,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: debug/mdb-ia32-proc.h:237:
+                    StackFrame *stackFrame, ULONG Exception,$

CHECK:CAMELCASE: Avoid CamelCase: <displayEAXHelp>
#281: FILE: debug/mdb-ia32-proc.h:240:
+extern ULONG displayEAXHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#281: FILE: debug/mdb-ia32-proc.h:240:
+extern ULONG displayEAXHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ChangeEAXRegister>
#282: FILE: debug/mdb-ia32-proc.h:241:
+extern ULONG ChangeEAXRegister(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#282: FILE: debug/mdb-ia32-proc.h:241:
+extern ULONG ChangeEAXRegister(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#283: FILE: debug/mdb-ia32-proc.h:242:
+extern ULONG ChangeEAXRegister(BYTE *cmd,
+		       StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <ChangeORIGEAXRegister>
#285: FILE: debug/mdb-ia32-proc.h:244:
+extern ULONG ChangeORIGEAXRegister(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#285: FILE: debug/mdb-ia32-proc.h:244:
+extern ULONG ChangeORIGEAXRegister(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#286: FILE: debug/mdb-ia32-proc.h:245:
+extern ULONG ChangeORIGEAXRegister(BYTE *cmd,
+		       StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayEBXHelp>
#289: FILE: debug/mdb-ia32-proc.h:248:
+extern ULONG displayEBXHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#289: FILE: debug/mdb-ia32-proc.h:248:
+extern ULONG displayEBXHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ChangeEBXRegister>
#290: FILE: debug/mdb-ia32-proc.h:249:
+extern ULONG ChangeEBXRegister(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#290: FILE: debug/mdb-ia32-proc.h:249:
+extern ULONG ChangeEBXRegister(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#291: FILE: debug/mdb-ia32-proc.h:250:
+extern ULONG ChangeEBXRegister(BYTE *cmd,
+		       StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayECXHelp>
#294: FILE: debug/mdb-ia32-proc.h:253:
+extern ULONG displayECXHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#294: FILE: debug/mdb-ia32-proc.h:253:
+extern ULONG displayECXHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ChangeECXRegister>
#295: FILE: debug/mdb-ia32-proc.h:254:
+extern ULONG ChangeECXRegister(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#295: FILE: debug/mdb-ia32-proc.h:254:
+extern ULONG ChangeECXRegister(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#296: FILE: debug/mdb-ia32-proc.h:255:
+extern ULONG ChangeECXRegister(BYTE *cmd,
+		       StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayEDXHelp>
#299: FILE: debug/mdb-ia32-proc.h:258:
+extern ULONG displayEDXHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#299: FILE: debug/mdb-ia32-proc.h:258:
+extern ULONG displayEDXHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ChangeEDXRegister>
#300: FILE: debug/mdb-ia32-proc.h:259:
+extern ULONG ChangeEDXRegister(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#300: FILE: debug/mdb-ia32-proc.h:259:
+extern ULONG ChangeEDXRegister(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#301: FILE: debug/mdb-ia32-proc.h:260:
+extern ULONG ChangeEDXRegister(BYTE *cmd,
+		       StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayESIHelp>
#304: FILE: debug/mdb-ia32-proc.h:263:
+extern ULONG displayESIHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#304: FILE: debug/mdb-ia32-proc.h:263:
+extern ULONG displayESIHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ChangeESIRegister>
#305: FILE: debug/mdb-ia32-proc.h:264:
+extern ULONG ChangeESIRegister(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#305: FILE: debug/mdb-ia32-proc.h:264:
+extern ULONG ChangeESIRegister(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: debug/mdb-ia32-proc.h:265:
+extern ULONG ChangeESIRegister(BYTE *cmd,
+		       StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayEDIHelp>
#309: FILE: debug/mdb-ia32-proc.h:268:
+extern ULONG displayEDIHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#309: FILE: debug/mdb-ia32-proc.h:268:
+extern ULONG displayEDIHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ChangeEDIRegister>
#310: FILE: debug/mdb-ia32-proc.h:269:
+extern ULONG ChangeEDIRegister(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#310: FILE: debug/mdb-ia32-proc.h:269:
+extern ULONG ChangeEDIRegister(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#311: FILE: debug/mdb-ia32-proc.h:270:
+extern ULONG ChangeEDIRegister(BYTE *cmd,
+		       StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayEBPHelp>
#314: FILE: debug/mdb-ia32-proc.h:273:
+extern ULONG displayEBPHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#314: FILE: debug/mdb-ia32-proc.h:273:
+extern ULONG displayEBPHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ChangeEBPRegister>
#315: FILE: debug/mdb-ia32-proc.h:274:
+extern ULONG ChangeEBPRegister(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#315: FILE: debug/mdb-ia32-proc.h:274:
+extern ULONG ChangeEBPRegister(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#316: FILE: debug/mdb-ia32-proc.h:275:
+extern ULONG ChangeEBPRegister(BYTE *cmd,
+	       StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayESPHelp>
#319: FILE: debug/mdb-ia32-proc.h:278:
+extern ULONG displayESPHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#319: FILE: debug/mdb-ia32-proc.h:278:
+extern ULONG displayESPHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ChangeESPRegister>
#320: FILE: debug/mdb-ia32-proc.h:279:
+extern ULONG ChangeESPRegister(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#320: FILE: debug/mdb-ia32-proc.h:279:
+extern ULONG ChangeESPRegister(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#321: FILE: debug/mdb-ia32-proc.h:280:
+extern ULONG ChangeESPRegister(BYTE *cmd,
+		       StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayEIPHelp>
#324: FILE: debug/mdb-ia32-proc.h:283:
+extern ULONG displayEIPHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#324: FILE: debug/mdb-ia32-proc.h:283:
+extern ULONG displayEIPHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ChangeEIPRegister>
#325: FILE: debug/mdb-ia32-proc.h:284:
+extern ULONG ChangeEIPRegister(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#325: FILE: debug/mdb-ia32-proc.h:284:
+extern ULONG ChangeEIPRegister(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#326: FILE: debug/mdb-ia32-proc.h:285:
+extern ULONG ChangeEIPRegister(BYTE *cmd,
+		       StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayCSHelp>
#329: FILE: debug/mdb-ia32-proc.h:288:
+extern ULONG displayCSHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#329: FILE: debug/mdb-ia32-proc.h:288:
+extern ULONG displayCSHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ChangeCSRegister>
#330: FILE: debug/mdb-ia32-proc.h:289:
+extern ULONG ChangeCSRegister(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#330: FILE: debug/mdb-ia32-proc.h:289:
+extern ULONG ChangeCSRegister(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#331: FILE: debug/mdb-ia32-proc.h:290:
+extern ULONG ChangeCSRegister(BYTE *cmd,
+		      StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayDSHelp>
#334: FILE: debug/mdb-ia32-proc.h:293:
+extern ULONG displayDSHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#334: FILE: debug/mdb-ia32-proc.h:293:
+extern ULONG displayDSHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ChangeDSRegister>
#335: FILE: debug/mdb-ia32-proc.h:294:
+extern ULONG ChangeDSRegister(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#335: FILE: debug/mdb-ia32-proc.h:294:
+extern ULONG ChangeDSRegister(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#336: FILE: debug/mdb-ia32-proc.h:295:
+extern ULONG ChangeDSRegister(BYTE *cmd,
+		      StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayESHelp>
#339: FILE: debug/mdb-ia32-proc.h:298:
+extern ULONG displayESHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#339: FILE: debug/mdb-ia32-proc.h:298:
+extern ULONG displayESHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ChangeESRegister>
#340: FILE: debug/mdb-ia32-proc.h:299:
+extern ULONG ChangeESRegister(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#340: FILE: debug/mdb-ia32-proc.h:299:
+extern ULONG ChangeESRegister(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#341: FILE: debug/mdb-ia32-proc.h:300:
+extern ULONG ChangeESRegister(BYTE *cmd,
+		      StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayFSHelp>
#344: FILE: debug/mdb-ia32-proc.h:303:
+extern ULONG displayFSHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#344: FILE: debug/mdb-ia32-proc.h:303:
+extern ULONG displayFSHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ChangeFSRegister>
#345: FILE: debug/mdb-ia32-proc.h:304:
+extern ULONG ChangeFSRegister(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#345: FILE: debug/mdb-ia32-proc.h:304:
+extern ULONG ChangeFSRegister(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#346: FILE: debug/mdb-ia32-proc.h:305:
+extern ULONG ChangeFSRegister(BYTE *cmd,
+		      StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayGSHelp>
#349: FILE: debug/mdb-ia32-proc.h:308:
+extern ULONG displayGSHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#349: FILE: debug/mdb-ia32-proc.h:308:
+extern ULONG displayGSHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ChangeGSRegister>
#350: FILE: debug/mdb-ia32-proc.h:309:
+extern ULONG ChangeGSRegister(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#350: FILE: debug/mdb-ia32-proc.h:309:
+extern ULONG ChangeGSRegister(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#351: FILE: debug/mdb-ia32-proc.h:310:
+extern ULONG ChangeGSRegister(BYTE *cmd,
+		      StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displaySSHelp>
#354: FILE: debug/mdb-ia32-proc.h:313:
+extern ULONG displaySSHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#354: FILE: debug/mdb-ia32-proc.h:313:
+extern ULONG displaySSHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ChangeSSRegister>
#355: FILE: debug/mdb-ia32-proc.h:314:
+extern ULONG ChangeSSRegister(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#355: FILE: debug/mdb-ia32-proc.h:314:
+extern ULONG ChangeSSRegister(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#356: FILE: debug/mdb-ia32-proc.h:315:
+extern ULONG ChangeSSRegister(BYTE *cmd,
+		      StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayRFHelp>
#359: FILE: debug/mdb-ia32-proc.h:318:
+extern ULONG displayRFHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#359: FILE: debug/mdb-ia32-proc.h:318:
+extern ULONG displayRFHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ChangeRFFlag>
#360: FILE: debug/mdb-ia32-proc.h:319:
+extern ULONG ChangeRFFlag(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#360: FILE: debug/mdb-ia32-proc.h:319:
+extern ULONG ChangeRFFlag(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#361: FILE: debug/mdb-ia32-proc.h:320:
+extern ULONG ChangeRFFlag(BYTE *cmd,
+		  StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayTFHelp>
#364: FILE: debug/mdb-ia32-proc.h:323:
+extern ULONG displayTFHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#364: FILE: debug/mdb-ia32-proc.h:323:
+extern ULONG displayTFHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ChangeTFFlag>
#365: FILE: debug/mdb-ia32-proc.h:324:
+extern ULONG ChangeTFFlag(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#365: FILE: debug/mdb-ia32-proc.h:324:
+extern ULONG ChangeTFFlag(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#366: FILE: debug/mdb-ia32-proc.h:325:
+extern ULONG ChangeTFFlag(BYTE *cmd,
+		  StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayZFHelp>
#369: FILE: debug/mdb-ia32-proc.h:328:
+extern ULONG displayZFHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#369: FILE: debug/mdb-ia32-proc.h:328:
+extern ULONG displayZFHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ChangeZFFlag>
#370: FILE: debug/mdb-ia32-proc.h:329:
+extern ULONG ChangeZFFlag(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#370: FILE: debug/mdb-ia32-proc.h:329:
+extern ULONG ChangeZFFlag(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#371: FILE: debug/mdb-ia32-proc.h:330:
+extern ULONG ChangeZFFlag(BYTE *cmd,
+		  StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displaySFHelp>
#374: FILE: debug/mdb-ia32-proc.h:333:
+extern ULONG displaySFHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#374: FILE: debug/mdb-ia32-proc.h:333:
+extern ULONG displaySFHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ChangeSFFlag>
#375: FILE: debug/mdb-ia32-proc.h:334:
+extern ULONG ChangeSFFlag(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#375: FILE: debug/mdb-ia32-proc.h:334:
+extern ULONG ChangeSFFlag(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#376: FILE: debug/mdb-ia32-proc.h:335:
+extern ULONG ChangeSFFlag(BYTE *cmd,
+		  StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayPFHelp>
#379: FILE: debug/mdb-ia32-proc.h:338:
+extern ULONG displayPFHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#379: FILE: debug/mdb-ia32-proc.h:338:
+extern ULONG displayPFHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ChangePFFlag>
#380: FILE: debug/mdb-ia32-proc.h:339:
+extern ULONG ChangePFFlag(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#380: FILE: debug/mdb-ia32-proc.h:339:
+extern ULONG ChangePFFlag(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#381: FILE: debug/mdb-ia32-proc.h:340:
+extern ULONG ChangePFFlag(BYTE *cmd,
+		  StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayCFHelp>
#384: FILE: debug/mdb-ia32-proc.h:343:
+extern ULONG displayCFHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#384: FILE: debug/mdb-ia32-proc.h:343:
+extern ULONG displayCFHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ChangeCFFlag>
#385: FILE: debug/mdb-ia32-proc.h:344:
+extern ULONG ChangeCFFlag(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#385: FILE: debug/mdb-ia32-proc.h:344:
+extern ULONG ChangeCFFlag(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#386: FILE: debug/mdb-ia32-proc.h:345:
+extern ULONG ChangeCFFlag(BYTE *cmd,
+		  StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayOFHelp>
#389: FILE: debug/mdb-ia32-proc.h:348:
+extern ULONG displayOFHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#389: FILE: debug/mdb-ia32-proc.h:348:
+extern ULONG displayOFHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ChangeOFFlag>
#390: FILE: debug/mdb-ia32-proc.h:349:
+extern ULONG ChangeOFFlag(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#390: FILE: debug/mdb-ia32-proc.h:349:
+extern ULONG ChangeOFFlag(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#391: FILE: debug/mdb-ia32-proc.h:350:
+extern ULONG ChangeOFFlag(BYTE *cmd,
+		  StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayIFHelp>
#394: FILE: debug/mdb-ia32-proc.h:353:
+extern ULONG displayIFHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#394: FILE: debug/mdb-ia32-proc.h:353:
+extern ULONG displayIFHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ChangeIFFlag>
#395: FILE: debug/mdb-ia32-proc.h:354:
+extern ULONG ChangeIFFlag(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#395: FILE: debug/mdb-ia32-proc.h:354:
+extern ULONG ChangeIFFlag(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#396: FILE: debug/mdb-ia32-proc.h:355:
+extern ULONG ChangeIFFlag(BYTE *cmd,
+		  StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayIDHelp>
#399: FILE: debug/mdb-ia32-proc.h:358:
+extern ULONG displayIDHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#399: FILE: debug/mdb-ia32-proc.h:358:
+extern ULONG displayIDHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ChangeIDFlag>
#400: FILE: debug/mdb-ia32-proc.h:359:
+extern ULONG ChangeIDFlag(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#400: FILE: debug/mdb-ia32-proc.h:359:
+extern ULONG ChangeIDFlag(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#401: FILE: debug/mdb-ia32-proc.h:360:
+extern ULONG ChangeIDFlag(BYTE *cmd,
+		  StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayDFHelp>
#404: FILE: debug/mdb-ia32-proc.h:363:
+extern ULONG displayDFHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#404: FILE: debug/mdb-ia32-proc.h:363:
+extern ULONG displayDFHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ChangeDFFlag>
#405: FILE: debug/mdb-ia32-proc.h:364:
+extern ULONG ChangeDFFlag(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#405: FILE: debug/mdb-ia32-proc.h:364:
+extern ULONG ChangeDFFlag(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#406: FILE: debug/mdb-ia32-proc.h:365:
+extern ULONG ChangeDFFlag(BYTE *cmd,
+		  StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayNTHelp>
#409: FILE: debug/mdb-ia32-proc.h:368:
+extern ULONG displayNTHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#409: FILE: debug/mdb-ia32-proc.h:368:
+extern ULONG displayNTHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ChangeNTFlag>
#410: FILE: debug/mdb-ia32-proc.h:369:
+extern ULONG ChangeNTFlag(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#410: FILE: debug/mdb-ia32-proc.h:369:
+extern ULONG ChangeNTFlag(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#411: FILE: debug/mdb-ia32-proc.h:370:
+extern ULONG ChangeNTFlag(BYTE *cmd,
+		  StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayVMHelp>
#414: FILE: debug/mdb-ia32-proc.h:373:
+extern ULONG displayVMHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#414: FILE: debug/mdb-ia32-proc.h:373:
+extern ULONG displayVMHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ChangeVMFlag>
#415: FILE: debug/mdb-ia32-proc.h:374:
+extern ULONG ChangeVMFlag(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#415: FILE: debug/mdb-ia32-proc.h:374:
+extern ULONG ChangeVMFlag(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#416: FILE: debug/mdb-ia32-proc.h:375:
+extern ULONG ChangeVMFlag(BYTE *cmd,
+	       StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayVIFHelp>
#419: FILE: debug/mdb-ia32-proc.h:378:
+extern ULONG displayVIFHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#419: FILE: debug/mdb-ia32-proc.h:378:
+extern ULONG displayVIFHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ChangeVIFFlag>
#420: FILE: debug/mdb-ia32-proc.h:379:
+extern ULONG ChangeVIFFlag(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#420: FILE: debug/mdb-ia32-proc.h:379:
+extern ULONG ChangeVIFFlag(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#421: FILE: debug/mdb-ia32-proc.h:380:
+extern ULONG ChangeVIFFlag(BYTE *cmd,
+		   StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayVIPHelp>
#424: FILE: debug/mdb-ia32-proc.h:383:
+extern ULONG displayVIPHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#424: FILE: debug/mdb-ia32-proc.h:383:
+extern ULONG displayVIPHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ChangeVIPFlag>
#425: FILE: debug/mdb-ia32-proc.h:384:
+extern ULONG ChangeVIPFlag(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#425: FILE: debug/mdb-ia32-proc.h:384:
+extern ULONG ChangeVIPFlag(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#426: FILE: debug/mdb-ia32-proc.h:385:
+extern ULONG ChangeVIPFlag(BYTE *cmd,
+		   StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayAFHelp>
#429: FILE: debug/mdb-ia32-proc.h:388:
+extern ULONG displayAFHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#429: FILE: debug/mdb-ia32-proc.h:388:
+extern ULONG displayAFHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ChangeAFFlag>
#430: FILE: debug/mdb-ia32-proc.h:389:
+extern ULONG ChangeAFFlag(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#430: FILE: debug/mdb-ia32-proc.h:389:
+extern ULONG ChangeAFFlag(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#431: FILE: debug/mdb-ia32-proc.h:390:
+extern ULONG ChangeAFFlag(BYTE *cmd,
+		  StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayACHelp>
#434: FILE: debug/mdb-ia32-proc.h:393:
+extern ULONG displayACHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#434: FILE: debug/mdb-ia32-proc.h:393:
+extern ULONG displayACHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <ChangeACFlag>
#435: FILE: debug/mdb-ia32-proc.h:394:
+extern ULONG ChangeACFlag(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#435: FILE: debug/mdb-ia32-proc.h:394:
+extern ULONG ChangeACFlag(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#436: FILE: debug/mdb-ia32-proc.h:395:
+extern ULONG ChangeACFlag(BYTE *cmd,
+		  StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayMTRRHelp>
#439: FILE: debug/mdb-ia32-proc.h:398:
+extern ULONG displayMTRRHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#439: FILE: debug/mdb-ia32-proc.h:398:
+extern ULONG displayMTRRHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <DisplayMTRRRegisters>
#440: FILE: debug/mdb-ia32-proc.h:399:
+extern ULONG DisplayMTRRRegisters(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#440: FILE: debug/mdb-ia32-proc.h:399:
+extern ULONG DisplayMTRRRegisters(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#441: FILE: debug/mdb-ia32-proc.h:400:
+extern ULONG DisplayMTRRRegisters(BYTE *cmd,
+			  StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayGDTHelp>
#444: FILE: debug/mdb-ia32-proc.h:403:
+extern ULONG displayGDTHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#444: FILE: debug/mdb-ia32-proc.h:403:
+extern ULONG displayGDTHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <displayGDT>
#445: FILE: debug/mdb-ia32-proc.h:404:
+extern ULONG displayGDT(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#445: FILE: debug/mdb-ia32-proc.h:404:
+extern ULONG displayGDT(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#446: FILE: debug/mdb-ia32-proc.h:405:
+extern ULONG displayGDT(BYTE *cmd,
+		StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayIDTHelp>
#449: FILE: debug/mdb-ia32-proc.h:408:
+extern ULONG displayIDTHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#449: FILE: debug/mdb-ia32-proc.h:408:
+extern ULONG displayIDTHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <displayIDT>
#450: FILE: debug/mdb-ia32-proc.h:409:
+extern ULONG displayIDT(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#450: FILE: debug/mdb-ia32-proc.h:409:
+extern ULONG displayIDT(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#451: FILE: debug/mdb-ia32-proc.h:410:
+extern ULONG displayIDT(BYTE *cmd,
+		   StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <evaluateExpressionHelp>
#454: FILE: debug/mdb-ia32-proc.h:413:
+extern ULONG evaluateExpressionHelp(BYTE *commandLine, DEBUGGER_PARSER

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#454: FILE: debug/mdb-ia32-proc.h:413:
+extern ULONG evaluateExpressionHelp(BYTE *commandLine, DEBUGGER_PARSER

CHECK:CAMELCASE: Avoid CamelCase: <evaluateExpression>
#456: FILE: debug/mdb-ia32-proc.h:414:
+extern ULONG evaluateExpression(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#456: FILE: debug/mdb-ia32-proc.h:414:
+extern ULONG evaluateExpression(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#457: FILE: debug/mdb-ia32-proc.h:415:
+extern ULONG evaluateExpression(BYTE *cmd,
+		   StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <displayDOSTableHelp>
#460: FILE: debug/mdb-ia32-proc.h:418:
+extern ULONG displayDOSTableHelp(BYTE *commandLine, DEBUGGER_PARSER

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#460: FILE: debug/mdb-ia32-proc.h:418:
+extern ULONG displayDOSTableHelp(BYTE *commandLine, DEBUGGER_PARSER

CHECK:CAMELCASE: Avoid CamelCase: <displayDOSTable>
#462: FILE: debug/mdb-ia32-proc.h:419:
+extern ULONG displayDOSTable(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#462: FILE: debug/mdb-ia32-proc.h:419:
+extern ULONG displayDOSTable(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#463: FILE: debug/mdb-ia32-proc.h:420:
+extern ULONG displayDOSTable(BYTE *cmd,
+		   StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <portCommandHelp>
#466: FILE: debug/mdb-ia32-proc.h:423:
+extern ULONG portCommandHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#466: FILE: debug/mdb-ia32-proc.h:423:
+extern ULONG portCommandHelp(BYTE *commandLine, DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <inputWordPort>
#467: FILE: debug/mdb-ia32-proc.h:424:
+extern ULONG inputWordPort(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#467: FILE: debug/mdb-ia32-proc.h:424:
+extern ULONG inputWordPort(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#468: FILE: debug/mdb-ia32-proc.h:425:
+extern ULONG inputWordPort(BYTE *cmd,
+		   StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <inputDoublePort>
#470: FILE: debug/mdb-ia32-proc.h:427:
+extern ULONG inputDoublePort(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#470: FILE: debug/mdb-ia32-proc.h:427:
+extern ULONG inputDoublePort(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#471: FILE: debug/mdb-ia32-proc.h:428:
+extern ULONG inputDoublePort(BYTE *cmd,
+		   StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <inputBytePort>
#473: FILE: debug/mdb-ia32-proc.h:430:
+extern ULONG inputBytePort(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#473: FILE: debug/mdb-ia32-proc.h:430:
+extern ULONG inputBytePort(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#474: FILE: debug/mdb-ia32-proc.h:431:
+extern ULONG inputBytePort(BYTE *cmd,
+		   StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <inputPort>
#476: FILE: debug/mdb-ia32-proc.h:433:
+extern ULONG inputPort(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#476: FILE: debug/mdb-ia32-proc.h:433:
+extern ULONG inputPort(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#477: FILE: debug/mdb-ia32-proc.h:434:
+extern ULONG inputPort(BYTE *cmd,
+		   StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <outputWordPort>
#479: FILE: debug/mdb-ia32-proc.h:436:
+extern ULONG outputWordPort(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#479: FILE: debug/mdb-ia32-proc.h:436:
+extern ULONG outputWordPort(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#480: FILE: debug/mdb-ia32-proc.h:437:
+extern ULONG outputWordPort(BYTE *cmd,
+		   StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <outputDoublePort>
#482: FILE: debug/mdb-ia32-proc.h:439:
+extern ULONG outputDoublePort(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#482: FILE: debug/mdb-ia32-proc.h:439:
+extern ULONG outputDoublePort(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#483: FILE: debug/mdb-ia32-proc.h:440:
+extern ULONG outputDoublePort(BYTE *cmd,
+		   StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <outputBytePort>
#485: FILE: debug/mdb-ia32-proc.h:442:
+extern ULONG outputBytePort(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#485: FILE: debug/mdb-ia32-proc.h:442:
+extern ULONG outputBytePort(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#486: FILE: debug/mdb-ia32-proc.h:443:
+extern ULONG outputBytePort(BYTE *cmd,
+		   StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <outputPort>
#488: FILE: debug/mdb-ia32-proc.h:445:
+extern ULONG outputPort(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#488: FILE: debug/mdb-ia32-proc.h:445:
+extern ULONG outputPort(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#489: FILE: debug/mdb-ia32-proc.h:446:
+extern ULONG outputPort(BYTE *cmd,
+		   StackFrame *stackFrame, ULONG Exception,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#492: FILE: debug/mdb-ia32-proc.h:449:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <breakpointCommandHelp>
#493: FILE: debug/mdb-ia32-proc.h:450:
+extern ULONG breakpointCommandHelp(BYTE *commandLine, DEBUGGER_PARSER

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#493: FILE: debug/mdb-ia32-proc.h:450:
+extern ULONG breakpointCommandHelp(BYTE *commandLine, DEBUGGER_PARSER

CHECK:CAMELCASE: Avoid CamelCase: <breakpointClearAll>
#495: FILE: debug/mdb-ia32-proc.h:451:
+extern ULONG breakpointClearAll(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#495: FILE: debug/mdb-ia32-proc.h:451:
+extern ULONG breakpointClearAll(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#496: FILE: debug/mdb-ia32-proc.h:452:
+extern ULONG breakpointClearAll(BYTE *cmd,
+			StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <breakpointClear>
#498: FILE: debug/mdb-ia32-proc.h:454:
+extern ULONG breakpointClear(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#498: FILE: debug/mdb-ia32-proc.h:454:
+extern ULONG breakpointClear(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#499: FILE: debug/mdb-ia32-proc.h:455:
+extern ULONG breakpointClear(BYTE *cmd,
+		     StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <breakpointMask>
#501: FILE: debug/mdb-ia32-proc.h:457:
+extern ULONG breakpointMask(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#501: FILE: debug/mdb-ia32-proc.h:457:
+extern ULONG breakpointMask(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#502: FILE: debug/mdb-ia32-proc.h:458:
+extern ULONG breakpointMask(BYTE *cmd,
+		    StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <breakpointWord1>
#504: FILE: debug/mdb-ia32-proc.h:460:
+extern ULONG breakpointWord1(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#504: FILE: debug/mdb-ia32-proc.h:460:
+extern ULONG breakpointWord1(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#505: FILE: debug/mdb-ia32-proc.h:461:
+extern ULONG breakpointWord1(BYTE *cmd,
+		     StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <breakpointWord2>
#507: FILE: debug/mdb-ia32-proc.h:463:
+extern ULONG breakpointWord2(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#507: FILE: debug/mdb-ia32-proc.h:463:
+extern ULONG breakpointWord2(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#508: FILE: debug/mdb-ia32-proc.h:464:
+extern ULONG breakpointWord2(BYTE *cmd,
+		     StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <breakpointWord4>
#510: FILE: debug/mdb-ia32-proc.h:466:
+extern ULONG breakpointWord4(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#510: FILE: debug/mdb-ia32-proc.h:466:
+extern ULONG breakpointWord4(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#511: FILE: debug/mdb-ia32-proc.h:467:
+extern ULONG breakpointWord4(BYTE *cmd,
+		     StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <breakpointWord>
#513: FILE: debug/mdb-ia32-proc.h:469:
+extern ULONG breakpointWord(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#513: FILE: debug/mdb-ia32-proc.h:469:
+extern ULONG breakpointWord(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#514: FILE: debug/mdb-ia32-proc.h:470:
+extern ULONG breakpointWord(BYTE *cmd,
+		    StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <breakpointRead1>
#516: FILE: debug/mdb-ia32-proc.h:472:
+extern ULONG breakpointRead1(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#516: FILE: debug/mdb-ia32-proc.h:472:
+extern ULONG breakpointRead1(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#517: FILE: debug/mdb-ia32-proc.h:473:
+extern ULONG breakpointRead1(BYTE *cmd,
+		     StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <breakpointRead2>
#519: FILE: debug/mdb-ia32-proc.h:475:
+extern ULONG breakpointRead2(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#519: FILE: debug/mdb-ia32-proc.h:475:
+extern ULONG breakpointRead2(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#520: FILE: debug/mdb-ia32-proc.h:476:
+extern ULONG breakpointRead2(BYTE *cmd,
+		     StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <breakpointRead4>
#522: FILE: debug/mdb-ia32-proc.h:478:
+extern ULONG breakpointRead4(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#522: FILE: debug/mdb-ia32-proc.h:478:
+extern ULONG breakpointRead4(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#523: FILE: debug/mdb-ia32-proc.h:479:
+extern ULONG breakpointRead4(BYTE *cmd,
+		   StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <breakpointRead>
#525: FILE: debug/mdb-ia32-proc.h:481:
+extern ULONG breakpointRead(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#525: FILE: debug/mdb-ia32-proc.h:481:
+extern ULONG breakpointRead(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#526: FILE: debug/mdb-ia32-proc.h:482:
+extern ULONG breakpointRead(BYTE *cmd,
+		   StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <breakpointIO1>
#528: FILE: debug/mdb-ia32-proc.h:484:
+extern ULONG breakpointIO1(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#528: FILE: debug/mdb-ia32-proc.h:484:
+extern ULONG breakpointIO1(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#529: FILE: debug/mdb-ia32-proc.h:485:
+extern ULONG breakpointIO1(BYTE *cmd,
+		   StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <breakpointIO2>
#531: FILE: debug/mdb-ia32-proc.h:487:
+extern ULONG breakpointIO2(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#531: FILE: debug/mdb-ia32-proc.h:487:
+extern ULONG breakpointIO2(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#532: FILE: debug/mdb-ia32-proc.h:488:
+extern ULONG breakpointIO2(BYTE *cmd,
+		   StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <breakpointIO4>
#534: FILE: debug/mdb-ia32-proc.h:490:
+extern ULONG breakpointIO4(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#534: FILE: debug/mdb-ia32-proc.h:490:
+extern ULONG breakpointIO4(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#535: FILE: debug/mdb-ia32-proc.h:491:
+extern ULONG breakpointIO4(BYTE *cmd,
+		   StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <breakpointIO>
#537: FILE: debug/mdb-ia32-proc.h:493:
+extern ULONG breakpointIO(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#537: FILE: debug/mdb-ia32-proc.h:493:
+extern ULONG breakpointIO(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#538: FILE: debug/mdb-ia32-proc.h:494:
+extern ULONG breakpointIO(BYTE *cmd,
+		   StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <breakpointExecute>
#540: FILE: debug/mdb-ia32-proc.h:496:
+extern ULONG breakpointExecute(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#540: FILE: debug/mdb-ia32-proc.h:496:
+extern ULONG breakpointExecute(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#541: FILE: debug/mdb-ia32-proc.h:497:
+extern ULONG breakpointExecute(BYTE *cmd,
+		   StackFrame *stackFrame, ULONG Exception,

CHECK:CAMELCASE: Avoid CamelCase: <breakpointShowTemp>
#543: FILE: debug/mdb-ia32-proc.h:499:
+extern ULONG breakpointShowTemp(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#543: FILE: debug/mdb-ia32-proc.h:499:
+extern ULONG breakpointShowTemp(BYTE *cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#544: FILE: debug/mdb-ia32-proc.h:500:
+extern ULONG breakpointShowTemp(BYTE *cmd,
+			StackFrame *stackFrame, ULONG Exception,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#546: FILE: debug/mdb-ia32-proc.h:502:
+extern ULONG dump_ef(BYTE *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#549: FILE: debug/mdb-ia32-proc.h:505:
+extern ULONG dump_uf(BYTE *cmd,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000245334.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 47 warnings, 398 checks, 527 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000245334.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
