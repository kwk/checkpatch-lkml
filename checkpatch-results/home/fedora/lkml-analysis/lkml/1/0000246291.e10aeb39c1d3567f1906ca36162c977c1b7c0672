CHECK:LINE_SPACING: Please don't use multiple blank lines
#106: FILE: arch/x86/kernel/io_apic_32.c:409:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: arch/x86/kernel/io_apic_32.c:412:
+        struct dyn_array *da = data;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: arch/x86/kernel/io_apic_32.c:412:
+        struct dyn_array *da = data;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: arch/x86/kernel/io_apic_32.c:414:
+        int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: arch/x86/kernel/io_apic_32.c:414:
+        int i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: arch/x86/kernel/io_apic_32.c:415:
+        struct  balance_irq_affinity *affinity;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: arch/x86/kernel/io_apic_32.c:415:
+        struct  balance_irq_affinity *affinity;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: arch/x86/kernel/io_apic_32.c:417:
+        affinity = *da->name;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: arch/x86/kernel/io_apic_32.c:417:
+        affinity = *da->name;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: arch/x86/kernel/io_apic_32.c:419:
+        for (i = 0; i < *da->nr; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: arch/x86/kernel/io_apic_32.c:419:
+        for (i = 0; i < *da->nr; i++)$

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#117: FILE: arch/x86/kernel/io_apic_32.c:420:
+                memcpy(&affinity[i], &balance_irq_affinity_init, sizeof(struct balance_irq_affinity));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: arch/x86/kernel/io_apic_32.c:420:
+                memcpy(&affinity[i], &balance_irq_affinity_init, sizeof(struct balance_irq_affinity));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: arch/x86/kernel/io_apic_32.c:420:
+                memcpy(&affinity[i], &balance_irq_affinity_init, sizeof(struct balance_irq_affinity));$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#119: FILE: arch/x86/kernel/io_apic_32.c:422:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#121: FILE: arch/x86/kernel/io_apic_32.c:424:
+DEFINE_DYN_ARRAY(balance_irq_affinity, sizeof(struct balance_irq_affinity), nr_irqs, PAGE_SIZE, irq_affinity_init_work);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#153: FILE: arch/x86/kernel/io_apic_32.c:1211:
+	BUG_ON((unsigned)irq >= nr_irqs);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#153: FILE: arch/x86/kernel/io_apic_32.c:1211:
+	BUG_ON((unsigned)irq >= nr_irqs);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000246291.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 10 warnings, 2 checks, 109 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000246291.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
