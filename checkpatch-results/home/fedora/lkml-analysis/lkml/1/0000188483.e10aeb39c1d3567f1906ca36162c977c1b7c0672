CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#238: FILE: include/linux/security.h:51:
+extern int cap_capable(int cap, int audit);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#239: FILE: include/linux/security.h:52:
+extern int cap_task_capable(struct task_struct *tsk, const struct cred *cred,

WARNING:SPACING: Unnecessary space before function pointer arguments
#269: FILE: include/linux/security.h:1304:
+	int (*capable) (int cap, int audit);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#270: FILE: include/linux/security.h:1305:
+	int (*task_capable) (struct task_struct *tsk, const struct cred *cred,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#421: FILE: security/commoncap.c:888:
 		    || (arg2 & ~(SECURE_ALL_LOCKS | SECURE_ALL_BITS))	/*[3]*/
+		    || (cap_capable(CAP_SETPCAP, SECURITY_CAP_AUDIT) != 0) /*[4]*/

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#570: FILE: security/smack/smack_lsm.c:2631:
+^I.task_capable = ^I^Icap_task_capable,$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000188483.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 3 checks, 317 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000188483.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
