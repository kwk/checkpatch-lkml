WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
 (1) The ability to request and release cache tags - names by which a cache may

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#68: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#73: FILE: fs/fscache/cache.c:1:
+/* FS-Cache cache handling

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#164: FILE: fs/fscache/cache.c:92:
+struct fscache_cache *fscache_select_cache_for_object(

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#182: FILE: fs/fscache/cache.c:110:
+	 * cache */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#252: FILE: fs/fscache/internal.h:36:
+extern struct fscache_cache *fscache_select_cache_for_object(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#252: FILE: fs/fscache/internal.h:36:
+extern struct fscache_cache *fscache_select_cache_for_object(

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fscache_cookie *' should also have an identifier name
#252: FILE: fs/fscache/internal.h:36:
+extern struct fscache_cache *fscache_select_cache_for_object(

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#269: FILE: fs/fscache/internal.h:186:
+				       unsigned event)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#271: FILE: fs/fscache/internal.h:188:
+	BUG();  // TODO

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#285: FILE: include/linux/fscache.h:176:
+extern struct fscache_cache_tag *__fscache_lookup_cache_tag(const char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#285: FILE: include/linux/fscache.h:176:
+extern struct fscache_cache_tag *__fscache_lookup_cache_tag(const char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#286: FILE: include/linux/fscache.h:177:
+extern void __fscache_release_cache_tag(struct fscache_cache_tag *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fscache_cache_tag *' should also have an identifier name
#286: FILE: include/linux/fscache.h:177:
+extern void __fscache_release_cache_tag(struct fscache_cache_tag *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000144562.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 5 checks, 232 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000144562.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
