WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#48: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#53: FILE: drivers/infiniband/hw/mlx4/ah.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SIZEOF_PARENTHESIS: sizeof *ah should be sizeof(*ah)
#92: FILE: drivers/infiniband/hw/mlx4/ah.c:40:
+	ah = kmalloc(sizeof *ah, GFP_ATOMIC);

WARNING:SIZEOF_PARENTHESIS: sizeof ah->av should be sizeof(ah->av)
#96: FILE: drivers/infiniband/hw/mlx4/ah.c:44:
+	memset(&ah->av, 0, sizeof ah->av);

WARNING:SIZEOF_PARENTHESIS: sizeof *ah_attr should be sizeof(*ah_attr)
#125: FILE: drivers/infiniband/hw/mlx4/ah.c:73:
+	memset(ah_attr, 0, sizeof *ah_attr);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#159: FILE: drivers/infiniband/hw/mlx4/cq.c:1:
+/*

WARNING:LINE_SPACING: Missing a blank line after declarations
#200: FILE: drivers/infiniband/hw/mlx4/cq.c:42:
+	struct ib_cq *ibcq = &to_mibcq(cq)->ibcq;
+	ibcq->comp_handler(ibcq, ibcq->cq_context);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#209: FILE: drivers/infiniband/hw/mlx4/cq.c:51:
+		printk(KERN_WARNING "mlx4_ib: Unexpected event type %d "

WARNING:SPLIT_STRING: quoted string split across lines
#210: FILE: drivers/infiniband/hw/mlx4/cq.c:52:
+		printk(KERN_WARNING "mlx4_ib: Unexpected event type %d "
+		       "on CQ %06x\n", type, cq->cqn);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#225: FILE: drivers/infiniband/hw/mlx4/cq.c:67:
+	int offset = n * sizeof (struct mlx4_cqe);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SIZEOF_PARENTHESIS: sizeof *cq should be sizeof(*cq)
#265: FILE: drivers/infiniband/hw/mlx4/cq.c:107:
+	cq = kmalloc(sizeof *cq, GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#271: FILE: drivers/infiniband/hw/mlx4/cq.c:113:
+	buf_size     = entries * sizeof (struct mlx4_cqe);

WARNING:SIZEOF_PARENTHESIS: sizeof ucmd should be sizeof(ucmd)
#277: FILE: drivers/infiniband/hw/mlx4/cq.c:119:
+		if (ib_copy_from_udata(&ucmd, udata, sizeof ucmd)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#340: FILE: drivers/infiniband/hw/mlx4/cq.c:182:
+		if (ib_copy_to_udata(udata, &cq->mcq.cqn, sizeof (__u32))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#358: FILE: drivers/infiniband/hw/mlx4/cq.c:200:
+		mlx4_buf_free(dev->dev, entries * sizeof (struct mlx4_cqe),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#383: FILE: drivers/infiniband/hw/mlx4/cq.c:225:
+		mlx4_buf_free(dev->dev, (cq->cqe + 1) * sizeof (struct mlx4_cqe),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#397: FILE: drivers/infiniband/hw/mlx4/cq.c:239:
+	printk(KERN_DEBUG "CQE contents %08x %08x %08x %08x %08x %08x %08x %08x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#407: FILE: drivers/infiniband/hw/mlx4/cq.c:249:
+		printk(KERN_DEBUG "local QP operation err "

WARNING:SPLIT_STRING: quoted string split across lines
#408: FILE: drivers/infiniband/hw/mlx4/cq.c:250:
+		printk(KERN_DEBUG "local QP operation err "
+		       "(QPN %06x, WQE index %x, vendor syndrome %02x, "

WARNING:SPLIT_STRING: quoted string split across lines
#409: FILE: drivers/infiniband/hw/mlx4/cq.c:251:
+		       "(QPN %06x, WQE index %x, vendor syndrome %02x, "
+		       "opcode = %02x)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#502: FILE: drivers/infiniband/hw/mlx4/cq.c:344:
+			printk(KERN_WARNING "CQ %06x with entry for unknown QPN %06x\n",

CHECK:SPACING: No space is necessary after a cast
#515: FILE: drivers/infiniband/hw/mlx4/cq.c:357:
+		wq->tail += wqe_ctr - (u16) wq->tail;

CHECK:SPACING: No space is necessary after a cast
#530: FILE: drivers/infiniband/hw/mlx4/cq.c:372:
+		mlx4_ib_handle_error_cqe((struct mlx4_err_cqe *) cqe, wc);

CHECK:SPACING: No space is necessary after a cast
#656: FILE: drivers/infiniband/hw/mlx4/cq.c:498:
+	while ((int) --prod_index - (int) cq->mcq.cons_index >= 0) {

WARNING:SIZEOF_PARENTHESIS: sizeof *cqe should be sizeof(*cqe)
#664: FILE: drivers/infiniband/hw/mlx4/cq.c:506:
+			       cqe, sizeof *cqe);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#690: FILE: drivers/infiniband/hw/mlx4/doorbell.c:1:
+/*

WARNING:SIZEOF_PARENTHESIS: sizeof *pgdir should be sizeof(*pgdir)
#739: FILE: drivers/infiniband/hw/mlx4/doorbell.c:50:
+	pgdir = kzalloc(sizeof *pgdir, GFP_KERNEL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#807: FILE: drivers/infiniband/hw/mlx4/doorbell.c:118:
+	BUG_ON(mlx4_ib_alloc_db_from_pgdir(pgdir, db, order));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SIZEOF_PARENTHESIS: sizeof *page should be sizeof(*page)
#863: FILE: drivers/infiniband/hw/mlx4/doorbell.c:174:
+	page = kmalloc(sizeof *page, GFP_KERNEL);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#911: FILE: drivers/infiniband/hw/mlx4/mad.c:1:
+/*

WARNING:TRAILING_SEMICOLON: trailing semicolon indicates no statements, indent implies otherwise
#1022: FILE: drivers/infiniband/hw/mlx4/mad.c:112:
+	if (!err);
+		memcpy(response_mad, outmailbox->buf, 256);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1022: FILE: drivers/infiniband/hw/mlx4/mad.c:112:
+	if (!err);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:SIZEOF_PARENTHESIS: sizeof ah_attr should be sizeof(ah_attr)
#1039: FILE: drivers/infiniband/hw/mlx4/mad.c:129:
+	memset(&ah_attr, 0, sizeof ah_attr);

CHECK:SPACING: No space is necessary after a cast
#1069: FILE: drivers/infiniband/hw/mlx4/mad.c:159:
+				(struct ib_port_info *) ((struct ib_smp *) mad)->data;

ERROR:SPACING: space required before the open parenthesis '('
#1078: FILE: drivers/infiniband/hw/mlx4/mad.c:168:
+			if(pinfo->clientrereg_resv_subnetto & 0x80)

CHECK:SPACING: No space is necessary after a cast
#1103: FILE: drivers/infiniband/hw/mlx4/mad.c:193:
+		memcpy(((struct ib_smp *) mad)->data, dev->node_desc, 64);

WARNING:SIZEOF_PARENTHESIS: sizeof *mad should be sizeof(*mad)
#1125: FILE: drivers/infiniband/hw/mlx4/mad.c:215:
+		memcpy(send_buf->mad, mad, sizeof *mad);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1126: FILE: drivers/infiniband/hw/mlx4/mad.c:216:
+		if ((send_buf->ah = dev->sm_ah[port_num - 1]))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1151: FILE: drivers/infiniband/hw/mlx4/mad.c:241:
+	if (in_mad->mad_hdr.mgmt_class == IB_MGMT_CLASS_SUBN_LID_ROUTED ||
[...]
+	} else if (in_mad->mad_hdr.mgmt_class == IB_MGMT_CLASS_PERF_MGMT ||
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1172: FILE: drivers/infiniband/hw/mlx4/mad.c:262:
+	} else

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1256: FILE: drivers/infiniband/hw/mlx4/mr.c:1:
+/*

WARNING:SIZEOF_PARENTHESIS: sizeof *mr should be sizeof(*mr)
#1304: FILE: drivers/infiniband/hw/mlx4/mr.c:49:
+	mr = kmalloc(sizeof *mr, GFP_KERNEL);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1317: FILE: drivers/infiniband/hw/mlx4/mr.c:62:
+	mr->ibmr.rkey = mr->ibmr.lkey = mr->mmr.key;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: No space is necessary after a cast
#1341: FILE: drivers/infiniband/hw/mlx4/mr.c:86:
+	pages = (u64 *) __get_free_page(GFP_KERNEL);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1345: FILE: drivers/infiniband/hw/mlx4/mr.c:90:
+	i = n = 0;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1358: FILE: drivers/infiniband/hw/mlx4/mr.c:103:
+				if (i == PAGE_SIZE / sizeof (u64) - 2) {

CHECK:SPACING: No space is necessary after a cast
#1373: FILE: drivers/infiniband/hw/mlx4/mr.c:118:
+	free_page((unsigned long) pages);

WARNING:SIZEOF_PARENTHESIS: sizeof *mr should be sizeof(*mr)
#1387: FILE: drivers/infiniband/hw/mlx4/mr.c:132:
+	mr = kmalloc(sizeof *mr, GFP_KERNEL);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1413: FILE: drivers/infiniband/hw/mlx4/mr.c:158:
+	mr->ibmr.rkey = mr->ibmr.lkey = mr->mmr.key;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1446: FILE: drivers/infiniband/hw/mlx4/qp.c:1:
+/*

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be32 should be cpu_to_be32
#1512: FILE: drivers/infiniband/hw/mlx4/qp.c:67:
+	[IB_WR_SEND]			= __constant_cpu_to_be32(MLX4_OPCODE_SEND),

Use of __constant_<foo> form is discouraged for the following functions::

  __constant_cpu_to_be[x]
  __constant_cpu_to_le[x]
  __constant_be[x]_to_cpu
  __constant_le[x]_to_cpu
  __constant_htons
  __constant_ntohs

Using any of these outside of include/uapi/ is not preferred as using the
function without __constant_ is identical when the argument is a
constant.

In big endian systems, the macros like __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to the same expression::

  #define __constant_cpu_to_be32(x) ((__force __be32)(__u32)(x))
  #define __cpu_to_be32(x)          ((__force __be32)(__u32)(x))

In little endian systems, the macros __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to __constant_swab32 and __swab32.  __swab32
has a __builtin_constant_p check::

  #define __swab32(x)				\
    (__builtin_constant_p((__u32)(x)) ?	\
    ___constant_swab32(x) :			\
    __fswab32(x))

So ultimately they have a special case for constants.
Similar is the case with all of the macros in the list.  Thus
using the __constant_... forms are unnecessarily verbose and
not preferred outside of include/uapi.

See: https://lore.kernel.org/lkml/1400106425.12666.6.camel@joe-AO725/

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be32 should be cpu_to_be32
#1513: FILE: drivers/infiniband/hw/mlx4/qp.c:68:
+	[IB_WR_SEND_WITH_IMM]		= __constant_cpu_to_be32(MLX4_OPCODE_SEND_IMM),

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be32 should be cpu_to_be32
#1514: FILE: drivers/infiniband/hw/mlx4/qp.c:69:
+	[IB_WR_RDMA_WRITE]		= __constant_cpu_to_be32(MLX4_OPCODE_RDMA_WRITE),

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be32 should be cpu_to_be32
#1515: FILE: drivers/infiniband/hw/mlx4/qp.c:70:
+	[IB_WR_RDMA_WRITE_WITH_IMM]	= __constant_cpu_to_be32(MLX4_OPCODE_RDMA_WRITE_IMM),

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be32 should be cpu_to_be32
#1516: FILE: drivers/infiniband/hw/mlx4/qp.c:71:
+	[IB_WR_RDMA_READ]		= __constant_cpu_to_be32(MLX4_OPCODE_RDMA_READ),

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be32 should be cpu_to_be32
#1517: FILE: drivers/infiniband/hw/mlx4/qp.c:72:
+	[IB_WR_ATOMIC_CMP_AND_SWP]	= __constant_cpu_to_be32(MLX4_OPCODE_ATOMIC_CS),

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be32 should be cpu_to_be32
#1518: FILE: drivers/infiniband/hw/mlx4/qp.c:73:
+	[IB_WR_ATOMIC_FETCH_AND_ADD]	= __constant_cpu_to_be32(MLX4_OPCODE_ATOMIC_FA),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1594: FILE: drivers/infiniband/hw/mlx4/qp.c:149:
+			printk(KERN_WARNING "mlx4_ib: Unexpected event type %d "

WARNING:SPLIT_STRING: quoted string split across lines
#1595: FILE: drivers/infiniband/hw/mlx4/qp.c:150:
+			printk(KERN_WARNING "mlx4_ib: Unexpected event type %d "
+			       "on QP %06x\n", type, qp->qpn);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1613: FILE: drivers/infiniband/hw/mlx4/qp.c:168:
+		return sizeof (struct mlx4_wqe_ctrl_seg) +

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1614: FILE: drivers/infiniband/hw/mlx4/qp.c:169:
+			sizeof (struct mlx4_wqe_datagram_seg);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1616: FILE: drivers/infiniband/hw/mlx4/qp.c:171:
+		return sizeof (struct mlx4_wqe_ctrl_seg) +

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1617: FILE: drivers/infiniband/hw/mlx4/qp.c:172:
+			sizeof (struct mlx4_wqe_raddr_seg);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1619: FILE: drivers/infiniband/hw/mlx4/qp.c:174:
+		return sizeof (struct mlx4_wqe_ctrl_seg) +

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1620: FILE: drivers/infiniband/hw/mlx4/qp.c:175:
+			sizeof (struct mlx4_wqe_atomic_seg) +

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1621: FILE: drivers/infiniband/hw/mlx4/qp.c:176:
+			sizeof (struct mlx4_wqe_raddr_seg);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1624: FILE: drivers/infiniband/hw/mlx4/qp.c:179:
+		return sizeof (struct mlx4_wqe_ctrl_seg) +

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1626: FILE: drivers/infiniband/hw/mlx4/qp.c:181:
+			      sizeof (struct mlx4_wqe_inline_seg),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1627: FILE: drivers/infiniband/hw/mlx4/qp.c:182:
+			      sizeof (struct mlx4_wqe_data_seg)) +

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1629: FILE: drivers/infiniband/hw/mlx4/qp.c:184:
+			      sizeof (struct mlx4_wqe_inline_seg),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1630: FILE: drivers/infiniband/hw/mlx4/qp.c:185:
+			      sizeof (struct mlx4_wqe_data_seg));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1632: FILE: drivers/infiniband/hw/mlx4/qp.c:187:
+		return sizeof (struct mlx4_wqe_ctrl_seg);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1645: FILE: drivers/infiniband/hw/mlx4/qp.c:200:
+	    sizeof (struct mlx4_wqe_inline_seg) > dev->dev->caps.max_sq_desc_sz)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1660: FILE: drivers/infiniband/hw/mlx4/qp.c:215:
+						    sizeof (struct mlx4_wqe_data_seg)));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1661: FILE: drivers/infiniband/hw/mlx4/qp.c:216:
+	qp->rq.max_gs    = (1 << qp->rq.wqe_shift) / sizeof (struct mlx4_wqe_data_seg);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1664: FILE: drivers/infiniband/hw/mlx4/qp.c:219:
+							sizeof (struct mlx4_wqe_data_seg),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1666: FILE: drivers/infiniband/hw/mlx4/qp.c:221:
+							sizeof (struct mlx4_wqe_inline_seg)) +

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1669: FILE: drivers/infiniband/hw/mlx4/qp.c:224:
+		sizeof (struct mlx4_wqe_data_seg);

WARNING:SIZEOF_PARENTHESIS: sizeof ucmd should be sizeof(ucmd)
#1717: FILE: drivers/infiniband/hw/mlx4/qp.c:272:
+		if (ib_copy_from_udata(&ucmd, udata, sizeof ucmd)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1768: FILE: drivers/infiniband/hw/mlx4/qp.c:323:
+		qp->sq.wrid  = kmalloc(qp->sq.max * sizeof (u64), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1769: FILE: drivers/infiniband/hw/mlx4/qp.c:324:
+		qp->rq.wrid  = kmalloc(qp->rq.max * sizeof (u64), GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#1769: FILE: drivers/infiniband/hw/mlx4/qp.c:324:
+		qp->rq.wrid  = kmalloc(qp->rq.max * sizeof (u64), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:BRACES: braces {} should be used on all arms of this statement
#1798: FILE: drivers/infiniband/hw/mlx4/qp.c:353:
+	if (pd->uobject)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1800: FILE: drivers/infiniband/hw/mlx4/qp.c:355:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1838: FILE: drivers/infiniband/hw/mlx4/qp.c:393:
+	if (send_cq == recv_cq)
[...]
+	else if (send_cq->mcq.cqn < recv_cq->mcq.cqn) {
[...]
+	} else {
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#1851: FILE: drivers/infiniband/hw/mlx4/qp.c:406:
+	if (send_cq == recv_cq)
[...]
+	else if (send_cq->mcq.cqn < recv_cq->mcq.cqn) {
[...]
+	} else {
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1870: FILE: drivers/infiniband/hw/mlx4/qp.c:425:
+			printk(KERN_WARNING "mlx4_ib: modify QP %06x to RESET failed.\n",

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1880: FILE: drivers/infiniband/hw/mlx4/qp.c:435:
+				 qp->ibqp.srq ? to_msrq(qp->ibqp.srq): NULL);
 				                                     ^

WARNING:SIZEOF_PARENTHESIS: sizeof *qp should be sizeof(*qp)
#1918: FILE: drivers/infiniband/hw/mlx4/qp.c:473:
+		qp = kmalloc(sizeof *qp, GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof *sqp should be sizeof(*sqp)
#1939: FILE: drivers/infiniband/hw/mlx4/qp.c:494:
+		sqp = kmalloc(sizeof *sqp, GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof param should be sizeof(param)
#1991: FILE: drivers/infiniband/hw/mlx4/qp.c:546:
+	memset(&param, 0, sizeof param);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2001: FILE: drivers/infiniband/hw/mlx4/qp.c:556:
+		printk(KERN_WARNING "INIT_PORT failed, return code %d.\n", err);

CHECK:BRACES: braces {} should be used on all arms of this statement
#2067: FILE: drivers/infiniband/hw/mlx4/qp.c:622:
+	if (ah->static_rate) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2072: FILE: drivers/infiniband/hw/mlx4/qp.c:627:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2078: FILE: drivers/infiniband/hw/mlx4/qp.c:633:
+			printk(KERN_ERR "sgid_index (%u) too large. max is %d\n",

WARNING:SIZEOF_PARENTHESIS: sizeof *context should be sizeof(*context)
#2109: FILE: drivers/infiniband/hw/mlx4/qp.c:664:
+	context = kzalloc(sizeof *context, GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2122: FILE: drivers/infiniband/hw/mlx4/qp.c:677:
+	if ((attr_mask & IB_QP_PKEY_INDEX) &&
+	     attr->pkey_index >= dev->dev->caps.pkey_table_len) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#2145: FILE: drivers/infiniband/hw/mlx4/qp.c:700:
+	if (!(attr_mask & IB_QP_PATH_MIG_STATE))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2147: FILE: drivers/infiniband/hw/mlx4/qp.c:702:
+	else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2167: FILE: drivers/infiniband/hw/mlx4/qp.c:722:
+			printk(KERN_ERR "path MTU (%u) is invalid\n",

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2354: FILE: drivers/infiniband/hw/mlx4/qp.c:909:
+				 ibqp->srq ? to_msrq(ibqp->srq): NULL);
 				                               ^

WARNING:SIZEOF_PARENTHESIS: sizeof *mlx should be sizeof(*mlx)
#2376: FILE: drivers/infiniband/hw/mlx4/qp.c:931:
+	struct mlx4_wqe_inline_seg *inl = wqe + sizeof *mlx;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2443: FILE: drivers/infiniband/hw/mlx4/qp.c:998:
+		printk(KERN_ERR "built UD header of size %d:\n", header_size);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2446: FILE: drivers/infiniband/hw/mlx4/qp.c:1001:
+				printk("  [%02x] ", i * 4);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2447: FILE: drivers/infiniband/hw/mlx4/qp.c:1002:
+			printk(" %08x",

CHECK:SPACING: No space is necessary after a cast
#2448: FILE: drivers/infiniband/hw/mlx4/qp.c:1003:
+			       be32_to_cpu(((__be32 *) sqp->header_buf)[i]));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2450: FILE: drivers/infiniband/hw/mlx4/qp.c:1005:
+				printk("\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2452: FILE: drivers/infiniband/hw/mlx4/qp.c:1007:
+		printk("\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2458: FILE: drivers/infiniband/hw/mlx4/qp.c:1013:
+	return ALIGN(sizeof (struct mlx4_wqe_inline_seg) + header_size, 16);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2487: FILE: drivers/infiniband/hw/mlx4/qp.c:1042:
+		ctrl = wqe = get_send_wqe(qp, ind & (qp->sq.max - 1));

WARNING:SIZEOF_PARENTHESIS: sizeof *ctrl should be sizeof(*ctrl)
#2503: FILE: drivers/infiniband/hw/mlx4/qp.c:1058:
+		wqe += sizeof *ctrl;

WARNING:SIZEOF_PARENTHESIS: sizeof *ctrl should be sizeof(*ctrl)
#2504: FILE: drivers/infiniband/hw/mlx4/qp.c:1059:
+		size = sizeof *ctrl / 16;

CHECK:SPACING: No space is necessary after a cast
#2512: FILE: drivers/infiniband/hw/mlx4/qp.c:1067:
+				((struct mlx4_wqe_raddr_seg *) wqe)->raddr =

CHECK:SPACING: No space is necessary after a cast
#2514: FILE: drivers/infiniband/hw/mlx4/qp.c:1069:
+				((struct mlx4_wqe_raddr_seg *) wqe)->rkey =

CHECK:SPACING: No space is necessary after a cast
#2516: FILE: drivers/infiniband/hw/mlx4/qp.c:1071:
+				((struct mlx4_wqe_raddr_seg *) wqe)->reserved = 0;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2518: FILE: drivers/infiniband/hw/mlx4/qp.c:1073:
+				wqe  += sizeof (struct mlx4_wqe_raddr_seg);

CHECK:SPACING: No space is necessary after a cast
#2521: FILE: drivers/infiniband/hw/mlx4/qp.c:1076:
+					((struct mlx4_wqe_atomic_seg *) wqe)->swap_add =

CHECK:SPACING: No space is necessary after a cast
#2523: FILE: drivers/infiniband/hw/mlx4/qp.c:1078:
+					((struct mlx4_wqe_atomic_seg *) wqe)->compare =

CHECK:SPACING: No space is necessary after a cast
#2526: FILE: drivers/infiniband/hw/mlx4/qp.c:1081:
+					((struct mlx4_wqe_atomic_seg *) wqe)->swap_add =

CHECK:SPACING: No space is necessary after a cast
#2528: FILE: drivers/infiniband/hw/mlx4/qp.c:1083:
+					((struct mlx4_wqe_atomic_seg *) wqe)->compare = 0;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2531: FILE: drivers/infiniband/hw/mlx4/qp.c:1086:
+				wqe  += sizeof (struct mlx4_wqe_atomic_seg);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2532: FILE: drivers/infiniband/hw/mlx4/qp.c:1087:
+				size += (sizeof (struct mlx4_wqe_raddr_seg) +

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2533: FILE: drivers/infiniband/hw/mlx4/qp.c:1088:
+					 sizeof (struct mlx4_wqe_atomic_seg)) / 16;

CHECK:SPACING: No space is necessary after a cast
#2540: FILE: drivers/infiniband/hw/mlx4/qp.c:1095:
+				((struct mlx4_wqe_raddr_seg *) wqe)->raddr =

CHECK:SPACING: No space is necessary after a cast
#2542: FILE: drivers/infiniband/hw/mlx4/qp.c:1097:
+				((struct mlx4_wqe_raddr_seg *) wqe)->rkey =

CHECK:SPACING: No space is necessary after a cast
#2544: FILE: drivers/infiniband/hw/mlx4/qp.c:1099:
+				((struct mlx4_wqe_raddr_seg *) wqe)->reserved = 0;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2546: FILE: drivers/infiniband/hw/mlx4/qp.c:1101:
+				wqe  += sizeof (struct mlx4_wqe_raddr_seg);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2547: FILE: drivers/infiniband/hw/mlx4/qp.c:1102:
+				size += sizeof (struct mlx4_wqe_raddr_seg) / 16;

CHECK:SPACING: No space is necessary after a cast
#2558: FILE: drivers/infiniband/hw/mlx4/qp.c:1113:
+			memcpy(((struct mlx4_wqe_datagram_seg *) wqe)->av,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2559: FILE: drivers/infiniband/hw/mlx4/qp.c:1114:
+			       &to_mah(wr->wr.ud.ah)->av, sizeof (struct mlx4_av));

CHECK:SPACING: No space is necessary after a cast
#2560: FILE: drivers/infiniband/hw/mlx4/qp.c:1115:
+			((struct mlx4_wqe_datagram_seg *) wqe)->dqpn =

CHECK:SPACING: No space is necessary after a cast
#2562: FILE: drivers/infiniband/hw/mlx4/qp.c:1117:
+			((struct mlx4_wqe_datagram_seg *) wqe)->qkey =

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2565: FILE: drivers/infiniband/hw/mlx4/qp.c:1120:
+			wqe  += sizeof (struct mlx4_wqe_datagram_seg);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2566: FILE: drivers/infiniband/hw/mlx4/qp.c:1121:
+			size += sizeof (struct mlx4_wqe_datagram_seg) / 16;

CHECK:SPACING: No space is necessary after a cast
#2587: FILE: drivers/infiniband/hw/mlx4/qp.c:1142:
+			((struct mlx4_wqe_data_seg *) wqe)->byte_count =

CHECK:SPACING: No space is necessary after a cast
#2589: FILE: drivers/infiniband/hw/mlx4/qp.c:1144:
+			((struct mlx4_wqe_data_seg *) wqe)->lkey =

CHECK:SPACING: No space is necessary after a cast
#2591: FILE: drivers/infiniband/hw/mlx4/qp.c:1146:
+			((struct mlx4_wqe_data_seg *) wqe)->addr =

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2594: FILE: drivers/infiniband/hw/mlx4/qp.c:1149:
+			wqe  += sizeof (struct mlx4_wqe_data_seg);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2595: FILE: drivers/infiniband/hw/mlx4/qp.c:1150:
+			size += sizeof (struct mlx4_wqe_data_seg) / 16;

CHECK:SPACING: No space is necessary after a cast
#2600: FILE: drivers/infiniband/hw/mlx4/qp.c:1155:
+			((struct mlx4_wqe_inline_seg *) wqe)->byte_count =

CHECK:SPACING: No space is necessary after a cast
#2602: FILE: drivers/infiniband/hw/mlx4/qp.c:1157:
+			((u32 *) wqe)[1] = 0;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2603: FILE: drivers/infiniband/hw/mlx4/qp.c:1158:
+			wqe  += sizeof (struct mlx4_wqe_data_seg);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2604: FILE: drivers/infiniband/hw/mlx4/qp.c:1159:
+			size += sizeof (struct mlx4_wqe_data_seg) / 16;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2715: FILE: drivers/infiniband/hw/mlx4/srq.c:1:
+/*

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2780: FILE: drivers/infiniband/hw/mlx4/srq.c:66:
+			printk(KERN_WARNING "mlx4_ib: Unexpected event type %d "

WARNING:SPLIT_STRING: quoted string split across lines
#2781: FILE: drivers/infiniband/hw/mlx4/srq.c:67:
+			printk(KERN_WARNING "mlx4_ib: Unexpected event type %d "
+			       "on SRQ %06x\n", type, srq->srqn);

WARNING:SIZEOF_PARENTHESIS: sizeof *srq should be sizeof(*srq)
#2806: FILE: drivers/infiniband/hw/mlx4/srq.c:92:
+	srq = kmalloc(sizeof *srq, GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2816: FILE: drivers/infiniband/hw/mlx4/srq.c:102:
+			roundup_pow_of_two(sizeof (struct mlx4_wqe_srq_next_seg) +

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2818: FILE: drivers/infiniband/hw/mlx4/srq.c:104:
+					   sizeof (struct mlx4_wqe_data_seg)));

WARNING:SIZEOF_PARENTHESIS: sizeof ucmd should be sizeof(ucmd)
#2826: FILE: drivers/infiniband/hw/mlx4/srq.c:112:
+		if (ib_copy_from_udata(&ucmd, udata, sizeof ucmd)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2882: FILE: drivers/infiniband/hw/mlx4/srq.c:168:
+		srq->wrid = kmalloc(srq->msrq.max * sizeof (u64), GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#2882: FILE: drivers/infiniband/hw/mlx4/srq.c:168:
+		srq->wrid = kmalloc(srq->msrq.max * sizeof (u64), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2897: FILE: drivers/infiniband/hw/mlx4/srq.c:183:
+		if (ib_copy_to_udata(udata, &srq->msrq.srqn, sizeof (__u32))) {

CHECK:SPACING: No space is necessary after a cast
#3018: FILE: drivers/infiniband/hw/mlx4/srq.c:304:
+		scat      = (struct mlx4_wqe_data_seg *) (next + 1);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3055: FILE: drivers/infiniband/hw/mlx4/user.h:1:
+/*

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000442918.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 108 warnings, 42 checks, 3051 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000442918.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
