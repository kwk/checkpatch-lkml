WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#67: FILE: drivers/ieee802154/Kconfig:36:
+config IEEE802154_AT86RF230
+	tristate "AT86RF230 transceiver driver"
+	depends on SPI
+
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#86: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#91: FILE: drivers/ieee802154/at86rf230.c:1:
+#undef AT86RF230_OLDFW_HACK

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#107: FILE: drivers/ieee802154/at86rf230.c:17:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#108: FILE: drivers/ieee802154/at86rf230.c:18:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#135: FILE: drivers/ieee802154/at86rf230.c:45:
+	struct mutex bmux;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#142: FILE: drivers/ieee802154/at86rf230.c:52:
+	spinlock_t lock;

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#148: FILE: drivers/ieee802154/at86rf230.c:58:
+#define	SR_TRX_STATUS		0x01, 0x1f, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#149: FILE: drivers/ieee802154/at86rf230.c:59:
+#define	SR_RESERVED_01_3	0x01, 0x20, 5

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#150: FILE: drivers/ieee802154/at86rf230.c:60:
+#define	SR_CCA_STATUS		0x01, 0x40, 6

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#151: FILE: drivers/ieee802154/at86rf230.c:61:
+#define	SR_CCA_DONE		0x01, 0x80, 7

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#153: FILE: drivers/ieee802154/at86rf230.c:63:
+#define	SR_TRX_CMD		0x02, 0x1f, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#154: FILE: drivers/ieee802154/at86rf230.c:64:
+#define	SR_TRAC_STATUS		0x02, 0xe0, 5

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#156: FILE: drivers/ieee802154/at86rf230.c:66:
+#define	SR_CLKM_CTRL		0x03, 0x07, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#157: FILE: drivers/ieee802154/at86rf230.c:67:
+#define	SR_CLKM_SHA_SEL		0x03, 0x08, 3

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#158: FILE: drivers/ieee802154/at86rf230.c:68:
+#define	SR_PAD_IO_CLKM		0x03, 0x30, 4

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#159: FILE: drivers/ieee802154/at86rf230.c:69:
+#define	SR_PAD_IO		0x03, 0xc0, 6

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#161: FILE: drivers/ieee802154/at86rf230.c:71:
+#define	SR_IRQ_POLARITY		0x04, 0x01, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#162: FILE: drivers/ieee802154/at86rf230.c:72:
+#define	SR_IRQ_MASK_MODE	0x04, 0x02, 1

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#163: FILE: drivers/ieee802154/at86rf230.c:73:
+#define	SR_SPI_CMD_MODE		0x04, 0x0c, 2

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#164: FILE: drivers/ieee802154/at86rf230.c:74:
+#define	SR_RX_BL_CTRL		0x04, 0x10, 4

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#165: FILE: drivers/ieee802154/at86rf230.c:75:
+#define	SR_TX_AUTO_CRC_ON	0x04, 0x20, 5

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#166: FILE: drivers/ieee802154/at86rf230.c:76:
+#define	SR_IRQ_2_EXT_EN		0x04, 0x40, 6

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#167: FILE: drivers/ieee802154/at86rf230.c:77:
+#define	SR_PA_EXT_EN		0x04, 0x80, 7

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#169: FILE: drivers/ieee802154/at86rf230.c:79:
+#define	SR_TX_PWR		0x05, 0x0f, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#170: FILE: drivers/ieee802154/at86rf230.c:80:
+#define	SR_PA_LT		0x05, 0x30, 4

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#171: FILE: drivers/ieee802154/at86rf230.c:81:
+#define	SR_PA_BUF_LT		0x05, 0xc0, 6

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#173: FILE: drivers/ieee802154/at86rf230.c:83:
+#define	SR_RSSI			0x06, 0x1f, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#174: FILE: drivers/ieee802154/at86rf230.c:84:
+#define	SR_RND_VALUE		0x06, 0x60, 5

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#175: FILE: drivers/ieee802154/at86rf230.c:85:
+#define	SR_RX_CRC_VALID		0x06, 0x80, 7

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#177: FILE: drivers/ieee802154/at86rf230.c:87:
+#define	SR_ED_LEVEL		0x07, 0xff, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#179: FILE: drivers/ieee802154/at86rf230.c:89:
+#define	SR_CHANNEL		0x08, 0x1f, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#180: FILE: drivers/ieee802154/at86rf230.c:90:
+#define	SR_CCA_MODE		0x08, 0x60, 5

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#181: FILE: drivers/ieee802154/at86rf230.c:91:
+#define	SR_CCA_REQUEST		0x08, 0x80, 7

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#183: FILE: drivers/ieee802154/at86rf230.c:93:
+#define	SR_CCA_ED_THRES		0x09, 0x0f, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#184: FILE: drivers/ieee802154/at86rf230.c:94:
+#define	SR_RESERVED_09_1	0x09, 0xf0, 4

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#186: FILE: drivers/ieee802154/at86rf230.c:96:
+#define	SR_PDT_THRES		0x0a, 0x0f, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#187: FILE: drivers/ieee802154/at86rf230.c:97:
+#define	SR_RESERVED_0a_1	0x0a, 0xf0, 4

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#189: FILE: drivers/ieee802154/at86rf230.c:99:
+#define	SR_SFD_VALUE		0x0b, 0xff, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#191: FILE: drivers/ieee802154/at86rf230.c:101:
+#define	SR_OQPSK_DATA_RATE	0x0c, 0x03, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#192: FILE: drivers/ieee802154/at86rf230.c:102:
+#define	SR_RESERVED_0c_2	0x0c, 0x7c, 2

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#193: FILE: drivers/ieee802154/at86rf230.c:103:
+#define	SR_RX_SAFE_MODE		0x0c, 0x80, 7

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#195: FILE: drivers/ieee802154/at86rf230.c:105:
+#define	SR_ANT_CTRL		0x0d, 0x03, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#196: FILE: drivers/ieee802154/at86rf230.c:106:
+#define	SR_ANT_EXT_SW_EN	0x0d, 0x04, 2

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#197: FILE: drivers/ieee802154/at86rf230.c:107:
+#define	SR_ANT_DIV_EN		0x0d, 0x08, 3

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#198: FILE: drivers/ieee802154/at86rf230.c:108:
+#define	SR_RESERVED_0d_2	0x0d, 0x70, 4

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#199: FILE: drivers/ieee802154/at86rf230.c:109:
+#define	SR_ANT_SEL		0x0d, 0x80, 7

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#201: FILE: drivers/ieee802154/at86rf230.c:111:
+#define	SR_IRQ_MASK		0x0e, 0xff, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#203: FILE: drivers/ieee802154/at86rf230.c:113:
+#define	SR_IRQ_0_PLL_LOCK	0x0f, 0x01, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#204: FILE: drivers/ieee802154/at86rf230.c:114:
+#define	SR_IRQ_1_PLL_UNLOCK	0x0f, 0x02, 1

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#205: FILE: drivers/ieee802154/at86rf230.c:115:
+#define	SR_IRQ_2_RX_START	0x0f, 0x04, 2

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#206: FILE: drivers/ieee802154/at86rf230.c:116:
+#define	SR_IRQ_3_TRX_END	0x0f, 0x08, 3

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#207: FILE: drivers/ieee802154/at86rf230.c:117:
+#define	SR_IRQ_4_CCA_ED_DONE	0x0f, 0x10, 4

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#208: FILE: drivers/ieee802154/at86rf230.c:118:
+#define	SR_IRQ_5_AMI		0x0f, 0x20, 5

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#209: FILE: drivers/ieee802154/at86rf230.c:119:
+#define	SR_IRQ_6_TRX_UR		0x0f, 0x40, 6

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#210: FILE: drivers/ieee802154/at86rf230.c:120:
+#define	SR_IRQ_7_BAT_LOW	0x0f, 0x80, 7

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#212: FILE: drivers/ieee802154/at86rf230.c:122:
+#define	SR_RESERVED_10_6	0x10, 0x03, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#213: FILE: drivers/ieee802154/at86rf230.c:123:
+#define	SR_DVDD_OK		0x10, 0x04, 2

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#214: FILE: drivers/ieee802154/at86rf230.c:124:
+#define	SR_DVREG_EXT		0x10, 0x08, 3

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#215: FILE: drivers/ieee802154/at86rf230.c:125:
+#define	SR_RESERVED_10_3	0x10, 0x30, 4

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#216: FILE: drivers/ieee802154/at86rf230.c:126:
+#define	SR_AVDD_OK		0x10, 0x40, 6

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#217: FILE: drivers/ieee802154/at86rf230.c:127:
+#define	SR_AVREG_EXT		0x10, 0x80, 7

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#219: FILE: drivers/ieee802154/at86rf230.c:129:
+#define	SR_BATMON_VTH		0x11, 0x0f, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#220: FILE: drivers/ieee802154/at86rf230.c:130:
+#define	SR_BATMON_HR		0x11, 0x10, 4

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#221: FILE: drivers/ieee802154/at86rf230.c:131:
+#define	SR_BATMON_OK		0x11, 0x20, 5

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#222: FILE: drivers/ieee802154/at86rf230.c:132:
+#define	SR_RESERVED_11_1	0x11, 0xc0, 6

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#224: FILE: drivers/ieee802154/at86rf230.c:134:
+#define	SR_XTAL_TRIM		0x12, 0x0f, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#225: FILE: drivers/ieee802154/at86rf230.c:135:
+#define	SR_XTAL_MODE		0x12, 0xf0, 4

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#227: FILE: drivers/ieee802154/at86rf230.c:137:
+#define	SR_RX_PDT_LEVEL		0x15, 0x0f, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#228: FILE: drivers/ieee802154/at86rf230.c:138:
+#define	SR_RESERVED_15_2	0x15, 0x70, 4

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#229: FILE: drivers/ieee802154/at86rf230.c:139:
+#define	SR_RX_PDT_DIS		0x15, 0x80, 7

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#231: FILE: drivers/ieee802154/at86rf230.c:141:
+#define	SR_RESERVED_17_8	0x17, 0x01, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#232: FILE: drivers/ieee802154/at86rf230.c:142:
+#define	SR_AACK_PROM_MODE	0x17, 0x02, 1

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#233: FILE: drivers/ieee802154/at86rf230.c:143:
+#define	SR_AACK_ACK_TIME	0x17, 0x04, 2

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#234: FILE: drivers/ieee802154/at86rf230.c:144:
+#define	SR_RESERVED_17_5	0x17, 0x08, 3

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#235: FILE: drivers/ieee802154/at86rf230.c:145:
+#define	SR_AACK_UPLD_RES_FT	0x17, 0x10, 4

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#236: FILE: drivers/ieee802154/at86rf230.c:146:
+#define	SR_AACK_FLTR_RES_FT	0x17, 0x20, 5

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#237: FILE: drivers/ieee802154/at86rf230.c:147:
+#define	SR_RESERVED_17_2	0x17, 0x40, 6

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#238: FILE: drivers/ieee802154/at86rf230.c:148:
+#define	SR_RESERVED_17_1	0x17, 0x80, 7

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#240: FILE: drivers/ieee802154/at86rf230.c:150:
+#define	SR_RESERVED_18_2	0x18, 0x7f, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#241: FILE: drivers/ieee802154/at86rf230.c:151:
+#define	SR_FTN_START		0x18, 0x80, 7

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#243: FILE: drivers/ieee802154/at86rf230.c:153:
+#define	SR_RESERVED_1a_2	0x1a, 0x7f, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#244: FILE: drivers/ieee802154/at86rf230.c:154:
+#define	SR_PLL_CF_START		0x1a, 0x80, 7

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#246: FILE: drivers/ieee802154/at86rf230.c:156:
+#define	SR_RESERVED_1b_3	0x1b, 0x3f, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#247: FILE: drivers/ieee802154/at86rf230.c:157:
+#define	SR_RESERVED_1b_2	0x1b, 0x40, 6

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#248: FILE: drivers/ieee802154/at86rf230.c:158:
+#define	SR_PLL_DCU_START	0x1b, 0x80, 7

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#250: FILE: drivers/ieee802154/at86rf230.c:160:
+#define	SR_PART_NUM		0x1c, 0xff, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#252: FILE: drivers/ieee802154/at86rf230.c:162:
+#define	SR_VERSION_NUM		0x1d, 0xff, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#254: FILE: drivers/ieee802154/at86rf230.c:164:
+#define	SR_MAN_ID_0		0x1e, 0xff, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#256: FILE: drivers/ieee802154/at86rf230.c:166:
+#define	SR_MAN_ID_1		0x1f, 0xff, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#258: FILE: drivers/ieee802154/at86rf230.c:168:
+#define	SR_SHORT_ADDR_0		0x20, 0xff, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#260: FILE: drivers/ieee802154/at86rf230.c:170:
+#define	SR_SHORT_ADDR_1		0x21, 0xff, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#262: FILE: drivers/ieee802154/at86rf230.c:172:
+#define	SR_PAN_ID_0		0x22, 0xff, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#264: FILE: drivers/ieee802154/at86rf230.c:174:
+#define	SR_PAN_ID_1		0x23, 0xff, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#266: FILE: drivers/ieee802154/at86rf230.c:176:
+#define	SR_IEEE_ADDR_0		0x24, 0xff, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#268: FILE: drivers/ieee802154/at86rf230.c:178:
+#define	SR_IEEE_ADDR_1		0x25, 0xff, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#270: FILE: drivers/ieee802154/at86rf230.c:180:
+#define	SR_IEEE_ADDR_2		0x26, 0xff, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#272: FILE: drivers/ieee802154/at86rf230.c:182:
+#define	SR_IEEE_ADDR_3		0x27, 0xff, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#274: FILE: drivers/ieee802154/at86rf230.c:184:
+#define	SR_IEEE_ADDR_4		0x28, 0xff, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#276: FILE: drivers/ieee802154/at86rf230.c:186:
+#define	SR_IEEE_ADDR_5		0x29, 0xff, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#278: FILE: drivers/ieee802154/at86rf230.c:188:
+#define	SR_IEEE_ADDR_6		0x2a, 0xff, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#280: FILE: drivers/ieee802154/at86rf230.c:190:
+#define	SR_IEEE_ADDR_7		0x2b, 0xff, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#282: FILE: drivers/ieee802154/at86rf230.c:192:
+#define	SR_SLOTTED_OPERATION	0x2c, 0x01, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#283: FILE: drivers/ieee802154/at86rf230.c:193:
+#define	SR_MAX_CSMA_RETRIES	0x2c, 0x0e, 1

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#284: FILE: drivers/ieee802154/at86rf230.c:194:
+#define	SR_MAX_FRAME_RETRIES	0x2c, 0xf0, 4

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#286: FILE: drivers/ieee802154/at86rf230.c:196:
+#define	SR_CSMA_SEED_0		0x2d, 0xff, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#288: FILE: drivers/ieee802154/at86rf230.c:198:
+#define	SR_CSMA_SEED_1		0x2e, 0x07, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#289: FILE: drivers/ieee802154/at86rf230.c:199:
+#define	SR_AACK_I_AM_COORD	0x2e, 0x08, 3

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#290: FILE: drivers/ieee802154/at86rf230.c:200:
+#define	SR_AACK_DIS_ACK		0x2e, 0x10, 4

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#291: FILE: drivers/ieee802154/at86rf230.c:201:
+#define	SR_AACK_SET_PD		0x2e, 0x20, 5

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#292: FILE: drivers/ieee802154/at86rf230.c:202:
+#define	SR_AACK_FVN_MODE	0x2e, 0xc0, 6

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#294: FILE: drivers/ieee802154/at86rf230.c:204:
+#define	SR_MIN_BE		0x2f, 0x0f, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#295: FILE: drivers/ieee802154/at86rf230.c:205:
+#define	SR_MAX_BE		0x2f, 0xf0, 4

CHECK:BIT_MACRO: Prefer using the BIT macro
#302: FILE: drivers/ieee802154/at86rf230.c:212:
+#define IRQ_BAT_LOW	(1 << 7)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#303: FILE: drivers/ieee802154/at86rf230.c:213:
+#define IRQ_TRX_UR	(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#304: FILE: drivers/ieee802154/at86rf230.c:214:
+#define IRQ_AMI		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#305: FILE: drivers/ieee802154/at86rf230.c:215:
+#define IRQ_CCA_ED	(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#306: FILE: drivers/ieee802154/at86rf230.c:216:
+#define IRQ_TRX_END	(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#307: FILE: drivers/ieee802154/at86rf230.c:217:
+#define IRQ_RX_START	(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#308: FILE: drivers/ieee802154/at86rf230.c:218:
+#define IRQ_PLL_UNL	(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#309: FILE: drivers/ieee802154/at86rf230.c:219:
+#define IRQ_PLL_LOCK	(1 << 0)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#362: FILE: drivers/ieee802154/at86rf230.c:272:
+__at86rf230_read_subreg(struct at86rf230_local *lp, u8 addr, u8 mask, int shift, u8* data)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#394: FILE: drivers/ieee802154/at86rf230.c:304:
+at86rf230_read_subreg(struct at86rf230_local *lp, u8 addr, u8 mask, int shift, u8* data)

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#516: FILE: drivers/ieee802154/at86rf230.c:426:
+	pr_debug("%s\n", __func__);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#518: FILE: drivers/ieee802154/at86rf230.c:428:
+	BUG_ON(!level);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#526: FILE: drivers/ieee802154/at86rf230.c:436:
+	pr_debug("%s\n", __func__);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#541: FILE: drivers/ieee802154/at86rf230.c:451:
+	if (state != PHY_TRX_OFF && state != PHY_RX_ON && state != PHY_TX_ON && state != PHY_FORCE_TRX_OFF)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#588: FILE: drivers/ieee802154/at86rf230.c:498:
+	BUG_ON(channel < 11);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#589: FILE: drivers/ieee802154/at86rf230.c:499:
+	BUG_ON(channel > 26);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#592: FILE: drivers/ieee802154/at86rf230.c:502:
+	msleep(1); /* Wait for PLL */

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#606: FILE: drivers/ieee802154/at86rf230.c:516:
+	pr_debug("%s\n", __func__);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#619: FILE: drivers/ieee802154/at86rf230.c:529:
+	BUG_ON(lp->is_tx);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#669: FILE: drivers/ieee802154/at86rf230.c:579:
+	skb_trim(skb, len-2); /* We do not put CRC into the frame */
 	                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#801: FILE: drivers/ieee802154/at86rf230.c:711:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#816: FILE: drivers/ieee802154/at86rf230.c:726:
+		msleep(1);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#824: FILE: drivers/ieee802154/at86rf230.c:734:
+			/*IRQ_TRX_UR | IRQ_CCA_ED | IRQ_TRX_END | IRQ_PLL_UNL | IRQ_PLL_LOCK*/ 0xff);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#824: FILE: drivers/ieee802154/at86rf230.c:734:
+	rc = at86rf230_write_subreg(lp, SR_IRQ_MASK,
+			/*IRQ_TRX_UR | IRQ_CCA_ED | IRQ_TRX_END | IRQ_PLL_UNL | IRQ_PLL_LOCK*/ 0xff);

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#828: FILE: drivers/ieee802154/at86rf230.c:738:
+	rc = at86rf230_write_subreg(lp, SR_CLKM_SHA_SEL, 0x00); /* CLKM changes are applied immediately */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#841: FILE: drivers/ieee802154/at86rf230.c:751:
+	msleep(1);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#877: FILE: drivers/ieee802154/at86rf230.c:787:
+static int __devinit at86rf230_probe(struct spi_device *spi)

WARNING:SIZEOF_PARENTHESIS: sizeof *lp should be sizeof(*lp)
#879: FILE: drivers/ieee802154/at86rf230.c:789:
+	struct at86rf230_local *lp = kzalloc(sizeof *lp, GFP_KERNEL);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#935: FILE: drivers/ieee802154/at86rf230.c:845:
+	msleep(1);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#937: FILE: drivers/ieee802154/at86rf230.c:847:
+	msleep(1);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#939: FILE: drivers/ieee802154/at86rf230.c:849:
+	msleep(1);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#949: FILE: drivers/ieee802154/at86rf230.c:859:
+		dev_err(&spi->dev, "Non-Atmel device found (MAN_ID %02x %02x)\n", man_id_1, man_id_0);

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#978: FILE: drivers/ieee802154/at86rf230.c:888:
+		rc = -ENOTSUPP;

ENOTSUPP is not a standard error code and should be avoided in new patches.
EOPNOTSUPP should be used instead.

See: https://lore.kernel.org/netdev/20200510182252.GA411829@lunn.ch/

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1015: FILE: drivers/ieee802154/at86rf230.c:925:
+static int __devexit at86rf230_remove(struct spi_device *spi)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1068: FILE: include/linux/spi/at86rf230.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1083: FILE: include/linux/spi/at86rf230.h:16:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1084: FILE: include/linux/spi/at86rf230.h:17:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000117402.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 112 errors, 25 warnings, 13 checks, 1019 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000117402.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
