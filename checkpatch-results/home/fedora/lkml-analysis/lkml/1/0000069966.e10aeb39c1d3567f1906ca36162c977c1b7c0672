WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#65: FILE: fs/9p/Kconfig:12:
+config 9P_FSCACHE
+	bool "Enable 9P client caching support (EXPERIMENTAL)"
+	depends on EXPERIMENTAL
+	depends on 9P_FS=m && FSCACHE || 9P_FS=y && FSCACHE=y
+	help
+	  Choose Y here to enable persistent, read-only local
+	  caching support for 9p clients using FS-Cache
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#86: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#91: FILE: fs/9p/cache.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#108: FILE: fs/9p/cache.c:18:
+ *  51 Franklin Street, Fifth Floor$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#127: FILE: fs/9p/cache.c:37:
+^I.name ^I^I= "9p",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#128: FILE: fs/9p/cache.c:38:
+^I.version ^I= 0,$

CHECK:SPACING: No space is necessary after a cast
#133: FILE: fs/9p/cache.c:43:
+	struct v9fs_cookie *vcookie = (struct v9fs_cookie *) foo;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#134: FILE: fs/9p/cache.c:44:
+	struct v9fs_cookie *vcookie = (struct v9fs_cookie *) foo;
+	vcookie->fscache = NULL;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#150: FILE: fs/9p/cache.c:60:
+					  0, (SLAB_RECLAIM_ACCOUNT|
 					                          ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#172: FILE: fs/9p/cache.c:82:
+	int ret;
+	ret = v9fs_init_vcookiecache();

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#206: FILE: fs/9p/cache.c:116:
+	uint16_t klen = 0;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#224: FILE: fs/9p/cache.c:134:
+^I.name ^I^I= "9P.session",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#225: FILE: fs/9p/cache.c:135:
+^I.type ^I^I= FSCACHE_COOKIE_TYPE_INDEX,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#226: FILE: fs/9p/cache.c:136:
+^I.get_key ^I= v9fs_cache_session_get_key,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#250: FILE: fs/9p/cache.c:160:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#255: FILE: fs/9p/cache.c:165:
+	const struct v9fs_cookie *vcookie = cookie_netfs_data;
+	memcpy(buffer, &vcookie->qid->path, sizeof(vcookie->qid->path));

WARNING:LINE_SPACING: Missing a blank line after declarations
#276: FILE: fs/9p/cache.c:186:
+	const struct v9fs_cookie *vcookie = cookie_netfs_data;
+	memcpy(buffer, &vcookie->qid->version, sizeof(vcookie->qid->version));

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#385: FILE: fs/9p/cache.c:295:
+void v9fs_cache_inode_set_cookie(struct inode *inode, struct file *filp)
                                                                    ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#433: FILE: fs/9p/cache.c:343:
+	BUG_ON(!vcookie->fscache);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#454: FILE: fs/9p/cache.c:364:
+	BUG_ON(!vcookie->fscache);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#458: FILE: fs/9p/cache.c:368:
+		BUG_ON(!PageLocked(page));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#518: FILE: fs/9p/cache.c:428:
+				  unsigned *nr_pages)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#538: FILE: fs/9p/cache.c:448:
+		BUG_ON(!list_empty(pages));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#539: FILE: fs/9p/cache.c:449:
+		BUG_ON(*nr_pages != 0);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#570: FILE: fs/9p/cache.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#587: FILE: fs/9p/cache.h:18:
+ *  51 Franklin Street, Fifth Floor$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#599: FILE: fs/9p/cache.h:30:
+	spinlock_t lock;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#620: FILE: fs/9p/cache.h:51:
+void v9fs_cache_inode_set_cookie(struct inode *inode, struct file *filp);
                                                                    ^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#623: FILE: fs/9p/cache.h:54:
+extern int __v9fs_cache_register(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#624: FILE: fs/9p/cache.h:55:
+extern void __v9fs_cache_unregister(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#626: FILE: fs/9p/cache.h:57:
+extern int __v9fs_fscache_release_page(struct page *page, gfp_t gfp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#627: FILE: fs/9p/cache.h:58:
+extern void __v9fs_fscache_invalidate_page(struct page *page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#628: FILE: fs/9p/cache.h:59:
+extern int __v9fs_readpage_from_fscache(struct inode *inode,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#630: FILE: fs/9p/cache.h:61:
+extern int __v9fs_readpages_from_fscache(struct inode *inode,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#633: FILE: fs/9p/cache.h:64:
+					 unsigned *nr_pages);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#634: FILE: fs/9p/cache.h:65:
+extern void __v9fs_readpage_to_fscache(struct inode *inode, struct page *page);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#636: FILE: fs/9p/cache.h:67:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#673: FILE: fs/9p/cache.h:104:
+					      unsigned *nr_pages)

WARNING:LINE_SPACING: Missing a blank line after declarations
#689: FILE: fs/9p/cache.h:120:
+	struct v9fs_cookie *vcookie = v9fs_inode2cookie(inode);
+	fscache_uncache_page(vcookie->fscache, page);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#690: FILE: fs/9p/cache.h:121:
+	BUG_ON(PageFsCache(page));

WARNING:LINE_SPACING: Missing a blank line after declarations
#697: FILE: fs/9p/cache.h:128:
+	struct v9fs_cookie *vcookie = v9fs_inode2cookie(inode);
+	spin_lock(&vcookie->lock);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#727: FILE: fs/9p/cache.h:158:
+					      unsigned *nr_pages)

CHECK:CAMELCASE: Avoid CamelCase: <Opt_uname>
#771: FILE: fs/9p/v9fs.c:51:
+	Opt_uname, Opt_remotename, Opt_trans, Opt_cache, Opt_cachetag,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Opt_remotename>
#771: FILE: fs/9p/v9fs.c:51:
+	Opt_uname, Opt_remotename, Opt_trans, Opt_cache, Opt_cachetag,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_trans>
#771: FILE: fs/9p/v9fs.c:51:
+	Opt_uname, Opt_remotename, Opt_trans, Opt_cache, Opt_cachetag,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_cache>
#771: FILE: fs/9p/v9fs.c:51:
+	Opt_uname, Opt_remotename, Opt_trans, Opt_cache, Opt_cachetag,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_cachetag>
#771: FILE: fs/9p/v9fs.c:51:
+	Opt_uname, Opt_remotename, Opt_trans, Opt_cache, Opt_cachetag,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_cache_loose>
#776: FILE: fs/9p/v9fs.c:55:
+	Opt_cache_loose, Opt_fscache,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_fscache>
#776: FILE: fs/9p/v9fs.c:55:
+	Opt_cache_loose, Opt_fscache,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#993: FILE: fs/9p/v9fs.c:421:
+		printk(KERN_ERR "Failed to register filesystem\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#999: FILE: fs/9p/v9fs.c:427:
+		printk(KERN_ERR "Failed to register v9fs for caching\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1005: FILE: fs/9p/v9fs.c:433:
+		printk(KERN_ERR "Failed to register with sysfs\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1126: FILE: fs/9p/vfs_addr.c:61:
+	BUG_ON(!PageLocked(page));

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1157: FILE: fs/9p/vfs_addr.c:92:
+ * @filp: file being read
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1164: FILE: fs/9p/vfs_addr.c:99:
+static int v9fs_vfs_readpages(struct file *filp, struct address_space *mapping,
                                            ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1165: FILE: fs/9p/vfs_addr.c:100:
+static int v9fs_vfs_readpages(struct file *filp, struct address_space *mapping,
+			     struct list_head *pages, unsigned nr_pages)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1165: FILE: fs/9p/vfs_addr.c:100:
+			     struct list_head *pages, unsigned nr_pages)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1171: FILE: fs/9p/vfs_addr.c:106:
+	P9_DPRINTK(P9_DEBUG_VFS, "inode: %p file: %p\n", inode, filp);
 	                                                        ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1177: FILE: fs/9p/vfs_addr.c:112:
+	ret = read_cache_pages(mapping, pages, (void *)v9fs_vfs_readpage, filp);
 	                                                                  ^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1224: FILE: fs/9p/vfs_addr.c:159:
+      .readpages = v9fs_vfs_readpages,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1225: FILE: fs/9p/vfs_addr.c:160:
+      .releasepage = v9fs_release_page,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1226: FILE: fs/9p/vfs_addr.c:161:
+      .invalidatepage = v9fs_invalidate_page,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1227: FILE: fs/9p/vfs_addr.c:162:
+      .launder_page = v9fs_launder_page,$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1291: FILE: fs/9p/vfs_inode.c:212:
+	struct v9fs_cookie *vcookie;
+	vcookie = (struct v9fs_cookie *)kmem_cache_alloc(vcookie_cache,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1319: FILE: fs/9p/vfs_inode.c:362:
 
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1415: FILE: include/net/9p/9p.h:59:
+	P9_DEBUG_FSC =		(1<<11),
 	              		  ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000069966.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 41 warnings, 23 checks, 1280 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000069966.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
