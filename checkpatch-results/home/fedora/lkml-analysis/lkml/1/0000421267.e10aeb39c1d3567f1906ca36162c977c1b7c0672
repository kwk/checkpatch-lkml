WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#98: FILE: inode.c:118:
+^I^I} else { $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 15)
#263: FILE: inode.c:223:
+	if (!p)
+               goto out_kfree;

ERROR:CODE_INDENT: code indent should use tabs where possible
#264: FILE: inode.c:224:
+               goto out_kfree;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: inode.c:224:
+               goto out_kfree;$

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#266: FILE: inode.c:226:
+	phys_addr = simple_strtoul(p + 9, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#267: FILE: inode.c:227:
+	if (phys_addr & (PAGE_SIZE-1)) {
 	                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#268: FILE: inode.c:228:
+		printk(KERN_ERR "cramfs: physical address 0x%lx for linear"

WARNING:SPLIT_STRING: quoted string split across lines
#269: FILE: inode.c:229:
+		printk(KERN_ERR "cramfs: physical address 0x%lx for linear"
+				"cramfs isn't aligned to a page boundary\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:MISSING_SPACE: break quoted strings at a space character
#269: FILE: inode.c:229:
+		printk(KERN_ERR "cramfs: physical address 0x%lx for linear"
+				"cramfs isn't aligned to a page boundary\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#275: FILE: inode.c:235:
+		printk(KERN_ERR "cramfs: physical address for linear cramfs"

WARNING:SPLIT_STRING: quoted string split across lines
#276: FILE: inode.c:236:
+		printk(KERN_ERR "cramfs: physical address for linear cramfs"
+				"image can't be 0\n");

WARNING:MISSING_SPACE: break quoted strings at a space character
#276: FILE: inode.c:236:
+		printk(KERN_ERR "cramfs: physical address for linear cramfs"
+				"image can't be 0\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#280: FILE: inode.c:240:
+	printk(KERN_INFO "cramfs: checking physical address 0x%lx for linear"

WARNING:SPLIT_STRING: quoted string split across lines
#281: FILE: inode.c:241:
+	printk(KERN_INFO "cramfs: checking physical address 0x%lx for linear"
+			 "cramfs image\n", phys_addr);

WARNING:MISSING_SPACE: break quoted strings at a space character
#281: FILE: inode.c:241:
+	printk(KERN_INFO "cramfs: checking physical address 0x%lx for linear"
+			 "cramfs image\n", phys_addr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#286: FILE: inode.c:246:
+		printk(KERN_ERR "cramfs: ioremap of the linear cramfs image"

WARNING:SPLIT_STRING: quoted string split across lines
#287: FILE: inode.c:247:
+		printk(KERN_ERR "cramfs: ioremap of the linear cramfs image"
+				"failed\n");

WARNING:MISSING_SPACE: break quoted strings at a space character
#287: FILE: inode.c:247:
+		printk(KERN_ERR "cramfs: ioremap of the linear cramfs image"
+				"failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#349: FILE: inode.c:313:
+		printk(KERN_ERR "cramfs: ioremap of the linear cramfs image"

WARNING:SPLIT_STRING: quoted string split across lines
#350: FILE: inode.c:314:
+		printk(KERN_ERR "cramfs: ioremap of the linear cramfs image"
+				" failed\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#454: FILE: inode.c:509:
+static struct page *cramfs_get_xip_page(struct address_space *mapping,
+		sector_t offset, int create)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000421267.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 18 warnings, 2 checks, 439 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000421267.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
