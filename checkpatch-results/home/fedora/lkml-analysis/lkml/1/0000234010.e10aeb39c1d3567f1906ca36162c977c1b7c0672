ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Jeffrey Vernon Merkey (jmerkey@wolfmountaingroup.com)'
#25: 
Signed-off-by: Jeffrey Vernon Merkey (jmerkey@wolfmountaingroup.com)

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#30: FILE: debug/mdb/mdb-proc.h:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#32: FILE: debug/mdb/mdb-proc.h:3:
+/***************************************************************************
+*

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:CAMELCASE: Avoid CamelCase: <MajorVersion>
#80: FILE: debug/mdb/mdb-proc.h:51:
+extern unsigned long MajorVersion;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <MinorVersion>
#81: FILE: debug/mdb/mdb-proc.h:52:
+extern unsigned long MinorVersion;

CHECK:CAMELCASE: Avoid CamelCase: <BuildVersion>
#82: FILE: debug/mdb/mdb-proc.h:53:
+extern unsigned long BuildVersion;

CHECK:CAMELCASE: Avoid CamelCase: <IA32Flags>
#83: FILE: debug/mdb/mdb-proc.h:54:
+extern unsigned char *IA32Flags[];

CHECK:CAMELCASE: Avoid CamelCase: <BreakDescription>
#84: FILE: debug/mdb/mdb-proc.h:55:
+extern unsigned char *BreakDescription[];

CHECK:CAMELCASE: Avoid CamelCase: <BreakLengthDescription>
#85: FILE: debug/mdb/mdb-proc.h:56:
+extern unsigned char *BreakLengthDescription[];

CHECK:CAMELCASE: Avoid CamelCase: <ExceptionDescription>
#86: FILE: debug/mdb/mdb-proc.h:57:
+extern unsigned char *ExceptionDescription[];

CHECK:CAMELCASE: Avoid CamelCase: <StackFrame>
#88: FILE: debug/mdb/mdb-proc.h:59:
+extern StackFrame ReferenceFrame[MAX_PROCESSORS];

CHECK:CAMELCASE: Avoid CamelCase: <ReferenceFrame>
#88: FILE: debug/mdb/mdb-proc.h:59:
+extern StackFrame ReferenceFrame[MAX_PROCESSORS];

CHECK:CAMELCASE: Avoid CamelCase: <focusActive>
#90: FILE: debug/mdb/mdb-proc.h:61:
+extern atomic_t focusActive;

CHECK:CAMELCASE: Avoid CamelCase: <debuggerActive>
#91: FILE: debug/mdb/mdb-proc.h:62:
+extern atomic_t debuggerActive;

CHECK:CAMELCASE: Avoid CamelCase: <debuggerProcessors>
#92: FILE: debug/mdb/mdb-proc.h:63:
+extern atomic_t debuggerProcessors[MAX_PROCESSORS];

CHECK:CAMELCASE: Avoid CamelCase: <nmiProcessors>
#93: FILE: debug/mdb/mdb-proc.h:64:
+extern atomic_t nmiProcessors[MAX_PROCESSORS];

CHECK:CAMELCASE: Avoid CamelCase: <traceProcessors>
#94: FILE: debug/mdb/mdb-proc.h:65:
+extern atomic_t traceProcessors[MAX_PROCESSORS];

CHECK:CAMELCASE: Avoid CamelCase: <ProcessorHold>
#95: FILE: debug/mdb/mdb-proc.h:66:
+extern unsigned long ProcessorHold[MAX_PROCESSORS];

CHECK:CAMELCASE: Avoid CamelCase: <ProcessorState>
#96: FILE: debug/mdb/mdb-proc.h:67:
+extern unsigned long ProcessorState[MAX_PROCESSORS];

CHECK:CAMELCASE: Avoid CamelCase: <procState>
#97: FILE: debug/mdb/mdb-proc.h:68:
+extern unsigned char *procState[];

CHECK:CAMELCASE: Avoid CamelCase: <lastDumpAddress>
#100: FILE: debug/mdb/mdb-proc.h:71:
+extern unsigned char *lastDumpAddress;

CHECK:CAMELCASE: Avoid CamelCase: <lastLinkAddress>
#101: FILE: debug/mdb/mdb-proc.h:72:
+extern unsigned char *lastLinkAddress;

CHECK:CAMELCASE: Avoid CamelCase: <lastUnasmAddress>
#102: FILE: debug/mdb/mdb-proc.h:73:
+extern unsigned long lastUnasmAddress;

CHECK:CAMELCASE: Avoid CamelCase: <displayLength>
#103: FILE: debug/mdb/mdb-proc.h:74:
+extern unsigned long displayLength;

CHECK:CAMELCASE: Avoid CamelCase: <lastCommand>
#104: FILE: debug/mdb/mdb-proc.h:75:
+extern unsigned long lastCommand;

CHECK:CAMELCASE: Avoid CamelCase: <lastCommandEntry>
#105: FILE: debug/mdb/mdb-proc.h:76:
+extern unsigned long lastCommandEntry;

CHECK:CAMELCASE: Avoid CamelCase: <lastDebugCommand>
#106: FILE: debug/mdb/mdb-proc.h:77:
+extern unsigned char lastDebugCommand[100];

CHECK:CAMELCASE: Avoid CamelCase: <lastDisplayLength>
#107: FILE: debug/mdb/mdb-proc.h:78:
+extern unsigned long lastDisplayLength;

CHECK:CAMELCASE: Avoid CamelCase: <debugCommand>
#108: FILE: debug/mdb/mdb-proc.h:79:
+extern unsigned char debugCommand[100];

CHECK:CAMELCASE: Avoid CamelCase: <nextUnasmAddress>
#109: FILE: debug/mdb/mdb-proc.h:80:
+extern unsigned long nextUnasmAddress;

CHECK:CAMELCASE: Avoid CamelCase: <pic1Value>
#110: FILE: debug/mdb/mdb-proc.h:81:
+extern unsigned long pic1Value;

CHECK:CAMELCASE: Avoid CamelCase: <pic2Value>
#111: FILE: debug/mdb/mdb-proc.h:82:
+extern unsigned long pic2Value;

CHECK:CAMELCASE: Avoid CamelCase: <BreakReserved>
#112: FILE: debug/mdb/mdb-proc.h:83:
+extern unsigned long BreakReserved[4];

CHECK:CAMELCASE: Avoid CamelCase: <BreakPoints>
#113: FILE: debug/mdb/mdb-proc.h:84:
+extern unsigned long BreakPoints[4];

CHECK:CAMELCASE: Avoid CamelCase: <BreakType>
#114: FILE: debug/mdb/mdb-proc.h:85:
+extern unsigned long BreakType[4];

CHECK:CAMELCASE: Avoid CamelCase: <BreakLength>
#115: FILE: debug/mdb/mdb-proc.h:86:
+extern unsigned long BreakLength[4];

CHECK:CAMELCASE: Avoid CamelCase: <BreakTemp>
#116: FILE: debug/mdb/mdb-proc.h:87:
+extern unsigned long BreakTemp[4];

CHECK:CAMELCASE: Avoid CamelCase: <BreakGo>
#117: FILE: debug/mdb/mdb-proc.h:88:
+extern unsigned long BreakGo[4];

CHECK:CAMELCASE: Avoid CamelCase: <BreakProceed>
#118: FILE: debug/mdb/mdb-proc.h:89:
+extern unsigned long BreakProceed[4];

CHECK:CAMELCASE: Avoid CamelCase: <BreakMask>
#119: FILE: debug/mdb/mdb-proc.h:90:
+extern unsigned long BreakMask[MAX_PROCESSORS];

CHECK:CAMELCASE: Avoid CamelCase: <CurrentFrame>
#120: FILE: debug/mdb/mdb-proc.h:91:
+extern StackFrame *CurrentFrame[MAX_PROCESSORS];

CHECK:CAMELCASE: Avoid CamelCase: <NestedInterrupts>
#121: FILE: debug/mdb/mdb-proc.h:92:
+extern unsigned long NestedInterrupts[MAX_PROCESSORS];

CHECK:CAMELCASE: Avoid CamelCase: <ConditionalBreakpoint>
#122: FILE: debug/mdb/mdb-proc.h:93:
+extern unsigned long ConditionalBreakpoint[4];

CHECK:CAMELCASE: Avoid CamelCase: <BreakCondition>
#123: FILE: debug/mdb/mdb-proc.h:94:
+extern unsigned char BreakCondition[4][256];

CHECK:CAMELCASE: Avoid CamelCase: <lastStackFrame>
#124: FILE: debug/mdb/mdb-proc.h:95:
+extern StackFrame lastStackFrame;

CHECK:CAMELCASE: Avoid CamelCase: <lastCR0>
#125: FILE: debug/mdb/mdb-proc.h:96:
+extern unsigned long lastCR0;

CHECK:CAMELCASE: Avoid CamelCase: <lastCR2>
#126: FILE: debug/mdb/mdb-proc.h:97:
+extern unsigned long lastCR2;

CHECK:CAMELCASE: Avoid CamelCase: <lastCR4>
#127: FILE: debug/mdb/mdb-proc.h:98:
+extern unsigned long lastCR4;

CHECK:CAMELCASE: Avoid CamelCase: <CurrentDR7>
#128: FILE: debug/mdb/mdb-proc.h:99:
+extern unsigned long CurrentDR7;

CHECK:CAMELCASE: Avoid CamelCase: <CurrentDR6>
#129: FILE: debug/mdb/mdb-proc.h:100:
+extern unsigned long CurrentDR6[MAX_PROCESSORS];

CHECK:CAMELCASE: Avoid CamelCase: <repeatCommand>
#130: FILE: debug/mdb/mdb-proc.h:101:
+extern unsigned long repeatCommand;

CHECK:CAMELCASE: Avoid CamelCase: <totalLines>
#131: FILE: debug/mdb/mdb-proc.h:102:
+extern unsigned long totalLines;

CHECK:CAMELCASE: Avoid CamelCase: <debuggerInitialized>
#132: FILE: debug/mdb/mdb-proc.h:103:
+extern unsigned long debuggerInitialized;

CHECK:CAMELCASE: Avoid CamelCase: <stackFrame>
#136: FILE: debug/mdb/mdb-proc.h:107:
+extern unsigned long disassemble(StackFrame *stackFrame, unsigned long p, unsigned long count,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#136: FILE: debug/mdb/mdb-proc.h:107:
+extern unsigned long disassemble(StackFrame *stackFrame, unsigned long p, unsigned long count,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: debug/mdb/mdb-proc.h:108:
+                         unsigned long use);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#137: FILE: debug/mdb/mdb-proc.h:108:
+extern unsigned long disassemble(StackFrame *stackFrame, unsigned long p, unsigned long count,
+                         unsigned long use);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: debug/mdb/mdb-proc.h:108:
+                         unsigned long use);$

CHECK:CAMELCASE: Avoid CamelCase: <ClearDebuggerState>
#138: FILE: debug/mdb/mdb-proc.h:109:
+extern void ClearDebuggerState(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#138: FILE: debug/mdb/mdb-proc.h:109:
+extern void ClearDebuggerState(void);

CHECK:CAMELCASE: Avoid CamelCase: <displayMTRRRegisters>
#139: FILE: debug/mdb/mdb-proc.h:110:
+extern void displayMTRRRegisters(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#139: FILE: debug/mdb/mdb-proc.h:110:
+extern void displayMTRRRegisters(void);

CHECK:CAMELCASE: Avoid CamelCase: <DisplayGDT>
#140: FILE: debug/mdb/mdb-proc.h:111:
+extern void DisplayGDT(unsigned char *GDT_ADDRESS);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#140: FILE: debug/mdb/mdb-proc.h:111:
+extern void DisplayGDT(unsigned char *GDT_ADDRESS);

CHECK:CAMELCASE: Avoid CamelCase: <DisplayIDT>
#141: FILE: debug/mdb/mdb-proc.h:112:
+extern void DisplayIDT(unsigned char *IDT_ADDRESS);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#141: FILE: debug/mdb/mdb-proc.h:112:
+extern void DisplayIDT(unsigned char *IDT_ADDRESS);

CHECK:CAMELCASE: Avoid CamelCase: <SetDebugRegisters>
#142: FILE: debug/mdb/mdb-proc.h:113:
+extern void SetDebugRegisters(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#142: FILE: debug/mdb/mdb-proc.h:113:
+extern void SetDebugRegisters(void);

CHECK:CAMELCASE: Avoid CamelCase: <LoadDebugRegisters>
#143: FILE: debug/mdb/mdb-proc.h:114:
+extern void LoadDebugRegisters(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#143: FILE: debug/mdb/mdb-proc.h:114:
+extern void LoadDebugRegisters(void);

CHECK:CAMELCASE: Avoid CamelCase: <ClearTempBreakpoints>
#144: FILE: debug/mdb/mdb-proc.h:115:
+extern void ClearTempBreakpoints(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#144: FILE: debug/mdb/mdb-proc.h:115:
+extern void ClearTempBreakpoints(void);

CHECK:CAMELCASE: Avoid CamelCase: <ValidBreakpoint>
#145: FILE: debug/mdb/mdb-proc.h:116:
+extern unsigned long ValidBreakpoint(unsigned long address);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#145: FILE: debug/mdb/mdb-proc.h:116:
+extern unsigned long ValidBreakpoint(unsigned long address);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#146: FILE: debug/mdb/mdb-proc.h:117:
+extern unsigned char *dump(unsigned char *p, unsigned long count);

CHECK:CAMELCASE: Avoid CamelCase: <dumpWord>
#147: FILE: debug/mdb/mdb-proc.h:118:
+extern unsigned char *dumpWord(unsigned char *p, unsigned long count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#147: FILE: debug/mdb/mdb-proc.h:118:
+extern unsigned char *dumpWord(unsigned char *p, unsigned long count);

CHECK:CAMELCASE: Avoid CamelCase: <dumpDouble>
#148: FILE: debug/mdb/mdb-proc.h:119:
+extern unsigned char *dumpDouble(unsigned char *p, unsigned long count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#148: FILE: debug/mdb/mdb-proc.h:119:
+extern unsigned char *dumpDouble(unsigned char *p, unsigned long count);

CHECK:CAMELCASE: Avoid CamelCase: <dumpLinkedList>
#149: FILE: debug/mdb/mdb-proc.h:120:
+extern unsigned char *dumpLinkedList(unsigned char *p, unsigned long count, unsigned long offset);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#149: FILE: debug/mdb/mdb-proc.h:120:
+extern unsigned char *dumpLinkedList(unsigned char *p, unsigned long count, unsigned long offset);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#150: FILE: debug/mdb/mdb-proc.h:121:
+extern unsigned char *dumpDoubleStack(StackFrame *stackFrame, unsigned char *p, unsigned long count);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <dumpDoubleStack>
#150: FILE: debug/mdb/mdb-proc.h:121:
+extern unsigned char *dumpDoubleStack(StackFrame *stackFrame, unsigned char *p, unsigned long count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#150: FILE: debug/mdb/mdb-proc.h:121:
+extern unsigned char *dumpDoubleStack(StackFrame *stackFrame, unsigned char *p, unsigned long count);

CHECK:CAMELCASE: Avoid CamelCase: <dumpStack>
#151: FILE: debug/mdb/mdb-proc.h:122:
+extern unsigned char *dumpStack(StackFrame *stackFrame, unsigned char *p, unsigned long count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#151: FILE: debug/mdb/mdb-proc.h:122:
+extern unsigned char *dumpStack(StackFrame *stackFrame, unsigned char *p, unsigned long count);

WARNING:LONG_LINE: line length of 135 exceeds 100 columns
#152: FILE: debug/mdb/mdb-proc.h:123:
+extern unsigned long debugger_setup(unsigned long processor, unsigned long Exception, StackFrame *stackFrame, unsigned char *panicMsg);

CHECK:CAMELCASE: Avoid CamelCase: <Exception>
#152: FILE: debug/mdb/mdb-proc.h:123:
+extern unsigned long debugger_setup(unsigned long processor, unsigned long Exception, StackFrame *stackFrame, unsigned char *panicMsg);

CHECK:CAMELCASE: Avoid CamelCase: <panicMsg>
#152: FILE: debug/mdb/mdb-proc.h:123:
+extern unsigned long debugger_setup(unsigned long processor, unsigned long Exception, StackFrame *stackFrame, unsigned char *panicMsg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#152: FILE: debug/mdb/mdb-proc.h:123:
+extern unsigned long debugger_setup(unsigned long processor, unsigned long Exception, StackFrame *stackFrame, unsigned char *panicMsg);

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#153: FILE: debug/mdb/mdb-proc.h:124:
+extern unsigned long debugger_entry(unsigned long Exception, StackFrame *stackFrame, unsigned long processor);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#153: FILE: debug/mdb/mdb-proc.h:124:
+extern unsigned long debugger_entry(unsigned long Exception, StackFrame *stackFrame, unsigned long processor);

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#154: FILE: debug/mdb/mdb-proc.h:125:
+extern unsigned long debugger_command_entry(unsigned long processor, unsigned long Exception, StackFrame *stackFrame);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#154: FILE: debug/mdb/mdb-proc.h:125:
+extern unsigned long debugger_command_entry(unsigned long processor, unsigned long Exception, StackFrame *stackFrame);

CHECK:CAMELCASE: Avoid CamelCase: <ConsoleDisplayBreakReason>
#155: FILE: debug/mdb/mdb-proc.h:126:
+extern unsigned long ConsoleDisplayBreakReason(StackFrame *stackFrame,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#155: FILE: debug/mdb/mdb-proc.h:126:
+extern unsigned long ConsoleDisplayBreakReason(StackFrame *stackFrame,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#156: FILE: debug/mdb/mdb-proc.h:127:
+extern unsigned long ConsoleDisplayBreakReason(StackFrame *stackFrame,
+			       unsigned long reason, unsigned long processor,

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#158: FILE: debug/mdb/mdb-proc.h:129:
+extern unsigned long EvaluateExpression(StackFrame *stackFrame, unsigned char **p, unsigned long *type);

CHECK:CAMELCASE: Avoid CamelCase: <EvaluateExpression>
#158: FILE: debug/mdb/mdb-proc.h:129:
+extern unsigned long EvaluateExpression(StackFrame *stackFrame, unsigned char **p, unsigned long *type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#158: FILE: debug/mdb/mdb-proc.h:129:
+extern unsigned long EvaluateExpression(StackFrame *stackFrame, unsigned char **p, unsigned long *type);

CHECK:CAMELCASE: Avoid CamelCase: <EvaluateNumericExpression>
#159: FILE: debug/mdb/mdb-proc.h:130:
+extern unsigned long EvaluateNumericExpression(StackFrame *stackFrame, unsigned char **p,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#159: FILE: debug/mdb/mdb-proc.h:130:
+extern unsigned long EvaluateNumericExpression(StackFrame *stackFrame, unsigned char **p,

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: debug/mdb/mdb-proc.h:131:
+                                       unsigned long *type);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#160: FILE: debug/mdb/mdb-proc.h:131:
+extern unsigned long EvaluateNumericExpression(StackFrame *stackFrame, unsigned char **p,
+                                       unsigned long *type);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: debug/mdb/mdb-proc.h:131:
+                                       unsigned long *type);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#161: FILE: debug/mdb/mdb-proc.h:132:
+extern unsigned long unassemble(StackFrame *stackFrame, unsigned long ip, unsigned long use,

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: debug/mdb/mdb-proc.h:133:
+                        unsigned long *ret);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#162: FILE: debug/mdb/mdb-proc.h:133:
+extern unsigned long unassemble(StackFrame *stackFrame, unsigned long ip, unsigned long use,
+                        unsigned long *ret);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: debug/mdb/mdb-proc.h:133:
+                        unsigned long *ret);$

CHECK:CAMELCASE: Avoid CamelCase: <DisplayASCIITable>
#163: FILE: debug/mdb/mdb-proc.h:134:
+extern void DisplayASCIITable(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#163: FILE: debug/mdb/mdb-proc.h:134:
+extern void DisplayASCIITable(void);

CHECK:CAMELCASE: Avoid CamelCase: <UpcaseString>
#164: FILE: debug/mdb/mdb-proc.h:135:
+extern unsigned char *UpcaseString(unsigned char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#164: FILE: debug/mdb/mdb-proc.h:135:
+extern unsigned char *UpcaseString(unsigned char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#164: FILE: debug/mdb/mdb-proc.h:135:
+extern unsigned char *UpcaseString(unsigned char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#165: FILE: debug/mdb/mdb-proc.h:136:
+extern unsigned long validate_address(unsigned long addr);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#166: FILE: debug/mdb/mdb-proc.h:137:
+extern unsigned long ScreenInputFromKeyboard(unsigned char *buffer, unsigned long Start, unsigned long Length);

CHECK:CAMELCASE: Avoid CamelCase: <ScreenInputFromKeyboard>
#166: FILE: debug/mdb/mdb-proc.h:137:
+extern unsigned long ScreenInputFromKeyboard(unsigned char *buffer, unsigned long Start, unsigned long Length);

CHECK:CAMELCASE: Avoid CamelCase: <Start>
#166: FILE: debug/mdb/mdb-proc.h:137:
+extern unsigned long ScreenInputFromKeyboard(unsigned char *buffer, unsigned long Start, unsigned long Length);

CHECK:CAMELCASE: Avoid CamelCase: <Length>
#166: FILE: debug/mdb/mdb-proc.h:137:
+extern unsigned long ScreenInputFromKeyboard(unsigned char *buffer, unsigned long Start, unsigned long Length);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#166: FILE: debug/mdb/mdb-proc.h:137:
+extern unsigned long ScreenInputFromKeyboard(unsigned char *buffer, unsigned long Start, unsigned long Length);

CHECK:CAMELCASE: Avoid CamelCase: <GetIP>
#168: FILE: debug/mdb/mdb-proc.h:139:
+extern unsigned long GetIP(StackFrame *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#168: FILE: debug/mdb/mdb-proc.h:139:
+extern unsigned long GetIP(StackFrame *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'StackFrame *' should also have an identifier name
#168: FILE: debug/mdb/mdb-proc.h:139:
+extern unsigned long GetIP(StackFrame *);

CHECK:CAMELCASE: Avoid CamelCase: <GetStackAddress>
#169: FILE: debug/mdb/mdb-proc.h:140:
+extern unsigned long GetStackAddress(StackFrame *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#169: FILE: debug/mdb/mdb-proc.h:140:
+extern unsigned long GetStackAddress(StackFrame *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'StackFrame *' should also have an identifier name
#169: FILE: debug/mdb/mdb-proc.h:140:
+extern unsigned long GetStackAddress(StackFrame *);

CHECK:CAMELCASE: Avoid CamelCase: <GetStackSegment>
#170: FILE: debug/mdb/mdb-proc.h:141:
+extern unsigned long GetStackSegment(StackFrame *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#170: FILE: debug/mdb/mdb-proc.h:141:
+extern unsigned long GetStackSegment(StackFrame *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'StackFrame *' should also have an identifier name
#170: FILE: debug/mdb/mdb-proc.h:141:
+extern unsigned long GetStackSegment(StackFrame *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#171: FILE: debug/mdb/mdb-proc.h:142:
+extern unsigned short read_memory(void *, void *, unsigned);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#171: FILE: debug/mdb/mdb-proc.h:142:
+extern unsigned short read_memory(void *, void *, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#171: FILE: debug/mdb/mdb-proc.h:142:
+extern unsigned short read_memory(void *, void *, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#171: FILE: debug/mdb/mdb-proc.h:142:
+extern unsigned short read_memory(void *, void *, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#171: FILE: debug/mdb/mdb-proc.h:142:
+extern unsigned short read_memory(void *, void *, unsigned);

CHECK:CAMELCASE: Avoid CamelCase: <SSBUpdate>
#172: FILE: debug/mdb/mdb-proc.h:143:
+extern unsigned long SSBUpdate(StackFrame *stackFrame, unsigned long processor);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#172: FILE: debug/mdb/mdb-proc.h:143:
+extern unsigned long SSBUpdate(StackFrame *stackFrame, unsigned long processor);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#173: FILE: debug/mdb/mdb-proc.h:144:
+extern void mdb_breakpoint(void);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000234010.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 19 warnings, 114 checks, 146 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000234010.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
