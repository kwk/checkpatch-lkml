WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#49: FILE: kernel/module.c:310:
+ * operations that modifies the execution flow of preemptible code. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#51: FILE: kernel/module.c:312:
+void __mark_empty_function(const struct __mark_marker_data *mdata,
+	const char *fmt, ...)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#89: FILE: kernel/module.c:345:
 			if (format
+				&& strcmp(format, iter->mdata->format) != 0) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 40)
#101: FILE: kernel/module.c:354:
+			if (flags & MF_LOCKDEP
[...]
 					printk(KERN_NOTICE

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#102: FILE: kernel/module.c:355:
+			if (flags & MF_LOCKDEP
+				&& !(iter->mdata->flags & MF_LOCKDEP)) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 40)
#111: FILE: kernel/module.c:362:
+			if (flags & MF_PRINTK
[...]
 					printk(KERN_NOTICE

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#112: FILE: kernel/module.c:363:
+			if (flags & MF_PRINTK
+				&& !(iter->mdata->flags & MF_PRINTK)) {

WARNING:MEMORY_BARRIER: memory barrier without comment
#152: FILE: kernel/module.c:395:
+				smp_wmb();

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#165: FILE: kernel/module.c:406:
+ * provide the empty callback. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#167: FILE: kernel/module.c:408:
+static int marker_remove_probe_range(const char *name,
 	const struct __mark_marker *begin,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#189: FILE: kernel/module.c:427:
+ * string. */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#200: FILE: kernel/module.c:437:
+			if (probe != iter->mdata->call) continue;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#201: FILE: kernel/module.c:438:
+		printk("name %s \n", iter->mdata->name);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#201: FILE: kernel/module.c:438:
+		printk("name %s \n", iter->mdata->name);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#218: FILE: kernel/module.c:453:
+ * Marker enabling/disabling use the modlist_lock to synchronise. */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#238: FILE: kernel/module.c:471:
+			mod->markers, mod->markers+mod->num_markers);
 			                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#247: FILE: kernel/module.c:479:
+ * Marker enabling/disabling use the modlist_lock to synchronise. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#272: FILE: kernel/module.c:502:
+ * TODO : should output this listing to a procfs file. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#293: FILE: kernel/module.c:1990:
+	markersstringsindex = find_sec(hdr, sechdrs, secstrings,
+				"__markers_strings");

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '&=' should be on the previous line
#312: FILE: kernel/module.c:2015:
+		sechdrs[markersstringsindex].sh_flags
+					&= ~(unsigned long)SHF_ALLOC;

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#322: FILE: kernel/module.c:2672:
+		MARK(list_module, "%s %d %lu",
 				mod->name, mod->state, refcount);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000446565.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 11 warnings, 9 checks, 273 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000446565.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
