WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
Gitweb:     http://git.kernel.org/tip/6beba7adbe092e63dfe8d09fbd1e3ec140474a13

WARNING:SPLIT_STRING: quoted string split across lines
#112: FILE: tools/perf/builtin-report.c:693:
+			pr_debug("call-chain problem with event, "
+				 "skipping it.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: tools/perf/builtin-report.c:705:
+		pr_debug("problem processing %d event, skipping it.\n",
 			event->header.type);

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(2, 3) over __attribute__((format(printf, 2, 3)))
#259: FILE: tools/perf/util/debug.h:9:
+	    const char *fmt, ...) __attribute__((format(printf, 2, 3)));

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#302: FILE: tools/perf/util/include/linux/kernel.h:92:
+#define pr_err(fmt, ...) \
+	do { fprintf(stderr, pr_fmt(fmt), ##__VA_ARGS__); } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#304: FILE: tools/perf/util/include/linux/kernel.h:94:
+#define pr_warning(fmt, ...) \
+	do { fprintf(stderr, pr_fmt(fmt), ##__VA_ARGS__); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#306: FILE: tools/perf/util/include/linux/kernel.h:96:
+#define pr_info(fmt, ...) \
+	do { fprintf(stderr, pr_fmt(fmt), ##__VA_ARGS__); } while (0)

WARNING:SPLIT_STRING: quoted string split across lines
#342: FILE: tools/perf/util/map.c:64:
+				pr_warning("Failed to open %s, continuing "
+					   "without symbols\n",

WARNING:SPLIT_STRING: quoted string split across lines
#349: FILE: tools/perf/util/map.c:68:
+				pr_warning("No symbols found in %s, maybe "
+					   "install a debug package?\n",

WARNING:SPLIT_STRING: quoted string split across lines
#402: FILE: tools/perf/util/symbol.c:303:
+					pr_err("/proc/{kallsyms,modules} "
+					       "inconsistency!\n");

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#532: FILE: tools/perf/util/symbol.c:792:
+			pr_debug2("adjusting symbol: st_value: %Lx sh_addr: "

WARNING:SPLIT_STRING: quoted string split across lines
#533: FILE: tools/perf/util/symbol.c:793:
+			pr_debug2("adjusting symbol: st_value: %Lx sh_addr: "
+				  "%Lx sh_offset: %Lx\n", (u64)sym.st_value,

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#533: FILE: tools/perf/util/symbol.c:793:
+				  "%Lx sh_offset: %Lx\n", (u64)sym.st_value,

WARNING:SPLIT_STRING: quoted string split across lines
#741: FILE: tools/perf/util/symbol.c:1245:
+		pr_warning("Failed to load list of modules in use! "
+			   "Continuing...\n");

WARNING:SPLIT_STRING: quoted string split across lines
#756: FILE: tools/perf/util/symbol.c:1256:
+				pr_warning("Failed to read module symbols!"
+					   " Continuing...\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000056305.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 14 warnings, 1 checks, 627 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000056305.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
