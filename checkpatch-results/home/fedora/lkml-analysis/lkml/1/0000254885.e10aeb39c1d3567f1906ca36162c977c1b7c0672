WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#88: 
 drivers/ide/ide-tape.c              |  561 ++++++++++-------------------------

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#435: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#440: FILE: drivers/ide/ide-atapi.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#451: FILE: drivers/ide/ide-atapi.c:12:
+	printk(KERN_INFO "ide: " fmt, ## args)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#458: FILE: drivers/ide/ide-atapi.c:19:
+ide_startstop_t ide_pc_intr(ide_drive_t *drive, struct ide_atapi_pc *pc,
+	ide_handler_t *handler, unsigned int timeout, ide_expiry_t *expiry,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#461: FILE: drivers/ide/ide-atapi.c:22:
+	void (*io_buffers)(ide_drive_t *, struct ide_atapi_pc *, unsigned, int))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#483: FILE: drivers/ide/ide-atapi.c:44:
+				printk(KERN_ERR "%s: DMA %s error\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#484: FILE: drivers/ide/ide-atapi.c:45:
+				printk(KERN_ERR "%s: DMA %s error\n",
+					drive->name, rq_data_dir(pc->rq)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#518: FILE: drivers/ide/ide-atapi.c:79:
+				printk(KERN_ERR "%s: I/O error in request sense"

WARNING:SPLIT_STRING: quoted string split across lines
#519: FILE: drivers/ide/ide-atapi.c:80:
+				printk(KERN_ERR "%s: I/O error in request sense"
+						" command\n", drive->name);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#544: FILE: drivers/ide/ide-atapi.c:105:
+		printk(KERN_ERR "%s: The device wants to issue more interrupts "

WARNING:SPLIT_STRING: quoted string split across lines
#545: FILE: drivers/ide/ide-atapi.c:106:
+		printk(KERN_ERR "%s: The device wants to issue more interrupts "
+				"in DMA mode\n", drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#556: FILE: drivers/ide/ide-atapi.c:117:
+		printk(KERN_ERR "%s: CoD != 0 in %s\n", drive->name, __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#561: FILE: drivers/ide/ide-atapi.c:122:
+		printk(KERN_ERR "%s: We wanted to %s, but the device wants us "

WARNING:SPLIT_STRING: quoted string split across lines
#562: FILE: drivers/ide/ide-atapi.c:123:
+		printk(KERN_ERR "%s: We wanted to %s, but the device wants us "
+				"to %s!\n", drive->name,

CHECK:BRACES: braces {} should be used on all arms of this statement
#567: FILE: drivers/ide/ide-atapi.c:128:
+	if (!(pc->flags & PC_FLAG_WRITING)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#572: FILE: drivers/ide/ide-atapi.c:133:
+				printk(KERN_ERR "%s: The device wants to send "

WARNING:SPLIT_STRING: quoted string split across lines
#573: FILE: drivers/ide/ide-atapi.c:134:
+				printk(KERN_ERR "%s: The device wants to send "
+						"us more data than expected - "

WARNING:SPLIT_STRING: quoted string split across lines
#574: FILE: drivers/ide/ide-atapi.c:135:
+						"us more data than expected - "
+						"discarding data\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#586: FILE: drivers/ide/ide-atapi.c:147:
+					printk(KERN_ERR "%s: transferred %d of "

WARNING:SPLIT_STRING: quoted string split across lines
#587: FILE: drivers/ide/ide-atapi.c:148:
+					printk(KERN_ERR "%s: transferred %d of "
+							"%d bytes\n",

WARNING:SPLIT_STRING: quoted string split across lines
#599: FILE: drivers/ide/ide-atapi.c:160:
+			debug_log("The device wants to send us more data than "
+				  "expected - allowing transfer\n");

CHECK:BRACES: Unbalanced braces around else statement
#602: FILE: drivers/ide/ide-atapi.c:163:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#631: FILE: drivers/ide/ide-atapi.c:192:
+		printk(KERN_ERR "%s: (IO,CoD != (0,1) while issuing "

WARNING:SPLIT_STRING: quoted string split across lines
#632: FILE: drivers/ide/ide-atapi.c:193:
+		printk(KERN_ERR "%s: (IO,CoD != (0,1) while issuing "
+				"a packet command, retrying\n", drive->name);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#633: FILE: drivers/ide/ide-atapi.c:194:
+		udelay(100);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#636: FILE: drivers/ide/ide-atapi.c:197:
+			printk(KERN_ERR "%s: (IO,CoD != (0,1) while issuing "

WARNING:SPLIT_STRING: quoted string split across lines
#637: FILE: drivers/ide/ide-atapi.c:198:
+			printk(KERN_ERR "%s: (IO,CoD != (0,1) while issuing "
+					"a packet command, ignoring\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#656: FILE: drivers/ide/ide-atapi.c:217:
+		printk(KERN_ERR "%s: Strange, packet command initiated yet "

WARNING:SPLIT_STRING: quoted string split across lines
#657: FILE: drivers/ide/ide-atapi.c:218:
+		printk(KERN_ERR "%s: Strange, packet command initiated yet "
+				"DRQ isn't asserted\n", drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#666: FILE: drivers/ide/ide-atapi.c:227:
+		printk(KERN_ERR "%s: (IO,CoD) != (0,1) while issuing "

WARNING:SPLIT_STRING: quoted string split across lines
#667: FILE: drivers/ide/ide-atapi.c:228:
+		printk(KERN_ERR "%s: (IO,CoD) != (0,1) while issuing "
+				"a packet command\n", drive->name);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#730: FILE: drivers/ide/ide-atapi.c:291:
+		return ide_started;
+	} else {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#799: FILE: drivers/ide/ide-cd.c:835:
+		    int write, void *buffer, unsigned *bufflen,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#909: FILE: drivers/ide/ide-cd.c:1311:
+	unsigned len = sizeof(capbuf);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#981: FILE: drivers/ide/ide-cd.h:146:
+int ide_cd_queue_pc(ide_drive_t *, const unsigned char *, int, void *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const unsigned char *' should also have an identifier name
#981: FILE: drivers/ide/ide-cd.h:146:
+int ide_cd_queue_pc(ide_drive_t *, const unsigned char *, int, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#981: FILE: drivers/ide/ide-cd.h:146:
+int ide_cd_queue_pc(ide_drive_t *, const unsigned char *, int, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#981: FILE: drivers/ide/ide-cd.h:146:
+int ide_cd_queue_pc(ide_drive_t *, const unsigned char *, int, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned *' should also have an identifier name
#981: FILE: drivers/ide/ide-cd.h:146:
+int ide_cd_queue_pc(ide_drive_t *, const unsigned char *, int, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request_sense *' should also have an identifier name
#981: FILE: drivers/ide/ide-cd.h:146:
+int ide_cd_queue_pc(ide_drive_t *, const unsigned char *, int, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#981: FILE: drivers/ide/ide-cd.h:146:
+int ide_cd_queue_pc(ide_drive_t *, const unsigned char *, int, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#981: FILE: drivers/ide/ide-cd.h:146:
+int ide_cd_queue_pc(ide_drive_t *, const unsigned char *, int, void *,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#982: FILE: drivers/ide/ide-cd.h:147:
+		    unsigned *, struct request_sense *, int, unsigned int);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1101: FILE: drivers/ide/ide-cd_ioctl.c:273:
+	unsigned len = sizeof(buf);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1183: FILE: drivers/ide/ide-cd_ioctl.c:449:
+	unsigned len = cgc->buflen;

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1311: FILE: drivers/ide/ide-floppy.c:319:
+	int uptodate = pc->error ? 0 : 1;
 	    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1338: FILE: drivers/ide/ide-floppy.c:328:
+		uptodate = 1; /* FIXME */
 		^^^^^^^^

CHECK:BRACES: Unbalanced braces around else statement
#1367: FILE: drivers/ide/ide-floppy.c:344:
+		} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1368: FILE: drivers/ide/ide-floppy.c:345:
+			printk(KERN_ERR "Error in REQUEST SENSE itself - "

WARNING:SPLIT_STRING: quoted string split across lines
#1369: FILE: drivers/ide/ide-floppy.c:346:
+			printk(KERN_ERR "Error in REQUEST SENSE itself - "
+					"Aborting request!\n");

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1373: FILE: drivers/ide/ide-floppy.c:349:
+	idefloppy_end_request(drive, uptodate, 0);
 	                             ^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1578: FILE: drivers/ide/ide-floppy.c:414:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#1767: FILE: drivers/ide/ide-floppy.c:681:
+	rq->buffer = (char *) pc;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#2199: FILE: drivers/ide/ide-tape.c:626:
+	int uptodate = pc->error ? 0 : 1;
 	    ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#2214: FILE: drivers/ide/ide-tape.c:634:
+		if (uptodate)
 		    ^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2217: FILE: drivers/ide/ide-tape.c:637:
+			printk(KERN_ERR "ide-tape: Error in REQUEST SENSE "

WARNING:SPLIT_STRING: quoted string split across lines
#2218: FILE: drivers/ide/ide-tape.c:638:
+			printk(KERN_ERR "ide-tape: Error in REQUEST SENSE "
+					"itself - Aborting request!\n");

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#2236: FILE: drivers/ide/ide-tape.c:656:
+			uptodate = pc->error;
 			^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#2237: FILE: drivers/ide/ide-tape.c:657:
+	} else if (pc->c[0] == READ_POSITION && uptodate) {
 	                                        ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2241: FILE: drivers/ide/ide-tape.c:661:
+		debug_log(DBG_SENSE, "BOP - %s\n",
+				(readpos[0] & 0x80) ? "Yes" : "No");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2243: FILE: drivers/ide/ide-tape.c:663:
+		debug_log(DBG_SENSE, "EOP - %s\n",
+				(readpos[0] & 0x40) ? "Yes" : "No");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2246: FILE: drivers/ide/ide-tape.c:666:
+			printk(KERN_INFO "ide-tape: Block location is unknown"

WARNING:SPLIT_STRING: quoted string split across lines
#2247: FILE: drivers/ide/ide-tape.c:667:
+			printk(KERN_INFO "ide-tape: Block location is unknown"
+					 "to the tape\n");

WARNING:MISSING_SPACE: break quoted strings at a space character
#2247: FILE: drivers/ide/ide-tape.c:667:
+			printk(KERN_INFO "ide-tape: Block location is unknown"
+					 "to the tape\n");

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#2249: FILE: drivers/ide/ide-tape.c:669:
+			uptodate = 0;
 			^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2252: FILE: drivers/ide/ide-tape.c:672:
+			debug_log(DBG_SENSE, "Block Location - %u\n",
+					be32_to_cpu(*(u32 *)&readpos[4]));

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#2261: FILE: drivers/ide/ide-tape.c:680:
+	idetape_end_request(drive, uptodate, 0);
 	                           ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2687: FILE: drivers/ide/ide-tape.c:956:
+static void ide_tape_create_rw_cmd(idetape_tape_t *tape,
+		struct ide_atapi_pc *pc, unsigned int length,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2755: FILE: drivers/ide/ide-tape.c:1055:
+		ide_tape_create_rw_cmd(tape, pc, rq->current_nr_sectors,
+					(struct idetape_bh *)rq->special,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2764: FILE: drivers/ide/ide-tape.c:1062:
+		ide_tape_create_rw_cmd(tape, pc, rq->current_nr_sectors,
+					 (struct idetape_bh *)rq->special,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#3033: FILE: drivers/ide/ide-taskfile.c:510:
+	rq->hard_nr_sectors = rq->nr_sectors = nsect;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#3034: FILE: drivers/ide/ide-taskfile.c:511:
+	rq->hard_cur_sectors = rq->current_nr_sectors = nsect;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#3099: FILE: drivers/ide/ide.c:91:
+__cacheline_aligned_in_smp DEFINE_SPINLOCK(ide_lock);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_lock' should also have an identifier name
#3099: FILE: drivers/ide/ide.c:91:
+__cacheline_aligned_in_smp DEFINE_SPINLOCK(ide_lock);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#3100: FILE: drivers/ide/ide.c:92:
+EXPORT_SYMBOL(ide_lock);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#3638: FILE: drivers/ide/pci/aec62xx.c:141:
 static unsigned int __devinit init_chipset_aec62xx(struct pci_dev *dev, const char *name)

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#3667: FILE: drivers/ide/pci/amd74xx.c:56:
+	t = (t & ~(3 << ((3 - dn) << 1))) | ((clamp_val(timing->setup, 1, 4) - 1) << ((3 - dn) << 1));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#3672: FILE: drivers/ide/pci/amd74xx.c:60:
+		((clamp_val(timing->act8b, 1, 16) - 1) << 4) | (clamp_val(timing->rec8b, 1, 16) - 1));

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#3676: FILE: drivers/ide/pci/amd74xx.c:63:
+		((clamp_val(timing->active, 1, 16) - 1) << 4) | (clamp_val(timing->recover, 1, 16) - 1));

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#3683: FILE: drivers/ide/pci/amd74xx.c:66:
+	case ATA_UDMA2: t = timing->udma ? (0xc0 | (clamp_val(timing->udma, 2, 5) - 2)) : 0x03; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#3683: FILE: drivers/ide/pci/amd74xx.c:66:
+	case ATA_UDMA2: t = timing->udma ? (0xc0 | (clamp_val(timing->udma, 2, 5) - 2)) : 0x03; break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#3684: FILE: drivers/ide/pci/amd74xx.c:67:
+	case ATA_UDMA4: t = timing->udma ? (0xc0 | amd_cyc2udma[clamp_val(timing->udma, 2, 10)]) : 0x03; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#3684: FILE: drivers/ide/pci/amd74xx.c:67:
+	case ATA_UDMA4: t = timing->udma ? (0xc0 | amd_cyc2udma[clamp_val(timing->udma, 2, 10)]) : 0x03; break;

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#3685: FILE: drivers/ide/pci/amd74xx.c:68:
+	case ATA_UDMA5: t = timing->udma ? (0xc0 | amd_cyc2udma[clamp_val(timing->udma, 1, 10)]) : 0x03; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#3685: FILE: drivers/ide/pci/amd74xx.c:68:
+	case ATA_UDMA5: t = timing->udma ? (0xc0 | amd_cyc2udma[clamp_val(timing->udma, 1, 10)]) : 0x03; break;

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#3686: FILE: drivers/ide/pci/amd74xx.c:69:
+	case ATA_UDMA6: t = timing->udma ? (0xc0 | amd_cyc2udma[clamp_val(timing->udma, 1, 15)]) : 0x03; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#3686: FILE: drivers/ide/pci/amd74xx.c:69:
+	case ATA_UDMA6: t = timing->udma ? (0xc0 | amd_cyc2udma[clamp_val(timing->udma, 1, 15)]) : 0x03; break;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3933: FILE: drivers/ide/pci/siimage.c:302:
+	scsc  = sil_ioread8 (dev, base + (mmio ? 0x4A : 0x8A));

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#3964: FILE: drivers/ide/pci/via82cxxx.c:123:
+		t = (t & ~(3 << ((3 - dn) << 1))) | ((clamp_val(timing->setup, 1, 4) - 1) << ((3 - dn) << 1));

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#3970: FILE: drivers/ide/pci/via82cxxx.c:128:
+		((clamp_val(timing->act8b, 1, 16) - 1) << 4) | (clamp_val(timing->rec8b, 1, 16) - 1));

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#3974: FILE: drivers/ide/pci/via82cxxx.c:131:
+		((clamp_val(timing->active, 1, 16) - 1) << 4) | (clamp_val(timing->recover, 1, 16) - 1));

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#3981: FILE: drivers/ide/pci/via82cxxx.c:134:
+	case ATA_UDMA2: t = timing->udma ? (0xe0 | (clamp_val(timing->udma, 2, 5) - 2)) : 0x03; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#3981: FILE: drivers/ide/pci/via82cxxx.c:134:
+	case ATA_UDMA2: t = timing->udma ? (0xe0 | (clamp_val(timing->udma, 2, 5) - 2)) : 0x03; break;

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#3982: FILE: drivers/ide/pci/via82cxxx.c:135:
+	case ATA_UDMA4: t = timing->udma ? (0xe8 | (clamp_val(timing->udma, 2, 9) - 2)) : 0x0f; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#3982: FILE: drivers/ide/pci/via82cxxx.c:135:
+	case ATA_UDMA4: t = timing->udma ? (0xe8 | (clamp_val(timing->udma, 2, 9) - 2)) : 0x0f; break;

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#3983: FILE: drivers/ide/pci/via82cxxx.c:136:
+	case ATA_UDMA5: t = timing->udma ? (0xe0 | (clamp_val(timing->udma, 2, 9) - 2)) : 0x07; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#3983: FILE: drivers/ide/pci/via82cxxx.c:136:
+	case ATA_UDMA5: t = timing->udma ? (0xe0 | (clamp_val(timing->udma, 2, 9) - 2)) : 0x07; break;

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#3984: FILE: drivers/ide/pci/via82cxxx.c:137:
+	case ATA_UDMA6: t = timing->udma ? (0xe0 | (clamp_val(timing->udma, 2, 9) - 2)) : 0x07; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#3984: FILE: drivers/ide/pci/via82cxxx.c:137:
+	case ATA_UDMA6: t = timing->udma ? (0xe0 | (clamp_val(timing->udma, 2, 9) - 2)) : 0x07; break;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#4050: FILE: drivers/scsi/ide-scsi.c:65:
+	printk(KERN_INFO "ide-scsi: " fmt, ## args)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4101: FILE: drivers/scsi/ide-scsi.c:174:
+		printk(KERN_ERR "%s: scatter gather table too small, %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4102: FILE: drivers/scsi/ide-scsi.c:175:
+		printk(KERN_ERR "%s: scatter gather table too small, %s\n",
+				drive->name, write ? "padding with zeros"

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#4157: FILE: drivers/scsi/ide-scsi.c:198:
+		printk(KERN_INFO "Packet command completed, %d bytes"

WARNING:SPLIT_STRING: quoted string split across lines
#4158: FILE: drivers/scsi/ide-scsi.c:199:
+		printk(KERN_INFO "Packet command completed, %d bytes"
+				 " transferred\n", pc->xferred);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4215: FILE: drivers/scsi/ide-scsi.c:265:
+	debug_log("%s called for %lu\n", __func__,
 		((struct ide_atapi_pc *) rq->special)->scsi_cmd->serial_number);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#4590: FILE: include/linux/ide.h:645:
+	void (*callback)(ide_drive_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4622: FILE: include/linux/ide.h:855:
+extern void ide_do_drive_cmd(ide_drive_t *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#4622: FILE: include/linux/ide.h:855:
+extern void ide_do_drive_cmd(ide_drive_t *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#4622: FILE: include/linux/ide.h:855:
+extern void ide_do_drive_cmd(ide_drive_t *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#4636: FILE: include/linux/ide.h:965:
+void SELECT_MASK(ide_drive_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#4636: FILE: include/linux/ide.h:965:
+void SELECT_MASK(ide_drive_t *, int);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4643: FILE: include/linux/ide.h:972:
+ide_startstop_t ide_pc_intr(ide_drive_t *drive, struct ide_atapi_pc *pc,
+	ide_handler_t *handler, unsigned int timeout, ide_expiry_t *expiry,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#4648: FILE: include/linux/ide.h:977:
+ide_startstop_t ide_transfer_pc(ide_drive_t *, struct ide_atapi_pc *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_atapi_pc *' should also have an identifier name
#4648: FILE: include/linux/ide.h:977:
+ide_startstop_t ide_transfer_pc(ide_drive_t *, struct ide_atapi_pc *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_handler_t *' should also have an identifier name
#4648: FILE: include/linux/ide.h:977:
+ide_startstop_t ide_transfer_pc(ide_drive_t *, struct ide_atapi_pc *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#4648: FILE: include/linux/ide.h:977:
+ide_startstop_t ide_transfer_pc(ide_drive_t *, struct ide_atapi_pc *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_expiry_t *' should also have an identifier name
#4648: FILE: include/linux/ide.h:977:
+ide_startstop_t ide_transfer_pc(ide_drive_t *, struct ide_atapi_pc *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#4650: FILE: include/linux/ide.h:979:
+ide_startstop_t ide_issue_pc(ide_drive_t *, struct ide_atapi_pc *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_atapi_pc *' should also have an identifier name
#4650: FILE: include/linux/ide.h:979:
+ide_startstop_t ide_issue_pc(ide_drive_t *, struct ide_atapi_pc *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_handler_t *' should also have an identifier name
#4650: FILE: include/linux/ide.h:979:
+ide_startstop_t ide_issue_pc(ide_drive_t *, struct ide_atapi_pc *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#4650: FILE: include/linux/ide.h:979:
+ide_startstop_t ide_issue_pc(ide_drive_t *, struct ide_atapi_pc *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_expiry_t *' should also have an identifier name
#4650: FILE: include/linux/ide.h:979:
+ide_startstop_t ide_issue_pc(ide_drive_t *, struct ide_atapi_pc *,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000254885.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 95 warnings, 20 checks, 4092 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000254885.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
