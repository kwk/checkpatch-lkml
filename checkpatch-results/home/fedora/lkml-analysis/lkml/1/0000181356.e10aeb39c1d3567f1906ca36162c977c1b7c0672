WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#64: FILE: drivers/input/touchscreen/Kconfig:48:
+config TOUCHSCREEN_FILTER_LINEAR
+	bool "Linear Touchscreen Filter"
+	depends on INPUT_TOUCHSCREEN && TOUCHSCREEN_FILTER
+	default Y
+	help
+	  Say Y here if you want to use the Linear touchscreen filter, it
+	  enables the use of calibration data for the touchscreen.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#85: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#90: FILE: drivers/input/touchscreen/ts_filter_linear.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#102: FILE: drivers/input/touchscreen/ts_filter_linear.c:13:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#103: FILE: drivers/input/touchscreen/ts_filter_linear.c:14:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#121: FILE: drivers/input/touchscreen/ts_filter_linear.c:32:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#126: FILE: drivers/input/touchscreen/ts_filter_linear.c:37:
+
+

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#145: FILE: drivers/input/touchscreen/ts_filter_linear.c:56:
+static struct sysfs_ops const_sysfs_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:NAKED_SSCANF: unchecked sscanf return value
#160: FILE: drivers/input/touchscreen/ts_filter_linear.c:71:
+	sscanf(attr->attr.name, "%d", &who);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#160: FILE: drivers/input/touchscreen/ts_filter_linear.c:71:
+	sscanf(attr->attr.name, "%d", &who);

WARNING:NAKED_SSCANF: unchecked sscanf return value
#169: FILE: drivers/input/touchscreen/ts_filter_linear.c:80:
+	sscanf(attr->attr.name, "%d", &who);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#169: FILE: drivers/input/touchscreen/ts_filter_linear.c:80:
+	sscanf(attr->attr.name, "%d", &who);

WARNING:NAKED_SSCANF: unchecked sscanf return value
#170: FILE: drivers/input/touchscreen/ts_filter_linear.c:81:
+	sscanf(buf, "%d", &obj->tsfl->constants[who]);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#170: FILE: drivers/input/touchscreen/ts_filter_linear.c:81:
+	sscanf(buf, "%d", &obj->tsfl->constants[who]);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*tsfl)...) over kzalloc(sizeof(struct ts_filter_linear)...)
#185: FILE: drivers/input/touchscreen/ts_filter_linear.c:96:
+	tsfl = kzalloc(sizeof(struct ts_filter_linear), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#218: FILE: drivers/input/touchscreen/ts_filter_linear.c:129:
+	printk(KERN_INFO"  Created Linear ts filter depth %d\n", count_coords);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#218: FILE: drivers/input/touchscreen/ts_filter_linear.c:129:
+	printk(KERN_INFO"  Created Linear ts filter depth %d\n", count_coords);

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (tsf->next->api->clear)
#235: FILE: drivers/input/touchscreen/ts_filter_linear.c:146:
+		(tsf->next->api->clear)(tsf->next);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LINE_SPACING: Please don't use multiple blank lines
#238: FILE: drivers/input/touchscreen/ts_filter_linear.c:149:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (tsf->next->api->scale)
#250: FILE: drivers/input/touchscreen/ts_filter_linear.c:161:
+		(tsf->next->api->scale)(tsf->next, coords);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (tsf->next->api->process)
#256: FILE: drivers/input/touchscreen/ts_filter_linear.c:167:
+		return (tsf->next->api->process)(tsf->next, coords);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#274: FILE: include/linux/ts_filter_linear.h:1:
+#ifndef __TS_FILTER_LINEAR_H__

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct const_obj *const' should also have an identifier name
#303: FILE: include/linux/ts_filter_linear.h:30:
+	ssize_t (*show)(struct const_obj *const, struct const_attribute *attr,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct const_obj *const' should also have an identifier name
#305: FILE: include/linux/ts_filter_linear.h:32:
+	ssize_t (*store)(struct const_obj *const, struct const_attribute *attr,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000181356.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 14 warnings, 8 checks, 260 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000181356.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
