WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
> diff --git a/drivers/input/touchscreen/Kconfig b/drivers/input/touchscreen/Kconfig

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#54: 
>  config TOUCHSCREEN_ELAN_I2C_8232
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#55: 
>        tristate "Elan 8232 I2C touchscreen"
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#56: 
>        depends on I2C
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#57: 
> +       help
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#58: 
> +         This enables support for Elan over I2C based touchscreens.
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#59: 
> +         Such touchscreen is used in HTC Dream.
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#64: 
>  config TOUCHSCREEN_ELO
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#65: 
>        tristate "Elo serial touchscreens"
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#67: 
>        depends on I2C
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#68: 
>        help
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#69: 
>          This enables support for Synaptics RMI over I2C based touchscreens.
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#70: 
> +         Such touchscreen is used in HTC Dream.
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#73: 
>  config TOUCHSCREEN_TOUCHRIGHT
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#74: 
>        tristate "Touchright serial touchscreen"
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#83: 
>  *
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#84: 
>  * Copyright (C) 2007 Google, Inc.
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#85: 
>  *
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#88: 
>  #include <linux/module.h>
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#89: 
>  #include <linux/delay.h>
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#91: 
>  #include <linux/hrtimer.h>
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#92: 
>  #include <linux/i2c.h>
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#93: 
>  #include <linux/input.h>
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#95: 
>  #include <linux/platform_device.h>
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#96: 
>  #include <linux/synaptics_i2c_rmi.h>
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#100: 
>  static struct workqueue_struct *synaptics_wq;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#102: 
>  struct synaptics_ts_data {
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#103: 
> -       uint16_t addr;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#104: 
> +       u16 addr;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#108: 
>        struct i2c_client *client;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#109: 
>        struct input_dev *input_dev;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#110: 
>        int use_irq;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#111: 
>        struct hrtimer timer;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#112: 
>        struct work_struct  work;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#113: 
> -       uint16_t max[2];
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#114: 
> +       u16 max[2];
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#115: 
>        int snap_state[2][2];
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#116: 
>        int snap_down_on[2];
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#117: 
>        int snap_down_off[2];
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#119: 
>        int snap_up_off[2];
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#120: 
>        int snap_down[2];
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#121: 
>        int snap_up[2];
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#122: 
> -       uint32_t flags;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#123: 
> +       u32 flags;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#124: 
>        int (*power)(int on);
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#125: 
> -       struct early_suspend early_suspend;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#126: 
>  };
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#133: 
>  static int synaptics_init_panel(struct synaptics_ts_data *ts)
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#134: 
>  {
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#135: 
>        int ret;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#137: 
> -       ret = i2c_smbus_write_byte_data(ts->client, 0xff, 0x10); /* page select = 0x10 */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#138: 
> +       /* page select = 0x10 */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#139: 
> +       ret = i2c_smbus_write_byte_data(ts->client, 0xff, 0x10);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#140: 
>        if (ret < 0) {
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#141: 
> -               printk(KERN_ERR "i2c_smbus_write_byte_data failed for page select\n");
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#142: 
> +               printk(KERN_ERR "smbus write failed for page select\n");
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#143: 
>                goto err_page_select_failed;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#144: 
>        }
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#145: 
> -       ret = i2c_smbus_write_byte_data(ts->client, 0x41, 0x04); /* Set "No Clip Z" */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#147: 
> +       /* Set "No Clip Z" */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#148: 
> +       ret = i2c_smbus_write_byte_data(ts->client, 0x41, 0x04);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#149: 
>        if (ret < 0)
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#150: 
> -               printk(KERN_ERR "i2c_smbus_write_byte_data failed for No Clip Z\n");
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#151: 
> +               printk(KERN_ERR "smbus write failed for No Clip Z\n");
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#153: 
>  err_page_select_failed:
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#154: 
> -       ret = i2c_smbus_write_byte_data(ts->client, 0xff, 0x04); /* page select = 0x04 */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#155: 
> +       /* page select = 0x04 */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#156: 
> +       ret = i2c_smbus_write_byte_data(ts->client, 0xff, 0x04);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#157: 
>        if (ret < 0)
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#158: 
> -               printk(KERN_ERR "i2c_smbus_write_byte_data failed for page select\n");
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#159: 
> -       ret = i2c_smbus_write_byte_data(ts->client, 0xf0, 0x81); /* normal operation, 80 reports per second */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#160: 
> +               printk(KERN_ERR "smbus write failed for page select\n");
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#161: 
> +       /* normal operation, 80 reports per second */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#162: 
> +       ret = i2c_smbus_write_byte_data(ts->client, 0xf0, 0x81);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#163: 
>        if (ret < 0)
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#164: 
> -               printk(KERN_ERR "synaptics_ts_resume: i2c_smbus_write_byte_data failed\n");
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#165: 
> +               printk(KERN_ERR "smbus write failed for 80/second\n");
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#166: 
>        return ret;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#167: 
>  }
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#171: 
> +       int pos[2][2];
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#172: 
> +       int f, a;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#173: 
> +       int base = 2;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#174: 
> +       int z = buf[1];
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#175: 
> +       int w = buf[0] >> 4;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#176: 
> +       int finger = buf[0] & 7;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#177: 
> +       int finger2_pressed;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#179: 
> +       for (f = 0; f < 2; f++) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#180: 
> +               u32 flip_flag = SYNAPTICS_FLIP_X;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#181: 
> +               for (a = 0; a < 2; a++) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#182: 
> +                       int p = buf[base + 1];
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#183: 
> +                       p |= (u16)(buf[base] & 0x1f) << 8;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#184: 
> +                       if (ts->flags & flip_flag)
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#185: 
> +                               p = ts->max[a] - p;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#186: 
> +                       if (ts->flags & SYNAPTICS_SNAP_TO_INACTIVE_EDGE) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#187: 
> +                               if (ts->snap_state[f][a]) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#188: 
> +                                       if (p <= ts->snap_down_off[a])
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#189: 
> +                                               p = ts->snap_down[a];
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#190: 
> +                                       else if (p >= ts->snap_up_off[a])
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#191: 
> +                                               p = ts->snap_up[a];
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#192: 
> +                                       else
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#193: 
> +                                               ts->snap_state[f][a] = 0;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#194: 
> +                               } else {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#195: 
> +                                       if (p <= ts->snap_down_on[a]) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#196: 
> +                                               p = ts->snap_down[a];
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#197: 
> +                                               ts->snap_state[f][a] = 1;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#198: 
> +                                       } else if (p >= ts->snap_up_on[a]) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#199: 
> +                                               p = ts->snap_up[a];
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#200: 
> +                                               ts->snap_state[f][a] = 1;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#201: 
> +                                       }
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#202: 
> +                               }
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#203: 
> +                       }
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#204: 
> +                       pos[f][a] = p;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#205: 
> +                       base += 2;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#206: 
> +                       flip_flag <<= 1;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#207: 
> +               }
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#208: 
> +               base += 2;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#209: 
> +               if (ts->flags & SYNAPTICS_SWAP_XY)
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#210: 
> +                       swap(pos[f][0], pos[f][1]);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#211: 
> +       }
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#212: 
> +       if (z) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#213: 
> +               input_report_abs(ts->input_dev, ABS_X, pos[0][0]);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#214: 
> +               input_report_abs(ts->input_dev, ABS_Y, pos[0][1]);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#215: 
> +       }
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#216: 
> +       input_report_abs(ts->input_dev, ABS_PRESSURE, z);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#217: 
> +       input_report_abs(ts->input_dev, ABS_TOOL_WIDTH, w);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#218: 
> +       input_report_key(ts->input_dev, BTN_TOUCH, finger);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#219: 
> +       finger2_pressed = finger > 1 && finger != 7;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#220: 
> +       input_report_key(ts->input_dev, BTN_2, finger2_pressed);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#221: 
> +       if (finger2_pressed) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#222: 
> +               input_report_abs(ts->input_dev, ABS_HAT0X, pos[1][0]);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#223: 
> +               input_report_abs(ts->input_dev, ABS_HAT0Y, pos[1][1]);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#224: 
> +       }
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#225: 
> +       input_sync(ts->input_dev);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#228: 
>  static void synaptics_ts_work_func(struct work_struct *work)
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#229: 
>  {
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#230: 
>        int i;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#231: 
>        int ret;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#232: 
>        int bad_data = 0;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#233: 
>        struct i2c_msg msg[2];
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#234: 
> -       uint8_t start_reg;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#235: 
> -       uint8_t buf[15];
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#236: 
> -       struct synaptics_ts_data *ts = container_of(work, struct synaptics_ts_data, work);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#237: 
> +       u8 start_reg = 0;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#238: 
> +       u8 buf[15];
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#239: 
> +       struct synaptics_ts_data *ts =
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#240: 
> +               container_of(work, struct synaptics_ts_data, work);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#242: 
>        msg[0].addr = ts->client->addr;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#243: 
>        msg[0].flags = 0;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#244: 
>        msg[0].len = 1;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#245: 
>        msg[0].buf = &start_reg;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#246: 
> -       start_reg = 0x00;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#247: 
>        msg[1].addr = ts->client->addr;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#248: 
>        msg[1].flags = I2C_M_RD;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#249: 
>        msg[1].len = sizeof(buf);
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#250: 
>        msg[1].buf = buf;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#252: 
> -       /* printk("synaptics_ts_work_func\n"); */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#253: 
>        for (i = 0; i < ((ts->use_irq && !bad_data) ? 1 : 10); i++) {
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#254: 
>                ret = i2c_transfer(ts->client->adapter, msg, 2);
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#255: 
>                if (ret < 0) {
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#256: 
> -                       printk(KERN_ERR "synaptics_ts_work_func: i2c_transfer failed\n");
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#257: 
> +                       printk(KERN_ERR "ts_work: i2c_transfer failed\n");
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#262: 
>                        bad_data = 1;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#263: 
> -               } else {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#264: 
> -                       /* printk("synaptics_ts_work_func: %x %x %x %x %x %x" */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#265: 
> -                       /*        " %x %x %x %x %x %x %x %x %x, ret %d\n", */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#266: 
> -                       /*        buf[0], buf[1], buf[2], buf[3], */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#267: 
> -                       /*        buf[4], buf[5], buf[6], buf[7], */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#268: 
> -                       /*        buf[8], buf[9], buf[10], buf[11], */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#269: 
> -                       /*        buf[12], buf[13], buf[14], ret); */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#270: 
> -                       if ((buf[14] & 0xc0) != 0x40) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#271: 
> -                               printk(KERN_WARNING "synaptics_ts_work_func:"
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#272: 
> -                                      " bad read %x %x %x %x %x %x %x %x %x"
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#273: 
> -                                      " %x %x %x %x %x %x, ret %d\n",
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#274: 
> -                                      buf[0], buf[1], buf[2], buf[3],
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#275: 
> -                                      buf[4], buf[5], buf[6], buf[7],
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#276: 
> -                                      buf[8], buf[9], buf[10], buf[11],
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#277: 
> -                                      buf[12], buf[13], buf[14], ret);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#278: 
> -                               if (bad_data)
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#279: 
> -                                       synaptics_init_panel(ts);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#280: 
> -                               bad_data = 1;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#281: 
> -                               continue;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#282: 
> -                       }
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#283: 
> -                       bad_data = 0;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#284: 
> -                       if ((buf[14] & 1) == 0) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#285: 
> -                               /* printk("read %d coordinates\n", i); */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#286: 
> -                               break;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#287: 
> -                       } else {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#288: 
> -                               int pos[2][2];
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#289: 
> -                               int f, a;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#290: 
> -                               int base;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#291: 
> -                               /* int x = buf[3] | (uint16_t)(buf[2] & 0x1f) << 8; */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#292: 
> -                               /* int y = buf[5] | (uint16_t)(buf[4] & 0x1f) << 8; */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#293: 
> -                               int z = buf[1];
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#294: 
> -                               int w = buf[0] >> 4;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#295: 
> -                               int finger = buf[0] & 7;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#297: 
> -                               /* int x2 = buf[3+6] | (uint16_t)(buf[2+6] & 0x1f) << 8; */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#298: 
> -                               /* int y2 = buf[5+6] | (uint16_t)(buf[4+6] & 0x1f) << 8; */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#299: 
> -                               /* int z2 = buf[1+6]; */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#300: 
> -                               /* int w2 = buf[0+6] >> 4; */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#301: 
> -                               /* int finger2 = buf[0+6] & 7; */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#303: 
> -                               /* int dx = (int8_t)buf[12]; */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#304: 
> -                               /* int dy = (int8_t)buf[13]; */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#305: 
> -                               int finger2_pressed;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#307: 
> -                               /* printk("x %4d, y %4d, z %3d, w %2d, F %d, 2nd: x %4d, y %4d, z %3d, w %2d, F %d, dx %4d, dy %4d\n", */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#308: 
> -                               /*      x, y, z, w, finger, */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#309: 
> -                               /*      x2, y2, z2, w2, finger2, */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#310: 
> -                               /*      dx, dy); */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#312: 
> -                               base = 2;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#313: 
> -                               for (f = 0; f < 2; f++) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#314: 
> -                                       uint32_t flip_flag = SYNAPTICS_FLIP_X;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#315: 
> -                                       for (a = 0; a < 2; a++) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#316: 
> -                                               int p = buf[base + 1];
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#317: 
> -                                               p |= (uint16_t)(buf[base] & 0x1f) << 8;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#318: 
> -                                               if (ts->flags & flip_flag)
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#319: 
> -                                                       p = ts->max[a] - p;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#320: 
> -                                               if (ts->flags & SYNAPTICS_SNAP_TO_INACTIVE_EDGE) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#321: 
> -                                                       if (ts->snap_state[f][a]) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#322: 
> -                                                               if (p <= ts->snap_down_off[a])
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#323: 
> -                                                                       p = ts->snap_down[a];
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#324: 
> -                                                               else if (p >= ts->snap_up_off[a])
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#325: 
> -                                                                       p = ts->snap_up[a];
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#326: 
> -                                                               else
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#327: 
> -                                                                       ts->snap_state[f][a] = 0;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#328: 
> -                                                       } else {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#329: 
> -                                                               if (p <= ts->snap_down_on[a]) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#330: 
> -                                                                       p = ts->snap_down[a];
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#331: 
> -                                                                       ts->snap_state[f][a] = 1;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#332: 
> -                                                               } else if (p >= ts->snap_up_on[a]) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#333: 
> -                                                                       p = ts->snap_up[a];
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#334: 
> -                                                                       ts->snap_state[f][a] = 1;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#335: 
> -                                                               }
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#336: 
> -                                                       }
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#337: 
> -                                               }
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#338: 
> -                                               pos[f][a] = p;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#339: 
> -                                               base += 2;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#340: 
> -                                               flip_flag <<= 1;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#341: 
> -                                       }
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#342: 
> -                                       base += 2;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#343: 
> -                                       if (ts->flags & SYNAPTICS_SWAP_XY)
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#344: 
> -                                               swap(pos[f][0], pos[f][1]);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#345: 
> -                               }
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#346: 
> -                               if (z) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#347: 
> -                                       input_report_abs(ts->input_dev, ABS_X, pos[0][0]);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#348: 
> -                                       input_report_abs(ts->input_dev, ABS_Y, pos[0][1]);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#349: 
> -                               }
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#350: 
> -                               input_report_abs(ts->input_dev, ABS_PRESSURE, z);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#351: 
> -                               input_report_abs(ts->input_dev, ABS_TOOL_WIDTH, w);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#352: 
> -                               input_report_key(ts->input_dev, BTN_TOUCH, finger);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#353: 
> -                               finger2_pressed = finger > 1 && finger != 7;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#354: 
> -                               input_report_key(ts->input_dev, BTN_2, finger2_pressed);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#355: 
> -                               if (finger2_pressed) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#356: 
> -                                       input_report_abs(ts->input_dev, ABS_HAT0X, pos[1][0]);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#357: 
> -                                       input_report_abs(ts->input_dev, ABS_HAT0Y, pos[1][1]);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#358: 
> -                               }
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#359: 
> -                               input_sync(ts->input_dev);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#360: 
> -                       }
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#361: 
> +                       continue;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#362: 
> +               }
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#363: 
> +               if ((buf[14] & 0xc0) != 0x40) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#364: 
> +                       printk(KERN_WARNING "synaptics_ts_work_func:"
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#365: 
> +                              " bad read %x %x %x %x %x %x %x %x %x"
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#366: 
> +                              " %x %x %x %x %x %x, ret %d\n",
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#367: 
> +                              buf[0], buf[1], buf[2], buf[3],
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#368: 
> +                              buf[4], buf[5], buf[6], buf[7],
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#369: 
> +                              buf[8], buf[9], buf[10], buf[11],
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#370: 
> +                              buf[12], buf[13], buf[14], ret);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#371: 
> +                       if (bad_data)
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#372: 
> +                               synaptics_init_panel(ts);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#373: 
> +                       bad_data = 1;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#374: 
> +                       continue;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#375: 
>                }
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#376: 
> +               bad_data = 0;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#377: 
> +               if ((buf[14] & 1) == 0)
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#378: 
> +                       break;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#380: 
> +               decode_report(ts, buf);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#381: 
>        }
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#382: 
>        if (ts->use_irq)
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#383: 
>                enable_irq(ts->client->irq);
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#386: 
>  static enum hrtimer_restart synaptics_ts_timer_func(struct hrtimer *timer)
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#387: 
>  {
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#388: 
> -       struct synaptics_ts_data *ts = container_of(timer, struct synaptics_ts_data, timer);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#389: 
> -       /* printk("synaptics_ts_timer_func\n"); */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#390: 
> +       struct synaptics_ts_data *ts =
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#391: 
> +               container_of(timer, struct synaptics_ts_data, timer);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#393: 
>        queue_work(synaptics_wq, &ts->work);
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#396: 
>  {
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#397: 
>        struct synaptics_ts_data *ts = dev_id;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#399: 
> -       /* printk("synaptics_ts_irq_handler\n"); */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#400: 
>        disable_irq(ts->client->irq);
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#401: 
>        queue_work(synaptics_wq, &ts->work);
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#402: 
>        return IRQ_HANDLED;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#403: 
>  }
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#407: 
> +       int ret;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#408: 
> +       int retry = 10;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#410: 
> +       /* device command = reset */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#411: 
> +       ret = i2c_smbus_write_byte_data(ts->client, 0xf4, 0x01);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#412: 
> +       if (ret < 0) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#413: 
> +               printk(KERN_ERR "i2c_smbus_write_byte_data failed\n");
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#414: 
> +               /* fail? */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#415: 
> +       }
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#417: 
> +       while (retry-- > 0) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#418: 
> +               ret = i2c_smbus_read_byte_data(ts->client, 0xe4);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#419: 
> +               if (ret >= 0)
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#420: 
> +                       break;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#421: 
> +               msleep(100);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#422: 
> +       }
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#423: 
> +       if (ret < 0) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#424: 
> +               printk(KERN_ERR "i2c_smbus_read_byte_data failed\n");
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#425: 
> +               return ret;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#426: 
> +       }
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#428: 
> +       printk(KERN_INFO "synaptics_ts_probe: Product Major Version %x\n", ret);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#429: 
> +       *panel_version = ret << 8;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#430: 
> +       ret = i2c_smbus_read_byte_data(ts->client, 0xe5);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#431: 
> +       if (ret < 0) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#432: 
> +               printk(KERN_ERR "i2c_smbus_read_byte_data failed\n");
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#433: 
> +               return ret;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#434: 
> +       }
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#435: 
> +       printk(KERN_INFO "synaptics_ts_probe: Product Minor Version %x\n", ret);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#436: 
> +       *panel_version |= ret;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#438: 
> +       ret = i2c_smbus_read_byte_data(ts->client, 0xe3);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#439: 
> +       if (ret < 0) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#440: 
> +               printk(KERN_ERR "i2c_smbus_read_byte_data failed\n");
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#441: 
> +               return ret;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#442: 
> +       }
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#443: 
> +       printk(KERN_INFO "synaptics_ts_probe: product property %x\n", ret);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#444: 
> +       return 0;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#448: 
> +                         struct synaptics_i2c_rmi_platform_data *pdata,
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#449: 
> +                         u16 max_x, u16 max_y)
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#451: 
> +       u32 inactive_area_left;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#452: 
> +       u32 inactive_area_right;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#453: 
> +       u32 inactive_area_top;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#454: 
> +       u32 inactive_area_bottom;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#455: 
> +       u32 snap_left_on;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#456: 
> +       u32 snap_left_off;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#457: 
> +       u32 snap_right_on;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#458: 
> +       u32 snap_right_off;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#459: 
> +       u32 snap_top_on;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#460: 
> +       u32 snap_top_off;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#461: 
> +       u32 snap_bottom_on;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#462: 
> +       u32 snap_bottom_off;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#463: 
> +       u32 fuzz_x;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#464: 
> +       u32 fuzz_y;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#465: 
> +       int fuzz_p;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#466: 
> +       int fuzz_w;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#468: 
> +       inactive_area_left = pdata->inactive_left;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#469: 
> +       inactive_area_right = pdata->inactive_right;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#470: 
> +       inactive_area_top = pdata->inactive_top;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#471: 
> +       inactive_area_bottom = pdata->inactive_bottom;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#472: 
> +       snap_left_on = pdata->snap_left_on;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#473: 
> +       snap_left_off = pdata->snap_left_off;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#474: 
> +       snap_right_on = pdata->snap_right_on;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#475: 
> +       snap_right_off = pdata->snap_right_off;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#476: 
> +       snap_top_on = pdata->snap_top_on;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#477: 
> +       snap_top_off = pdata->snap_top_off;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#478: 
> +       snap_bottom_on = pdata->snap_bottom_on;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#479: 
> +       snap_bottom_off = pdata->snap_bottom_off;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#480: 
> +       fuzz_x = pdata->fuzz_x;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#481: 
> +       fuzz_y = pdata->fuzz_y;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#482: 
> +       fuzz_p = pdata->fuzz_p;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#483: 
> +       fuzz_w = pdata->fuzz_w;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#485: 
> +       inactive_area_left = inactive_area_left * max_x / 0x10000;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#486: 
> +       inactive_area_right = inactive_area_right * max_x / 0x10000;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#487: 
> +       inactive_area_top = inactive_area_top * max_y / 0x10000;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#488: 
> +       inactive_area_bottom = inactive_area_bottom * max_y / 0x10000;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#489: 
> +       snap_left_on = snap_left_on * max_x / 0x10000;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#490: 
> +       snap_left_off = snap_left_off * max_x / 0x10000;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#491: 
> +       snap_right_on = snap_right_on * max_x / 0x10000;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#492: 
> +       snap_right_off = snap_right_off * max_x / 0x10000;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#493: 
> +       snap_top_on = snap_top_on * max_y / 0x10000;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#494: 
> +       snap_top_off = snap_top_off * max_y / 0x10000;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#495: 
> +       snap_bottom_on = snap_bottom_on * max_y / 0x10000;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#496: 
> +       snap_bottom_off = snap_bottom_off * max_y / 0x10000;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#497: 
> +       fuzz_x = fuzz_x * max_x / 0x10000;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#498: 
> +       fuzz_y = fuzz_y * max_y / 0x10000;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#500: 
> +       ts->snap_down[!!(ts->flags & SYNAPTICS_SWAP_XY)] = -inactive_area_left;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#501: 
> +       ts->snap_up[!!(ts->flags & SYNAPTICS_SWAP_XY)] = max_x + inactive_area_right;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#502: 
> +       ts->snap_down[!(ts->flags & SYNAPTICS_SWAP_XY)] = -inactive_area_top;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#503: 
> +       ts->snap_up[!(ts->flags & SYNAPTICS_SWAP_XY)] = max_y + inactive_area_bottom;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#504: 
> +       ts->snap_down_on[!!(ts->flags & SYNAPTICS_SWAP_XY)] = snap_left_on;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#505: 
> +       ts->snap_down_off[!!(ts->flags & SYNAPTICS_SWAP_XY)] = snap_left_off;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#506: 
> +       ts->snap_up_on[!!(ts->flags & SYNAPTICS_SWAP_XY)] = max_x - snap_right_on;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#507: 
> +       ts->snap_up_off[!!(ts->flags & SYNAPTICS_SWAP_XY)] = max_x - snap_right_off;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#508: 
> +       ts->snap_down_on[!(ts->flags & SYNAPTICS_SWAP_XY)] = snap_top_on;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#509: 
> +       ts->snap_down_off[!(ts->flags & SYNAPTICS_SWAP_XY)] = snap_top_off;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#510: 
> +       ts->snap_up_on[!(ts->flags & SYNAPTICS_SWAP_XY)] = max_y - snap_bottom_on;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#511: 
> +       ts->snap_up_off[!(ts->flags & SYNAPTICS_SWAP_XY)] = max_y - snap_bottom_off;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#512: 
> +       printk(KERN_INFO "synaptics_ts_probe: max_x %d, max_y %d\n", max_x, max_y);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#513: 
> +       printk(KERN_INFO "synaptics_ts_probe: inactive_x %d %d, inactive_y %d %d\n",
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#514: 
> +              inactive_area_left, inactive_area_right,
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#515: 
> +              inactive_area_top, inactive_area_bottom);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#516: 
> +       printk(KERN_INFO "synaptics_ts_probe: snap_x %d-%d %d-%d, snap_y %d-%d %d-%d\n",
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#517: 
> +              snap_left_on, snap_left_off, snap_right_on, snap_right_off,
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#518: 
> +              snap_top_on, snap_top_off, snap_bottom_on, snap_bottom_off);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#520: 
> +       input_set_abs_params(ts->input_dev, ABS_X, -inactive_area_left, max_x + inactive_area_right, fuzz_x, 0);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#521: 
> +       input_set_abs_params(ts->input_dev, ABS_Y, -inactive_area_top, max_y + inactive_area_bottom, fuzz_y, 0);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#522: 
> +       input_set_abs_params(ts->input_dev, ABS_PRESSURE, 0, 255, fuzz_p, 0);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#523: 
> +       input_set_abs_params(ts->input_dev, ABS_TOOL_WIDTH, 0, 15, fuzz_w, 0);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#524: 
> +       input_set_abs_params(ts->input_dev, ABS_HAT0X, -inactive_area_left, max_x + inactive_area_right, fuzz_x, 0);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#525: 
> +       input_set_abs_params(ts->input_dev, ABS_HAT0Y, -inactive_area_top, max_y + inactive_area_bottom, fuzz_y, 0);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#528: 
>  static int synaptics_ts_probe(
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#529: 
>        struct i2c_client *client, const struct i2c_device_id *id)
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#530: 
>  {
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#531: 
>        struct synaptics_ts_data *ts;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#532: 
> -       uint8_t buf0[4];
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#533: 
> -       uint8_t buf1[8];
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#534: 
> +       u8 buf0[4];
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#535: 
> +       u8 buf1[8];
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#536: 
>        struct i2c_msg msg[2];
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#537: 
>        int ret = 0;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#538: 
> -       uint16_t max_x, max_y;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#539: 
> -       int fuzz_x, fuzz_y, fuzz_p, fuzz_w;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#540: 
>        struct synaptics_i2c_rmi_platform_data *pdata;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#541: 
> -       int inactive_area_left;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#542: 
> -       int inactive_area_right;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#543: 
> -       int inactive_area_top;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#544: 
> -       int inactive_area_bottom;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#545: 
> -       int snap_left_on;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#546: 
> -       int snap_left_off;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#547: 
> -       int snap_right_on;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#548: 
> -       int snap_right_off;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#549: 
> -       int snap_top_on;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#550: 
> -       int snap_top_off;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#551: 
> -       int snap_bottom_on;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#552: 
> -       int snap_bottom_off;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#553: 
> -       uint32_t panel_version;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#554: 
> +       u32 panel_version = 0;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#555: 
> +       u16 max_x, max_y;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#557: 
>        if (!i2c_check_functionality(client->adapter, I2C_FUNC_I2C)) {
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#558: 
>                printk(KERN_ERR "synaptics_ts_probe: need I2C_FUNC_I2C\n");
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#560: 
>        pdata = client->dev.platform_data;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#561: 
>        if (pdata)
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#562: 
>                ts->power = pdata->power;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#563: 
> +       else
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#564: 
> +               pdata = kzalloc(sizeof(*pdata), GFP_KERNEL);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#569: 
>        if (ts->power) {
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#570: 
>                ret = ts->power(1);
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#571: 
>                if (ret < 0) {
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#573: 
>                }
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#574: 
>        }
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#576: 
> -       ret = i2c_smbus_write_byte_data(ts->client, 0xf4, 0x01); /* device command = reset */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#577: 
> -       if (ret < 0) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#578: 
> -               printk(KERN_ERR "i2c_smbus_write_byte_data failed\n");
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#579: 
> -               /* fail? */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#580: 
> -       }
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#581: 
> -       {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#582: 
> -               int retry = 10;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#583: 
> -               while (retry-- > 0) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#584: 
> -                       ret = i2c_smbus_read_byte_data(ts->client, 0xe4);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#585: 
> -                       if (ret >= 0)
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#586: 
> -                               break;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#587: 
> -                       msleep(100);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#588: 
> -               }
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#589: 
> -       }
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#590: 
> -       if (ret < 0) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#591: 
> -               printk(KERN_ERR "i2c_smbus_read_byte_data failed\n");
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#592: 
> -               goto err_detect_failed;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#593: 
> -       }
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#594: 
> -       printk(KERN_INFO "synaptics_ts_probe: Product Major Version %x\n", ret);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#595: 
> -       panel_version = ret << 8;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#596: 
> -       ret = i2c_smbus_read_byte_data(ts->client, 0xe5);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#597: 
> -       if (ret < 0) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#598: 
> -               printk(KERN_ERR "i2c_smbus_read_byte_data failed\n");
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#599: 
> -               goto err_detect_failed;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#600: 
> -       }
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#601: 
> -       printk(KERN_INFO "synaptics_ts_probe: Product Minor Version %x\n", ret);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#602: 
> -       panel_version |= ret;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#604: 
> -       ret = i2c_smbus_read_byte_data(ts->client, 0xe3);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#605: 
> -       if (ret < 0) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#606: 
> -               printk(KERN_ERR "i2c_smbus_read_byte_data failed\n");
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#607: 
> +       ret = detect(ts, &panel_version);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#608: 
> +       if (ret)
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#609: 
>                goto err_detect_failed;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#610: 
> -       }
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#611: 
> -       printk(KERN_INFO "synaptics_ts_probe: product property %x\n", ret);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#613: 
> -       if (pdata) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#614: 
> -               while (pdata->version > panel_version)
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#615: 
> -                       pdata++;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#616: 
> -               ts->flags = pdata->flags;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#617: 
> -               inactive_area_left = pdata->inactive_left;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#618: 
> -               inactive_area_right = pdata->inactive_right;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#619: 
> -               inactive_area_top = pdata->inactive_top;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#620: 
> -               inactive_area_bottom = pdata->inactive_bottom;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#621: 
> -               snap_left_on = pdata->snap_left_on;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#622: 
> -               snap_left_off = pdata->snap_left_off;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#623: 
> -               snap_right_on = pdata->snap_right_on;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#624: 
> -               snap_right_off = pdata->snap_right_off;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#625: 
> -               snap_top_on = pdata->snap_top_on;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#626: 
> -               snap_top_off = pdata->snap_top_off;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#627: 
> -               snap_bottom_on = pdata->snap_bottom_on;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#628: 
> -               snap_bottom_off = pdata->snap_bottom_off;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#629: 
> -               fuzz_x = pdata->fuzz_x;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#630: 
> -               fuzz_y = pdata->fuzz_y;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#631: 
> -               fuzz_p = pdata->fuzz_p;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#632: 
> -               fuzz_w = pdata->fuzz_w;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#633: 
> -       } else {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#634: 
> -               inactive_area_left = 0;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#635: 
> -               inactive_area_right = 0;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#636: 
> -               inactive_area_top = 0;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#637: 
> -               inactive_area_bottom = 0;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#638: 
> -               snap_left_on = 0;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#639: 
> -               snap_left_off = 0;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#640: 
> -               snap_right_on = 0;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#641: 
> -               snap_right_off = 0;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#642: 
> -               snap_top_on = 0;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#643: 
> -               snap_top_off = 0;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#644: 
> -               snap_bottom_on = 0;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#645: 
> -               snap_bottom_off = 0;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#646: 
> -               fuzz_x = 0;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#647: 
> -               fuzz_y = 0;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#648: 
> -               fuzz_p = 0;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#649: 
> -               fuzz_w = 0;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#650: 
> -       }
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#651: 
> +       while (pdata->version > panel_version)
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#652: 
> +               pdata++;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#653: 
> +       ts->flags = pdata->flags;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#655: 
>        ret = i2c_smbus_read_byte_data(ts->client, 0xf0);
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#657: 
>        if (ret < 0) {
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#658: 
>                printk(KERN_ERR "i2c_smbus_read_byte_data failed\n");
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#659: 
>                goto err_detect_failed;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#661: 
>        set_bit(BTN_TOUCH, ts->input_dev->keybit);
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#662: 
>        set_bit(BTN_2, ts->input_dev->keybit);
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#663: 
>        set_bit(EV_ABS, ts->input_dev->evbit);
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#664: 
> -       inactive_area_left = inactive_area_left * max_x / 0x10000;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#665: 
> -       inactive_area_right = inactive_area_right * max_x / 0x10000;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#666: 
> -       inactive_area_top = inactive_area_top * max_y / 0x10000;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#667: 
> -       inactive_area_bottom = inactive_area_bottom * max_y / 0x10000;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#668: 
> -       snap_left_on = snap_left_on * max_x / 0x10000;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#669: 
> -       snap_left_off = snap_left_off * max_x / 0x10000;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#670: 
> -       snap_right_on = snap_right_on * max_x / 0x10000;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#671: 
> -       snap_right_off = snap_right_off * max_x / 0x10000;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#672: 
> -       snap_top_on = snap_top_on * max_y / 0x10000;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#673: 
> -       snap_top_off = snap_top_off * max_y / 0x10000;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#674: 
> -       snap_bottom_on = snap_bottom_on * max_y / 0x10000;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#675: 
> -       snap_bottom_off = snap_bottom_off * max_y / 0x10000;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#676: 
> -       fuzz_x = fuzz_x * max_x / 0x10000;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#677: 
> -       fuzz_y = fuzz_y * max_y / 0x10000;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#678: 
> -       ts->snap_down[!!(ts->flags & SYNAPTICS_SWAP_XY)] = -inactive_area_left;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#679: 
> -       ts->snap_up[!!(ts->flags & SYNAPTICS_SWAP_XY)] = max_x + inactive_area_right;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#680: 
> -       ts->snap_down[!(ts->flags & SYNAPTICS_SWAP_XY)] = -inactive_area_top;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#681: 
> -       ts->snap_up[!(ts->flags & SYNAPTICS_SWAP_XY)] = max_y + inactive_area_bottom;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#682: 
> -       ts->snap_down_on[!!(ts->flags & SYNAPTICS_SWAP_XY)] = snap_left_on;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#683: 
> -       ts->snap_down_off[!!(ts->flags & SYNAPTICS_SWAP_XY)] = snap_left_off;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#684: 
> -       ts->snap_up_on[!!(ts->flags & SYNAPTICS_SWAP_XY)] = max_x - snap_right_on;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#685: 
> -       ts->snap_up_off[!!(ts->flags & SYNAPTICS_SWAP_XY)] = max_x - snap_right_off;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#686: 
> -       ts->snap_down_on[!(ts->flags & SYNAPTICS_SWAP_XY)] = snap_top_on;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#687: 
> -       ts->snap_down_off[!(ts->flags & SYNAPTICS_SWAP_XY)] = snap_top_off;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#688: 
> -       ts->snap_up_on[!(ts->flags & SYNAPTICS_SWAP_XY)] = max_y - snap_bottom_on;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#689: 
> -       ts->snap_up_off[!(ts->flags & SYNAPTICS_SWAP_XY)] = max_y - snap_bottom_off;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#690: 
> -       printk(KERN_INFO "synaptics_ts_probe: max_x %d, max_y %d\n", max_x, max_y);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#691: 
> -       printk(KERN_INFO "synaptics_ts_probe: inactive_x %d %d, inactive_y %d %d\n",
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#692: 
> -              inactive_area_left, inactive_area_right,
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#693: 
> -              inactive_area_top, inactive_area_bottom);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#694: 
> -       printk(KERN_INFO "synaptics_ts_probe: snap_x %d-%d %d-%d, snap_y %d-%d %d-%d\n",
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#695: 
> -              snap_left_on, snap_left_off, snap_right_on, snap_right_off,
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#696: 
> -              snap_top_on, snap_top_off, snap_bottom_on, snap_bottom_off);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#697: 
> -       input_set_abs_params(ts->input_dev, ABS_X, -inactive_area_left, max_x + inactive_area_right, fuzz_x, 0);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#698: 
> -       input_set_abs_params(ts->input_dev, ABS_Y, -inactive_area_top, max_y + inactive_area_bottom, fuzz_y, 0);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#699: 
> -       input_set_abs_params(ts->input_dev, ABS_PRESSURE, 0, 255, fuzz_p, 0);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#700: 
> -       input_set_abs_params(ts->input_dev, ABS_TOOL_WIDTH, 0, 15, fuzz_w, 0);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#701: 
> -       input_set_abs_params(ts->input_dev, ABS_HAT0X, -inactive_area_left, max_x + inactive_area_right, fuzz_x, 0);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#702: 
> -       input_set_abs_params(ts->input_dev, ABS_HAT0Y, -inactive_area_top, max_y + inactive_area_bottom, fuzz_y, 0);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#703: 
> -       /* ts->input_dev->name = ts->keypad_info->name; */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#705: 
> +       compute_areas(ts, pdata, max_x, max_y);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#708: 
>        ret = input_register_device(ts->input_dev);
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#709: 
>        if (ret) {
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#710: 
>                printk(KERN_ERR "synaptics_ts_probe: Unable to register %s input device\n", ts->input_dev->name);
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#712: 
>                ts->timer.function = synaptics_ts_timer_func;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#713: 
>                hrtimer_start(&ts->timer, ktime_set(1, 0), HRTIMER_MODE_REL);
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#714: 
>        }
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#716: 
> -       ts->early_suspend.level = EARLY_SUSPEND_LEVEL_BLANK_SCREEN + 1;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#717: 
> -       ts->early_suspend.suspend = synaptics_ts_early_suspend;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#718: 
> -       ts->early_suspend.resume = synaptics_ts_late_resume;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#719: 
> -       register_early_suspend(&ts->early_suspend);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#722: 
>        printk(KERN_INFO "synaptics_ts_probe: Start touchscreen %s in %s mode\n", ts->input_dev->name, ts->use_irq ? "interrupt" : "polling");
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#724: 
>        return 0;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#728: 
>        input_free_device(ts->input_dev);
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#736: 
>        kfree(ts);
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#741: 
>        return ret;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#742: 
>  }
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#744: 
>  static int synaptics_ts_remove(struct i2c_client *client)
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#745: 
>  {
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#746: 
>        struct synaptics_ts_data *ts = i2c_get_clientdata(client);
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#747: 
> -       unregister_early_suspend(&ts->early_suspend);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#749: 
>        if (ts->use_irq)
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#750: 
>                free_irq(client->irq, ts);
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#751: 
>        else
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#753: 
>        return 0;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#754: 
>  }
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#758: 
> -       int ret;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#759: 
> -       struct synaptics_ts_data *ts = i2c_get_clientdata(client);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#761: 
> -       if (ts->use_irq)
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#762: 
> -               disable_irq(client->irq);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#763: 
> -       else
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#764: 
> -               hrtimer_cancel(&ts->timer);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#765: 
> -       ret = cancel_work_sync(&ts->work);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#766: 
> -       if (ret && ts->use_irq) /* if work was pending disable-count is now 2 */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#767: 
> -               enable_irq(client->irq);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#768: 
> -       ret = i2c_smbus_write_byte_data(ts->client, 0xf1, 0); /* disable interrupt */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#769: 
> -       if (ret < 0)
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#770: 
> -               printk(KERN_ERR "synaptics_ts_suspend: i2c_smbus_write_byte_data failed\n");
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#772: 
> -       ret = i2c_smbus_write_byte_data(client, 0xf0, 0x86); /* deep sleep */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#773: 
> -       if (ret < 0)
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#774: 
> -               printk(KERN_ERR "synaptics_ts_suspend: i2c_smbus_write_byte_data failed\n");
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#775: 
> -       if (ts->power) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#776: 
> -               ret = ts->power(0);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#777: 
> -               if (ret < 0)
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#778: 
> -                       printk(KERN_ERR "synaptics_ts_resume power off failed\n");
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#779: 
> -       }
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#780: 
> -       return 0;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#785: 
> -       int ret;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#786: 
> -       struct synaptics_ts_data *ts = i2c_get_clientdata(client);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#788: 
> -       if (ts->power) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#789: 
> -               ret = ts->power(1);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#790: 
> -               if (ret < 0)
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#791: 
> -                       printk(KERN_ERR "synaptics_ts_resume power on failed\n");
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#792: 
> -       }
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#794: 
> -       synaptics_init_panel(ts);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#796: 
> -       if (ts->use_irq)
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#797: 
> -               enable_irq(client->irq);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#799: 
> -       if (!ts->use_irq)
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#800: 
> -               hrtimer_start(&ts->timer, ktime_set(1, 0), HRTIMER_MODE_REL);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#801: 
> -       else
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#802: 
> -               i2c_smbus_write_byte_data(ts->client, 0xf1, 0x01); /* enable abs int */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#804: 
> -       return 0;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#813: 
> -       struct synaptics_ts_data *ts;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#814: 
> -       ts = container_of(h, struct synaptics_ts_data, early_suspend);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#815: 
> -       synaptics_ts_suspend(ts->client, PMSG_SUSPEND);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#820: 
> -       struct synaptics_ts_data *ts;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#821: 
> -       ts = container_of(h, struct synaptics_ts_data, early_suspend);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#822: 
> -       synaptics_ts_resume(ts->client);
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#826: 
>  static const struct i2c_device_id synaptics_ts_id[] = {
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#827: 
>        { SYNAPTICS_I2C_RMI_NAME, 0 },
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#829: 
>  static struct i2c_driver synaptics_ts_driver = {
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#830: 
>        .probe          = synaptics_ts_probe,
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#831: 
>        .remove         = synaptics_ts_remove,
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#833: 
> -       .suspend        = synaptics_ts_suspend,
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#834: 
> -       .resume         = synaptics_ts_resume,
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#840: 
>        .id_table       = synaptics_ts_id,
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#841: 
>        .driver = {
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#842: 
>                .name   = SYNAPTICS_I2C_RMI_NAME,
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#848: 
>  /*
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#851: 
>  *
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#852: 
>  * Copyright (C) 2008 Google, Inc.
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#853: 
>  *
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#855: 
>  };
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#857: 
>  struct synaptics_i2c_rmi_platform_data {
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#858: 
> -       uint32_t version;       /* Use this entry for panels with */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#859: 
> +       u32 version;    /* Use this entry for panels with */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#860: 
>                                /* (major << 8 | minor) version or above. */
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#861: 
>                                /* If non-zero another array entry follows */
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#862: 
>        int (*power)(int on);   /* Only valid in first array entry */
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#863: 
> -       uint32_t flags;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#864: 
> -       uint32_t inactive_left; /* 0x10000 = screen width */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#865: 
> -       uint32_t inactive_right; /* 0x10000 = screen width */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#866: 
> -       uint32_t inactive_top; /* 0x10000 = screen height */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#867: 
> -       uint32_t inactive_bottom; /* 0x10000 = screen height */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#868: 
> -       uint32_t snap_left_on; /* 0x10000 = screen width */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#869: 
> -       uint32_t snap_left_off; /* 0x10000 = screen width */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#870: 
> -       uint32_t snap_right_on; /* 0x10000 = screen width */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#871: 
> -       uint32_t snap_right_off; /* 0x10000 = screen width */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#872: 
> -       uint32_t snap_top_on; /* 0x10000 = screen height */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#873: 
> -       uint32_t snap_top_off; /* 0x10000 = screen height */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#874: 
> -       uint32_t snap_bottom_on; /* 0x10000 = screen height */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#875: 
> -       uint32_t snap_bottom_off; /* 0x10000 = screen height */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#876: 
> -       uint32_t fuzz_x; /* 0x10000 = screen width */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#877: 
> -       uint32_t fuzz_y; /* 0x10000 = screen height */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#878: 
> +       u32 flags;
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#879: 
> +       u32 inactive_left; /* 0x10000 = screen width */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#880: 
> +       u32 inactive_right; /* 0x10000 = screen width */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#881: 
> +       u32 inactive_top; /* 0x10000 = screen height */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#882: 
> +       u32 inactive_bottom; /* 0x10000 = screen height */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#883: 
> +       u32 snap_left_on; /* 0x10000 = screen width */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#884: 
> +       u32 snap_left_off; /* 0x10000 = screen width */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#885: 
> +       u32 snap_right_on; /* 0x10000 = screen width */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#886: 
> +       u32 snap_right_off; /* 0x10000 = screen width */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#887: 
> +       u32 snap_top_on; /* 0x10000 = screen height */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#888: 
> +       u32 snap_top_off; /* 0x10000 = screen height */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#889: 
> +       u32 snap_bottom_on; /* 0x10000 = screen height */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#890: 
> +       u32 snap_bottom_off; /* 0x10000 = screen height */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#891: 
> +       u32 fuzz_x; /* 0x10000 = screen width */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#892: 
> +       u32 fuzz_y; /* 0x10000 = screen height */
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#896: 
>        int fuzz_p;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#897: 
>        int fuzz_w;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#898: 
>  };
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#906: 
> More majordomo info at  http://vger.kernel.org/majordomo-info.html
                         ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#907: 
> Please read the FAQ at  http://www.tux.org/lkml/
                         ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#915: 
Arve Hjønnevåg
       ^

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '22d8c831554b8bec6e9fbac9d6bf972c775ee128', maybe rebased or not pulled?
#919: 
commit 22d8c831554b8bec6e9fbac9d6bf972c775ee128

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#920: 
Author: Arve Hjønnevåg <arve@android.com>
               ^

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#926: 
    Signed-off-by: Arve Hjønnevåg <arve@android.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#926: 
    Signed-off-by: Arve Hjønnevåg <arve@android.com>
                          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#937: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:36:
+       bool has_relative_report;$

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#945: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:88:
synaptics_ts_data, work);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#946: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:89:
+       int buf_len = ts->has_relative_report ? 15 : 13;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#955: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:98:
+       msg[1].len = buf_len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#964: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:114:
+                       if ((buf[buf_len - 1] & 0xc0) != 0x40) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#964: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:114:
+                       if ((buf[buf_len - 1] & 0xc0) != 0x40) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#964: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:114:
+                       if ((buf[buf_len - 1] & 0xc0) != 0x40) {
                                printk(KERN_WARNING "synaptics_ts_work_func:"

ERROR:CODE_INDENT: code indent should use tabs where possible
#973: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:128:
+                       if ((buf[buf_len - 1] & 1) == 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#973: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:128:
+                       if ((buf[buf_len - 1] & 1) == 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#973: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:128:
+                       if ((buf[buf_len - 1] & 1) == 0) {
[...]
                                break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#982: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:399:
+       ret = i2c_smbus_read_word_data(ts->client, 0x02);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#983: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:400:
+       if (ret < 0) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#984: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:401:
+               printk(KERN_ERR "i2c_smbus_read_word_data failed\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#984: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:401:
+               printk(KERN_ERR "i2c_smbus_read_word_data failed\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#985: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:402:
+               goto err_detect_failed;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#985: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:402:
+               goto err_detect_failed;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#986: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:403:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#987: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:404:
+       ts->has_relative_report = !(ret & 0x100);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#988: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:405:
+       printk(KERN_INFO "synaptics_ts_probe: Sensor properties %x\n", ret);$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#988: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:405:
+       printk(KERN_INFO "synaptics_ts_probe: Sensor properties %x\n", ret);
                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#988: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:405:
+       printk(KERN_INFO "synaptics_ts_probe: Sensor properties %x\n", ret);
                                                                ^

CHECK:CAMELCASE: Avoid CamelCase: <Sensor>
#988: FILE: drivers/input/touchscreen/synaptics_i2c_rmi.c:405:
+       printk(KERN_INFO "synaptics_ts_probe: Sensor properties %x\n", ret);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000096834.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 17 warnings, 690 checks, 53 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000096834.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
