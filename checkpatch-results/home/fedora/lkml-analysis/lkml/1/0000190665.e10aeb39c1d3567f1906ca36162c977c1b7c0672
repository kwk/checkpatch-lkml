WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
requests to be able to handle quota limits above 4TB / more that 2^32 inodes.

CHECK:BIT_MACRO: Prefer using the BIT macro
#216: FILE: fs/quota_v1.c:18:
+#define QUOTABLOCK_SIZE (1 << QUOTABLOCK_BITS)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#264: FILE: fs/quota_v2.c:30:
+#define QUOTABLOCK_SIZE (1 << QUOTABLOCK_BITS)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#326: FILE: include/linux/quota.h:75:
+ * interface */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:BIT_MACRO: Prefer using the BIT macro
#328: FILE: include/linux/quota.h:77:
+#define QIF_DQBLKSIZE (1 << QIF_DQBLKSIZE_BITS)

WARNING:SPACING: Unnecessary space before function pointer arguments
#356: FILE: include/linux/quota.h:286:
+	int (*alloc_inode) (const struct inode *, qsize_t);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct inode *' should also have an identifier name
#356: FILE: include/linux/quota.h:286:
+	int (*alloc_inode) (const struct inode *, qsize_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'qsize_t' should also have an identifier name
#356: FILE: include/linux/quota.h:286:
+	int (*alloc_inode) (const struct inode *, qsize_t);

WARNING:SPACING: Unnecessary space before function pointer arguments
#359: FILE: include/linux/quota.h:288:
+	int (*free_inode) (const struct inode *, qsize_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct inode *' should also have an identifier name
#359: FILE: include/linux/quota.h:288:
+	int (*free_inode) (const struct inode *, qsize_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'qsize_t' should also have an identifier name
#359: FILE: include/linux/quota.h:288:
+	int (*free_inode) (const struct inode *, qsize_t);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000190665.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 3 checks, 290 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000190665.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
