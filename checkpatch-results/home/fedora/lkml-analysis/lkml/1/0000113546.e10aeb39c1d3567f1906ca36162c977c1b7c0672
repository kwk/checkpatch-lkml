WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#48: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#53: FILE: arch/score/kernel/signal.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#54: FILE: arch/score/kernel/signal.c:2:
+ * arch/score/kernel/signal.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#75: FILE: arch/score/kernel/signal.c:23:
+ * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#84: FILE: arch/score/kernel/signal.c:32:
+#include <asm/cacheflush.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: arch/score/kernel/signal.c:37:
+       u32 rs_ass[4];          /* argument save space */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: arch/score/kernel/signal.c:38:
+       u32 rs_code[2];         /* signal trampoline */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: arch/score/kernel/signal.c:39:
+       struct siginfo rs_info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: arch/score/kernel/signal.c:40:
+       struct ucontext rs_uc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: arch/score/kernel/signal.c:45:
+       int err = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: arch/score/kernel/signal.c:46:
+       unsigned long reg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: arch/score/kernel/signal.c:48:
+       reg = regs->cp0_epc; err |= __put_user(reg, &sc->sc_pc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: arch/score/kernel/signal.c:49:
+       err |= __put_user(regs->cp0_psr, &sc->sc_psr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: arch/score/kernel/signal.c:50:
+       err |= __put_user(regs->cp0_condition, &sc->sc_condition);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#104: FILE: arch/score/kernel/signal.c:52:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#105: FILE: arch/score/kernel/signal.c:53:
+#define save_gp_reg(i) {                               \
+       reg = regs->regs[i];                            \
+       err |= __put_user(reg, &sc->sc_regs[i]);        \
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#105: FILE: arch/score/kernel/signal.c:53:
+#define save_gp_reg(i) {                               \
+       reg = regs->regs[i];                            \
+       err |= __put_user(reg, &sc->sc_regs[i]);        \
+} while (0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: arch/score/kernel/signal.c:54:
+       reg = regs->regs[i];                            \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: arch/score/kernel/signal.c:55:
+       err |= __put_user(reg, &sc->sc_regs[i]);        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: arch/score/kernel/signal.c:57:
+       save_gp_reg(0); save_gp_reg(1); save_gp_reg(2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: arch/score/kernel/signal.c:58:
+       save_gp_reg(3); save_gp_reg(4); save_gp_reg(5);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: arch/score/kernel/signal.c:59:
+       save_gp_reg(6); save_gp_reg(7); save_gp_reg(8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: arch/score/kernel/signal.c:60:
+       save_gp_reg(9); save_gp_reg(10); save_gp_reg(11);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: arch/score/kernel/signal.c:61:
+       save_gp_reg(12); save_gp_reg(13); save_gp_reg(14);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: arch/score/kernel/signal.c:62:
+       save_gp_reg(15); save_gp_reg(16); save_gp_reg(17);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: arch/score/kernel/signal.c:63:
+       save_gp_reg(18); save_gp_reg(19); save_gp_reg(20);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: arch/score/kernel/signal.c:64:
+       save_gp_reg(21); save_gp_reg(22); save_gp_reg(23);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: arch/score/kernel/signal.c:65:
+       save_gp_reg(24); save_gp_reg(25); save_gp_reg(26);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: arch/score/kernel/signal.c:66:
+       save_gp_reg(27); save_gp_reg(28); save_gp_reg(29);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: arch/score/kernel/signal.c:69:
+       reg = regs->ceh; err |= __put_user(reg, &sc->sc_mdceh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: arch/score/kernel/signal.c:70:
+       reg = regs->cel; err |= __put_user(reg, &sc->sc_mdcel);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: arch/score/kernel/signal.c:71:
+       err |= __put_user(regs->cp0_ecr, &sc->sc_ecr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: arch/score/kernel/signal.c:72:
+       err |= __put_user(regs->cp0_ema, &sc->sc_ema);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: arch/score/kernel/signal.c:74:
+       return err;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#129: FILE: arch/score/kernel/signal.c:77:
+int restore_sigcontext(struct pt_regs *regs, struct sigcontext __user $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#130: FILE: arch/score/kernel/signal.c:77:
*sc)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: arch/score/kernel/signal.c:79:
+       int err = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: arch/score/kernel/signal.c:80:
+       u32 reg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: arch/score/kernel/signal.c:82:
+       err |= __get_user(regs->cp0_epc, &sc->sc_pc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: arch/score/kernel/signal.c:83:
+       err |= __get_user(regs->cp0_condition, &sc->sc_condition);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: arch/score/kernel/signal.c:85:
+       err |= __get_user(reg, &sc->sc_mdceh);$

CHECK:SPACING: No space is necessary after a cast
#139: FILE: arch/score/kernel/signal.c:86:
+       regs->ceh = (int) reg;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: arch/score/kernel/signal.c:86:
+       regs->ceh = (int) reg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: arch/score/kernel/signal.c:87:
+       err |= __get_user(reg, &sc->sc_mdcel);$

CHECK:SPACING: No space is necessary after a cast
#141: FILE: arch/score/kernel/signal.c:88:
+       regs->cel = (int) reg;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: arch/score/kernel/signal.c:88:
+       regs->cel = (int) reg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: arch/score/kernel/signal.c:90:
+       err |= __get_user(reg, &sc->sc_psr);$

CHECK:SPACING: No space is necessary after a cast
#144: FILE: arch/score/kernel/signal.c:91:
+       regs->cp0_psr = (int) reg;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: arch/score/kernel/signal.c:91:
+       regs->cp0_psr = (int) reg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: arch/score/kernel/signal.c:92:
+       err |= __get_user(reg, &sc->sc_ecr);$

CHECK:SPACING: No space is necessary after a cast
#146: FILE: arch/score/kernel/signal.c:93:
+       regs->cp0_ecr = (int) reg;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: arch/score/kernel/signal.c:93:
+       regs->cp0_ecr = (int) reg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: arch/score/kernel/signal.c:94:
+       err |= __get_user(reg, &sc->sc_ema);$

CHECK:SPACING: No space is necessary after a cast
#148: FILE: arch/score/kernel/signal.c:95:
+       regs->cp0_ema = (int) reg;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: arch/score/kernel/signal.c:95:
+       regs->cp0_ema = (int) reg;$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#150: FILE: arch/score/kernel/signal.c:97:
+#define restore_gp_reg(i) do {                         \
+       err |= __get_user(reg, &sc->sc_regs[i]);        \
+       regs->regs[i] = reg;                            \
+} while (0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: arch/score/kernel/signal.c:98:
+       err |= __get_user(reg, &sc->sc_regs[i]);        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: arch/score/kernel/signal.c:99:
+       regs->regs[i] = reg;                            \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: arch/score/kernel/signal.c:101:
+       restore_gp_reg(0); restore_gp_reg(1); restore_gp_reg(2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: arch/score/kernel/signal.c:102:
+       restore_gp_reg(3); restore_gp_reg(4); restore_gp_reg(5);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: arch/score/kernel/signal.c:103:
+       restore_gp_reg(6); restore_gp_reg(7); restore_gp_reg(8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: arch/score/kernel/signal.c:104:
+       restore_gp_reg(9); restore_gp_reg(10); restore_gp_reg(11);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: arch/score/kernel/signal.c:105:
+       restore_gp_reg(12); restore_gp_reg(13); restore_gp_reg(14);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: arch/score/kernel/signal.c:106:
+       restore_gp_reg(15); restore_gp_reg(16); restore_gp_reg(17);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: arch/score/kernel/signal.c:107:
+       restore_gp_reg(18); restore_gp_reg(19); restore_gp_reg(20);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: arch/score/kernel/signal.c:108:
+       restore_gp_reg(21); restore_gp_reg(22); restore_gp_reg(23);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: arch/score/kernel/signal.c:109:
+       restore_gp_reg(24); restore_gp_reg(25); restore_gp_reg(26);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: arch/score/kernel/signal.c:110:
+       restore_gp_reg(27); restore_gp_reg(28); restore_gp_reg(29);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: arch/score/kernel/signal.c:113:
+       return err;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: arch/score/kernel/signal.c:120:
+                       size_t frame_size)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#173: FILE: arch/score/kernel/signal.c:120:
+void __user *get_sigframe(struct k_sigaction *ka, struct pt_regs *regs,
+                       size_t frame_size)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: arch/score/kernel/signal.c:120:
+                       size_t frame_size)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: arch/score/kernel/signal.c:122:
+       unsigned long sp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: arch/score/kernel/signal.c:125:
+       sp = regs->regs[0];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: arch/score/kernel/signal.c:126:
+       sp -= 32;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: arch/score/kernel/signal.c:129:
+       if ((ka->sa.sa_flags & SA_ONSTACK) && (!on_sig_stack(sp)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#182: FILE: arch/score/kernel/signal.c:129:
+       if ((ka->sa.sa_flags & SA_ONSTACK) && (!on_sig_stack(sp)))
+               sp = current->sas_ss_sp + current->sas_ss_size;

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: arch/score/kernel/signal.c:130:
+               sp = current->sas_ss_sp + current->sas_ss_size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: arch/score/kernel/signal.c:130:
+               sp = current->sas_ss_sp + current->sas_ss_size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: arch/score/kernel/signal.c:132:
+       return (void *)((sp - frame_size) & ~7);$

CHECK:SPACING: No space is necessary after a cast
#190: FILE: arch/score/kernel/signal.c:137:
+       const stack_t *uss = (const stack_t *) regs->regs[4];

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: arch/score/kernel/signal.c:137:
+       const stack_t *uss = (const stack_t *) regs->regs[4];$

CHECK:SPACING: No space is necessary after a cast
#191: FILE: arch/score/kernel/signal.c:138:
+       stack_t *uoss = (stack_t *) regs->regs[5];

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: arch/score/kernel/signal.c:138:
+       stack_t *uoss = (stack_t *) regs->regs[5];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: arch/score/kernel/signal.c:139:
+       unsigned long usp = regs->regs[0];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: arch/score/kernel/signal.c:141:
+       return do_sigaltstack(uss, uoss, usp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: arch/score/kernel/signal.c:146:
+       struct rt_sigframe __user *frame;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: arch/score/kernel/signal.c:147:
+       sigset_t set;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: arch/score/kernel/signal.c:148:
+       stack_t st;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: arch/score/kernel/signal.c:149:
+       int sig;$

CHECK:SPACING: No space is necessary after a cast
#204: FILE: arch/score/kernel/signal.c:151:
+       frame = (struct rt_sigframe __user *) regs->regs[0];

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: arch/score/kernel/signal.c:151:
+       frame = (struct rt_sigframe __user *) regs->regs[0];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: arch/score/kernel/signal.c:152:
+       if (!access_ok(VERIFY_READ, frame, sizeof(*frame)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#205: FILE: arch/score/kernel/signal.c:152:
+       if (!access_ok(VERIFY_READ, frame, sizeof(*frame)))
+               goto badframe;

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: arch/score/kernel/signal.c:153:
+               goto badframe;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: arch/score/kernel/signal.c:153:
+               goto badframe;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: arch/score/kernel/signal.c:154:
+       if (__copy_from_user(&set, &frame->rs_uc.uc_sigmask, sizeof(set)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#207: FILE: arch/score/kernel/signal.c:154:
+       if (__copy_from_user(&set, &frame->rs_uc.uc_sigmask, sizeof(set)))
+               goto badframe;

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: arch/score/kernel/signal.c:155:
+               goto badframe;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: arch/score/kernel/signal.c:155:
+               goto badframe;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: arch/score/kernel/signal.c:157:
+       sigdelsetmask(&set, ~_BLOCKABLE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: arch/score/kernel/signal.c:158:
+       spin_lock_irq(&current->sighand->siglock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: arch/score/kernel/signal.c:159:
+       current->blocked = set;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: arch/score/kernel/signal.c:160:
+       recalc_sigpending();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: arch/score/kernel/signal.c:161:
+       spin_unlock_irq(&current->sighand->siglock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: arch/score/kernel/signal.c:163:
+       sig = restore_sigcontext(regs, &frame->rs_uc.uc_mcontext);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: arch/score/kernel/signal.c:164:
+       if (sig < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#217: FILE: arch/score/kernel/signal.c:164:
+       if (sig < 0)
+               goto badframe;

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: arch/score/kernel/signal.c:165:
+               goto badframe;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: arch/score/kernel/signal.c:165:
+               goto badframe;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: arch/score/kernel/signal.c:166:
+       else if (sig)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#219: FILE: arch/score/kernel/signal.c:166:
+       else if (sig)
+               force_sig(sig, current);

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: arch/score/kernel/signal.c:167:
+               force_sig(sig, current);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: arch/score/kernel/signal.c:167:
+               force_sig(sig, current);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: arch/score/kernel/signal.c:169:
+       if (__copy_from_user(&st, &frame->rs_uc.uc_stack, sizeof(st)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#222: FILE: arch/score/kernel/signal.c:169:
+       if (__copy_from_user(&st, &frame->rs_uc.uc_stack, sizeof(st)))
+               goto badframe;

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: arch/score/kernel/signal.c:170:
+               goto badframe;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: arch/score/kernel/signal.c:170:
+               goto badframe;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: arch/score/kernel/signal.c:173:
+          call it and ignore errors.  */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#226: FILE: arch/score/kernel/signal.c:173:
+       /* It is more difficult to avoid calling this function than to
+          call it and ignore errors.  */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#226: FILE: arch/score/kernel/signal.c:173:
+          call it and ignore errors.  */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: arch/score/kernel/signal.c:174:
+       do_sigaltstack((stack_t __user *)&st, NULL, regs->regs[0]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: arch/score/kernel/signal.c:176:
+       __asm__ __volatile__($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#229: FILE: arch/score/kernel/signal.c:176:
+       __asm__ __volatile__(

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: arch/score/kernel/signal.c:177:
+               "mv\tr0, %0\n\t"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: arch/score/kernel/signal.c:177:
+               "mv\tr0, %0\n\t"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: arch/score/kernel/signal.c:178:
+               "la\tr8, syscall_exit\n\t"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: arch/score/kernel/signal.c:178:
+               "la\tr8, syscall_exit\n\t"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: arch/score/kernel/signal.c:179:
+               "br\tr8\n\t"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: arch/score/kernel/signal.c:179:
+               "br\tr8\n\t"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: arch/score/kernel/signal.c:180:
+               : : "r" (regs) : "r8");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: arch/score/kernel/signal.c:180:
+               : : "r" (regs) : "r8");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: arch/score/kernel/signal.c:183:
+       force_sig(SIGSEGV, current);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#240: FILE: arch/score/kernel/signal.c:187:
+               int signr, sigset_t *set, siginfo_t *info)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#240: FILE: arch/score/kernel/signal.c:187:
+int setup_rt_frame(struct k_sigaction *ka, struct pt_regs *regs,
+               int signr, sigset_t *set, siginfo_t *info)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: arch/score/kernel/signal.c:187:
+               int signr, sigset_t *set, siginfo_t *info)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: arch/score/kernel/signal.c:189:
+       struct rt_sigframe *frame;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: arch/score/kernel/signal.c:190:
+       int err = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: arch/score/kernel/signal.c:192:
+       frame = get_sigframe(ka, regs, sizeof(*frame));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: arch/score/kernel/signal.c:193:
+       if (!access_ok(VERIFY_WRITE, frame, sizeof(*frame)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#246: FILE: arch/score/kernel/signal.c:193:
+       if (!access_ok(VERIFY_WRITE, frame, sizeof(*frame)))
+               goto give_sigsegv;

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: arch/score/kernel/signal.c:194:
+               goto give_sigsegv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: arch/score/kernel/signal.c:194:
+               goto give_sigsegv;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#250: FILE: arch/score/kernel/signal.c:197:
+        * Set up the return code ...$

ERROR:CODE_INDENT: code indent should use tabs where possible
#251: FILE: arch/score/kernel/signal.c:198:
+        *$

ERROR:CODE_INDENT: code indent should use tabs where possible
#252: FILE: arch/score/kernel/signal.c:199:
+        *         li      v0, __NR_rt_sigreturn$

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: arch/score/kernel/signal.c:200:
+        *         syscall$

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: arch/score/kernel/signal.c:201:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: arch/score/kernel/signal.c:202:
+       err |= __put_user(0x87788000 + __NR_rt_sigreturn*2,$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#255: FILE: arch/score/kernel/signal.c:202:
+       err |= __put_user(0x87788000 + __NR_rt_sigreturn*2,
                                                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#256: FILE: arch/score/kernel/signal.c:203:
+                       frame->rs_code + 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: arch/score/kernel/signal.c:203:
+                       frame->rs_code + 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: arch/score/kernel/signal.c:204:
+       err |= __put_user(0x80008002, frame->rs_code + 1);$

CHECK:SPACING: No space is necessary after a cast
#258: FILE: arch/score/kernel/signal.c:205:
+       flush_cache_sigtramp((unsigned long) frame->rs_code);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: arch/score/kernel/signal.c:205:
+       flush_cache_sigtramp((unsigned long) frame->rs_code);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: arch/score/kernel/signal.c:207:
+       err |= copy_siginfo_to_user(&frame->rs_info, info);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: arch/score/kernel/signal.c:208:
+       err |= __put_user(0, &frame->rs_uc.uc_flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: arch/score/kernel/signal.c:209:
+       err |= __put_user(0, &frame->rs_uc.uc_link);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: arch/score/kernel/signal.c:210:
+       err |= __put_user((void *)current->sas_ss_sp,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#264: FILE: arch/score/kernel/signal.c:211:
+                               &frame->rs_uc.uc_stack.ss_sp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: arch/score/kernel/signal.c:211:
+                               &frame->rs_uc.uc_stack.ss_sp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: arch/score/kernel/signal.c:212:
+       err |= __put_user(sas_ss_flags(regs->regs[0]),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#266: FILE: arch/score/kernel/signal.c:213:
+                               &frame->rs_uc.uc_stack.ss_flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: arch/score/kernel/signal.c:213:
+                               &frame->rs_uc.uc_stack.ss_flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: arch/score/kernel/signal.c:214:
+       err |= __put_user(current->sas_ss_size,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: arch/score/kernel/signal.c:215:
+                               &frame->rs_uc.uc_stack.ss_size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: arch/score/kernel/signal.c:215:
+                               &frame->rs_uc.uc_stack.ss_size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: arch/score/kernel/signal.c:216:
+       err |= setup_sigcontext(regs, &frame->rs_uc.uc_mcontext);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#270: FILE: arch/score/kernel/signal.c:217:
+       err |= __copy_to_user(&frame->rs_uc.uc_sigmask, set, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: arch/score/kernel/signal.c:217:
+       err |= __copy_to_user(&frame->rs_uc.uc_sigmask, set, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: arch/score/kernel/signal.c:219:
+       if (err)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#273: FILE: arch/score/kernel/signal.c:219:
+       if (err)
+               goto give_sigsegv;

ERROR:CODE_INDENT: code indent should use tabs where possible
#274: FILE: arch/score/kernel/signal.c:220:
+               goto give_sigsegv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: arch/score/kernel/signal.c:220:
+               goto give_sigsegv;$

CHECK:SPACING: No space is necessary after a cast
#276: FILE: arch/score/kernel/signal.c:222:
+       regs->regs[0] = (unsigned long) frame;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: arch/score/kernel/signal.c:222:
+       regs->regs[0] = (unsigned long) frame;$

CHECK:SPACING: No space is necessary after a cast
#277: FILE: arch/score/kernel/signal.c:223:
+       regs->regs[3] = (unsigned long) frame->rs_code;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: arch/score/kernel/signal.c:223:
+       regs->regs[3] = (unsigned long) frame->rs_code;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: arch/score/kernel/signal.c:224:
+       regs->regs[4] = signr;$

CHECK:SPACING: No space is necessary after a cast
#279: FILE: arch/score/kernel/signal.c:225:
+       regs->regs[5] = (unsigned long) &frame->rs_info;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: arch/score/kernel/signal.c:225:
+       regs->regs[5] = (unsigned long) &frame->rs_info;$

CHECK:SPACING: No space is necessary after a cast
#280: FILE: arch/score/kernel/signal.c:226:
+       regs->regs[6] = (unsigned long) &frame->rs_uc;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: arch/score/kernel/signal.c:226:
+       regs->regs[6] = (unsigned long) &frame->rs_uc;$

CHECK:SPACING: No space is necessary after a cast
#281: FILE: arch/score/kernel/signal.c:227:
+       regs->regs[29] = (unsigned long) ka->sa.sa_handler;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: arch/score/kernel/signal.c:227:
+       regs->regs[29] = (unsigned long) ka->sa.sa_handler;$

CHECK:SPACING: No space is necessary after a cast
#282: FILE: arch/score/kernel/signal.c:228:
+       regs->cp0_epc = (unsigned long) ka->sa.sa_handler;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: arch/score/kernel/signal.c:228:
+       regs->cp0_epc = (unsigned long) ka->sa.sa_handler;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: arch/score/kernel/signal.c:230:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: arch/score/kernel/signal.c:233:
+       if (signr == SIGSEGV)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#287: FILE: arch/score/kernel/signal.c:233:
+       if (signr == SIGSEGV)
+               ka->sa.sa_handler = SIG_DFL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#288: FILE: arch/score/kernel/signal.c:234:
+               ka->sa.sa_handler = SIG_DFL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: arch/score/kernel/signal.c:234:
+               ka->sa.sa_handler = SIG_DFL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: arch/score/kernel/signal.c:235:
+       force_sig(SIGSEGV, current);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: arch/score/kernel/signal.c:236:
+       return -EFAULT;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#294: FILE: arch/score/kernel/signal.c:240:
+int handle_signal(unsigned long sig, siginfo_t *info,
+       struct k_sigaction *ka, sigset_t *oldset, struct pt_regs *regs)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: arch/score/kernel/signal.c:240:
+       struct k_sigaction *ka, sigset_t *oldset, struct pt_regs *regs)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: arch/score/kernel/signal.c:242:
+       int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: arch/score/kernel/signal.c:244:
+       if (regs->is_syscall) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#298: FILE: arch/score/kernel/signal.c:244:
+       if (regs->is_syscall) {
+               switch (regs->regs[4]) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#299: FILE: arch/score/kernel/signal.c:245:
+               switch (regs->regs[4]) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: arch/score/kernel/signal.c:245:
+               switch (regs->regs[4]) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: arch/score/kernel/signal.c:246:
+               case ERESTART_RESTARTBLOCK:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: arch/score/kernel/signal.c:246:
+               case ERESTART_RESTARTBLOCK:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: arch/score/kernel/signal.c:247:
+               case ERESTARTNOHAND:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: arch/score/kernel/signal.c:247:
+               case ERESTARTNOHAND:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#302: FILE: arch/score/kernel/signal.c:248:
+                       regs->regs[4] = EINTR;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: arch/score/kernel/signal.c:248:
+                       regs->regs[4] = EINTR;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#303: FILE: arch/score/kernel/signal.c:249:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: arch/score/kernel/signal.c:249:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#304: FILE: arch/score/kernel/signal.c:250:
+               case ERESTARTSYS:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: arch/score/kernel/signal.c:250:
+               case ERESTARTSYS:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#305: FILE: arch/score/kernel/signal.c:251:
+                       if (!(ka->sa.sa_flags & SA_RESTART)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: arch/score/kernel/signal.c:251:
+                       if (!(ka->sa.sa_flags & SA_RESTART)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#305: FILE: arch/score/kernel/signal.c:251:
+                       if (!(ka->sa.sa_flags & SA_RESTART)) {
+                               regs->regs[4] = EINTR;

ERROR:CODE_INDENT: code indent should use tabs where possible
#306: FILE: arch/score/kernel/signal.c:252:
+                               regs->regs[4] = EINTR;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: arch/score/kernel/signal.c:252:
+                               regs->regs[4] = EINTR;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#307: FILE: arch/score/kernel/signal.c:253:
+                               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: arch/score/kernel/signal.c:253:
+                               break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#308: FILE: arch/score/kernel/signal.c:254:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: arch/score/kernel/signal.c:254:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#309: FILE: arch/score/kernel/signal.c:255:
+               case ERESTARTNOINTR:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: arch/score/kernel/signal.c:255:
+               case ERESTARTNOINTR:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#310: FILE: arch/score/kernel/signal.c:256:
+                       regs->regs[4] = regs->orig_r4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: arch/score/kernel/signal.c:256:
+                       regs->regs[4] = regs->orig_r4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#311: FILE: arch/score/kernel/signal.c:257:
+                       regs->regs[7] = regs->orig_r7;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: arch/score/kernel/signal.c:257:
+                       regs->regs[7] = regs->orig_r7;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#312: FILE: arch/score/kernel/signal.c:258:
+                       regs->cp0_epc -= 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: arch/score/kernel/signal.c:258:
+                       regs->cp0_epc -= 8;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#313: FILE: arch/score/kernel/signal.c:259:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: arch/score/kernel/signal.c:259:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#315: FILE: arch/score/kernel/signal.c:261:
+               regs->is_syscall = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: arch/score/kernel/signal.c:261:
+               regs->is_syscall = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: arch/score/kernel/signal.c:262:
+       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: arch/score/kernel/signal.c:265:
+        * Set up the stack frame$

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: arch/score/kernel/signal.c:266:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: arch/score/kernel/signal.c:267:
+       ret = setup_rt_frame(ka, regs, sig, oldset, info);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: arch/score/kernel/signal.c:269:
+       spin_lock_irq(&current->sighand->siglock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: arch/score/kernel/signal.c:270:
+       sigorsets(&current->blocked, &current->blocked, &ka->sa.sa_mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: arch/score/kernel/signal.c:271:
+       if (!(ka->sa.sa_flags & SA_NODEFER))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#325: FILE: arch/score/kernel/signal.c:271:
+       if (!(ka->sa.sa_flags & SA_NODEFER))
+               sigaddset(&current->blocked, sig);

ERROR:CODE_INDENT: code indent should use tabs where possible
#326: FILE: arch/score/kernel/signal.c:272:
+               sigaddset(&current->blocked, sig);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: arch/score/kernel/signal.c:272:
+               sigaddset(&current->blocked, sig);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: arch/score/kernel/signal.c:273:
+       recalc_sigpending();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: arch/score/kernel/signal.c:274:
+       spin_unlock_irq(&current->sighand->siglock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: arch/score/kernel/signal.c:276:
+       return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: arch/score/kernel/signal.c:281:
+       struct k_sigaction ka;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: arch/score/kernel/signal.c:282:
+       sigset_t *oldset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: arch/score/kernel/signal.c:283:
+       siginfo_t info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: arch/score/kernel/signal.c:284:
+       int signr;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#341: FILE: arch/score/kernel/signal.c:287:
+        * We want the common case to go fast, which is why we may in $

ERROR:CODE_INDENT: code indent should use tabs where possible
#341: FILE: arch/score/kernel/signal.c:287:
+        * We want the common case to go fast, which is why we may in $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#343: FILE: arch/score/kernel/signal.c:288:
+        * cases get here from kernel mode. Just return without doing $

ERROR:CODE_INDENT: code indent should use tabs where possible
#343: FILE: arch/score/kernel/signal.c:288:
+        * cases get here from kernel mode. Just return without doing $

ERROR:CODE_INDENT: code indent should use tabs where possible
#345: FILE: arch/score/kernel/signal.c:289:
+        * if so.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: arch/score/kernel/signal.c:290:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: arch/score/kernel/signal.c:291:
+       if (!user_mode(regs))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#347: FILE: arch/score/kernel/signal.c:291:
+       if (!user_mode(regs))
+               return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#348: FILE: arch/score/kernel/signal.c:292:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: arch/score/kernel/signal.c:292:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: arch/score/kernel/signal.c:294:
+       if (test_thread_flag(TIF_RESTORE_SIGMASK))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#350: FILE: arch/score/kernel/signal.c:294:
+       if (test_thread_flag(TIF_RESTORE_SIGMASK))
+               oldset = &current->saved_sigmask;

ERROR:CODE_INDENT: code indent should use tabs where possible
#351: FILE: arch/score/kernel/signal.c:295:
+               oldset = &current->saved_sigmask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: arch/score/kernel/signal.c:295:
+               oldset = &current->saved_sigmask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: arch/score/kernel/signal.c:296:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#352: FILE: arch/score/kernel/signal.c:296:
+       else
+               oldset = &current->blocked;

ERROR:CODE_INDENT: code indent should use tabs where possible
#353: FILE: arch/score/kernel/signal.c:297:
+               oldset = &current->blocked;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: arch/score/kernel/signal.c:297:
+               oldset = &current->blocked;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: arch/score/kernel/signal.c:299:
+       signr = get_signal_to_deliver(&info, &ka, regs, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: arch/score/kernel/signal.c:300:
+       if (signr > 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#356: FILE: arch/score/kernel/signal.c:300:
+       if (signr > 0) {
[...]
+               if (handle_signal(signr, &info, &ka, oldset, regs) == 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#357: FILE: arch/score/kernel/signal.c:301:
+               /* Actually deliver the signal.  */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#358: FILE: arch/score/kernel/signal.c:302:
+               if (handle_signal(signr, &info, &ka, oldset, regs) == 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: arch/score/kernel/signal.c:302:
+               if (handle_signal(signr, &info, &ka, oldset, regs) == 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 0)
#358: FILE: arch/score/kernel/signal.c:302:
+               if (handle_signal(signr, &info, &ka, oldset, regs) == 0) {
[...]
frame,

ERROR:CODE_INDENT: code indent should use tabs where possible
#359: FILE: arch/score/kernel/signal.c:303:
+                       /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#360: FILE: arch/score/kernel/signal.c:304:
+                        * A signal was successfully delivered; the saved$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#361: FILE: arch/score/kernel/signal.c:305:
+                        * sigmask will have been stored in the signal $

ERROR:CODE_INDENT: code indent should use tabs where possible
#361: FILE: arch/score/kernel/signal.c:305:
+                        * sigmask will have been stored in the signal $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#363: FILE: arch/score/kernel/signal.c:306:
+                        * and will be restored by sigreturn, so we can $

ERROR:CODE_INDENT: code indent should use tabs where possible
#363: FILE: arch/score/kernel/signal.c:306:
+                        * and will be restored by sigreturn, so we can $

ERROR:CODE_INDENT: code indent should use tabs where possible
#365: FILE: arch/score/kernel/signal.c:307:
+                        * clear the TIF_RESTORE_SIGMASK flag.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#366: FILE: arch/score/kernel/signal.c:308:
+                        */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#367: FILE: arch/score/kernel/signal.c:309:
+                       if (test_thread_flag(TIF_RESTORE_SIGMASK))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: arch/score/kernel/signal.c:309:
+                       if (test_thread_flag(TIF_RESTORE_SIGMASK))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#367: FILE: arch/score/kernel/signal.c:309:
+                       if (test_thread_flag(TIF_RESTORE_SIGMASK))
+                               clear_thread_flag(TIF_RESTORE_SIGMASK);

ERROR:CODE_INDENT: code indent should use tabs where possible
#368: FILE: arch/score/kernel/signal.c:310:
+                               clear_thread_flag(TIF_RESTORE_SIGMASK);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: arch/score/kernel/signal.c:310:
+                               clear_thread_flag(TIF_RESTORE_SIGMASK);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#369: FILE: arch/score/kernel/signal.c:311:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: arch/score/kernel/signal.c:311:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#371: FILE: arch/score/kernel/signal.c:313:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: arch/score/kernel/signal.c:313:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: arch/score/kernel/signal.c:314:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: arch/score/kernel/signal.c:316:
+       if (regs->is_syscall) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#374: FILE: arch/score/kernel/signal.c:316:
+       if (regs->is_syscall) {
+               if (regs->regs[4] == ERESTARTNOHAND ||

ERROR:CODE_INDENT: code indent should use tabs where possible
#375: FILE: arch/score/kernel/signal.c:317:
+               if (regs->regs[4] == ERESTARTNOHAND ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: arch/score/kernel/signal.c:317:
+               if (regs->regs[4] == ERESTARTNOHAND ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#375: FILE: arch/score/kernel/signal.c:317:
+               if (regs->regs[4] == ERESTARTNOHAND ||
[...]
+                       regs->regs[4] = regs->orig_r4;

ERROR:CODE_INDENT: code indent should use tabs where possible
#376: FILE: arch/score/kernel/signal.c:318:
+                   regs->regs[4] == ERESTARTSYS ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: arch/score/kernel/signal.c:318:
+                   regs->regs[4] == ERESTARTSYS ||$

ERROR:CODE_INDENT: code indent should use tabs where possible
#377: FILE: arch/score/kernel/signal.c:319:
+                   regs->regs[4] == ERESTARTNOINTR) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: arch/score/kernel/signal.c:319:
+                   regs->regs[4] == ERESTARTNOINTR) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#378: FILE: arch/score/kernel/signal.c:320:
+                       regs->regs[4] = regs->orig_r4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: arch/score/kernel/signal.c:320:
+                       regs->regs[4] = regs->orig_r4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#379: FILE: arch/score/kernel/signal.c:321:
+                       regs->regs[7] = regs->orig_r7;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: arch/score/kernel/signal.c:321:
+                       regs->regs[7] = regs->orig_r7;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#380: FILE: arch/score/kernel/signal.c:322:
+                       regs->cp0_epc -= 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: arch/score/kernel/signal.c:322:
+                       regs->cp0_epc -= 8;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#381: FILE: arch/score/kernel/signal.c:323:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: arch/score/kernel/signal.c:323:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#383: FILE: arch/score/kernel/signal.c:325:
+               if (regs->regs[4] == ERESTART_RESTARTBLOCK) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: arch/score/kernel/signal.c:325:
+               if (regs->regs[4] == ERESTART_RESTARTBLOCK) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#383: FILE: arch/score/kernel/signal.c:325:
+               if (regs->regs[4] == ERESTART_RESTARTBLOCK) {
+                       regs->regs[27] = __NR_restart_syscall;

ERROR:CODE_INDENT: code indent should use tabs where possible
#384: FILE: arch/score/kernel/signal.c:326:
+                       regs->regs[27] = __NR_restart_syscall;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: arch/score/kernel/signal.c:326:
+                       regs->regs[27] = __NR_restart_syscall;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#385: FILE: arch/score/kernel/signal.c:327:
+                       regs->regs[4] = regs->orig_r4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: arch/score/kernel/signal.c:327:
+                       regs->regs[4] = regs->orig_r4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#386: FILE: arch/score/kernel/signal.c:328:
+                       regs->regs[7] = regs->orig_r7;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: arch/score/kernel/signal.c:328:
+                       regs->regs[7] = regs->orig_r7;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#387: FILE: arch/score/kernel/signal.c:329:
+                       regs->cp0_epc -= 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: arch/score/kernel/signal.c:329:
+                       regs->cp0_epc -= 8;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#388: FILE: arch/score/kernel/signal.c:330:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: arch/score/kernel/signal.c:330:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#390: FILE: arch/score/kernel/signal.c:332:
+               regs->is_syscall = 0;   /* Don't deal with this again.  */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: arch/score/kernel/signal.c:332:
+               regs->is_syscall = 0;   /* Don't deal with this again.  */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: arch/score/kernel/signal.c:333:
+       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#394: FILE: arch/score/kernel/signal.c:336:
+        * If there's no signal to deliver, we just put the saved sigmask$

ERROR:CODE_INDENT: code indent should use tabs where possible
#395: FILE: arch/score/kernel/signal.c:337:
+        * back$

ERROR:CODE_INDENT: code indent should use tabs where possible
#396: FILE: arch/score/kernel/signal.c:338:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: arch/score/kernel/signal.c:339:
+       if (test_thread_flag(TIF_RESTORE_SIGMASK)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#397: FILE: arch/score/kernel/signal.c:339:
+       if (test_thread_flag(TIF_RESTORE_SIGMASK)) {
+               clear_thread_flag(TIF_RESTORE_SIGMASK);

ERROR:CODE_INDENT: code indent should use tabs where possible
#398: FILE: arch/score/kernel/signal.c:340:
+               clear_thread_flag(TIF_RESTORE_SIGMASK);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: arch/score/kernel/signal.c:340:
+               clear_thread_flag(TIF_RESTORE_SIGMASK);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#399: FILE: arch/score/kernel/signal.c:341:
+               sigprocmask(SIG_SETMASK, &current->saved_sigmask, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: arch/score/kernel/signal.c:341:
+               sigprocmask(SIG_SETMASK, &current->saved_sigmask, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: arch/score/kernel/signal.c:342:
+       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#408: FILE: arch/score/kernel/signal.c:350:
+                               __u32 thread_info_flags)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#408: FILE: arch/score/kernel/signal.c:350:
+asmlinkage void do_notify_resume(struct pt_regs *regs, void *unused,
+                               __u32 thread_info_flags)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: arch/score/kernel/signal.c:350:
+                               __u32 thread_info_flags)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: arch/score/kernel/signal.c:353:
+       if (thread_info_flags & (_TIF_SIGPENDING | _TIF_RESTORE_SIGMASK))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#411: FILE: arch/score/kernel/signal.c:353:
+       if (thread_info_flags & (_TIF_SIGPENDING | _TIF_RESTORE_SIGMASK))
+               do_signal(regs);

ERROR:CODE_INDENT: code indent should use tabs where possible
#412: FILE: arch/score/kernel/signal.c:354:
+               do_signal(regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: arch/score/kernel/signal.c:354:
+               do_signal(regs);$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#420: FILE: arch/score/kernel/sys_score.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#442: FILE: arch/score/kernel/sys_score.c:23:
+ * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

ERROR:CODE_INDENT: code indent should use tabs where possible
#456: FILE: arch/score/kernel/sys_score.c:37:
+         unsigned long flags, unsigned long fd, unsigned long pgoff)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#456: FILE: arch/score/kernel/sys_score.c:37:
+sys_mmap2(unsigned long addr, unsigned long len, unsigned long prot,
+         unsigned long flags, unsigned long fd, unsigned long pgoff)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#456: FILE: arch/score/kernel/sys_score.c:37:
+         unsigned long flags, unsigned long fd, unsigned long pgoff)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#458: FILE: arch/score/kernel/sys_score.c:39:
+       int error = -EBADF;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#459: FILE: arch/score/kernel/sys_score.c:40:
+       struct file *file = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: arch/score/kernel/sys_score.c:42:
+       if (pgoff & (~PAGE_MASK >> 12))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#461: FILE: arch/score/kernel/sys_score.c:42:
+       if (pgoff & (~PAGE_MASK >> 12))
+               return -EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#462: FILE: arch/score/kernel/sys_score.c:43:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: arch/score/kernel/sys_score.c:43:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: arch/score/kernel/sys_score.c:45:
+       flags &= ~(MAP_EXECUTABLE | MAP_DENYWRITE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#465: FILE: arch/score/kernel/sys_score.c:46:
+       if (!(flags & MAP_ANONYMOUS)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#465: FILE: arch/score/kernel/sys_score.c:46:
+       if (!(flags & MAP_ANONYMOUS)) {
+               file = fget(fd);

ERROR:CODE_INDENT: code indent should use tabs where possible
#466: FILE: arch/score/kernel/sys_score.c:47:
+               file = fget(fd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#466: FILE: arch/score/kernel/sys_score.c:47:
+               file = fget(fd);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#467: FILE: arch/score/kernel/sys_score.c:48:
+               if (!file)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: arch/score/kernel/sys_score.c:48:
+               if (!file)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#467: FILE: arch/score/kernel/sys_score.c:48:
+               if (!file)
+                       return error;

ERROR:CODE_INDENT: code indent should use tabs where possible
#468: FILE: arch/score/kernel/sys_score.c:49:
+                       return error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: arch/score/kernel/sys_score.c:49:
+                       return error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#469: FILE: arch/score/kernel/sys_score.c:50:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: arch/score/kernel/sys_score.c:52:
+       down_write(&current->mm->mmap_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: arch/score/kernel/sys_score.c:53:
+       error = do_mmap_pgoff(file, addr, len, prot, flags,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#473: FILE: arch/score/kernel/sys_score.c:54:
+                       pgoff >> (PAGE_SHIFT - 12));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#473: FILE: arch/score/kernel/sys_score.c:54:
+       error = do_mmap_pgoff(file, addr, len, prot, flags,
+                       pgoff >> (PAGE_SHIFT - 12));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#473: FILE: arch/score/kernel/sys_score.c:54:
+                       pgoff >> (PAGE_SHIFT - 12));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: arch/score/kernel/sys_score.c:55:
+       up_write(&current->mm->mmap_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: arch/score/kernel/sys_score.c:57:
+       if (file)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#476: FILE: arch/score/kernel/sys_score.c:57:
+       if (file)
+               fput(file);

ERROR:CODE_INDENT: code indent should use tabs where possible
#477: FILE: arch/score/kernel/sys_score.c:58:
+               fput(file);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#477: FILE: arch/score/kernel/sys_score.c:58:
+               fput(file);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#479: FILE: arch/score/kernel/sys_score.c:60:
+       return error;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#483: FILE: arch/score/kernel/sys_score.c:64:
+                       unsigned long prot, unsigned long flags,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#483: FILE: arch/score/kernel/sys_score.c:64:
+asmlinkage long sys_mmap(unsigned long addr, size_t len,
+                       unsigned long prot, unsigned long flags,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: arch/score/kernel/sys_score.c:64:
+                       unsigned long prot, unsigned long flags,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#484: FILE: arch/score/kernel/sys_score.c:65:
+                       unsigned long fd, off_t offset)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: arch/score/kernel/sys_score.c:65:
+                       unsigned long fd, off_t offset)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: arch/score/kernel/sys_score.c:67:
+       int err = -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: arch/score/kernel/sys_score.c:69:
+       if (offset & ~PAGE_MASK) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#488: FILE: arch/score/kernel/sys_score.c:69:
+       if (offset & ~PAGE_MASK) {
+               printk(KERN_INFO "no pagemask in mmap\r\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#489: FILE: arch/score/kernel/sys_score.c:70:
+               printk(KERN_INFO "no pagemask in mmap\r\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: arch/score/kernel/sys_score.c:70:
+               printk(KERN_INFO "no pagemask in mmap\r\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#489: FILE: arch/score/kernel/sys_score.c:70:
+               printk(KERN_INFO "no pagemask in mmap\r\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#490: FILE: arch/score/kernel/sys_score.c:71:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: arch/score/kernel/sys_score.c:71:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: arch/score/kernel/sys_score.c:72:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: arch/score/kernel/sys_score.c:74:
+       err = sys_mmap2(addr, len, prot, flags, fd, offset >> PAGE_SHIFT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#495: FILE: arch/score/kernel/sys_score.c:76:
+       return err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#500: FILE: arch/score/kernel/sys_score.c:81:
+       return do_fork(CLONE_VFORK | CLONE_VM | SIGCHLD, regs->regs[0],$

ERROR:CODE_INDENT: code indent should use tabs where possible
#501: FILE: arch/score/kernel/sys_score.c:82:
+                                               regs, 0, NULL, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#501: FILE: arch/score/kernel/sys_score.c:82:
+                                               regs, 0, NULL, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#511: FILE: arch/score/kernel/sys_score.c:92:
+       return do_fork(SIGCHLD, regs->regs[0], regs, 0, NULL, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#521: FILE: arch/score/kernel/sys_score.c:102:
+       unsigned long clone_flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: arch/score/kernel/sys_score.c:103:
+       unsigned long newsp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#523: FILE: arch/score/kernel/sys_score.c:104:
+       int __user *parent_tidptr, *child_tidptr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: arch/score/kernel/sys_score.c:106:
+       clone_flags = regs->regs[4];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: arch/score/kernel/sys_score.c:107:
+       newsp = regs->regs[5];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#527: FILE: arch/score/kernel/sys_score.c:108:
+       if (!newsp)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#527: FILE: arch/score/kernel/sys_score.c:108:
+       if (!newsp)
+               newsp = regs->regs[0];

ERROR:CODE_INDENT: code indent should use tabs where possible
#528: FILE: arch/score/kernel/sys_score.c:109:
+               newsp = regs->regs[0];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#528: FILE: arch/score/kernel/sys_score.c:109:
+               newsp = regs->regs[0];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#529: FILE: arch/score/kernel/sys_score.c:110:
+       parent_tidptr = (int __user *)regs->regs[6];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: arch/score/kernel/sys_score.c:112:
+       child_tidptr = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#532: FILE: arch/score/kernel/sys_score.c:113:
+       if (clone_flags & (CLONE_CHILD_SETTID | CLONE_CHILD_CLEARTID)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#532: FILE: arch/score/kernel/sys_score.c:113:
+       if (clone_flags & (CLONE_CHILD_SETTID | CLONE_CHILD_CLEARTID)) {
+               int __user *__user *usp = (int __user *__user 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#533: FILE: arch/score/kernel/sys_score.c:114:
+               int __user *__user *usp = (int __user *__user $

ERROR:CODE_INDENT: code indent should use tabs where possible
#533: FILE: arch/score/kernel/sys_score.c:114:
+               int __user *__user *usp = (int __user *__user $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: arch/score/kernel/sys_score.c:114:
+               int __user *__user *usp = (int __user *__user $

ERROR:CODE_INDENT: code indent should use tabs where possible
#536: FILE: arch/score/kernel/sys_score.c:116:
+               if (get_user(child_tidptr, &usp[4]))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#536: FILE: arch/score/kernel/sys_score.c:116:
+               if (get_user(child_tidptr, &usp[4]))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#536: FILE: arch/score/kernel/sys_score.c:116:
+               if (get_user(child_tidptr, &usp[4]))
+                       return -EFAULT;

ERROR:CODE_INDENT: code indent should use tabs where possible
#537: FILE: arch/score/kernel/sys_score.c:117:
+                       return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#537: FILE: arch/score/kernel/sys_score.c:117:
+                       return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#538: FILE: arch/score/kernel/sys_score.c:118:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#540: FILE: arch/score/kernel/sys_score.c:120:
+       return do_fork(clone_flags, newsp, regs, 0,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#541: FILE: arch/score/kernel/sys_score.c:121:
+                       parent_tidptr, child_tidptr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#541: FILE: arch/score/kernel/sys_score.c:121:
+                       parent_tidptr, child_tidptr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#550: FILE: arch/score/kernel/sys_score.c:130:
+       int error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#551: FILE: arch/score/kernel/sys_score.c:131:
+       char *filename;$

CHECK:SPACING: No space is necessary after a cast
#553: FILE: arch/score/kernel/sys_score.c:133:
+       filename = getname((char *) (long) regs->regs[4]);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#553: FILE: arch/score/kernel/sys_score.c:133:
+       filename = getname((char *) (long) regs->regs[4]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#554: FILE: arch/score/kernel/sys_score.c:134:
+       error = PTR_ERR(filename);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: arch/score/kernel/sys_score.c:135:
+       if (IS_ERR(filename))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#555: FILE: arch/score/kernel/sys_score.c:135:
+       if (IS_ERR(filename))
+               return error;

ERROR:CODE_INDENT: code indent should use tabs where possible
#556: FILE: arch/score/kernel/sys_score.c:136:
+               return error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#556: FILE: arch/score/kernel/sys_score.c:136:
+               return error;$

CHECK:SPACING: No space is necessary after a cast
#558: FILE: arch/score/kernel/sys_score.c:138:
+       error = do_execve(filename, (char **) (long) regs->regs[5],

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#558: FILE: arch/score/kernel/sys_score.c:138:
+       error = do_execve(filename, (char **) (long) regs->regs[5],$

ERROR:CODE_INDENT: code indent should use tabs where possible
#559: FILE: arch/score/kernel/sys_score.c:139:
+                         (char **) (long) regs->regs[6], regs);$

CHECK:SPACING: No space is necessary after a cast
#559: FILE: arch/score/kernel/sys_score.c:139:
+                         (char **) (long) regs->regs[6], regs);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#559: FILE: arch/score/kernel/sys_score.c:139:
+                         (char **) (long) regs->regs[6], regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#561: FILE: arch/score/kernel/sys_score.c:141:
+       putname(filename);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#562: FILE: arch/score/kernel/sys_score.c:142:
+       return error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#571: FILE: arch/score/kernel/sys_score.c:151:
+       do_exit(SIGSEGV);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#578: FILE: arch/score/kernel/sys_score.c:158:
+int kernel_execve(const char *filename, char *const argv[], char *const $

CHECK:SPACING: No space is necessary after a cast
#581: FILE: arch/score/kernel/sys_score.c:160:
+       register unsigned long __r4 asm("r4") = (unsigned long) filename;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: arch/score/kernel/sys_score.c:160:
+       register unsigned long __r4 asm("r4") = (unsigned long) filename;$

CHECK:SPACING: No space is necessary after a cast
#582: FILE: arch/score/kernel/sys_score.c:161:
+       register unsigned long __r5 asm("r5") = (unsigned long) argv;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#582: FILE: arch/score/kernel/sys_score.c:161:
+       register unsigned long __r5 asm("r5") = (unsigned long) argv;$

CHECK:SPACING: No space is necessary after a cast
#583: FILE: arch/score/kernel/sys_score.c:162:
+       register unsigned long __r6 asm("r6") = (unsigned long) envp;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#583: FILE: arch/score/kernel/sys_score.c:162:
+       register unsigned long __r6 asm("r6") = (unsigned long) envp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#584: FILE: arch/score/kernel/sys_score.c:163:
+       register unsigned long __r7 asm("r7");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#586: FILE: arch/score/kernel/sys_score.c:165:
+       __asm__ volatile ("     \n"$

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#586: FILE: arch/score/kernel/sys_score.c:165:
+       __asm__ volatile ("     \n"

ERROR:CODE_INDENT: code indent should use tabs where possible
#587: FILE: arch/score/kernel/sys_score.c:166:
+               "ldi    r27, %5         \n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#587: FILE: arch/score/kernel/sys_score.c:166:
+               "ldi    r27, %5         \n"$

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#587: FILE: arch/score/kernel/sys_score.c:166:
+               "ldi    r27, %5         \n"

ERROR:CODE_INDENT: code indent should use tabs where possible
#588: FILE: arch/score/kernel/sys_score.c:167:
+               "syscall                \n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#588: FILE: arch/score/kernel/sys_score.c:167:
+               "syscall                \n"$

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#588: FILE: arch/score/kernel/sys_score.c:167:
+               "syscall                \n"

ERROR:CODE_INDENT: code indent should use tabs where possible
#589: FILE: arch/score/kernel/sys_score.c:168:
+               "mv     %0, r4          \n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#589: FILE: arch/score/kernel/sys_score.c:168:
+               "mv     %0, r4          \n"$

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#589: FILE: arch/score/kernel/sys_score.c:168:
+               "mv     %0, r4          \n"

ERROR:CODE_INDENT: code indent should use tabs where possible
#590: FILE: arch/score/kernel/sys_score.c:169:
+               "mv     %1, r7          \n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#590: FILE: arch/score/kernel/sys_score.c:169:
+               "mv     %1, r7          \n"$

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#590: FILE: arch/score/kernel/sys_score.c:169:
+               "mv     %1, r7          \n"

ERROR:CODE_INDENT: code indent should use tabs where possible
#591: FILE: arch/score/kernel/sys_score.c:170:
+               : "=&r" (__r4), "=r" (__r7)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#591: FILE: arch/score/kernel/sys_score.c:170:
+               : "=&r" (__r4), "=r" (__r7)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#592: FILE: arch/score/kernel/sys_score.c:171:
+               : "r" (__r4), "r" (__r5), "r" (__r6), "i" (__NR_execve)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#592: FILE: arch/score/kernel/sys_score.c:171:
+               : "r" (__r4), "r" (__r5), "r" (__r6), "i" (__NR_execve)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#593: FILE: arch/score/kernel/sys_score.c:172:
+               : "r8", "r9", "r10", "r11", "r22", "r23", "r24", "r25",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#593: FILE: arch/score/kernel/sys_score.c:172:
+               : "r8", "r9", "r10", "r11", "r22", "r23", "r24", "r25",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#594: FILE: arch/score/kernel/sys_score.c:173:
+                 "r26", "r27", "memory");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#594: FILE: arch/score/kernel/sys_score.c:173:
+                 "r26", "r27", "memory");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#596: FILE: arch/score/kernel/sys_score.c:175:
+       if (__r7 == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#596: FILE: arch/score/kernel/sys_score.c:175:
+       if (__r7 == 0)
+               return __r4;

ERROR:CODE_INDENT: code indent should use tabs where possible
#597: FILE: arch/score/kernel/sys_score.c:176:
+               return __r4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#597: FILE: arch/score/kernel/sys_score.c:176:
+               return __r4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#599: FILE: arch/score/kernel/sys_score.c:178:
+       return -__r4;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#607: FILE: arch/score/kernel/time.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#608: FILE: arch/score/kernel/time.c:2:
+ * arch/score/kernel/time.c

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#629: FILE: arch/score/kernel/time.c:23:
+ * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#639: FILE: arch/score/kernel/time.c:33:
+       struct clock_event_device *evdev = dev_id;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#642: FILE: arch/score/kernel/time.c:36:
+       __raw_writel(1, (void *)P_TIMER0_CPP_REG);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#643: FILE: arch/score/kernel/time.c:37:
+       evdev->event_handler(evdev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#645: FILE: arch/score/kernel/time.c:39:
+       return IRQ_HANDLED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#649: FILE: arch/score/kernel/time.c:43:
+       .handler = timer_interrupt,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#650: FILE: arch/score/kernel/time.c:44:
+       .flags = IRQF_DISABLED | IRQF_TIMER,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#651: FILE: arch/score/kernel/time.c:45:
+       .mask = CPU_MASK_NONE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#652: FILE: arch/score/kernel/time.c:46:
+       .name = "timer",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#656: FILE: arch/score/kernel/time.c:50:
+               struct clock_event_device *evdev)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#656: FILE: arch/score/kernel/time.c:50:
+static int comparator_next_event(unsigned long delta,
+               struct clock_event_device *evdev)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#656: FILE: arch/score/kernel/time.c:50:
+               struct clock_event_device *evdev)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#658: FILE: arch/score/kernel/time.c:52:
+       unsigned long   flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#660: FILE: arch/score/kernel/time.c:54:
+       raw_local_irq_save(flags);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#662: FILE: arch/score/kernel/time.c:56:
+       __raw_writel((TMR_M_PERIODIC | TMR_IE_ENABLE), (void $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#662: FILE: arch/score/kernel/time.c:56:
+       __raw_writel((TMR_M_PERIODIC | TMR_IE_ENABLE), (void $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#664: FILE: arch/score/kernel/time.c:57:
+       __raw_writel(delta, (void *)P_TIMER0_PRELOAD);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#665: FILE: arch/score/kernel/time.c:58:
+       __raw_writel(__raw_readl((void *)P_TIMER0_CTRL) | TMR_ENABLE,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#666: FILE: arch/score/kernel/time.c:59:
+               (void *)P_TIMER0_CTRL);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#666: FILE: arch/score/kernel/time.c:59:
+       __raw_writel(__raw_readl((void *)P_TIMER0_CTRL) | TMR_ENABLE,
+               (void *)P_TIMER0_CTRL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#666: FILE: arch/score/kernel/time.c:59:
+               (void *)P_TIMER0_CTRL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#668: FILE: arch/score/kernel/time.c:61:
+       raw_local_irq_restore(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#670: FILE: arch/score/kernel/time.c:63:
+       return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#674: FILE: arch/score/kernel/time.c:67:
+               struct clock_event_device *evdev)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#674: FILE: arch/score/kernel/time.c:67:
+static void comparator_mode(enum clock_event_mode mode,
+               struct clock_event_device *evdev)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#674: FILE: arch/score/kernel/time.c:67:
+               struct clock_event_device *evdev)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#676: FILE: arch/score/kernel/time.c:69:
+       unsigned long   flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#678: FILE: arch/score/kernel/time.c:71:
+       switch (mode) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#679: FILE: arch/score/kernel/time.c:72:
+       case CLOCK_EVT_MODE_PERIODIC:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#680: FILE: arch/score/kernel/time.c:73:
+               raw_local_irq_save(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#680: FILE: arch/score/kernel/time.c:73:
+               raw_local_irq_save(flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#681: FILE: arch/score/kernel/time.c:74:
+               __raw_writel((TMR_M_PERIODIC | TMR_IE_ENABLE),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#681: FILE: arch/score/kernel/time.c:74:
+               __raw_writel((TMR_M_PERIODIC | TMR_IE_ENABLE),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#682: FILE: arch/score/kernel/time.c:75:
+                       (void *)P_TIMER0_CTRL);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#682: FILE: arch/score/kernel/time.c:75:
+               __raw_writel((TMR_M_PERIODIC | TMR_IE_ENABLE),
+                       (void *)P_TIMER0_CTRL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#682: FILE: arch/score/kernel/time.c:75:
+                       (void *)P_TIMER0_CTRL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#683: FILE: arch/score/kernel/time.c:76:
+               __raw_writel(SYSTEM_CLOCK/100, (void *)P_TIMER0_PRELOAD);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#683: FILE: arch/score/kernel/time.c:76:
+               __raw_writel(SYSTEM_CLOCK/100, (void *)P_TIMER0_PRELOAD);$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#683: FILE: arch/score/kernel/time.c:76:
+               __raw_writel(SYSTEM_CLOCK/100, (void *)P_TIMER0_PRELOAD);
                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#684: FILE: arch/score/kernel/time.c:77:
+               __raw_writel(__raw_readl((void *)P_TIMER0_CTRL) | $

ERROR:CODE_INDENT: code indent should use tabs where possible
#684: FILE: arch/score/kernel/time.c:77:
+               __raw_writel(__raw_readl((void *)P_TIMER0_CTRL) | $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#684: FILE: arch/score/kernel/time.c:77:
+               __raw_writel(__raw_readl((void *)P_TIMER0_CTRL) | $

ERROR:CODE_INDENT: code indent should use tabs where possible
#686: FILE: arch/score/kernel/time.c:78:
+                       (void *)P_TIMER0_CTRL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#686: FILE: arch/score/kernel/time.c:78:
+                       (void *)P_TIMER0_CTRL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#687: FILE: arch/score/kernel/time.c:79:
+               raw_local_irq_restore(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#687: FILE: arch/score/kernel/time.c:79:
+               raw_local_irq_restore(flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#688: FILE: arch/score/kernel/time.c:80:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#688: FILE: arch/score/kernel/time.c:80:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#689: FILE: arch/score/kernel/time.c:81:
+       case CLOCK_EVT_MODE_ONESHOT:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#690: FILE: arch/score/kernel/time.c:82:
+       case CLOCK_EVT_MODE_RESUME:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#691: FILE: arch/score/kernel/time.c:83:
+       case CLOCK_EVT_MODE_UNUSED:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#692: FILE: arch/score/kernel/time.c:84:
+       case CLOCK_EVT_MODE_SHUTDOWN:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#693: FILE: arch/score/kernel/time.c:85:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#693: FILE: arch/score/kernel/time.c:85:
+               break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#695: FILE: arch/score/kernel/time.c:87:
+               BUG();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#695: FILE: arch/score/kernel/time.c:87:
+               BUG();$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#695: FILE: arch/score/kernel/time.c:87:
+               BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#696: FILE: arch/score/kernel/time.c:88:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#700: FILE: arch/score/kernel/time.c:92:
+       .name           = "avr32_comparator",$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#701: FILE: arch/score/kernel/time.c:93:
+       .features       = CLOCK_EVT_FEAT_PERIODIC | $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#701: FILE: arch/score/kernel/time.c:93:
+       .features       = CLOCK_EVT_FEAT_PERIODIC | $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#703: FILE: arch/score/kernel/time.c:94:
+       .shift          = 16,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#704: FILE: arch/score/kernel/time.c:95:
+       .set_next_event = comparator_next_event,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#705: FILE: arch/score/kernel/time.c:96:
+       .set_mode       = comparator_mode,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#712: FILE: arch/score/kernel/time.c:103:
+       unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#714: FILE: arch/score/kernel/time.c:105:
+       local_irq_save(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#715: FILE: arch/score/kernel/time.c:106:
+       score_tick_cnt += SYSTEM_CLOCK/100;$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#715: FILE: arch/score/kernel/time.c:106:
+       score_tick_cnt += SYSTEM_CLOCK/100;
                                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#716: FILE: arch/score/kernel/time.c:107:
+       local_irq_restore(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#718: FILE: arch/score/kernel/time.c:109:
+       return score_tick_cnt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#722: FILE: arch/score/kernel/time.c:113:
+       .name   = "timer",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#723: FILE: arch/score/kernel/time.c:114:
+       .rating = 250,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#724: FILE: arch/score/kernel/time.c:115:
+       .read   = score_read_clk,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#725: FILE: arch/score/kernel/time.c:116:
+       .shift  = 20,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#726: FILE: arch/score/kernel/time.c:117:
+       .mask   = CLOCKSOURCE_MASK(32),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#727: FILE: arch/score/kernel/time.c:118:
+       .flags  = CLOCK_SOURCE_IS_CONTINUOUS,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#732: FILE: arch/score/kernel/time.c:123:
+       xtime.tv_sec = mktime(2009, 1, 1, 0, 0, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#733: FILE: arch/score/kernel/time.c:124:
+       xtime.tv_nsec = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#735: FILE: arch/score/kernel/time.c:126:
+       set_normalized_timespec(&wall_to_monotonic, -xtime.tv_sec,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#736: FILE: arch/score/kernel/time.c:127:
+                               -xtime.tv_nsec);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#736: FILE: arch/score/kernel/time.c:127:
+                               -xtime.tv_nsec);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#739: FILE: arch/score/kernel/time.c:130:
+       __raw_writel((TMR_M_PERIODIC | TMR_IE_ENABLE), (void $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#739: FILE: arch/score/kernel/time.c:130:
+       __raw_writel((TMR_M_PERIODIC | TMR_IE_ENABLE), (void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#741: FILE: arch/score/kernel/time.c:131:
+       __raw_writel(SYSTEM_CLOCK/100, (void *)P_TIMER0_PRELOAD); /* 10ms $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#741: FILE: arch/score/kernel/time.c:131:
+       __raw_writel(SYSTEM_CLOCK/100, (void *)P_TIMER0_PRELOAD); /* 10ms $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#741: FILE: arch/score/kernel/time.c:131:
+       __raw_writel(SYSTEM_CLOCK/100, (void *)P_TIMER0_PRELOAD); /* 10ms 
                                 ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#743: FILE: arch/score/kernel/time.c:132:
+       __raw_writel(SYSTEM_CLOCK/100, (void *)P_TIMER0_PRELOAD); /* 10ms 
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#745: FILE: arch/score/kernel/time.c:134:
+       __raw_writel(__raw_readl((void *)P_TIMER0_CTRL) | TMR_ENABLE,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#746: FILE: arch/score/kernel/time.c:135:
+               (void *)P_TIMER0_CTRL);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#746: FILE: arch/score/kernel/time.c:135:
+       __raw_writel(__raw_readl((void *)P_TIMER0_CTRL) | TMR_ENABLE,
+               (void *)P_TIMER0_CTRL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#746: FILE: arch/score/kernel/time.c:135:
+               (void *)P_TIMER0_CTRL);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#748: FILE: arch/score/kernel/time.c:137:
+       score_clk.mult = clocksource_hz2mult(SYSTEM_CLOCK, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#748: FILE: arch/score/kernel/time.c:137:
+       score_clk.mult = clocksource_hz2mult(SYSTEM_CLOCK, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#750: FILE: arch/score/kernel/time.c:138:
+       score_clk.mult = clocksource_hz2mult(SYSTEM_CLOCK, 
+       clocksource_register(&score_clk);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#750: FILE: arch/score/kernel/time.c:138:
+       clocksource_register(&score_clk);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#753: FILE: arch/score/kernel/time.c:141:
+       comparator.mult = div_sc(SYSTEM_CLOCK, NSEC_PER_SEC, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#753: FILE: arch/score/kernel/time.c:141:
+       comparator.mult = div_sc(SYSTEM_CLOCK, NSEC_PER_SEC, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#755: FILE: arch/score/kernel/time.c:142:
+       comparator.max_delta_ns = clockevent_delta2ns((u32)~0, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#755: FILE: arch/score/kernel/time.c:142:
+       comparator.mult = div_sc(SYSTEM_CLOCK, NSEC_PER_SEC, 
+       comparator.max_delta_ns = clockevent_delta2ns((u32)~0, 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#755: FILE: arch/score/kernel/time.c:142:
+       comparator.max_delta_ns = clockevent_delta2ns((u32)~0, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#756: FILE: arch/score/kernel/time.c:142:
+       comparator.mult = div_sc(SYSTEM_CLOCK, NSEC_PER_SEC, 
&comparator);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#757: FILE: arch/score/kernel/time.c:143:
+       comparator.min_delta_ns = clockevent_delta2ns(50, &comparator) + $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#757: FILE: arch/score/kernel/time.c:143:
+       comparator.max_delta_ns = clockevent_delta2ns((u32)~0, 
+       comparator.min_delta_ns = clockevent_delta2ns(50, &comparator) + 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#757: FILE: arch/score/kernel/time.c:143:
+       comparator.min_delta_ns = clockevent_delta2ns(50, &comparator) + $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#758: FILE: arch/score/kernel/time.c:143:
+       comparator.max_delta_ns = clockevent_delta2ns((u32)~0, 
1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#759: FILE: arch/score/kernel/time.c:144:
+       comparator.cpumask = cpumask_of(0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#761: FILE: arch/score/kernel/time.c:146:
+       timer_irq.dev_id = &comparator;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#762: FILE: arch/score/kernel/time.c:147:
+       setup_irq(IRQ_TIMER , &timer_irq);$

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#762: FILE: arch/score/kernel/time.c:147:
+       setup_irq(IRQ_TIMER , &timer_irq);
                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#764: FILE: arch/score/kernel/time.c:149:
+       clockevents_register_device(&comparator);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000113546.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 150 errors, 387 warnings, 47 checks, 701 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000113546.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
