WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#53: 
>> because Intel's request_microcode_user() involves a copy_from_user() from

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#93: FILE: arch/x86/include/asm/microcode.h:13:
*buf, size_t size);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: arch/x86/include/asm/microcode.h:16:
+       void (*microcode_fini_cpu) (int cpu);$

WARNING:SPACING: Unnecessary space before function pointer arguments
#97: FILE: arch/x86/include/asm/microcode.h:16:
+       void (*microcode_fini_cpu) (int cpu);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: arch/x86/include/asm/microcode.h:19:
+        * The generic 'microcode_core' part guarantees that$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: arch/x86/include/asm/microcode.h:20:
+        * the callbacks below run on a target cpu when they$

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: arch/x86/include/asm/microcode.h:21:
+        * are being called.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: arch/x86/include/asm/microcode.h:22:
+        * See also the "Synchronization" section in microcode_core.c.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: arch/x86/include/asm/microcode.h:23:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: arch/x86/include/asm/microcode.h:24:
+       void (*apply_microcode) (int cpu);$

WARNING:SPACING: Unnecessary space before function pointer arguments
#105: FILE: arch/x86/include/asm/microcode.h:24:
+       void (*apply_microcode) (int cpu);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: arch/x86/kernel/microcode_core.c:126:
+       struct cpu_signature    cpu_sig;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: arch/x86/kernel/microcode_core.c:127:
+       int                     cpu;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: arch/x86/kernel/microcode_core.c:132:
+       struct collect_for_cpu *cfc = arg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: arch/x86/kernel/microcode_core.c:134:
+       BUG_ON(cfc->cpu != smp_processor_id());$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#198: FILE: arch/x86/kernel/microcode_core.c:134:
+       BUG_ON(cfc->cpu != smp_processor_id());

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: arch/x86/kernel/microcode_core.c:136:
+       return microcode_ops->collect_cpu_info(cfc->cpu, &cfc->cpu_sig);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: arch/x86/kernel/microcode_core.c:141:
+       return work_on_cpu(cpu, collect_cpu_info_local, cpu_sig);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: arch/x86/kernel/microcode_core.c:146:
+       struct ucode_cpu_info *uci = ucode_cpu_info + cpu;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: arch/x86/kernel/microcode_core.c:148:
+       memset(uci, 0, sizeof(*uci));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: arch/x86/kernel/microcode_core.c:149:
+       if (!collect_cpu_info_on_target(cpu, &uci->cpu_sig))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#213: FILE: arch/x86/kernel/microcode_core.c:149:
+       if (!collect_cpu_info_on_target(cpu, &uci->cpu_sig))
+               uci->valid = 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: arch/x86/kernel/microcode_core.c:150:
+               uci->valid = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: arch/x86/kernel/microcode_core.c:150:
+               uci->valid = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: arch/x86/kernel/microcode_core.c:155:
+       int cpu = (int)arg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: arch/x86/kernel/microcode_core.c:157:
+       BUG_ON(cpu != smp_processor_id());$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#221: FILE: arch/x86/kernel/microcode_core.c:157:
+       BUG_ON(cpu != smp_processor_id());

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: arch/x86/kernel/microcode_core.c:158:
+       microcode_ops->apply_microcode(cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: arch/x86/kernel/microcode_core.c:160:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: arch/x86/kernel/microcode_core.c:165:
+       return work_on_cpu(cpu, apply_microcode_local, (void *)cpu);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#249: FILE: arch/x86/kernel/microcode_core.c:181:
                if (error < 0)
+                       break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#251: FILE: arch/x86/kernel/microcode_core.c:182:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: arch/x86/kernel/microcode_core.c:182:
+                       break;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#252: FILE: arch/x86/kernel/microcode_core.c:183:
                if (!error)
+                       apply_microcode_on_target(cpu);

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: arch/x86/kernel/microcode_core.c:184:
+                       apply_microcode_on_target(cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: arch/x86/kernel/microcode_core.c:184:
+                       apply_microcode_on_target(cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: arch/x86/kernel/microcode_core.c:263:
+       struct ucode_cpu_info *uci = ucode_cpu_info + cpu;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#274: FILE: arch/x86/kernel/microcode_core.c:267:
        if (uci->valid) {
+               err = microcode_ops->request_microcode_fw(cpu,

ERROR:CODE_INDENT: code indent should use tabs where possible
#277: FILE: arch/x86/kernel/microcode_core.c:268:
+               err = microcode_ops->request_microcode_fw(cpu,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: arch/x86/kernel/microcode_core.c:268:
+               err = microcode_ops->request_microcode_fw(cpu,$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#279: FILE: arch/x86/kernel/microcode_core.c:269:
                if (!err)
+                       apply_microcode_on_target(cpu);

ERROR:CODE_INDENT: code indent should use tabs where possible
#281: FILE: arch/x86/kernel/microcode_core.c:270:
+                       apply_microcode_on_target(cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: arch/x86/kernel/microcode_core.c:270:
+                       apply_microcode_on_target(cpu);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#288: FILE: arch/x86/kernel/microcode_core.c:289:
                if (cpu_online(cpu))
+                       err = reload_for_cpu(cpu);

ERROR:CODE_INDENT: code indent should use tabs where possible
#290: FILE: arch/x86/kernel/microcode_core.c:290:
+                       err = reload_for_cpu(cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: arch/x86/kernel/microcode_core.c:290:
+                       err = reload_for_cpu(cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: arch/x86/kernel/microcode_core.c:352:
+       if (collect_cpu_info_on_target(cpu, &nsig)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#332: FILE: arch/x86/kernel/microcode_core.c:352:
+       if (collect_cpu_info_on_target(cpu, &nsig)) {
+               microcode_fini_cpu(cpu);

ERROR:CODE_INDENT: code indent should use tabs where possible
#333: FILE: arch/x86/kernel/microcode_core.c:353:
+               microcode_fini_cpu(cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: arch/x86/kernel/microcode_core.c:353:
+               microcode_fini_cpu(cpu);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#342: FILE: arch/x86/kernel/microcode_core.c:360:
+               microcode_fini_cpu(cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: arch/x86/kernel/microcode_core.c:360:
+               microcode_fini_cpu(cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: arch/x86/kernel/microcode_core.c:372:
+       struct ucode_cpu_info *uci = ucode_cpu_info + cpu;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#362: FILE: arch/x86/kernel/microcode_core.c:379:
        if (uci->valid) {
+               err = microcode_resume_cpu(cpu);

ERROR:CODE_INDENT: code indent should use tabs where possible
#364: FILE: arch/x86/kernel/microcode_core.c:380:
+               err = microcode_resume_cpu(cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: arch/x86/kernel/microcode_core.c:380:
+               err = microcode_resume_cpu(cpu);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#365: FILE: arch/x86/kernel/microcode_core.c:381:
        } else {
+               collect_cpu_info(cpu);

ERROR:CODE_INDENT: code indent should use tabs where possible
#367: FILE: arch/x86/kernel/microcode_core.c:382:
+               collect_cpu_info(cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: arch/x86/kernel/microcode_core.c:382:
+               collect_cpu_info(cpu);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#371: FILE: arch/x86/kernel/microcode_core.c:385:
+                                       cpu,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: arch/x86/kernel/microcode_core.c:385:
+                                       cpu,$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#374: FILE: arch/x86/kernel/microcode_core.c:388:
        if (!err)
+               apply_microcode_on_target(cpu);

ERROR:CODE_INDENT: code indent should use tabs where possible
#385: FILE: arch/x86/kernel/microcode_core.c:389:
+               apply_microcode_on_target(cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: arch/x86/kernel/microcode_core.c:389:
+               apply_microcode_on_target(cpu);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#405: FILE: arch/x86/kernel/microcode_core.c:435:
+        * All non-bootup cpus are still disabled,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#406: FILE: arch/x86/kernel/microcode_core.c:436:
+        * so only CPU 0 will apply ucode here.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#407: FILE: arch/x86/kernel/microcode_core.c:437:
+        *$

ERROR:CODE_INDENT: code indent should use tabs where possible
#408: FILE: arch/x86/kernel/microcode_core.c:438:
+        * Moreover, there can be no concurrent$

ERROR:CODE_INDENT: code indent should use tabs where possible
#409: FILE: arch/x86/kernel/microcode_core.c:439:
+        * updates from any other places at this point.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#410: FILE: arch/x86/kernel/microcode_core.c:440:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: arch/x86/kernel/microcode_core.c:441:
+       WARN_ON(cpu != 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: arch/x86/kernel/microcode_core.c:443:
+       microcode_init_cpu(cpu);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#433: FILE: arch/x86/kernel/microcode_core.c:517:
+        * --dimm. Hmm, we can avoid it if we perhaps first$

ERROR:CODE_INDENT: code indent should use tabs where possible
#434: FILE: arch/x86/kernel/microcode_core.c:518:
+        * try to apply ucode in mc_sysdev_add() and only$

ERROR:CODE_INDENT: code indent should use tabs where possible
#435: FILE: arch/x86/kernel/microcode_core.c:519:
+        * then create a sysfs group.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#436: FILE: arch/x86/kernel/microcode_core.c:520:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#437: FILE: arch/x86/kernel/microcode_core.c:521:
+       mutex_lock(&microcode_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#439: FILE: arch/x86/kernel/microcode_core.c:523:
+       mutex_unlock(&microcode_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: arch/x86/kernel/microcode_core.c:532:
+       error = microcode_dev_init();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: arch/x86/kernel/microcode_core.c:533:
+       if (error)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#450: FILE: arch/x86/kernel/microcode_core.c:533:
+       if (error)
+               return error;

ERROR:CODE_INDENT: code indent should use tabs where possible
#451: FILE: arch/x86/kernel/microcode_core.c:534:
+               return error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#451: FILE: arch/x86/kernel/microcode_core.c:534:
+               return error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: arch/x86/kernel/microcode_core.c:553:
+       mutex_lock(&microcode_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: arch/x86/kernel/microcode_core.c:555:
+       mutex_unlock(&microcode_mutex);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000139100.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 29 errors, 56 warnings, 0 checks, 409 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000139100.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
