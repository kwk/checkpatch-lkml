WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
> > From looking at pm_ops which I was recently working with a lot, it seems

CHECK:SPACING: No space is necessary after a cast
#114: FILE: include/linux/pm.h:110:
+#define PM_SUSPEND_MAX		((__force suspend_state_t) 4)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#254: FILE: kernel/power/main.c:276:
+		*(s-1) = "\n";
 		   ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#275: FILE: include/linux/hibernate.h:1:
+#ifndef __LINUX_HIBERNATE

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#341: FILE: kernel/power/disk.c:47:
+};
+#define PM_DISK_MAX (__PM_DISK_AFTER_LAST-1)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#341: FILE: kernel/power/disk.c:47:
+#define PM_DISK_MAX (__PM_DISK_AFTER_LAST-1)
                                          ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#346: FILE: kernel/power/disk.c:52:
+	BUG_ON(!hibernate_ops->prepare);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#347: FILE: kernel/power/disk.c:53:
+	BUG_ON(!hibernate_ops->enter);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#348: FILE: kernel/power/disk.c:54:
+	BUG_ON(!hibernate_ops->finish);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#354: FILE: kernel/power/disk.c:60:
+
+

CHECK:BRACES: Unbalanced braces around else statement
#579: FILE: kernel/power/disk.c:425:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#805: FILE: drivers/acpi/sleep/main.c:201:
+	int error = acpi_save_state_mem();
+	if (error)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'acpi_state == ACPI_STATE_S3'
#816: FILE: drivers/acpi/sleep/main.c:212:
+	if (ACPI_SUCCESS(status) && (acpi_state == ACPI_STATE_S3))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#820: FILE: drivers/acpi/sleep/main.c:216:
+	printk(KERN_DEBUG "Back to C!\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#841: FILE: drivers/acpi/sleep/main.c:237:
+		printk("Broken toshiba laptop -> kicking interrupts\n");

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#902: FILE: kernel/power/power.h:173:
+extern int hibernate_platform_prepare(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#903: FILE: kernel/power/power.h:174:
+extern void hibernate_platform_finish(void);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000440523.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 9 checks, 759 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000440523.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
