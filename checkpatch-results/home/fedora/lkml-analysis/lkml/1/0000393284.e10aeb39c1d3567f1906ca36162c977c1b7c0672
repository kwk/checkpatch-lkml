CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#37: 
Adrian Bunk, le Fri 10 Aug 2007 17:56:56 +0200, a écrit :
                                                  ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#101: FILE: drivers/char/consolemap.c:689:
+	int c;
+	for (c = 0; c < 0x100; c++)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#103: FILE: drivers/char/consolemap.c:691:
+		if (translations[USER_MAP][c] == uni ||
+		   (translations[USER_MAP][c] == (c | 0xf000) && uni == c))

CHECK:BRACES: Unbalanced braces around else statement
#144: FILE: drivers/char/keyboard.c:408:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#146: FILE: drivers/char/keyboard.c:410:
+		int c = conv_uni_to_8bit(d);
+		if (c != -1)

CHECK:BRACES: Unbalanced braces around else statement
#160: FILE: drivers/char/keyboard.c:425:
+		else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#162: FILE: drivers/char/keyboard.c:427:
+			int c = conv_uni_to_8bit(diacr);
+			if (c != -1)

CHECK:BRACES: Unbalanced braces around else statement
#176: FILE: drivers/char/keyboard.c:638:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#178: FILE: drivers/char/keyboard.c:640:
+		int c = conv_uni_to_8bit(value);
+		if (c != -1)

WARNING:LINE_SPACING: Missing a blank line after declarations
#190: FILE: drivers/char/keyboard.c:660:
+	unsigned int uni;
+	if (kbd->kbdmode == VC_UNICODE)

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#235: FILE: drivers/char/vt_ioctl.c:606:
+		if (copy_to_user(a->kbdiacruc, accent_table, accent_table_size*sizeof(struct kbdiacruc)))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#235: FILE: drivers/char/vt_ioctl.c:606:
+		if (copy_to_user(a->kbdiacruc, accent_table, accent_table_size*sizeof(struct kbdiacruc)))
 		                                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxO)
#249: FILE: drivers/char/vt_ioctl.c:620:
+		if (get_user(ct,&a->kb_cnt))
 		               ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#249: FILE: drivers/char/vt_ioctl.c:620:
+		if (get_user(ct,&a->kb_cnt))
 		                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#275: FILE: drivers/char/vt_ioctl.c:647:
+		if (copy_from_user(accent_table, a->kbdiacruc, ct*sizeof(struct kbdiacruc)))
 		                                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#309: FILE: drivers/s390/char/keyboard.c:86:
+		kmalloc(sizeof(struct kbdiacruc)*MAX_DIACR, GFP_KERNEL);
 		                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#314: FILE: drivers/s390/char/keyboard.c:90:
+	       sizeof(struct kbdiacruc)*MAX_DIACR);
 	                               ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#353: FILE: drivers/s390/char/keyboard.c:495:
+			if (copy_to_user(a->kbdiacr + i, &diacr, sizeof(struct kbdiacr)))
+			return -EFAULT;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#453: FILE: include/linux/consolemap.h:19:
+extern int conv_uni_to_8bit(u32 uni);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:CODE_INDENT: code indent should use tabs where possible
#477: FILE: include/linux/kd.h:129:
+        __u32 diacr, base, result;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#477: FILE: include/linux/kd.h:129:
+        __u32 diacr, base, result;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#479: FILE: include/linux/kd.h:131:
+};
+struct kbdiacrsuc {

ERROR:CODE_INDENT: code indent should use tabs where possible
#480: FILE: include/linux/kd.h:132:
+        unsigned int kb_cnt;    /* number of entries in following array */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#480: FILE: include/linux/kd.h:132:
+        unsigned int kb_cnt;    /* number of entries in following array */$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#483: FILE: include/linux/kd.h:135:
+};
+#define KDGKBDIACRUC    0x4BFA  /* read kernel accent table - UCS */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000393284.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 9 warnings, 12 checks, 359 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000393284.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
