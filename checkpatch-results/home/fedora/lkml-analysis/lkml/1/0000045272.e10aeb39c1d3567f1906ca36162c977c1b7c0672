WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#29: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#34: FILE: fs/logfs/dev_mtd.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#35: FILE: fs/logfs/dev_mtd.c:2:
+ * fs/logfs/dev_mtd.c	- Device access methods for MTD

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#46: FILE: fs/logfs/dev_mtd.c:13:
+#define PAGE_OFS(ofs) ((ofs) & (PAGE_SIZE-1))
                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#55: FILE: fs/logfs/dev_mtd.c:22:
+	BUG_ON(ret == -EINVAL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#77: FILE: fs/logfs/dev_mtd.c:44:
+	BUG_ON((ofs >= mtd->size) || (len > mtd->size - ofs));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#78: FILE: fs/logfs/dev_mtd.c:45:
+	BUG_ON(ofs != (ofs >> super->s_writeshift) << super->s_writeshift);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#79: FILE: fs/logfs/dev_mtd.c:46:
+	BUG_ON(len > PAGE_CACHE_SIZE);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'retlen != len'
#83: FILE: fs/logfs/dev_mtd.c:50:
+	if (ret || (retlen != len))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TYPO_SPELLING: 'excercise' may be misspelled - perhaps 'exercise'?
#95: FILE: fs/logfs/dev_mtd.c:62:
+ * from mtd_erase().  What an excercise in futility!
                               ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#126: FILE: fs/logfs/dev_mtd.c:93:
+	BUG_ON(len % mtd->erasesize);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#160: FILE: fs/logfs/dev_mtd.c:127:
+	err = mtd_read(sb, page->index << PAGE_SHIFT, PAGE_SIZE,
+			page_address(page));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#192: FILE: fs/logfs/dev_mtd.c:159:
+	BUG_ON(*ofs & ~PAGE_MASK);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#213: FILE: fs/logfs/dev_mtd.c:180:
+	BUG_ON(*ofs & ~PAGE_MASK);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#218: FILE: fs/logfs/dev_mtd.c:185:
+static int __mtd_writeseg(struct super_block *sb, u64 ofs, pgoff_t index,
+		size_t nr_pages)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#227: FILE: fs/logfs/dev_mtd.c:194:
+		BUG_ON(!page);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#279: FILE: fs/logfs/dev_mtd.c:246:
+int logfs_get_sb_mtd(struct file_system_type *type, int flags,
+		int mtdnr, struct vfsmount *mnt)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000045272.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 13 warnings, 5 checks, 253 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000045272.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
