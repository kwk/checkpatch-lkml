WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#54: FILE: include/asm-x86/desc.h:1:
+#ifndef _ASM_DESC_H_

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'info' - possible side-effects?
#64: FILE: include/asm-x86/desc.h:11:
+#define LDT_entry_a(info) \
+	((((info)->base_addr & 0x0000ffff) << 16) | ((info)->limit & 0x0ffff))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'info' - possible side-effects?
#67: FILE: include/asm-x86/desc.h:14:
+#define LDT_entry_b(info) \
+	(((info)->base_addr & 0xff000000) | \
+	(((info)->base_addr & 0x00ff0000) >> 16) | \
+	((info)->limit & 0xf0000) | \
+	(((info)->read_exec_only ^ 1) << 9) | \
+	((info)->contents << 10) | \
+	(((info)->seg_not_present ^ 1) << 15) | \
+	((info)->seg_32bit << 22) | \
+	((info)->limit_in_pages << 23) | \
+	((info)->useable << 20) | \
+	0x7000)

WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#76: FILE: include/asm-x86/desc.h:23:
+	((info)->useable << 20) | \
 	         ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'info' - possible side-effects?
#79: FILE: include/asm-x86/desc.h:26:
+#define _LDT_empty(info) (\
+	(info)->base_addr	== 0	&& \
+	(info)->limit		== 0	&& \
+	(info)->contents	== 0	&& \
+	(info)->read_exec_only	== 1	&& \
+	(info)->seg_32bit	== 0	&& \
+	(info)->limit_in_pages	== 0	&& \
+	(info)->seg_not_present	== 1	&& \
+	(info)->useable		== 0	)

WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#87: FILE: include/asm-x86/desc.h:34:
+	(info)->useable		== 0	)
 	        ^^^^^^^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#87: FILE: include/asm-x86/desc.h:34:
+	(info)->useable		== 0	)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'info' - possible side-effects?
#90: FILE: include/asm-x86/desc.h:37:
+#define LDT_empty(info) (_LDT_empty(info) && ((info)->lm == 0))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#187: FILE: include/asm-x86/desc_64.h:21:
+	asm volatile("ltr %w0"::"r" (GDT_ENTRY_TSS*8));
 	                                          ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#258: FILE: include/asm-x86/desc_64.h:63:
+	 * it is only done once at setup time */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#264: FILE: include/asm-x86/desc_64.h:68:
+					  unsigned type, unsigned size)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#264: FILE: include/asm-x86/desc_64.h:68:
+					  unsigned type, unsigned size)

WARNING:TYPO_SPELLING: 'an user' may be misspelled - perhaps 'a user'?
#289: FILE: include/asm-x86/desc_64.h:75:
+ * an user anxious for its definition: set_tssldt_descriptor
    ^^^^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#365: FILE: include/asm-x86/desc_64.h:141:
+	if (likely(entries == 0))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#367: FILE: include/asm-x86/desc_64.h:143:
+	else {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#368: FILE: include/asm-x86/desc_64.h:144:
+		unsigned cpu = smp_processor_id();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#374: FILE: include/asm-x86/desc_64.h:147:
+		set_tssldt_descriptor(&cpu_gdt(cpu)[GDT_ENTRY_LDT],
+					(unsigned long)addr, DESC_LDT,

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#376: FILE: include/asm-x86/desc_64.h:149:
+		__asm__ __volatile__ ("lldt %w0"::"r" (GDT_ENTRY_LDT*8));
 		                                                    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#388: FILE: include/asm-x86/desc_64.h:161:
+#define store_tr(tr) (tr) = native_store_tr()

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#397: FILE: include/asm-x86/desc_64.h:170:
+static inline void _set_gate(void *adr, unsigned type, unsigned long func,

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#398: FILE: include/asm-x86/desc_64.h:171:
+			     unsigned dpl, unsigned ist)
 			                            ^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#398: FILE: include/asm-x86/desc_64.h:171:
+			     unsigned dpl, unsigned ist)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#398: FILE: include/asm-x86/desc_64.h:171:
+			     unsigned dpl, unsigned ist)

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#404: FILE: include/asm-x86/desc_64.h:177:
+	s.ist = ist;
 	  ^^^

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#404: FILE: include/asm-x86/desc_64.h:177:
+	s.ist = ist;
 	        ^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#417: FILE: include/asm-x86/desc_64.h:190:
+	BUG_ON((unsigned)nr > 0xFF);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#417: FILE: include/asm-x86/desc_64.h:190:
+	BUG_ON((unsigned)nr > 0xFF);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: No space is necessary after a cast
#418: FILE: include/asm-x86/desc_64.h:191:
+	_set_gate(&idt_table[nr], GATE_INTERRUPT, (unsigned long) func, 0, 0);

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#423: FILE: include/asm-x86/desc_64.h:194:
+static inline void set_intr_gate_ist(int nr, void *func, unsigned ist)
                                                                   ^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#423: FILE: include/asm-x86/desc_64.h:194:
+static inline void set_intr_gate_ist(int nr, void *func, unsigned ist)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#425: FILE: include/asm-x86/desc_64.h:196:
+	BUG_ON((unsigned)nr > 0xFF);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#425: FILE: include/asm-x86/desc_64.h:196:
+	BUG_ON((unsigned)nr > 0xFF);

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#426: FILE: include/asm-x86/desc_64.h:197:
+	_set_gate(&idt_table[nr], GATE_INTERRUPT, (unsigned long) func, 0, ist);
 	                                                                   ^^^

CHECK:SPACING: No space is necessary after a cast
#426: FILE: include/asm-x86/desc_64.h:197:
+	_set_gate(&idt_table[nr], GATE_INTERRUPT, (unsigned long) func, 0, ist);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#433: FILE: include/asm-x86/desc_64.h:202:
+	BUG_ON((unsigned)nr > 0xFF);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#433: FILE: include/asm-x86/desc_64.h:202:
+	BUG_ON((unsigned)nr > 0xFF);

CHECK:SPACING: No space is necessary after a cast
#434: FILE: include/asm-x86/desc_64.h:203:
+	_set_gate(&idt_table[nr], GATE_INTERRUPT, (unsigned long) func, 3, 0);

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#439: FILE: include/asm-x86/desc_64.h:206:
+static inline void set_system_gate_ist(int nr, void *func, unsigned ist)
                                                                     ^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#439: FILE: include/asm-x86/desc_64.h:206:
+static inline void set_system_gate_ist(int nr, void *func, unsigned ist)

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#441: FILE: include/asm-x86/desc_64.h:208:
+	_set_gate(&idt_table[nr], GATE_INTERRUPT, (unsigned long) func, 3, ist);
 	                                                                   ^^^

CHECK:SPACING: No space is necessary after a cast
#441: FILE: include/asm-x86/desc_64.h:208:
+	_set_gate(&idt_table[nr], GATE_INTERRUPT, (unsigned long) func, 3, ist);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#500: FILE: include/asm-x86/mmu_context_64.h:79:
+#define activate_mm(prev, next) ^I^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'prev' - possible side-effects?
#500: FILE: include/asm-x86/mmu_context_64.h:79:
+#define activate_mm(prev, next) 		\
+do {						\
+	paravirt_activate_mm(prev, next);	\
+	switch_mm((prev), (next), NULL);	\
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'next' - possible side-effects?
#500: FILE: include/asm-x86/mmu_context_64.h:79:
+#define activate_mm(prev, next) 		\
+do {						\
+	paravirt_activate_mm(prev, next);	\
+	switch_mm((prev), (next), NULL);	\
+} while (0)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000359483.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 27 warnings, 15 checks, 429 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000359483.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
