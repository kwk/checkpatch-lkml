WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#117: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#122: FILE: include/asm-x86/traps.h:1:
+#ifndef _ASM_X86_TRAPS_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#148: FILE: include/asm-x86/traps.h:27:
+void do_divide_error(struct pt_regs *, long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long' should also have an identifier name
#148: FILE: include/asm-x86/traps.h:27:
+void do_divide_error(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#149: FILE: include/asm-x86/traps.h:28:
+void do_overflow(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long' should also have an identifier name
#149: FILE: include/asm-x86/traps.h:28:
+void do_overflow(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#150: FILE: include/asm-x86/traps.h:29:
+void do_bounds(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long' should also have an identifier name
#150: FILE: include/asm-x86/traps.h:29:
+void do_bounds(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#151: FILE: include/asm-x86/traps.h:30:
+void do_coprocessor_segment_overrun(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long' should also have an identifier name
#151: FILE: include/asm-x86/traps.h:30:
+void do_coprocessor_segment_overrun(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#152: FILE: include/asm-x86/traps.h:31:
+void do_invalid_TSS(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long' should also have an identifier name
#152: FILE: include/asm-x86/traps.h:31:
+void do_invalid_TSS(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#153: FILE: include/asm-x86/traps.h:32:
+void do_segment_not_present(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long' should also have an identifier name
#153: FILE: include/asm-x86/traps.h:32:
+void do_segment_not_present(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#154: FILE: include/asm-x86/traps.h:33:
+void do_stack_segment(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long' should also have an identifier name
#154: FILE: include/asm-x86/traps.h:33:
+void do_stack_segment(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#155: FILE: include/asm-x86/traps.h:34:
+void do_alignment_check(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long' should also have an identifier name
#155: FILE: include/asm-x86/traps.h:34:
+void do_alignment_check(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#156: FILE: include/asm-x86/traps.h:35:
+void do_invalid_op(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long' should also have an identifier name
#156: FILE: include/asm-x86/traps.h:35:
+void do_invalid_op(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#157: FILE: include/asm-x86/traps.h:36:
+void do_general_protection(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long' should also have an identifier name
#157: FILE: include/asm-x86/traps.h:36:
+void do_general_protection(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#158: FILE: include/asm-x86/traps.h:37:
+void do_nmi(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long' should also have an identifier name
#158: FILE: include/asm-x86/traps.h:37:
+void do_nmi(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#165: FILE: include/asm-x86/traps.h:44:
+void do_iret_error(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long' should also have an identifier name
#165: FILE: include/asm-x86/traps.h:44:
+void do_iret_error(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#166: FILE: include/asm-x86/traps.h:45:
+void do_int3(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long' should also have an identifier name
#166: FILE: include/asm-x86/traps.h:45:
+void do_int3(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#167: FILE: include/asm-x86/traps.h:46:
+void do_debug(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long' should also have an identifier name
#167: FILE: include/asm-x86/traps.h:46:
+void do_debug(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#168: FILE: include/asm-x86/traps.h:47:
+void math_error(void __user *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#169: FILE: include/asm-x86/traps.h:48:
+void do_coprocessor_error(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long' should also have an identifier name
#169: FILE: include/asm-x86/traps.h:48:
+void do_coprocessor_error(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#170: FILE: include/asm-x86/traps.h:49:
+void do_simd_coprocessor_error(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long' should also have an identifier name
#170: FILE: include/asm-x86/traps.h:49:
+void do_simd_coprocessor_error(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#171: FILE: include/asm-x86/traps.h:50:
+void do_spurious_interrupt_bug(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long' should also have an identifier name
#171: FILE: include/asm-x86/traps.h:50:
+void do_spurious_interrupt_bug(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#172: FILE: include/asm-x86/traps.h:51:
+unsigned long patch_espfix_desc(unsigned long, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#172: FILE: include/asm-x86/traps.h:51:
+unsigned long patch_espfix_desc(unsigned long, unsigned long);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000254415.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 39 warnings, 0 checks, 130 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000254415.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
