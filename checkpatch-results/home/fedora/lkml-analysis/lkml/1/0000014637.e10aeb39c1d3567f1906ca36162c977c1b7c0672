WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#269: FILE: drivers/net/tulip/dmfe.c:96:
 static int __devinitdata printed_version;

WARNING:HOTPLUG_SECTION: Using __devinitconst is unnecessary
#270: FILE: drivers/net/tulip/dmfe.c:97:
 static const char version[] __devinitconst =

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'db->chip_id == PCI_DM9132_ID'
#533: FILE: drivers/net/tulip/dmfe.c:146:
+	if (!chkmode || (db->chip_id == PCI_DM9132_ID) ||
+		(db->chip_revision >= 0x30)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'db->chip_revision >= 0x30'
#533: FILE: drivers/net/tulip/dmfe.c:146:
+	if (!chkmode || (db->chip_id == PCI_DM9132_ID) ||
+		(db->chip_revision >= 0x30)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#534: FILE: drivers/net/tulip/dmfe.c:147:
+	if (!chkmode || (db->chip_id == PCI_DM9132_ID) ||
+		(db->chip_revision >= 0x30)) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#557: FILE: drivers/net/tulip/dmfe.c:175:
+/*
+ *	Stop the interface.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#588: FILE: drivers/net/tulip/dmfe.c:206:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dmfe_hardware_init', this function's name, in a string
#604: FILE: drivers/net/tulip/dmfe.c:220:
+	DMFE_DBUG(0, "dmfe_hardware_init()", 0);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!db->tx_queue_cnt'
#661: FILE: drivers/net/tulip/dmfe.c:322:
+	if ((!db->tx_queue_cnt) && (db->tx_packet_cnt < TX_MAX_SEND_CNT)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'db->tx_packet_cnt < TX_MAX_SEND_CNT'
#661: FILE: drivers/net/tulip/dmfe.c:322:
+	if ((!db->tx_queue_cnt) && (db->tx_packet_cnt < TX_MAX_SEND_CNT)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#790: FILE: drivers/net/tulip/dmfe.c:433:
+static void dmfe_free_tx_pkt(struct net_device *dev,
+					struct dmfe_board_info *db)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#800: FILE: drivers/net/tulip/dmfe.c:441:
+					txptr = txptr->next_tx_desc) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'db->tx_packet_cnt < TX_MAX_SEND_CNT'
#874: FILE: drivers/net/tulip/dmfe.c:488:
+	if ((db->tx_packet_cnt < TX_MAX_SEND_CNT) && db->tx_queue_cnt) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#921: FILE: drivers/net/tulip/dmfe.c:517:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#932: FILE: drivers/net/tulip/dmfe.c:527:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#995: FILE: drivers/net/tulip/dmfe.c:539:
 
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1018: FILE: drivers/net/tulip/dmfe.c:560:
+		if (db->dm910x_chk_mode & 1) {
+

CHECK:SPACING: No space is necessary after a cast
#1021: FILE: drivers/net/tulip/dmfe.c:563:
+				!= (*(u32 *) (skb->data+rxlen))) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1021: FILE: drivers/net/tulip/dmfe.c:563:
+				!= (*(u32 *) (skb->data+rxlen))) {
 				                       ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1036: FILE: drivers/net/tulip/dmfe.c:578:
+
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#1037: FILE: drivers/net/tulip/dmfe.c:579:
+		if (rxlen < RX_COPY_SIZE && newskb) {
[...]
+		} else
[...]

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1038: FILE: drivers/net/tulip/dmfe.c:580:
+		if (rxlen < RX_COPY_SIZE && newskb) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1043: FILE: drivers/net/tulip/dmfe.c:585:
+			skb_copy_from_linear_data(rxptr->rx_skb_ptr,
+				  skb_put(skb, rxlen),

CHECK:BRACES: Unbalanced braces around else statement
#1046: FILE: drivers/net/tulip/dmfe.c:588:
+		} else

CHECK:SPACING: No space is necessary after a cast
#1142: FILE: drivers/net/tulip/dmfe.c:644:
+	struct net_device *dev = (struct net_device *) data;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'db->chip_id == PCI_DM9102_ID'
#1154: FILE: drivers/net/tulip/dmfe.c:656:
+		if (db->chip_type && (db->chip_id == PCI_DM9102_ID)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->stats.rx_packets > MAX_CHECK_PACKET'
#1174: FILE: drivers/net/tulip/dmfe.c:671:
+	if ((db->dm910x_chk_mode & 0x1) &&
+		(dev->stats.rx_packets > MAX_CHECK_PACKET))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1175: FILE: drivers/net/tulip/dmfe.c:672:
+	if ((db->dm910x_chk_mode & 0x1) &&
+		(dev->stats.rx_packets > MAX_CHECK_PACKET))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'db->interval_rx_cnt == 0'
#1181: FILE: drivers/net/tulip/dmfe.c:677:
+	if ((db->interval_rx_cnt == 0) && (tmp_cr8)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1191: FILE: drivers/net/tulip/dmfe.c:685:
+	if (db->tx_packet_cnt &&
+	     time_after(jiffies, dev->trans_start + DMFE_TX_KICK)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'db->chip_id == PCI_DM9102_ID'
#1205: FILE: drivers/net/tulip/dmfe.c:714:
+	if (((db->chip_id == PCI_DM9102_ID) &&
 		(db->chip_revision == 0x30)) ||
 		((db->chip_id == PCI_DM9132_ID) &&
+		(db->chip_revision == 0x10))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'db->chip_revision == 0x30'
#1205: FILE: drivers/net/tulip/dmfe.c:714:
+	if (((db->chip_id == PCI_DM9102_ID) &&
 		(db->chip_revision == 0x30)) ||
 		((db->chip_id == PCI_DM9132_ID) &&
+		(db->chip_revision == 0x10))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'db->chip_id == PCI_DM9132_ID'
#1205: FILE: drivers/net/tulip/dmfe.c:714:
+	if (((db->chip_id == PCI_DM9102_ID) &&
 		(db->chip_revision == 0x30)) ||
 		((db->chip_id == PCI_DM9132_ID) &&
+		(db->chip_revision == 0x10))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'db->chip_revision == 0x10'
#1205: FILE: drivers/net/tulip/dmfe.c:714:
+	if (((db->chip_id == PCI_DM9102_ID) &&
 		(db->chip_revision == 0x30)) ||
 		((db->chip_id == PCI_DM9132_ID) &&
+		(db->chip_revision == 0x10))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1206: FILE: drivers/net/tulip/dmfe.c:715:
+	if (((db->chip_id == PCI_DM9102_ID) &&
 		(db->chip_revision == 0x30)) ||

CHECK:BRACES: Unbalanced braces around else statement
#1217: FILE: drivers/net/tulip/dmfe.c:723:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1330: FILE: drivers/net/tulip/dmfe.c:841:
+		rxptr->rdes2 = cpu_to_le32(pci_map_single(db->pdev,
+			    skb->data, RX_ALLOC_SIZE, PCI_DMA_FROMDEVICE));

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1386: FILE: drivers/net/tulip/dmfe.c:922:
+/*
+ *	Allocate rx buffer,

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1398: FILE: drivers/net/tulip/dmfe.c:934:
+	while (db->rx_avail_cnt < RX_DESC_CNT) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1406: FILE: drivers/net/tulip/dmfe.c:942:
+		rxptr->rdes2 = cpu_to_le32(pci_map_single(db->pdev, skb->data,
+				    RX_ALLOC_SIZE, PCI_DMA_FROMDEVICE));

WARNING:MEMORY_BARRIER: memory barrier without comment
#1407: FILE: drivers/net/tulip/dmfe.c:943:
+		wmb();

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1417: FILE: drivers/net/tulip/dmfe.c:953:
+
+

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1419: FILE: drivers/net/tulip/dmfe.c:955:
+/*
+ *	free all allocated rx buffer

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dmfe_free_rxbuffer', this function's name, in a string
#1424: FILE: drivers/net/tulip/dmfe.c:960:
+	DMFE_DBUG(0, "dmfe_free_rxbuffer()", 0);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dmfe_send_filter_frame', this function's name, in a string
#1486: FILE: drivers/net/tulip/dmfe.c:1046:
+	DMFE_DBUG(0, "dmfe_send_filter_frame()", 0);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1610: FILE: drivers/net/tulip/dmfe.c:1111:
 
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1612: FILE: drivers/net/tulip/dmfe.c:1113:
+	if ((phy_mode & 0x24) == 0x24) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1673: FILE: drivers/net/tulip/dmfe.c:1182:
 	} else {
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'db->chip_id == PCI_DM9102_ID'
#1714: FILE: drivers/net/tulip/dmfe.c:1211:
+	if (db->chip_type && (db->chip_id == PCI_DM9102_ID))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'db->chip_id == PCI_DM9102_ID'
#1762: FILE: drivers/net/tulip/dmfe.c:1268:
+			if (db->chip_type && (db->chip_id == PCI_DM9102_ID))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1826: FILE: drivers/net/tulip/dmfe.c:1454:
+
+

CHECK:SPACING: No space is necessary after a cast
#1844: FILE: drivers/net/tulip/dmfe.c:1470:
+	if (((int) srom[18] & 0xff) == SROM_V41_CODE) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1856: FILE: drivers/net/tulip/dmfe.c:1477:
 		for (tmp_reg = 1; tmp_reg < 0x10; tmp_reg <<= 1) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1884: FILE: drivers/net/tulip/dmfe.c:1499:
+		switch (dmfe_mode) {
+

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1965: FILE: drivers/net/tulip/dmfe.c:1571:
+	dmfe_update_cr6(db->cr6_data|0x40000, db->ioaddr);
 	                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1973: FILE: drivers/net/tulip/dmfe.c:1577:
+		if (phy_read(db->ioaddr, db->phy_addr, 31,
+						db->chip_id) == 0x4404) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2037: FILE: drivers/net/tulip/dmfe.c:1661:
+	switch (phy_reg) {
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#2054: FILE: drivers/net/tulip/dmfe.c:1677:
+	if (phy_reg != (db->HPNA_command & 0x0f00)) {
[...]
+		db->HPNA_timer = 8;
[...]

WARNING:TYPO_SPELLING: 'interace' may be misspelled - perhaps 'interface'?
#2066: FILE: drivers/net/tulip/dmfe.c:1687:
+ * 	Ethtool interace
    	        ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2066: FILE: drivers/net/tulip/dmfe.c:1687:
+ * ^IEthtool interace$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2066: FILE: drivers/net/tulip/dmfe.c:1687:
+/*
+ * 	Ethtool interace

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2076: FILE: drivers/net/tulip/dmfe.c:1691:
+static void dmfe_ethtool_get_drvinfo(struct net_device *dev,
+			       struct ethtool_drvinfo *info)

WARNING:RETURN_VOID: void function return statements are not generally useful
#2110: FILE: drivers/net/tulip/dmfe.c:1725:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2112: FILE: drivers/net/tulip/dmfe.c:1727:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2120: FILE: drivers/net/tulip/dmfe.c:1735:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2122: FILE: drivers/net/tulip/dmfe.c:1737:
+^I.ndo_open ^I^I= dmfe_open,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2135: FILE: drivers/net/tulip/dmfe.c:1749:
+
+

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2136: FILE: drivers/net/tulip/dmfe.c:1750:
+static int __devinit dmfe_probe(struct pci_dev *pdev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2137: FILE: drivers/net/tulip/dmfe.c:1751:
+static int __devinit dmfe_probe(struct pci_dev *pdev,
+				    const struct pci_device_id *ent)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dmfe_probe', this function's name, in a string
#2144: FILE: drivers/net/tulip/dmfe.c:1758:
+	DMFE_DBUG(0, "dmfe_probe()", 0);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2147: FILE: drivers/net/tulip/dmfe.c:1761:
+		printk(version);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2150: FILE: drivers/net/tulip/dmfe.c:1764:
+	/*
+	 *	SPARC on-board DM910x chips should be handled by the main

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2159: FILE: drivers/net/tulip/dmfe.c:1773:
+			printk(KERN_INFO DRV_NAME

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#2168: FILE: drivers/net/tulip/dmfe.c:1782:
+	if (dev == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2173: FILE: drivers/net/tulip/dmfe.c:1787:
+		printk(KERN_WARNING DRV_NAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2185: FILE: drivers/net/tulip/dmfe.c:1799:
+		printk(KERN_ERR DRV_NAME ": I/O base is zero\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2191: FILE: drivers/net/tulip/dmfe.c:1805:
+		printk(KERN_ERR DRV_NAME ": Allocated I/O size too small\n");

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2196: FILE: drivers/net/tulip/dmfe.c:1810:
+#if 0	/* pci_{enable_device,set_master} sets minimum latency for us now */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2200: FILE: drivers/net/tulip/dmfe.c:1814:
+	/* FIXME: setting values > 32 breaks some SiS 559x stuff.
+	   Need a PCI quirk.. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2200: FILE: drivers/net/tulip/dmfe.c:1814:
+	   Need a PCI quirk.. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2206: FILE: drivers/net/tulip/dmfe.c:1820:
+		printk(KERN_ERR DRV_NAME ": Failed to request PCI regions\n");

CHECK:SPACING: No space is necessary after a cast
#2225: FILE: drivers/net/tulip/dmfe.c:1839:
+	db->first_tx_desc = (struct tx_desc *) db->desc_pool_ptr;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pci_pmr == 0x10000'
#2247: FILE: drivers/net/tulip/dmfe.c:1861:
+	if ((pci_pmr == 0x10000) && (db->chip_revision == 0x31))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'db->chip_revision == 0x31'
#2247: FILE: drivers/net/tulip/dmfe.c:1861:
+	if ((pci_pmr == 0x10000) && (db->chip_revision == 0x31))

CHECK:SPACING: No space is necessary after a cast
#2254: FILE: drivers/net/tulip/dmfe.c:1868:
+		((__le16 *) db->srom)[i] =

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2265: FILE: drivers/net/tulip/dmfe.c:1879:
+	printk(KERN_INFO "%s: Davicom DM%04lx at pci%s, %pM, irq %d.\n",

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#2293: FILE: drivers/net/tulip/dmfe.c:1907:
+static void __devexit dmfe_remove(struct pci_dev *pdev)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2301: FILE: drivers/net/tulip/dmfe.c:1915:
+	if (dev) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2308: FILE: drivers/net/tulip/dmfe.c:1922:
+		pci_free_consistent(db->pdev, TX_BUF_ALLOC * TX_DESC_CNT + 4,
+					db->buf_pool_ptr, db->buf_pool_dma_ptr);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2361: FILE: drivers/net/tulip/dmfe.c:2002:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2371: FILE: drivers/net/tulip/dmfe.c:2012:
+
+

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2410: FILE: drivers/net/tulip/dmfe.c:2026:
+/*
+ *	Search DM910X board ,allocate space and register it

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2452: FILE: drivers/net/tulip/dmfe.c:2082:
+
+

WARNING:SPLIT_STRING: quoted string split across lines
#2464: FILE: drivers/net/tulip/dmfe.c:2094:
+MODULE_PARM_DESC(mode, "Davicom DM9xxx: "
+		"Bit 0: 10/100Mbps, bit 2: duplex, bit 8: HomePNA");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#2467: FILE: drivers/net/tulip/dmfe.c:2097:
+MODULE_PARM_DESC(SF_mode, "Davicom DM9xxx special function "
+		"(bit 0: VLAN, bit 1 Flow Control, bit 2: TX pause packet)");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2469: FILE: drivers/net/tulip/dmfe.c:2099:
+
+

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#2475: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2480: FILE: drivers/net/tulip/dmfe.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2481: FILE: drivers/net/tulip/dmfe.h:2:
+/*
+    A Davicom DM9102/DM9102A/DM9102A+DM9801/DM9102A+DM9802 NIC fast

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2578: FILE: drivers/net/tulip/dmfe.h:99:
+
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2594: FILE: drivers/net/tulip/dmfe.h:115:
+#define DMFE_TX_TIMEOUT ((3*HZ)/2)	/* tx packet time-out time 1.5 s" */
                            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2594: FILE: drivers/net/tulip/dmfe.h:115:
+#define DMFE_TX_TIMEOUT ((3*HZ)/2)	/* tx packet time-out time 1.5 s" */
                                ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2595: FILE: drivers/net/tulip/dmfe.h:116:
+#define DMFE_TX_KICK ^I(HZ/2)^I/* tx packet Kick-out time 0.5 s" */$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2595: FILE: drivers/net/tulip/dmfe.h:116:
+#define DMFE_TX_KICK 	(HZ/2)	/* tx packet Kick-out time 0.5 s" */
                      	   ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2600: FILE: drivers/net/tulip/dmfe.h:121:
+			printk(KERN_ERR DRV_NAME ": %s %lx\n",\

CHECK:SPACING: No space is necessary after a cast
#2601: FILE: drivers/net/tulip/dmfe.h:122:
+				(msg), (long) (value)); \

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'mode' - possible side-effects?
#2604: FILE: drivers/net/tulip/dmfe.h:125:
+#define SHOW_MEDIA_TYPE(mode) \
+	printk(KERN_INFO DRV_NAME " : Change Speed to %sMhz %s duplex\n" , \
+		(mode & 1) ? "100" : "10", (mode & 4) ? "full" : "half");

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'mode' may be better as '(mode)' to avoid precedence issues
#2604: FILE: drivers/net/tulip/dmfe.h:125:
+#define SHOW_MEDIA_TYPE(mode) \
+	printk(KERN_INFO DRV_NAME " : Change Speed to %sMhz %s duplex\n" , \
+		(mode & 1) ? "100" : "10", (mode & 4) ? "full" : "half");

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2604: FILE: drivers/net/tulip/dmfe.h:125:
+#define SHOW_MEDIA_TYPE(mode) \
+	printk(KERN_INFO DRV_NAME " : Change Speed to %sMhz %s duplex\n" , \
+		(mode & 1) ? "100" : "10", (mode & 4) ? "full" : "half");

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2605: FILE: drivers/net/tulip/dmfe.h:126:
+	printk(KERN_INFO DRV_NAME " : Change Speed to %sMhz %s duplex\n" , \

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#2605: FILE: drivers/net/tulip/dmfe.h:126:
+	printk(KERN_INFO DRV_NAME " : Change Speed to %sMhz %s duplex\n" , \
 	                                                                 ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2608: FILE: drivers/net/tulip/dmfe.h:129:
+
+

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'data' - possible side-effects?
#2624: FILE: drivers/net/tulip/dmfe.h:145:
+#define SROM_CLK_WRITE(data, ioaddr) \
+	do { \
+		outl(data|CR9_SROM_READ|CR9_SRCS , ioaddr); \
+		udelay(5); \
+		outl(data|CR9_SROM_READ|CR9_SRCS|CR9_SRCLK , ioaddr); \
+		udelay(5); \
+		outl(data|CR9_SROM_READ|CR9_SRCS , ioaddr); \
+		udelay(5); \
+	} while (0);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'data' may be better as '(data)' to avoid precedence issues
#2624: FILE: drivers/net/tulip/dmfe.h:145:
+#define SROM_CLK_WRITE(data, ioaddr) \
+	do { \
+		outl(data|CR9_SROM_READ|CR9_SRCS , ioaddr); \
+		udelay(5); \
+		outl(data|CR9_SROM_READ|CR9_SRCS|CR9_SRCLK , ioaddr); \
+		udelay(5); \
+		outl(data|CR9_SROM_READ|CR9_SRCS , ioaddr); \
+		udelay(5); \
+	} while (0);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ioaddr' - possible side-effects?
#2624: FILE: drivers/net/tulip/dmfe.h:145:
+#define SROM_CLK_WRITE(data, ioaddr) \
+	do { \
+		outl(data|CR9_SROM_READ|CR9_SRCS , ioaddr); \
+		udelay(5); \
+		outl(data|CR9_SROM_READ|CR9_SRCS|CR9_SRCLK , ioaddr); \
+		udelay(5); \
+		outl(data|CR9_SROM_READ|CR9_SRCS , ioaddr); \
+		udelay(5); \
+	} while (0);

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#2624: FILE: drivers/net/tulip/dmfe.h:145:
+#define SROM_CLK_WRITE(data, ioaddr) \
+	do { \
+		outl(data|CR9_SROM_READ|CR9_SRCS , ioaddr); \
+		udelay(5); \
+		outl(data|CR9_SROM_READ|CR9_SRCS|CR9_SRCLK , ioaddr); \
+		udelay(5); \
+		outl(data|CR9_SROM_READ|CR9_SRCS , ioaddr); \
+		udelay(5); \
+	} while (0);

do {} while(0) macros should not have a trailing semicolon.

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2626: FILE: drivers/net/tulip/dmfe.h:147:
+		outl(data|CR9_SROM_READ|CR9_SRCS , ioaddr); \
 		         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2626: FILE: drivers/net/tulip/dmfe.h:147:
+		outl(data|CR9_SROM_READ|CR9_SRCS , ioaddr); \
 		                       ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#2626: FILE: drivers/net/tulip/dmfe.h:147:
+		outl(data|CR9_SROM_READ|CR9_SRCS , ioaddr); \
 		                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2628: FILE: drivers/net/tulip/dmfe.h:149:
+		outl(data|CR9_SROM_READ|CR9_SRCS|CR9_SRCLK , ioaddr); \
 		         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2628: FILE: drivers/net/tulip/dmfe.h:149:
+		outl(data|CR9_SROM_READ|CR9_SRCS|CR9_SRCLK , ioaddr); \
 		                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2628: FILE: drivers/net/tulip/dmfe.h:149:
+		outl(data|CR9_SROM_READ|CR9_SRCS|CR9_SRCLK , ioaddr); \
 		                                ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#2628: FILE: drivers/net/tulip/dmfe.h:149:
+		outl(data|CR9_SROM_READ|CR9_SRCS|CR9_SRCLK , ioaddr); \
 		                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2630: FILE: drivers/net/tulip/dmfe.h:151:
+		outl(data|CR9_SROM_READ|CR9_SRCS , ioaddr); \
 		         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2630: FILE: drivers/net/tulip/dmfe.h:151:
+		outl(data|CR9_SROM_READ|CR9_SRCS , ioaddr); \
 		                       ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#2630: FILE: drivers/net/tulip/dmfe.h:151:
+		outl(data|CR9_SROM_READ|CR9_SRCS , ioaddr); \
 		                                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2635: FILE: drivers/net/tulip/dmfe.h:156:
+ ((((pci_id) == PCI_DM9132_ID) || ((dev_rev) >= 0x30)) ? \$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pci_dev' - possible side-effects?
#2638: FILE: drivers/net/tulip/dmfe.h:159:
+#define CHK_IO_SIZE(pci_dev) \
+	(__CHK_IO_SIZE(((pci_dev)->device << 16) | (pci_dev)->vendor, \
+	(pci_dev)->revision))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2642: FILE: drivers/net/tulip/dmfe.h:163:
+
+

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(32) over __attribute__((aligned(32)))
#2648: FILE: drivers/net/tulip/dmfe.h:169:
+} __attribute__((aligned(32)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(32) over __attribute__((aligned(32)))
#2654: FILE: drivers/net/tulip/dmfe.h:175:
+} __attribute__((aligned(32)));

CHECK:CAMELCASE: Avoid CamelCase: <reset_TXtimeout>
#2719: FILE: drivers/net/tulip/dmfe.h:240:
+	unsigned long reset_TXtimeout;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#2743: FILE: drivers/net/tulip/dmfe.h:264:
+static u16 dmfe_read_srom_word(long , int);
                                     ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#2744: FILE: drivers/net/tulip/dmfe.h:265:
+static irqreturn_t dmfe_interrupt(int , void *);
                                       ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#2749: FILE: drivers/net/tulip/dmfe.h:270:
+static void dmfe_send_filter_frame(struct net_device* , int);
                                                       ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#2750: FILE: drivers/net/tulip/dmfe.h:271:
+static void dm9132_id_table(struct net_device * , int);
                                                 ^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2771: FILE: drivers/net/tulip/dmfe.h:292:
+/*
+ *	Calculate the CRC valude of the Rx packet

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2772: FILE: drivers/net/tulip/dmfe.h:293:
+ *^Iflag = ^I1 : return the reverse CRC (for the received packet CRC)$

CHECK:CAMELCASE: Avoid CamelCase: <Data>
#2776: FILE: drivers/net/tulip/dmfe.h:297:
+static inline u32 cal_CRC(unsigned char *Data, unsigned int Len, u8 flag)

CHECK:CAMELCASE: Avoid CamelCase: <Len>
#2776: FILE: drivers/net/tulip/dmfe.h:297:
+static inline u32 cal_CRC(unsigned char *Data, unsigned int Len, u8 flag)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000014637.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 44 warnings, 88 checks, 2671 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000014637.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
