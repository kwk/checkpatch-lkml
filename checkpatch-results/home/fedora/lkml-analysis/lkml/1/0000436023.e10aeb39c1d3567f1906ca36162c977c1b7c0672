WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#130: FILE: drivers/scsi/iscsi_tcp.c:1926:
+	BUG_ON(!sk_has_vmio(sk) && cls_session->swapper);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#147: FILE: drivers/scsi/iscsi_tcp.c:2193:
+	struct Scsi_Host *shost = sdev->host;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LINE_SPACING: Missing a blank line after declarations
#158: FILE: drivers/scsi/iscsi_tcp.c:2204:
+		struct iscsi_tcp_conn *tcp_conn = session->leadconn->dd_data;
+		if (enable)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#207: FILE: drivers/scsi/scsi_transport_iscsi.c:506:
+	struct sock *sk = netlink_lookup(NETLINK_ISCSI, pid);
+	if (sk) {

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#240: FILE: drivers/scsi/scsi_transport_iscsi.c:539:
+EXPORT_SYMBOL_GPL(iscsi_swapdev);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#308: FILE: drivers/scsi/scsi_transport_iscsi.c:731:
+#if 0

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#336: FILE: drivers/scsi/scsi_transport_iscsi.c:1028:
+			struct sock * sk = netlink_lookup(NETLINK_ISCSI, pid);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#337: FILE: drivers/scsi/scsi_transport_iscsi.c:1029:
+			struct sock * sk = netlink_lookup(NETLINK_ISCSI, pid);
+			BUG_ON(!sk);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#337: FILE: drivers/scsi/scsi_transport_iscsi.c:1029:
+			BUG_ON(!sk);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#365: FILE: include/scsi/scsi_transport_iscsi.h:140:
+extern void iscsi_conn_error(struct iscsi_cls_conn *conn, enum iscsi_err error,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#396: FILE: include/scsi/scsi_transport_iscsi.h:226:
+extern int iscsi_swapdev(struct iscsi_transport *tt, struct iscsi_cls_session *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct iscsi_cls_session *' should also have an identifier name
#396: FILE: include/scsi/scsi_transport_iscsi.h:226:
+extern int iscsi_swapdev(struct iscsi_transport *tt, struct iscsi_cls_session *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#424: FILE: drivers/scsi/libiscsi.c:429:
+			if (iscsi_recv_pdu(conn->cls_conn, hdr, data, datalen,
+						gfp_mask))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#434: FILE: drivers/scsi/libiscsi.c:452:
+			if (iscsi_recv_pdu(conn->cls_conn, hdr, data, datalen,
+						gfp_mask))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#444: FILE: drivers/scsi/libiscsi.c:480:
+			if (iscsi_recv_pdu(conn->cls_conn, hdr, NULL, 0,
+						gfp_mask))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#454: FILE: drivers/scsi/libiscsi.c:489:
+			if (iscsi_recv_pdu(conn->cls_conn, hdr, data, datalen,
+						gfp_mask))

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#511: FILE: drivers/scsi/Kconfig:315:
+config ISCSI_TCP_SWAP
+	bool "Provide swap over iSCSI over TCP/IP"
+	default n
+	depends on ISCSI_TCP
+	select ISCSI_SWAP
+	help
+	  This option enables swapon to savely work with iSCSI over TCP/IP
+	  devices.
+
+	  If unsure, say N.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:TYPO_SPELLING: 'savely' may be misspelled - perhaps 'safely'?
#517: FILE: drivers/scsi/Kconfig:321:
+	  This option enables swapon to savely work with iSCSI over TCP/IP
 	                                ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000436023.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 10 warnings, 7 checks, 408 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000436023.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
