ERROR:OPEN_BRACE: that open brace { should be on the previous line
#132: FILE: kernel/trace/trace_branch.c:195:
+static struct tracer branch_trace __read_mostly =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#147: FILE: kernel/trace/trace_branch.c:210:
+		printk(KERN_WARNING "Warning: could not register "

WARNING:SPLIT_STRING: quoted string split across lines
#148: FILE: kernel/trace/trace_branch.c:211:
+		printk(KERN_WARNING "Warning: could not register "
+				    "branch events\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#177: FILE: kernel/trace/trace_branch.c:347:
+		printk(KERN_WARNING "Warning: could not register "

WARNING:SPLIT_STRING: quoted string split across lines
#178: FILE: kernel/trace/trace_branch.c:348:
+		printk(KERN_WARNING "Warning: could not register "
+				    "annotated branches stats\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#248: FILE: kernel/trace/trace_branch.c:403:
+		printk(KERN_WARNING "Warning: could not register "

WARNING:SPLIT_STRING: quoted string split across lines
#249: FILE: kernel/trace/trace_branch.c:404:
+		printk(KERN_WARNING "Warning: could not register "
+				    "all branches stats\n");

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#278: FILE: kernel/trace/trace_stat.c:20:
+^Istruct list_head ^Ilist;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#279: FILE: kernel/trace/trace_stat.c:21:
+^Ivoid ^I^I^I*stat;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#288: FILE: kernel/trace/trace_stat.c:27:
+^Istruct tracer_stat ^I*ts;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#289: FILE: kernel/trace/trace_stat.c:28:
+^Istruct list_head ^Istat_list;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#290: FILE: kernel/trace/trace_stat.c:29:
+^Istruct mutex ^I^Istat_mutex;$

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#290: FILE: kernel/trace/trace_stat.c:29:
+	struct mutex 		stat_mutex;

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*session)...) over kmalloc(sizeof(struct tracer_stat_session)...)
#369: FILE: kernel/trace/trace_stat.c:82:
+	session = kmalloc(sizeof(struct tracer_stat_session), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:LINE_SPACING: Please don't use multiple blank lines
#423: FILE: kernel/trace/trace_stat.c:121:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#511: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#516: FILE: kernel/trace/trace_stat.h:1:
+#ifndef __TRACE_STAT_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#543: FILE: kernel/trace/trace_stat.h:28:
+extern int register_stat_tracer(struct tracer_stat *trace);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#544: FILE: kernel/trace/trace_stat.h:29:
+extern void unregister_stat_tracer(struct tracer_stat *trace);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000183148.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 13 warnings, 5 checks, 463 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000183148.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
