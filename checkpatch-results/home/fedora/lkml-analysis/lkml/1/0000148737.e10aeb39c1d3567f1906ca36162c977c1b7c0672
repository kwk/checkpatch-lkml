WARNING:TYPO_SPELLING: 'architecure' may be misspelled - perhaps 'architecture'?
#16: 
Subject: Re: [PATCH 7/13] score - New architecure port to SunplusCT S+CORE
                                      ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'lastest' may be misspelled - perhaps 'latest'?
#29: 
linux/score lastest patch place at 
            ^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
http://www.sunplusct.com/images/linux-score-patch/linux-score-20090324.patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#40: FILE: arch/score/include/asm/unistd.h:1:
+#ifndef _ASM_UNISTD_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:CAMELCASE: Avoid CamelCase: <__NR_Linux>
#43: FILE: arch/score/include/asm/unistd.h:4:
+#define __NR_Linux                     0

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_WHITESPACE: trailing whitespace
#181: FILE: arch/score/include/asm/unistd.h:142:
+#define __NR_afs_syscall               (__NR_Linux + 137) /* Syscall for $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#182: FILE: arch/score/include/asm/unistd.h:142:
Andrew File System */

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#183: FILE: arch/score/include/asm/unistd.h:143:
+#define __NR_afs_syscall               (__NR_Linux + 137) /* Syscall for 
+#define __NR_setfsuid                  (__NR_Linux + 138)

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:CAMELCASE: Avoid CamelCase: <__NR_Linux_syscalls>
#376: FILE: arch/score/include/asm/unistd.h:336:
+#define __NR_Linux_syscalls            329

ERROR:SPACING: space required after that ',' (ctx:VxV)
#380: FILE: arch/score/include/asm/unistd.h:340:
+#define _syscall0(type,name)                           \
                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: arch/score/include/asm/unistd.h:343:
+       register unsigned long __v0;                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: arch/score/include/asm/unistd.h:344:
+       register unsigned long __a3;                    \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#385: FILE: arch/score/include/asm/unistd.h:345:
+                                                       \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: arch/score/include/asm/unistd.h:345:
+                                                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: arch/score/include/asm/unistd.h:346:
+       __asm__ volatile (                              \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: arch/score/include/asm/unistd.h:347:
+       "ldi\tr27, %2\n\t"                              \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: arch/score/include/asm/unistd.h:348:
+       "syscall\n\t"                                   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: arch/score/include/asm/unistd.h:349:
+       "mv\t%0, r4\n\t"                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: arch/score/include/asm/unistd.h:350:
+       "mv\t%1, r7\n\t"                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: arch/score/include/asm/unistd.h:351:
+       : "=&r" (__v0), "=r" (__a3)                     \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: arch/score/include/asm/unistd.h:352:
+       : "i" (__NR_##name)                             \$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#393: FILE: arch/score/include/asm/unistd.h:353:
+       : "r4","r7", "r8", "r9", "r10", "r11", "r22", "r23", "r24", "r25", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: arch/score/include/asm/unistd.h:353:
+       : "r4","r7", "r8", "r9", "r10", "r11", "r22", "r23", "r24", "r25", $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#393: FILE: arch/score/include/asm/unistd.h:353:
+       : "r4","r7", "r8", "r9", "r10", "r11", "r22", "r23", "r24", "r25", 
              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#395: FILE: arch/score/include/asm/unistd.h:354:
+                                                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: arch/score/include/asm/unistd.h:354:
+                                                       \$

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#395: FILE: arch/score/include/asm/unistd.h:354:
+                                                       \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: arch/score/include/asm/unistd.h:355:
+       if (__a3 == 0)                                  \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#396: FILE: arch/score/include/asm/unistd.h:355:
+       if (__a3 == 0)                                  \
+               return (type) __v0;                     \

ERROR:CODE_INDENT: code indent should use tabs where possible
#397: FILE: arch/score/include/asm/unistd.h:356:
+               return (type) __v0;                     \$

CHECK:SPACING: No space is necessary after a cast
#397: FILE: arch/score/include/asm/unistd.h:356:
+               return (type) __v0;                     \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: arch/score/include/asm/unistd.h:356:
+               return (type) __v0;                     \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: arch/score/include/asm/unistd.h:357:
+       errno = __v0; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: arch/score/include/asm/unistd.h:358:
+       return -1; \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#406: FILE: arch/score/include/asm/unistd.h:365:
+#define _syscall1(type,name,atype,a)                   \
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#406: FILE: arch/score/include/asm/unistd.h:365:
+#define _syscall1(type,name,atype,a)                   \
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#406: FILE: arch/score/include/asm/unistd.h:365:
+#define _syscall1(type,name,atype,a)                   \
                                  ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#406: FILE: arch/score/include/asm/unistd.h:365:
+#define _syscall1(type,name,atype,a)                   \
+type name(atype a)                                     \
+{                                                      \
+       register unsigned long __v0;                    \
+       register unsigned long __a3;                    \
+                                                       \
+       __asm__ volatile (                              \
+       "mv\tr4, %3\n\t"                                \
+       "ldi\tr27, %2\n\t"                              \
+       "syscall\n\t"                                   \
+       "mv\t%0, r4\n\t"                                \
+       "mv\t%1, r7\n\t"                                \
+       : "=&r" (__v0), "=r" (__a3)                     \
+       : "i" (__NR_##name), "r" ((unsigned long) (a))  \
+       : "r4", "r7", "r8", "r9", "r10", "r11", "r22", "r23", \
+         "r24", "r25", "r26", "r27");                  \
+                                                       \
+       if (__a3 == 0)                                  \
+               return (type) __v0;                     \
+       errno = __v0;                                   \
+       return -1;                                      \
+}

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: arch/score/include/asm/unistd.h:368:
+       register unsigned long __v0;                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: arch/score/include/asm/unistd.h:369:
+       register unsigned long __a3;                    \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#411: FILE: arch/score/include/asm/unistd.h:370:
+                                                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: arch/score/include/asm/unistd.h:370:
+                                                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: arch/score/include/asm/unistd.h:371:
+       __asm__ volatile (                              \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: arch/score/include/asm/unistd.h:372:
+       "mv\tr4, %3\n\t"                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: arch/score/include/asm/unistd.h:373:
+       "ldi\tr27, %2\n\t"                              \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#415: FILE: arch/score/include/asm/unistd.h:374:
+       "syscall\n\t"                                   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: arch/score/include/asm/unistd.h:375:
+       "mv\t%0, r4\n\t"                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: arch/score/include/asm/unistd.h:376:
+       "mv\t%1, r7\n\t"                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: arch/score/include/asm/unistd.h:377:
+       : "=&r" (__v0), "=r" (__a3)                     \$

CHECK:SPACING: No space is necessary after a cast
#419: FILE: arch/score/include/asm/unistd.h:378:
+       : "i" (__NR_##name), "r" ((unsigned long) (a))  \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: arch/score/include/asm/unistd.h:378:
+       : "i" (__NR_##name), "r" ((unsigned long) (a))  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#420: FILE: arch/score/include/asm/unistd.h:379:
+       : "r4", "r7", "r8", "r9", "r10", "r11", "r22", "r23", \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#421: FILE: arch/score/include/asm/unistd.h:380:
+         "r24", "r25", "r26", "r27");                  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: arch/score/include/asm/unistd.h:380:
+         "r24", "r25", "r26", "r27");                  \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#422: FILE: arch/score/include/asm/unistd.h:381:
+                                                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: arch/score/include/asm/unistd.h:381:
+                                                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: arch/score/include/asm/unistd.h:382:
+       if (__a3 == 0)                                  \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#423: FILE: arch/score/include/asm/unistd.h:382:
+       if (__a3 == 0)                                  \
+               return (type) __v0;                     \

ERROR:CODE_INDENT: code indent should use tabs where possible
#424: FILE: arch/score/include/asm/unistd.h:383:
+               return (type) __v0;                     \$

CHECK:SPACING: No space is necessary after a cast
#424: FILE: arch/score/include/asm/unistd.h:383:
+               return (type) __v0;                     \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: arch/score/include/asm/unistd.h:383:
+               return (type) __v0;                     \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: arch/score/include/asm/unistd.h:384:
+       errno = __v0;                                   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: arch/score/include/asm/unistd.h:385:
+       return -1;                                      \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#429: FILE: arch/score/include/asm/unistd.h:388:
+#define _syscall2(type,name,atype,a,btype,b)           \
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#429: FILE: arch/score/include/asm/unistd.h:388:
+#define _syscall2(type,name,atype,a,btype,b)           \
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#429: FILE: arch/score/include/asm/unistd.h:388:
+#define _syscall2(type,name,atype,a,btype,b)           \
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#429: FILE: arch/score/include/asm/unistd.h:388:
+#define _syscall2(type,name,atype,a,btype,b)           \
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#429: FILE: arch/score/include/asm/unistd.h:388:
+#define _syscall2(type,name,atype,a,btype,b)           \
                                          ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#429: FILE: arch/score/include/asm/unistd.h:388:
+#define _syscall2(type,name,atype,a,btype,b)           \
+type name(atype a, btype b)                            \
+{                                                      \
+       register unsigned long __v0;                    \
+       register unsigned long __a3;                    \
+                                                       \
+       __asm__ volatile (                              \
+       "mv\tr4, %3\n\t"                                \
+       "mv\tr5, %4\n\t"                                \
+       "ldi\tr27, %2\n\t"                              \
+       "syscall\n\t"                                   \
+       "mv\t%0, r4\n\t"                                \
+       "mv\t%1, r7\n\t"                                \
+       : "=&r" (__v0), "=r" (__a3)                     \
+       : "i" (__NR_##name), "r" ((unsigned long) (a)), "r" ((unsigned 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#432: FILE: arch/score/include/asm/unistd.h:391:
+       register unsigned long __v0;                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: arch/score/include/asm/unistd.h:392:
+       register unsigned long __a3;                    \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#434: FILE: arch/score/include/asm/unistd.h:393:
+                                                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: arch/score/include/asm/unistd.h:393:
+                                                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: arch/score/include/asm/unistd.h:394:
+       __asm__ volatile (                              \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: arch/score/include/asm/unistd.h:395:
+       "mv\tr4, %3\n\t"                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#437: FILE: arch/score/include/asm/unistd.h:396:
+       "mv\tr5, %4\n\t"                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: arch/score/include/asm/unistd.h:397:
+       "ldi\tr27, %2\n\t"                              \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#439: FILE: arch/score/include/asm/unistd.h:398:
+       "syscall\n\t"                                   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#440: FILE: arch/score/include/asm/unistd.h:399:
+       "mv\t%0, r4\n\t"                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: arch/score/include/asm/unistd.h:400:
+       "mv\t%1, r7\n\t"                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: arch/score/include/asm/unistd.h:401:
+       : "=&r" (__v0), "=r" (__a3)                     \$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#443: FILE: arch/score/include/asm/unistd.h:402:
+       : "i" (__NR_##name), "r" ((unsigned long) (a)), "r" ((unsigned $

CHECK:SPACING: No space is necessary after a cast
#443: FILE: arch/score/include/asm/unistd.h:402:
+       : "i" (__NR_##name), "r" ((unsigned long) (a)), "r" ((unsigned 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#443: FILE: arch/score/include/asm/unistd.h:402:
+       : "i" (__NR_##name), "r" ((unsigned long) (a)), "r" ((unsigned $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#445: FILE: arch/score/include/asm/unistd.h:403:
+       : "r4", "r5", "r7", "r8", "r9", "r10", "r11", "r22", "r23", \$

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#445: FILE: arch/score/include/asm/unistd.h:403:
+       : "r4", "r5", "r7", "r8", "r9", "r10", "r11", "r22", "r23", \

ERROR:CODE_INDENT: code indent should use tabs where possible
#446: FILE: arch/score/include/asm/unistd.h:404:
+         "r24", "r25", "r26", "r27");                  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#446: FILE: arch/score/include/asm/unistd.h:404:
+         "r24", "r25", "r26", "r27");                  \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#447: FILE: arch/score/include/asm/unistd.h:405:
+                                                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#447: FILE: arch/score/include/asm/unistd.h:405:
+                                                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#448: FILE: arch/score/include/asm/unistd.h:406:
+       if (__a3 == 0)                                  \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#448: FILE: arch/score/include/asm/unistd.h:406:
+       if (__a3 == 0)                                  \
+               return (type) __v0;                     \

ERROR:CODE_INDENT: code indent should use tabs where possible
#449: FILE: arch/score/include/asm/unistd.h:407:
+               return (type) __v0;                     \$

CHECK:SPACING: No space is necessary after a cast
#449: FILE: arch/score/include/asm/unistd.h:407:
+               return (type) __v0;                     \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: arch/score/include/asm/unistd.h:407:
+               return (type) __v0;                     \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: arch/score/include/asm/unistd.h:408:
+       errno = __v0;                                   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#451: FILE: arch/score/include/asm/unistd.h:409:
+       return -1;                                      \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#454: FILE: arch/score/include/asm/unistd.h:412:
+#define _syscall3(type,name,atype,a,btype,b,ctype,c)   \
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#454: FILE: arch/score/include/asm/unistd.h:412:
+#define _syscall3(type,name,atype,a,btype,b,ctype,c)   \
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#454: FILE: arch/score/include/asm/unistd.h:412:
+#define _syscall3(type,name,atype,a,btype,b,ctype,c)   \
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#454: FILE: arch/score/include/asm/unistd.h:412:
+#define _syscall3(type,name,atype,a,btype,b,ctype,c)   \
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#454: FILE: arch/score/include/asm/unistd.h:412:
+#define _syscall3(type,name,atype,a,btype,b,ctype,c)   \
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#454: FILE: arch/score/include/asm/unistd.h:412:
+#define _syscall3(type,name,atype,a,btype,b,ctype,c)   \
                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#454: FILE: arch/score/include/asm/unistd.h:412:
+#define _syscall3(type,name,atype,a,btype,b,ctype,c)   \
                                                  ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#454: FILE: arch/score/include/asm/unistd.h:412:
+#define _syscall3(type,name,atype,a,btype,b,ctype,c)   \
+type name(atype a, btype b, ctype c)                   \
+{                                                      \
+       register unsigned long __v0;                    \
+       register unsigned long __a3;                    \
+                                                       \
+       __asm__ volatile (                              \
+       "mv\tr4, %3\n\t"                                \
+       "mv\tr5, %4\n\t"                                \
+       "mv\tr6, %5\n\t"                                \
+       "ldi\tr27, %2\n\t"                              \
+       "syscall\n\t"                                   \
+       "mv\t%0, r4\n\t"                                \
+       "mv\t%1, r7\n\t"                                \
+       : "=&r" (__v0), "=r" (__a3)                     \
+       : "i" (__NR_##name), "r" ((unsigned long) (a)), \
+         "r" ((unsigned long) (b)), "r" ((unsigned long) (c))          \
+       : "r4", "r5", "r6", "r7", "r8", "r9", "r10", "r11", "r22", "r23",\
+         "r24", "r25", "r26", "r27");                  \
+                                                       \
+       if (__a3 == 0)                                  \
+               return (type) __v0;                     \
+       errno = __v0;                                   \
+       return -1;                                      \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#454: FILE: arch/score/include/asm/unistd.h:412:
+#define _syscall3(type,name,atype,a,btype,b,ctype,c)   \
+type name(atype a, btype b, ctype c)                   \
+{                                                      \
+       register unsigned long __v0;                    \
+       register unsigned long __a3;                    \
+                                                       \
+       __asm__ volatile (                              \
+       "mv\tr4, %3\n\t"                                \
+       "mv\tr5, %4\n\t"                                \
+       "mv\tr6, %5\n\t"                                \
+       "ldi\tr27, %2\n\t"                              \
+       "syscall\n\t"                                   \
+       "mv\t%0, r4\n\t"                                \
+       "mv\t%1, r7\n\t"                                \
+       : "=&r" (__v0), "=r" (__a3)                     \
+       : "i" (__NR_##name), "r" ((unsigned long) (a)), \
+         "r" ((unsigned long) (b)), "r" ((unsigned long) (c))          \
+       : "r4", "r5", "r6", "r7", "r8", "r9", "r10", "r11", "r22", "r23",\
+         "r24", "r25", "r26", "r27");                  \
+                                                       \
+       if (__a3 == 0)                                  \
+               return (type) __v0;                     \
+       errno = __v0;                                   \
+       return -1;                                      \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'c' - possible side-effects?
#454: FILE: arch/score/include/asm/unistd.h:412:
+#define _syscall3(type,name,atype,a,btype,b,ctype,c)   \
+type name(atype a, btype b, ctype c)                   \
+{                                                      \
+       register unsigned long __v0;                    \
+       register unsigned long __a3;                    \
+                                                       \
+       __asm__ volatile (                              \
+       "mv\tr4, %3\n\t"                                \
+       "mv\tr5, %4\n\t"                                \
+       "mv\tr6, %5\n\t"                                \
+       "ldi\tr27, %2\n\t"                              \
+       "syscall\n\t"                                   \
+       "mv\t%0, r4\n\t"                                \
+       "mv\t%1, r7\n\t"                                \
+       : "=&r" (__v0), "=r" (__a3)                     \
+       : "i" (__NR_##name), "r" ((unsigned long) (a)), \
+         "r" ((unsigned long) (b)), "r" ((unsigned long) (c))          \
+       : "r4", "r5", "r6", "r7", "r8", "r9", "r10", "r11", "r22", "r23",\
+         "r24", "r25", "r26", "r27");                  \
+                                                       \
+       if (__a3 == 0)                                  \
+               return (type) __v0;                     \
+       errno = __v0;                                   \
+       return -1;                                      \
+}

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#457: FILE: arch/score/include/asm/unistd.h:415:
+       register unsigned long __v0;                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#458: FILE: arch/score/include/asm/unistd.h:416:
+       register unsigned long __a3;                    \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#459: FILE: arch/score/include/asm/unistd.h:417:
+                                                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#459: FILE: arch/score/include/asm/unistd.h:417:
+                                                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: arch/score/include/asm/unistd.h:418:
+       __asm__ volatile (                              \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: arch/score/include/asm/unistd.h:419:
+       "mv\tr4, %3\n\t"                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: arch/score/include/asm/unistd.h:420:
+       "mv\tr5, %4\n\t"                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: arch/score/include/asm/unistd.h:421:
+       "mv\tr6, %5\n\t"                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: arch/score/include/asm/unistd.h:422:
+       "ldi\tr27, %2\n\t"                              \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#465: FILE: arch/score/include/asm/unistd.h:423:
+       "syscall\n\t"                                   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#466: FILE: arch/score/include/asm/unistd.h:424:
+       "mv\t%0, r4\n\t"                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: arch/score/include/asm/unistd.h:425:
+       "mv\t%1, r7\n\t"                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: arch/score/include/asm/unistd.h:426:
+       : "=&r" (__v0), "=r" (__a3)                     \$

CHECK:SPACING: No space is necessary after a cast
#469: FILE: arch/score/include/asm/unistd.h:427:
+       : "i" (__NR_##name), "r" ((unsigned long) (a)), \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#469: FILE: arch/score/include/asm/unistd.h:427:
+       : "i" (__NR_##name), "r" ((unsigned long) (a)), \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#470: FILE: arch/score/include/asm/unistd.h:428:
+         "r" ((unsigned long) (b)), "r" ((unsigned long) (c))          \$

CHECK:SPACING: No space is necessary after a cast
#470: FILE: arch/score/include/asm/unistd.h:428:
+         "r" ((unsigned long) (b)), "r" ((unsigned long) (c))          \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: arch/score/include/asm/unistd.h:428:
+         "r" ((unsigned long) (b)), "r" ((unsigned long) (c))          \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: arch/score/include/asm/unistd.h:429:
+       : "r4", "r5", "r6", "r7", "r8", "r9", "r10", "r11", "r22", "r23",\$

ERROR:CODE_INDENT: code indent should use tabs where possible
#472: FILE: arch/score/include/asm/unistd.h:430:
+         "r24", "r25", "r26", "r27");                  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: arch/score/include/asm/unistd.h:430:
+         "r24", "r25", "r26", "r27");                  \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#473: FILE: arch/score/include/asm/unistd.h:431:
+                                                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#473: FILE: arch/score/include/asm/unistd.h:431:
+                                                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: arch/score/include/asm/unistd.h:432:
+       if (__a3 == 0)                                  \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#474: FILE: arch/score/include/asm/unistd.h:432:
+       if (__a3 == 0)                                  \
+               return (type) __v0;                     \

ERROR:CODE_INDENT: code indent should use tabs where possible
#475: FILE: arch/score/include/asm/unistd.h:433:
+               return (type) __v0;                     \$

CHECK:SPACING: No space is necessary after a cast
#475: FILE: arch/score/include/asm/unistd.h:433:
+               return (type) __v0;                     \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#475: FILE: arch/score/include/asm/unistd.h:433:
+               return (type) __v0;                     \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: arch/score/include/asm/unistd.h:434:
+       errno = __v0;                                   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#477: FILE: arch/score/include/asm/unistd.h:435:
+       return -1;                                      \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#480: FILE: arch/score/include/asm/unistd.h:438:
+#define _syscall4(type,name,atype,a,btype,b,ctype,c,dtype,d)   \
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#480: FILE: arch/score/include/asm/unistd.h:438:
+#define _syscall4(type,name,atype,a,btype,b,ctype,c,dtype,d)   \
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#480: FILE: arch/score/include/asm/unistd.h:438:
+#define _syscall4(type,name,atype,a,btype,b,ctype,c,dtype,d)   \
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#480: FILE: arch/score/include/asm/unistd.h:438:
+#define _syscall4(type,name,atype,a,btype,b,ctype,c,dtype,d)   \
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#480: FILE: arch/score/include/asm/unistd.h:438:
+#define _syscall4(type,name,atype,a,btype,b,ctype,c,dtype,d)   \
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#480: FILE: arch/score/include/asm/unistd.h:438:
+#define _syscall4(type,name,atype,a,btype,b,ctype,c,dtype,d)   \
                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#480: FILE: arch/score/include/asm/unistd.h:438:
+#define _syscall4(type,name,atype,a,btype,b,ctype,c,dtype,d)   \
                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#480: FILE: arch/score/include/asm/unistd.h:438:
+#define _syscall4(type,name,atype,a,btype,b,ctype,c,dtype,d)   \
                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#480: FILE: arch/score/include/asm/unistd.h:438:
+#define _syscall4(type,name,atype,a,btype,b,ctype,c,dtype,d)   \
                                                          ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#480: FILE: arch/score/include/asm/unistd.h:438:
+#define _syscall4(type,name,atype,a,btype,b,ctype,c,dtype,d)   \
+type name(atype a, btype b, ctype c, dtype d)                  \
+{                                                              \
+       register unsigned long __v0;                            \
+       register unsigned long __a3;                            \
+                                                               \
+       __asm__ volatile (                                      \
+       "mv\tr4, %3\n\t"                                        \
+       "mv\tr5, %4\n\t"                                        \
+       "mv\tr6, %5\n\t"                                        \
+       "mv\tr7, %6\n\t"                                        \
+       "ldi\tr27, %2\n\t"                                      \
+       "syscall\n\t"                                           \
+       "mv\t%0, r4\n\t"                                        \
+       "mv\t%1, r7\n\t"                                        \
+       : "=&r" (__v0), "=r" (__a3)                             \
+       : "i" (__NR_##name), "r" ((unsigned long) (a)), "r" ((unsigned 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: arch/score/include/asm/unistd.h:441:
+       register unsigned long __v0;                            \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: arch/score/include/asm/unistd.h:442:
+       register unsigned long __a3;                            \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#485: FILE: arch/score/include/asm/unistd.h:443:
+                                                               \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#485: FILE: arch/score/include/asm/unistd.h:443:
+                                                               \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: arch/score/include/asm/unistd.h:444:
+       __asm__ volatile (                                      \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: arch/score/include/asm/unistd.h:445:
+       "mv\tr4, %3\n\t"                                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: arch/score/include/asm/unistd.h:446:
+       "mv\tr5, %4\n\t"                                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: arch/score/include/asm/unistd.h:447:
+       "mv\tr6, %5\n\t"                                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: arch/score/include/asm/unistd.h:448:
+       "mv\tr7, %6\n\t"                                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: arch/score/include/asm/unistd.h:449:
+       "ldi\tr27, %2\n\t"                                      \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: arch/score/include/asm/unistd.h:450:
+       "syscall\n\t"                                           \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: arch/score/include/asm/unistd.h:451:
+       "mv\t%0, r4\n\t"                                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: arch/score/include/asm/unistd.h:452:
+       "mv\t%1, r7\n\t"                                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#495: FILE: arch/score/include/asm/unistd.h:453:
+       : "=&r" (__v0), "=r" (__a3)                             \$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#496: FILE: arch/score/include/asm/unistd.h:454:
+       : "i" (__NR_##name), "r" ((unsigned long) (a)), "r" ((unsigned $

CHECK:SPACING: No space is necessary after a cast
#496: FILE: arch/score/include/asm/unistd.h:454:
+       : "i" (__NR_##name), "r" ((unsigned long) (a)), "r" ((unsigned 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: arch/score/include/asm/unistd.h:454:
+       : "i" (__NR_##name), "r" ((unsigned long) (a)), "r" ((unsigned $

ERROR:CODE_INDENT: code indent should use tabs where possible
#498: FILE: arch/score/include/asm/unistd.h:455:
+        "r" ((unsigned long) (c)), "r"((unsigned long) (d))    \$

CHECK:SPACING: No space is necessary after a cast
#498: FILE: arch/score/include/asm/unistd.h:455:
+        "r" ((unsigned long) (c)), "r"((unsigned long) (d))    \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: arch/score/include/asm/unistd.h:455:
+        "r" ((unsigned long) (c)), "r"((unsigned long) (d))    \$

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#498: FILE: arch/score/include/asm/unistd.h:455:
+        "r" ((unsigned long) (c)), "r"((unsigned long) (d))    \

ERROR:TRAILING_WHITESPACE: trailing whitespace
#499: FILE: arch/score/include/asm/unistd.h:456:
+       : "r4", "r5", "r6", "r7", "r8", "r9", "r10", "r11", "r22", "r23", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#499: FILE: arch/score/include/asm/unistd.h:456:
+       : "r4", "r5", "r6", "r7", "r8", "r9", "r10", "r11", "r22", "r23", $

ERROR:CODE_INDENT: code indent should use tabs where possible
#501: FILE: arch/score/include/asm/unistd.h:457:
+         "r24", "r25", "r26", "r27");                          \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#501: FILE: arch/score/include/asm/unistd.h:457:
+         "r24", "r25", "r26", "r27");                          \$

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#501: FILE: arch/score/include/asm/unistd.h:457:
+         "r24", "r25", "r26", "r27");                          \

ERROR:CODE_INDENT: code indent should use tabs where possible
#502: FILE: arch/score/include/asm/unistd.h:458:
+                                                               \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#502: FILE: arch/score/include/asm/unistd.h:458:
+                                                               \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#503: FILE: arch/score/include/asm/unistd.h:459:
+       if (__a3 == 0)                                          \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#503: FILE: arch/score/include/asm/unistd.h:459:
+       if (__a3 == 0)                                          \
+               return (type) __v0;                             \

ERROR:CODE_INDENT: code indent should use tabs where possible
#504: FILE: arch/score/include/asm/unistd.h:460:
+               return (type) __v0;                             \$

CHECK:SPACING: No space is necessary after a cast
#504: FILE: arch/score/include/asm/unistd.h:460:
+               return (type) __v0;                             \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#504: FILE: arch/score/include/asm/unistd.h:460:
+               return (type) __v0;                             \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#505: FILE: arch/score/include/asm/unistd.h:461:
+       errno = __v0;                                           \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: arch/score/include/asm/unistd.h:462:
+       return -1;                                              \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#513: FILE: arch/score/include/asm/unistd.h:469:
+#define _syscall5(type,name,atype,a,btype,b,ctype,c,dtype,d,etype,e)   \
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#513: FILE: arch/score/include/asm/unistd.h:469:
+#define _syscall5(type,name,atype,a,btype,b,ctype,c,dtype,d,etype,e)   \
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#513: FILE: arch/score/include/asm/unistd.h:469:
+#define _syscall5(type,name,atype,a,btype,b,ctype,c,dtype,d,etype,e)   \
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#513: FILE: arch/score/include/asm/unistd.h:469:
+#define _syscall5(type,name,atype,a,btype,b,ctype,c,dtype,d,etype,e)   \
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#513: FILE: arch/score/include/asm/unistd.h:469:
+#define _syscall5(type,name,atype,a,btype,b,ctype,c,dtype,d,etype,e)   \
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#513: FILE: arch/score/include/asm/unistd.h:469:
+#define _syscall5(type,name,atype,a,btype,b,ctype,c,dtype,d,etype,e)   \
                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#513: FILE: arch/score/include/asm/unistd.h:469:
+#define _syscall5(type,name,atype,a,btype,b,ctype,c,dtype,d,etype,e)   \
                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#513: FILE: arch/score/include/asm/unistd.h:469:
+#define _syscall5(type,name,atype,a,btype,b,ctype,c,dtype,d,etype,e)   \
                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#513: FILE: arch/score/include/asm/unistd.h:469:
+#define _syscall5(type,name,atype,a,btype,b,ctype,c,dtype,d,etype,e)   \
                                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#513: FILE: arch/score/include/asm/unistd.h:469:
+#define _syscall5(type,name,atype,a,btype,b,ctype,c,dtype,d,etype,e)   \
                                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#513: FILE: arch/score/include/asm/unistd.h:469:
+#define _syscall5(type,name,atype,a,btype,b,ctype,c,dtype,d,etype,e)   \
                                                                  ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#513: FILE: arch/score/include/asm/unistd.h:469:
+#define _syscall5(type,name,atype,a,btype,b,ctype,c,dtype,d,etype,e)   \
+type name(atype a, btype b, ctype c, dtype d, etype e)                 \
+{                                                                      \
+       register unsigned long __v0;                                    \
+       register unsigned long __a3;                                    \
+                                                                       \
+       __asm__ volatile (                                              \
+       "mv\tr4, %3\n\t"                                                \
+       "mv\tr5, %4\n\t"                                                \
+       "mv\tr6, %5\n\t"                                                \
+       "mv\tr7, %6\n\t"                                                \
+       "addi\tr0, -32\n\t"                                             \
+       "sw\t%7, [r0, 16]\n\t"                                          \
+       "ldi\tr27, %2\n\t"                                              \
+       "syscall\n\t"                                                   \
+       "addi\tr0, 32\n\t"                                              \
+       "mv\t%0, r4\n\t"                                                \
+       "mv\t%1, r7\n\t"                                                \
+       : "=&r" (__v0), "=r" (__a3)                                     \
+       : "i" (__NR_##name), "r" ((unsigned long) (a)),                 \
+         "r" ((unsigned long) (b)), "r" ((unsigned long) (c)),         \
+         "r"((unsigned long) (d)), "r"((unsigned long) (e))            \
+       : "r4", "r5", "r6", "r7", "r8", "r9", "r10", "r11", "r22", "r23", 

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#513: FILE: arch/score/include/asm/unistd.h:469:
+#define _syscall5(type,name,atype,a,btype,b,ctype,c,dtype,d,etype,e)   \
+type name(atype a, btype b, ctype c, dtype d, etype e)                 \
+{                                                                      \
+       register unsigned long __v0;                                    \
+       register unsigned long __a3;                                    \
+                                                                       \
+       __asm__ volatile (                                              \
+       "mv\tr4, %3\n\t"                                                \
+       "mv\tr5, %4\n\t"                                                \
+       "mv\tr6, %5\n\t"                                                \
+       "mv\tr7, %6\n\t"                                                \
+       "addi\tr0, -32\n\t"                                             \
+       "sw\t%7, [r0, 16]\n\t"                                          \
+       "ldi\tr27, %2\n\t"                                              \
+       "syscall\n\t"                                                   \
+       "addi\tr0, 32\n\t"                                              \
+       "mv\t%0, r4\n\t"                                                \
+       "mv\t%1, r7\n\t"                                                \
+       : "=&r" (__v0), "=r" (__a3)                                     \
+       : "i" (__NR_##name), "r" ((unsigned long) (a)),                 \
+         "r" ((unsigned long) (b)), "r" ((unsigned long) (c)),         \
+         "r"((unsigned long) (d)), "r"((unsigned long) (e))            \
+       : "r4", "r5", "r6", "r7", "r8", "r9", "r10", "r11", "r22", "r23", 

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'c' - possible side-effects?
#513: FILE: arch/score/include/asm/unistd.h:469:
+#define _syscall5(type,name,atype,a,btype,b,ctype,c,dtype,d,etype,e)   \
+type name(atype a, btype b, ctype c, dtype d, etype e)                 \
+{                                                                      \
+       register unsigned long __v0;                                    \
+       register unsigned long __a3;                                    \
+                                                                       \
+       __asm__ volatile (                                              \
+       "mv\tr4, %3\n\t"                                                \
+       "mv\tr5, %4\n\t"                                                \
+       "mv\tr6, %5\n\t"                                                \
+       "mv\tr7, %6\n\t"                                                \
+       "addi\tr0, -32\n\t"                                             \
+       "sw\t%7, [r0, 16]\n\t"                                          \
+       "ldi\tr27, %2\n\t"                                              \
+       "syscall\n\t"                                                   \
+       "addi\tr0, 32\n\t"                                              \
+       "mv\t%0, r4\n\t"                                                \
+       "mv\t%1, r7\n\t"                                                \
+       : "=&r" (__v0), "=r" (__a3)                                     \
+       : "i" (__NR_##name), "r" ((unsigned long) (a)),                 \
+         "r" ((unsigned long) (b)), "r" ((unsigned long) (c)),         \
+         "r"((unsigned long) (d)), "r"((unsigned long) (e))            \
+       : "r4", "r5", "r6", "r7", "r8", "r9", "r10", "r11", "r22", "r23", 

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'd' - possible side-effects?
#513: FILE: arch/score/include/asm/unistd.h:469:
+#define _syscall5(type,name,atype,a,btype,b,ctype,c,dtype,d,etype,e)   \
+type name(atype a, btype b, ctype c, dtype d, etype e)                 \
+{                                                                      \
+       register unsigned long __v0;                                    \
+       register unsigned long __a3;                                    \
+                                                                       \
+       __asm__ volatile (                                              \
+       "mv\tr4, %3\n\t"                                                \
+       "mv\tr5, %4\n\t"                                                \
+       "mv\tr6, %5\n\t"                                                \
+       "mv\tr7, %6\n\t"                                                \
+       "addi\tr0, -32\n\t"                                             \
+       "sw\t%7, [r0, 16]\n\t"                                          \
+       "ldi\tr27, %2\n\t"                                              \
+       "syscall\n\t"                                                   \
+       "addi\tr0, 32\n\t"                                              \
+       "mv\t%0, r4\n\t"                                                \
+       "mv\t%1, r7\n\t"                                                \
+       : "=&r" (__v0), "=r" (__a3)                                     \
+       : "i" (__NR_##name), "r" ((unsigned long) (a)),                 \
+         "r" ((unsigned long) (b)), "r" ((unsigned long) (c)),         \
+         "r"((unsigned long) (d)), "r"((unsigned long) (e))            \
+       : "r4", "r5", "r6", "r7", "r8", "r9", "r10", "r11", "r22", "r23", 

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'e' - possible side-effects?
#513: FILE: arch/score/include/asm/unistd.h:469:
+#define _syscall5(type,name,atype,a,btype,b,ctype,c,dtype,d,etype,e)   \
+type name(atype a, btype b, ctype c, dtype d, etype e)                 \
+{                                                                      \
+       register unsigned long __v0;                                    \
+       register unsigned long __a3;                                    \
+                                                                       \
+       __asm__ volatile (                                              \
+       "mv\tr4, %3\n\t"                                                \
+       "mv\tr5, %4\n\t"                                                \
+       "mv\tr6, %5\n\t"                                                \
+       "mv\tr7, %6\n\t"                                                \
+       "addi\tr0, -32\n\t"                                             \
+       "sw\t%7, [r0, 16]\n\t"                                          \
+       "ldi\tr27, %2\n\t"                                              \
+       "syscall\n\t"                                                   \
+       "addi\tr0, 32\n\t"                                              \
+       "mv\t%0, r4\n\t"                                                \
+       "mv\t%1, r7\n\t"                                                \
+       : "=&r" (__v0), "=r" (__a3)                                     \
+       : "i" (__NR_##name), "r" ((unsigned long) (a)),                 \
+         "r" ((unsigned long) (b)), "r" ((unsigned long) (c)),         \
+         "r"((unsigned long) (d)), "r"((unsigned long) (e))            \
+       : "r4", "r5", "r6", "r7", "r8", "r9", "r10", "r11", "r22", "r23", 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#516: FILE: arch/score/include/asm/unistd.h:472:
+       register unsigned long __v0;                                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#517: FILE: arch/score/include/asm/unistd.h:473:
+       register unsigned long __a3;                                    \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#518: FILE: arch/score/include/asm/unistd.h:474:
+                                                                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#518: FILE: arch/score/include/asm/unistd.h:474:
+                                                                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#519: FILE: arch/score/include/asm/unistd.h:475:
+       __asm__ volatile (                                              \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#520: FILE: arch/score/include/asm/unistd.h:476:
+       "mv\tr4, %3\n\t"                                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#521: FILE: arch/score/include/asm/unistd.h:477:
+       "mv\tr5, %4\n\t"                                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: arch/score/include/asm/unistd.h:478:
+       "mv\tr6, %5\n\t"                                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#523: FILE: arch/score/include/asm/unistd.h:479:
+       "mv\tr7, %6\n\t"                                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#524: FILE: arch/score/include/asm/unistd.h:480:
+       "addi\tr0, -32\n\t"                                             \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: arch/score/include/asm/unistd.h:481:
+       "sw\t%7, [r0, 16]\n\t"                                          \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: arch/score/include/asm/unistd.h:482:
+       "ldi\tr27, %2\n\t"                                              \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#527: FILE: arch/score/include/asm/unistd.h:483:
+       "syscall\n\t"                                                   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#528: FILE: arch/score/include/asm/unistd.h:484:
+       "addi\tr0, 32\n\t"                                              \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#529: FILE: arch/score/include/asm/unistd.h:485:
+       "mv\t%0, r4\n\t"                                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#530: FILE: arch/score/include/asm/unistd.h:486:
+       "mv\t%1, r7\n\t"                                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: arch/score/include/asm/unistd.h:487:
+       : "=&r" (__v0), "=r" (__a3)                                     \$

CHECK:SPACING: No space is necessary after a cast
#532: FILE: arch/score/include/asm/unistd.h:488:
+       : "i" (__NR_##name), "r" ((unsigned long) (a)),                 \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#532: FILE: arch/score/include/asm/unistd.h:488:
+       : "i" (__NR_##name), "r" ((unsigned long) (a)),                 \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#533: FILE: arch/score/include/asm/unistd.h:489:
+         "r" ((unsigned long) (b)), "r" ((unsigned long) (c)),         \$

CHECK:SPACING: No space is necessary after a cast
#533: FILE: arch/score/include/asm/unistd.h:489:
+         "r" ((unsigned long) (b)), "r" ((unsigned long) (c)),         \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: arch/score/include/asm/unistd.h:489:
+         "r" ((unsigned long) (b)), "r" ((unsigned long) (c)),         \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#534: FILE: arch/score/include/asm/unistd.h:490:
+         "r"((unsigned long) (d)), "r"((unsigned long) (e))            \$

CHECK:SPACING: No space is necessary after a cast
#534: FILE: arch/score/include/asm/unistd.h:490:
+         "r"((unsigned long) (d)), "r"((unsigned long) (e))            \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#534: FILE: arch/score/include/asm/unistd.h:490:
+         "r"((unsigned long) (d)), "r"((unsigned long) (e))            \$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#535: FILE: arch/score/include/asm/unistd.h:491:
+       : "r4", "r5", "r6", "r7", "r8", "r9", "r10", "r11", "r22", "r23", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#535: FILE: arch/score/include/asm/unistd.h:491:
+       : "r4", "r5", "r6", "r7", "r8", "r9", "r10", "r11", "r22", "r23", $

ERROR:CODE_INDENT: code indent should use tabs where possible
#537: FILE: arch/score/include/asm/unistd.h:492:
+         "r24", "r25", "r26", "r27");                                  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#537: FILE: arch/score/include/asm/unistd.h:492:
+         "r24", "r25", "r26", "r27");                                  \$

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#537: FILE: arch/score/include/asm/unistd.h:492:
+         "r24", "r25", "r26", "r27");                                  \

ERROR:CODE_INDENT: code indent should use tabs where possible
#538: FILE: arch/score/include/asm/unistd.h:493:
+                                                                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#538: FILE: arch/score/include/asm/unistd.h:493:
+                                                                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#539: FILE: arch/score/include/asm/unistd.h:494:
+       if (__a3 == 0)                                                  \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#539: FILE: arch/score/include/asm/unistd.h:494:
+       if (__a3 == 0)                                                  \
+               return (type) __v0;                                     \

ERROR:CODE_INDENT: code indent should use tabs where possible
#540: FILE: arch/score/include/asm/unistd.h:495:
+               return (type) __v0;                                     \$

CHECK:SPACING: No space is necessary after a cast
#540: FILE: arch/score/include/asm/unistd.h:495:
+               return (type) __v0;                                     \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#540: FILE: arch/score/include/asm/unistd.h:495:
+               return (type) __v0;                                     \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#541: FILE: arch/score/include/asm/unistd.h:496:
+       errno = __v0;                                                   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#542: FILE: arch/score/include/asm/unistd.h:497:
+       return -1;                                                      \$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#545: FILE: arch/score/include/asm/unistd.h:500:
+#define $

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#547: FILE: arch/score/include/asm/unistd.h:501:
+type name(atype a, btype b, ctype c, dtype d, etype e, ftype f)        \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#549: FILE: arch/score/include/asm/unistd.h:503:
+       register unsigned long __v0; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#550: FILE: arch/score/include/asm/unistd.h:504:
+       register unsigned long __a3; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#551: FILE: arch/score/include/asm/unistd.h:505:
+ \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#552: FILE: arch/score/include/asm/unistd.h:506:
+       __asm__ volatile ( \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#553: FILE: arch/score/include/asm/unistd.h:507:
+       "mv\tr4, %3\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#554: FILE: arch/score/include/asm/unistd.h:508:
+       "mv\tr5, %4\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: arch/score/include/asm/unistd.h:509:
+       "mv\tr6, %5\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#556: FILE: arch/score/include/asm/unistd.h:510:
+       "mv\tr7, %6\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#557: FILE: arch/score/include/asm/unistd.h:511:
+       "addi\tr0, -32\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#558: FILE: arch/score/include/asm/unistd.h:512:
+       "sw\t%7, [r0, 16]\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#559: FILE: arch/score/include/asm/unistd.h:513:
+       "sw\t%8, [r0, 20]\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#560: FILE: arch/score/include/asm/unistd.h:514:
+       "ldi\tr27, %2\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#561: FILE: arch/score/include/asm/unistd.h:515:
+       "syscall\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#562: FILE: arch/score/include/asm/unistd.h:516:
+       "addi\tr0, 32\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#563: FILE: arch/score/include/asm/unistd.h:517:
+       "mv\t%0, r4\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: arch/score/include/asm/unistd.h:518:
+       "mv\t%1, r7\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: arch/score/include/asm/unistd.h:519:
+       : "=&r" (__v0), "=r" (__a3) \$

CHECK:SPACING: No space is necessary after a cast
#566: FILE: arch/score/include/asm/unistd.h:520:
+       : "i" (__NR_##name), "r" ((unsigned long) (a)), \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#566: FILE: arch/score/include/asm/unistd.h:520:
+       : "i" (__NR_##name), "r" ((unsigned long) (a)), \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#567: FILE: arch/score/include/asm/unistd.h:521:
+         "r" ((unsigned long) (b)), "r" ((unsigned long) (c)), \$

CHECK:SPACING: No space is necessary after a cast
#567: FILE: arch/score/include/asm/unistd.h:521:
+         "r" ((unsigned long) (b)), "r" ((unsigned long) (c)), \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#567: FILE: arch/score/include/asm/unistd.h:521:
+         "r" ((unsigned long) (b)), "r" ((unsigned long) (c)), \$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#568: FILE: arch/score/include/asm/unistd.h:522:
+         "r"((unsigned long) (d)), "r"((unsigned long) (e)), $

ERROR:CODE_INDENT: code indent should use tabs where possible
#568: FILE: arch/score/include/asm/unistd.h:522:
+         "r"((unsigned long) (d)), "r"((unsigned long) (e)), $

CHECK:SPACING: No space is necessary after a cast
#568: FILE: arch/score/include/asm/unistd.h:522:
+         "r"((unsigned long) (d)), "r"((unsigned long) (e)), 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#568: FILE: arch/score/include/asm/unistd.h:522:
+         "r"((unsigned long) (d)), "r"((unsigned long) (e)), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#570: FILE: arch/score/include/asm/unistd.h:523:
+       : "r4", "r5", "r6", "r7", "r8", "r9", "r10", "r11", "r22", "r23", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#570: FILE: arch/score/include/asm/unistd.h:523:
+       : "r4", "r5", "r6", "r7", "r8", "r9", "r10", "r11", "r22", "r23", $

ERROR:CODE_INDENT: code indent should use tabs where possible
#572: FILE: arch/score/include/asm/unistd.h:524:
+         "r24", "r25", "r26", "r27"); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#572: FILE: arch/score/include/asm/unistd.h:524:
+         "r24", "r25", "r26", "r27"); \$

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#572: FILE: arch/score/include/asm/unistd.h:524:
+         "r24", "r25", "r26", "r27"); \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#573: FILE: arch/score/include/asm/unistd.h:525:
+ \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#574: FILE: arch/score/include/asm/unistd.h:526:
+       if (__a3 == 0) \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#574: FILE: arch/score/include/asm/unistd.h:526:
+       if (__a3 == 0) \
+               return (type) __v0; \

ERROR:CODE_INDENT: code indent should use tabs where possible
#575: FILE: arch/score/include/asm/unistd.h:527:
+               return (type) __v0; \$

CHECK:SPACING: No space is necessary after a cast
#575: FILE: arch/score/include/asm/unistd.h:527:
+               return (type) __v0; \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#575: FILE: arch/score/include/asm/unistd.h:527:
+               return (type) __v0; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#576: FILE: arch/score/include/asm/unistd.h:528:
+       errno = __v0; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: arch/score/include/asm/unistd.h:529:
+       return -1; \$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#580: FILE: arch/score/include/asm/unistd.h:532:
+#define $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#583: FILE: arch/score/include/asm/unistd.h:533:
+type name(atype a, btype b, ctype c, dtype d, etype e, ftype f, gtype g)  $

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#585: FILE: arch/score/include/asm/unistd.h:534:
+{      \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#586: FILE: arch/score/include/asm/unistd.h:535:
+       register unsigned long __v0;    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#587: FILE: arch/score/include/asm/unistd.h:536:
+       register unsigned long __a3;    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#588: FILE: arch/score/include/asm/unistd.h:537:
+       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#589: FILE: arch/score/include/asm/unistd.h:538:
+       __asm__ volatile (      \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#590: FILE: arch/score/include/asm/unistd.h:539:
+       "mv\tr4, %3\n\t"        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#591: FILE: arch/score/include/asm/unistd.h:540:
+       "mv\tr5, %4\n\t"        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#592: FILE: arch/score/include/asm/unistd.h:541:
+       "mv\tr6, %5\n\t"        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#593: FILE: arch/score/include/asm/unistd.h:542:
+       "mv\tr7, %6\n\t"        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#594: FILE: arch/score/include/asm/unistd.h:543:
+       "addi\tr0, -32\n\t"     \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#595: FILE: arch/score/include/asm/unistd.h:544:
+       "sw\t%7, [r0, 16]\n\t"  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#596: FILE: arch/score/include/asm/unistd.h:545:
+       "sw\t%8, [r0, 20]\n\t"  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#597: FILE: arch/score/include/asm/unistd.h:546:
+       "sw\t%9, [r0, 24]\n\t"  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#598: FILE: arch/score/include/asm/unistd.h:547:
+       "ldi\tr27, %2\n\t"      \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#599: FILE: arch/score/include/asm/unistd.h:548:
+       "syscall\n\t"   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#600: FILE: arch/score/include/asm/unistd.h:549:
+       "addi\tr0, 32\n\t"      \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#601: FILE: arch/score/include/asm/unistd.h:550:
+       "mv\t%0, r4\n\t"        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#602: FILE: arch/score/include/asm/unistd.h:551:
+       "mv\t%1, r7\n\t"        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#603: FILE: arch/score/include/asm/unistd.h:552:
+       : "=&r" (__v0), "=r" (__a3)     \$

CHECK:SPACING: No space is necessary after a cast
#604: FILE: arch/score/include/asm/unistd.h:553:
+       : "i" (__NR_##name), "r" ((unsigned long) (a)),         \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#604: FILE: arch/score/include/asm/unistd.h:553:
+       : "i" (__NR_##name), "r" ((unsigned long) (a)),         \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#605: FILE: arch/score/include/asm/unistd.h:554:
+         "r" ((unsigned long) (b)), "r" ((unsigned long) (c)),         \$

CHECK:SPACING: No space is necessary after a cast
#605: FILE: arch/score/include/asm/unistd.h:554:
+         "r" ((unsigned long) (b)), "r" ((unsigned long) (c)),         \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#605: FILE: arch/score/include/asm/unistd.h:554:
+         "r" ((unsigned long) (b)), "r" ((unsigned long) (c)),         \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#606: FILE: arch/score/include/asm/unistd.h:555:
+         "r"((unsigned long) (d)), "r"((unsigned long) (e)),   \$

CHECK:SPACING: No space is necessary after a cast
#606: FILE: arch/score/include/asm/unistd.h:555:
+         "r"((unsigned long) (d)), "r"((unsigned long) (e)),   \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#606: FILE: arch/score/include/asm/unistd.h:555:
+         "r"((unsigned long) (d)), "r"((unsigned long) (e)),   \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#607: FILE: arch/score/include/asm/unistd.h:556:
+         "r"((unsigned long) (f)), "r" ((unsigned long) (g))   \$

CHECK:SPACING: No space is necessary after a cast
#607: FILE: arch/score/include/asm/unistd.h:556:
+         "r"((unsigned long) (f)), "r" ((unsigned long) (g))   \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#607: FILE: arch/score/include/asm/unistd.h:556:
+         "r"((unsigned long) (f)), "r" ((unsigned long) (g))   \$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#608: FILE: arch/score/include/asm/unistd.h:557:
+       : "r4", "r5", "r6", "r7", "r8", "r9", "r10", "r11", "r22", "r23",  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#608: FILE: arch/score/include/asm/unistd.h:557:
+       : "r4", "r5", "r6", "r7", "r8", "r9", "r10", "r11", "r22", "r23",  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#610: FILE: arch/score/include/asm/unistd.h:558:
+         "r24", "r25", "r26", "r27");  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#610: FILE: arch/score/include/asm/unistd.h:558:
+         "r24", "r25", "r26", "r27");  \$

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#610: FILE: arch/score/include/asm/unistd.h:558:
+         "r24", "r25", "r26", "r27");  \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#611: FILE: arch/score/include/asm/unistd.h:559:
+       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#612: FILE: arch/score/include/asm/unistd.h:560:
+       if (__a3 == 0)  \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#612: FILE: arch/score/include/asm/unistd.h:560:
+       if (__a3 == 0)  \
+               return (type) __v0;     \

ERROR:CODE_INDENT: code indent should use tabs where possible
#613: FILE: arch/score/include/asm/unistd.h:561:
+               return (type) __v0;     \$

CHECK:SPACING: No space is necessary after a cast
#613: FILE: arch/score/include/asm/unistd.h:561:
+               return (type) __v0;     \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#613: FILE: arch/score/include/asm/unistd.h:561:
+               return (type) __v0;     \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#614: FILE: arch/score/include/asm/unistd.h:562:
+       errno = __v0;   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#615: FILE: arch/score/include/asm/unistd.h:563:
+       return -1;      \$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#658: FILE: arch/score/include/asm/unistd.h:606:
+ * What we want is __attribute__((weak,alias("sys_ni_syscall"))),

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("sys_ni_syscall") over __attribute__((alias("sys_ni_syscall")))
#658: FILE: arch/score/include/asm/unistd.h:606:
+ * What we want is __attribute__((weak,alias("sys_ni_syscall"))),

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#673: FILE: arch/score/include/asm/user.h:1:
+#ifndef _ASM_USER_H

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#693: FILE: arch/score/Kconfig:10:
+choice
+       prompt "System type"
+       default MACH_SPCT6600
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#697: FILE: arch/score/Kconfig:14:
+config MACH_SPCT6600
+       bool "SPCT6600 series based machines"
+       select SYS_SUPPORTS_32BIT_KERNEL
+       select SYS_SUPPORTS_LITTLE_ENDIAN
+       select CPU_SCORE7
+       select GENERIC_HAS_IOMAP
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#704: FILE: arch/score/Kconfig:21:
+config MACH_SPG300
+       bool "SPG300 series based machines"
+       select SYS_SUPPORTS_32BIT_KERNEL
+       select SYS_SUPPORTS_LITTLE_ENDIAN
+       select CPU_SCORE7
+       select GENERIC_HAS_IOMAP
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#711: FILE: arch/score/Kconfig:28:
+config SCORE_SIM
+       bool "Score simulator"
+       select SYS_SUPPORTS_32BIT_KERNEL
+       select SYS_SUPPORTS_LITTLE_ENDIAN
+       select CPU_SCORE7
+       select GENERIC_HAS_IOMAP

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#760: FILE: arch/score/Kconfig:77:
+config EARLY_PRINTK
+       bool "Early printk" if EMBEDDED
+       depends on SYS_HAS_EARLY_PRINTK
+       default y
+       help
+         This option enables special console drivers which allow the 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#765: FILE: arch/score/Kconfig:82:
+         This option enables special console drivers which allow the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#769: FILE: arch/score/Kconfig:85:
+         This is useful for kernel debugging when your machine crashes $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#771: FILE: arch/score/Kconfig:86:
+         early before the console code is initialized. For normal $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#774: FILE: arch/score/Kconfig:88:
+         doesn't cooperate with an X server. You should normally say N $

WARNING:TYPO_SPELLING: 'Endianess' may be misspelled - perhaps 'Endianness'?
#782: FILE: arch/score/Kconfig:95:
+# Endianess selection.  Sufficiently obscure so many users don't know 
   ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#782: FILE: arch/score/Kconfig:95:
+# Endianess selection.  Sufficiently obscure so many users don't know $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#784: FILE: arch/score/Kconfig:96:
+# answer,so we try hard to limit the available choices.  Also the use of $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#788: FILE: arch/score/Kconfig:99:
+choice
+       prompt "Endianess selection"
+       help
+         Some SCORE machines can be configured for either little or big 

WARNING:TYPO_SPELLING: 'Endianess' may be misspelled - perhaps 'Endianness'?
#789: FILE: arch/score/Kconfig:100:
+       prompt "Endianess selection"
                ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#791: FILE: arch/score/Kconfig:102:
+         Some SCORE machines can be configured for either little or big $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#793: FILE: arch/score/Kconfig:103:
+         byte order. These modes require different kernels and a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#795: FILE: arch/score/Kconfig:104:
+         Linux distribution.  In general there is one preferred byteorder $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#797: FILE: arch/score/Kconfig:105:
+         particular system but some systems are just as commonly used in $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#801: FILE: arch/score/Kconfig:108:
+config CPU_BIG_ENDIAN
+       bool "Big endian"
+       depends on SYS_SUPPORTS_BIG_ENDIAN
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#805: FILE: arch/score/Kconfig:112:
+config CPU_LITTLE_ENDIAN
+       bool "Little endian"
+       depends on SYS_SUPPORTS_LITTLE_ENDIAN
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#848: FILE: arch/score/Kconfig:155:
+ $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#855: FILE: arch/score/Kconfig:162:
+choice
+       prompt "Timer frequency"
+       default HZ_250
+       help
+        Allows the configuration of the timer frequency.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#861: FILE: arch/score/Kconfig:168:
+       config HZ_48
+               bool "48 HZ" if SYS_SUPPORTS_48HZ || SYS_SUPPORTS_ARBIT_HZ
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#864: FILE: arch/score/Kconfig:171:
+       config HZ_100
+               bool "100 HZ" if SYS_SUPPORTS_100HZ || 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#865: FILE: arch/score/Kconfig:172:
+               bool "100 HZ" if SYS_SUPPORTS_100HZ || $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#868: FILE: arch/score/Kconfig:174:
+       config HZ_128
+               bool "128 HZ" if SYS_SUPPORTS_128HZ || 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#869: FILE: arch/score/Kconfig:175:
+               bool "128 HZ" if SYS_SUPPORTS_128HZ || $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#872: FILE: arch/score/Kconfig:177:
+       config HZ_250
+               bool "250 HZ" if SYS_SUPPORTS_250HZ || 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#873: FILE: arch/score/Kconfig:178:
+               bool "250 HZ" if SYS_SUPPORTS_250HZ || $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#876: FILE: arch/score/Kconfig:180:
+       config HZ_256
+               bool "256 HZ" if SYS_SUPPORTS_256HZ || 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#877: FILE: arch/score/Kconfig:181:
+               bool "256 HZ" if SYS_SUPPORTS_256HZ || $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#913: FILE: arch/score/Kconfig:216:
+config KEXEC
+       bool "Kexec system call (EXPERIMENTAL)"
+       depends on EXPERIMENTAL
+       help
+         kexec is a system call that implements the ability to shutdown 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#917: FILE: arch/score/Kconfig:220:
+         kexec is a system call that implements the ability to shutdown $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#919: FILE: arch/score/Kconfig:221:
+         current kernel, and to start another kernel.  It is like a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#921: FILE: arch/score/Kconfig:222:
+         but it is independent of the system firmware.   And like a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#928: FILE: arch/score/Kconfig:228:
+         is properly shutdown, so do not be surprised if this code does $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#930: FILE: arch/score/Kconfig:229:
+         initially work for you.  It may help to enable device $

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1016: FILE: arch/score/Kconfig:314:
+source "arch/score/Kconfig.debug"

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1043: FILE: arch/score/Kconfig.debug:13:
+         On some platforms, there is currently no way for the boot loader $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1045: FILE: arch/score/Kconfig.debug:14:
+         pass arguments to the kernel. For these platforms, you can $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1047: FILE: arch/score/Kconfig.debug:15:
+         some command-line options at build time by entering them here. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1056: FILE: arch/score/Kconfig.debug:23:
+         Enables the display of the minimum amount of free stack which $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1058: FILE: arch/score/Kconfig.debug:24:
+         task has ever had available in the sysrq-T and sysrq-P debug $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1067: FILE: arch/score/Kconfig.debug:32:
+         If you say Y here, some debugging macros will do run-time $

WARNING:TYPO_SPELLING: 'debuging' may be misspelled - perhaps 'debugging'?
#1070: FILE: arch/score/Kconfig.debug:34:
+         include/asm-score/debug.h for debuging macros.
                                        ^^^^^^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000148737.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 112 errors, 222 warnings, 37 checks, 1011 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000148737.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
