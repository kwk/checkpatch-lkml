WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#100: FILE: drivers/char/mem.c:908:
+	{13, "mem_notify", S_IRUGO, &mem_notify_fops},

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#109: FILE: include/linux/mem_notify.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#121: FILE: include/linux/mem_notify.h:13:
+#define MEM_NOTIFY_FREQ (HZ/5)
                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct file_operations should normally be const
#124: FILE: include/linux/mem_notify.h:16:
+extern struct file_operations mem_notify_fops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#126: FILE: include/linux/mem_notify.h:18:
+extern void __memory_pressure_notify(struct zone *zone, int pressure);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:BRACES: braces {} should be used on all arms of this statement
#133: FILE: include/linux/mem_notify.h:25:
+	if (pressure) {
[...]
+	} else if (likely(!zone->mem_notify_status))
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#140: FILE: include/linux/mem_notify.h:32:
+		pages_reserve = zone->lowmem_reserve[MAX_NR_ZONES-1];
 		                                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#141: FILE: include/linux/mem_notify.h:33:
+		if (unlikely(pages_free > (pages_high+pages_reserve)*2))
 		                                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#141: FILE: include/linux/mem_notify.h:33:
+		if (unlikely(pages_free > (pages_high+pages_reserve)*2))
 		                                                    ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#181: FILE: mm/mem_notify.c:1:
+/*

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#202: FILE: mm/mem_notify.c:22:
+#include <asm/atomic.h>

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#204: FILE: mm/mem_notify.c:24:
+#define MAX_PROC_WAKEUP_GUARD  (10*HZ)
                                   ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#226: FILE: mm/mem_notify.c:46:
+		long val = pressure ? 1 : -1;
+		atomic_long_add(val, &nr_under_memory_pressure_zones);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct file_operations should normally be const
#298: FILE: mm/mem_notify.c:118:
+struct file_operations mem_notify_fops = {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000324090.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 7 checks, 217 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000324090.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
