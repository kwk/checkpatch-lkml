WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#40: 
to synchronize_rcu() and a new synchronize_rcu_bh() on preemptable RCU,
                                                       ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#63: 
o	Does not address preemptable RCU.
 	                 ^^^^^^^^^^^

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched_expedited', prefer 'synchronize_rcu_expedited' instead
#115: FILE: include/linux/rcuclassic.h:163:
+	synchronize_sched_expedited();

Usage of a deprecated RCU API is detected.  It is recommended to replace
old flavourful RCU APIs by their new vanilla-RCU counterparts.

The full list of available RCU APIs can be viewed from the kernel docs.

See: https://www.kernel.org/doc/html/latest/RCU/whatisRCU.html#full-list-of-rcu-apis

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_rcu_bh_expedited', prefer 'synchronize_rcu_expedited' instead
#118: FILE: include/linux/rcuclassic.h:166:
+static inline void synchronize_rcu_bh_expedited(void)

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched_expedited', prefer 'synchronize_rcu_expedited' instead
#120: FILE: include/linux/rcuclassic.h:168:
+	synchronize_sched_expedited();

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#149: FILE: include/linux/rcupdate.h:55:
+extern void synchronize_rcu(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#150: FILE: include/linux/rcupdate.h:56:
+extern void rcu_barrier(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#151: FILE: include/linux/rcupdate.h:57:
+extern void rcu_barrier_bh(void);

WARNING:DEPRECATED_API: Deprecated use of 'rcu_barrier_bh', prefer 'rcu_barrier' instead
#151: FILE: include/linux/rcupdate.h:57:
+extern void rcu_barrier_bh(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#152: FILE: include/linux/rcupdate.h:58:
+extern void rcu_barrier_sched(void);

WARNING:DEPRECATED_API: Deprecated use of 'rcu_barrier_sched', prefer 'rcu_barrier' instead
#152: FILE: include/linux/rcupdate.h:58:
+extern void rcu_barrier_sched(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#153: FILE: include/linux/rcupdate.h:59:
+extern void synchronize_sched_expedited(void);

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched_expedited', prefer 'synchronize_rcu_expedited' instead
#153: FILE: include/linux/rcupdate.h:59:
+extern void synchronize_sched_expedited(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#154: FILE: include/linux/rcupdate.h:60:
+extern int sched_expedited_torture_stats(char *page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#157: FILE: include/linux/rcupdate.h:63:
+extern void rcu_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#158: FILE: include/linux/rcupdate.h:64:
+extern void rcu_scheduler_starting(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#159: FILE: include/linux/rcupdate.h:65:
+extern void synchronize_sched_expedited_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#160: FILE: include/linux/rcupdate.h:66:
+extern int rcu_needs_cpu(int cpu);

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_rcu_bh_expedited', prefer 'synchronize_rcu_expedited' instead
#193: FILE: include/linux/rcupreempt.h:82:
+static inline void synchronize_rcu_bh_expedited(void)

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched_expedited', prefer 'synchronize_rcu_expedited' instead
#212: FILE: include/linux/rcutree.h:284:
+	synchronize_sched_expedited();

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_rcu_bh_expedited', prefer 'synchronize_rcu_expedited' instead
#215: FILE: include/linux/rcutree.h:287:
+static inline void synchronize_rcu_bh_expedited(void)

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched_expedited', prefer 'synchronize_rcu_expedited' instead
#217: FILE: include/linux/rcutree.h:289:
+	synchronize_sched_expedited();

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_rcu_bh', prefer 'synchronize_rcu' instead
#259: FILE: kernel/rcupdate.c:112:
+void synchronize_rcu_bh(void)

WARNING:DEPRECATED_API: Deprecated use of 'call_rcu_bh', prefer 'call_rcu' instead
#268: FILE: kernel/rcupdate.c:121:
+	call_rcu_bh(&rcu.head, wakeme_after_rcu);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#290: FILE: kernel/rcupdate.c:260:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched_expedited', prefer 'synchronize_rcu_expedited' instead
#297: FILE: kernel/rcupdate.c:267:
+void synchronize_sched_expedited(void)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#330: FILE: kernel/rcupdate.c:300:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#420: FILE: kernel/rcupdate.c:390:
+				if (++nwait <= 10)
[...]
+				else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#421: FILE: kernel/rcupdate.c:391:
+					udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:BRACES: Unbalanced braces around else statement
#422: FILE: kernel/rcupdate.c:392:
+				else {

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#425: FILE: kernel/rcupdate.c:395:
+/*&&&&*/printk(KERN_ALERT "krcu_sched_expedited(): cpu=%d/%d, mycpu=%d\n", cpu, per_cpu(sched_expedited_done_qs, cpu), mycpu);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#425: FILE: kernel/rcupdate.c:395:
+/*&&&&*/printk(KERN_ALERT "krcu_sched_expedited(): cpu=%d/%d, mycpu=%d\n", cpu, per_cpu(sched_expedited_done_qs, cpu), mycpu);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'krcu_sched_expedited', this function's name, in a string
#425: FILE: kernel/rcupdate.c:395:
+/*&&&&*/printk(KERN_ALERT "krcu_sched_expedited(): cpu=%d/%d, mycpu=%d\n", cpu, per_cpu(sched_expedited_done_qs, cpu), mycpu);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tsp"
#449: FILE: kernel/rcupdate.c:419:
+		if (*tsp == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#464: FILE: kernel/rcupdate.c:434:
+/*&&&&*/printk(KERN_ALERT "synchronize_sched_expedited_notify() onlining cpu %ld\n", cpu);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'synchronize_sched_expedited_notify', this function's name, in a string
#464: FILE: kernel/rcupdate.c:434:
+/*&&&&*/printk(KERN_ALERT "synchronize_sched_expedited_notify() onlining cpu %ld\n", cpu);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tsp"
#470: FILE: kernel/rcupdate.c:440:
+		WARN_ON(*tsp == NULL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#486: FILE: kernel/rcupdate.c:456:
+/*&&&&*/printk(KERN_ALERT "synchronize_sched_expedited_notify() offlining cpu %ld\n", cpu);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'synchronize_sched_expedited_notify', this function's name, in a string
#486: FILE: kernel/rcupdate.c:456:
+/*&&&&*/printk(KERN_ALERT "synchronize_sched_expedited_notify() offlining cpu %ld\n", cpu);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#502: FILE: kernel/rcupdate.c:472:
+/*&&&&*/printk(KERN_ALERT "Initializing synchronize_sched_expedited()\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#512: FILE: kernel/rcupdate.c:482:
+^I^I^I^I^I        "krcu_sched_expedited");$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#512: FILE: kernel/rcupdate.c:482:
+	krcu_sched_expedited_task = kthread_run(krcu_sched_expedited, NULL,
+					        "krcu_sched_expedited");

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched_expedited', prefer 'synchronize_rcu_expedited' instead
#516: FILE: kernel/rcupdate.c:486:
+void synchronize_sched_expedited(void)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#604: FILE: kernel/rcutorture.c:342:
+^I.irq_capable ^I= 1,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#605: FILE: kernel/rcutorture.c:343:
+^I.name ^I^I= "rcu"$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000123893.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 26 warnings, 17 checks, 699 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000123893.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
