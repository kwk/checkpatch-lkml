WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#37: FILE: Makefile:4:
+EXTRAVERSION = .9
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#100: FILE: arch/x86/include/asm/msr-index.h:204:
+#define MSR_IA32_MISC_ENABLE_FAST_STRING	(1ULL << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#101: FILE: arch/x86/include/asm/msr-index.h:205:
+#define MSR_IA32_MISC_ENABLE_TCC		(1ULL << 1)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#102: FILE: arch/x86/include/asm/msr-index.h:206:
+#define MSR_IA32_MISC_ENABLE_EMON		(1ULL << 7)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#103: FILE: arch/x86/include/asm/msr-index.h:207:
+#define MSR_IA32_MISC_ENABLE_BTS_UNAVAIL	(1ULL << 11)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#104: FILE: arch/x86/include/asm/msr-index.h:208:
+#define MSR_IA32_MISC_ENABLE_PEBS_UNAVAIL	(1ULL << 12)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#105: FILE: arch/x86/include/asm/msr-index.h:209:
+#define MSR_IA32_MISC_ENABLE_ENHANCED_SPEEDSTEP	(1ULL << 16)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#106: FILE: arch/x86/include/asm/msr-index.h:210:
+#define MSR_IA32_MISC_ENABLE_MWAIT		(1ULL << 18)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#107: FILE: arch/x86/include/asm/msr-index.h:211:
+#define MSR_IA32_MISC_ENABLE_LIMIT_CPUID	(1ULL << 22)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#108: FILE: arch/x86/include/asm/msr-index.h:212:
+#define MSR_IA32_MISC_ENABLE_XTPR_DISABLE	(1ULL << 23)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#109: FILE: arch/x86/include/asm/msr-index.h:213:
+#define MSR_IA32_MISC_ENABLE_XD_DISABLE		(1ULL << 34)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#112: FILE: arch/x86/include/asm/msr-index.h:216:
+#define MSR_IA32_MISC_ENABLE_X87_COMPAT		(1ULL << 2)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#113: FILE: arch/x86/include/asm/msr-index.h:217:
+#define MSR_IA32_MISC_ENABLE_TM1		(1ULL << 3)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#114: FILE: arch/x86/include/asm/msr-index.h:218:
+#define MSR_IA32_MISC_ENABLE_SPLIT_LOCK_DISABLE	(1ULL << 4)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#115: FILE: arch/x86/include/asm/msr-index.h:219:
+#define MSR_IA32_MISC_ENABLE_L3CACHE_DISABLE	(1ULL << 6)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#116: FILE: arch/x86/include/asm/msr-index.h:220:
+#define MSR_IA32_MISC_ENABLE_SUPPRESS_LOCK	(1ULL << 8)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#117: FILE: arch/x86/include/asm/msr-index.h:221:
+#define MSR_IA32_MISC_ENABLE_PREFETCH_DISABLE	(1ULL << 9)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#118: FILE: arch/x86/include/asm/msr-index.h:222:
+#define MSR_IA32_MISC_ENABLE_FERR		(1ULL << 10)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#119: FILE: arch/x86/include/asm/msr-index.h:223:
+#define MSR_IA32_MISC_ENABLE_FERR_MULTIPLEX	(1ULL << 10)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#120: FILE: arch/x86/include/asm/msr-index.h:224:
+#define MSR_IA32_MISC_ENABLE_TM2		(1ULL << 13)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#121: FILE: arch/x86/include/asm/msr-index.h:225:
+#define MSR_IA32_MISC_ENABLE_ADJ_PREF_DISABLE	(1ULL << 19)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#122: FILE: arch/x86/include/asm/msr-index.h:226:
+#define MSR_IA32_MISC_ENABLE_SPEEDSTEP_LOCK	(1ULL << 20)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#123: FILE: arch/x86/include/asm/msr-index.h:227:
+#define MSR_IA32_MISC_ENABLE_L1D_CONTEXT	(1ULL << 24)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#124: FILE: arch/x86/include/asm/msr-index.h:228:
+#define MSR_IA32_MISC_ENABLE_DCU_PREF_DISABLE	(1ULL << 37)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#125: FILE: arch/x86/include/asm/msr-index.h:229:
+#define MSR_IA32_MISC_ENABLE_TURBO_DISABLE	(1ULL << 38)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#126: FILE: arch/x86/include/asm/msr-index.h:230:
+#define MSR_IA32_MISC_ENABLE_IP_PREF_DISABLE	(1ULL << 39)

WARNING:PREFER_DEV_LEVEL: Prefer dev_warn(... to dev_printk(KERN_WARNING, ...
#188: FILE: drivers/ata/ata_piix.c:1322:
+		dev_printk(KERN_WARNING, host->dev,

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#196: FILE: drivers/ata/ata_piix.c:1330:
 static int __devinit piix_init_sidpr(struct ata_host *host)

CHECK:BRACES: braces {} should be used on all arms of this statement
#408: FILE: drivers/md/dm-crypt.c:580:
+	if (likely(!base_io))
[...]
 	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#464: FILE: drivers/md/dm-ioctl.c:707:
+	    invalid_str(new_name, (void *) param + param_size) ||

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#797: FILE: drivers/usb/serial/ftdi_sio.h:900:
+#define ADI_VID ^I^I0x0456$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#798: FILE: drivers/usb/serial/ftdi_sio.h:901:
+#define ADI_GNICE_PID ^I^I0xF000$

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#852: FILE: drivers/usb/serial/option.c:405:
+	{ USB_DEVICE(NOVATELWIRELESS_VENDOR_ID, NOVATELWIRELESS_PRODUCT_U727) }, /* Novatel MC727/U727/USB727 */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space prohibited after that open parenthesis '('
#885: FILE: drivers/usb/storage/unusual_devs.h:222:
+UNUSUAL_DEV( 0x0421, 0x0492, 0x0452, 0x9999,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#886: FILE: drivers/usb/storage/unusual_devs.h:223:
+UNUSUAL_DEV( 0x0421, 0x0492, 0x0452, 0x9999,
 		"Nokia",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#895: FILE: drivers/usb/storage/unusual_devs.h:917:
+ * Thomas Bartosik <tbartdev@gmx-topmail.de> */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: space prohibited after that open parenthesis '('
#896: FILE: drivers/usb/storage/unusual_devs.h:918:
+UNUSUAL_DEV( 0x067b, 0x2507, 0x0001, 0x0100,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#897: FILE: drivers/usb/storage/unusual_devs.h:919:
+UNUSUAL_DEV( 0x067b, 0x2507, 0x0001, 0x0100,
 		"Prolific Technology Inc.",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#907: FILE: drivers/usb/storage/unusual_devs.h:1336:
+ * interface as an interface driver */

ERROR:SPACING: space prohibited after that open parenthesis '('
#908: FILE: drivers/usb/storage/unusual_devs.h:1337:
+UNUSUAL_DEV( 0x0af0, 0x7501, 0x0000, 0x0000,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#909: FILE: drivers/usb/storage/unusual_devs.h:1338:
+UNUSUAL_DEV( 0x0af0, 0x7501, 0x0000, 0x0000,
+		"Option",

ERROR:SPACING: space prohibited before that close parenthesis ')'
#912: FILE: drivers/usb/storage/unusual_devs.h:1341:
+		0 ),

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "req->ki_filp"
#946: FILE: fs/aio.c:495:
+		if (req->ki_filp != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "req->ki_eventfd"
#948: FILE: fs/aio.c:497:
+		if (req->ki_eventfd != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "req->ki_eventfd"
#986: FILE: fs/aio.c:541:
+	if (req->ki_eventfd != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "iocb->ki_eventfd"
#1001: FILE: fs/aio.c:1011:
+	if (iocb->ki_eventfd != NULL)

CHECK:SPACING: No space is necessary after a cast
#1054: FILE: fs/ecryptfs/crypto.c:1345:
+		return (unsigned long) page_address(page);

WARNING:TYPO_SPELLING: 'overriden' may be misspelled - perhaps 'overridden'?
#1198: FILE: init/Kconfig:758:
+	  disabled, and can be overriden runtime by setting
 	                       ^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1329: FILE: sound/pci/hda/hda_intel.c:2084:
+		printk(KERN_INFO

WARNING:SPLIT_STRING: quoted string split across lines
#1331: FILE: sound/pci/hda/hda_intel.c:2086:
+		       "hda_intel: position_fix set to %d "
+		       "for device %04x:%04x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:BRACES: Unbalanced braces around else statement
#1351: FILE: sound/pci/hda/hda_intel.c:2223:
+	else {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000150734.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 12 warnings, 36 checks, 1113 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000150734.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
