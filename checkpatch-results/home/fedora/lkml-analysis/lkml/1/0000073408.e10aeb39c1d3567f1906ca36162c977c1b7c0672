WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
This patch adds the core data instructures for target_core_mod and fabric module API for accessing

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#51: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#56: FILE: include/target/target_core_base.h:1:
+/****************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#79: FILE: include/target/target_core_base.h:24:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#80: FILE: include/target/target_core_base.h:25:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#84: FILE: include/target/target_core_base.h:29:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#97: FILE: include/target/target_core_base.h:42:
+#define SHUTDOWN_SIGS	(sigmask(SIGKILL)|sigmask(SIGINT)|sigmask(SIGABRT))
                      	                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#97: FILE: include/target/target_core_base.h:42:
+#define SHUTDOWN_SIGS	(sigmask(SIGKILL)|sigmask(SIGINT)|sigmask(SIGABRT))
                      	                                 ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#122: FILE: include/target/target_core_base.h:67:
+/* Used for se_subsystem_dev_t->se_dev_udev_path[], must be less than
+   PAGE_SIZE */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#122: FILE: include/target/target_core_base.h:67:
+   PAGE_SIZE */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#139: FILE: include/target/target_core_base.h:84:
+#define READ_BLOCK_LEN          ^I^I6$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#140: FILE: include/target/target_core_base.h:85:
+#define READ_CAP_LEN            ^I^I8$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#141: FILE: include/target/target_core_base.h:86:
+#define READ_POSITION_LEN       ^I^I20$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#195: FILE: include/target/target_core_base.h:140:
+#define TRANSPORT_ISTATE_PROCESSING ^I^I251$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#196: FILE: include/target/target_core_base.h:141:
+#define TRANSPORT_ISTATE_PROCESSED  ^I^I252$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#274: FILE: include/target/target_core_base.h:219:
+typedef struct se_obj_s {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#278: FILE: include/target/target_core_base.h:223:
+typedef enum {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#284: FILE: include/target/target_core_base.h:229:
+typedef enum {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#292: FILE: include/target/target_core_base.h:237:
+typedef struct t10_alua_s {

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#297: FILE: include/target/target_core_base.h:242:
+	spinlock_t tg_pt_gps_lock;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#303: FILE: include/target/target_core_base.h:248:
+	int (*alua_state_check)(struct se_cmd_s *, unsigned char *, u8 *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#303: FILE: include/target/target_core_base.h:248:
+	int (*alua_state_check)(struct se_cmd_s *, unsigned char *, u8 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8 *' should also have an identifier name
#303: FILE: include/target/target_core_base.h:248:
+	int (*alua_state_check)(struct se_cmd_s *, unsigned char *, u8 *);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#307: FILE: include/target/target_core_base.h:252:
+typedef struct t10_alua_lu_gp_s {

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#313: FILE: include/target/target_core_base.h:258:
+	spinlock_t lu_gp_lock;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#319: FILE: include/target/target_core_base.h:264:
+typedef struct t10_alua_lu_gp_member_s {

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#322: FILE: include/target/target_core_base.h:267:
+	spinlock_t lu_gp_mem_lock;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#328: FILE: include/target/target_core_base.h:273:
+typedef struct t10_alua_tg_pt_gp_s {

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#341: FILE: include/target/target_core_base.h:286:
+	spinlock_t tg_pt_gp_lock;

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#342: FILE: include/target/target_core_base.h:287:
+	struct mutex tg_pt_gp_md_mutex;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#349: FILE: include/target/target_core_base.h:294:
+typedef struct t10_alua_tg_pt_gp_member_s {

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#352: FILE: include/target/target_core_base.h:297:
+	spinlock_t tg_pt_gp_mem_lock;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#358: FILE: include/target/target_core_base.h:303:
+typedef struct t10_vpd_s {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#368: FILE: include/target/target_core_base.h:313:
+typedef struct t10_wwn_s {

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#373: FILE: include/target/target_core_base.h:318:
+	spinlock_t t10_vpd_lock;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#379: FILE: include/target/target_core_base.h:324:
+typedef enum {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#385: FILE: include/target/target_core_base.h:330:
+typedef struct t10_pr_registration_s {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#409: FILE: include/target/target_core_base.h:354:
+typedef struct t10_reservation_template_s {

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#417: FILE: include/target/target_core_base.h:362:
+	spinlock_t registration_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#418: FILE: include/target/target_core_base.h:363:
+	spinlock_t aptpl_reg_lock;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#423: FILE: include/target/target_core_base.h:368:
+	int (*t10_reservation_check)(struct se_cmd_s *, u32 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32 *' should also have an identifier name
#423: FILE: include/target/target_core_base.h:368:
+	int (*t10_reservation_check)(struct se_cmd_s *, u32 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#424: FILE: include/target/target_core_base.h:369:
+	int (*t10_reserve)(struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#425: FILE: include/target/target_core_base.h:370:
+	int (*t10_release)(struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#426: FILE: include/target/target_core_base.h:371:
+	int (*t10_seq_non_holder)(struct se_cmd_s *, unsigned char *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#426: FILE: include/target/target_core_base.h:371:
+	int (*t10_seq_non_holder)(struct se_cmd_s *, unsigned char *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#426: FILE: include/target/target_core_base.h:371:
+	int (*t10_seq_non_holder)(struct se_cmd_s *, unsigned char *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#427: FILE: include/target/target_core_base.h:372:
+	int (*t10_pr_register)(struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#428: FILE: include/target/target_core_base.h:373:
+	int (*t10_pr_clear)(struct se_cmd_s *);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#431: FILE: include/target/target_core_base.h:376:
+typedef struct se_queue_req_s {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#439: FILE: include/target/target_core_base.h:384:
+typedef struct se_queue_obj_s {

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#441: FILE: include/target/target_core_base.h:386:
+	spinlock_t		cmd_queue_lock;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#448: FILE: include/target/target_core_base.h:393:
+typedef struct se_transport_task_s {

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#473: FILE: include/target/target_core_base.h:418:
+	spinlock_t		t_state_lock;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#485: FILE: include/target/target_core_base.h:430:
+typedef struct se_task_s {

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_task_s *' should also have an identifier name
#509: FILE: include/target/target_core_base.h:454:
+	int (*transport_map_task)(struct se_task_s *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#509: FILE: include/target/target_core_base.h:454:
+	int (*transport_map_task)(struct se_task_s *, u32);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'task' may be better as '(task)' to avoid precedence issues
#517: FILE: include/target/target_core_base.h:462:
+#define TASK_CMD(task)	((struct se_cmd_s *)task->task_se_cmd)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'task' may be better as '(task)' to avoid precedence issues
#518: FILE: include/target/target_core_base.h:463:
+#define TASK_DEV(task)	((struct se_device_s *)task->se_dev)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#520: FILE: include/target/target_core_base.h:465:
+typedef struct se_transform_info_s {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#532: FILE: include/target/target_core_base.h:477:
+typedef struct se_offset_map_s {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#547: FILE: include/target/target_core_base.h:492:
+typedef struct se_map_sg_s {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#556: FILE: include/target/target_core_base.h:501:
+typedef struct se_unmap_sg_s {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#568: FILE: include/target/target_core_base.h:513:
+typedef struct se_cmd_s {

WARNING:REPEATED_WORD: Possible repeated word: 'iovecs'
#594: FILE: include/target/target_core_base.h:539:
+	/* Number of iovecs iovecs used for IP stack calls */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#620: FILE: include/target/target_core_base.h:565:
+	int (*transport_add_cmd_to_queue)(struct se_cmd_s *, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#620: FILE: include/target/target_core_base.h:565:
+	int (*transport_add_cmd_to_queue)(struct se_cmd_s *, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#621: FILE: include/target/target_core_base.h:566:
+	int (*transport_allocate_iovecs)(struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#622: FILE: include/target/target_core_base.h:567:
+	int (*transport_allocate_resources)(struct se_cmd_s *, u32, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#622: FILE: include/target/target_core_base.h:567:
+	int (*transport_allocate_resources)(struct se_cmd_s *, u32, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#622: FILE: include/target/target_core_base.h:567:
+	int (*transport_allocate_resources)(struct se_cmd_s *, u32, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#623: FILE: include/target/target_core_base.h:568:
+	int (*transport_cdb_transform)(struct se_cmd_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_transform_info_s *' should also have an identifier name
#623: FILE: include/target/target_core_base.h:568:
+	int (*transport_cdb_transform)(struct se_cmd_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#624: FILE: include/target/target_core_base.h:569:
+	int (*transport_cdb_transform)(struct se_cmd_s *,
+					struct se_transform_info_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#625: FILE: include/target/target_core_base.h:570:
+	int (*transport_do_transform)(struct se_cmd_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_transform_info_s *' should also have an identifier name
#625: FILE: include/target/target_core_base.h:570:
+	int (*transport_do_transform)(struct se_cmd_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#626: FILE: include/target/target_core_base.h:571:
+	int (*transport_do_transform)(struct se_cmd_s *,
+					struct se_transform_info_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#627: FILE: include/target/target_core_base.h:572:
+	int (*transport_emulate_cdb)(struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#628: FILE: include/target/target_core_base.h:573:
+	void (*transport_free_resources)(struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#629: FILE: include/target/target_core_base.h:574:
+	u32 (*transport_get_lba)(unsigned char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#630: FILE: include/target/target_core_base.h:575:
+	unsigned long long (*transport_get_long_lba)(unsigned char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_transform_info_s *' should also have an identifier name
#631: FILE: include/target/target_core_base.h:576:
+	struct se_task_s *(*transport_get_task)(struct se_transform_info_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#631: FILE: include/target/target_core_base.h:576:
+	struct se_task_s *(*transport_get_task)(struct se_transform_info_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#631: FILE: include/target/target_core_base.h:576:
+	struct se_task_s *(*transport_get_task)(struct se_transform_info_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_obj_lun_type_s *' should also have an identifier name
#631: FILE: include/target/target_core_base.h:576:
+	struct se_task_s *(*transport_get_task)(struct se_transform_info_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#632: FILE: include/target/target_core_base.h:577:
+	struct se_task_s *(*transport_get_task)(struct se_transform_info_s *,
+					struct se_cmd_s *, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#634: FILE: include/target/target_core_base.h:579:
+	int (*transport_map_buffers_to_tasks)(struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_unmap_sg_s *' should also have an identifier name
#635: FILE: include/target/target_core_base.h:580:
+	void (*transport_map_SG_segments)(struct se_unmap_sg_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#636: FILE: include/target/target_core_base.h:581:
+	void (*transport_passthrough_done)(struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_unmap_sg_s *' should also have an identifier name
#637: FILE: include/target/target_core_base.h:582:
+	void (*transport_unmap_SG_segments)(struct se_unmap_sg_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_map_sg_s *' should also have an identifier name
#638: FILE: include/target/target_core_base.h:583:
+	int (*transport_set_iovec_ptrs)(struct se_map_sg_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_unmap_sg_s *' should also have an identifier name
#638: FILE: include/target/target_core_base.h:583:
+	int (*transport_set_iovec_ptrs)(struct se_map_sg_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long long' should also have an identifier name
#640: FILE: include/target/target_core_base.h:585:
+	void (*transport_split_cdb)(unsigned long long, u32 *, unsigned char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32 *' should also have an identifier name
#640: FILE: include/target/target_core_base.h:585:
+	void (*transport_split_cdb)(unsigned long long, u32 *, unsigned char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#640: FILE: include/target/target_core_base.h:585:
+	void (*transport_split_cdb)(unsigned long long, u32 *, unsigned char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#641: FILE: include/target/target_core_base.h:586:
+	void (*transport_wait_for_tasks)(struct se_cmd_s *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#641: FILE: include/target/target_core_base.h:586:
+	void (*transport_wait_for_tasks)(struct se_cmd_s *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#641: FILE: include/target/target_core_base.h:586:
+	void (*transport_wait_for_tasks)(struct se_cmd_s *, int, int);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#643: FILE: include/target/target_core_base.h:588:
+	void (*callback)(struct se_cmd_s *cmd, void *callback_arg,
+			int complete_status);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'cmd' may be better as '(cmd)' to avoid precedence issues
#647: FILE: include/target/target_core_base.h:592:
+#define T_TASK(cmd)     ((se_transport_task_t *)(cmd->t_task))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'cmd' may be better as '(cmd)' to avoid precedence issues
#648: FILE: include/target/target_core_base.h:593:
+#define CMD_OBJ_API(cmd) ((struct se_obj_lun_type_s *)(cmd->se_obj_api))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'cmd' may be better as '(cmd)' to avoid precedence issues
#649: FILE: include/target/target_core_base.h:594:
+#define CMD_ORIG_OBJ_API(cmd) ((struct se_obj_lun_type_s *)	\
+				(cmd->se_orig_obj_api))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'cmd' may be better as '(cmd)' to avoid precedence issues
#651: FILE: include/target/target_core_base.h:596:
+#define CMD_TFO(cmd) ((struct target_core_fabric_ops *)cmd->se_tfo)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#653: FILE: include/target/target_core_base.h:598:
+typedef struct se_tmr_req_s {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#663: FILE: include/target/target_core_base.h:608:
+^Ivoid ^I^I^I*fabric_tmr_ptr;$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#671: FILE: include/target/target_core_base.h:616:
+typedef struct se_ua_s {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#679: FILE: include/target/target_core_base.h:624:
+typedef struct se_node_acl_s {

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#688: FILE: include/target/target_core_base.h:633:
+	spinlock_t		stats_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#694: FILE: include/target/target_core_base.h:639:
+	spinlock_t		device_list_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#695: FILE: include/target/target_core_base.h:640:
+	spinlock_t		nacl_sess_lock;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#701: FILE: include/target/target_core_base.h:646:
+typedef struct se_session_s {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#716: FILE: include/target/target_core_base.h:661:
+typedef struct se_lun_acl_s {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#725: FILE: include/target/target_core_base.h:670:
+typedef struct se_dev_entry_s {

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#743: FILE: include/target/target_core_base.h:688:
+	spinlock_t		ua_lock;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#749: FILE: include/target/target_core_base.h:694:
+typedef struct se_dev_attrib_s {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#765: FILE: include/target/target_core_base.h:710:
+typedef struct se_dev_snap_attrib_s {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#770: FILE: include/target/target_core_base.h:715:
+^Iint^I^Ienabled;^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NEW_TYPEDEFS: do not add new typedefs
#781: FILE: include/target/target_core_base.h:726:
+typedef struct se_subsystem_dev_s {

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#794: FILE: include/target/target_core_base.h:739:
+	spinlock_t      se_dev_lock;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#808: FILE: include/target/target_core_base.h:753:
+typedef struct se_device_s {

WARNING:TYPO_SPELLING: 'IDENTIFER' may be misspelled - perhaps 'IDENTIFIER'?
#814: FILE: include/target/target_core_base.h:759:
+	/* RELATIVE TARGET PORT IDENTIFER Counter */
 	                        ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#827: FILE: include/target/target_core_base.h:772:
+^Ivoid ^I^I^I*dev_ptr;$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#835: FILE: include/target/target_core_base.h:780:
+	spinlock_t		stats_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#853: FILE: include/target/target_core_base.h:798:
+	spinlock_t		delayed_cmd_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#854: FILE: include/target/target_core_base.h:799:
+	spinlock_t		ordered_cmd_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#855: FILE: include/target/target_core_base.h:800:
+	spinlock_t		execute_task_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#856: FILE: include/target/target_core_base.h:801:
+	spinlock_t		state_task_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#857: FILE: include/target/target_core_base.h:802:
+	spinlock_t		dev_alua_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#858: FILE: include/target/target_core_base.h:803:
+	spinlock_t		dev_reservation_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#859: FILE: include/target/target_core_base.h:804:
+	spinlock_t		dev_state_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#860: FILE: include/target/target_core_base.h:805:
+	spinlock_t		dev_status_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#861: FILE: include/target/target_core_base.h:806:
+	spinlock_t		dev_status_thr_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#862: FILE: include/target/target_core_base.h:807:
+	spinlock_t		se_port_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#863: FILE: include/target/target_core_base.h:808:
+	spinlock_t		se_tmr_lock;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_task_s *' should also have an identifier name
#877: FILE: include/target/target_core_base.h:822:
+	int (*write_pending)(struct se_task_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long long' should also have an identifier name
#878: FILE: include/target/target_core_base.h:823:
+	void (*dev_generate_cdb)(unsigned long long, u32 *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32 *' should also have an identifier name
#878: FILE: include/target/target_core_base.h:823:
+	void (*dev_generate_cdb)(unsigned long long, u32 *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#878: FILE: include/target/target_core_base.h:823:
+	void (*dev_generate_cdb)(unsigned long long, u32 *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#878: FILE: include/target/target_core_base.h:823:
+	void (*dev_generate_cdb)(unsigned long long, u32 *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#879: FILE: include/target/target_core_base.h:824:
+	void (*dev_generate_cdb)(unsigned long long, u32 *,
+					unsigned char *, int);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#903: FILE: include/target/target_core_base.h:848:
+typedef struct se_hba_s {

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#925: FILE: include/target/target_core_base.h:870:
+	spinlock_t		device_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#926: FILE: include/target/target_core_base.h:871:
+	spinlock_t		hba_queue_lock;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#936: FILE: include/target/target_core_base.h:881:
+typedef struct se_lun_s {

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#943: FILE: include/target/target_core_base.h:888:
+	spinlock_t		lun_acl_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#944: FILE: include/target/target_core_base.h:889:
+	spinlock_t		lun_cmd_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#945: FILE: include/target/target_core_base.h:890:
+	spinlock_t		lun_sep_lock;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#959: FILE: include/target/target_core_base.h:904:
+typedef struct se_port_s {

WARNING:TYPO_SPELLING: 'IDENTIFER' may be misspelled - perhaps 'IDENTIFIER'?
#960: FILE: include/target/target_core_base.h:905:
+	/* RELATIVE TARGET PORT IDENTIFER */
 	                        ^^^^^^^^^

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#971: FILE: include/target/target_core_base.h:916:
+	spinlock_t	sep_alua_lock;

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#972: FILE: include/target/target_core_base.h:917:
+	struct mutex	sep_tg_pt_md_mutex;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#980: FILE: include/target/target_core_base.h:925:
+typedef struct se_portal_group_s {

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#989: FILE: include/target/target_core_base.h:934:
+	spinlock_t		tpg_lun_lock;

WARNING:TYPO_SPELLING: 'assoicated' may be misspelled - perhaps 'associated'?
#996: FILE: include/target/target_core_base.h:941:
+	/* List of TCM sessions assoicated wth this TPG */
 	                        ^^^^^^^^^^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1005: FILE: include/target/target_core_base.h:950:
+typedef struct se_global_s {

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1019: FILE: include/target/target_core_base.h:964:
+	spinlock_t		g_device_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1020: FILE: include/target/target_core_base.h:965:
+	spinlock_t		hba_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1021: FILE: include/target/target_core_base.h:966:
+	spinlock_t		se_tpg_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1022: FILE: include/target/target_core_base.h:967:
+	spinlock_t		lu_gps_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1023: FILE: include/target/target_core_base.h:968:
+	spinlock_t		plugin_class_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1025: FILE: include/target/target_core_base.h:970:
+	spinlock_t		debug_dev_lock;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1036: FILE: include/target/target_core_fabric_ops.h:1:
+struct target_core_fabric_ops {

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#1040: FILE: include/target/target_core_fabric_ops.h:5:
+	char *(*tpg_get_wwn)(struct se_portal_group_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#1041: FILE: include/target/target_core_fabric_ops.h:6:
+	u16 (*tpg_get_tag)(struct se_portal_group_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#1042: FILE: include/target/target_core_fabric_ops.h:7:
+	u32 (*tpg_get_default_depth)(struct se_portal_group_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#1043: FILE: include/target/target_core_fabric_ops.h:8:
+	u32 (*tpg_get_pr_transport_id)(struct se_portal_group_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_node_acl_s *' should also have an identifier name
#1043: FILE: include/target/target_core_fabric_ops.h:8:
+	u32 (*tpg_get_pr_transport_id)(struct se_portal_group_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#1043: FILE: include/target/target_core_fabric_ops.h:8:
+	u32 (*tpg_get_pr_transport_id)(struct se_portal_group_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#1043: FILE: include/target/target_core_fabric_ops.h:8:
+	u32 (*tpg_get_pr_transport_id)(struct se_portal_group_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1044: FILE: include/target/target_core_fabric_ops.h:9:
+	u32 (*tpg_get_pr_transport_id)(struct se_portal_group_s *,
+				struct se_node_acl_s *, int *, unsigned char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#1045: FILE: include/target/target_core_fabric_ops.h:10:
+	u32 (*tpg_get_pr_transport_id_len)(struct se_portal_group_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_node_acl_s *' should also have an identifier name
#1045: FILE: include/target/target_core_fabric_ops.h:10:
+	u32 (*tpg_get_pr_transport_id_len)(struct se_portal_group_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#1045: FILE: include/target/target_core_fabric_ops.h:10:
+	u32 (*tpg_get_pr_transport_id_len)(struct se_portal_group_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1046: FILE: include/target/target_core_fabric_ops.h:11:
+	u32 (*tpg_get_pr_transport_id_len)(struct se_portal_group_s *,
+				struct se_node_acl_s *, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#1047: FILE: include/target/target_core_fabric_ops.h:12:
+	char *(*tpg_parse_pr_out_transport_id)(const char *, u32 *, char **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32 *' should also have an identifier name
#1047: FILE: include/target/target_core_fabric_ops.h:12:
+	char *(*tpg_parse_pr_out_transport_id)(const char *, u32 *, char **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char **' should also have an identifier name
#1047: FILE: include/target/target_core_fabric_ops.h:12:
+	char *(*tpg_parse_pr_out_transport_id)(const char *, u32 *, char **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#1048: FILE: include/target/target_core_fabric_ops.h:13:
+	int (*tpg_check_demo_mode)(struct se_portal_group_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#1049: FILE: include/target/target_core_fabric_ops.h:14:
+	int (*tpg_check_demo_mode_cache)(struct se_portal_group_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#1050: FILE: include/target/target_core_fabric_ops.h:15:
+	int (*tpg_check_demo_mode_write_protect)(struct se_portal_group_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#1051: FILE: include/target/target_core_fabric_ops.h:16:
+	void *(*tpg_alloc_fabric_acl)(struct se_portal_group_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_node_acl_s *' should also have an identifier name
#1051: FILE: include/target/target_core_fabric_ops.h:16:
+	void *(*tpg_alloc_fabric_acl)(struct se_portal_group_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1052: FILE: include/target/target_core_fabric_ops.h:17:
+	void *(*tpg_alloc_fabric_acl)(struct se_portal_group_s *,
+					struct se_node_acl_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#1053: FILE: include/target/target_core_fabric_ops.h:18:
+	void (*tpg_release_fabric_acl)(struct se_portal_group_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_node_acl_s *' should also have an identifier name
#1053: FILE: include/target/target_core_fabric_ops.h:18:
+	void (*tpg_release_fabric_acl)(struct se_portal_group_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1054: FILE: include/target/target_core_fabric_ops.h:19:
+	void (*tpg_release_fabric_acl)(struct se_portal_group_s *,
+					struct se_node_acl_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#1055: FILE: include/target/target_core_fabric_ops.h:20:
+	u32 (*tpg_get_inst_index)(struct se_portal_group_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#1056: FILE: include/target/target_core_fabric_ops.h:21:
+	void (*release_cmd_to_pool)(struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#1057: FILE: include/target/target_core_fabric_ops.h:22:
+	void (*release_cmd_direct)(struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#1058: FILE: include/target/target_core_fabric_ops.h:23:
+	int (*dev_del_lun)(struct se_portal_group_s *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#1058: FILE: include/target/target_core_fabric_ops.h:23:
+	int (*dev_del_lun)(struct se_portal_group_s *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_session_s *' should also have an identifier name
#1062: FILE: include/target/target_core_fabric_ops.h:27:
+	int (*shutdown_session)(struct se_session_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_session_s *' should also have an identifier name
#1063: FILE: include/target/target_core_fabric_ops.h:28:
+	void (*close_session)(struct se_session_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_session_s *' should also have an identifier name
#1064: FILE: include/target/target_core_fabric_ops.h:29:
+	void (*stop_session)(struct se_session_s *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1064: FILE: include/target/target_core_fabric_ops.h:29:
+	void (*stop_session)(struct se_session_s *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1064: FILE: include/target/target_core_fabric_ops.h:29:
+	void (*stop_session)(struct se_session_s *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_session_s *' should also have an identifier name
#1065: FILE: include/target/target_core_fabric_ops.h:30:
+	void (*fall_back_to_erl0)(struct se_session_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_session_s *' should also have an identifier name
#1066: FILE: include/target/target_core_fabric_ops.h:31:
+	int (*sess_logged_in)(struct se_session_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_session_s *' should also have an identifier name
#1067: FILE: include/target/target_core_fabric_ops.h:32:
+	u32 (*sess_get_index)(struct se_session_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_session_s *' should also have an identifier name
#1068: FILE: include/target/target_core_fabric_ops.h:33:
+	u32 (*sess_get_initiator_wwn)(struct se_session_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#1068: FILE: include/target/target_core_fabric_ops.h:33:
+	u32 (*sess_get_initiator_wwn)(struct se_session_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#1068: FILE: include/target/target_core_fabric_ops.h:33:
+	u32 (*sess_get_initiator_wwn)(struct se_session_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#1070: FILE: include/target/target_core_fabric_ops.h:35:
+	int (*write_pending)(struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#1071: FILE: include/target/target_core_fabric_ops.h:36:
+	int (*write_pending_status)(struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_node_acl_s *' should also have an identifier name
#1072: FILE: include/target/target_core_fabric_ops.h:37:
+	void (*set_default_node_attributes)(struct se_node_acl_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#1073: FILE: include/target/target_core_fabric_ops.h:38:
+	u32 (*get_task_tag)(struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#1074: FILE: include/target/target_core_fabric_ops.h:39:
+	int (*get_cmd_state)(struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#1075: FILE: include/target/target_core_fabric_ops.h:40:
+	void (*new_cmd_failure)(struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#1076: FILE: include/target/target_core_fabric_ops.h:41:
+	int (*queue_data_in)(struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#1077: FILE: include/target/target_core_fabric_ops.h:42:
+	int (*queue_status)(struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#1078: FILE: include/target/target_core_fabric_ops.h:43:
+	int (*queue_tm_rsp)(struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#1079: FILE: include/target/target_core_fabric_ops.h:44:
+	u16 (*set_fabric_sense_len)(struct se_cmd_s *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#1079: FILE: include/target/target_core_fabric_ops.h:44:
+	u16 (*set_fabric_sense_len)(struct se_cmd_s *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#1081: FILE: include/target/target_core_fabric_ops.h:46:
+	int (*is_state_remove)(struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1082: FILE: include/target/target_core_fabric_ops.h:47:
+	u64 (*pack_lun)(unsigned int);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000073408.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 152 warnings, 60 checks, 1022 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000073408.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
