WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#42: 
driver can use it to spin the disk down... and it is neccessary step
                                                     ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#59: FILE: drivers/scsi/Kconfig:60:
+config SCSI_DYNAMIC_PM
+	bool "SCSI dynamic Power Management support (EXPERIMENTAL)"
+	depends on SCSI && PM && EXPERIMENTAL
+	---help---
+	  This option enables support for dynamic (or runtime)
+	  power management of SCSI devices and host adapters.
+	  If you say Y here, you can use the sysfs "power/level"
+	  and "power/autosuspend" files to control manual or
+	  automatic suspend/resume of individual SCSI devices.
+
+	  If unsure say N.
+
 comment "SCSI support type (disk, tape, CD-ROM)"
 	depends on SCSI
 

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#175: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#180: FILE: drivers/scsi/scsi_pm.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'shost' may be better as '(shost)' to avoid precedence issues
#197: FILE: drivers/scsi/scsi_pm.c:18:
+#define shost_dbg(shost, format, arg...)	\
+		dev_dbg(&shost->shost_gendev , format , ## arg)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#198: FILE: drivers/scsi/scsi_pm.c:19:
+		dev_dbg(&shost->shost_gendev , format , ## arg)
 		                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#198: FILE: drivers/scsi/scsi_pm.c:19:
+		dev_dbg(&shost->shost_gendev , format , ## arg)
 		                                      ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'sdev' may be better as '(sdev)' to avoid precedence issues
#199: FILE: drivers/scsi/scsi_pm.c:20:
+#define sdev_dbg(sdev, format, arg...)		\
+		dev_dbg(&sdev->sdev_gendev , format , ## arg)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#200: FILE: drivers/scsi/scsi_pm.c:21:
+		dev_dbg(&sdev->sdev_gendev , format , ## arg)
 		                           ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#200: FILE: drivers/scsi/scsi_pm.c:21:
+		dev_dbg(&sdev->sdev_gendev , format , ## arg)
 		                                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#205: FILE: drivers/scsi/scsi_pm.c:26:
+#define SCSI_DEFAULT_AUTOSUSPEND_DELAY	(30*HZ)
                                       	   ^

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#228: FILE: drivers/scsi/scsi_pm.c:49:
+static void periodic_autosuspend_scan(struct Scsi_Host *shost)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#267: FILE: drivers/scsi/scsi_pm.c:88:
+	if (any_suspendable && (shost->shost_state == SHOST_RUNNING ||
+			shost->shost_state == SHOST_RECOVERY)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#268: FILE: drivers/scsi/scsi_pm.c:89:
+			shost->shost_state == SHOST_RECOVERY)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: drivers/scsi/scsi_pm.c:95:
+		queue_delayed_work(ksuspend_scsi_wq, &shost->autosuspend_work,
+				delay);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#303: FILE: drivers/scsi/scsi_pm.c:124:
+	if (sdev->autosuspend_delay < 0 || sdev->autosuspend_disabled
+			|| sdev->pm_usage_cnt > 0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#308: FILE: drivers/scsi/scsi_pm.c:129:
+	if (!(sdev->sdev_state == SDEV_RUNNING ||
+			sdev->sdev_state == SDEV_QUIESCE))

WARNING:BRACES: braces {} are not necessary for single statement blocks
#421: FILE: drivers/scsi/scsi_pm.c:242:
+	if (status == 0) {
+		sdev_dbg(sdev, "suspended\n");
+	}

ERROR:CODE_INDENT: code indent should use tabs where possible
#486: FILE: drivers/scsi/scsi_pm.c:307:
+ ^Ireturn status;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#486: FILE: drivers/scsi/scsi_pm.c:307:
+ ^Ireturn status;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: drivers/scsi/scsi_pm.c:307:
+ ^Ireturn status;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#594: FILE: drivers/scsi/scsi_pm.c:415:
+static int scsi_external_suspend_device(struct scsi_device *sdev,
+		pm_message_t msg)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#627: FILE: drivers/scsi/scsi_pm.c:448:
+	 * it again. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#639: FILE: drivers/scsi/scsi_pm.c:460:
+	 * we may also want to skip the upcoming system resume. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#678: FILE: drivers/scsi/scsi_pm.c:499:
+		if (req->cmd[0] == TEST_UNIT_READY ||
+				req->cmd[0] == START_STOP ||

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#715: FILE: drivers/scsi/scsi_pm.c:536:
+	if (sscanf(buf, "%d", &value) != 1 || value >= INT_MAX/HZ ||
 	                                                      ^

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#715: FILE: drivers/scsi/scsi_pm.c:536:
+	if (sscanf(buf, "%d", &value) != 1 || value >= INT_MAX/HZ ||
+			value <= - INT_MAX/HZ)
+		return -EINVAL;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#716: FILE: drivers/scsi/scsi_pm.c:537:
+	if (sscanf(buf, "%d", &value) != 1 || value >= INT_MAX/HZ ||
+			value <= - INT_MAX/HZ)

ERROR:SPACING: space prohibited after that '-' (ctx:WxW)
#716: FILE: drivers/scsi/scsi_pm.c:537:
+			value <= - INT_MAX/HZ)
 			         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#716: FILE: drivers/scsi/scsi_pm.c:537:
+			value <= - INT_MAX/HZ)
 			                  ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_autosuspend' to 'autosuspend_show' 'set_autosuspend' to 'autosuspend_store'
#729: FILE: drivers/scsi/scsi_pm.c:550:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#731: FILE: drivers/scsi/scsi_pm.c:552:
+static DEVICE_ATTR(autosuspend, S_IRUGO | S_IWUSR,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#756: FILE: drivers/scsi/scsi_pm.c:577:
+set_level(struct device *dev, struct device_attribute *attr,
+		const char *buf, size_t count)

CHECK:BRACES: braces {} should be used on all arms of this statement
#775: FILE: drivers/scsi/scsi_pm.c:596:
+	if (len == sizeof on_string - 1 &&
[...]
+	} else if (len == sizeof auto_string - 1 &&
[...]
+	} else if (len == sizeof suspend_string - 1 &&
[...]
+	} else
[...]

WARNING:SIZEOF_PARENTHESIS: sizeof on_string should be sizeof(on_string)
#775: FILE: drivers/scsi/scsi_pm.c:596:
+	if (len == sizeof on_string - 1 &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#776: FILE: drivers/scsi/scsi_pm.c:597:
+	if (len == sizeof on_string - 1 &&
+			strncmp(buf, on_string, len) == 0) {

WARNING:SIZEOF_PARENTHESIS: sizeof auto_string should be sizeof(auto_string)
#781: FILE: drivers/scsi/scsi_pm.c:602:
+	} else if (len == sizeof auto_string - 1 &&

WARNING:SIZEOF_PARENTHESIS: sizeof suspend_string should be sizeof(suspend_string)
#787: FILE: drivers/scsi/scsi_pm.c:608:
+	} else if (len == sizeof suspend_string - 1 &&

CHECK:BRACES: Unbalanced braces around else statement
#793: FILE: drivers/scsi/scsi_pm.c:614:
+	} else

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_level' to 'level_show' 'set_level' to 'level_store'
#802: FILE: drivers/scsi/scsi_pm.c:623:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#804: FILE: drivers/scsi/scsi_pm.c:625:
+static DEVICE_ATTR(level, S_IRUGO | S_IWUSR, show_level, set_level);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#811: FILE: drivers/scsi/scsi_pm.c:632:
+	rc = sysfs_add_file_to_group(&sdev->sdev_gendev.kobj,
+				&dev_attr_autosuspend.attr, power_group);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#814: FILE: drivers/scsi/scsi_pm.c:635:
+		rc = sysfs_add_file_to_group(&sdev->sdev_gendev.kobj,
+				&dev_attr_level.attr, power_group);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#868: FILE: drivers/scsi/scsi_pm.c:689:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#882: FILE: drivers/scsi/scsi_pm.c:703:
+	BUG();

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#944: FILE: drivers/scsi/scsi_priv.h:72:
+extern void scsi_run_queue(struct request_queue *q);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#953: FILE: drivers/scsi/scsi_priv.h:141:
+extern int scsi_bus_suspend(struct device *, pm_message_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#954: FILE: drivers/scsi/scsi_priv.h:142:
+extern int scsi_bus_resume(struct device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#954: FILE: drivers/scsi/scsi_priv.h:142:
+extern int scsi_bus_resume(struct device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#955: FILE: drivers/scsi/scsi_priv.h:143:
+extern int scsi_pm_state_check(struct scsi_device *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scsi_device *' should also have an identifier name
#955: FILE: drivers/scsi/scsi_priv.h:143:
+extern int scsi_pm_state_check(struct scsi_device *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#955: FILE: drivers/scsi/scsi_priv.h:143:
+extern int scsi_pm_state_check(struct scsi_device *, struct request *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#956: FILE: drivers/scsi/scsi_priv.h:144:
+extern int scsi_pm_device_stop(struct scsi_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scsi_device *' should also have an identifier name
#956: FILE: drivers/scsi/scsi_priv.h:144:
+extern int scsi_pm_device_stop(struct scsi_device *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#957: FILE: drivers/scsi/scsi_priv.h:145:
+extern int scsi_pm_host_stop(struct Scsi_Host *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct Scsi_Host *' should also have an identifier name
#957: FILE: drivers/scsi/scsi_priv.h:145:
+extern int scsi_pm_host_stop(struct Scsi_Host *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#959: FILE: drivers/scsi/scsi_priv.h:147:
+extern void scsi_autosuspend_host(struct Scsi_Host *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#960: FILE: drivers/scsi/scsi_priv.h:148:
+extern int scsi_autoresume_host(struct Scsi_Host *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct Scsi_Host *' should also have an identifier name
#960: FILE: drivers/scsi/scsi_priv.h:148:
+extern int scsi_autoresume_host(struct Scsi_Host *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#961: FILE: drivers/scsi/scsi_priv.h:149:
+extern void scsi_pm_host_initialize(struct Scsi_Host *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct Scsi_Host *' should also have an identifier name
#961: FILE: drivers/scsi/scsi_priv.h:149:
+extern void scsi_pm_host_initialize(struct Scsi_Host *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#962: FILE: drivers/scsi/scsi_priv.h:150:
+extern void scsi_mark_last_busy(struct scsi_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scsi_device *' should also have an identifier name
#962: FILE: drivers/scsi/scsi_priv.h:150:
+extern void scsi_mark_last_busy(struct scsi_device *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#963: FILE: drivers/scsi/scsi_priv.h:151:
+extern void scsi_use_ULD_pm(struct scsi_device *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scsi_device *' should also have an identifier name
#963: FILE: drivers/scsi/scsi_priv.h:151:
+extern void scsi_use_ULD_pm(struct scsi_device *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#963: FILE: drivers/scsi/scsi_priv.h:151:
+extern void scsi_use_ULD_pm(struct scsi_device *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#964: FILE: drivers/scsi/scsi_priv.h:152:
+extern void scsi_autosuspend_device(struct scsi_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scsi_device *' should also have an identifier name
#964: FILE: drivers/scsi/scsi_priv.h:152:
+extern void scsi_autosuspend_device(struct scsi_device *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#965: FILE: drivers/scsi/scsi_priv.h:153:
+extern int scsi_autoresume_device(struct scsi_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scsi_device *' should also have an identifier name
#965: FILE: drivers/scsi/scsi_priv.h:153:
+extern int scsi_autoresume_device(struct scsi_device *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#966: FILE: drivers/scsi/scsi_priv.h:154:
+extern int scsi_pm_create_device_files(struct scsi_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scsi_device *' should also have an identifier name
#966: FILE: drivers/scsi/scsi_priv.h:154:
+extern int scsi_pm_create_device_files(struct scsi_device *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#967: FILE: drivers/scsi/scsi_priv.h:155:
+extern void scsi_pm_device_initialize(struct scsi_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scsi_device *' should also have an identifier name
#967: FILE: drivers/scsi/scsi_priv.h:155:
+extern void scsi_pm_device_initialize(struct scsi_device *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#968: FILE: drivers/scsi/scsi_priv.h:156:
+extern int scsi_init_pm(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#969: FILE: drivers/scsi/scsi_priv.h:157:
+extern void scsi_exit_pm(void);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1179: FILE: drivers/scsi/sg.c:254:
+	retval = autoresume_rc = scsi_autoresume_device(sdp->device);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1239: FILE: include/scsi/scsi_device.h:182:
+					 *   suspend/resume methods */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000236055.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 34 warnings, 38 checks, 1127 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000236055.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
