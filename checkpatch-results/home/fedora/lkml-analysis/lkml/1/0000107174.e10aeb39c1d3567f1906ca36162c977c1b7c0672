WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
   git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip.git tracing-fixes-for-linus

WARNING:TYPO_SPELLING: 'inbalance' may be misspelled - perhaps 'imbalance'?
#48: 
      tracing/urgent: warn in case of ftrace_start_up inbalance
                                                      ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#200: FILE: arch/x86/kernel/ftrace.c:458:
+	if (ftrace_push_return_trace(old, self_addr, &trace.depth,
+		    frame_pointer) == -EBUSY) {

WARNING:TRACE_PRINTK: Do not use trace_printk() in production code (this can be ignored if built only with a debug config option)
#904: FILE: kernel/trace/ring_buffer_benchmark.c:206:
+	trace_printk("Starting ring buffer hammer\n");

WARNING:TRACE_PRINTK: Do not use trace_printk() in production code (this can be ignored if built only with a debug config option)
#913: FILE: kernel/trace/ring_buffer_benchmark.c:242:
+	trace_printk("End ring buffer hammer\n");

WARNING:TRACE_PRINTK: Do not use trace_printk() in production code (this can be ignored if built only with a debug config option)
#924: FILE: kernel/trace/ring_buffer_benchmark.c:265:
+		trace_printk("ERROR!\n");

WARNING:TRACE_PRINTK: Do not use trace_printk() in production code (this can be ignored if built only with a debug config option)
#925: FILE: kernel/trace/ring_buffer_benchmark.c:266:
+	trace_printk("Time:     %lld (usecs)\n", time);

WARNING:TRACE_PRINTK: Do not use trace_printk() in production code (this can be ignored if built only with a debug config option)
#926: FILE: kernel/trace/ring_buffer_benchmark.c:267:
+	trace_printk("Overruns: %lld\n", overruns);

WARNING:TRACE_PRINTK: Do not use trace_printk() in production code (this can be ignored if built only with a debug config option)
#929: FILE: kernel/trace/ring_buffer_benchmark.c:269:
+		trace_printk("Read:     (reader disabled)\n");

WARNING:TRACE_PRINTK: Do not use trace_printk() in production code (this can be ignored if built only with a debug config option)
#932: FILE: kernel/trace/ring_buffer_benchmark.c:271:
+		trace_printk("Read:     %ld  (by %s)\n", read,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#933: FILE: kernel/trace/ring_buffer_benchmark.c:272:
+		trace_printk("Read:     %ld  (by %s)\n", read,
 			read_events ? "events" : "pages");

WARNING:TRACE_PRINTK: Do not use trace_printk() in production code (this can be ignored if built only with a debug config option)
#938: FILE: kernel/trace/ring_buffer_benchmark.c:273:
+	trace_printk("Entries:  %lld\n", entries);

WARNING:TRACE_PRINTK: Do not use trace_printk() in production code (this can be ignored if built only with a debug config option)
#939: FILE: kernel/trace/ring_buffer_benchmark.c:274:
+	trace_printk("Total:    %lld\n", entries + overruns + read);

WARNING:TRACE_PRINTK: Do not use trace_printk() in production code (this can be ignored if built only with a debug config option)
#940: FILE: kernel/trace/ring_buffer_benchmark.c:275:
+	trace_printk("Missed:   %ld\n", missed);

WARNING:TRACE_PRINTK: Do not use trace_printk() in production code (this can be ignored if built only with a debug config option)
#941: FILE: kernel/trace/ring_buffer_benchmark.c:276:
+	trace_printk("Hit:      %ld\n", hit);

WARNING:TRACE_PRINTK: Do not use trace_printk() in production code (this can be ignored if built only with a debug config option)
#949: FILE: kernel/trace/ring_buffer_benchmark.c:283:
+		trace_printk("TIME IS ZERO??\n");

WARNING:TRACE_PRINTK: Do not use trace_printk() in production code (this can be ignored if built only with a debug config option)
#952: FILE: kernel/trace/ring_buffer_benchmark.c:285:
+	trace_printk("Entries per millisec: %ld\n", hit);

WARNING:TRACE_PRINTK: Do not use trace_printk() in production code (this can be ignored if built only with a debug config option)
#958: FILE: kernel/trace/ring_buffer_benchmark.c:290:
+		trace_printk("%ld ns per entry\n", avg);

WARNING:TRACE_PRINTK: Do not use trace_printk() in production code (this can be ignored if built only with a debug config option)
#966: FILE: kernel/trace/ring_buffer_benchmark.c:297:
+		trace_printk("Total iterations per millisec: %ld\n",

WARNING:TRACE_PRINTK: Do not use trace_printk() in production code (this can be ignored if built only with a debug config option)
#972: FILE: kernel/trace/ring_buffer_benchmark.c:302:
+			trace_printk("hit + missed overflowed and totalled zero!\n");

WARNING:TRACE_PRINTK: Do not use trace_printk() in production code (this can be ignored if built only with a debug config option)
#979: FILE: kernel/trace/ring_buffer_benchmark.c:308:
+		trace_printk("%ld ns per entry\n", avg);

WARNING:TRACE_PRINTK: Do not use trace_printk() in production code (this can be ignored if built only with a debug config option)
#988: FILE: kernel/trace/ring_buffer_benchmark.c:359:
+		trace_printk("Sleeping for 10 secs\n");

WARNING:CONSIDER_KSTRTO: strict_strtoll is obsolete, use kstrtoll instead
#1119: FILE: kernel/trace/trace_events_filter.c:583:
+			ret = strict_strtoll(pred->str_val, 0, &val);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: strict_strtoull is obsolete, use kstrtoull instead
#1121: FILE: kernel/trace/trace_events_filter.c:585:
+			ret = strict_strtoull(pred->str_val, 0, &val);

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pF' - use %pS instead
#1266: FILE: kernel/trace/trace_functions_graph.c:126:
+		WARN(1, "Bad frame pointer: expected %lx, received %lx\n"
+		     "  from func %pF return to %lx\n",
+		     current->ret_stack[index].fp,
+		     frame_pointer,
+		     (void *)current->ret_stack[index].func,
+		     current->ret_stack[index].ret);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000107174.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 23 warnings, 2 checks, 1114 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000107174.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
