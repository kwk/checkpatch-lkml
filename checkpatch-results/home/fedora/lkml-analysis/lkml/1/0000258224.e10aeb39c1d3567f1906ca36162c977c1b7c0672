CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: arch/powerpc/platforms/cell/cbe_thermal.c:101:
+static ssize_t spu_show_temp(struct sys_device *sysdev, struct sysdev_attribute *attr,
+			char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: arch/powerpc/platforms/cell/cbe_thermal.c:151:
+static ssize_t spu_show_throttle_end(struct sys_device *sysdev,
+			struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#157: FILE: arch/powerpc/platforms/cell/cbe_thermal.c:157:
+static ssize_t spu_show_throttle_begin(struct sys_device *sysdev,
+			struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#164: FILE: arch/powerpc/platforms/cell/cbe_thermal.c:163:
+static ssize_t spu_show_throttle_full_stop(struct sys_device *sysdev,
+			struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#171: FILE: arch/powerpc/platforms/cell/cbe_thermal.c:169:
+static ssize_t spu_store_throttle_end(struct sys_device *sysdev,
+			struct sysdev_attribute *attr, const char *buf, size_t size)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#178: FILE: arch/powerpc/platforms/cell/cbe_thermal.c:175:
+static ssize_t spu_store_throttle_begin(struct sys_device *sysdev,
+			struct sysdev_attribute *attr, const char *buf, size_t size)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#185: FILE: arch/powerpc/platforms/cell/cbe_thermal.c:181:
+static ssize_t spu_store_throttle_full_stop(struct sys_device *sysdev,
+			struct sysdev_attribute *attr, const char *buf, size_t size)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#195: FILE: arch/powerpc/platforms/cell/cbe_thermal.c:203:
+static ssize_t ppe_show_temp0(struct sys_device *sysdev,
+			struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: arch/powerpc/platforms/cell/cbe_thermal.c:210:
+static ssize_t ppe_show_temp1(struct sys_device *sysdev,
+			struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#210: FILE: arch/powerpc/platforms/cell/cbe_thermal.c:216:
+static ssize_t ppe_show_throttle_end(struct sys_device *sysdev,
+			struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#217: FILE: arch/powerpc/platforms/cell/cbe_thermal.c:222:
+static ssize_t ppe_show_throttle_begin(struct sys_device *sysdev,
+			struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#224: FILE: arch/powerpc/platforms/cell/cbe_thermal.c:228:
+static ssize_t ppe_show_throttle_full_stop(struct sys_device *sysdev,
+			struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#231: FILE: arch/powerpc/platforms/cell/cbe_thermal.c:234:
+static ssize_t ppe_store_throttle_end(struct sys_device *sysdev,
+			struct sysdev_attribute *attr, const char *buf, size_t size)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#238: FILE: arch/powerpc/platforms/cell/cbe_thermal.c:240:
+static ssize_t ppe_store_throttle_begin(struct sys_device *sysdev,
+			struct sysdev_attribute *attr, const char *buf, size_t size)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: arch/powerpc/platforms/cell/cbe_thermal.c:246:
+static ssize_t ppe_store_throttle_full_stop(struct sys_device *sysdev,
+			struct sysdev_attribute *attr, const char *buf, size_t size)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#259: FILE: arch/s390/kernel/time.c:1085:
+static ssize_t etr_online_show(struct sys_device *dev,
+				struct sysdev_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#280: FILE: arch/s390/kernel/time.c:1124:
+static ssize_t etr_stepping_control_show(struct sys_device *dev,
+					struct sysdev_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#291: FILE: arch/s390/kernel/time.c:1134:
+static ssize_t etr_mode_code_show(struct sys_device *dev,
+				struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#311: FILE: arch/s390/kernel/time.c:1158:
+static ssize_t etr_network_id_show(struct sys_device *dev,
+				struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#321: FILE: arch/s390/kernel/time.c:1170:
+static ssize_t etr_id_show(struct sys_device *dev,
+			struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#331: FILE: arch/s390/kernel/time.c:1182:
+static ssize_t etr_port_number_show(struct sys_device *dev,
+			struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#341: FILE: arch/s390/kernel/time.c:1194:
+static ssize_t etr_coupled_show(struct sys_device *dev,
+			struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#351: FILE: arch/s390/kernel/time.c:1206:
+static ssize_t etr_local_time_show(struct sys_device *dev,
+			struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#361: FILE: arch/s390/kernel/time.c:1218:
+static ssize_t etr_utc_offset_show(struct sys_device *dev,
+			struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#385: FILE: arch/sparc64/kernel/sysfs.c:140:
+static ssize_t show_mmustat_enable(struct sys_device *s,
+				struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#393: FILE: arch/sparc64/kernel/sysfs.c:147:
+static ssize_t store_mmustat_enable(struct sys_device *s,
+			struct sysdev_attribute *attr, const char *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#437: FILE: drivers/base/cpu.c:33:
+static ssize_t __ref store_online(struct sys_device *dev, struct sysdev_attribute *attr,
+				 const char *buf, size_t count)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sys_device *' should also have an identifier name
#495: FILE: include/linux/sysdev.h:102:
+	ssize_t (*show)(struct sys_device *, struct sysdev_attribute *, char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sysdev_attribute *' should also have an identifier name
#495: FILE: include/linux/sysdev.h:102:
+	ssize_t (*show)(struct sys_device *, struct sysdev_attribute *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#495: FILE: include/linux/sysdev.h:102:
+	ssize_t (*show)(struct sys_device *, struct sysdev_attribute *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sys_device *' should also have an identifier name
#496: FILE: include/linux/sysdev.h:103:
+	ssize_t (*store)(struct sys_device *, struct sysdev_attribute *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sysdev_attribute *' should also have an identifier name
#496: FILE: include/linux/sysdev.h:103:
+	ssize_t (*store)(struct sys_device *, struct sysdev_attribute *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#496: FILE: include/linux/sysdev.h:103:
+	ssize_t (*store)(struct sys_device *, struct sysdev_attribute *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#496: FILE: include/linux/sysdev.h:103:
+	ssize_t (*store)(struct sys_device *, struct sysdev_attribute *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#536: FILE: arch/powerpc/platforms/cell/spu_base.c:707:
+static ssize_t spu_stat_show(struct sys_device *sysdev,
+				struct sysdev_attribute *attr, char *buf)

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#549: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:767:
+	static ssize_t show_ ## name(struct sys_device *s,		\
+				     struct sysdev_attribute *attr, char *buf) { \

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#554: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:771:
+	static ssize_t set_ ## name(struct sys_device *s,		\
+				    struct sysdev_attribute *attr,	\
+				   const char *buf,size_t siz) {	\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#556: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:773:
+				   const char *buf,size_t siz) {	\
 				                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#566: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:792:
+static ssize_t show_trigger(struct sys_device *s, struct sysdev_attribute *attr,
+				char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#575: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:800:
+static ssize_t set_trigger(struct sys_device *s, struct sysdev_attribute *attr,
+				const char *buf,size_t siz)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#575: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:800:
+				const char *buf,size_t siz)
 				               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#622: FILE: arch/arm/kernel/time.c:134:
+static ssize_t leds_store(struct sys_device *dev,
+			struct sysdev_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#633: FILE: arch/arm/kernel/time.c:438:
+static ssize_t timer_show_dyn_tick(struct sys_device *dev,
+			struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#641: FILE: arch/arm/kernel/time.c:445:
+static ssize_t timer_set_dyn_tick(struct sys_device *dev,
+			struct sysdev_attribute *attr, const char *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#678: FILE: arch/x86/kernel/microcode.c:677:
+static ssize_t version_show(struct sys_device *dev,
+			struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#687: FILE: arch/x86/kernel/microcode.c:685:
+static ssize_t pf_show(struct sys_device *dev,
+			struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#701: FILE: drivers/base/memory.c:96:
+static ssize_t show_mem_phys_index(struct sys_device *dev,
+			struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#711: FILE: drivers/base/memory.c:107:
+static ssize_t show_mem_state(struct sys_device *dev,
+			struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#745: FILE: drivers/base/node.c:40:
+static inline ssize_t node_read_cpumask(struct sys_device *dev,
+				struct sysdev_attribute *attr, char *buf)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#750: FILE: drivers/base/node.c:44:
 }
+static inline ssize_t node_read_cpulist(struct sys_device *dev,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#751: FILE: drivers/base/node.c:45:
+static inline ssize_t node_read_cpulist(struct sys_device *dev,
+				struct sysdev_attribute *attr, char *buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#760: FILE: drivers/base/node.c:54:
+static ssize_t node_read_meminfo(struct sys_device * dev,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#761: FILE: drivers/base/node.c:55:
+static ssize_t node_read_meminfo(struct sys_device * dev,
+			struct sysdev_attribute *attr, char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#761: FILE: drivers/base/node.c:55:
+			struct sysdev_attribute *attr, char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#770: FILE: drivers/base/node.c:118:
+static ssize_t node_read_numastat(struct sys_device * dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#771: FILE: drivers/base/node.c:119:
+static ssize_t node_read_numastat(struct sys_device * dev,
+				struct sysdev_attribute *attr, char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#771: FILE: drivers/base/node.c:119:
+				struct sysdev_attribute *attr, char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#780: FILE: drivers/base/node.c:137:
+static ssize_t node_read_distance(struct sys_device * dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#781: FILE: drivers/base/node.c:138:
+static ssize_t node_read_distance(struct sys_device * dev,
+			struct sysdev_attribute *attr, char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#781: FILE: drivers/base/node.c:138:
+			struct sysdev_attribute *attr, char * buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#828: FILE: drivers/cpuidle/sysfs.c:25:
+static ssize_t show_available_governors(struct sys_device *dev,
+		struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#838: FILE: drivers/cpuidle/sysfs.c:44:
+static ssize_t show_current_driver(struct sys_device *dev,
+		struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#848: FILE: drivers/cpuidle/sysfs.c:59:
+static ssize_t show_current_governor(struct sys_device *dev,
+			struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#870: FILE: arch/avr32/kernel/cpu.c:30:
+static ssize_t show_pc0event(struct sys_device *dev,
+			struct sysdev_attribute *attr, char *buf)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#878: FILE: arch/avr32/kernel/cpu.c:37:
 }
+static ssize_t store_pc0event(struct sys_device *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#879: FILE: arch/avr32/kernel/cpu.c:38:
+static ssize_t store_pc0event(struct sys_device *dev,
+			struct sysdev_attribute *attr, const char *buf,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#888: FILE: arch/avr32/kernel/cpu.c:51:
 }
+static ssize_t show_pc0count(struct sys_device *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#889: FILE: arch/avr32/kernel/cpu.c:52:
+static ssize_t show_pc0count(struct sys_device *dev,
+			struct sysdev_attribute *attr, char *buf)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#898: FILE: arch/avr32/kernel/cpu.c:59:
 }
+static ssize_t store_pc0count(struct sys_device *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#899: FILE: arch/avr32/kernel/cpu.c:60:
+static ssize_t store_pc0count(struct sys_device *dev,
+				struct sysdev_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#910: FILE: arch/avr32/kernel/cpu.c:75:
+static ssize_t show_pc1event(struct sys_device *dev,
+				struct sysdev_attribute *attr, char *buf)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#918: FILE: arch/avr32/kernel/cpu.c:82:
 }
+static ssize_t store_pc1event(struct sys_device *dev,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#928: FILE: arch/avr32/kernel/cpu.c:96:
 }
+static ssize_t show_pc1count(struct sys_device *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#929: FILE: arch/avr32/kernel/cpu.c:97:
+static ssize_t show_pc1count(struct sys_device *dev,
+				struct sysdev_attribute *attr, char *buf)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#937: FILE: arch/avr32/kernel/cpu.c:104:
 }
+static ssize_t store_pc1count(struct sys_device *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#938: FILE: arch/avr32/kernel/cpu.c:105:
+static ssize_t store_pc1count(struct sys_device *dev,
+				struct sysdev_attribute *attr, const char *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#948: FILE: arch/avr32/kernel/cpu.c:120:
+static ssize_t show_pccycles(struct sys_device *dev,
+				struct sysdev_attribute *attr, char *buf)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#956: FILE: arch/avr32/kernel/cpu.c:127:
 }
+static ssize_t store_pccycles(struct sys_device *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#957: FILE: arch/avr32/kernel/cpu.c:128:
+static ssize_t store_pccycles(struct sys_device *dev,
+				struct sysdev_attribute *attr, const char *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#967: FILE: arch/avr32/kernel/cpu.c:143:
+static ssize_t show_pcenable(struct sys_device *dev,
+			struct sysdev_attribute *attr, char *buf)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#975: FILE: arch/avr32/kernel/cpu.c:150:
 }
+static ssize_t store_pcenable(struct sys_device *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1010: FILE: arch/ia64/kernel/err_inject.c:82:
+store_call_start(struct sys_device *dev, struct sysdev_attribute *attr,
+		const char *buf, size_t size)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1020: FILE: arch/ia64/kernel/err_inject.c:131:
+show_virtual_to_phys(struct sys_device *dev, struct sysdev_attribute *attr,
+			char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1029: FILE: arch/ia64/kernel/err_inject.c:139:
+store_virtual_to_phys(struct sys_device *dev, struct sysdev_attribute *attr,
+			const char *buf, size_t size)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1039: FILE: arch/ia64/kernel/err_inject.c:163:
+show_err_data_buffer(struct sys_device *dev,
+			struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1049: FILE: arch/ia64/kernel/err_inject.c:175:
+store_err_data_buffer(struct sys_device *dev,
+			struct sysdev_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1064: FILE: arch/s390/kernel/smp.c:872:
+static ssize_t cpu_configure_show(struct sys_device *dev,
+				struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1075: FILE: arch/s390/kernel/smp.c:883:
+static ssize_t cpu_configure_store(struct sys_device *dev,
+				  struct sysdev_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1106: FILE: arch/s390/kernel/smp.c:982:
+static ssize_t show_capability(struct sys_device *dev,
+				struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1116: FILE: arch/s390/kernel/smp.c:995:
+static ssize_t show_idle_count(struct sys_device *dev,
+				struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1126: FILE: arch/s390/kernel/smp.c:1009:
+static ssize_t show_idle_time(struct sys_device *dev,
+				struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1184: FILE: arch/sh/drivers/dma/dma-sysfs.c:62:
+static ssize_t dma_show_dev_id(struct sys_device *dev,
+				struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1209: FILE: arch/sh/drivers/dma/dma-sysfs.c:95:
+static ssize_t dma_show_mode(struct sys_device *dev,
+				struct sysdev_attribute *attr, char *buf)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1225: FILE: arch/sh/drivers/dma/dma-sysfs.c:113:
+static ssize_t dma_show_##field(struct sys_device *dev, ^I^I\$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1240: FILE: kernel/sched.c:7430:
+static ssize_t sched_mc_power_savings_show(struct sys_device *dev,
+				struct sysdev_attribute *attr, char *page)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1255: FILE: kernel/sched.c:7446:
+static ssize_t sched_smt_power_savings_show(struct sys_device *dev,
+				struct sysdev_attribute *attr, char *page)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000258224.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 8 warnings, 78 checks, 1002 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000258224.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
