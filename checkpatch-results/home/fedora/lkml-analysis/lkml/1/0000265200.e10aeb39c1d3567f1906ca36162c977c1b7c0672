WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#123: FILE: drivers/usb/serial/keyspan.c:134:
+	/* added to support 49wg, where data from all 4 ports comes in
+	   on 1 EP and high-speed supported */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#123: FILE: drivers/usb/serial/keyspan.c:134:
+	   on 1 EP and high-speed supported */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#144: FILE: drivers/usb/serial/keyspan.c:190:
+   within this driver. */

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#193: FILE: drivers/usb/serial/keyspan.c:250:
+	dbg("%s", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: drivers/usb/serial/keyspan.c:264:
+static void keyspan_set_termios(struct tty_struct *tty,
 		struct usb_serial_port *port, struct ktermios *old_termios)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#245: FILE: drivers/usb/serial/keyspan.c:345:
+^Iint ^I^I^I^Ierr, maxDataLen, dataOffset;$

CHECK:CAMELCASE: Avoid CamelCase: <maxDataLen>
#245: FILE: drivers/usb/serial/keyspan.c:345:
+	int 				err, maxDataLen, dataOffset;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <dataOffset>
#245: FILE: drivers/usb/serial/keyspan.c:345:
+	int 				err, maxDataLen, dataOffset;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!this_urb"
#272: FILE: drivers/usb/serial/keyspan.c:370:
+		if (this_urb == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#280: FILE: drivers/usb/serial/keyspan.c:377:
+		dbg("%s - endpoint %d flip %d",
+			__func__, usb_pipeendpoint(this_urb->pipe), flip);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#294: FILE: drivers/usb/serial/keyspan.c:388:
+		/* First byte in buffer is "last flag" (except for usa19hx)
+		   - unused so for now so set to zero */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#294: FILE: drivers/usb/serial/keyspan.c:388:
+		   - unused so for now so set to zero */

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#318: FILE: drivers/usb/serial/keyspan.c:420:
+	dbg("%s", __func__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#328: FILE: drivers/usb/serial/keyspan.c:436:
+			/* no errors on individual bytes, only
+			   possible overrun err */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#328: FILE: drivers/usb/serial/keyspan.c:436:
+			   possible overrun err */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#359: FILE: drivers/usb/serial/keyspan.c:467:
+			dbg("%s - resubmit read urb failed. (%d)",
+					__func__, err);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#384: FILE: drivers/usb/serial/keyspan.c:488:
+	dbg("%s", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#397: FILE: drivers/usb/serial/keyspan.c:503:
+		keyspan_usa26_send_setup(port->serial, port,
+						p_priv->resend_cont - 1);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#439: FILE: drivers/usb/serial/keyspan.c:572:
+	dbg("%s", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#448: FILE: drivers/usb/serial/keyspan.c:585:
+	dbg("%s", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#473: FILE: drivers/usb/serial/keyspan.c:618:
+				dbg("%s - resubmit read urb failed. (%d)",
+								__func__, err);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#483: FILE: drivers/usb/serial/keyspan.c:628:
+	dbg("%s", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#495: FILE: drivers/usb/serial/keyspan.c:642:
+		keyspan_usa28_send_setup(port->serial, port,
+						p_priv->resend_cont - 1);

CHECK:CAMELCASE: Avoid CamelCase: <keyspan_usa28_portStatusMessage>
#508: FILE: drivers/usb/serial/keyspan.c:674:
+	msg = (struct keyspan_usa28_portStatusMessage *)data;

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#539: FILE: drivers/usb/serial/keyspan.c:709:
+	dbg("%s", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#548: FILE: drivers/usb/serial/keyspan.c:720:
+	dbg("%s", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#560: FILE: drivers/usb/serial/keyspan.c:730:
+			keyspan_usa49_send_setup(serial, port,
+						p_priv->resend_cont - 1);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#569: FILE: drivers/usb/serial/keyspan.c:749:
+	dbg("%s", __func__);

CHECK:CAMELCASE: Avoid CamelCase: <keyspan_usa49_portStatusMessage>
#579: FILE: drivers/usb/serial/keyspan.c:759:
+			sizeof(struct keyspan_usa49_portStatusMessage)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#598: FILE: drivers/usb/serial/keyspan.c:774:
+		dbg("%s - Unexpected port number %d",
+					__func__, msg->portNumber);

CHECK:CAMELCASE: Avoid CamelCase: <portNumber>
#598: FILE: drivers/usb/serial/keyspan.c:774:
+					__func__, msg->portNumber);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#627: FILE: drivers/usb/serial/keyspan.c:806:
+	dbg("%s", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#636: FILE: drivers/usb/serial/keyspan.c:818:
+	dbg("%s", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#668: FILE: drivers/usb/serial/keyspan.c:859:
+			dbg("%s - resubmit read urb failed. (%d)",
+							__func__, err);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#678: FILE: drivers/usb/serial/keyspan.c:872:
+	dbg("%s", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#688: FILE: drivers/usb/serial/keyspan.c:891:
+				dbg("%s - Unexpected port number %d",
 					__func__, data[i]);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#696: FILE: drivers/usb/serial/keyspan.c:943:
+	dbg("%s", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#705: FILE: drivers/usb/serial/keyspan.c:956:
+	dbg("%s", __func__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#716: FILE: drivers/usb/serial/keyspan.c:972:
+		   otherwise looks like usa26 data format */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#730: FILE: drivers/usb/serial/keyspan.c:981:
+				/* no errors on individual bytes, only
+				   possible overrun err*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#730: FILE: drivers/usb/serial/keyspan.c:981:
+				   possible overrun err*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#744: FILE: drivers/usb/serial/keyspan.c:988:
+					tty_insert_flip_char(tty, data[i],
+									err);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#754: FILE: drivers/usb/serial/keyspan.c:1001:
+					tty_insert_flip_char(tty, data[i+1],
 					                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#755: FILE: drivers/usb/serial/keyspan.c:1002:
+					tty_insert_flip_char(tty, data[i+1],
+									flag);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#773: FILE: drivers/usb/serial/keyspan.c:1015:
+			dbg("%s - resubmit read urb failed. (%d)",
+							__func__, err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#811: FILE: drivers/usb/serial/keyspan.c:1084:
+		keyspan_usa90_send_setup(port->serial, port,
+						p_priv->resend_cont - 1);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#820: FILE: drivers/usb/serial/keyspan.c:1100:
+	dbg("%s", __func__);

CHECK:CAMELCASE: Avoid CamelCase: <keyspan_usa67_portStatusMessage>
#830: FILE: drivers/usb/serial/keyspan.c:1110:
+			sizeof(struct keyspan_usa67_portStatusMessage)) {

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#848: FILE: drivers/usb/serial/keyspan.c:1155:
+	dbg("%s", __func__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "this_urb"
#875: FILE: drivers/usb/serial/keyspan.c:1194:
+	if (this_urb != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "this_urb"
#883: FILE: drivers/usb/serial/keyspan.c:1199:
+		if (this_urb != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!urb"
#897: FILE: drivers/usb/serial/keyspan.c:1241:
+		if (urb == NULL)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#904: FILE: drivers/usb/serial/keyspan.c:1246:
+		/* make sure endpoint data toggle is synchronized
+		   with the device */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#904: FILE: drivers/usb/serial/keyspan.c:1246:
+		   with the device */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#913: FILE: drivers/usb/serial/keyspan.c:1251:
+			dbg("%s - submit urb %d failed (%d)",
+							__func__, i, err);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!urb"
#920: FILE: drivers/usb/serial/keyspan.c:1257:
+		if (urb == NULL)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#925: FILE: drivers/usb/serial/keyspan.c:1261:
+		/* usb_settoggle(urb->dev, usb_pipeendpoint(urb->pipe),
+						usb_pipeout(urb->pipe), 0); */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#925: FILE: drivers/usb/serial/keyspan.c:1261:
+						usb_pipeout(urb->pipe), 0); */

CHECK:CAMELCASE: Avoid CamelCase: <bcdDevice>
#977: FILE: drivers/usb/serial/keyspan.c:1350:
+	if ((le16_to_cpu(serial->dev->descriptor.bcdDevice) & 0x8000)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1071: FILE: drivers/usb/serial/keyspan.c:1478:
+static struct urb *keyspan_setup_urb(struct usb_serial *serial, int endpoint,
 				      int dir, void *ctx, char *buf, int len,

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1101: FILE: drivers/usb/serial/keyspan.c:1592:
+	dbg("%s", __func__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1113: FILE: drivers/usb/serial/keyspan.c:1601:
+	/* Allocate and set up urbs for each one that is in use,
+	   starting with instat endpoints */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1113: FILE: drivers/usb/serial/keyspan.c:1601:
+	   starting with instat endpoints */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1171: FILE: drivers/usb/serial/keyspan.c:1672:
+	/* Any "standard" rate over 57k6 is marginal on the USA-19
+	   as we run out of divisor resolution. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1171: FILE: drivers/usb/serial/keyspan.c:1672:
+	   as we run out of divisor resolution. */

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1179: FILE: drivers/usb/serial/keyspan.c:1680:
+		return KEYSPAN_INVALID_BAUD_RATE;
+	else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1206: FILE: drivers/usb/serial/keyspan.c:1693:
+		dbg("%s - %d %02x %02x.",
+				__func__, baud_rate, *rate_hi, *rate_low);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1262: FILE: drivers/usb/serial/keyspan.c:1728:
+		dbg("%s - %d %02x %02x.",
+			__func__, baud_rate, *rate_hi, *rate_low);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1297: FILE: drivers/usb/serial/keyspan.c:1753:
+	/* Calculate prescaler by trying them all and looking
+	   for best fit */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1297: FILE: drivers/usb/serial/keyspan.c:1753:
+	   for best fit */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1318: FILE: drivers/usb/serial/keyspan.c:1769:
+		diff = (res > b16) ? (res-b16) : (b16-res);
 		                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1318: FILE: drivers/usb/serial/keyspan.c:1769:
+		diff = (res > b16) ? (res-b16) : (b16-res);
 		                                     ^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1383: FILE: drivers/usb/serial/keyspan.c:1814:
+		return KEYSPAN_INVALID_BAUD_RATE;
+	else

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1403: FILE: drivers/usb/serial/keyspan.c:1818:
+	/* check for out of range, based on portnum,
+	   and return result */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1403: FILE: drivers/usb/serial/keyspan.c:1818:
+	   and return result */

CHECK:BRACES: braces {} should be used on all arms of this statement
#1408: FILE: drivers/usb/serial/keyspan.c:1823:
+		if (portnum == 1) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1411: FILE: drivers/usb/serial/keyspan.c:1826:
+		} else

CHECK:CAMELCASE: Avoid CamelCase: <keyspan_usa26_portControlMessage>
#1436: FILE: drivers/usb/serial/keyspan.c:1844:
+	struct keyspan_usa26_portControlMessage	msg;

CHECK:CAMELCASE: Avoid CamelCase: <baudLo>
#1474: FILE: drivers/usb/serial/keyspan.c:1888:
+		     &msg.baudLo, &msg.prescaler, device_port) == KEYSPAN_INVALID_BAUD_RATE) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1476: FILE: drivers/usb/serial/keyspan.c:1890:
+			dbg("%s - Invalid baud rate %d requested, using 9600.",
+						__func__, p_priv->baud);

CHECK:CAMELCASE: Avoid CamelCase: <_txOn>
#1494: FILE: drivers/usb/serial/keyspan.c:1957:
+		msg._txOn = (!p_priv->break_on);

CHECK:CAMELCASE: Avoid CamelCase: <keyspan_usa28_portControlMessage>
#1533: FILE: drivers/usb/serial/keyspan.c:2001:
+	struct keyspan_usa28_portControlMessage	msg;

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1541: FILE: drivers/usb/serial/keyspan.c:2008:
+	dbg("%s", __func__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!this_urb"
#1551: FILE: drivers/usb/serial/keyspan.c:2017:
+	if (this_urb == NULL) {

CHECK:CAMELCASE: Avoid CamelCase: <baudHi>
#1573: FILE: drivers/usb/serial/keyspan.c:2036:
+		&msg.baudHi, &msg.baudLo, NULL, device_port) == KEYSPAN_INVALID_BAUD_RATE) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1575: FILE: drivers/usb/serial/keyspan.c:2038:
+		dbg("%s - Invalid baud rate requested %d.",
+						__func__, p_priv->baud);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1621: FILE: drivers/usb/serial/keyspan.c:2136:
+	dbg("%s", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1631: FILE: drivers/usb/serial/keyspan.c:2148:
+	dbg("%s - endpoint %d port %d (%d)",
+			__func__, usb_pipeendpoint(this_urb->pipe),

CHECK:CAMELCASE: Avoid CamelCase: <keyspan_usa49_portControlMessage>
#1648: FILE: drivers/usb/serial/keyspan.c:2168:
+	memset(&msg, 0, sizeof(struct keyspan_usa49_portControlMessage));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1666: FILE: drivers/usb/serial/keyspan.c:2181:
+			dbg("%s - Invalid baud rate %d requested, using 9600.",
+						__func__, p_priv->baud);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1725: FILE: drivers/usb/serial/keyspan.c:2275:
+	/* if the device is a 49wg, we send control message on usb
+	   control EP 0 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1725: FILE: drivers/usb/serial/keyspan.c:2275:
+	   control EP 0 */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1740: FILE: drivers/usb/serial/keyspan.c:2288:
+		usb_fill_control_urb(this_urb, serial->dev,
+				usb_sndctrlpipe(serial->dev, 0),

CHECK:CAMELCASE: Avoid CamelCase: <keyspan_usa90_portControlMessage>
#1766: FILE: drivers/usb/serial/keyspan.c:2318:
+	struct keyspan_usa90_portControlMessage	msg;

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1775: FILE: drivers/usb/serial/keyspan.c:2326:
+	dbg("%s", __func__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!this_urb"
#1784: FILE: drivers/usb/serial/keyspan.c:2334:
+	if (this_urb == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1814: FILE: drivers/usb/serial/keyspan.c:2359:
+			dbg("%s - Invalid baud rate %d requested, using 9600.",
+						__func__, p_priv->baud);

CHECK:CAMELCASE: Avoid CamelCase: <rxForwardingTimeout>
#1854: FILE: drivers/usb/serial/keyspan.c:2408:
+	msg.rxForwardingTimeout = 16;

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1909: FILE: drivers/usb/serial/keyspan.c:2460:
+	dbg("%s", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1934: FILE: drivers/usb/serial/keyspan.c:2500:
+			dbg("%s - Invalid baud rate %d requested, using 9600.",
+						__func__, p_priv->baud);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1961: FILE: drivers/usb/serial/keyspan.c:2603:
+	dbg("%s", __func__);

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#1980: FILE: drivers/usb/serial/keyspan.c:2642:
+				le16_to_cpu(serial->dev->descriptor.idProduct))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1985: FILE: drivers/usb/serial/keyspan.c:2646:
+		dev_err(&serial->dev->dev, "%s - unknown product id %x\n",
+		    __func__, le16_to_cpu(serial->dev->descriptor.idProduct));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1994: FILE: drivers/usb/serial/keyspan.c:2654:
+		dbg("%s - kmalloc for keyspan_serial_private failed.",
+								__func__);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*p_priv)...) over kzalloc(sizeof(struct keyspan_port_private)...)
#2003: FILE: drivers/usb/serial/keyspan.c:2664:
+		p_priv = kzalloc(sizeof(struct keyspan_port_private),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2004: FILE: drivers/usb/serial/keyspan.c:2665:
+		p_priv = kzalloc(sizeof(struct keyspan_port_private),
+								GFP_KERNEL);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000265200.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 49 warnings, 57 checks, 1886 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000265200.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
