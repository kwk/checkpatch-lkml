WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#93: FILE: drivers/rtc/Kconfig:209:
+config RTC_DRV_M41T11
+	tristate "ST M41T11"
+	depends on RTC_CLASS && I2C
+	help
+	  If you say yes here you get support for the ST M41T11 RTC chip.
+
+	  This driver can also be built as a module. If so, the module
+	  will be called rtc-m41t11.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#195: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#200: FILE: drivers/rtc/rtc-m41t11.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#307: FILE: drivers/rtc/rtc-m41t11.c:108:
+	dev_info(dev, "read: %02x %02x %02x %02x %02x %02x %02x\n",
+		regs[1], regs[2], regs[3], regs[4], regs[5], regs[6], regs[7]);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#309: FILE: drivers/rtc/rtc-m41t11.c:110:
+	t->tm_sec = BCD2BIN(regs[1+M41T11_REG_SECS] & M41T11_MASK_SECS);
 	                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#310: FILE: drivers/rtc/rtc-m41t11.c:111:
+	t->tm_min = BCD2BIN(regs[1+M41T11_REG_MIN] & M41T11_MASK_MIN);
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#311: FILE: drivers/rtc/rtc-m41t11.c:112:
+	t->tm_hour = BCD2BIN(regs[1+M41T11_REG_HOUR] & M41T11_MASK_HOUR);
 	                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#312: FILE: drivers/rtc/rtc-m41t11.c:113:
+	t->tm_wday = BCD2BIN(regs[1+M41T11_REG_WDAY] & M41T11_MASK_WDAY) - 1;
 	                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#313: FILE: drivers/rtc/rtc-m41t11.c:114:
+	t->tm_mday = BCD2BIN(regs[1+M41T11_REG_MDAY] & M41T11_MASK_MDAY);
 	                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#314: FILE: drivers/rtc/rtc-m41t11.c:115:
+	t->tm_mon = BCD2BIN(regs[1+M41T11_REG_MONTH] & M41T11_MASK_MONTH) - 1;
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#316: FILE: drivers/rtc/rtc-m41t11.c:117:
+	t->tm_year = BCD2BIN(regs[1+M41T11_REG_YEAR]);
 	                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#318: FILE: drivers/rtc/rtc-m41t11.c:119:
+	if (regs[1+M41T11_REG_HOUR] & M41T11_BIT_CB)
 	          ^

WARNING:SPLIT_STRING: quoted string split across lines
#322: FILE: drivers/rtc/rtc-m41t11.c:123:
+	dev_info(dev, "read secs=%d, mins=%d, "
+		"hours=%d, mday=%d, mon=%d, year=%d, wday=%d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#335: FILE: drivers/rtc/rtc-m41t11.c:136:
+	dev_info(dev, "write secs=%d, mins=%d, "
+		"hours=%d, mday=%d, mon=%d, year=%d, wday=%d\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#340: FILE: drivers/rtc/rtc-m41t11.c:141:
+	regs[1+M41T11_REG_SECS] = BIN2BCD(t->tm_sec);
 	      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#341: FILE: drivers/rtc/rtc-m41t11.c:142:
+	regs[1+M41T11_REG_MIN] = BIN2BCD(t->tm_min);
 	      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#342: FILE: drivers/rtc/rtc-m41t11.c:143:
+	regs[1+M41T11_REG_HOUR] = BIN2BCD(t->tm_hour);
 	      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#343: FILE: drivers/rtc/rtc-m41t11.c:144:
+	regs[1+M41T11_REG_WDAY] = BIN2BCD(t->tm_wday + 1);
 	      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#344: FILE: drivers/rtc/rtc-m41t11.c:145:
+	regs[1+M41T11_REG_MDAY] = BIN2BCD(t->tm_mday);
 	      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#345: FILE: drivers/rtc/rtc-m41t11.c:146:
+	regs[1+M41T11_REG_MONTH] = BIN2BCD(t->tm_mon + 1);
 	      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#348: FILE: drivers/rtc/rtc-m41t11.c:149:
+	regs[1+M41T11_REG_YEAR] = BIN2BCD(val);
 	      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#349: FILE: drivers/rtc/rtc-m41t11.c:150:
+	regs[1+M41T11_REG_HOUR] |= M41T11_BIT_CEB;
 	      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#351: FILE: drivers/rtc/rtc-m41t11.c:152:
+		regs[1+M41T11_REG_HOUR] |= M41T11_BIT_CB;
 		      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#354: FILE: drivers/rtc/rtc-m41t11.c:155:
+	dev_info(dev, "write %02x %02x %02x %02x %02x %02x %02x\n",
+		regs[1], regs[2], regs[3], regs[4], regs[5], regs[6], regs[7]);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#399: FILE: drivers/rtc/rtc-m41t11.c:200:
+static int __devinit

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#406: FILE: drivers/rtc/rtc-m41t11.c:207:
+	if (!(m41t11 = kzalloc(sizeof(*m41t11), GFP_KERNEL))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#411: FILE: drivers/rtc/rtc-m41t11.c:212:
+	strlcpy(m41t11->i2c.name, "m41t11", I2C_NAME_SIZE);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#427: FILE: drivers/rtc/rtc-m41t11.c:228:
+	if (regs[1+M41T11_REG_SECS] & M41T11_BIT_ST) {
 	          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#435: FILE: drivers/rtc/rtc-m41t11.c:236:
+	val = BCD2BIN(regs[1+M41T11_REG_SECS] & M41T11_MASK_SECS);
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#438: FILE: drivers/rtc/rtc-m41t11.c:239:
+	val = BCD2BIN(regs[1+M41T11_REG_MIN] & M41T11_MASK_MIN);
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#441: FILE: drivers/rtc/rtc-m41t11.c:242:
+	val = BCD2BIN(regs[1+M41T11_REG_HOUR] & M41T11_MASK_HOUR);
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#444: FILE: drivers/rtc/rtc-m41t11.c:245:
+	val = BCD2BIN(regs[1+M41T11_REG_MDAY] & M41T11_MASK_MDAY);
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#447: FILE: drivers/rtc/rtc-m41t11.c:248:
+	val = BCD2BIN(regs[1+M41T11_REG_MONTH] & M41T11_MASK_MONTH);
 	                    ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#452: FILE: drivers/rtc/rtc-m41t11.c:253:
+	if ((err = i2c_attach_client(&m41t11->i2c)) != 0)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#476: FILE: drivers/rtc/rtc-m41t11.c:277:
+static int __devinit

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#484: FILE: drivers/rtc/rtc-m41t11.c:285:
+static int __devexit m41t11_detach_client(struct i2c_client *client)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#490: FILE: drivers/rtc/rtc-m41t11.c:291:
+	if ((err = i2c_detach_client(client)))

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#537: FILE: include/linux/rtc.h:134:
+	int (*speed_up)(struct device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#538: FILE: include/linux/rtc.h:135:
+	int (*slow_down)(struct device *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#546: FILE: include/linux/rtc.h:204:
+extern int rtc_speed_up(struct rtc_device *rtc);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#547: FILE: include/linux/rtc.h:205:
+extern int rtc_slow_down(struct rtc_device *rtc);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000382227.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 11 warnings, 27 checks, 432 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000382227.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
