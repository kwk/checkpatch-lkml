WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
Provide an interface by which the system administrator can decide what state

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#79: FILE: drivers/base/cpu.c:23:
+struct sys_device *get_cpu_sysdev(unsigned cpu)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#88: FILE: drivers/base/cpu.c:32:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#95: FILE: drivers/base/cpu.c:39:
+ssize_t show_available_states(struct sys_device *dev,
+			struct sysdev_attribute *attr, char *buf)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#114: FILE: drivers/base/cpu.c:58:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#117: FILE: drivers/base/cpu.c:61:
+ssize_t show_current_state(struct sys_device *dev,
+			struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#138: FILE: drivers/base/cpu.c:82:
+ssize_t store_current_state(struct sys_device *dev,
+			struct sysdev_attribute *attr,

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#185: FILE: drivers/base/cpu.c:129:
+
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#191: FILE: drivers/base/cpu.c:135:
+	int cpu;
+	mutex_lock(&cpu_offline_driver_lock);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cpu_offline_driver"
#193: FILE: drivers/base/cpu.c:137:
+	if (cpu_offline_driver != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#218: FILE: drivers/base/cpu.c:162:
+	int cpu;
+	mutex_lock(&cpu_offline_driver_lock);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#233: FILE: drivers/base/cpu.c:177:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#339: FILE: include/linux/cpu.h:81:
+extern int register_cpu_offline_driver(struct cpu_offline_driver *driver);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#340: FILE: include/linux/cpu.h:82:
+extern void unregister_cpu_offline_driver(struct cpu_offline_driver *driver);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078707.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 10 checks, 260 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078707.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
