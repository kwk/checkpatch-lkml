WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#211: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#216: FILE: include/linux/splice.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'declerations' may be misspelled - perhaps 'declarations'?
#217: FILE: include/linux/splice.h:2:
+ * Function declerations and data structures related to the splice
             ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#277: FILE: include/linux/splice.h:62:
+extern ssize_t splice_from_pipe(struct pipe_inode_info *, struct file *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pipe_inode_info *' should also have an identifier name
#277: FILE: include/linux/splice.h:62:
+extern ssize_t splice_from_pipe(struct pipe_inode_info *, struct file *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#277: FILE: include/linux/splice.h:62:
+extern ssize_t splice_from_pipe(struct pipe_inode_info *, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#277: FILE: include/linux/splice.h:62:
+extern ssize_t splice_from_pipe(struct pipe_inode_info *, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#277: FILE: include/linux/splice.h:62:
+extern ssize_t splice_from_pipe(struct pipe_inode_info *, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#277: FILE: include/linux/splice.h:62:
+extern ssize_t splice_from_pipe(struct pipe_inode_info *, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'splice_actor *' should also have an identifier name
#277: FILE: include/linux/splice.h:62:
+extern ssize_t splice_from_pipe(struct pipe_inode_info *, struct file *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#280: FILE: include/linux/splice.h:65:
+extern ssize_t __splice_from_pipe(struct pipe_inode_info *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pipe_inode_info *' should also have an identifier name
#280: FILE: include/linux/splice.h:65:
+extern ssize_t __splice_from_pipe(struct pipe_inode_info *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct splice_desc *' should also have an identifier name
#280: FILE: include/linux/splice.h:65:
+extern ssize_t __splice_from_pipe(struct pipe_inode_info *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'splice_actor *' should also have an identifier name
#280: FILE: include/linux/splice.h:65:
+extern ssize_t __splice_from_pipe(struct pipe_inode_info *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#282: FILE: include/linux/splice.h:67:
+extern ssize_t splice_to_pipe(struct pipe_inode_info *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pipe_inode_info *' should also have an identifier name
#282: FILE: include/linux/splice.h:67:
+extern ssize_t splice_to_pipe(struct pipe_inode_info *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct splice_pipe_desc *' should also have an identifier name
#282: FILE: include/linux/splice.h:67:
+extern ssize_t splice_to_pipe(struct pipe_inode_info *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#284: FILE: include/linux/splice.h:69:
+extern ssize_t splice_direct_to_actor(struct file *, struct splice_desc *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#284: FILE: include/linux/splice.h:69:
+extern ssize_t splice_direct_to_actor(struct file *, struct splice_desc *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct splice_desc *' should also have an identifier name
#284: FILE: include/linux/splice.h:69:
+extern ssize_t splice_direct_to_actor(struct file *, struct splice_desc *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'splice_direct_actor *' should also have an identifier name
#284: FILE: include/linux/splice.h:69:
+extern ssize_t splice_direct_to_actor(struct file *, struct splice_desc *,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000419503.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 17 warnings, 4 checks, 210 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000419503.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
