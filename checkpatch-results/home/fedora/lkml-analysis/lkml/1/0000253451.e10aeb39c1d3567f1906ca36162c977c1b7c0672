WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
without the format strings. Type checking of probes and call sites is done at

WARNING:TYPO_SPELLING: 'ressource' may be misspelled - perhaps 'resource'?
#45: 
because the "bt" ressource will never be freed, but the pointer will not be in
                 ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#71: FILE: include/trace/block.h:1:
+#ifndef _TRACE_BLOCK_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#78: FILE: include/trace/block.h:8:
+DEFINE_TRACE(block_rq,
+	TPPROTO(struct request_queue *q, struct request *rq, u32 what),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#81: FILE: include/trace/block.h:11:
+DEFINE_TRACE(block_bio,
+	TPPROTO(struct request_queue *q, struct bio *bio, u32 what),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#84: FILE: include/trace/block.h:14:
+DEFINE_TRACE(block_generic,
+	TPPROTO(struct request_queue *q, struct bio *bio, int rw, u32 what),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#87: FILE: include/trace/block.h:17:
+DEFINE_TRACE(block_pdu_int,
+	TPPROTO(struct request_queue *q, u32 what, struct bio *bio,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#91: FILE: include/trace/block.h:21:
+DEFINE_TRACE(block_remap,
+	TPPROTO(struct request_queue *q, struct bio *bio, dev_t dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: block/blk-core.c:282:
+	trace_block_pdu_int(q, BLK_TA_UNPLUG_IO, NULL,
 				q->rq.count[READ] + q->rq.count[WRITE]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#132: FILE: block/blk-core.c:292:
+	trace_block_pdu_int(q, BLK_TA_UNPLUG_TIMER, NULL,
 				q->rq.count[READ] + q->rq.count[WRITE]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#141: FILE: block/blk-core.c:304:
+		trace_block_pdu_int(q, BLK_TA_UNPLUG_IO, NULL,
 					q->rq.count[READ] + q->rq.count[WRITE]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#195: FILE: block/blk-core.c:1213:
+		trace_block_remap(bdev_get_queue(bio->bi_bdev), bio,
 				    bdev->bd_dev, bio->bi_sector,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#204: FILE: block/blk-core.c:1384:
+			trace_block_remap(q, bio, old_dev, bio->bi_sector,
 					    old_sector);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#268: FILE: fs/bio.c:1231:
+	trace_block_pdu_int(bdev_get_queue(bi->bi_bdev), BLK_TA_SPLIT, bi,
 				bi->bi_sector + first_sectors);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#301: FILE: drivers/md/dm.c:519:
+			trace_block_bio(io->md->queue, io->bio,
 					  BLK_TA_COMPLETE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#310: FILE: drivers/md/dm.c:613:
+		trace_block_remap(bdev_get_queue(clone->bi_bdev), clone,
 				    tio->io->bio->bi_bdev->bd_dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#363: FILE: block/blktrace.c:145:
+static void __blk_add_trace(struct blk_trace *bt, sector_t sector, int bytes,
 		     int rw, u32 what, int error, int pdu_len, void *pdu_data)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#431: FILE: block/blktrace.c:614:
+static void blk_add_trace_rq(struct request_queue *q, struct request *rq,
+				    u32 what)

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#441: FILE: block/blktrace.c:624:
+		__blk_add_trace(bt, 0, rq->data_len, rw, what, rq->errors, sizeof(rq->cmd), rq->cmd);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#444: FILE: block/blktrace.c:627:
+		__blk_add_trace(bt, rq->hard_sector, rq->hard_nr_sectors << 9, rw, what, rq->errors, 0, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#459: FILE: block/blktrace.c:642:
+static void blk_add_trace_bio(struct request_queue *q, struct bio *bio,
+				     u32 what)

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#466: FILE: block/blktrace.c:649:
+	__blk_add_trace(bt, bio->bi_sector, bio->bi_size, bio->bi_rw, what, !bio_flagged(bio, BIO_UPTODATE), 0, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#481: FILE: block/blktrace.c:664:
+static void blk_add_trace_generic(struct request_queue *q,
+					 struct bio *bio, int rw, u32 what)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#508: FILE: block/blktrace.c:691:
+static void blk_add_trace_pdu_int(struct request_queue *q, u32 what,
+					 struct bio *bio, unsigned int pdu)

WARNING:LONG_LINE: line length of 138 exceeds 100 columns
#517: FILE: block/blktrace.c:700:
+		__blk_add_trace(bt, bio->bi_sector, bio->bi_size, bio->bi_rw, what, !bio_flagged(bio, BIO_UPTODATE), sizeof(rpdu), &rpdu);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#536: FILE: block/blktrace.c:719:
+static void blk_add_trace_remap(struct request_queue *q, struct bio *bio,
+				       dev_t dev, sector_t from, sector_t to)

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#548: FILE: block/blktrace.c:731:
+	__blk_add_trace(bt, from, bio->bi_size, bio->bi_rw, BLK_TA_REMAP, !bio_flagged(bio, BIO_UPTODATE), sizeof(r), &r);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000253451.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 19 checks, 590 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000253451.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
