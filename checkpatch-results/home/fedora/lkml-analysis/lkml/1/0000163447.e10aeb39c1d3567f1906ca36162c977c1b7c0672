WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#82: FILE: arch/alpha/kernel/err_ev6.c:160:
+	printk("%s    Address: 0x%016llx\n"

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: arch/alpha/kernel/err_ev6.c:161:
+^I         "    Syndrome[upper.lower]: %02llx.%02llx\n",$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pci_unmap_single', this function's name, in a string
#121: FILE: arch/alpha/kernel/pci_iommu.c:358:
+		DBGA2("pci_unmap_single: direct [%llx,%zx] from %p\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#140: FILE: arch/alpha/kernel/pci_iommu.c:376:
+		printk(KERN_ERR "Bogus pci_unmap_single: dma_addr %llx "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pci_unmap_single', this function's name, in a string
#140: FILE: arch/alpha/kernel/pci_iommu.c:376:
+		printk(KERN_ERR "Bogus pci_unmap_single: dma_addr %llx "

WARNING:SPLIT_STRING: quoted string split across lines
#141: FILE: arch/alpha/kernel/pci_iommu.c:377:
+		printk(KERN_ERR "Bogus pci_unmap_single: dma_addr %llx "
+		       " base %llx size %x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pci_unmap_single', this function's name, in a string
#151: FILE: arch/alpha/kernel/pci_iommu.c:397:
+	DBGA2("pci_unmap_single: sg [%llx,%zx] np %ld from %p\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pci_free_consistent', this function's name, in a string
#169: FILE: arch/alpha/kernel/pci_iommu.c:467:
+	DBGA2("pci_free_consistent: [%llx,%zx] from %p\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sg_fill', this function's name, in a string
#178: FILE: arch/alpha/kernel/pci_iommu.c:554:
+		DBGA("    sg_fill: [%p,%lx] -> direct %llx\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sg_fill', this function's name, in a string
#187: FILE: arch/alpha/kernel/pci_iommu.c:566:
+		DBGA("    sg_fill: [%p,%lx] -> DAC %llx\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sg_fill', this function's name, in a string
#196: FILE: arch/alpha/kernel/pci_iommu.c:592:
+	DBGA("    sg_fill: [%p,%lx] -> sg %llx np %ld\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#206: FILE: arch/alpha/kernel/pci_iommu.c:756:
+			DBGA("    (%ld) DAC [%llx,%zx]\n",
 			      sg - end + nents, addr, size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#215: FILE: arch/alpha/kernel/pci_iommu.c:764:
+			DBGA("    (%ld) direct [%llx,%zx]\n",
 			      sg - end + nents, addr, size);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#231: FILE: arch/alpha/kernel/err_ev7.c:249:
+		printk("%s*** MCHK occurred on LPID %ld (RBOX %llx)\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#238: FILE: arch/alpha/kernel/err_ev7.c:254:
+		printk("%s  EXC_ADDR: %016llx\n"

ERROR:CODE_INDENT: code indent should use tabs where possible
#239: FILE: arch/alpha/kernel/err_ev7.c:255:
+^I^I         "  HALT_CODE: %llx\n",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#259: FILE: arch/alpha/kernel/err_marvel.c:189:
+		printk("%s        Syndrome: 0x%llx\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#277: FILE: arch/alpha/kernel/err_marvel.c:324:
+		printk("%s        Packet Offset 0x%08llx\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#297: FILE: arch/alpha/kernel/err_marvel.c:518:
+	printk("%s      TLB Error on index 0x%llx:\n"

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#350: FILE: arch/alpha/kernel/err_marvel.c:990:
+		printk("%s  PID %u PORT %d POx_ERR_SUM: %016llx\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#356: FILE: arch/alpha/kernel/err_marvel.c:995:
+		printk("%s  [ POx_FIRST_ERR: %016llx ]\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#367: FILE: arch/alpha/kernel/err_titan.c:110:
+	printk("%s  PChip %d SERROR: %016llx\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#382: FILE: arch/alpha/kernel/err_titan.c:226:
+	printk("%s  PChip %d %cPERROR: %016llx\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#391: FILE: arch/alpha/kernel/err_titan.c:319:
+	printk("%s  PChip %d AGPERROR: %016llx\n", err_print_prefix,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#409: FILE: arch/alpha/kernel/err_titan.c:600:
+	printk("%s  Summary Flags:         %016llx\n"

ERROR:CODE_INDENT: code indent should use tabs where possible
#410: FILE: arch/alpha/kernel/err_titan.c:601:
+ ^I         "  CChip DIRx:            %016llx\n"$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#410: FILE: arch/alpha/kernel/err_titan.c:601:
+ ^I         "  CChip DIRx:            %016llx\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: arch/alpha/kernel/err_titan.c:601:
+ ^I         "  CChip DIRx:            %016llx\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#441: FILE: arch/alpha/kernel/smc37c669.c:2545:
+        printk( "SMC37c669 Super I/O Controller found @ 0x%p\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: arch/alpha/kernel/smc37c669.c:2545:
+        printk( "SMC37c669 Super I/O Controller found @ 0x%p\n",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#441: FILE: arch/alpha/kernel/smc37c669.c:2545:
+        printk( "SMC37c669 Super I/O Controller found @ 0x%p\n",

ERROR:SPACING: space prohibited after that open parenthesis '('
#441: FILE: arch/alpha/kernel/smc37c669.c:2545:
+        printk( "SMC37c669 Super I/O Controller found @ 0x%p\n",

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#442: FILE: arch/alpha/kernel/smc37c669.c:2546:
+        printk( "SMC37c669 Super I/O Controller found @ 0x%p\n",
+		SMC_base );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#442: FILE: arch/alpha/kernel/smc37c669.c:2546:
+		SMC_base );

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#453: FILE: arch/alpha/kernel/sys_sable.c:456:
+	printk("%s: mask 0x%lx bit 0x%lx irq 0x%x\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#462: FILE: arch/alpha/kernel/sys_sable.c:472:
+	printk("%s: mask 0x%lx bit 0x%lx irq 0x%x\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#473: FILE: arch/alpha/kernel/traps.c:626:
+	printk("Bad unaligned kernel access at %016lx: %p %lx %lu\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#474: FILE: arch/alpha/kernel/traps.c:627:
+	printk("Bad unaligned kernel access at %016lx: %p %lx %lu\n",
 		pc, va, opcode, reg);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000163447.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 28 warnings, 4 checks, 363 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000163447.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
