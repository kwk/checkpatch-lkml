CHECK:BRACES: Unbalanced braces around else statement
#231: FILE: arch/x86/kernel/io_apic_32.c:2068:
+			else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#450: FILE: arch/x86/kernel/io_apic_64.c:1899:
+			else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1075: FILE: drivers/xen/events.c:144:
+		struct irq_desc *desc = get_irq_desc(i);
+		desc->affinity = cpumask_of_cpu(0);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1102: FILE: include/linux/irq.h:188:
+extern struct irq_desc *get_irq_desc(unsigned int irq);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1378: FILE: kernel/irq/handle.c:73:
 
+

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1393: FILE: kernel/irq/handle.c:88:
+		nr_irq_desc = simple_strtoul(arg, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1410: FILE: kernel/irq/handle.c:106:
+		desc[i-1].next = &desc[i];
 		      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1417: FILE: kernel/irq/handle.c:112:
+extern int after_bootmem;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1418: FILE: kernel/irq/handle.c:113:
+extern void *__alloc_bootmem_nopanic(unsigned long size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1419: FILE: kernel/irq/handle.c:114:
+extern void *__alloc_bootmem_nopanic(unsigned long size,
+			     unsigned long align,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1427: FILE: kernel/irq/handle.c:122:
+	BUG_ON(irq == -1U);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1429: FILE: kernel/irq/handle.c:124:
+	desc_pri = desc = &irq_desc[0];

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1446: FILE: kernel/irq/handle.c:141:
+	printk(KERN_DEBUG "try to get more irq_desc %d\n", nr_irq_desc);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1449: FILE: kernel/irq/handle.c:144:
+		desc = kzalloc(sizeof(struct irq_desc)*nr_irq_desc, GFP_ATOMIC);
 		                                      ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*desc)...) over kzalloc(sizeof(struct irq_desc)...)
#1449: FILE: kernel/irq/handle.c:144:
+		desc = kzalloc(sizeof(struct irq_desc)*nr_irq_desc, GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1451: FILE: kernel/irq/handle.c:146:
+		desc = __alloc_bootmem_nopanic(sizeof(struct irq_desc)*nr_irq_desc, PAGE_SIZE, 0);
 		                                                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1453: FILE: kernel/irq/handle.c:148:
+        if (!desc)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1453: FILE: kernel/irq/handle.c:148:
+        if (!desc)$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1460: FILE: kernel/irq/handle.c:155:
+		desc[i-1].next = &desc[i];
 		      ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1479: FILE: kernel/irq/handle.c:174:
+
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1480: FILE: kernel/irq/handle.c:175:
+}
+static struct irq_desc *irq_desc;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1658: FILE: kernel/irq/manage.c:299:
+	action =desc->action;
 	       ^

CHECK:SPACING: No space is necessary after a cast
#1786: FILE: kernel/irq/proc.c:116:
+	struct irq_desc *desc = get_irq_desc((long) data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1815: FILE: kernel/irq/proc.c:152:
+	if (!desc->dir || action->dir || !action->name ||
 					!name_unique(irq, action))

WARNING:LINE_SPACING: Missing a blank line after declarations
#1871: FILE: kernel/irq/proc.c:208:
+		struct irq_desc *desc = get_irq_desc(irq);
+		remove_proc_entry(action->dir->name, desc->dir);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000243996.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 8 warnings, 15 checks, 1571 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000243996.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
