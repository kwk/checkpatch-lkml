WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
After there were no technical concerns about this patch I'm resending it with

WARNING:TYPO_SPELLING: 'seesion' may be misspelled - perhaps 'session'?
#88: FILE: drivers/net/ehea/ehea.h:341:
+ * Large Receive Offload (LRO) descriptor for a tcp seesion
                                                     ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#102: FILE: drivers/net/ehea/ehea.h:355:
+^Iu16 tcp_saw_tstamp; ^I^I/* timestamps enabled */$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#147: FILE: drivers/net/ehea/ehea_main.c:56:
+static int use_lro = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:TYPO_SPELLING: 'Reveive' may be misspelled - perhaps 'Receive'?
#167: FILE: drivers/net/ehea/ehea_main.c:87:
+MODULE_PARM_DESC(use_lro, "1: enable, 0: disable Large Reveive Offload ");
                                                        ^^^^^^^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'iph' - possible side-effects?
#196: FILE: drivers/net/ehea/ehea_main.c:412:
+#define TCP_PAYLOAD_LENGTH(iph, tcph) \
+(ntohs(iph->tot_len) - (iph->ihl << 2) - (tcph->doff << 2))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'iph' may be better as '(iph)' to avoid precedence issues
#196: FILE: drivers/net/ehea/ehea_main.c:412:
+#define TCP_PAYLOAD_LENGTH(iph, tcph) \
+(ntohs(iph->tot_len) - (iph->ihl << 2) - (tcph->doff << 2))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'tcph' may be better as '(tcph)' to avoid precedence issues
#196: FILE: drivers/net/ehea/ehea_main.c:412:
+#define TCP_PAYLOAD_LENGTH(iph, tcph) \
+(ntohs(iph->tot_len) - (iph->ihl << 2) - (tcph->doff << 2))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#213: FILE: drivers/net/ehea/ehea_main.c:429:
+	if (tcph->cwr || tcph->ece || tcph->urg || !tcph->ack || tcph->psh
+	    || tcph->rst || tcph->syn || tcph->fin)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#220: FILE: drivers/net/ehea/ehea_main.c:436:
+	if (tcph->doff != TCPH_LEN_WO_OPTIONS
+	    && tcph->doff != TCPH_LEN_W_TIMESTAMP)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#256: FILE: drivers/net/ehea/ehea_main.c:472:
+		*(p+2) = lro->tcp_rcv_tsecr;
 		   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#275: FILE: drivers/net/ehea/ehea_main.c:491:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#278: FILE: drivers/net/ehea/ehea_main.c:494:
+^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#280: FILE: drivers/net/ehea/ehea_main.c:496:
+		ptr = (u32 *)(tcph+1);
 		                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#282: FILE: drivers/net/ehea/ehea_main.c:498:
+		lro->tcp_rcv_tsval = *(ptr+1);
 		                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#283: FILE: drivers/net/ehea/ehea_main.c:499:
+		lro->tcp_rcv_tsecr = *(ptr+2);
 		                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#306: FILE: drivers/net/ehea/ehea_main.c:522:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#311: FILE: drivers/net/ehea/ehea_main.c:527:
+^I$

CHECK:SPACING: No space is necessary after a cast
#313: FILE: drivers/net/ehea/ehea_main.c:529:
+		topt = (u32 *) (tcph + 1);

WARNING:RETURN_VOID: void function return statements are not generally useful
#332: FILE: drivers/net/ehea/ehea_main.c:548:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#335: FILE: drivers/net/ehea/ehea_main.c:551:
+static int check_tcp_conn(struct ehea_lro *lro, struct iphdr *iph,
+			 struct tcphdr *tcph)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lro->iph->saddr != iph->saddr'
#338: FILE: drivers/net/ehea/ehea_main.c:554:
+	if ((lro->iph->saddr != iph->saddr) || (lro->iph->daddr != iph->daddr) ||
+	    (lro->tcph->source != tcph->source) || (lro->tcph->dest != tcph->dest))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lro->iph->daddr != iph->daddr'
#338: FILE: drivers/net/ehea/ehea_main.c:554:
+	if ((lro->iph->saddr != iph->saddr) || (lro->iph->daddr != iph->daddr) ||
+	    (lro->tcph->source != tcph->source) || (lro->tcph->dest != tcph->dest))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lro->tcph->source != tcph->source'
#338: FILE: drivers/net/ehea/ehea_main.c:554:
+	if ((lro->iph->saddr != iph->saddr) || (lro->iph->daddr != iph->daddr) ||
+	    (lro->tcph->source != tcph->source) || (lro->tcph->dest != tcph->dest))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lro->tcph->dest != tcph->dest'
#338: FILE: drivers/net/ehea/ehea_main.c:554:
+	if ((lro->iph->saddr != iph->saddr) || (lro->iph->daddr != iph->daddr) ||
+	    (lro->tcph->source != tcph->source) || (lro->tcph->dest != tcph->dest))

ERROR:SPACING: space required before the open parenthesis '('
#386: FILE: drivers/net/ehea/ehea_main.c:602:
+		if(!pr->lro[i].active) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#397: FILE: drivers/net/ehea/ehea_main.c:613:
+static void ehea_proc_skb(struct ehea_port_res *pr, struct ehea_cqe *cqe,
+		     struct sk_buff *skb)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000424375.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 5 warnings, 16 checks, 444 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000424375.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
