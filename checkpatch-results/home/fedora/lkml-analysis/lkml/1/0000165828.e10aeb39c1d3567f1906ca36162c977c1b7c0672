WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#94: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:UNDOCUMENTED_DT_STRING: DT compatible string "fsl,mpc8349-mu" appears un-documented -- check /home/fedora/lkml-analysis/linux/Documentation/devicetree/bindings/
#169: FILE: arch/powerpc/boot/dts/mpc834x_mds.dts:108:
+			compatible = "fsl,mpc8349-mu";

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#186: FILE: drivers/virtio/Kconfig:36:
+config VIRTIO_OVER_PCI_HOST
+	tristate "Virtio-over-PCI Host support (EXPERIMENTAL)"
+	depends on PCI && EXPERIMENTAL
+	select VIRTIO
+	---help---
+	  This driver provides the host support necessary for using virtio
+	  over the PCI bus with a Freescale MPC8349EMDS evaluation board.
+
+	  If unsure, say N.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#196: FILE: drivers/virtio/Kconfig:46:
+config VIRTIO_OVER_PCI_FSL
+	tristate "Virtio-over-PCI Guest support (EXPERIMENTAL)"
+	depends on MPC834x_MDS && EXPERIMENTAL
+	select VIRTIO
+	select DMA_ENGINE
+	select FSL_DMA
+	---help---
+	  This driver provides the guest support necessary for using virtio
+	  over the PCI bus.
+
+	  If unsure, say N.
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#224: FILE: drivers/virtio/vop.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#260: FILE: drivers/virtio/vop.h:37:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#268: FILE: drivers/virtio/vop.h:45:
+} __attribute__((packed));

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#274: FILE: drivers/virtio/vop.h:51:
+	 * interrupts when things are added to the avail ring */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#278: FILE: drivers/virtio/vop.h:55:
+	 * will be added to the used ring */

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#283: FILE: drivers/virtio/vop.h:60:
+} __attribute__((packed));

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#292: FILE: drivers/virtio/vop.h:69:
+	 * interrupts when things are added to the used ring */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#296: FILE: drivers/virtio/vop.h:73:
+	 * will be added to the avail ring */

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#301: FILE: drivers/virtio/vop.h:78:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#321: FILE: drivers/virtio/vop.h:98:
+} __attribute__((packed));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#349: FILE: drivers/virtio/vop_fsl.c:1:
+/*

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#424: FILE: drivers/virtio/vop_fsl.c:76:
+struct vop_vq {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#469: FILE: drivers/virtio/vop_fsl.c:121:
+struct vop_vdev {
+

WARNING:TYPO_SPELLING: 'offets' may be misspelled - perhaps 'offsets'?
#498: FILE: drivers/virtio/vop_fsl.c:150:
+	 * boundaries, so they appear at offets 1024, 2048, and 3072
 	                                 ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#507: FILE: drivers/virtio/vop_fsl.c:159:
+struct vop_dev {
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#552: FILE: drivers/virtio/vop_fsl.c:204:
+	BUG_ON(idx >= VOP_RING_SIZE);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#553: FILE: drivers/virtio/vop_fsl.c:205:
+	BUG_ON(!desc);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#572: FILE: drivers/virtio/vop_fsl.c:224:
+	BUG_ON(idx >= VOP_RING_SIZE);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#573: FILE: drivers/virtio/vop_fsl.c:225:
+	BUG_ON(!desc);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#656: FILE: drivers/virtio/vop_fsl.c:308:
+		dev_dbg(vq->dev, "DESC %.2d: 0x%.8x %.6d 0x%.4x %.2d\n",
+				i, desc.addr, desc.len, desc.flags, desc.next);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#667: FILE: drivers/virtio/vop_fsl.c:319:
+		dev_dbg(vq->dev, "REM AVAIL %.2d: %.2d\n",
+				i, le16_to_cpu(vq->guest->avail[i]));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#678: FILE: drivers/virtio/vop_fsl.c:330:
+		dev_dbg(vq->dev, "REM USED %.2d: %.2d %.6d\n", i,
+				ioread32(&vq->host->used[i].id),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#703: FILE: drivers/virtio/vop_fsl.c:355:
+		dev_dbg(vq->dev, "DESC %.2d: 0x%.8x %.6d 0x%.4x %.2d\n",
+				i, desc.addr, desc.len, desc.flags, desc.next);

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%.2hu' is unnecessary
#720: FILE: drivers/virtio/vop_fsl.c:372:
+	dev_dbg(vq->dev, "LOC USED IDX %.2hu\n", vq->used.index);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#723: FILE: drivers/virtio/vop_fsl.c:375:
+		dev_dbg(vq->dev, "LOC USED %.2d: %.2d %.6d\n", i,
+				vq->used.ring[i].id, vq->used.ring[i].len);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#776: FILE: drivers/virtio/vop_fsl.c:428:
+	for (i = 0; i < out + in; i++) {
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#778: FILE: drivers/virtio/vop_fsl.c:430:
+		BUG_ON(sg == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sg"
#778: FILE: drivers/virtio/vop_fsl.c:430:
+		BUG_ON(sg == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#823: FILE: drivers/virtio/vop_fsl.c:475:
+static dma_cookie_t dma_async_memcpy_raw_to_raw(struct dma_chan *chan,
+					       dma_addr_t dst,

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#883: FILE: drivers/virtio/vop_fsl.c:535:
+	dev_dbg(vq->dev, "%s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#893: FILE: drivers/virtio/vop_fsl.c:545:
+	dev_dbg(vq->dev, "%s\n", __func__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1143: FILE: drivers/virtio/vop_fsl.c:795:
+	 * in the local chain is less than the number in the remote chain */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1144: FILE: drivers/virtio/vop_fsl.c:796:
+	BUG_ON(loc_chain_len(vq, loc_idx) < rem_chain_len(vq, rem_idx));

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1154: FILE: drivers/virtio/vop_fsl.c:806:
+		 * the number actually used */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1155: FILE: drivers/virtio/vop_fsl.c:807:
+		BUG_ON(loc.len > rem.len);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1171: FILE: drivers/virtio/vop_fsl.c:823:
+			BUG_ON(!(rem.flags & VOP_DESC_F_NEXT));

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1185: FILE: drivers/virtio/vop_fsl.c:837:
+	 * before the DMA callback can be triggered */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1189: FILE: drivers/virtio/vop_fsl.c:841:
+	 * indices and trigger the necessary callbacks */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1265: FILE: drivers/virtio/vop_fsl.c:917:
+	 * in the remote chain is less than the number in the local chain */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1266: FILE: drivers/virtio/vop_fsl.c:918:
+	BUG_ON(rem_chain_len(vq, rem_idx) < loc_chain_len(vq, loc_idx));

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1276: FILE: drivers/virtio/vop_fsl.c:928:
+		 * the number actually used */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1277: FILE: drivers/virtio/vop_fsl.c:929:
+		BUG_ON(rem.len > loc.len);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1293: FILE: drivers/virtio/vop_fsl.c:945:
+			BUG_ON(!(loc.flags & VOP_DESC_F_NEXT));

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1307: FILE: drivers/virtio/vop_fsl.c:959:
+	 * before the DMA callback can be triggered */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1311: FILE: drivers/virtio/vop_fsl.c:963:
+	 * indices and trigger the necessary callbacks */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1347: FILE: drivers/virtio/vop_fsl.c:999:
+	 * avail ring */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1351: FILE: drivers/virtio/vop_fsl.c:1003:
+	BUG_ON(data == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#1351: FILE: drivers/virtio/vop_fsl.c:1003:
+	BUG_ON(data == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1352: FILE: drivers/virtio/vop_fsl.c:1004:
+	BUG_ON(out + in == 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1357: FILE: drivers/virtio/vop_fsl.c:1009:
+		dev_dbg(vq->dev, "No free space left: len=%d free=%d\n",
+				out + in, vq->num_free);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1400: FILE: drivers/virtio/vop_fsl.c:1052:
+	 * don't update avail->idx until kick() */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1470: FILE: drivers/virtio/vop_fsl.c:1122:
+	BUG_ON(head >= VOP_RING_SIZE);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1471: FILE: drivers/virtio/vop_fsl.c:1123:
+	BUG_ON(!vq->data[head]);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1509: FILE: drivers/virtio/vop_fsl.c:1161:
+#if 0

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1511: FILE: drivers/virtio/vop_fsl.c:1163:
+	 * Transfer speed gets cut to 1/10th the normal rate */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1527: FILE: drivers/virtio/vop_fsl.c:1179:
+	 * was more work to do */

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1530: FILE: drivers/virtio/vop_fsl.c:1182:
+#if 0

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1532: FILE: drivers/virtio/vop_fsl.c:1184:
+	 * Transfer speed gets cut to 1/10th the normal rate */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1555: FILE: drivers/virtio/vop_fsl.c:1207:
+static void vopc_get(struct virtio_device *_vdev, unsigned offset, void *buf,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1556: FILE: drivers/virtio/vop_fsl.c:1208:
+		     unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1565: FILE: drivers/virtio/vop_fsl.c:1217:
+static void vopc_set(struct virtio_device *_vdev, unsigned offset,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1566: FILE: drivers/virtio/vop_fsl.c:1218:
+		     const void *buf, unsigned len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1595: FILE: drivers/virtio/vop_fsl.c:1247:
+	dev_dbg(&vdev->vdev.dev, "%s(): <- 0x%.2x (was 0x%.2x)\n",
+			__func__, status, old_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1613: FILE: drivers/virtio/vop_fsl.c:1265:
+static struct virtqueue *vopc_find_vq(struct virtio_device *_vdev,
+					     unsigned index,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1613: FILE: drivers/virtio/vop_fsl.c:1265:
+					     unsigned index,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1716: FILE: drivers/virtio/vop_fsl.c:1368:
+ * the host at this point, but how will virtio react? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1809: FILE: drivers/virtio/vop_fsl.c:1461:
+	 * host memory is valid */

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#2006: FILE: drivers/virtio/vop_fsl.c:1658:
+	dev_dbg(dev, "%s: called\n", __func__);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2037: FILE: drivers/virtio/vop_fsl.c:1689:
+#if 0

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2091: FILE: drivers/virtio/vop_fsl.c:1743:
+		 * yet, and will have to be set up just before we start */

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#2128: FILE: drivers/virtio/vop_fsl.c:1780:
+	if (!priv) {
+		dev_err(&op->dev, "Unable to allocate device private data\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#2167: FILE: drivers/virtio/vop_fsl.c:1819:
+	if (!priv->guest_mem) {
+		dev_err(&op->dev, "Unable to allocate guest memory\n");

WARNING:CONST_STRUCT: struct of_device_id should normally be const
#2227: FILE: drivers/virtio/vop_fsl.c:1879:
+static struct of_device_id vdev_of_match[] = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:UNDOCUMENTED_DT_STRING: DT compatible string "fsl,mpc8349-mu" appears un-documented -- check /home/fedora/lkml-analysis/linux/Documentation/devicetree/bindings/
#2228: FILE: drivers/virtio/vop_fsl.c:1880:
+	{ .compatible = "fsl,mpc8349-mu", },

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2266: FILE: drivers/virtio/vop_host.c:1:
+/*

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2301: FILE: drivers/virtio/vop_host.c:36:
+struct vop_vq {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2340: FILE: drivers/virtio/vop_host.c:75:
+struct vop_vdev {
+

WARNING:TYPO_SPELLING: 'offets' may be misspelled - perhaps 'offsets'?
#2366: FILE: drivers/virtio/vop_host.c:101:
+	 * boundaries, so they appear at offets 1024, 2048, and 3072
 	                                 ^^^^^^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2381: FILE: drivers/virtio/vop_host.c:116:
+struct vop_dev {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2413: FILE: drivers/virtio/vop_host.c:148:
+		pr_debug("DESC %.2d: 0x%.8x %.6d 0x%.4x 0x%.4x\n", i,
+				ioread32(&desc->addr), ioread32(&desc->len),

ERROR:PRINTF_0XDECIMAL: Prefixing 0x with decimal output is defective
#2456: FILE: drivers/virtio/vop_host.c:191:
+	pr_debug("HOST USED_IDX: 0x%.2d\n", vq->host->used_idx);

Prefixing 0x with decimal output is defective and should be corrected.

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2611: FILE: drivers/virtio/vop_host.c:346:
+	for (i = 0; i < out + in; i++) {
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2613: FILE: drivers/virtio/vop_host.c:348:
+		BUG_ON(sg == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sg"
#2613: FILE: drivers/virtio/vop_host.c:348:
+		BUG_ON(sg == NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2647: FILE: drivers/virtio/vop_host.c:382:
+static int vop_add_buf(struct virtqueue *_vq, struct scatterlist sg[],
+				unsigned int out, unsigned int in, void *data)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2652: FILE: drivers/virtio/vop_host.c:387:
+	BUG_ON(data == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#2652: FILE: drivers/virtio/vop_host.c:387:
+	BUG_ON(data == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2653: FILE: drivers/virtio/vop_host.c:388:
+	BUG_ON(out + in == 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2658: FILE: drivers/virtio/vop_host.c:393:
+		dev_dbg(vq->dev, "No free space left: len=%d free=%d\n",
+				out + in, vq->num_free);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2701: FILE: drivers/virtio/vop_host.c:436:
+	 * don't update avail->idx until kick() */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2764: FILE: drivers/virtio/vop_host.c:499:
+	BUG_ON(head >= VOP_RING_SIZE);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2765: FILE: drivers/virtio/vop_host.c:500:
+	BUG_ON(!vq->data[head]);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2805: FILE: drivers/virtio/vop_host.c:540:
+	 * there was more to do */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2828: FILE: drivers/virtio/vop_host.c:563:
+ * for example. It should be reading something from the guest, in this case */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2829: FILE: drivers/virtio/vop_host.c:564:
+static void vopc_get(struct virtio_device *_vdev, unsigned offset, void *buf,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2830: FILE: drivers/virtio/vop_host.c:565:
+		     unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2839: FILE: drivers/virtio/vop_host.c:574:
+static void vopc_set(struct virtio_device *_vdev, unsigned offset,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2840: FILE: drivers/virtio/vop_host.c:575:
+		     const void *buf, unsigned len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2870: FILE: drivers/virtio/vop_host.c:605:
+	dev_dbg(&vdev->vdev.dev, "%s(): <- 0x%.2x (was 0x%.2x)\n",
+			__func__, status, old_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2888: FILE: drivers/virtio/vop_host.c:623:
+static struct virtqueue *vopc_find_vq(struct virtio_device *_vdev,
+					     unsigned index,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2888: FILE: drivers/virtio/vop_host.c:623:
+					     unsigned index,

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#2988: FILE: drivers/virtio/vop_host.c:723:
+	dev_info(&vdev->vdev.dev, "%s(): final features 0x%.8lx\n", __func__, vdev->vdev.features[0]);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3029: FILE: drivers/virtio/vop_host.c:764:
+	 * so we cannot do it here */

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#3079: FILE: drivers/virtio/vop_host.c:814:
+#if 0

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3178: FILE: drivers/virtio/vop_host.c:913:
+	priv->host_mem = dma_alloc_coherent(&dev->dev, VOP_HOST_MEM_SIZE,
+			&priv->host_mem_addr, GFP_KERNEL);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#3180: FILE: drivers/virtio/vop_host.c:915:
+	if (!priv->host_mem) {
+		dev_err(&dev->dev, "Unable to allocate host memory\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3218: FILE: drivers/virtio/vop_host.c:953:
+	dma_free_coherent(&dev->dev, VOP_HOST_MEM_SIZE, priv->host_mem,
+			priv->host_mem_addr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3250: FILE: drivers/virtio/vop_host.c:985:
+	dma_free_coherent(&dev->dev, VOP_HOST_MEM_SIZE, priv->host_mem,
+			priv->host_mem_addr);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3300: FILE: drivers/virtio/vop_hw.h:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3328: FILE: drivers/virtio/vop_hw.h:29:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3331: FILE: drivers/virtio/vop_hw.h:32:
+#define LAWAR0_ENABLE		(1<<31)
                      		  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#3331: FILE: drivers/virtio/vop_hw.h:32:
+#define LAWAR0_ENABLE		(1<<31)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3334: FILE: drivers/virtio/vop_hw.h:35:
+#define POCMR0_ENABLE		(1<<31)
                      		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3334: FILE: drivers/virtio/vop_hw.h:35:
+#define POCMR0_ENABLE		(1<<31)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3339: FILE: drivers/virtio/vop_hw.h:40:
+#define LAWAR1_ENABLE		(1<<31)
                      		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3339: FILE: drivers/virtio/vop_hw.h:40:
+#define LAWAR1_ENABLE		(1<<31)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3342: FILE: drivers/virtio/vop_hw.h:43:
+#define POCMR1_ENABLE		(1<<31)
                      		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3342: FILE: drivers/virtio/vop_hw.h:43:
+#define POCMR1_ENABLE		(1<<31)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3346: FILE: drivers/virtio/vop_hw.h:47:
+
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3354: FILE: drivers/virtio/vop_hw.h:55:
+#define DMA_CHANNEL_BUSY	(1<<2)
                         	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3354: FILE: drivers/virtio/vop_hw.h:55:
+#define DMA_CHANNEL_BUSY	(1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3356: FILE: drivers/virtio/vop_hw.h:57:
+#define DMA_DIRECT_MODE_SNOOP	(1<<20)
                              	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3356: FILE: drivers/virtio/vop_hw.h:57:
+#define DMA_DIRECT_MODE_SNOOP	(1<<20)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3357: FILE: drivers/virtio/vop_hw.h:58:
+#define DMA_CHANNEL_MODE_DIRECT	(1<<2)
                                	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3357: FILE: drivers/virtio/vop_hw.h:58:
+#define DMA_CHANNEL_MODE_DIRECT	(1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3358: FILE: drivers/virtio/vop_hw.h:59:
+#define DMA_CHANNEL_START	(1<<0)
                          	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3358: FILE: drivers/virtio/vop_hw.h:59:
+#define DMA_CHANNEL_START	(1<<0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3360: FILE: drivers/virtio/vop_hw.h:61:
+
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3363: FILE: drivers/virtio/vop_hw.h:64:
+#define LAWAR0_ENABLE		(1<<31)
                      		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3363: FILE: drivers/virtio/vop_hw.h:64:
+#define LAWAR0_ENABLE		(1<<31)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3366: FILE: drivers/virtio/vop_hw.h:67:
+#define POCMR0_ENABLE		(1<<31)
                      		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3366: FILE: drivers/virtio/vop_hw.h:67:
+#define POCMR0_ENABLE		(1<<31)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3370: FILE: drivers/virtio/vop_hw.h:71:
+
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3375: FILE: drivers/virtio/vop_hw.h:76:
+#define PIWAR0_ENABLED		(1<<31)
                       		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3375: FILE: drivers/virtio/vop_hw.h:76:
+#define PIWAR0_ENABLED		(1<<31)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3376: FILE: drivers/virtio/vop_hw.h:77:
+#define PIWAR0_PREFETCH		(1<<29)
                        		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3376: FILE: drivers/virtio/vop_hw.h:77:
+#define PIWAR0_PREFETCH		(1<<29)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000165828.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 83 warnings, 57 checks, 3242 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000165828.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
