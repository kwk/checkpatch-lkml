WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#46: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#51: FILE: drivers/staging/pohmelfs/inode.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#145: FILE: drivers/staging/pohmelfs/inode.c:95:
+	printk("%s: completed ino: %llu, err: %d.\n", __func__, pi->ino, err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: drivers/staging/pohmelfs/inode.c:100:
+static int pohmelfs_write_trans_complete(struct page **pages, unsigned int page_num,
+		void *private, int err)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#152: FILE: drivers/staging/pohmelfs/inode.c:102:
+	unsigned i;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#155: FILE: drivers/staging/pohmelfs/inode.c:105:
+	dprintk("%s: pages: %lu-%lu, page_num: %u, err: %d.\n",
+			__func__, pages[0]->index, pages[page_num-1]->index,

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#155: FILE: drivers/staging/pohmelfs/inode.c:105:
+			__func__, pages[0]->index, pages[page_num-1]->index,
 			                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#186: FILE: drivers/staging/pohmelfs/inode.c:136:
+	ret = radix_tree_gang_lookup_tag(&mapping->page_tree,
+				(void **)&page, index, 1, PAGECACHE_TAG_DIRTY);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#248: FILE: drivers/staging/pohmelfs/inode.c:198:
+		trans->page_num = nr_pages = find_get_pages_tag(mapping, &index,

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#253: FILE: drivers/staging/pohmelfs/inode.c:203:
+		dprintk("%s: t: %p, nr_pages: %u, end: %lu, index: %lu, max: %u.\n",
+				__func__, trans, nr_pages, end, index, trans->page_num);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#284: FILE: drivers/staging/pohmelfs/inode.c:234:
+				dprintk("%s: not clear for io page: %p, writeback: %d.\n",
+						__func__, page, PageWriteback(page));

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#292: FILE: drivers/staging/pohmelfs/inode.c:242:
+#if 0

WARNING:LONG_LINE_STRING: line length of 115 exceeds 100 columns
#293: FILE: drivers/staging/pohmelfs/inode.c:243:
+			dprintk("%s: %u/%u added trans: %p, gen: %u, page: %p, [High: %d], size: %lu, idx: %lu.\n",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#294: FILE: drivers/staging/pohmelfs/inode.c:244:
+			dprintk("%s: %u/%u added trans: %p, gen: %u, page: %p, [High: %d], size: %lu, idx: %lu.\n",
+					__func__, i, trans->page_num, trans, trans->gen, page,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#347: FILE: drivers/staging/pohmelfs/inode.c:297:
+static int pohmelfs_write_inode_complete(struct page **pages, unsigned int page_num,
+		void *private, int err)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#423: FILE: drivers/staging/pohmelfs/inode.c:373:
+			n = list_first_entry(&parent->sync_create_list,
+				struct pohmelfs_name, sync_create_entry);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#434: FILE: drivers/staging/pohmelfs/inode.c:384:
+		dprintk("%s: parent: %llu, ino: %llu, inode: %p.\n",
+				__func__, parent->ino, n->ino, inode);

WARNING:LINE_SPACING: Missing a blank line after declarations
#438: FILE: drivers/staging/pohmelfs/inode.c:388:
+			struct pohmelfs_inode *pi = POHMELFS_I(inode);
+			pohmelfs_write_create_inode(pi);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#440: FILE: drivers/staging/pohmelfs/inode.c:390:
+			iput(inode);
 			^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#492: FILE: drivers/staging/pohmelfs/inode.c:442:
+		dprintk("%s: page: %p, locked: %d, uptodate: %d, error: %d, flags: %lx.\n",
 		                                   ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#493: FILE: drivers/staging/pohmelfs/inode.c:443:
+		dprintk("%s: page: %p, locked: %d, uptodate: %d, error: %d, flags: %lx.\n",
+				__func__, page, PageLocked(page), PageUptodate(page),

CHECK:LINE_SPACING: Please don't use multiple blank lines
#513: FILE: drivers/staging/pohmelfs/inode.c:463:
+
+

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#518: FILE: drivers/staging/pohmelfs/inode.c:468:
+		printk("%s: page: %p, uptodate: %d, locked: %d, err: %d.\n",
 		                      ^^^^^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#518: FILE: drivers/staging/pohmelfs/inode.c:468:
+		printk("%s: page: %p, uptodate: %d, locked: %d, err: %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#519: FILE: drivers/staging/pohmelfs/inode.c:469:
+		printk("%s: page: %p, uptodate: %d, locked: %d, err: %d.\n",
+			__func__, page, PageUptodate(page), PageLocked(page), err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#525: FILE: drivers/staging/pohmelfs/inode.c:475:
+static int pohmelfs_read_page_complete(struct page **pages, unsigned int page_num,
+		void *private, int err)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#528: FILE: drivers/staging/pohmelfs/inode.c:478:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#558: FILE: drivers/staging/pohmelfs/inode.c:508:
+	err = pohmelfs_data_lock(pi, page->index << PAGE_CACHE_SHIFT,
+			PAGE_SIZE, POHMELFS_READ_LOCK);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#601: FILE: drivers/staging/pohmelfs/inode.c:551:
+	dprintk("%s: path: '%s', page: %p, ino: %llu, start: %llu, size: %lu.\n",
+			__func__, (char *)data, page, pi->ino, cmd->start, PAGE_CACHE_SIZE);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#620: FILE: drivers/staging/pohmelfs/inode.c:570:
+	printk("%s: page: %p, start: %lu, size: %lu, err: %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#621: FILE: drivers/staging/pohmelfs/inode.c:571:
+	printk("%s: page: %p, start: %lu, size: %lu, err: %d.\n",
+		__func__, page, page->index << PAGE_CACHE_SHIFT, PAGE_CACHE_SIZE, err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#631: FILE: drivers/staging/pohmelfs/inode.c:581:
+static int pohmelfs_write_begin(struct file *file, struct address_space *mapping,
+		loff_t pos, unsigned len, unsigned flags,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#631: FILE: drivers/staging/pohmelfs/inode.c:581:
+		loff_t pos, unsigned len, unsigned flags,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#631: FILE: drivers/staging/pohmelfs/inode.c:581:
+		loff_t pos, unsigned len, unsigned flags,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#637: FILE: drivers/staging/pohmelfs/inode.c:587:
+	unsigned start, end;

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#647: FILE: drivers/staging/pohmelfs/inode.c:597:
+#if 0

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#648: FILE: drivers/staging/pohmelfs/inode.c:598:
+	dprintk("%s: page: %p pos: %llu, len: %u, index: %lu, start: %u, end: %u, uptodate: %d.\n",
 	                                                                          ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#649: FILE: drivers/staging/pohmelfs/inode.c:599:
+	dprintk("%s: page: %p pos: %llu, len: %u, index: %lu, start: %u, end: %u, uptodate: %d.\n",
+			__func__, page,	pos, len, index, start, end, PageUptodate(page));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#690: FILE: drivers/staging/pohmelfs/inode.c:640:
+static int pohmelfs_write_end(struct file *file, struct address_space *mapping,
+			loff_t pos, unsigned len, unsigned copied,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#690: FILE: drivers/staging/pohmelfs/inode.c:640:
+			loff_t pos, unsigned len, unsigned copied,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#690: FILE: drivers/staging/pohmelfs/inode.c:640:
+			loff_t pos, unsigned len, unsigned copied,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#696: FILE: drivers/staging/pohmelfs/inode.c:646:
+		unsigned from = pos & (PAGE_CACHE_SIZE - 1);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#706: FILE: drivers/staging/pohmelfs/inode.c:656:
+#if 0

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#708: FILE: drivers/staging/pohmelfs/inode.c:658:
+	dprintk("%s: page: %p [U: %d, D: %d, L: %d], pos: %llu, len: %u, copied: %u.\n",
+			__func__, page,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#729: FILE: drivers/staging/pohmelfs/inode.c:679:
+static int pohmelfs_readpages_trans_complete(struct page **__pages, unsigned int page_num,
+		void *private, int err)

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#736: FILE: drivers/staging/pohmelfs/inode.c:686:
+	pages = kzalloc(sizeof(void *) * page_num, GFP_NOIO);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#746: FILE: drivers/staging/pohmelfs/inode.c:696:
+	for (i=0; i<num; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#746: FILE: drivers/staging/pohmelfs/inode.c:696:
+	for (i=0; i<num; ++i) {
 	           ^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#750: FILE: drivers/staging/pohmelfs/inode.c:700:
+			printk("%s: %u/%u: page: %p, index: %lu, uptodate: %d, locked: %d, err: %d.\n",
 			                                         ^^^^^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#750: FILE: drivers/staging/pohmelfs/inode.c:700:
+			printk("%s: %u/%u: page: %p, index: %lu, uptodate: %d, locked: %d, err: %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#751: FILE: drivers/staging/pohmelfs/inode.c:701:
+			printk("%s: %u/%u: page: %p, index: %lu, uptodate: %d, locked: %d, err: %d.\n",
+				__func__, i, num, page, page->index,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#777: FILE: drivers/staging/pohmelfs/inode.c:727:
+	err = pohmelfs_data_lock(pi, first->index << PAGE_CACHE_SHIFT,
+			num * PAGE_SIZE, POHMELFS_READ_LOCK);

WARNING:SPLIT_STRING: quoted string split across lines
#815: FILE: drivers/staging/pohmelfs/inode.c:765:
+	dprintk("%s: t: %p, gen: %u, path: '%s', path_len: %u, "
+			"start: %lu, num: %u.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#834: FILE: drivers/staging/pohmelfs/inode.c:784:
+static int pohmelfs_readpages(struct file *file, struct address_space *mapping,
+			struct list_head *pages, unsigned nr_pages)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#834: FILE: drivers/staging/pohmelfs/inode.c:784:
+			struct list_head *pages, unsigned nr_pages)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#846: FILE: drivers/staging/pohmelfs/inode.c:796:
+		if (!add_to_page_cache_lru(page, mapping,
+					page->index, GFP_KERNEL)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#847: FILE: drivers/staging/pohmelfs/inode.c:797:
+					page->index, GFP_KERNEL)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#855: FILE: drivers/staging/pohmelfs/inode.c:805:
+			dprintk("%s: added to lru page: %p, page_index: %lu, first_index: %lu.\n",
+					__func__, page, page->index, first->index);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'num > 500'
#857: FILE: drivers/staging/pohmelfs/inode.c:807:
+			if (unlikely(first->index + num != page->index) || (num > 500)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#859: FILE: drivers/staging/pohmelfs/inode.c:809:
+				pohmelfs_send_readpages(POHMELFS_I(mapping->host),
+						first, num);

WARNING:TYPO_SPELLING: 'addres' may be misspelled - perhaps 'address'?
#877: FILE: drivers/staging/pohmelfs/inode.c:827:
+ * Small addres space operations for POHMELFS.
          ^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#885: FILE: drivers/staging/pohmelfs/inode.c:835:
+^I.set_page_dirty ^I= __set_page_dirty_nobuffers,$

WARNING:TYPO_SPELLING: 'initilizes' may be misspelled - perhaps 'initializes'?
#909: FILE: drivers/staging/pohmelfs/inode.c:859:
+ * ->alloc_inode() callback. Allocates inode and initilizes private data.
                                                  ^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#953: FILE: drivers/staging/pohmelfs/inode.c:903:
+ssize_t pohmelfs_write(struct file *file, const char __user *buf,
+		size_t len, loff_t *ppos)

WARNING:STATIC_CONST: Move const after static - use 'static const struct file_operations '
#996: FILE: drivers/staging/pohmelfs/inode.c:946:
+const static struct file_operations pohmelfs_file_ops = {

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#1026: FILE: drivers/staging/pohmelfs/inode.c:976:
+		dprintk("%s: ino: %llu, inode changes are not allowed.\n", __func__, POHMELFS_I(inode)->ino);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#1039: FILE: drivers/staging/pohmelfs/inode.c:989:
+		dprintk("%s: ino: %llu, failed to set the attributes.\n", __func__, POHMELFS_I(inode)->ino);

WARNING:LONG_LINE_STRING: line length of 101 exceeds 100 columns
#1043: FILE: drivers/staging/pohmelfs/inode.c:993:
+	dprintk("%s: ino: %llu, mode: %o -> %o, uid: %u -> %u, gid: %u -> %u, size: %llu -> %llu.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1044: FILE: drivers/staging/pohmelfs/inode.c:994:
+	dprintk("%s: ino: %llu, mode: %o -> %o, uid: %u -> %u, gid: %u -> %u, size: %llu -> %llu.\n",
+			__func__, POHMELFS_I(inode)->ino, inode->i_mode, attr->ia_mode,

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#1045: FILE: drivers/staging/pohmelfs/inode.c:995:
+			inode->i_uid, attr->ia_uid, inode->i_gid, attr->ia_gid, inode->i_size, attr->ia_size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1078: FILE: drivers/staging/pohmelfs/inode.c:1028:
+static int pohmelfs_send_xattr_req(struct pohmelfs_inode *pi, u64 id, u64 start,
+		const char *name, const void *value, size_t attrsize, int command)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1087: FILE: drivers/staging/pohmelfs/inode.c:1037:
+	dprintk("%s: id: %llu, start: %llu, name: '%s', attrsize: %u, cmd: %d.\n",
+			__func__, id, start, name, attrsize, command);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1141: FILE: drivers/staging/pohmelfs/inode.c:1091:
+static int pohmelfs_setxattr(struct dentry *dentry, const char *name,
+		const void *value, size_t attrsize, int flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1155: FILE: drivers/staging/pohmelfs/inode.c:1105:
+static ssize_t pohmelfs_getxattr(struct dentry *dentry, const char *name,
+		void *value, size_t attrsize)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1172: FILE: drivers/staging/pohmelfs/inode.c:1122:
+	dprintk("%s: ino: %llu, name: '%s', size: %zu.\n",
+			__func__, pi->ino, name, attrsize);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1230: FILE: drivers/staging/pohmelfs/inode.c:1180:
+	dprintk("%s: ino: %llu, mode: %o, uid: %u, gid: %u, size: %llu.\n",
+			__func__, pi->ino, inode->i_mode, inode->i_uid,

WARNING:LONG_LINE_STRING: line length of 112 exceeds 100 columns
#1259: FILE: drivers/staging/pohmelfs/inode.c:1209:
+	dprintk("%s: inode: %p, num: %lu/%llu inode is regular: %d, dir: %d, link: %d, mode: %o, size: %llu.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1260: FILE: drivers/staging/pohmelfs/inode.c:1210:
+	dprintk("%s: inode: %p, num: %lu/%llu inode is regular: %d, dir: %d, link: %d, mode: %o, size: %llu.\n",
+			__func__, inode, inode->i_ino, info->ino,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1264: FILE: drivers/staging/pohmelfs/inode.c:1214:
+	inode->i_mtime = inode->i_atime = inode->i_ctime = CURRENT_TIME_SEC;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1298: FILE: drivers/staging/pohmelfs/inode.c:1248:
+static struct pohmelfs_inode *pohmelfs_get_inode_from_list(struct pohmelfs_sb *psb,
+		struct list_head *head, unsigned int *count)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1305: FILE: drivers/staging/pohmelfs/inode.c:1255:
+		pi = list_entry(head->next, struct pohmelfs_inode,
+					inode_entry);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1338: FILE: drivers/staging/pohmelfs/inode.c:1288:
+	dprintk("%s.\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1349: FILE: drivers/staging/pohmelfs/inode.c:1299:
+		dprintk("%s: ino: %llu, pi: %p, inode: %p, count: %u.\n",
+				__func__, pi->ino, pi, inode, count);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1352: FILE: drivers/staging/pohmelfs/inode.c:1302:
+			printk("%s: ino: %llu, pi: %p, inode: %p, count: %u, i_count: %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1353: FILE: drivers/staging/pohmelfs/inode.c:1303:
+			printk("%s: ino: %llu, pi: %p, inode: %p, count: %u, i_count: %d.\n",
+					__func__, pi->ino, pi, inode, count,

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1360: FILE: drivers/staging/pohmelfs/inode.c:1310:
+			iput(&pi->vfs_inode);
 			^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1367: FILE: drivers/staging/pohmelfs/inode.c:1317:
+		dprintk("%s: ino: %llu, pi: %p, inode: %p, i_count: %u.\n",
+				__func__, pi->ino, pi, inode, atomic_read(&inode->i_count));

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1379: FILE: drivers/staging/pohmelfs/inode.c:1329:
+				iput(&pi->vfs_inode);
 				^^^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1383: FILE: drivers/staging/pohmelfs/inode.c:1333:
+	psb->trans_scan_timeout = psb->drop_scan_timeout = 0;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1420: FILE: drivers/staging/pohmelfs/inode.c:1370:
+	buf->f_bfree = buf->f_bavail = psb->avail_size >> PAGE_SHIFT;

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#1442: FILE: drivers/staging/pohmelfs/inode.c:1392:
+		seq_printf(seq, ",crypto_fail_unsupported");

WARNING:LINE_SPACING: Missing a blank line after declarations
#1493: FILE: drivers/staging/pohmelfs/inode.c:1443:
+		int token;
+		if (!*p)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1502: FILE: drivers/staging/pohmelfs/inode.c:1452:
+		switch (token) {
+			case pohmelfs_opt_idx:
[...]
+			case pohmelfs_opt_trans_scan_timeout:
[...]
+			case pohmelfs_opt_drop_scan_timeout:
[...]
+			case pohmelfs_opt_wait_on_page_timeout:
[...]
+			case pohmelfs_opt_mcache_timeout:
[...]
+			case pohmelfs_opt_trans_retries:
[...]
+			case pohmelfs_opt_crypto_thread_num:
[...]
+			case pohmelfs_opt_trans_max_pages:
[...]
+			case pohmelfs_opt_crypto_fail_unsupported:
[...]
+			default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1560: FILE: drivers/staging/pohmelfs/inode.c:1510:
+	dprintk("%s: ino: %llu, pi: %p, inode: %p, count: %u.\n",
+			__func__, pi->ino, pi, &pi->vfs_inode, count);

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1566: FILE: drivers/staging/pohmelfs/inode.c:1516:
+		iput(&pi->vfs_inode);
 		^^^^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1576: FILE: drivers/staging/pohmelfs/inode.c:1526:
+	while ((pi = pohmelfs_get_inode_from_list(psb, &psb->drop_list, &count))) {
+		pohmelfs_put_inode_count(pi, count);
+	}

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1605: FILE: drivers/staging/pohmelfs/inode.c:1555:
+		if (timeout && time_after(dst->send_time + timeout, jiffies)
+				&& dst->retries == 0)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1615: FILE: drivers/staging/pohmelfs/inode.c:1565:
+		if (timeout && (++dst->retries < psb->trans_retries)) {
+			err = netfs_trans_resend(t, psb);
+		}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1658: FILE: drivers/staging/pohmelfs/inode.c:1608:
+int pohmelfs_meta_command_data(struct pohmelfs_inode *pi, u64 id, unsigned int cmd_op, char *addon,
+		unsigned int flags, netfs_trans_complete_t complete, void *priv, u64 start)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1670: FILE: drivers/staging/pohmelfs/inode.c:1620:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1751: FILE: drivers/staging/pohmelfs/inode.c:1701:
+int pohmelfs_meta_command(struct pohmelfs_inode *pi, unsigned int cmd_op, unsigned int flags,
+		netfs_trans_complete_t complete, void *priv, u64 start)

WARNING:TYPO_SPELLING: 'informaion' may be misspelled - perhaps 'information'?
#1758: FILE: drivers/staging/pohmelfs/inode.c:1708:
+ * which will update server's informaion about size of the export,
                               ^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1789: FILE: drivers/staging/pohmelfs/inode.c:1739:
+	err = wait_event_interruptible_timeout(psb->wait,
+			(psb->flags != ~0),

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1791: FILE: drivers/staging/pohmelfs/inode.c:1741:
+	if (!err) {
[...]
+	} else {
[...]

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*psb)...) over kzalloc(sizeof(struct pohmelfs_sb)...)
#1819: FILE: drivers/staging/pohmelfs/inode.c:1769:
+	psb = kzalloc(sizeof(struct pohmelfs_sb), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1844: FILE: drivers/staging/pohmelfs/inode.c:1794:
+^I$

CHECK:SPACING: No space is necessary after a cast
#1869: FILE: drivers/staging/pohmelfs/inode.c:1819:
+	err = pohmelfs_parse_options((char *) data, psb);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1893: FILE: drivers/staging/pohmelfs/inode.c:1843:
+	npi = pohmelfs_create_entry_local(psb, NULL, &str, 0, 0755|S_IFDIR);
 	                                                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1904: FILE: drivers/staging/pohmelfs/inode.c:1854:
+^I$

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1914: FILE: drivers/staging/pohmelfs/inode.c:1864:
+	iput(root);
 	^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1934: FILE: drivers/staging/pohmelfs/inode.c:1884:
+static int pohmelfs_get_sb(struct file_system_type *fs_type,
+	int flags, const char *dev_name, void *data, struct vfsmount *mnt)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1944: FILE: drivers/staging/pohmelfs/inode.c:1894:
+^I.kill_sb ^I= kill_anon_super,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1960: FILE: drivers/staging/pohmelfs/inode.c:1910:
+	pohmelfs_inode_cache = kmem_cache_create("pohmelfs_inode_cache",
+				sizeof(struct pohmelfs_inode),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1961: FILE: drivers/staging/pohmelfs/inode.c:1911:
+				0, (SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD),
 				                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2014: FILE: drivers/staging/pohmelfs/inode.c:1964:
+        unregister_filesystem(&pohmel_fs_type);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2014: FILE: drivers/staging/pohmelfs/inode.c:1964:
+        unregister_filesystem(&pohmel_fs_type);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000169650.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 49 warnings, 59 checks, 1976 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000169650.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
