CHECK:CAMELCASE: Avoid CamelCase: <Opt_journal_checksum>
#138: FILE: fs/ext4/super.c:872:
+	Opt_journal_checksum, Opt_journal_async_commit,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Opt_journal_async_commit>
#138: FILE: fs/ext4/super.c:872:
+	Opt_journal_checksum, Opt_journal_async_commit,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#171: FILE: fs/ext4/super.c:2129:
+		jbd2_journal_set_features(sbi->s_journal,
+				JBD2_FEATURE_COMPAT_CHECKSUM, 0,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#175: FILE: fs/ext4/super.c:2133:
+		jbd2_journal_set_features(sbi->s_journal,
+				JBD2_FEATURE_COMPAT_CHECKSUM, 0, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#177: FILE: fs/ext4/super.c:2135:
+		jbd2_journal_clear_features(sbi->s_journal, 0, 0,
+				JBD2_FEATURE_INCOMPAT_ASYNC_COMMIT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#180: FILE: fs/ext4/super.c:2138:
+		jbd2_journal_clear_features(sbi->s_journal,
+				JBD2_FEATURE_COMPAT_CHECKSUM, 0,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#244: FILE: fs/jbd2/commit.c:132:
+^I^Itmp->h_chksum_type ^I= JBD2_CRC32_CHKSUM;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#245: FILE: fs/jbd2/commit.c:133:
+^I^Itmp->h_chksum_size ^I= JBD2_CRC32_CHKSUM_SIZE;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#246: FILE: fs/jbd2/commit.c:134:
+^I^Itmp->h_chksum[0] ^I= cpu_to_be32(crc32_sum);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#259: FILE: fs/jbd2/commit.c:145:
+	if (journal->j_flags & JBD2_BARRIER &&
+		!JBD2_HAS_COMPAT_FEATURE(journal,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: fs/jbd2/commit.c:236:
+  }$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#359: FILE: fs/jbd2/commit.c:361:
+	checksum = crc32_be(crc32_sum,
+		(void *)(addr + offset_in_page(bh->b_data)), bh->b_size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#389: FILE: fs/jbd2/commit.c:550:
+	if (!JBD2_HAS_INCOMPAT_FEATURE(journal,
+		JBD2_FEATURE_INCOMPAT_ASYNC_COMMIT))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#391: FILE: fs/jbd2/commit.c:552:
+		err = journal_wait_on_locked_list(journal,
+						commit_transaction);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#430: FILE: fs/jbd2/commit.c:731:
+				if (JBD2_HAS_COMPAT_FEATURE(journal,
+					JBD2_FEATURE_COMPAT_CHECKSUM)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#445: FILE: fs/jbd2/commit.c:755:
+	if (JBD2_HAS_INCOMPAT_FEATURE(journal,
+		JBD2_FEATURE_INCOMPAT_ASYNC_COMMIT)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#447: FILE: fs/jbd2/commit.c:757:
+		err = journal_submit_commit_record(journal, commit_transaction,
+						 &cbh, crc32_sum);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#453: FILE: fs/jbd2/commit.c:763:
+		err = journal_wait_on_locked_list(journal,
+						commit_transaction);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#469: FILE: fs/jbd2/commit.c:869:
+	if (!JBD2_HAS_INCOMPAT_FEATURE(journal,
+		JBD2_FEATURE_INCOMPAT_ASYNC_COMMIT)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#471: FILE: fs/jbd2/commit.c:871:
+		err = journal_submit_commit_record(journal, commit_transaction,
+						&cbh, crc32_sum);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#489: FILE: fs/jbd2/journal.c:1583:
+ * ^I^I^I^I    superblock$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#542: FILE: fs/jbd2/recovery.c:328:
+	unsigned io_block;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#554: FILE: fs/jbd2/recovery.c:340:
+			printk(KERN_ERR "JBD: IO error %d recovering block "

WARNING:SPLIT_STRING: quoted string split across lines
#555: FILE: fs/jbd2/recovery.c:341:
+			printk(KERN_ERR "JBD: IO error %d recovering block "
+				"%u in log\n", err, io_block);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#557: FILE: fs/jbd2/recovery.c:343:
+			return 1;
+		} else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#559: FILE: fs/jbd2/recovery.c:345:
+			*crc32_sum = crc32_be(*crc32_sum, (void *)obh->b_data,
+				     obh->b_size);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#584: FILE: fs/jbd2/recovery.c:457:
+			 * just skip over the blocks it describes. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#588: FILE: fs/jbd2/recovery.c:461:
+				    JBD2_HAS_COMPAT_FEATURE(journal,
+					    JBD2_FEATURE_COMPAT_CHECKSUM) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#591: FILE: fs/jbd2/recovery.c:464:
+					if (calc_chksums(journal, bh,
+							&next_log_block,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#616: FILE: fs/jbd2/recovery.c:574:
+^I^I^I * ^Iasync_commit             sync_commit$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#617: FILE: fs/jbd2/recovery.c:575:
+^I^I^I *     ^I^I|                    |$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#623: FILE: fs/jbd2/recovery.c:581:
+^I^I^I * ^I _______|______________$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#624: FILE: fs/jbd2/recovery.c:582:
+^I^I^I * ^I|^I ^I      |$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#629: FILE: fs/jbd2/recovery.c:587:
+^I^I^I *     ^I^I|^I           ^I|$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#645: FILE: fs/jbd2/recovery.c:603:
+			    JBD2_HAS_COMPAT_FEATURE(journal,
+				    JBD2_FEATURE_COMPAT_CHECKSUM)) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#649: FILE: fs/jbd2/recovery.c:607:
+				unsigned found_chksum =

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#652: FILE: fs/jbd2/recovery.c:610:
+				chksum_err = chksum_seen = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#655: FILE: fs/jbd2/recovery.c:613:
+					printk(KERN_ERR "JBD: Transaction %u "

WARNING:SPLIT_STRING: quoted string split across lines
#656: FILE: fs/jbd2/recovery.c:614:
+					printk(KERN_ERR "JBD: Transaction %u "
+						"found to be corrupt.\n",

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 39)
#662: FILE: fs/jbd2/recovery.c:620:
+				if (crc32_sum == found_chksum &&
[...]
+				       chksum_seen = 1;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 48)
#667: FILE: fs/jbd2/recovery.c:625:
+				else if (!(cbh->h_chksum_type == 0 &&
[...]
+						chksum_err = 1;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#668: FILE: fs/jbd2/recovery.c:626:
+				else if (!(cbh->h_chksum_type == 0 &&
+					     cbh->h_chksum_size == 0 &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#687: FILE: fs/jbd2/recovery.c:645:
+					if (!JBD2_HAS_COMPAT_FEATURE(journal,
+					   JBD2_FEATURE_INCOMPAT_ASYNC_COMMIT)){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#688: FILE: fs/jbd2/recovery.c:646:
+						printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#690: FILE: fs/jbd2/recovery.c:648:
+						       "JBD: Transaction %u "
+						       "found to be corrupt.\n",

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#756: FILE: include/linux/jbd2.h:171:
+^Iunsigned char ^Ih_padding[2];$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#757: FILE: include/linux/jbd2.h:172:
+^I__be32 ^I^Ih_chksum[JBD2_CHECKSUM_BYTES];$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'journal_t *' should also have an identifier name
#789: FILE: include/linux/jbd2.h:1026:
+extern int	   jbd2_journal_clear_features

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#789: FILE: include/linux/jbd2.h:1026:
+extern int	   jbd2_journal_clear_features

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#789: FILE: include/linux/jbd2.h:1026:
+extern int	   jbd2_journal_clear_features

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#789: FILE: include/linux/jbd2.h:1026:
+extern int	   jbd2_journal_clear_features

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000333562.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 28 warnings, 23 checks, 638 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000333562.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
