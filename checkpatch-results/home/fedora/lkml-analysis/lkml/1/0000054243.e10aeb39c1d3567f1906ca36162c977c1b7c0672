CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#149: FILE: kernel/perf_event.c:4311:
+static void perf_hw_breakpoint_handler(struct hw_breakpoint *bp,
+					struct pt_regs *regs)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#182: FILE: kernel/perf_event.c:4344:
+static const struct pmu *hw_breakpoint_perf_event_init(struct perf_event *event,
+						    int cpu, gfp_t gfpflags)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#189: FILE: kernel/perf_event.c:4351:
+	bp = event->hw.bp = kzalloc(sizeof(struct hw_breakpoint), gfpflags);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*event->hw.bp)...) over kzalloc(sizeof(struct hw_breakpoint)...)
#189: FILE: kernel/perf_event.c:4351:
+	bp = event->hw.bp = kzalloc(sizeof(struct hw_breakpoint), gfpflags);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#194: FILE: kernel/perf_event.c:4356:
+	switch (event_id) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: tools/perf/util/parse-events.c:56:
+  { CHBP(WRITE),^I^I"memory-write",^I^I"w"^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: tools/perf/util/parse-events.c:57:
+  { CHBP(RW),^I^I^I"memory-readwrite",^I"rw"^I^I},$

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#272: FILE: tools/perf/util/parse-events.c:88:
+static const char *hbp_event_names[] = {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000054243.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 5 checks, 269 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000054243.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
