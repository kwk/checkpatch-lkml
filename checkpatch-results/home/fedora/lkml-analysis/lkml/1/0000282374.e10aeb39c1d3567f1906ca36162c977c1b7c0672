WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
> > > > generic API, too?  It's probably quite hard, since there are devices

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#83: FILE: drivers/regulator/core.c:363:
+static ssize_t regulator_suspend_mem_uV_show(struct device *dev,
+				struct device_attribute *attr, char *buf)

CHECK:CAMELCASE: Avoid CamelCase: <uV>
#89: FILE: drivers/regulator/core.c:369:
+	return sprintf(buf, "%d\n", rdev->constraints->state_mem.uV);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#93: FILE: drivers/regulator/core.c:373:
+static ssize_t regulator_suspend_disk_uV_show(struct device *dev,
+				struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#103: FILE: drivers/regulator/core.c:383:
+static ssize_t regulator_suspend_standby_uV_show(struct device *dev,
+				struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#113: FILE: drivers/regulator/core.c:393:
+static ssize_t suspend_opmode_show(struct regulator_dev *rdev,
+	unsigned int mode, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#129: FILE: drivers/regulator/core.c:409:
+static ssize_t regulator_suspend_mem_mode_show(struct device *dev,
+				struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: drivers/regulator/core.c:420:
+static ssize_t regulator_suspend_disk_mode_show(struct device *dev,
+				struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#151: FILE: drivers/regulator/core.c:431:
+static ssize_t regulator_suspend_standby_mode_show(struct device *dev,
+				struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#162: FILE: drivers/regulator/core.c:442:
+static ssize_t regulator_suspend_mem_state_show(struct device *dev,
+				   struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#176: FILE: drivers/regulator/core.c:456:
+static ssize_t regulator_suspend_disk_state_show(struct device *dev,
+				   struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#190: FILE: drivers/regulator/core.c:470:
+static ssize_t regulator_suspend_standby_state_show(struct device *dev,
+				   struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#210: FILE: drivers/regulator/core.c:495:
+	__ATTR(suspend_mem_microvolts, 0444,
+		regulator_suspend_mem_uV_show, NULL),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#212: FILE: drivers/regulator/core.c:497:
+	__ATTR(suspend_disk_microvolts, 0444,
+		regulator_suspend_disk_uV_show, NULL),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#214: FILE: drivers/regulator/core.c:499:
+	__ATTR(suspend_standby_microvolts, 0444,
+		regulator_suspend_standby_uV_show, NULL),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#216: FILE: drivers/regulator/core.c:501:
+	__ATTR(suspend_mem_mode, 0444,
+		regulator_suspend_mem_mode_show, NULL),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#218: FILE: drivers/regulator/core.c:503:
+	__ATTR(suspend_disk_mode, 0444,
+		regulator_suspend_disk_mode_show, NULL),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#220: FILE: drivers/regulator/core.c:505:
+	__ATTR(suspend_standby_mode, 0444,
+		regulator_suspend_standby_mode_show, NULL),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#222: FILE: drivers/regulator/core.c:507:
+	__ATTR(suspend_mem_state, 0444,
+		regulator_suspend_mem_state_show, NULL),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#224: FILE: drivers/regulator/core.c:509:
+	__ATTR(suspend_disk_state, 0444,
+		regulator_suspend_disk_state_show, NULL),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#226: FILE: drivers/regulator/core.c:511:
+	__ATTR(suspend_standby_state, 0444,
+		regulator_suspend_standby_state_show, NULL),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#235: FILE: drivers/regulator/core.c:568:
+static int suspend_set_state(struct regulator_dev *rdev,
+	struct regulator_state *rstate)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#241: FILE: drivers/regulator/core.c:574:
+	if (!rdev->desc->ops->set_suspend_enable ||
+		!rdev->desc->ops->set_suspend_disable)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#249: FILE: drivers/regulator/core.c:582:
+		printk(KERN_ERR "%s: failed to enabled/disable\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#256: FILE: drivers/regulator/core.c:589:
+			printk(KERN_ERR "%s: failed to set voltage\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#257: FILE: drivers/regulator/core.c:590:
+			printk(KERN_ERR "%s: failed to set voltage\n",
+				__func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#265: FILE: drivers/regulator/core.c:598:
+			printk(KERN_ERR "%s: failed to set mode\n", __func__);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#337: FILE: drivers/regulator/core.c:1834:
+	list_for_each_entry(rdev, &regulator_list, list) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#343: FILE: drivers/regulator/core.c:1840:
+			printk(KERN_ERR "%s: failed to prepare %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#344: FILE: drivers/regulator/core.c:1841:
+			printk(KERN_ERR "%s: failed to prepare %s\n",
+				__func__, rdev->desc->name);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#368: FILE: include/linux/regulator/driver.h:54:
+	 * it's parent PMIC enters a global STANBY/HIBERNATE state */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPACING: Unnecessary space before function pointer arguments
#371: FILE: include/linux/regulator/driver.h:57:
+	int (*set_suspend_voltage) (struct regulator_dev *, int uV);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct regulator_dev *' should also have an identifier name
#371: FILE: include/linux/regulator/driver.h:57:
+	int (*set_suspend_voltage) (struct regulator_dev *, int uV);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: Unnecessary space before function pointer arguments
#374: FILE: include/linux/regulator/driver.h:60:
+	int (*set_suspend_enable) (struct regulator_dev *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct regulator_dev *' should also have an identifier name
#374: FILE: include/linux/regulator/driver.h:60:
+	int (*set_suspend_enable) (struct regulator_dev *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#375: FILE: include/linux/regulator/driver.h:61:
+	int (*set_suspend_disable) (struct regulator_dev *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct regulator_dev *' should also have an identifier name
#375: FILE: include/linux/regulator/driver.h:61:
+	int (*set_suspend_disable) (struct regulator_dev *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#378: FILE: include/linux/regulator/driver.h:64:
+	int (*set_suspend_mode) (struct regulator_dev *, unsigned int mode);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct regulator_dev *' should also have an identifier name
#378: FILE: include/linux/regulator/driver.h:64:
+	int (*set_suspend_mode) (struct regulator_dev *, unsigned int mode);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#390: FILE: include/linux/regulator/machine.h:42:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'syatem' may be misspelled - perhaps 'system'?
#392: FILE: include/linux/regulator/machine.h:44:
+ * struct regulator_state - regulator state during low power syatem states
                                                              ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000282374.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 15 warnings, 26 checks, 473 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000282374.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
