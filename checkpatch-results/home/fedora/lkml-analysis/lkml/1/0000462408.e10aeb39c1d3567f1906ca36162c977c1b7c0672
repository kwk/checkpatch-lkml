WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
diff -urN -X fbdev-2.6/Documentation/dontdiff linus-2.6/drivers/video/display/display-sysfs.c fbdev-2.6/drivers/video/display/display-sysfs.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#37: FILE: drivers/video/display/display-sysfs.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#55: FILE: drivers/video/display/display-sysfs.c:19:
+ *  with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#56: FILE: drivers/video/display/display-sysfs.c:20:
+ *  59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#67: FILE: drivers/video/display/display-sysfs.c:31:
+static ssize_t display_show_name(struct device *dev,
+				struct device_attribute *attr, char *buf)

WARNING:LINE_SPACING: Missing a blank line after declarations
#70: FILE: drivers/video/display/display-sysfs.c:34:
+	struct display_device *dsp = dev_get_drvdata(dev);
+	return snprintf(buf, PAGE_SIZE, "%s\n", dsp->name);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#74: FILE: drivers/video/display/display-sysfs.c:38:
+static ssize_t display_show_type(struct device *dev,
+				struct device_attribute *attr, char *buf)

WARNING:LINE_SPACING: Missing a blank line after declarations
#77: FILE: drivers/video/display/display-sysfs.c:41:
+	struct display_device *dsp = dev_get_drvdata(dev);
+	return snprintf(buf, PAGE_SIZE, "%s\n", dsp->type);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#81: FILE: drivers/video/display/display-sysfs.c:45:
+static ssize_t display_show_contrast(struct device *dev,
+				struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#94: FILE: drivers/video/display/display-sysfs.c:58:
+static ssize_t display_store_contrast(struct device *dev,
+					struct device_attribute *attr,

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#102: FILE: drivers/video/display/display-sysfs.c:66:
+	contrast = simple_strtoul(buf, &endp, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: drivers/video/display/display-sysfs.c:86:
+static ssize_t display_show_max_contrast(struct device *dev,
+					struct device_attribute *attr,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#136: FILE: drivers/video/display/display-sysfs.c:100:
+	__ATTR(name, S_IRUGO, display_show_name, NULL),

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#137: FILE: drivers/video/display/display-sysfs.c:101:
+	__ATTR(type, S_IRUGO, display_show_type, NULL),

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#138: FILE: drivers/video/display/display-sysfs.c:102:
+	__ATTR(contrast, S_IRUGO | S_IWUSR, display_show_contrast, display_store_contrast),

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#139: FILE: drivers/video/display/display-sysfs.c:103:
+	__ATTR(max_contrast, S_IRUGO, display_show_max_contrast, NULL),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#169: FILE: drivers/video/display/display-sysfs.c:133:
+struct display_device *display_device_register(struct display_driver *driver,
+						struct device *parent, void *devdata)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*new_dev)...) over kzalloc(sizeof(struct display_device)...)
#183: FILE: drivers/video/display/display-sysfs.c:147:
+	new_dev = kzalloc(sizeof(struct display_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#192: FILE: drivers/video/display/display-sysfs.c:156:
+			new_dev->dev = device_create(display_class, parent, 0,
+						"display%d", new_dev->idx);

WARNING:TYPO_SPELLING: 'avaliable' may be misspelled - perhaps 'available'?
#219: FILE: drivers/video/display/display-sysfs.c:183:
+	// Mark device index as avaliable
 	                        ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#231: FILE: drivers/video/display/display-sysfs.c:195:
+		printk(KERN_ERR "Failed to create display class\n");

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#264: FILE: drivers/video/display/Kconfig:7:
+config DISPLAY_SUPPORT
+	tristate "Display panel/monitor support"
+	---help---
+	  This framework adds support for low-level control of a display.
+	  This includes support for power.
+
+	  Enable this to be able to choose the drivers for controlling the
+	  physical display panel/monitor on some platforms. This not only
+	  covers LCD displays for PDAs but also other types of displays
+	  such as CRT, TVout etc.
+
+	  To have support for your specific display panel you will have to
+	  select the proper drivers which depend on this option.
+
+comment "Display hardware drivers"
+	depends on DISPLAY_SUPPORT
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#319: FILE: include/linux/display.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#335: FILE: include/linux/display.h:17:
+ *  with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#336: FILE: include/linux/display.h:18:
+ *  59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct display_device *' should also have an identifier name
#350: FILE: include/linux/display.h:32:
+	int  (*set_contrast)(struct display_device *, unsigned int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#350: FILE: include/linux/display.h:32:
+	int  (*set_contrast)(struct display_device *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct display_device *' should also have an identifier name
#351: FILE: include/linux/display.h:33:
+	int  (*get_contrast)(struct display_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct display_device *' should also have an identifier name
#352: FILE: include/linux/display.h:34:
+	void (*suspend)(struct display_device *, pm_message_t state);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct display_device *' should also have an identifier name
#353: FILE: include/linux/display.h:35:
+	void (*resume)(struct display_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct display_device *' should also have an identifier name
#354: FILE: include/linux/display.h:36:
+	int  (*probe)(struct display_device *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#354: FILE: include/linux/display.h:36:
+	int  (*probe)(struct display_device *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct display_device *' should also have an identifier name
#355: FILE: include/linux/display.h:37:
+	int  (*remove)(struct display_device *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#371: FILE: include/linux/display.h:53:
+extern struct display_device *display_device_register(struct display_driver *driver,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#372: FILE: include/linux/display.h:54:
+extern struct display_device *display_device_register(struct display_driver *driver,
+					struct device *dev, void *devdata);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#373: FILE: include/linux/display.h:55:
+extern void display_device_unregister(struct display_device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#375: FILE: include/linux/display.h:57:
+extern int probe_edid(struct display_device *dev, void *devdata);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000462408.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 21 warnings, 12 checks, 323 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000462408.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
