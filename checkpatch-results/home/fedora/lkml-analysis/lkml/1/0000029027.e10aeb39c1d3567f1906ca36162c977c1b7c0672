WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
Gitweb:     http://git.kernel.org/tip/1b1d9258181bae199dc940f4bd0298126b9a73d9

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#77: FILE: arch/x86/include/asm/alternative.h:129:
+#define alternative_call(oldfunc, newfunc, feature, output, input...)	\
+	asm volatile (ALTERNATIVE("call %P[old]", "call %P[new]", feature) \
+		: output : [old] "i" (oldfunc), [new] "i" (newfunc), ## input)

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/cpufeature.h> instead of <asm/cpufeature.h>
#99: FILE: arch/x86/include/asm/uaccess_64.h:12:
+#include <asm/cpufeature.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#108: FILE: arch/x86/include/asm/uaccess_64.h:21:
+copy_user_generic_string(void *to, const void *from, unsigned len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#110: FILE: arch/x86/include/asm/uaccess_64.h:23:
+copy_user_generic_unrolled(void *to, const void *from, unsigned len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#113: FILE: arch/x86/include/asm/uaccess_64.h:26:
+copy_user_generic(void *to, const void *from, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#115: FILE: arch/x86/include/asm/uaccess_64.h:28:
+	unsigned ret;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#146: FILE: arch/x86/kernel/alternative.c:226:
+		if (*insnbuf == 0xe8 && a->replacementlen == 5)
+		    *(s32 *)(insnbuf + 1) += a->replacement - a->instr;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#160: FILE: arch/x86/kernel/x8664_ksyms_64.c:29:
+EXPORT_SYMBOL(copy_user_generic_string);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#161: FILE: arch/x86/kernel/x8664_ksyms_64.c:30:
+EXPORT_SYMBOL(copy_user_generic_unrolled);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000029027.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 8 warnings, 1 checks, 87 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000029027.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
