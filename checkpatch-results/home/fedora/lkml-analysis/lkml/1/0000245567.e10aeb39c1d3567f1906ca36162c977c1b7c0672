WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#33: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#50: FILE: arch/h8300/kernel/timer/itu.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#51: FILE: arch/h8300/kernel/timer/itu.c:2:
+ *  linux/arch/h8300/kernel/timer/itu.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#70: FILE: arch/h8300/kernel/timer/itu.c:21:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:MISPLACED_INIT: __initdata should be placed after divide_rate[]
#115: FILE: arch/h8300/kernel/timer/itu.c:66:
+static const int __initdata divide_rate[] = {1, 2, 4, 8};

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __initconst
#115: FILE: arch/h8300/kernel/timer/itu.c:66:
+static const int __initdata divide_rate[] = {1, 2, 4, 8};

Const init definitions should use __initconst instead of
__initdata.

Similarly init definitions without const require a separate
use of const.

WARNING:TYPO_SPELLING: 'initalize' may be misspelled - perhaps 'initialize'?
#126: FILE: arch/h8300/kernel/timer/itu.c:77:
+	/* initalize timer */
 	   ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#139: FILE: arch/h8300/kernel/timer/timer16.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#140: FILE: arch/h8300/kernel/timer/timer16.c:2:
+ *  linux/arch/h8300/kernel/timer/timer16.c

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#159: FILE: arch/h8300/kernel/timer/timer16.c:21:
+#include <asm/io.h>

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#183: FILE: arch/h8300/kernel/timer/timer16.c:45:
+#define H8300_TIMER_FREQ CONFIG_CPU_CLOCK*10000 /* Timer input freq. */
                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#183: FILE: arch/h8300/kernel/timer/timer16.c:45:
+#define H8300_TIMER_FREQ CONFIG_CPU_CLOCK*10000 /* Timer input freq. */

WARNING:MISPLACED_INIT: __initdata should be placed after divide_rate[]
#199: FILE: arch/h8300/kernel/timer/timer16.c:61:
+static const int __initdata divide_rate[] = {1, 2, 4, 8};

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __initconst
#199: FILE: arch/h8300/kernel/timer/timer16.c:61:
+static const int __initdata divide_rate[] = {1, 2, 4, 8};

WARNING:TYPO_SPELLING: 'initalize' may be misspelled - perhaps 'initialize'?
#210: FILE: arch/h8300/kernel/timer/timer16.c:72:
+	/* initalize timer */
 	   ^^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#223: FILE: arch/h8300/kernel/timer/timer8.c:1:
+/*

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#242: FILE: arch/h8300/kernel/timer/timer8.c:20:
+#include <asm/io.h>

WARNING:MISPLACED_INIT: __initdata should be placed after divide_rate[]
#303: FILE: arch/h8300/kernel/timer/timer8.c:81:
+static const int __initdata divide_rate[] = {8, 64, 8192};

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __initconst
#303: FILE: arch/h8300/kernel/timer/timer8.c:81:
+static const int __initdata divide_rate[] = {8, 64, 8192};

WARNING:TYPO_SPELLING: 'initalize' may be misspelled - perhaps 'initialize'?
#320: FILE: arch/h8300/kernel/timer/timer8.c:98:
+	/* initalize timer */
 	   ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#323: FILE: arch/h8300/kernel/timer/timer8.c:101:
+^Ictrl_outw((CMIEA|CCLR_CMA|CKS2) << 8 | div, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#323: FILE: arch/h8300/kernel/timer/timer8.c:101:
+	ctrl_outw((CMIEA|CCLR_CMA|CKS2) << 8 | div, 
 	                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#323: FILE: arch/h8300/kernel/timer/timer8.c:101:
+	ctrl_outw((CMIEA|CCLR_CMA|CKS2) << 8 | div, 
 	                         ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#332: FILE: arch/h8300/kernel/timer/tpu.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#333: FILE: arch/h8300/kernel/timer/tpu.c:2:
+ *  linux/arch/h8300/kernel/timer/tpu.c

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#353: FILE: arch/h8300/kernel/timer/tpu.c:22:
+#include <asm/io.h>

WARNING:STATIC_CONST: Move const after static - use 'static const int __initdata '
#402: FILE: arch/h8300/kernel/timer/tpu.c:71:
+const static int __initdata divide_rate[] = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __initconst
#402: FILE: arch/h8300/kernel/timer/tpu.c:71:
+const static int __initdata divide_rate[] = {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#404: FILE: arch/h8300/kernel/timer/tpu.c:73:
+	1,4,16,64,0,0,0,0,
 	 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#404: FILE: arch/h8300/kernel/timer/tpu.c:73:
+	1,4,16,64,0,0,0,0,
 	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#404: FILE: arch/h8300/kernel/timer/tpu.c:73:
+	1,4,16,64,0,0,0,0,
 	      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#404: FILE: arch/h8300/kernel/timer/tpu.c:73:
+	1,4,16,64,0,0,0,0,
 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#404: FILE: arch/h8300/kernel/timer/tpu.c:73:
+	1,4,16,64,0,0,0,0,
 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#404: FILE: arch/h8300/kernel/timer/tpu.c:73:
+	1,4,16,64,0,0,0,0,
 	             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#404: FILE: arch/h8300/kernel/timer/tpu.c:73:
+	1,4,16,64,0,0,0,0,
 	               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#406: FILE: arch/h8300/kernel/timer/tpu.c:75:
+	1,4,16,64,0,0,256,0,
 	 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#406: FILE: arch/h8300/kernel/timer/tpu.c:75:
+	1,4,16,64,0,0,256,0,
 	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#406: FILE: arch/h8300/kernel/timer/tpu.c:75:
+	1,4,16,64,0,0,256,0,
 	      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#406: FILE: arch/h8300/kernel/timer/tpu.c:75:
+	1,4,16,64,0,0,256,0,
 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#406: FILE: arch/h8300/kernel/timer/tpu.c:75:
+	1,4,16,64,0,0,256,0,
 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#406: FILE: arch/h8300/kernel/timer/tpu.c:75:
+	1,4,16,64,0,0,256,0,
 	             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#406: FILE: arch/h8300/kernel/timer/tpu.c:75:
+	1,4,16,64,0,0,256,0,
 	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#408: FILE: arch/h8300/kernel/timer/tpu.c:77:
+	1,4,16,64,0,0,0,1024,
 	 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#408: FILE: arch/h8300/kernel/timer/tpu.c:77:
+	1,4,16,64,0,0,0,1024,
 	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#408: FILE: arch/h8300/kernel/timer/tpu.c:77:
+	1,4,16,64,0,0,0,1024,
 	      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#408: FILE: arch/h8300/kernel/timer/tpu.c:77:
+	1,4,16,64,0,0,0,1024,
 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#408: FILE: arch/h8300/kernel/timer/tpu.c:77:
+	1,4,16,64,0,0,0,1024,
 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#408: FILE: arch/h8300/kernel/timer/tpu.c:77:
+	1,4,16,64,0,0,0,1024,
 	             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#408: FILE: arch/h8300/kernel/timer/tpu.c:77:
+	1,4,16,64,0,0,0,1024,
 	               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#410: FILE: arch/h8300/kernel/timer/tpu.c:79:
+	1,4,16,64,0,1024,256,4096,
 	 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#410: FILE: arch/h8300/kernel/timer/tpu.c:79:
+	1,4,16,64,0,1024,256,4096,
 	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#410: FILE: arch/h8300/kernel/timer/tpu.c:79:
+	1,4,16,64,0,1024,256,4096,
 	      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#410: FILE: arch/h8300/kernel/timer/tpu.c:79:
+	1,4,16,64,0,1024,256,4096,
 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#410: FILE: arch/h8300/kernel/timer/tpu.c:79:
+	1,4,16,64,0,1024,256,4096,
 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#410: FILE: arch/h8300/kernel/timer/tpu.c:79:
+	1,4,16,64,0,1024,256,4096,
 	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#410: FILE: arch/h8300/kernel/timer/tpu.c:79:
+	1,4,16,64,0,1024,256,4096,
 	                    ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#440: FILE: include/asm-h8300/timer.h:1:
+#ifndef __H8300_TIMER_H

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#446: FILE: include/asm-h8300/timer.h:7:
+void h8300_gettod(unsigned int *year, unsigned int *mon, unsigned int *day,
+		   unsigned int *hour, unsigned int *min, unsigned int *sec);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#448: FILE: include/asm-h8300/timer.h:9:
+#define TIMER_FREQ (CONFIG_CPU_CLOCK*10000) /* Timer input freq. */
                                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cnt' - possible side-effects?
#450: FILE: include/asm-h8300/timer.h:11:
+#define calc_param(cnt, div, rate, limit)			\
+do {								\
+	cnt = TIMER_FREQ / HZ;					\
+	for (div = 0; div < ARRAY_SIZE(divide_rate); div++) {	\
+		if (rate[div] == 0)				\
+			continue;				\
+		if ((cnt / rate[div]) > limit)			\
+			break;					\
+	}							\
+	if (div == ARRAY_SIZE(divide_rate))			\
+		panic("Timer counter overflow");		\
+	cnt /= divide_rate[div];				\
+} while(0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'div' - possible side-effects?
#450: FILE: include/asm-h8300/timer.h:11:
+#define calc_param(cnt, div, rate, limit)			\
+do {								\
+	cnt = TIMER_FREQ / HZ;					\
+	for (div = 0; div < ARRAY_SIZE(divide_rate); div++) {	\
+		if (rate[div] == 0)				\
+			continue;				\
+		if ((cnt / rate[div]) > limit)			\
+			break;					\
+	}							\
+	if (div == ARRAY_SIZE(divide_rate))			\
+		panic("Timer counter overflow");		\
+	cnt /= divide_rate[div];				\
+} while(0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'rate' - possible side-effects?
#450: FILE: include/asm-h8300/timer.h:11:
+#define calc_param(cnt, div, rate, limit)			\
+do {								\
+	cnt = TIMER_FREQ / HZ;					\
+	for (div = 0; div < ARRAY_SIZE(divide_rate); div++) {	\
+		if (rate[div] == 0)				\
+			continue;				\
+		if ((cnt / rate[div]) > limit)			\
+			break;					\
+	}							\
+	if (div == ARRAY_SIZE(divide_rate))			\
+		panic("Timer counter overflow");		\
+	cnt /= divide_rate[div];				\
+} while(0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'limit' may be better as '(limit)' to avoid precedence issues
#450: FILE: include/asm-h8300/timer.h:11:
+#define calc_param(cnt, div, rate, limit)			\
+do {								\
+	cnt = TIMER_FREQ / HZ;					\
+	for (div = 0; div < ARRAY_SIZE(divide_rate); div++) {	\
+		if (rate[div] == 0)				\
+			continue;				\
+		if ((cnt / rate[div]) > limit)			\
+			break;					\
+	}							\
+	if (div == ARRAY_SIZE(divide_rate))			\
+		panic("Timer counter overflow");		\
+	cnt /= divide_rate[div];				\
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#462: FILE: include/asm-h8300/timer.h:23:
+} while(0)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000245567.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 35 errors, 16 warnings, 13 checks, 397 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000245567.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
