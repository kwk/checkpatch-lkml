WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
x86 optimization of the immediate values which uses a movl with code patching

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#132: FILE: include/asm-x86/immediate.h:1:
+#ifndef _ASM_I386_IMMEDIATE_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(sizeof(long)) over __attribute__((aligned(sizeof(long))))
#155: FILE: include/asm-x86/immediate.h:24:
+} __attribute__ ((aligned(sizeof(long))));

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#231: FILE: include/asm-x86/immediate.h:100:
+		default:value = name##__immediate;			\

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#237: FILE: include/asm-x86/immediate.h:106:
+extern int arch_immediate_update(const struct __immediate *immediate);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#238: FILE: include/asm-x86/immediate.h:107:
+extern void arch_immediate_update_early(const struct __immediate *immediate);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#246: FILE: arch/x86/kernel/immediate.c:1:
+/*

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#325: FILE: arch/x86/kernel/immediate.c:80:
+#include <asm/cacheflush.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#353: FILE: arch/x86/kernel/immediate.c:108:
+	default: BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#353: FILE: arch/x86/kernel/immediate.c:108:
+	default: BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#394: FILE: arch/x86/kernel/immediate.c:149:
+static int immediate_notifier(struct notifier_block *nb,
+	unsigned long val, void *data)

CHECK:SPACING: No space is necessary after a cast
#396: FILE: arch/x86/kernel/immediate.c:151:
+	enum die_val die_val = (enum die_val) val;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#422: FILE: arch/x86/kernel/immediate.c:177:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#444: FILE: arch/x86/kernel/immediate.c:199:
+		printk(KERN_WARNING "Immediate value in conflict with kprobe. "

WARNING:SPLIT_STRING: quoted string split across lines
#445: FILE: arch/x86/kernel/immediate.c:200:
+		printk(KERN_WARNING "Immediate value in conflict with kprobe. "
+				    "Variable at %p, "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#446: FILE: arch/x86/kernel/immediate.c:201:
+				    "Variable at %p, "
+				    "instruction at %p, size %lu\n",

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#458: FILE: arch/x86/kernel/immediate.c:213:
+	case 1:	if (*(uint8_t *)immediate->immediate
[...]
+			return 0;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#458: FILE: arch/x86/kernel/immediate.c:213:
+	case 1:	if (*(uint8_t *)immediate->immediate

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#462: FILE: arch/x86/kernel/immediate.c:217:
+	case 2:	if (*(uint16_t *)immediate->immediate
[...]
+			return 0;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#462: FILE: arch/x86/kernel/immediate.c:217:
+	case 2:	if (*(uint16_t *)immediate->immediate

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#466: FILE: arch/x86/kernel/immediate.c:221:
+	case 4:	if (*(uint32_t *)immediate->immediate
[...]
+			return 0;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#466: FILE: arch/x86/kernel/immediate.c:221:
+	case 4:	if (*(uint32_t *)immediate->immediate

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#471: FILE: arch/x86/kernel/immediate.c:226:
+	case 8:	if (*(uint64_t *)immediate->immediate
[...]
+			return 0;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#471: FILE: arch/x86/kernel/immediate.c:226:
+	case 8:	if (*(uint64_t *)immediate->immediate

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#505: FILE: arch/x86/kernel/immediate.c:260:
+	text_poke((void *)insn,
+		INIT_ARRAY(unsigned char, BREAKPOINT_INSTRUCTION, 1), 1);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#515: FILE: arch/x86/kernel/immediate.c:270:
+	BUG_ON(ret != 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#518: FILE: arch/x86/kernel/immediate.c:273:
+	text_poke((void *)(insn + insn_size), (void *)immediate->var,
+			immediate->size);

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#534: FILE: arch/x86/kernel/immediate.c:289:
+	synchronize_sched();

Usage of a deprecated RCU API is detected.  It is recommended to replace
old flavourful RCU APIs by their new vanilla-RCU counterparts.

The full list of available RCU APIs can be viewed from the kernel docs.

See: https://www.kernel.org/doc/html/latest/RCU/whatisRCU.html#full-list-of-rcu-apis

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#553: FILE: arch/x86/kernel/immediate.c:308:
+	case 1:	if (*(uint8_t *)immediate->immediate
[...]
+			return;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#553: FILE: arch/x86/kernel/immediate.c:308:
+	case 1:	if (*(uint8_t *)immediate->immediate

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#557: FILE: arch/x86/kernel/immediate.c:312:
+	case 2:	if (*(uint16_t *)immediate->immediate
[...]
+			return;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#557: FILE: arch/x86/kernel/immediate.c:312:
+	case 2:	if (*(uint16_t *)immediate->immediate

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#561: FILE: arch/x86/kernel/immediate.c:316:
+	case 4:	if (*(uint32_t *)immediate->immediate
[...]
+			return;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#561: FILE: arch/x86/kernel/immediate.c:316:
+	case 4:	if (*(uint32_t *)immediate->immediate

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#566: FILE: arch/x86/kernel/immediate.c:321:
+	case 8:	if (*(uint64_t *)immediate->immediate
[...]
+			return;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#566: FILE: arch/x86/kernel/immediate.c:321:
+	case 8:	if (*(uint64_t *)immediate->immediate

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#571: FILE: arch/x86/kernel/immediate.c:326:
+	default:return;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#574: FILE: arch/x86/kernel/immediate.c:329:
+	memcpy((void *)immediate->immediate, (void *)immediate->var,
+			immediate->size);

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#616: FILE: arch/x86/Kconfig.x86_64:146:
Mathieu Desnoyers

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000358188.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 12 errors, 18 warnings, 9 checks, 502 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000358188.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
