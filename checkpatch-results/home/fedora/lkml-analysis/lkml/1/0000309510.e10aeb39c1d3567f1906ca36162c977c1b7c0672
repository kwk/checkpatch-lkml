WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#196: FILE: kernel/sched_debug.c:140:
+	SEQ_printf(m, "  .%-30s: %Ld.%06ld\n", "exec_clock",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#197: FILE: kernel/sched_debug.c:141:
+	SEQ_printf(m, "  .%-30s: %Ld.%06ld\n", "exec_clock",
+			SPLIT_NS(cfs_r_rq->exec_clock));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#199: FILE: kernel/sched_debug.c:143:
+	SEQ_printf(m, "  .%-30s: %ld\n", "nr_spread_over",
+			cfs_r_rq->nr_spread_over);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#251: FILE: kernel/sched_fair.c:228:
+static void __enqueue_timeline(struct cfs_root_rq *cfs_r_rq,
+		struct sched_entity *se)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#297: FILE: kernel/sched_fair.c:268:
+static void __dequeue_timeline(struct cfs_root_rq *cfs_r_rq,
+		struct sched_entity *se)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#310: FILE: kernel/sched_fair.c:281:
 {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#376: FILE: kernel/sched_fair.c:458:
+	if (first_fair(cfs_r_rq)) {
[...]
+	} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#378: FILE: kernel/sched_fair.c:460:
+		vruntime = min_vruntime(curr->vruntime,
+				__pick_next_entity(cfs_r_rq)->vruntime);

CHECK:BRACES: Unbalanced braces around else statement
#379: FILE: kernel/sched_fair.c:461:
+	} else

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#496: FILE: kernel/sched_fair.c:1149:
+	next = se = __pick_next_entity(cfs_r_rq);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000309510.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 1 warnings, 9 checks, 445 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000309510.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
