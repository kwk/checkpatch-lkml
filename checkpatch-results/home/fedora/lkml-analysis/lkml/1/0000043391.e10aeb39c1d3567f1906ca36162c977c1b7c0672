WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#102: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#107: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:5:
+ *^IANY CHANGES MADE HERE WILL BE LOST! $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#132: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:26:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#133: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:27:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#143: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:37:
+#  define PERL_UNUSED_VAR(var) if (0) var = var

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'var' - possible side-effects?
#143: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:37:
+#  define PERL_UNUSED_VAR(var) if (0) var = var

CHECK:CAMELCASE: Avoid CamelCase: <dVAR>
#151: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:45:
+#ifdef dVAR

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:46:
+    dVAR; dXSARGS;$

CHECK:CAMELCASE: Avoid CamelCase: <dXSARGS>
#152: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:46:
+    dVAR; dXSARGS;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:48:
+    dXSARGS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:50:
+    if (items != 1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#156: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:50:
+    if (items != 1)
+       Perl_croak(aTHX_ "Usage: %s(%s)", "Perf::Trace::Context::get_common_pc", "context");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:51:
+       Perl_croak(aTHX_ "Usage: %s(%s)", "Perf::Trace::Context::get_common_pc", "context");$

CHECK:CAMELCASE: Avoid CamelCase: <Perl_croak>
#157: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:51:
+       Perl_croak(aTHX_ "Usage: %s(%s)", "Perf::Trace::Context::get_common_pc", "context");

CHECK:CAMELCASE: Avoid CamelCase: <aTHX_>
#157: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:51:
+       Perl_croak(aTHX_ "Usage: %s(%s)", "Perf::Trace::Context::get_common_pc", "context");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:52:
+    PERL_UNUSED_VAR(cv); /* -W */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:53:
+    {$

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#160: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:54:
+	struct scripting_context *	context = INT2PTR(struct scripting_context *,SvIV(ST(0)));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:OxV)
#160: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:54:
+	struct scripting_context *	context = INT2PTR(struct scripting_context *,SvIV(ST(0)));
 	                          	                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <SvIV>
#160: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:54:
+	struct scripting_context *	context = INT2PTR(struct scripting_context *,SvIV(ST(0)));

WARNING:LINE_SPACING: Missing a blank line after declarations
#162: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:56:
+	int	RETVAL;
+	dXSTARG;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <dXSTARG>
#162: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:56:
+	dXSTARG;

CHECK:CAMELCASE: Avoid CamelCase: <XSprePUSH>
#165: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:59:
+	XSprePUSH; PUSHi((IV)RETVAL);

CHECK:CAMELCASE: Avoid CamelCase: <PUSHi>
#165: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:59:
+	XSprePUSH; PUSHi((IV)RETVAL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:60:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:61:
+    XSRETURN(1);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#170: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:64:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:69:
+    dVAR; dXSARGS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:71:
+    dXSARGS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:73:
+    if (items != 1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#179: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:73:
+    if (items != 1)
+       Perl_croak(aTHX_ "Usage: %s(%s)", "Perf::Trace::Context::get_common_flags", "context");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:74:
+       Perl_croak(aTHX_ "Usage: %s(%s)", "Perf::Trace::Context::get_common_flags", "context");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:75:
+    PERL_UNUSED_VAR(cv); /* -W */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:76:
+    {$

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#183: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:77:
+	struct scripting_context *	context = INT2PTR(struct scripting_context *,SvIV(ST(0)));

ERROR:SPACING: space required after that ',' (ctx:OxV)
#183: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:77:
+	struct scripting_context *	context = INT2PTR(struct scripting_context *,SvIV(ST(0)));
 	                          	                                            ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#185: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:79:
+	int	RETVAL;
+	dXSTARG;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:83:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:84:
+    XSRETURN(1);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#193: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:87:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:92:
+    dVAR; dXSARGS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:94:
+    dXSARGS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:96:
+    if (items != 1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#202: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:96:
+    if (items != 1)
+       Perl_croak(aTHX_ "Usage: %s(%s)", "Perf::Trace::Context::get_common_lock_depth", "context");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:97:
+       Perl_croak(aTHX_ "Usage: %s(%s)", "Perf::Trace::Context::get_common_lock_depth", "context");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:98:
+    PERL_UNUSED_VAR(cv); /* -W */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:99:
+    {$

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#206: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:100:
+	struct scripting_context *	context = INT2PTR(struct scripting_context *,SvIV(ST(0)));

ERROR:SPACING: space required after that ',' (ctx:OxV)
#206: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:100:
+	struct scripting_context *	context = INT2PTR(struct scripting_context *,SvIV(ST(0)));
 	                          	                                            ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#208: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:102:
+	int	RETVAL;
+	dXSTARG;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:106:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:107:
+    XSRETURN(1);$

CHECK:CAMELCASE: Avoid CamelCase: <boot_Perf__Trace__Context>
#219: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:113:
+XS(boot_Perf__Trace__Context); /* prototype to pass -Wmissing-prototypes */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:117:
+    dVAR; dXSARGS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:119:
+    dXSARGS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:121:
+    const char* file = __FILE__;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#227: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:121:
+    const char* file = __FILE__;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:123:
+    PERL_UNUSED_VAR(cv); /* -W */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:124:
+    PERL_UNUSED_VAR(items); /* -W */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:125:
+    XS_VERSION_BOOTCHECK ;$

WARNING:SPACING: space prohibited before semicolon
#231: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:125:
+    XS_VERSION_BOOTCHECK ;

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#233: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:127:
+        newXSproto("Perf::Trace::Context::get_common_pc", XS_Perf__Trace__Context_get_common_pc, file, "$");

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:127:
+        newXSproto("Perf::Trace::Context::get_common_pc", XS_Perf__Trace__Context_get_common_pc, file, "$");$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:127:
+        newXSproto("Perf::Trace::Context::get_common_pc", XS_Perf__Trace__Context_get_common_pc, file, "$");$

CHECK:CAMELCASE: Avoid CamelCase: <newXSproto>
#233: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:127:
+        newXSproto("Perf::Trace::Context::get_common_pc", XS_Perf__Trace__Context_get_common_pc, file, "$");

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#234: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:128:
+        newXSproto("Perf::Trace::Context::get_common_flags", XS_Perf__Trace__Context_get_common_flags, file, "$");

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:128:
+        newXSproto("Perf::Trace::Context::get_common_flags", XS_Perf__Trace__Context_get_common_flags, file, "$");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:128:
+        newXSproto("Perf::Trace::Context::get_common_flags", XS_Perf__Trace__Context_get_common_flags, file, "$");$

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#235: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:129:
+        newXSproto("Perf::Trace::Context::get_common_lock_depth", XS_Perf__Trace__Context_get_common_lock_depth, file, "$");

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:129:
+        newXSproto("Perf::Trace::Context::get_common_lock_depth", XS_Perf__Trace__Context_get_common_lock_depth, file, "$");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:129:
+        newXSproto("Perf::Trace::Context::get_common_lock_depth", XS_Perf__Trace__Context_get_common_lock_depth, file, "$");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:130:
+    if (PL_unitcheckav)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 9)
#236: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:130:
+    if (PL_unitcheckav)
+         call_list(PL_scopestack_ix, PL_unitcheckav);

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:131:
+         call_list(PL_scopestack_ix, PL_unitcheckav);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:131:
+         call_list(PL_scopestack_ix, PL_unitcheckav);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.c:132:
+    XSRETURN_YES;$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#263: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.xs:17:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#264: FILE: tools/perf/scripts/perl/Perf-Trace-Util/Context.xs:18:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:TYPO_SPELLING: 'desciptions' may be misspelled - perhaps 'descriptions'?
#328: FILE: tools/perf/scripts/perl/Perf-Trace-Util/README:15:
+perf executable, you add desciptions of the new functions here.
                          ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#494: FILE: tools/perf/scripts/perl/check-perf-trace.pl:1:
+# perf trace event handlers, generated by perf trace -g perl

CHECK:CAMELCASE: Avoid CamelCase: <pTHX>
#639: FILE: tools/perf/util/trace-event-perl.c:33:
+void xs_init(pTHX);

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#641: FILE: tools/perf/util/trace-event-perl.c:35:
+void boot_Perf__Trace__Context(pTHX_ CV *cv);
                                         ^

CHECK:CAMELCASE: Avoid CamelCase: <pTHX_>
#641: FILE: tools/perf/util/trace-event-perl.c:35:
+void boot_Perf__Trace__Context(pTHX_ CV *cv);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#641: FILE: tools/perf/util/trace-event-perl.c:35:
+void boot_Perf__Trace__Context(pTHX_ CV *cv);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#642: FILE: tools/perf/util/trace-event-perl.c:36:
+void boot_DynaLoader(pTHX_ CV *cv);
                               ^

CHECK:CAMELCASE: Avoid CamelCase: <boot_DynaLoader>
#642: FILE: tools/perf/util/trace-event-perl.c:36:
+void boot_DynaLoader(pTHX_ CV *cv);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#642: FILE: tools/perf/util/trace-event-perl.c:36:
+void boot_DynaLoader(pTHX_ CV *cv);

WARNING:LINE_SPACING: Missing a blank line after declarations
#647: FILE: tools/perf/util/trace-event-perl.c:41:
+	const char *file = __FILE__;
+	dXSUB_SYS;

CHECK:CAMELCASE: Avoid CamelCase: <dXSUB_SYS>
#647: FILE: tools/perf/util/trace-event-perl.c:41:
+	dXSUB_SYS;

CHECK:CAMELCASE: Avoid CamelCase: <newXS>
#649: FILE: tools/perf/util/trace-event-perl.c:43:
+	newXS("Perf::Trace::Context::bootstrap", boot_Perf__Trace__Context,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000043391.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 17 errors, 54 warnings, 20 checks, 596 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000043391.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
