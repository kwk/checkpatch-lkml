WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#57: FILE: kernel/trace/Kconfig:267:
+config KSYM_TRACER
+	bool "Trace read and write access on kernel memory locations"
+	depends on HAVE_HW_BREAKPOINT
+	select TRACING
+	help
+	  This tracer helps find read and write operations on any given kernel
+	  symbol i.e. /proc/kallsyms.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#126: FILE: kernel/trace/trace.h:229:
+^Iunsigned long ^I^Icounter;$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#151: FILE: kernel/trace/trace.h:619:
+extern int trace_selftest_startup_ksym(struct tracer *trace,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#152: FILE: kernel/trace/trace.h:620:
+extern int trace_selftest_startup_ksym(struct tracer *trace,
+					 struct trace_array *tr);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#161: FILE: kernel/trace/trace_ksym.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#175: FILE: kernel/trace/trace_ksym.c:15:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#176: FILE: kernel/trace/trace_ksym.c:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:UNCOMMENTED_DEFINITION: DEFINE_MUTEX definition without comment
#210: FILE: kernel/trace/trace_ksym.c:50:
+DEFINE_MUTEX(ksym_tracer_mutex);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'entry->ksym_addr == hbkpt_hit_addr'
#229: FILE: kernel/trace/trace_ksym.c:69:
+		if ((entry->ksym_addr == hbkpt_hit_addr) &&
+		    (entry->counter <= MAX_UL_INT)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'entry->counter <= MAX_UL_INT'
#229: FILE: kernel/trace/trace_ksym.c:69:
+		if ((entry->ksym_addr == hbkpt_hit_addr) &&
+		    (entry->counter <= MAX_UL_INT)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#253: FILE: kernel/trace/trace_ksym.c:93:
+	event = trace_buffer_lock_reserve(tr, TRACE_KSYM,
+							sizeof(*entry), 0, pc);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#258: FILE: kernel/trace/trace_ksym.c:98:
+	strlcpy(entry->ksym_name, hbkpt->info.name, KSYM_SYMBOL_LEN);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#261: FILE: kernel/trace/trace_ksym.c:101:
+	strlcpy(entry->p_name, current->comm, TASK_COMM_LEN);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#323: FILE: kernel/trace/trace_ksym.c:163:
+static int parse_ksym_trace_str(char *input_string, char **ksymname,
+							unsigned long *addr)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!input_string'
#333: FILE: kernel/trace/trace_ksym.c:173:
+	if ((!input_string) ||
+		(strlen(input_string) != (KSYM_TRACER_OP_LEN + 1)) ||
+			(*addr == 0))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#334: FILE: kernel/trace/trace_ksym.c:174:
+	if ((!input_string) ||
+		(strlen(input_string) != (KSYM_TRACER_OP_LEN + 1)) ||

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#349: FILE: kernel/trace/trace_ksym.c:189:
+		printk(KERN_ERR "ksym_tracer: Maximum limit:(%d) reached. No"

WARNING:SPLIT_STRING: quoted string split across lines
#350: FILE: kernel/trace/trace_ksym.c:190:
+		printk(KERN_ERR "ksym_tracer: Maximum limit:(%d) reached. No"
+		" new requests for tracing can be accepted now.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*entry)...) over kzalloc(sizeof(struct trace_ksym)...)
#355: FILE: kernel/trace/trace_ksym.c:195:
+	entry = kzalloc(sizeof(struct trace_ksym), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*entry->ksym_hbkpt)...) over kzalloc(sizeof(struct hw_breakpoint)...)
#359: FILE: kernel/trace/trace_ksym.c:199:
+	entry->ksym_hbkpt = kzalloc(sizeof(struct hw_breakpoint), GFP_KERNEL);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#367: FILE: kernel/trace/trace_ksym.c:207:
+	entry->ksym_addr = entry->ksym_hbkpt->info.address = addr;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#374: FILE: kernel/trace/trace_ksym.c:214:
+		printk(KERN_INFO "ksym_tracer request failed. Try again"

WARNING:SPLIT_STRING: quoted string split across lines
#375: FILE: kernel/trace/trace_ksym.c:215:
+		printk(KERN_INFO "ksym_tracer request failed. Try again"
+					" later!!\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around entry->ksym_hlist
#380: FILE: kernel/trace/trace_ksym.c:220:
+	hlist_add_head(&(entry->ksym_hlist), &ksym_filter_head);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#386: FILE: kernel/trace/trace_ksym.c:226:
+static ssize_t ksym_trace_filter_read(struct file *filp, char __user *ubuf,
                                                    ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#387: FILE: kernel/trace/trace_ksym.c:227:
+static ssize_t ksym_trace_filter_read(struct file *filp, char __user *ubuf,
+						size_t count, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#413: FILE: kernel/trace/trace_ksym.c:253:
+static ssize_t ksym_trace_filter_write(struct file *file,
+					const char __user *buffer,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#435: FILE: kernel/trace/trace_ksym.c:275:
+	ret = op = parse_ksym_trace_str(input_string, &ksymname, &ksym_addr);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around entry->ksym_hlist
#465: FILE: kernel/trace/trace_ksym.c:305:
+		hlist_del(&(entry->ksym_hlist));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#504: FILE: kernel/trace/trace_ksym.c:344:
+	hlist_for_each_entry_safe(entry, node, node1, &ksym_filter_head,
+								ksym_hlist) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around entry->ksym_hlist
#507: FILE: kernel/trace/trace_ksym.c:347:
+		hlist_del(&(entry->ksym_hlist));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#514: FILE: kernel/trace/trace_ksym.c:354:
+		if (strncmp(entry->ksym_hbkpt->info.name, KSYM_SELFTEST_ENTRY,
+					strlen(KSYM_SELFTEST_ENTRY)) != 0)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#522: FILE: kernel/trace/trace_ksym.c:362:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#543: FILE: kernel/trace/trace_ksym.c:383:
+	ret = process_new_ksym_entry(KSYM_SELFTEST_ENTRY, HW_BREAKPOINT_RW,
+					(unsigned long)(&ksym_selftest_dummy));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#546: FILE: kernel/trace/trace_ksym.c:386:
+		printk(KERN_CONT "ksym_trace read-write startup test failed\n");

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#546: FILE: kernel/trace/trace_ksym.c:386:
+		printk(KERN_CONT "ksym_trace read-write startup test failed\n");

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#563: FILE: kernel/trace/trace_ksym.c:403:
+{
+

WARNING:SPLIT_STRING: quoted string split across lines
#566: FILE: kernel/trace/trace_ksym.c:406:
+		 "#       TASK-PID      CPU#      Symbol         Type    "
+		 "Function         \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#566: FILE: kernel/trace/trace_ksym.c:406:
+		 "Function         \n");

WARNING:SPLIT_STRING: quoted string split across lines
#569: FILE: kernel/trace/trace_ksym.c:409:
+		 "#          |           |          |              |         "
+		 "|            \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#569: FILE: kernel/trace/trace_ksym.c:409:
+		 "|            \n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#583: FILE: kernel/trace/trace_ksym.c:423:
+	ret = trace_seq_printf(s, "%-15s %-5d %-3d %-20s ", field->p_name,
+				entry->pid, iter->cpu, field->ksym_name);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#610: FILE: kernel/trace/trace_ksym.c:450:
+struct tracer ksym_tracer __read_mostly =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#629: FILE: kernel/trace/trace_ksym.c:469:
+	entry = debugfs_create_file("ksym_trace_filter", 0666, d_tracer,

Exporting world writable sysfs/debugfs files is usually a bad thing.
When done arbitrarily they can introduce serious security bugs.
In the past, some of the debugfs vulnerabilities would seemingly allow
any local user to write arbitrary values into device registers - a
situation from which little good can be expected to emerge.

See: https://lore.kernel.org/linux-arm-kernel/cover.1296818921.git.segoon@openwall.com/

ERROR:EXPORTED_WORLD_WRITABLE: Exporting writable files is usually an error. Consider more restrictive permissions.
#629: FILE: kernel/trace/trace_ksym.c:469:
+	entry = debugfs_create_file("ksym_trace_filter", 0666, d_tracer,
+				    NULL, &ksym_tracing_fops);
WARNING:SPLIT_STRING: quoted string split across lines
#633: FILE: kernel/trace/trace_ksym.c:473:
+		pr_warning("Could not create debugfs "
+			   "'ksym_trace_filter' file\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#639: FILE: kernel/trace/trace_ksym.c:479:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#643: FILE: kernel/trace/trace_ksym.c:483:
+	seq_printf(m, "   Access type    ");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#644: FILE: kernel/trace/trace_ksym.c:484:
+	seq_printf(m, "            Symbol                     Counter     \n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#644: FILE: kernel/trace/trace_ksym.c:484:
+	seq_printf(m, "            Symbol                     Counter     \n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#662: FILE: kernel/trace/trace_ksym.c:502:
+		seq_printf(m, "     W     ");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#665: FILE: kernel/trace/trace_ksym.c:505:
+		seq_printf(m, "     RW    ");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#668: FILE: kernel/trace/trace_ksym.c:508:
+		seq_printf(m, "     NA    ");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#674: FILE: kernel/trace/trace_ksym.c:514:
+		seq_printf(m, "               <NA>                ");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ksym_filter_head.first
#682: FILE: kernel/trace/trace_ksym.c:522:
+	return &(ksym_filter_head.first);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#707: FILE: kernel/trace/trace_ksym.c:547:
+		printk(KERN_WARNING "Warning: could not register "

WARNING:SPLIT_STRING: quoted string split across lines
#708: FILE: kernel/trace/trace_ksym.c:548:
+		printk(KERN_WARNING "Warning: could not register "
+				    "ksym tracer stats\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#760: FILE: kernel/trace/trace_selftest.c:719:
+		printk(KERN_CONT "Ksym tracer startup test failed");

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#760: FILE: kernel/trace/trace_selftest.c:719:
+		printk(KERN_CONT "Ksym tracer startup test failed");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000152290.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 29 warnings, 26 checks, 688 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000152290.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
