WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#48: 
> > > That can cause fsync to wait arbitrarily long if some other process is

WARNING:REPEATED_WORD: Possible repeated word: 'far'
#71: 
> > It's far far worse to just ignore data integrity of fsync because of the

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#159: FILE: mm/page-writeback.c:852:
+static int __write_cache_pages(struct address_space *mapping,
 		      struct writeback_control *wbc, writepage_t writepage,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#195: FILE: mm/page-writeback.c:987:
+static int __write_cache_pages_sync(struct address_space *mapping,
+		      struct writeback_control *wbc, writepage_t writepage,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: mm/page-writeback.c:1003:
+		nr_pages = pagevec_lookup_tag(&pvec, mapping, &index,
+			      PAGECACHE_TAG_DIRTY,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#242: FILE: mm/page-writeback.c:1034:
+		nr_pages = pagevec_lookup_tag(&pvec, mapping, &index,
+			      PAGECACHE_TAG_WRITEBACK,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#273: FILE: mm/page-writeback.c:1065:
+		nr_pages = pagevec_lookup_tag(&pvec, mapping, &index,
+			      PAGECACHE_TAG_FSYNC,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#319: FILE: mm/page-writeback.c:1111:
+			BUG_ON(PageWriteback(page));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#347: FILE: mm/page-writeback.c:1139:
+ * write_cache_pages - walk the list of dirty pages of the given address space and write all of them.

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#382: FILE: mm/filemap.c:309:
+int wait_on_page_writeback_range_fsync(struct address_space *mapping,
+				pgoff_t start, pgoff_t end)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#395: FILE: mm/filemap.c:322:
+	while ((index <= end) &&
+			(nr_pages = pagevec_lookup_tag(&pvec, mapping, &index,

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#397: FILE: mm/filemap.c:324:
+			min(end - index, (pgoff_t)PAGEVEC_SIZE-1) + 1)) != 0) {
 			                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#398: FILE: mm/filemap.c:325:
+		unsigned i;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000221530.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 8 checks, 330 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000221530.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
