WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#89: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#94: FILE: arch/microblaze/kernel/cpu/cpuinfo-pvr-full.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#95: FILE: arch/microblaze/kernel/cpu/cpuinfo-pvr-full.c:2:
+ * arch/microblaze/kernel/cpu/cpuinfo-pvr-full.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#119: FILE: arch/microblaze/kernel/cpu/cpuinfo-pvr-full.c:26:
+#define CI(c, p) ci->c = PVR_##p(pvr)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'c' may be better as '(c)' to avoid precedence issues
#119: FILE: arch/microblaze/kernel/cpu/cpuinfo-pvr-full.c:26:
+#define CI(c, p) ci->c = PVR_##p(pvr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#124: FILE: arch/microblaze/kernel/cpu/cpuinfo-pvr-full.c:31:
+	struct pvr_s pvr;
+	get_pvr(&pvr);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#183: FILE: arch/microblaze/kernel/cpu/cpuinfo-static.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#184: FILE: arch/microblaze/kernel/cpu/cpuinfo-static.c:2:
+ * arch/microblaze/kernel/cpu/cpuinfo-static.c

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cpu_ver_lookup[i].s"
#286: FILE: arch/microblaze/kernel/cpu/cpuinfo-static.c:104:
+	for (i = 0; cpu_ver_lookup[i].s != NULL; i++) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "family_string_lookup[i].s"
#292: FILE: arch/microblaze/kernel/cpu/cpuinfo-static.c:110:
+	for (i = 0; family_string_lookup[i].s != NULL; i++) {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#312: FILE: arch/microblaze/kernel/cpu/cpuinfo.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#313: FILE: arch/microblaze/kernel/cpu/cpuinfo.c:2:
+ * arch/microblaze/kernel/cpu/cpuinfo.c

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#349: FILE: arch/microblaze/kernel/cpu/cpuinfo.c:38:
+};
+struct cpu_ver_key *cpu_ver_lookup =

CHECK:SPACING: No space is necessary after a cast
#350: FILE: arch/microblaze/kernel/cpu/cpuinfo.c:39:
+	(struct cpu_ver_key *) the_cpu_ver_lookup;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#368: FILE: arch/microblaze/kernel/cpu/cpuinfo.c:57:
+};
+struct family_string_key *family_string_lookup =

CHECK:SPACING: No space is necessary after a cast
#369: FILE: arch/microblaze/kernel/cpu/cpuinfo.c:58:
+	(struct family_string_key *) the_family_string_lookup;

CHECK:SPACING: No space is necessary after a cast
#376: FILE: arch/microblaze/kernel/cpu/cpuinfo.c:65:
+	cpu = (struct device_node *) of_find_node_by_type(NULL, "cpu");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#378: FILE: arch/microblaze/kernel/cpu/cpuinfo.c:67:
+		printk(KERN_ERR "You don't have cpu!!!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#380: FILE: arch/microblaze/kernel/cpu/cpuinfo.c:69:
+	printk(KERN_INFO "%s: initialising\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#380: FILE: arch/microblaze/kernel/cpu/cpuinfo.c:69:
+	printk(KERN_INFO "%s: initialising\n", __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#384: FILE: arch/microblaze/kernel/cpu/cpuinfo.c:73:
+		printk(KERN_WARNING

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#386: FILE: arch/microblaze/kernel/cpu/cpuinfo.c:75:
+			__FUNCTION__);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#389: FILE: arch/microblaze/kernel/cpu/cpuinfo.c:78:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#395: FILE: arch/microblaze/kernel/cpu/cpuinfo.c:84:
+		printk(KERN_INFO "%s: Using full CPU PVR support\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#396: FILE: arch/microblaze/kernel/cpu/cpuinfo.c:85:
+		printk(KERN_INFO "%s: Using full CPU PVR support\n",
+			__FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#396: FILE: arch/microblaze/kernel/cpu/cpuinfo.c:85:
+			__FUNCTION__);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#411: FILE: include/asm-microblaze/cpuinfo.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#412: FILE: include/asm-microblaze/cpuinfo.h:2:
+ * include/asm-microblaze/cpuinfo.h

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#435: FILE: include/asm-microblaze/cpuinfo.h:25:
+	unsigned k;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#440: FILE: include/asm-microblaze/cpuinfo.h:30:
+	unsigned k;

CHECK:SPACING: No space is necessary after a cast
#521: FILE: include/asm-microblaze/cpuinfo.h:111:
+	return ((val = (int *) of_get_property(cpu, n, NULL)) ? *val : 0);

WARNING:LINE_SPACING: Missing a blank line after declarations
#521: FILE: include/asm-microblaze/cpuinfo.h:111:
+	int *val;
+	return ((val = (int *) of_get_property(cpu, n, NULL)) ? *val : 0);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000331274.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 21 warnings, 10 checks, 413 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000331274.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
