WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#83: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#88: FILE: drivers/misc/enclosure.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#93: FILE: drivers/misc/enclosure.c:6:
+ *
+**-----------------------------------------------------------------------------

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#105: FILE: drivers/misc/enclosure.c:18:
+**  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#106: FILE: drivers/misc/enclosure.c:19:
+**  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#159: FILE: drivers/misc/enclosure.c:72:
+int enclosure_for_each_device(int (*fn)(struct enclosure_device *, void *),
+			      void *data)
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#193: FILE: drivers/misc/enclosure.c:106:
+			sizeof(struct enclosure_component)*components,
 			                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#355: FILE: drivers/misc/enclosure.c:268:
+	__ATTR(components, S_IRUGO, enclosure_show_components, NULL),

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#366: FILE: drivers/misc/enclosure.c:279:
+static char *enclosure_status [] = {

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#377: FILE: drivers/misc/enclosure.c:290:
+static char *enclosure_type [] = {

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#397: FILE: drivers/misc/enclosure.c:310:
+	int val = simple_strtoul(buf, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#415: FILE: drivers/misc/enclosure.c:328:
+static ssize_t set_component_status(struct class_device *cdev, const char *buf,
+				   size_t count)

CHECK:BRACES: braces {} should be used on all arms of this statement
#428: FILE: drivers/misc/enclosure.c:341:
+	if (enclosure_status[i] && edev->cb->set_status) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#431: FILE: drivers/misc/enclosure.c:344:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#446: FILE: drivers/misc/enclosure.c:359:
+static ssize_t set_component_active(struct class_device *cdev, const char *buf,
+				   size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#450: FILE: drivers/misc/enclosure.c:363:
+	int val = simple_strtoul(buf, NULL, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#468: FILE: drivers/misc/enclosure.c:381:
+static ssize_t set_component_locate(struct class_device *cdev, const char *buf,
+				   size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#472: FILE: drivers/misc/enclosure.c:385:
+	int val = simple_strtoul(buf, NULL, 0);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#486: FILE: drivers/misc/enclosure.c:399:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#488: FILE: drivers/misc/enclosure.c:401:
+	__ATTR(fault, S_IRUGO | S_IWUSR, get_component_fault,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#490: FILE: drivers/misc/enclosure.c:403:
+	__ATTR(status, S_IRUGO | S_IWUSR, get_component_status,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#492: FILE: drivers/misc/enclosure.c:405:
+	__ATTR(active, S_IRUGO | S_IWUSR, get_component_active,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#494: FILE: drivers/misc/enclosure.c:407:
+	__ATTR(locate, S_IRUGO | S_IWUSR, get_component_locate,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#496: FILE: drivers/misc/enclosure.c:409:
+	__ATTR(type, S_IRUGO, get_component_type, NULL),

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#543: FILE: include/linux/enclosure.h:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#548: FILE: include/linux/enclosure.h:6:
+ *
+**-----------------------------------------------------------------------------

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#560: FILE: include/linux/enclosure.h:18:
+**  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#561: FILE: include/linux/enclosure.h:19:
+**  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct enclosure_device *' should also have an identifier name
#602: FILE: include/linux/enclosure.h:60:
+	void (*get_status)(struct enclosure_device *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct enclosure_component *' should also have an identifier name
#602: FILE: include/linux/enclosure.h:60:
+	void (*get_status)(struct enclosure_device *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#603: FILE: include/linux/enclosure.h:61:
+	void (*get_status)(struct enclosure_device *,
+			     struct enclosure_component *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct enclosure_device *' should also have an identifier name
#604: FILE: include/linux/enclosure.h:62:
+	int (*set_status)(struct enclosure_device *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct enclosure_component *' should also have an identifier name
#604: FILE: include/linux/enclosure.h:62:
+	int (*set_status)(struct enclosure_device *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct enclosure_device *' should also have an identifier name
#607: FILE: include/linux/enclosure.h:65:
+	void (*get_fault)(struct enclosure_device *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct enclosure_component *' should also have an identifier name
#607: FILE: include/linux/enclosure.h:65:
+	void (*get_fault)(struct enclosure_device *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct enclosure_device *' should also have an identifier name
#609: FILE: include/linux/enclosure.h:67:
+	int (*set_fault)(struct enclosure_device *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct enclosure_component *' should also have an identifier name
#609: FILE: include/linux/enclosure.h:67:
+	int (*set_fault)(struct enclosure_device *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct enclosure_device *' should also have an identifier name
#612: FILE: include/linux/enclosure.h:70:
+	void (*get_active)(struct enclosure_device *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct enclosure_component *' should also have an identifier name
#612: FILE: include/linux/enclosure.h:70:
+	void (*get_active)(struct enclosure_device *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct enclosure_device *' should also have an identifier name
#614: FILE: include/linux/enclosure.h:72:
+	int (*set_active)(struct enclosure_device *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct enclosure_component *' should also have an identifier name
#614: FILE: include/linux/enclosure.h:72:
+	int (*set_active)(struct enclosure_device *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct enclosure_device *' should also have an identifier name
#617: FILE: include/linux/enclosure.h:75:
+	void (*get_locate)(struct enclosure_device *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct enclosure_component *' should also have an identifier name
#617: FILE: include/linux/enclosure.h:75:
+	void (*get_locate)(struct enclosure_device *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct enclosure_device *' should also have an identifier name
#619: FILE: include/linux/enclosure.h:77:
+	int (*set_locate)(struct enclosure_device *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct enclosure_component *' should also have an identifier name
#619: FILE: include/linux/enclosure.h:77:
+	int (*set_locate)(struct enclosure_device *,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#624: FILE: include/linux/enclosure.h:82:
+
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#648: FILE: include/linux/enclosure.h:106:
+struct enclosure_device *

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#648: FILE: include/linux/enclosure.h:106:
+struct enclosure_device *

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#648: FILE: include/linux/enclosure.h:106:
+struct enclosure_device *

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct enclosure_component_callbacks *' should also have an identifier name
#648: FILE: include/linux/enclosure.h:106:
+struct enclosure_device *

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct enclosure_device *' should also have an identifier name
#651: FILE: include/linux/enclosure.h:109:
+void enclosure_unregister(struct enclosure_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct enclosure_device *' should also have an identifier name
#652: FILE: include/linux/enclosure.h:110:
+struct enclosure_component *

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#652: FILE: include/linux/enclosure.h:110:
+struct enclosure_component *

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#652: FILE: include/linux/enclosure.h:110:
+struct enclosure_component *

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#654: FILE: include/linux/enclosure.h:112:
+enclosure_component_register(struct enclosure_device *, unsigned int,
+				 enum enclosure_component_type, const char *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000327250.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 38 warnings, 10 checks, 593 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000327250.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
