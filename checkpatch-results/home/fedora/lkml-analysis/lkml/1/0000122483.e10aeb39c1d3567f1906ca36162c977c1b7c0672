WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#83: FILE: drivers/video/Kconfig:1946:
+config FB_SILICONMOTION
+	bool "Silicon Motion Display Support"
+	depends on FB
+	help
+	  Frame Buffer driver for the Silicon Motion serial graphic card.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#89: FILE: drivers/video/Kconfig:1952:
+config FB_SM7XX
+	bool "Silicon Motion SM7XX Frame Buffer Support"
+	depends on FB_SILICONMOTION
+	depends on FB
+	select FB_CFB_FILLRECT
+	select FB_CFB_COPYAREA
+	select FB_CFB_IMAGEBLIT
+	help
+	  Frame Buffer driver for the Silicon Motion SM7XX serial graphic card.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#99: FILE: drivers/video/Kconfig:1962:
+config FB_SM7XX_ACCEL
+	bool "Siliconmotion Acceleration functions (EXPERIMENTAL)"
+	depends on FB_SM7XX && EXPERIMENTAL
+	help
+	This will compile the Trident frame buffer device with
+	acceleration functions.
+

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#122: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:DEPRECATED_VARIABLE: Use of EXTRA_CFLAGS is deprecated, please use `ccflags-y instead.
#133: FILE: drivers/video/smi/Makefile:7:
+EXTRA_CFLAGS += -Werror

EXTRA_{A,C,CPP,LD}FLAGS are deprecated and should be replaced by the new
flags added via commit f77bf01425b1 ("kbuild: introduce ccflags-y,
asflags-y and ldflags-y").

The following conversion scheme maybe used::

  EXTRA_AFLAGS    ->  asflags-y
  EXTRA_CFLAGS    ->  ccflags-y
  EXTRA_CPPFLAGS  ->  cppflags-y
  EXTRA_LDFLAGS   ->  ldflags-y

See:

  1. https://lore.kernel.org/lkml/20070930191054.GA15876@uranus.ravnborg.org/
  2. https://lore.kernel.org/lkml/1313384834-24433-12-git-send-email-lacombar@gmail.com/
  3. https://www.kernel.org/doc/html/latest/kbuild/makefiles.html#compilation-flags

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#141: FILE: drivers/video/smi/smtc2d.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:REPEATED_WORD: Possible repeated word: 'Boyod'
#145: FILE: drivers/video/smi/smtc2d.c:5:
+ * Author: Boyod boyod.yang@siliconmotion.com.cn

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#155: FILE: drivers/video/smi/smtc2d.c:15:
+ * ^I- Add PowerPC support$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#156: FILE: drivers/video/smi/smtc2d.c:16:
+ * ^I- Add 2D support for Lynx -$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#158: FILE: drivers/video/smi/smtc2d.c:18:
+ * ^IBoyod.yang  <boyod.yang@siliconmotion.com.cn>$

CHECK:CAMELCASE: Avoid CamelCase: <SMTC_write2Dreg>
#163: FILE: drivers/video/smi/smtc2d.c:23:
+void SMTC_write2Dreg(unsigned long nOffset, unsigned long nData)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <nOffset>
#163: FILE: drivers/video/smi/smtc2d.c:23:
+void SMTC_write2Dreg(unsigned long nOffset, unsigned long nData)

CHECK:CAMELCASE: Avoid CamelCase: <nData>
#163: FILE: drivers/video/smi/smtc2d.c:23:
+void SMTC_write2Dreg(unsigned long nOffset, unsigned long nData)

CHECK:CAMELCASE: Avoid CamelCase: <smtc_2DBaseAddress>
#165: FILE: drivers/video/smi/smtc2d.c:25:
+	writel(nData, smtc_2DBaseAddress + nOffset);

CHECK:CAMELCASE: Avoid CamelCase: <SMTC_read2Dreg>
#168: FILE: drivers/video/smi/smtc2d.c:28:
+unsigned long SMTC_read2Dreg(unsigned long nOffset)

CHECK:CAMELCASE: Avoid CamelCase: <SMTC_write2Ddataport>
#173: FILE: drivers/video/smi/smtc2d.c:33:
+void SMTC_write2Ddataport(unsigned long nOffset, unsigned long nData)

CHECK:CAMELCASE: Avoid CamelCase: <smtc_2Ddataport>
#175: FILE: drivers/video/smi/smtc2d.c:35:
+	writel(nData, smtc_2Ddataport + nOffset);

CHECK:CAMELCASE: Avoid CamelCase: <deInit>
#187: FILE: drivers/video/smi/smtc2d.c:47:
+void deInit(unsigned int nModeWidth, unsigned int nModeHeight,

CHECK:CAMELCASE: Avoid CamelCase: <nModeWidth>
#187: FILE: drivers/video/smi/smtc2d.c:47:
+void deInit(unsigned int nModeWidth, unsigned int nModeHeight,

CHECK:CAMELCASE: Avoid CamelCase: <nModeHeight>
#187: FILE: drivers/video/smi/smtc2d.c:47:
+void deInit(unsigned int nModeWidth, unsigned int nModeHeight,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#188: FILE: drivers/video/smi/smtc2d.c:48:
+void deInit(unsigned int nModeWidth, unsigned int nModeHeight,
+		unsigned int bpp)

WARNING:LINE_SPACING: Missing a blank line after declarations
#192: FILE: drivers/video/smi/smtc2d.c:52:
+	unsigned char clock;
+	clock = smtc_seqr(0x21);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: drivers/video/smi/smtc2d.c:99:
+				FIELD_VALUE(0, DE_STRETCH_FORMAT, PATTERN_X,
+				    0) | FIELD_SET(0, DE_STRETCH_FORMAT,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: drivers/video/smi/smtc2d.c:106:
+				FIELD_VALUE(0, DE_STRETCH_FORMAT,
+					SOURCE_HEIGHT, 3));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#256: FILE: drivers/video/smi/smtc2d.c:116:
+				FIELD_VALUE(0, DE_STRETCH_FORMAT, PATTERN_X,
+				    0) | FIELD_SET(0, DE_STRETCH_FORMAT,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#263: FILE: drivers/video/smi/smtc2d.c:123:
+				FIELD_VALUE(0, DE_STRETCH_FORMAT,
+					SOURCE_HEIGHT, 3));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: drivers/video/smi/smtc2d.c:134:
+				FIELD_VALUE(0, DE_STRETCH_FORMAT, PATTERN_X,
+				    0) | FIELD_SET(0, DE_STRETCH_FORMAT,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#281: FILE: drivers/video/smi/smtc2d.c:141:
+				FIELD_VALUE(0, DE_STRETCH_FORMAT,
+					SOURCE_HEIGHT, 3));

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#289: FILE: drivers/video/smi/smtc2d.c:149:
+			FIELD_VALUE(0, DE_COLOR_COMPARE_MASK, MASKS, \

CHECK:CAMELCASE: Avoid CamelCase: <deVerticalLine>
#295: FILE: drivers/video/smi/smtc2d.c:155:
+void deVerticalLine(unsigned long dst_base,

CHECK:CAMELCASE: Avoid CamelCase: <nColor>
#299: FILE: drivers/video/smi/smtc2d.c:159:
+		    unsigned long dst_height, unsigned long nColor)

CHECK:CAMELCASE: Avoid CamelCase: <deWaitForNotBusy>
#301: FILE: drivers/video/smi/smtc2d.c:161:
+	deWaitForNotBusy();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#313: FILE: drivers/video/smi/smtc2d.c:173:
+			FIELD_VALUE(0, DE_WINDOW_WIDTH, DESTINATION,
+			    dst_pitch) | FIELD_VALUE(0, DE_WINDOW_WIDTH,

CHECK:CAMELCASE: Avoid CamelCase: <deHorizontalLine>
#343: FILE: drivers/video/smi/smtc2d.c:203:
+void deHorizontalLine(unsigned long dst_base,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#361: FILE: drivers/video/smi/smtc2d.c:221:
+			FIELD_VALUE(0, DE_WINDOW_WIDTH, DESTINATION,
+			    dst_pitch) | FIELD_VALUE(0, DE_WINDOW_WIDTH,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#368: FILE: drivers/video/smi/smtc2d.c:228:
+			FIELD_SET(0, DE_DESTINATION, WRAP,
+			  DISABLE) | FIELD_VALUE(0, DE_DESTINATION, X,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#375: FILE: drivers/video/smi/smtc2d.c:235:
+			FIELD_VALUE(0, DE_DIMENSION, X,
+			    dst_width) | FIELD_VALUE(0, DE_DIMENSION,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#378: FILE: drivers/video/smi/smtc2d.c:238:
+	SMTC_write2Dreg(DE_CONTROL,
+		FIELD_SET(0, DE_CONTROL, STATUS, START) | FIELD_SET(0,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#379: FILE: drivers/video/smi/smtc2d.c:239:
+		FIELD_SET(0, DE_CONTROL, STATUS, START) | FIELD_SET(0,
+							    DE_CONTROL,

CHECK:CAMELCASE: Avoid CamelCase: <deLine>
#400: FILE: drivers/video/smi/smtc2d.c:260:
+void deLine(unsigned long dst_base,

CHECK:CAMELCASE: Avoid CamelCase: <nX1>
#402: FILE: drivers/video/smi/smtc2d.c:262:
+	    unsigned long nX1,

CHECK:CAMELCASE: Avoid CamelCase: <nY1>
#403: FILE: drivers/video/smi/smtc2d.c:263:
+	    unsigned long nY1,

CHECK:CAMELCASE: Avoid CamelCase: <nX2>
#404: FILE: drivers/video/smi/smtc2d.c:264:
+	    unsigned long nX2, unsigned long nY2, unsigned long nColor)

CHECK:CAMELCASE: Avoid CamelCase: <nY2>
#404: FILE: drivers/video/smi/smtc2d.c:264:
+	    unsigned long nX2, unsigned long nY2, unsigned long nColor)

CHECK:CAMELCASE: Avoid CamelCase: <nCommand>
#406: FILE: drivers/video/smi/smtc2d.c:266:
+	unsigned long nCommand =

CHECK:CAMELCASE: Avoid CamelCase: <DeltaX>
#415: FILE: drivers/video/smi/smtc2d.c:275:
+	unsigned long DeltaX;

CHECK:CAMELCASE: Avoid CamelCase: <DeltaY>
#416: FILE: drivers/video/smi/smtc2d.c:276:
+	unsigned long DeltaY;

CHECK:BRACES: braces {} should be used on all arms of this statement
#419: FILE: drivers/video/smi/smtc2d.c:279:
+	if (nX1 <= nX2)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#421: FILE: drivers/video/smi/smtc2d.c:281:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#427: FILE: drivers/video/smi/smtc2d.c:287:
+	if (nY1 <= nY2)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#429: FILE: drivers/video/smi/smtc2d.c:289:
+	else {

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#444: FILE: drivers/video/smi/smtc2d.c:304:
+		deHorizontalLine(dst_base, dst_pitch, nX1, nY1, \

CHECK:BRACES: Unbalanced braces around else statement
#487: FILE: drivers/video/smi/smtc2d.c:347:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#489: FILE: drivers/video/smi/smtc2d.c:349:
+		unsigned int k1, k2, et, w;
+		if (DeltaX < DeltaY) {

CHECK:CAMELCASE: Avoid CamelCase: <deFillRect>
#546: FILE: drivers/video/smi/smtc2d.c:406:
+void deFillRect(unsigned long dst_base,

CHECK:CAMELCASE: Avoid CamelCase: <deRotatePattern>
#617: FILE: drivers/video/smi/smtc2d.c:477:
+void deRotatePattern(unsigned char *pattern_dstaddr,

CHECK:CAMELCASE: Avoid CamelCase: <pjPatByte>
#625: FILE: drivers/video/smi/smtc2d.c:485:
+	unsigned char *pjPatByte;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pattern_dstaddr"
#627: FILE: drivers/video/smi/smtc2d.c:487:
+	if (pattern_dstaddr != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:CAMELCASE: Avoid CamelCase: <pjBuffer>
#638: FILE: drivers/video/smi/smtc2d.c:498:
+						unsigned char *pjBuffer =

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#641: FILE: drivers/video/smi/smtc2d.c:501:
+						for (x = 0; x < 8; x++) {

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#658: FILE: drivers/video/smi/smtc2d.c:518:
+						for (x = 0; x < 8; x++) {

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#676: FILE: drivers/video/smi/smtc2d.c:536:
+						for (x = 0; x < 8; x++) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#695: FILE: drivers/video/smi/smtc2d.c:555:
+
+	}

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#709: FILE: drivers/video/smi/smtc2d.c:569:
+ *
+**********************************************************************/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:CAMELCASE: Avoid CamelCase: <deCopy>
#710: FILE: drivers/video/smi/smtc2d.c:570:
+void deCopy(unsigned long dst_base,

CHECK:CAMELCASE: Avoid CamelCase: <pTransparent>
#720: FILE: drivers/video/smi/smtc2d.c:580:
+	    unsigned long src_Y, pTransparent pTransp, unsigned char nROP2)

CHECK:CAMELCASE: Avoid CamelCase: <pTransp>
#720: FILE: drivers/video/smi/smtc2d.c:580:
+	    unsigned long src_Y, pTransparent pTransp, unsigned char nROP2)

CHECK:CAMELCASE: Avoid CamelCase: <nROP2>
#720: FILE: drivers/video/smi/smtc2d.c:580:
+	    unsigned long src_Y, pTransparent pTransp, unsigned char nROP2)

CHECK:CAMELCASE: Avoid CamelCase: <nDirection>
#722: FILE: drivers/video/smi/smtc2d.c:582:
+	unsigned long nDirection = 0;

CHECK:CAMELCASE: Avoid CamelCase: <nTransparent>
#723: FILE: drivers/video/smi/smtc2d.c:583:
+	unsigned long nTransparent = 0;

CHECK:CAMELCASE: Avoid CamelCase: <opSign>
#728: FILE: drivers/video/smi/smtc2d.c:588:
+	unsigned long opSign = 1;

CHECK:CAMELCASE: Avoid CamelCase: <xWidth>
#730: FILE: drivers/video/smi/smtc2d.c:590:
+	unsigned long xWidth = 192 / (dst_BPP / 8);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#745: FILE: drivers/video/smi/smtc2d.c:605:
+		SMTC_write2Dreg(DE_PITCH,
+			FIELD_VALUE(0, DE_PITCH, DESTINATION,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#752: FILE: drivers/video/smi/smtc2d.c:612:
+		SMTC_write2Dreg(DE_WINDOW_WIDTH,
+			FIELD_VALUE(0, DE_WINDOW_WIDTH, DESTINATION,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pTransp"
#760: FILE: drivers/video/smi/smtc2d.c:620:
+	if (pTransp != NULL) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#773: FILE: drivers/video/smi/smtc2d.c:633:
+		/* +----------+
+		   |S         |

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#779: FILE: drivers/video/smi/smtc2d.c:639:
+		   +----------+ */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#784: FILE: drivers/video/smi/smtc2d.c:644:
+		/* +----------+
+		   |D         |

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#790: FILE: drivers/video/smi/smtc2d.c:650:
+		   +----------+ */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#798: FILE: drivers/video/smi/smtc2d.c:658:
+			/* +------+---+------+
+			   |S     |   |     D|

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#802: FILE: drivers/video/smi/smtc2d.c:662:
+			   +------+---+------+ */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#809: FILE: drivers/video/smi/smtc2d.c:669:
+			/* +------+---+------+
+			   |D     |   |     S|

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#813: FILE: drivers/video/smi/smtc2d.c:673:
+			   +------+---+------+ */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nDirection == BOTTOM_TO_TOP'
#819: FILE: drivers/video/smi/smtc2d.c:679:
+	if ((nDirection == BOTTOM_TO_TOP) || (nDirection == RIGHT_TO_LEFT)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nDirection == RIGHT_TO_LEFT'
#819: FILE: drivers/video/smi/smtc2d.c:679:
+	if ((nDirection == BOTTOM_TO_TOP) || (nDirection == RIGHT_TO_LEFT)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nDirection == BOTTOM_TO_TOP'
#833: FILE: drivers/video/smi/smtc2d.c:693:
+		if ((nDirection == BOTTOM_TO_TOP)
+		    || (nDirection == RIGHT_TO_LEFT)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nDirection == RIGHT_TO_LEFT'
#833: FILE: drivers/video/smi/smtc2d.c:693:
+		if ((nDirection == BOTTOM_TO_TOP)
+		    || (nDirection == RIGHT_TO_LEFT)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#834: FILE: drivers/video/smi/smtc2d.c:694:
+		if ((nDirection == BOTTOM_TO_TOP)
+		    || (nDirection == RIGHT_TO_LEFT)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nROP2 != 0x0C'
#841: FILE: drivers/video/smi/smtc2d.c:701:
+	if ((nROP2 != 0x0C) && ((dst_width * (dst_BPP / 8)) >= 192)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#850: FILE: drivers/video/smi/smtc2d.c:710:
+			SMTC_write2Dreg(DE_SOURCE,
+				FIELD_SET(0, DE_SOURCE, WRAP, DISABLE) |

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#855: FILE: drivers/video/smi/smtc2d.c:715:
+			SMTC_write2Dreg(DE_DESTINATION,
+				FIELD_SET(0, DE_DESTINATION, WRAP,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#856: FILE: drivers/video/smi/smtc2d.c:716:
+				FIELD_SET(0, DE_DESTINATION, WRAP,
+				  DISABLE) | FIELD_VALUE(0,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#864: FILE: drivers/video/smi/smtc2d.c:724:
+			SMTC_write2Dreg(DE_DIMENSION,
+				FIELD_VALUE(0, DE_DIMENSION, X,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#865: FILE: drivers/video/smi/smtc2d.c:725:
+				FIELD_VALUE(0, DE_DIMENSION, X,
+				    xWidth) | FIELD_VALUE(0,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#872: FILE: drivers/video/smi/smtc2d.c:732:
+			    FIELD_VALUE(0, DE_CONTROL, ROP,
+				nROP2) | nTransparent | FIELD_SET(0,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#904: FILE: drivers/video/smi/smtc2d.c:764:
+		SMTC_write2Dreg(DE_SOURCE,
+			FIELD_SET(0, DE_SOURCE, WRAP, DISABLE) |

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#909: FILE: drivers/video/smi/smtc2d.c:769:
+		SMTC_write2Dreg(DE_DESTINATION,
+			FIELD_SET(0, DE_DESTINATION, WRAP, DISABLE) |

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#914: FILE: drivers/video/smi/smtc2d.c:774:
+		SMTC_write2Dreg(DE_DIMENSION,
+			FIELD_VALUE(0, DE_DIMENSION, X, dst_width) |

CHECK:CAMELCASE: Avoid CamelCase: <deSetPixelFormat>
#935: FILE: drivers/video/smi/smtc2d.c:795:
+void deSetPixelFormat(unsigned long bpp)

CHECK:CAMELCASE: Avoid CamelCase: <deSystemMem2VideoMemMonoBlt>
#967: FILE: drivers/video/smi/smtc2d.c:827:
+long deSystemMem2VideoMemMonoBlt(const char *pSrcbuf,

CHECK:CAMELCASE: Avoid CamelCase: <pSrcbuf>
#967: FILE: drivers/video/smi/smtc2d.c:827:
+long deSystemMem2VideoMemMonoBlt(const char *pSrcbuf,

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#967: FILE: drivers/video/smi/smtc2d.c:827:
+long deSystemMem2VideoMemMonoBlt(const char *pSrcbuf,
+				 long srcDelta,
+				 unsigned long startBit,
+				 unsigned long dBase,
+				 unsigned long dPitch,
+				 unsigned long bpp,
+				 unsigned long dx, unsigned long dy,
+				 unsigned long width, unsigned long height,
+				 unsigned long fColor,
+				 unsigned long bColor,
+				 unsigned long rop2) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <srcDelta>
#968: FILE: drivers/video/smi/smtc2d.c:828:
+				 long srcDelta,

CHECK:CAMELCASE: Avoid CamelCase: <startBit>
#969: FILE: drivers/video/smi/smtc2d.c:829:
+				 unsigned long startBit,

CHECK:CAMELCASE: Avoid CamelCase: <dBase>
#970: FILE: drivers/video/smi/smtc2d.c:830:
+				 unsigned long dBase,

CHECK:CAMELCASE: Avoid CamelCase: <dPitch>
#971: FILE: drivers/video/smi/smtc2d.c:831:
+				 unsigned long dPitch,

CHECK:CAMELCASE: Avoid CamelCase: <fColor>
#975: FILE: drivers/video/smi/smtc2d.c:835:
+				 unsigned long fColor,

CHECK:CAMELCASE: Avoid CamelCase: <bColor>
#976: FILE: drivers/video/smi/smtc2d.c:836:
+				 unsigned long bColor,

CHECK:CAMELCASE: Avoid CamelCase: <bytePerPixel>
#978: FILE: drivers/video/smi/smtc2d.c:838:
+	unsigned long bytePerPixel;

CHECK:CAMELCASE: Avoid CamelCase: <ulBytesPerScan>
#979: FILE: drivers/video/smi/smtc2d.c:839:
+	unsigned long ulBytesPerScan;

CHECK:CAMELCASE: Avoid CamelCase: <ul4BytesPerScan>
#980: FILE: drivers/video/smi/smtc2d.c:840:
+	unsigned long ul4BytesPerScan;

CHECK:CAMELCASE: Avoid CamelCase: <ulBytesRemain>
#981: FILE: drivers/video/smi/smtc2d.c:841:
+	unsigned long ulBytesRemain;

CHECK:CAMELCASE: Avoid CamelCase: <ajRemain>
#983: FILE: drivers/video/smi/smtc2d.c:843:
+	unsigned char ajRemain[4];

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1014: FILE: drivers/video/smi/smtc2d.c:874:
+	if (dPitch) {
+

WARNING:TYPO_SPELLING: 'convertion' may be misspelled - perhaps 'conversion'?
#1020: FILE: drivers/video/smi/smtc2d.c:880:
+		 * register uses pixel values. Need Byte to pixel convertion.
 		                                                  ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1024: FILE: drivers/video/smi/smtc2d.c:884:
+		SMTC_write2Dreg(DE_PITCH,
+			FIELD_VALUE(0, DE_PITCH, DESTINATION,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1025: FILE: drivers/video/smi/smtc2d.c:885:
+			FIELD_VALUE(0, DE_PITCH, DESTINATION,
+			    dPitch /

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1039: FILE: drivers/video/smi/smtc2d.c:899:
+		SMTC_write2Dreg(DE_WINDOW_WIDTH,
+			FIELD_VALUE(0, DE_WINDOW_WIDTH, DESTINATION,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1040: FILE: drivers/video/smi/smtc2d.c:900:
+			FIELD_VALUE(0, DE_WINDOW_WIDTH, DESTINATION,
+			    (dPitch /

CHECK:SPACING: space preferred before that '/' (ctx:ExE)
#1045: FILE: drivers/video/smi/smtc2d.c:905:
+							   /
 							   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <deGetTransparency>
#1079: FILE: drivers/video/smi/smtc2d.c:939:
+	SMTC_write2Dreg(DE_CONTROL, de_ctrl | deGetTransparency());

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1126: FILE: drivers/video/smi/smtc2d.h:1:
+/*

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'f' - possible side-effects?
#1148: FILE: drivers/video/smi/smtc2d.h:23:
+#define _F_SIZE(f)		(1 + _F_END(f) - _F_START(f))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'f' - possible side-effects?
#1149: FILE: drivers/video/smi/smtc2d.h:24:
+#define _F_MASK(f)		(((1ULL << _F_SIZE(f)) - 1) << _F_START(f))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'f' - possible side-effects?
#1150: FILE: drivers/video/smi/smtc2d.h:25:
+#define _F_NORMALIZE(v, f)	(((v) & _F_MASK(f)) >> _F_START(f))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'f' - possible side-effects?
#1151: FILE: drivers/video/smi/smtc2d.h:26:
+#define _F_DENORMALIZE(v, f)	(((v) << _F_START(f)) & _F_MASK(f))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1157: FILE: drivers/video/smi/smtc2d.h:32:
+    _F_NORMALIZE((x), reg ## _ ## field) \$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1160: FILE: drivers/video/smi/smtc2d.h:35:
+#define FIELD_SET(x, reg, field, value) \
+( \
+    (x & ~_F_MASK(reg ## _ ## field)) \
+    | _F_DENORMALIZE(reg ## _ ## field ## _ ## value, reg ## _ ## field) \
+)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1162: FILE: drivers/video/smi/smtc2d.h:37:
+    (x & ~_F_MASK(reg ## _ ## field)) \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1163: FILE: drivers/video/smi/smtc2d.h:38:
+    | _F_DENORMALIZE(reg ## _ ## field ## _ ## value, reg ## _ ## field) \$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1166: FILE: drivers/video/smi/smtc2d.h:41:
+#define FIELD_VALUE(x, reg, field, value) \
+( \
+    (x & ~_F_MASK(reg ## _ ## field)) \
+    | _F_DENORMALIZE(value, reg ## _ ## field) \
+)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1168: FILE: drivers/video/smi/smtc2d.h:43:
+    (x & ~_F_MASK(reg ## _ ## field)) \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1169: FILE: drivers/video/smi/smtc2d.h:44:
+    | _F_DENORMALIZE(value, reg ## _ ## field) \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1174: FILE: drivers/video/smi/smtc2d.h:49:
+    ~_F_MASK(reg ## _ ## field) \$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'field' - possible side-effects?
#1181: FILE: drivers/video/smi/smtc2d.h:56:
+#define FIELD_SIZE(field) \
+	(1 + FIELD_END(field) - FIELD_START(field))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'field' - possible side-effects?
#1184: FILE: drivers/video/smi/smtc2d.h:59:
+#define FIELD_MASK(field) \
+	(((1 << (FIELD_SIZE(field)-1)) \
+	| ((1 << (FIELD_SIZE(field)-1)) - 1)) \
+	<< FIELD_START(field))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1185: FILE: drivers/video/smi/smtc2d.h:60:
+	(((1 << (FIELD_SIZE(field)-1)) \
 	                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1186: FILE: drivers/video/smi/smtc2d.h:61:
+	| ((1 << (FIELD_SIZE(field)-1)) - 1)) \
 	                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'field' - possible side-effects?
#1189: FILE: drivers/video/smi/smtc2d.h:64:
+#define FIELD_NORMALIZE(reg, field) \
+	(((reg) & FIELD_MASK(field)) >> FIELD_START(field))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'field' - possible side-effects?
#1192: FILE: drivers/video/smi/smtc2d.h:67:
+#define FIELD_DENORMALIZE(field, value) \
+	(((value) << FIELD_START(field)) & FIELD_MASK(field))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#1202: FILE: drivers/video/smi/smtc2d.h:77:
+#define FIELD_VAL_SET(x, r, f, v) ({ \
+	x = (x & ~FIELD_MASK(r ## _ ## f)) \
+	| FIELD_DENORMALIZE(r ## _ ## f, r ## _ ## f ## _ ## v) \
+})

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1210: FILE: drivers/video/smi/smtc2d.h:85:
+typedef struct {

CHECK:CAMELCASE: Avoid CamelCase: <Transparent>
#1215: FILE: drivers/video/smi/smtc2d.h:90:
+} Transparent, *pTransparent;

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1241: FILE: drivers/video/smi/smtc2d.h:116:
+#define	DE_SOURCE_WRAP			31 : 31

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1244: FILE: drivers/video/smi/smtc2d.h:119:
+#define	DE_SOURCE_X_K1			29 : 16

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1245: FILE: drivers/video/smi/smtc2d.h:120:
+#define	DE_SOURCE_Y_K2			15 : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1248: FILE: drivers/video/smi/smtc2d.h:123:
+#define	DE_DESTINATION_WRAP		31 : 31

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1251: FILE: drivers/video/smi/smtc2d.h:126:
+#define	DE_DESTINATION_X		28 : 16

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1252: FILE: drivers/video/smi/smtc2d.h:127:
+#define	DE_DESTINATION_Y		15 : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1255: FILE: drivers/video/smi/smtc2d.h:130:
+#define	DE_DIMENSION_X			28 : 16

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1256: FILE: drivers/video/smi/smtc2d.h:131:
+#define	DE_DIMENSION_Y_ET		15 : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1259: FILE: drivers/video/smi/smtc2d.h:134:
+#define	DE_CONTROL_STATUS		31 : 31

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1262: FILE: drivers/video/smi/smtc2d.h:137:
+#define	DE_CONTROL_PATTERN		30 : 30

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1265: FILE: drivers/video/smi/smtc2d.h:140:
+#define	DE_CONTROL_UPDATE_DESTINATION_X		29 : 29

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1268: FILE: drivers/video/smi/smtc2d.h:143:
+#define	DE_CONTROL_QUICK_START			28 : 28

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1271: FILE: drivers/video/smi/smtc2d.h:146:
+#define	DE_CONTROL_DIRECTION			27 : 27

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1274: FILE: drivers/video/smi/smtc2d.h:149:
+#define	DE_CONTROL_MAJOR			26 : 26

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1277: FILE: drivers/video/smi/smtc2d.h:152:
+#define	DE_CONTROL_STEP_X			25 : 25

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1280: FILE: drivers/video/smi/smtc2d.h:155:
+#define	DE_CONTROL_STEP_Y			24 : 24

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1283: FILE: drivers/video/smi/smtc2d.h:158:
+#define	DE_CONTROL_STRETCH			23 : 23

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1286: FILE: drivers/video/smi/smtc2d.h:161:
+#define	DE_CONTROL_HOST				22 : 22

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1289: FILE: drivers/video/smi/smtc2d.h:164:
+#define	DE_CONTROL_LAST_PIXEL			21 : 21

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1292: FILE: drivers/video/smi/smtc2d.h:167:
+#define	DE_CONTROL_COMMAND			20 : 16

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1307: FILE: drivers/video/smi/smtc2d.h:182:
+#define	DE_CONTROL_ROP_SELECT			15 : 15

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1310: FILE: drivers/video/smi/smtc2d.h:185:
+#define	DE_CONTROL_ROP2_SOURCE			14 : 14

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1313: FILE: drivers/video/smi/smtc2d.h:188:
+#define	DE_CONTROL_MONO_DATA			13 : 12

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1318: FILE: drivers/video/smi/smtc2d.h:193:
+#define	DE_CONTROL_REPEAT_ROTATE		11 : 11

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1321: FILE: drivers/video/smi/smtc2d.h:196:
+#define	DE_CONTROL_TRANSPARENCY_MATCH		10 : 10

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1324: FILE: drivers/video/smi/smtc2d.h:199:
+#define	DE_CONTROL_TRANSPARENCY_SELECT			9 : 9

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1327: FILE: drivers/video/smi/smtc2d.h:202:
+#define	DE_CONTROL_TRANSPARENCY				8 : 8

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1330: FILE: drivers/video/smi/smtc2d.h:205:
+#define	DE_CONTROL_ROP					7 : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1334: FILE: drivers/video/smi/smtc2d.h:209:
+#define	DE_CONTROL_SHORT_STROKE_DIR			27 : 24

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1343: FILE: drivers/video/smi/smtc2d.h:218:
+#define	DE_CONTROL_ROTATION				25 : 24

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1350: FILE: drivers/video/smi/smtc2d.h:225:
+#define	DE_PITCH_DESTINATION				28 : 16

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1351: FILE: drivers/video/smi/smtc2d.h:226:
+#define	DE_PITCH_SOURCE					12 : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1354: FILE: drivers/video/smi/smtc2d.h:229:
+#define	DE_FOREGROUND_COLOR				31 : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1357: FILE: drivers/video/smi/smtc2d.h:232:
+#define	DE_BACKGROUND_COLOR				31 : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1360: FILE: drivers/video/smi/smtc2d.h:235:
+#define	DE_STRETCH_FORMAT_PATTERN_XY			30 : 30

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1363: FILE: drivers/video/smi/smtc2d.h:238:
+#define	DE_STRETCH_FORMAT_PATTERN_Y			29 : 27

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1364: FILE: drivers/video/smi/smtc2d.h:239:
+#define	DE_STRETCH_FORMAT_PATTERN_X			25 : 23

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1365: FILE: drivers/video/smi/smtc2d.h:240:
+#define	DE_STRETCH_FORMAT_PIXEL_FORMAT			21 : 20

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1370: FILE: drivers/video/smi/smtc2d.h:245:
+#define	DE_STRETCH_FORMAT_ADDRESSING			19 : 16

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1373: FILE: drivers/video/smi/smtc2d.h:248:
+#define	DE_STRETCH_FORMAT_SOURCE_HEIGHT			11 : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1376: FILE: drivers/video/smi/smtc2d.h:251:
+#define	DE_COLOR_COMPARE_COLOR				23 : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1379: FILE: drivers/video/smi/smtc2d.h:254:
+#define	DE_COLOR_COMPARE_MASK_MASKS			23 : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1382: FILE: drivers/video/smi/smtc2d.h:257:
+#define	DE_MASKS_BYTE_MASK				31 : 16

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1383: FILE: drivers/video/smi/smtc2d.h:258:
+#define	DE_MASKS_BIT_MASK				15 : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1386: FILE: drivers/video/smi/smtc2d.h:261:
+#define	DE_CLIP_TL_TOP					31 : 16

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1387: FILE: drivers/video/smi/smtc2d.h:262:
+#define	DE_CLIP_TL_STATUS				13 : 13

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1390: FILE: drivers/video/smi/smtc2d.h:265:
+#define	DE_CLIP_TL_INHIBIT				12 : 12

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1393: FILE: drivers/video/smi/smtc2d.h:268:
+#define	DE_CLIP_TL_LEFT					11 : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1396: FILE: drivers/video/smi/smtc2d.h:271:
+#define	DE_CLIP_BR_BOTTOM				31 : 16

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1397: FILE: drivers/video/smi/smtc2d.h:272:
+#define	DE_CLIP_BR_RIGHT				12 : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1400: FILE: drivers/video/smi/smtc2d.h:275:
+#define	DE_MONO_PATTERN_LOW_PATTERN			31 : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1403: FILE: drivers/video/smi/smtc2d.h:278:
+#define	DE_MONO_PATTERN_HIGH_PATTERN			31 : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1406: FILE: drivers/video/smi/smtc2d.h:281:
+#define	DE_WINDOW_WIDTH_DESTINATION			28 : 16

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1407: FILE: drivers/video/smi/smtc2d.h:282:
+#define	DE_WINDOW_WIDTH_SOURCE				12 : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1410: FILE: drivers/video/smi/smtc2d.h:285:
+#define	DE_WINDOW_SOURCE_BASE_EXT			27 : 27

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1413: FILE: drivers/video/smi/smtc2d.h:288:
+#define	DE_WINDOW_SOURCE_BASE_CS			26 : 26

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1416: FILE: drivers/video/smi/smtc2d.h:291:
+#define	DE_WINDOW_SOURCE_BASE_ADDRESS			25 : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1419: FILE: drivers/video/smi/smtc2d.h:294:
+#define	DE_WINDOW_DESTINATION_BASE_EXT			27 : 27

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1422: FILE: drivers/video/smi/smtc2d.h:297:
+#define	DE_WINDOW_DESTINATION_BASE_CS			26 : 26

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1425: FILE: drivers/video/smi/smtc2d.h:300:
+#define	DE_WINDOW_DESTINATION_BASE_ADDRESS		25 : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1428: FILE: drivers/video/smi/smtc2d.h:303:
+#define	DE_ALPHA_VALUE					7 : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1431: FILE: drivers/video/smi/smtc2d.h:306:
+#define	DE_WRAP_X					31 : 16

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1432: FILE: drivers/video/smi/smtc2d.h:307:
+#define	DE_WRAP_Y					15 : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1435: FILE: drivers/video/smi/smtc2d.h:310:
+#define	DE_STATUS_CSC					1 : 1

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1439: FILE: drivers/video/smi/smtc2d.h:314:
+#define	DE_STATUS_2D					0 : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1447: FILE: drivers/video/smi/smtc2d.h:322:
+#define	CSC_Y_SOURCE_BASE_EXT				27 : 27

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1450: FILE: drivers/video/smi/smtc2d.h:325:
+#define	CSC_Y_SOURCE_BASE_CS				26 : 26

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1453: FILE: drivers/video/smi/smtc2d.h:328:
+#define	CSC_Y_SOURCE_BASE_ADDRESS			25 : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1456: FILE: drivers/video/smi/smtc2d.h:331:
+#define	CSC_CONSTANTS_Y					31 : 24

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1457: FILE: drivers/video/smi/smtc2d.h:332:
+#define	CSC_CONSTANTS_R					23 : 16

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1458: FILE: drivers/video/smi/smtc2d.h:333:
+#define	CSC_CONSTANTS_G					15 : 8

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1459: FILE: drivers/video/smi/smtc2d.h:334:
+#define	CSC_CONSTANTS_B					7 : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1462: FILE: drivers/video/smi/smtc2d.h:337:
+#define	CSC_Y_SOURCE_X_INTEGER				26 : 16

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1463: FILE: drivers/video/smi/smtc2d.h:338:
+#define	CSC_Y_SOURCE_X_FRACTION				15 : 3

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1466: FILE: drivers/video/smi/smtc2d.h:341:
+#define	CSC_Y_SOURCE_Y_INTEGER				27 : 16

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1467: FILE: drivers/video/smi/smtc2d.h:342:
+#define	CSC_Y_SOURCE_Y_FRACTION				15 : 3

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1470: FILE: drivers/video/smi/smtc2d.h:345:
+#define	CSC_U_SOURCE_BASE_EXT				27 : 27

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1473: FILE: drivers/video/smi/smtc2d.h:348:
+#define	CSC_U_SOURCE_BASE_CS				26 : 26

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1476: FILE: drivers/video/smi/smtc2d.h:351:
+#define	CSC_U_SOURCE_BASE_ADDRESS			25 : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1479: FILE: drivers/video/smi/smtc2d.h:354:
+#define	CSC_V_SOURCE_BASE_EXT				27 : 27

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1482: FILE: drivers/video/smi/smtc2d.h:357:
+#define	CSC_V_SOURCE_BASE_CS				26 : 26

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1485: FILE: drivers/video/smi/smtc2d.h:360:
+#define	CSC_V_SOURCE_BASE_ADDRESS			25 : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1488: FILE: drivers/video/smi/smtc2d.h:363:
+#define	CSC_SOURCE_DIMENSION_X				31 : 16

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1489: FILE: drivers/video/smi/smtc2d.h:364:
+#define	CSC_SOURCE_DIMENSION_Y				15 : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1492: FILE: drivers/video/smi/smtc2d.h:367:
+#define	CSC_SOURCE_PITCH_Y				31 : 16

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1493: FILE: drivers/video/smi/smtc2d.h:368:
+#define	CSC_SOURCE_PITCH_UV				15 : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1496: FILE: drivers/video/smi/smtc2d.h:371:
+#define	CSC_DESTINATION_WRAP				31 : 31

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1499: FILE: drivers/video/smi/smtc2d.h:374:
+#define	CSC_DESTINATION_X				27 : 16

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1500: FILE: drivers/video/smi/smtc2d.h:375:
+#define	CSC_DESTINATION_Y				11 : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1503: FILE: drivers/video/smi/smtc2d.h:378:
+#define	CSC_DESTINATION_DIMENSION_X			31 : 16

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1504: FILE: drivers/video/smi/smtc2d.h:379:
+#define	CSC_DESTINATION_DIMENSION_Y			15 : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1507: FILE: drivers/video/smi/smtc2d.h:382:
+#define	CSC_DESTINATION_PITCH_X				31 : 16

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1508: FILE: drivers/video/smi/smtc2d.h:383:
+#define	CSC_DESTINATION_PITCH_Y				15 : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1511: FILE: drivers/video/smi/smtc2d.h:386:
+#define	CSC_SCALE_FACTOR_HORIZONTAL			31 : 16

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1512: FILE: drivers/video/smi/smtc2d.h:387:
+#define	CSC_SCALE_FACTOR_VERTICAL			15 : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1515: FILE: drivers/video/smi/smtc2d.h:390:
+#define	CSC_DESTINATION_BASE_EXT			27 : 27

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1518: FILE: drivers/video/smi/smtc2d.h:393:
+#define	CSC_DESTINATION_BASE_CS				26 : 26

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1521: FILE: drivers/video/smi/smtc2d.h:396:
+#define	CSC_DESTINATION_BASE_ADDRESS			25 : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1524: FILE: drivers/video/smi/smtc2d.h:399:
+#define	CSC_CONTROL_STATUS				31 : 31

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1527: FILE: drivers/video/smi/smtc2d.h:402:
+#define	CSC_CONTROL_SOURCE_FORMAT			30 : 28

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1536: FILE: drivers/video/smi/smtc2d.h:411:
+#define	CSC_CONTROL_DESTINATION_FORMAT			27 : 26

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1539: FILE: drivers/video/smi/smtc2d.h:414:
+#define	CSC_CONTROL_HORIZONTAL_FILTER			25 : 25

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1542: FILE: drivers/video/smi/smtc2d.h:417:
+#define	CSC_CONTROL_VERTICAL_FILTER			24 : 24

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1545: FILE: drivers/video/smi/smtc2d.h:420:
+#define	CSC_CONTROL_BYTE_ORDER				23 : 23

CHECK:CAMELCASE: Avoid CamelCase: <smtc_RegBaseAddress>
#1554: FILE: drivers/video/smi/smtc2d.h:429:
+extern char *smtc_RegBaseAddress;

CHECK:CAMELCASE: Avoid CamelCase: <smtc_VRAMBaseAddress>
#1556: FILE: drivers/video/smi/smtc2d.h:431:
+extern char *smtc_VRAMBaseAddress;

CHECK:CAMELCASE: Avoid CamelCase: <memRead32>
#1559: FILE: drivers/video/smi/smtc2d.h:434:
+extern unsigned long memRead32(unsigned long nOffset);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1559: FILE: drivers/video/smi/smtc2d.h:434:
+extern unsigned long memRead32(unsigned long nOffset);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:CAMELCASE: Avoid CamelCase: <memWrite32>
#1560: FILE: drivers/video/smi/smtc2d.h:435:
+extern void memWrite32(unsigned long nOffset, unsigned long nData);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1560: FILE: drivers/video/smi/smtc2d.h:435:
+extern void memWrite32(unsigned long nOffset, unsigned long nData);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1561: FILE: drivers/video/smi/smtc2d.h:436:
+extern unsigned long SMTC_read2Dreg(unsigned long nOffset);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1564: FILE: drivers/video/smi/smtc2d.h:439:
+extern void deInit(unsigned int nModeWidth, unsigned int nModeHeight,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1567: FILE: drivers/video/smi/smtc2d.h:442:
+extern void deWaitForNotBusy(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1569: FILE: drivers/video/smi/smtc2d.h:444:
+extern void deVerticalLine(unsigned long dst_base,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1570: FILE: drivers/video/smi/smtc2d.h:445:
+extern void deVerticalLine(unsigned long dst_base,
+	unsigned long dst_pitch,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1576: FILE: drivers/video/smi/smtc2d.h:451:
+extern void deHorizontalLine(unsigned long dst_base,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1577: FILE: drivers/video/smi/smtc2d.h:452:
+extern void deHorizontalLine(unsigned long dst_base,
+	unsigned long dst_pitch,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1583: FILE: drivers/video/smi/smtc2d.h:458:
+extern void deLine(unsigned long dst_base,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1584: FILE: drivers/video/smi/smtc2d.h:459:
+extern void deLine(unsigned long dst_base,
+	unsigned long dst_pitch,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1591: FILE: drivers/video/smi/smtc2d.h:466:
+extern void deFillRect(unsigned long dst_base,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1592: FILE: drivers/video/smi/smtc2d.h:467:
+extern void deFillRect(unsigned long dst_base,
+	unsigned long dst_pitch,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1599: FILE: drivers/video/smi/smtc2d.h:474:
+extern void deRotatePattern(unsigned char *pattern_dstaddr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1600: FILE: drivers/video/smi/smtc2d.h:475:
+extern void deRotatePattern(unsigned char *pattern_dstaddr,
+	unsigned long pattern_src_addr,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1606: FILE: drivers/video/smi/smtc2d.h:481:
+extern void deCopy(unsigned long dst_base,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1607: FILE: drivers/video/smi/smtc2d.h:482:
+extern void deCopy(unsigned long dst_base,
+	unsigned long dst_pitch,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1628: FILE: drivers/video/smi/smtc2d.h:503:
+ * ^I^Idown and -ive mean button up$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1630: FILE: drivers/video/smi/smtc2d.h:505:
+ * ^I^Ibe 0 to 7$

WARNING:TYPO_SPELLING: 'rectange' may be misspelled - perhaps 'rectangle'?
#1635: FILE: drivers/video/smi/smtc2d.h:510:
+ * @width, height: width and height of rectange in pixel value
                                        ^^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1637: FILE: drivers/video/smi/smtc2d.h:512:
+ * ^Ithe monochrome data)$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1641: FILE: drivers/video/smi/smtc2d.h:516:
+extern long deSystemMem2VideoMemMonoBlt(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1641: FILE: drivers/video/smi/smtc2d.h:516:
+extern long deSystemMem2VideoMemMonoBlt(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1654: FILE: drivers/video/smi/smtc2d.h:529:
+extern unsigned long deGetTransparency(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1655: FILE: drivers/video/smi/smtc2d.h:530:
+extern void deSetPixelFormat(unsigned long bpp);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1662: FILE: drivers/video/smi/smtcfb.c:1:
+/*

WARNING:REPEATED_WORD: Possible repeated word: 'Boyod'
#1667: FILE: drivers/video/smi/smtcfb.c:6:
+ * 	    Boyod boyod.yang@siliconmotion.com.cn

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1667: FILE: drivers/video/smi/smtcfb.c:6:
+ * ^I    Boyod boyod.yang@siliconmotion.com.cn$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1677: FILE: drivers/video/smi/smtcfb.c:16:
+ * ^I- Add PowerPC/Big endian support$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1678: FILE: drivers/video/smi/smtcfb.c:17:
+ * ^I- Add 2D support for Lynx$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1679: FILE: drivers/video/smi/smtcfb.c:18:
+ * ^I- Verified on2.6.19.2  Boyod.yang <boyod.yang@siliconmotion.com.cn>$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1682: FILE: drivers/video/smi/smtcfb.c:21:
+ * ^I- Only support Linux Kernel's version 2.6.21.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1686: FILE: drivers/video/smi/smtcfb.c:25:
+ * ^I- Only support Linux Kernel's version 2.6.12.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1687: FILE: drivers/video/smi/smtcfb.c:26:
+ * ^IBoyod.yang <boyod.yang@siliconmotion.com.cn>$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1709: FILE: drivers/video/smi/smtcfb.c:48:
+#define smdbg(format, arg...)	printk(KERN_DEBUG format , ## arg)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1709: FILE: drivers/video/smi/smtcfb.c:48:
+#define smdbg(format, arg...)	printk(KERN_DEBUG format , ## arg)
                              	                         ^

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1719: FILE: drivers/video/smi/smtcfb.c:58:
+/*
+* Private structure

CHECK:CAMELCASE: Avoid CamelCase: <chipID>
#1744: FILE: drivers/video/smi/smtcfb.c:83:
+	u16 chipID;

CHECK:CAMELCASE: Avoid CamelCase: <m_pMMIO>
#1745: FILE: drivers/video/smi/smtcfb.c:84:
+	unsigned char __iomem *m_pMMIO;

CHECK:CAMELCASE: Avoid CamelCase: <m_pLFB>
#1746: FILE: drivers/video/smi/smtcfb.c:85:
+	char __iomem *m_pLFB;

CHECK:CAMELCASE: Avoid CamelCase: <m_pDPR>
#1747: FILE: drivers/video/smi/smtcfb.c:86:
+	char *m_pDPR;

CHECK:CAMELCASE: Avoid CamelCase: <m_pVPR>
#1748: FILE: drivers/video/smi/smtcfb.c:87:
+	char *m_pVPR;

CHECK:CAMELCASE: Avoid CamelCase: <m_pCPR>
#1749: FILE: drivers/video/smi/smtcfb.c:88:
+	char *m_pCPR;

CHECK:CAMELCASE: Avoid CamelCase: <BaseAddressInVRAM>
#1754: FILE: drivers/video/smi/smtcfb.c:93:
+	u_long BaseAddressInVRAM;

CHECK:CAMELCASE: Avoid CamelCase: <chipRevID>
#1755: FILE: drivers/video/smi/smtcfb.c:94:
+	u8 chipRevID;

CHECK:CAMELCASE: Avoid CamelCase: <smtc_2Dacceleration>
#1790: FILE: drivers/video/smi/smtcfb.c:129:
+short smtc_2Dacceleration;

CHECK:CAMELCASE: Avoid CamelCase: <smtc_ChipIDs>
#1805: FILE: drivers/video/smi/smtcfb.c:144:
+u16 smtc_ChipIDs[] = {

CHECK:CAMELCASE: Avoid CamelCase: <numSMTCchipIDs>
#1813: FILE: drivers/video/smi/smtcfb.c:152:
+#define numSMTCchipIDs (sizeof(smtc_ChipIDs) / sizeof(u16))

WARNING:LINE_SPACING: Missing a blank line after declarations
#1818: FILE: drivers/video/smi/smtcfb.c:157:
+	unsigned long i = 0x1000000;
+	while (i--) {

CHECK:CAMELCASE: Avoid CamelCase: <m_nScreenStride>
#1829: FILE: drivers/video/smi/smtcfb.c:168:
+	u32 m_nScreenStride;

WARNING:SPLIT_STRING: quoted string split across lines
#1832: FILE: drivers/video/smi/smtcfb.c:171:
+	smdbg("\nppar_info->width = %d ppar_info->height = %d"
+			"sfb->fb.var.bits_per_pixel = %d ppar_info->hz = %d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:MISSING_SPACE: break quoted strings at a space character
#1832: FILE: drivers/video/smi/smtcfb.c:171:
+	smdbg("\nppar_info->width = %d ppar_info->height = %d"
+			"sfb->fb.var.bits_per_pixel = %d ppar_info->hz = %d\n",

CHECK:CAMELCASE: Avoid CamelCase: <numVGAModes>
#1836: FILE: drivers/video/smi/smtcfb.c:175:
+	for (j = 0; j < numVGAModes; j++) {

CHECK:CAMELCASE: Avoid CamelCase: <VGAMode>
#1837: FILE: drivers/video/smi/smtcfb.c:176:
+		if (VGAMode[j].mmSizeX == ppar_info->width &&

CHECK:CAMELCASE: Avoid CamelCase: <mmSizeX>
#1837: FILE: drivers/video/smi/smtcfb.c:176:
+		if (VGAMode[j].mmSizeX == ppar_info->width &&

CHECK:CAMELCASE: Avoid CamelCase: <mmSizeY>
#1838: FILE: drivers/video/smi/smtcfb.c:177:
+		    VGAMode[j].mmSizeY == ppar_info->height &&

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1841: FILE: drivers/video/smi/smtcfb.c:180:
+		    VGAMode[j].hz == ppar_info->hz) {
+

WARNING:SPLIT_STRING: quoted string split across lines
#1843: FILE: drivers/video/smi/smtcfb.c:182:
+			smdbg("\nVGAMode[j].mmSizeX  = %d VGAMode[j].mmSizeY ="
+					"%d VGAMode[j].bpp = %d"

WARNING:SPLIT_STRING: quoted string split across lines
#1844: FILE: drivers/video/smi/smtcfb.c:183:
+					"%d VGAMode[j].bpp = %d"
+					"VGAMode[j].hz=%d\n",

WARNING:MISSING_SPACE: break quoted strings at a space character
#1844: FILE: drivers/video/smi/smtcfb.c:183:
+					"%d VGAMode[j].bpp = %d"
+					"VGAMode[j].hz=%d\n",

CHECK:CAMELCASE: Avoid CamelCase: <Init_MISC>
#1854: FILE: drivers/video/smi/smtcfb.c:193:
+			smtc_mmiowb(VGAMode[j].Init_MISC, 0x3c2);

CHECK:CAMELCASE: Avoid CamelCase: <Init_SR00_SR04>
#1858: FILE: drivers/video/smi/smtcfb.c:197:
+				smtc_seqw(i, VGAMode[j].Init_SR00_SR04[i]);

CHECK:CAMELCASE: Avoid CamelCase: <Init_SR10_SR24>
#1863: FILE: drivers/video/smi/smtcfb.c:202:
+					  VGAMode[j].Init_SR10_SR24[i]);

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#1867: FILE: drivers/video/smi/smtcfb.c:206:
+				if (((i + 0x30) != 0x62) \

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1868: FILE: drivers/video/smi/smtcfb.c:207:
+				if (((i + 0x30) != 0x62) \
+					&& ((i + 0x30) != 0x6a) \

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1869: FILE: drivers/video/smi/smtcfb.c:208:
+					&& ((i + 0x30) != 0x6a) \
+					&& ((i + 0x30) != 0x6b))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1871: FILE: drivers/video/smi/smtcfb.c:210:
+					smtc_seqw(i + 0x30,
+						VGAMode[j].Init_SR30_SR75[i]);

CHECK:CAMELCASE: Avoid CamelCase: <Init_SR30_SR75>
#1871: FILE: drivers/video/smi/smtcfb.c:210:
+						VGAMode[j].Init_SR30_SR75[i]);

CHECK:CAMELCASE: Avoid CamelCase: <Init_SR80_SR93>
#1876: FILE: drivers/video/smi/smtcfb.c:215:
+					  VGAMode[j].Init_SR80_SR93[i]);

CHECK:CAMELCASE: Avoid CamelCase: <Init_SRA0_SRAF>
#1881: FILE: drivers/video/smi/smtcfb.c:220:
+					  VGAMode[j].Init_SRA0_SRAF[i]);

CHECK:CAMELCASE: Avoid CamelCase: <Init_GR00_GR08>
#1885: FILE: drivers/video/smi/smtcfb.c:224:
+				smtc_grphw(i, VGAMode[j].Init_GR00_GR08[i]);

CHECK:CAMELCASE: Avoid CamelCase: <Init_AR00_AR14>
#1889: FILE: drivers/video/smi/smtcfb.c:228:
+				smtc_attrw(i, VGAMode[j].Init_AR00_AR14[i]);

CHECK:CAMELCASE: Avoid CamelCase: <Init_CR00_CR18>
#1893: FILE: drivers/video/smi/smtcfb.c:232:
+				smtc_crtcw(i, VGAMode[j].Init_CR00_CR18[i]);

CHECK:CAMELCASE: Avoid CamelCase: <Init_CR30_CR4D>
#1898: FILE: drivers/video/smi/smtcfb.c:237:
+					   VGAMode[j].Init_CR30_CR4D[i]);

CHECK:CAMELCASE: Avoid CamelCase: <Init_CR90_CRA7>
#1903: FILE: drivers/video/smi/smtcfb.c:242:
+					   VGAMode[j].Init_CR90_CRA7[i]);

CHECK:SPACING: No space is necessary after a cast
#1929: FILE: drivers/video/smi/smtcfb.c:268:
+	writel((u32) (((m_nScreenStride + 2) << 16) | m_nScreenStride),

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1932: FILE: drivers/video/smi/smtcfb.c:271:
+
+}

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1934: FILE: drivers/video/smi/smtcfb.c:273:
+static void sm712_setpalette(int regno, unsigned red, unsigned green,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1934: FILE: drivers/video/smi/smtcfb.c:273:
+static void sm712_setpalette(int regno, unsigned red, unsigned green,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1935: FILE: drivers/video/smi/smtcfb.c:274:
+			     unsigned blue, struct fb_info *info)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2004: FILE: drivers/video/smi/smtcfb.c:343:
+static int smtc_setcolreg(unsigned regno, unsigned red, unsigned green,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2004: FILE: drivers/video/smi/smtcfb.c:343:
+static int smtc_setcolreg(unsigned regno, unsigned red, unsigned green,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2004: FILE: drivers/video/smi/smtcfb.c:343:
+static int smtc_setcolreg(unsigned regno, unsigned red, unsigned green,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2005: FILE: drivers/video/smi/smtcfb.c:344:
+			  unsigned blue, unsigned trans, struct fb_info *info)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2005: FILE: drivers/video/smi/smtcfb.c:344:
+			  unsigned blue, unsigned trans, struct fb_info *info)

WARNING:TYPO_SPELLING: 'pseuo-palette' may be misspelled - perhaps 'pseudo-palette'?
#2017: FILE: drivers/video/smi/smtcfb.c:356:
+		 * 16/32 bit true-colour, use pseuo-palette for 16 base color
 		                              ^^^^^^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2022: FILE: drivers/video/smi/smtcfb.c:361:
+				u32 *pal = sfb->fb.pseudo_palette;
+				val = chan_to_field(red, &sfb->fb.var.red);

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2023: FILE: drivers/video/smi/smtcfb.c:362:
+				val |= chan_to_field(green, \

WARNING:LINE_SPACING: Missing a blank line after declarations
#2037: FILE: drivers/video/smi/smtcfb.c:376:
+				u32 *pal = sfb->fb.pseudo_palette;
+				val = chan_to_field(red, &sfb->fb.var.red);

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2038: FILE: drivers/video/smi/smtcfb.c:377:
+				val |= chan_to_field(green, \

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2062: FILE: drivers/video/smi/smtcfb.c:401:
+
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2066: FILE: drivers/video/smi/smtcfb.c:405:
+smtcfb_read(struct file *file, char __user * buf, size_t count, loff_t * ppos)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2066: FILE: drivers/video/smi/smtcfb.c:405:
+smtcfb_read(struct file *file, char __user * buf, size_t count, loff_t * ppos)

CHECK:SPACING: No space is necessary after a cast
#2103: FILE: drivers/video/smi/smtcfb.c:442:
+	src = (u32 __iomem *) (info->screen_base + p);

CHECK:SPACING: No space is necessary after a cast
#2119: FILE: drivers/video/smi/smtcfb.c:458:
+			u8 *dst8 = (u8 *) dst;

CHECK:SPACING: No space is necessary after a cast
#2120: FILE: drivers/video/smi/smtcfb.c:459:
+			u8 __iomem *src8 = (u8 __iomem *) src;

CHECK:SPACING: No space is necessary after a cast
#2130: FILE: drivers/video/smi/smtcfb.c:469:
+			src = (u32 __iomem *) src8;

CHECK:SPACING: No space is necessary after a cast
#2191: FILE: drivers/video/smi/smtcfb.c:530:
+	dst = (u32 __iomem *) (info->screen_base + p);

CHECK:SPACING: No space is necessary after a cast
#2211: FILE: drivers/video/smi/smtcfb.c:550:
+			u8 *src8 = (u8 *) src;

CHECK:SPACING: No space is necessary after a cast
#2212: FILE: drivers/video/smi/smtcfb.c:551:
+			u8 __iomem *dst8 = (u8 __iomem *) dst;

CHECK:SPACING: No space is necessary after a cast
#2222: FILE: drivers/video/smi/smtcfb.c:561:
+			dst = (u32 __iomem *) dst8;

CHECK:BRACES: braces {} should be used on all arms of this statement
#2243: FILE: drivers/video/smi/smtcfb.c:582:
+	if (smtc_2Dacceleration) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2251: FILE: drivers/video/smi/smtcfb.c:590:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#2259: FILE: drivers/video/smi/smtcfb.c:598:
+	if (smtc_2Dacceleration) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2269: FILE: drivers/video/smi/smtcfb.c:608:
+	} else

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'image->depth == 1'
#2278: FILE: drivers/video/smi/smtcfb.c:617:
+	if ((smtc_2Dacceleration) && (image->depth == 1)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#2278: FILE: drivers/video/smi/smtcfb.c:617:
+	if ((smtc_2Dacceleration) && (image->depth == 1)) {
[...]
+	} else
[...]

CHECK:SPACING: No space is necessary after a cast
#2289: FILE: drivers/video/smi/smtcfb.c:628:
+			    ((u32 *) (info->pseudo_palette))[image->bg_color];

CHECK:SPACING: No space is necessary after a cast
#2291: FILE: drivers/video/smi/smtcfb.c:630:
+			    ((u32 *) (info->pseudo_palette))[image->fg_color];

CHECK:SPACING: No space is necessary after a cast
#2295: FILE: drivers/video/smi/smtcfb.c:634:
+			    ((u32 *) (info->pseudo_palette))[image->bg_color];

CHECK:SPACING: No space is necessary after a cast
#2297: FILE: drivers/video/smi/smtcfb.c:636:
+			    ((u32 *) (info->pseudo_palette))[image->fg_color];

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2301: FILE: drivers/video/smi/smtcfb.c:640:
+		deSystemMem2VideoMemMonoBlt(

CHECK:BRACES: Unbalanced braces around else statement
#2313: FILE: drivers/video/smi/smtcfb.c:652:
+	} else

WARNING:CONST_STRUCT: struct fb_ops should normally be const
#2317: FILE: drivers/video/smi/smtcfb.c:656:
+static struct fb_ops smtcfb_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2387: FILE: drivers/video/smi/smtcfb.c:726:
+		printk("2D acceleration enabled!\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2390: FILE: drivers/video/smi/smtcfb.c:729:
+		deInit(sfb->fb.var.xres, sfb->fb.var.yres,
+				sfb->fb.var.bits_per_pixel);

WARNING:TYPO_SPELLING: 'postion' may be misspelled - perhaps 'position'?
#2408: FILE: drivers/video/smi/smtcfb.c:747:
+	/*hard code 2nd head starting from half VRAM size postion */
 	                                                  ^^^^^^^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2421: FILE: drivers/video/smi/smtcfb.c:760:
+static struct smtcfb_info *__devinit smtc_alloc_fb_info(struct pci_dev *dev,

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*sfb)...) over kmalloc(sizeof(struct smtcfb_info)...)
#2426: FILE: drivers/video/smi/smtcfb.c:765:
+	sfb = kmalloc(sizeof(struct smtcfb_info), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2468: FILE: drivers/video/smi/smtcfb.c:807:
+static void __devinit smtc_unmap_mmio(struct smtcfb_info *sfb)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2478: FILE: drivers/video/smi/smtcfb.c:817:
+static int __devinit smtc_map_smem(struct smtcfb_info *sfb,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2479: FILE: drivers/video/smi/smtcfb.c:818:
+static int __devinit smtc_map_smem(struct smtcfb_info *sfb,
+		struct pci_dev *dev, u_long smem_len)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2497: FILE: drivers/video/smi/smtcfb.c:836:
+		printk(KERN_INFO "%s: unable to map screen memory\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2498: FILE: drivers/video/smi/smtcfb.c:837:
+		printk(KERN_INFO "%s: unable to map screen memory\n",
+				sfb->fb.fix.id);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2509: FILE: drivers/video/smi/smtcfb.c:848:
+static void __devinit smtc_unmap_smem(struct smtcfb_info *sfb)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2520: FILE: drivers/video/smi/smtcfb.c:859:
+static inline void __devinit sm7xx_init_hw(void)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2526: FILE: drivers/video/smi/smtcfb.c:865:
+static void __devinit smtc_free_fb_info(struct smtcfb_info *sfb)

CHECK:CAMELCASE: Avoid CamelCase: <pFramebufferPhysical>
#2540: FILE: drivers/video/smi/smtcfb.c:879:
+	unsigned long pFramebufferPhysical;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2543: FILE: drivers/video/smi/smtcfb.c:882:
+	printk(KERN_INFO

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pdev"
#2551: FILE: drivers/video/smi/smtcfb.c:890:
+		if (pdev == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2620: FILE: drivers/video/smi/smtcfb.c:959:
+			printk(KERN_INFO

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2626: FILE: drivers/video/smi/smtcfb.c:965:
+		if (!smtc_RegBaseAddress) {
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2627: FILE: drivers/video/smi/smtcfb.c:966:
+			printk(KERN_INFO

WARNING:TYPO_SPELLING: 'enabel' may be misspelled - perhaps 'enable'?
#2640: FILE: drivers/video/smi/smtcfb.c:979:
+		/* enabel word swap */
 		   ^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2671: FILE: drivers/video/smi/smtcfb.c:1010:
+		printk(KERN_INFO

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2679: FILE: drivers/video/smi/smtcfb.c:1018:
+	if (15 == sfb->fb.var.bits_per_pixel)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:TYPO_SPELLING: 'postion' may be misspelled - perhaps 'position'?
#2690: FILE: drivers/video/smi/smtcfb.c:1029:
+	/* Primary display starting from 0 postion */
 	                                   ^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2698: FILE: drivers/video/smi/smtcfb.c:1037:
+	printk(KERN_INFO "Silicon Motion SM%X Rev%X primary display mode"

WARNING:SPLIT_STRING: quoted string split across lines
#2699: FILE: drivers/video/smi/smtcfb.c:1038:
+	printk(KERN_INFO "Silicon Motion SM%X Rev%X primary display mode"
+			"%dx%d-%d Init Complete.\n", hw.chipID, hw.chipRevID,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2709: FILE: drivers/video/smi/smtcfb.c:1048:
+		printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2714: FILE: drivers/video/smi/smtcfb.c:1053:
+	printk(KERN_INFO "Silicon Motion SM%X Rev%X secondary display mode"

WARNING:SPLIT_STRING: quoted string split across lines
#2715: FILE: drivers/video/smi/smtcfb.c:1054:
+	printk(KERN_INFO "Silicon Motion SM%X Rev%X secondary display mode"
+			"%dx%d-%d Init Complete.\n", hw.chipID, hw.chipRevID,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2723: FILE: drivers/video/smi/smtcfb.c:1062:
+	printk(KERN_INFO "Silicon Motion, Inc.  primary display init fail\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#2748: FILE: drivers/video/smi/smtcfb.c:1087:
+	int retval = 0;
+	sm712be_flag = 0;

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#2760: FILE: drivers/video/smi/smtcfb.c:1099:
+__setup("sm712be=", sm712be_setup);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2773: FILE: drivers/video/smi/smtcfb.c:1112:
+	int index;
+	sm712be_flag = 0;

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#2797: FILE: drivers/video/smi/smtcfb.c:1136:
+__setup("vga=", sm712vga_setup);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2809: FILE: drivers/video/smi/smtcfb.h:1:
+/*

WARNING:REPEATED_WORD: Possible repeated word: 'Boyod'
#2814: FILE: drivers/video/smi/smtcfb.h:6:
+ *	 	Boyod boyod.yang@siliconmotion.com.cn

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2814: FILE: drivers/video/smi/smtcfb.h:6:
+ *^I ^IBoyod boyod.yang@siliconmotion.com.cn$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'field' may be better as '(field)' to avoid precedence issues
#2842: FILE: drivers/video/smi/smtcfb.h:34:
+#define FIELD_OFSFET(type, field) \
+	((unsigned long) (PUCHAR) & (((type *)0)->field))

CHECK:SPACING: No space is necessary after a cast
#2843: FILE: drivers/video/smi/smtcfb.h:35:
+	((unsigned long) (PUCHAR) & (((type *)0)->field))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#2855: FILE: drivers/video/smi/smtcfb.h:47:
+#define smtc_mmiowb(dat, reg)	writeb(dat, smtc_RegBaseAddress + reg)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#2856: FILE: drivers/video/smi/smtcfb.h:48:
+#define smtc_mmioww(dat, reg)	writew(dat, smtc_RegBaseAddress + reg)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#2857: FILE: drivers/video/smi/smtcfb.h:49:
+#define smtc_mmiowl(dat, reg)	writel(dat, smtc_RegBaseAddress + reg)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#2859: FILE: drivers/video/smi/smtcfb.h:51:
+#define smtc_mmiorb(reg)	readb(smtc_RegBaseAddress + reg)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#2860: FILE: drivers/video/smi/smtcfb.h:52:
+#define smtc_mmiorw(reg)	readw(smtc_RegBaseAddress + reg)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#2861: FILE: drivers/video/smi/smtcfb.h:53:
+#define smtc_mmiorl(reg)	readl(smtc_RegBaseAddress + reg)

CHECK:CAMELCASE: Avoid CamelCase: <ModeInit>
#2923: FILE: drivers/video/smi/smtcfb.h:115:
+struct ModeInit {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2942: FILE: drivers/video/smi/smtcfb.h:134:
+/**********************************************************************
+			 SM712 Mode table.

WARNING:TABSTOP: Statements should start on a tabstop
#2950: FILE: drivers/video/smi/smtcfb.h:142:
+	 {			/*  Init_SR0_SR4 */

WARNING:TABSTOP: Statements should start on a tabstop
#2953: FILE: drivers/video/smi/smtcfb.h:145:
+	 {			/*  Init_SR10_SR24 */

WARNING:TABSTOP: Statements should start on a tabstop
#2958: FILE: drivers/video/smi/smtcfb.h:150:
+	 {			/*  Init_SR30_SR75 */

WARNING:TABSTOP: Statements should start on a tabstop
#2969: FILE: drivers/video/smi/smtcfb.h:161:
+	 {			/*  Init_SR80_SR93 */

WARNING:TABSTOP: Statements should start on a tabstop
#2974: FILE: drivers/video/smi/smtcfb.h:166:
+	 {			/*  Init_SRA0_SRAF */

WARNING:TABSTOP: Statements should start on a tabstop
#2978: FILE: drivers/video/smi/smtcfb.h:170:
+	 {			/*  Init_GR00_GR08 */

WARNING:TABSTOP: Statements should start on a tabstop
#2982: FILE: drivers/video/smi/smtcfb.h:174:
+	 {			/*  Init_AR00_AR14 */

WARNING:TABSTOP: Statements should start on a tabstop
#2987: FILE: drivers/video/smi/smtcfb.h:179:
+	 {			/*  Init_CR00_CR18 */

WARNING:TABSTOP: Statements should start on a tabstop
#2993: FILE: drivers/video/smi/smtcfb.h:185:
+	 {			/*  Init_CR30_CR4D */

WARNING:TABSTOP: Statements should start on a tabstop
#2999: FILE: drivers/video/smi/smtcfb.h:191:
+	 {			/*  Init_CR90_CRA7 */

WARNING:TABSTOP: Statements should start on a tabstop
#3010: FILE: drivers/video/smi/smtcfb.h:202:
+	 {			/*  Init_SR0_SR4 */

WARNING:TABSTOP: Statements should start on a tabstop
#3013: FILE: drivers/video/smi/smtcfb.h:205:
+	 {			/*  Init_SR10_SR24 */

WARNING:TABSTOP: Statements should start on a tabstop
#3018: FILE: drivers/video/smi/smtcfb.h:210:
+	 {			/*  Init_SR30_SR75 */

WARNING:TABSTOP: Statements should start on a tabstop
#3029: FILE: drivers/video/smi/smtcfb.h:221:
+	 {			/*  Init_SR80_SR93 */

WARNING:TABSTOP: Statements should start on a tabstop
#3034: FILE: drivers/video/smi/smtcfb.h:226:
+	 {			/*  Init_SRA0_SRAF */

WARNING:TABSTOP: Statements should start on a tabstop
#3038: FILE: drivers/video/smi/smtcfb.h:230:
+	 {			/*  Init_GR00_GR08 */

WARNING:TABSTOP: Statements should start on a tabstop
#3042: FILE: drivers/video/smi/smtcfb.h:234:
+	 {			/*  Init_AR00_AR14 */

WARNING:TABSTOP: Statements should start on a tabstop
#3047: FILE: drivers/video/smi/smtcfb.h:239:
+	 {			/*  Init_CR00_CR18 */

WARNING:TABSTOP: Statements should start on a tabstop
#3053: FILE: drivers/video/smi/smtcfb.h:245:
+	 {			/*  Init_CR30_CR4D */

WARNING:TABSTOP: Statements should start on a tabstop
#3059: FILE: drivers/video/smi/smtcfb.h:251:
+	 {			/*  Init_CR90_CRA7 */

WARNING:TABSTOP: Statements should start on a tabstop
#3070: FILE: drivers/video/smi/smtcfb.h:262:
+	 {			/*  Init_SR0_SR4 */

WARNING:TABSTOP: Statements should start on a tabstop
#3073: FILE: drivers/video/smi/smtcfb.h:265:
+	 {			/*  Init_SR10_SR24 */

WARNING:TABSTOP: Statements should start on a tabstop
#3078: FILE: drivers/video/smi/smtcfb.h:270:
+	 {			/*  Init_SR30_SR75 */

WARNING:TABSTOP: Statements should start on a tabstop
#3089: FILE: drivers/video/smi/smtcfb.h:281:
+	 {			/*  Init_SR80_SR93 */

WARNING:TABSTOP: Statements should start on a tabstop
#3094: FILE: drivers/video/smi/smtcfb.h:286:
+	 {			/*  Init_SRA0_SRAF */

WARNING:TABSTOP: Statements should start on a tabstop
#3098: FILE: drivers/video/smi/smtcfb.h:290:
+	 {			/*  Init_GR00_GR08 */

WARNING:TABSTOP: Statements should start on a tabstop
#3102: FILE: drivers/video/smi/smtcfb.h:294:
+	 {			/*  Init_AR00_AR14 */

WARNING:TABSTOP: Statements should start on a tabstop
#3107: FILE: drivers/video/smi/smtcfb.h:299:
+	 {			/*  Init_CR00_CR18 */

WARNING:TABSTOP: Statements should start on a tabstop
#3113: FILE: drivers/video/smi/smtcfb.h:305:
+	 {			/*  Init_CR30_CR4D */

WARNING:TABSTOP: Statements should start on a tabstop
#3119: FILE: drivers/video/smi/smtcfb.h:311:
+	 {			/*  Init_CR90_CRA7 */

WARNING:TABSTOP: Statements should start on a tabstop
#3130: FILE: drivers/video/smi/smtcfb.h:322:
+	 {			/*  Init_SR0_SR4 */

WARNING:TABSTOP: Statements should start on a tabstop
#3133: FILE: drivers/video/smi/smtcfb.h:325:
+	 {			/*  Init_SR10_SR24 */

WARNING:TABSTOP: Statements should start on a tabstop
#3138: FILE: drivers/video/smi/smtcfb.h:330:
+	 {			/*  Init_SR30_SR75 */

WARNING:TABSTOP: Statements should start on a tabstop
#3149: FILE: drivers/video/smi/smtcfb.h:341:
+	 {			/*  Init_SR80_SR93 */

WARNING:TABSTOP: Statements should start on a tabstop
#3154: FILE: drivers/video/smi/smtcfb.h:346:
+	 {			/*  Init_SRA0_SRAF */

WARNING:TABSTOP: Statements should start on a tabstop
#3158: FILE: drivers/video/smi/smtcfb.h:350:
+	 {			/*  Init_GR00_GR08 */

WARNING:TABSTOP: Statements should start on a tabstop
#3162: FILE: drivers/video/smi/smtcfb.h:354:
+	 {			/*  Init_AR00_AR14 */

WARNING:TABSTOP: Statements should start on a tabstop
#3167: FILE: drivers/video/smi/smtcfb.h:359:
+	 {			/*  Init_CR00_CR18 */

WARNING:TABSTOP: Statements should start on a tabstop
#3173: FILE: drivers/video/smi/smtcfb.h:365:
+	 {			/*  Init_CR30_CR4D */

WARNING:TABSTOP: Statements should start on a tabstop
#3179: FILE: drivers/video/smi/smtcfb.h:371:
+	 {			/*  Init_CR90_CRA7 */

WARNING:TABSTOP: Statements should start on a tabstop
#3188: FILE: drivers/video/smi/smtcfb.h:380:
+	 {			/*  Init_SR0_SR4 */

WARNING:TABSTOP: Statements should start on a tabstop
#3191: FILE: drivers/video/smi/smtcfb.h:383:
+	 {			/*  Init_SR10_SR24 */

WARNING:TABSTOP: Statements should start on a tabstop
#3196: FILE: drivers/video/smi/smtcfb.h:388:
+	 {			/*  Init_SR30_SR75 */

WARNING:TABSTOP: Statements should start on a tabstop
#3207: FILE: drivers/video/smi/smtcfb.h:399:
+	 {			/*  Init_SR80_SR93 */

WARNING:TABSTOP: Statements should start on a tabstop
#3212: FILE: drivers/video/smi/smtcfb.h:404:
+	 {			/*  Init_SRA0_SRAF */

WARNING:TABSTOP: Statements should start on a tabstop
#3216: FILE: drivers/video/smi/smtcfb.h:408:
+	 {			/*  Init_GR00_GR08 */

WARNING:TABSTOP: Statements should start on a tabstop
#3220: FILE: drivers/video/smi/smtcfb.h:412:
+	 {			/*  Init_AR00_AR14 */

WARNING:TABSTOP: Statements should start on a tabstop
#3225: FILE: drivers/video/smi/smtcfb.h:417:
+	 {			/*  Init_CR00_CR18 */

WARNING:TABSTOP: Statements should start on a tabstop
#3231: FILE: drivers/video/smi/smtcfb.h:423:
+	 {			/*  Init_CR30_CR4D */

WARNING:TABSTOP: Statements should start on a tabstop
#3237: FILE: drivers/video/smi/smtcfb.h:429:
+	 {			/*  Init_CR90_CRA7 */

WARNING:TABSTOP: Statements should start on a tabstop
#3247: FILE: drivers/video/smi/smtcfb.h:439:
+	 {			/*  Init_SR0_SR4 */

WARNING:TABSTOP: Statements should start on a tabstop
#3250: FILE: drivers/video/smi/smtcfb.h:442:
+	 {			/*  Init_SR10_SR24 */

WARNING:TABSTOP: Statements should start on a tabstop
#3255: FILE: drivers/video/smi/smtcfb.h:447:
+	 {			/*  Init_SR30_SR75 */

WARNING:TABSTOP: Statements should start on a tabstop
#3266: FILE: drivers/video/smi/smtcfb.h:458:
+	 {			/*  Init_SR80_SR93 */

WARNING:TABSTOP: Statements should start on a tabstop
#3271: FILE: drivers/video/smi/smtcfb.h:463:
+	 {			/*  Init_SRA0_SRAF */

WARNING:TABSTOP: Statements should start on a tabstop
#3275: FILE: drivers/video/smi/smtcfb.h:467:
+	 {			/*  Init_GR00_GR08 */

WARNING:TABSTOP: Statements should start on a tabstop
#3279: FILE: drivers/video/smi/smtcfb.h:471:
+	 {			/*  Init_AR00_AR14 */

WARNING:TABSTOP: Statements should start on a tabstop
#3284: FILE: drivers/video/smi/smtcfb.h:476:
+	 {			/*  Init_CR00_CR18 */

WARNING:TABSTOP: Statements should start on a tabstop
#3290: FILE: drivers/video/smi/smtcfb.h:482:
+	 {			/*  Init_CR30_CR4D */

WARNING:TABSTOP: Statements should start on a tabstop
#3296: FILE: drivers/video/smi/smtcfb.h:488:
+	 {			/*  Init_CR90_CRA7 */

WARNING:TABSTOP: Statements should start on a tabstop
#3307: FILE: drivers/video/smi/smtcfb.h:499:
+	 {			/*  Init_SR0_SR4 */

WARNING:TABSTOP: Statements should start on a tabstop
#3310: FILE: drivers/video/smi/smtcfb.h:502:
+	 {			/*  Init_SR10_SR24 */

WARNING:TABSTOP: Statements should start on a tabstop
#3315: FILE: drivers/video/smi/smtcfb.h:507:
+	 {			/*  Init_SR30_SR75 */

WARNING:TABSTOP: Statements should start on a tabstop
#3326: FILE: drivers/video/smi/smtcfb.h:518:
+	 {			/*  Init_SR80_SR93 */

WARNING:TABSTOP: Statements should start on a tabstop
#3331: FILE: drivers/video/smi/smtcfb.h:523:
+	 {			/*  Init_SRA0_SRAF */

WARNING:TABSTOP: Statements should start on a tabstop
#3335: FILE: drivers/video/smi/smtcfb.h:527:
+	 {			/*  Init_GR00_GR08 */

WARNING:TABSTOP: Statements should start on a tabstop
#3339: FILE: drivers/video/smi/smtcfb.h:531:
+	 {			/*  Init_AR00_AR14 */

WARNING:TABSTOP: Statements should start on a tabstop
#3344: FILE: drivers/video/smi/smtcfb.h:536:
+	 {			/*  Init_CR00_CR18 */

WARNING:TABSTOP: Statements should start on a tabstop
#3350: FILE: drivers/video/smi/smtcfb.h:542:
+	 {			/*  Init_CR30_CR4D */

WARNING:TABSTOP: Statements should start on a tabstop
#3356: FILE: drivers/video/smi/smtcfb.h:548:
+	 {			/*  Init_CR90_CRA7 */

WARNING:TABSTOP: Statements should start on a tabstop
#3366: FILE: drivers/video/smi/smtcfb.h:558:
+	 {			/*  Init_SR0_SR4 */

WARNING:TABSTOP: Statements should start on a tabstop
#3369: FILE: drivers/video/smi/smtcfb.h:561:
+	 {			/*  Init_SR10_SR24 */

WARNING:TABSTOP: Statements should start on a tabstop
#3374: FILE: drivers/video/smi/smtcfb.h:566:
+	 {			/*  Init_SR30_SR75 */

WARNING:TABSTOP: Statements should start on a tabstop
#3385: FILE: drivers/video/smi/smtcfb.h:577:
+	 {			/*  Init_SR80_SR93 */

WARNING:TABSTOP: Statements should start on a tabstop
#3390: FILE: drivers/video/smi/smtcfb.h:582:
+	 {			/*  Init_SRA0_SRAF */

WARNING:TABSTOP: Statements should start on a tabstop
#3394: FILE: drivers/video/smi/smtcfb.h:586:
+	 {			/*  Init_GR00_GR08 */

WARNING:TABSTOP: Statements should start on a tabstop
#3398: FILE: drivers/video/smi/smtcfb.h:590:
+	 {			/*  Init_AR00_AR14 */

WARNING:TABSTOP: Statements should start on a tabstop
#3403: FILE: drivers/video/smi/smtcfb.h:595:
+	 {			/*  Init_CR00_CR18 */

WARNING:TABSTOP: Statements should start on a tabstop
#3409: FILE: drivers/video/smi/smtcfb.h:601:
+	 {			/*  Init_CR30_CR4D */

WARNING:TABSTOP: Statements should start on a tabstop
#3415: FILE: drivers/video/smi/smtcfb.h:607:
+	 {			/*  Init_CR90_CRA7 */

WARNING:TABSTOP: Statements should start on a tabstop
#3425: FILE: drivers/video/smi/smtcfb.h:617:
+	 {			/*  Init_SR0_SR4 */

WARNING:TABSTOP: Statements should start on a tabstop
#3428: FILE: drivers/video/smi/smtcfb.h:620:
+	 {			/*  Init_SR10_SR24 */

WARNING:TABSTOP: Statements should start on a tabstop
#3433: FILE: drivers/video/smi/smtcfb.h:625:
+	 {			/*  Init_SR30_SR75 */

WARNING:TABSTOP: Statements should start on a tabstop
#3444: FILE: drivers/video/smi/smtcfb.h:636:
+	 {			/*  Init_SR80_SR93 */

WARNING:TABSTOP: Statements should start on a tabstop
#3449: FILE: drivers/video/smi/smtcfb.h:641:
+	 {			/*  Init_SRA0_SRAF */

WARNING:TABSTOP: Statements should start on a tabstop
#3453: FILE: drivers/video/smi/smtcfb.h:645:
+	 {			/*  Init_GR00_GR08 */

WARNING:TABSTOP: Statements should start on a tabstop
#3457: FILE: drivers/video/smi/smtcfb.h:649:
+	 {			/*  Init_AR00_AR14 */

WARNING:TABSTOP: Statements should start on a tabstop
#3462: FILE: drivers/video/smi/smtcfb.h:654:
+	 {			/*  Init_CR00_CR18 */

WARNING:TABSTOP: Statements should start on a tabstop
#3468: FILE: drivers/video/smi/smtcfb.h:660:
+	 {			/*  Init_CR30_CR4D */

WARNING:TABSTOP: Statements should start on a tabstop
#3474: FILE: drivers/video/smi/smtcfb.h:666:
+	 {			/*  Init_CR90_CRA7 */

WARNING:TABSTOP: Statements should start on a tabstop
#3484: FILE: drivers/video/smi/smtcfb.h:676:
+	 {			/*  Init_SR0_SR4 */

WARNING:TABSTOP: Statements should start on a tabstop
#3487: FILE: drivers/video/smi/smtcfb.h:679:
+	 {			/*  Init_SR10_SR24 */

WARNING:TABSTOP: Statements should start on a tabstop
#3492: FILE: drivers/video/smi/smtcfb.h:684:
+	 {			/*  Init_SR30_SR75 */

WARNING:TABSTOP: Statements should start on a tabstop
#3503: FILE: drivers/video/smi/smtcfb.h:695:
+	 {			/*  Init_SR80_SR93 */

WARNING:TABSTOP: Statements should start on a tabstop
#3508: FILE: drivers/video/smi/smtcfb.h:700:
+	 {			/*  Init_SRA0_SRAF */

WARNING:TABSTOP: Statements should start on a tabstop
#3512: FILE: drivers/video/smi/smtcfb.h:704:
+	 {			/*  Init_GR00_GR08 */

WARNING:TABSTOP: Statements should start on a tabstop
#3516: FILE: drivers/video/smi/smtcfb.h:708:
+	 {			/*  Init_AR00_AR14 */

WARNING:TABSTOP: Statements should start on a tabstop
#3521: FILE: drivers/video/smi/smtcfb.h:713:
+	 {			/*  Init_CR00_CR18 */

WARNING:TABSTOP: Statements should start on a tabstop
#3527: FILE: drivers/video/smi/smtcfb.h:719:
+	 {			/*  Init_CR30_CR4D */

WARNING:TABSTOP: Statements should start on a tabstop
#3533: FILE: drivers/video/smi/smtcfb.h:725:
+	 {			/*  Init_CR90_CRA7 */

WARNING:TABSTOP: Statements should start on a tabstop
#3544: FILE: drivers/video/smi/smtcfb.h:736:
+	 {			/*  Init_SR0_SR4 */

WARNING:TABSTOP: Statements should start on a tabstop
#3547: FILE: drivers/video/smi/smtcfb.h:739:
+	 {			/*  Init_SR10_SR24 */

WARNING:TABSTOP: Statements should start on a tabstop
#3552: FILE: drivers/video/smi/smtcfb.h:744:
+	 {			/*  Init_SR30_SR75 */

WARNING:TABSTOP: Statements should start on a tabstop
#3563: FILE: drivers/video/smi/smtcfb.h:755:
+	 {			/*  Init_SR80_SR93 */

WARNING:TABSTOP: Statements should start on a tabstop
#3568: FILE: drivers/video/smi/smtcfb.h:760:
+	 {			/*  Init_SRA0_SRAF */

WARNING:TABSTOP: Statements should start on a tabstop
#3572: FILE: drivers/video/smi/smtcfb.h:764:
+	 {			/*  Init_GR00_GR08 */

WARNING:TABSTOP: Statements should start on a tabstop
#3576: FILE: drivers/video/smi/smtcfb.h:768:
+	 {			/*  Init_AR00_AR14 */

WARNING:TABSTOP: Statements should start on a tabstop
#3581: FILE: drivers/video/smi/smtcfb.h:773:
+	 {			/*  Init_CR00_CR18 */

WARNING:TABSTOP: Statements should start on a tabstop
#3587: FILE: drivers/video/smi/smtcfb.h:779:
+	 {			/*  Init_CR30_CR4D */

WARNING:TABSTOP: Statements should start on a tabstop
#3593: FILE: drivers/video/smi/smtcfb.h:785:
+	 {			/*  Init_CR90_CRA7 */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000122483.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 108 errors, 209 warnings, 204 checks, 3487 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000122483.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
