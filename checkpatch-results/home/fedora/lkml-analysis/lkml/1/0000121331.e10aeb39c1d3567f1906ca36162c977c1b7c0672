WARNING:TYPO_SPELLING: 'SIE' may be misspelled - perhaps 'SIZE'?
#29: 
where SIE complains about missing lowcore with incorrect
      ^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'viwhy == 0x37'
#61: FILE: arch/s390/kvm/intercept.c:160:
+	if ((viwhy == 0x37) && (vcpu->arch.sie_block->prefix
+		<= vcpu->kvm->arch.guest_memsize - 2*PAGE_SIZE)){

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: braces {} should be used on all arms of this statement
#61: FILE: arch/s390/kvm/intercept.c:160:
+	if ((viwhy == 0x37) && (vcpu->arch.sie_block->prefix
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#62: FILE: arch/s390/kvm/intercept.c:161:
+		<= vcpu->kvm->arch.guest_memsize - 2*PAGE_SIZE)){
 		                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#66: FILE: arch/s390/kvm/intercept.c:165:
+			 2*PAGE_SIZE);
 			  ^

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#69: FILE: arch/s390/kvm/intercept.c:168:
+			rc = -ENOTSUPP;

ENOTSUPP is not a standard error code and should be avoided in new patches.
EOPNOTSUPP should be used instead.

See: https://lore.kernel.org/netdev/20200510182252.GA411829@lunn.ch/

CHECK:BRACES: Unbalanced braces around else statement
#70: FILE: arch/s390/kvm/intercept.c:169:
+	} else

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#71: FILE: arch/s390/kvm/intercept.c:170:
+		rc = -ENOTSUPP;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000121331.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 5 checks, 35 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000121331.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
