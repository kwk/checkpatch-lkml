CHECK:CAMELCASE: Avoid CamelCase: <AifEnExpEvent>
#151: FILE: drivers/scsi/aacraid/commsup.c:1342:
+			aif->data[0] = AifEnExpEvent;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <AifExeFirmwarePanic>
#152: FILE: drivers/scsi/aacraid/commsup.c:1343:
+			aif->data[1] = AifExeFirmwarePanic;

CHECK:CAMELCASE: Avoid CamelCase: <AifHighPriority>
#153: FILE: drivers/scsi/aacraid/commsup.c:1344:
+			aif->data[2] = AifHighPriority;

CHECK:CAMELCASE: Avoid CamelCase: <BlinkLED>
#154: FILE: drivers/scsi/aacraid/commsup.c:1345:
+			aif->data[3] = BlinkLED;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#394: FILE: drivers/scsi/iscsi_tcp.c:1347:
+	BUG_ON(tcp_mtask->xmstate != XMSTATE_VALUE_IDLE);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: braces {} should be used on all arms of this statement
#453: FILE: drivers/scsi/iscsi_tcp.c:1431:
+	if (test_bit(XMSTATE_BIT_W_PAD, &tcp_ctask->xmstate)) {
[...]
-	} else if (!(tcp_ctask->xmstate & XMSTATE_W_RESEND_PAD))
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'pading' may be misspelled - perhaps 'padding'?
#633: FILE: drivers/scsi/iscsi_tcp.c:1707:
+ *	XMSTATE_BIT_W_PAD        - Prepare and send pading
   	                                            ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'pading' may be misspelled - perhaps 'padding'?
#634: FILE: drivers/scsi/iscsi_tcp.c:1708:
+ *	XMSTATE_BIT_W_RESEND_PAD - retry send pading
   	                                      ^^^^^^

WARNING:TYPO_SPELLING: 'managment' may be misspelled - perhaps 'management'?
#662: FILE: drivers/scsi/iscsi_tcp.c:1727:
+ *	XMSTATE_BIT_IMM_DATA     - xmit managment data (??)
   	                                ^^^^^^^^^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#793: FILE: drivers/scsi/pas16.c:455:
 	if (instance->irq != SCSI_IRQ_NONE) 
+	    if (request_irq(instance->irq, pas16_intr, IRQF_DISABLED,

WARNING:TABSTOP: Statements should start on a tabstop
#795: FILE: drivers/scsi/pas16.c:456:
+	    if (request_irq(instance->irq, pas16_intr, IRQF_DISABLED,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'qla1280_64bit_start_scsi', this function's name, in a string
#925: FILE: drivers/scsi/qla1280.c:2911:
+		dprintk(5, "qla1280_64bit_start_scsi: Scatter/gather "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#926: FILE: drivers/scsi/qla1280.c:2912:
+		dprintk(5, "qla1280_64bit_start_scsi: Scatter/gather "
+			"command packet data - b %i, t %i, l %i \n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#926: FILE: drivers/scsi/qla1280.c:2912:
+			"command packet data - b %i, t %i, l %i \n",

WARNING:SPLIT_STRING: quoted string split across lines
#936: FILE: drivers/scsi/qla1280.c:2922:
+		dprintk(3, "S/G Building Continuation...seg_cnt=0x%x "
+			"remains\n", seg_cnt);

CHECK:BRACES: braces {} should be used on all arms of this statement
#943: FILE: drivers/scsi/qla1280.c:2929:
+			if (ha->req_ring_index == REQUEST_ENTRY_CNT) {
[...]
+			} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#947: FILE: drivers/scsi/qla1280.c:2933:
+			} else

CHECK:SPACING: No space is necessary after a cast
#956: FILE: drivers/scsi/qla1280.c:2942:
+			((struct cont_a64_entry *) pkt)->entry_type =

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#958: FILE: drivers/scsi/qla1280.c:2944:
+			((struct cont_a64_entry *) pkt)->entry_count = 1;

CHECK:SPACING: No space is necessary after a cast
#959: FILE: drivers/scsi/qla1280.c:2945:
+			((struct cont_a64_entry *) pkt)->sys_define =

CHECK:SPACING: No space is necessary after a cast
#963: FILE: drivers/scsi/qla1280.c:2949:
+				(u32 *)&((struct cont_a64_entry *) pkt)->dseg_0_address;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'qla1280_64bit_start_scsi', this function's name, in a string
#1084: FILE: drivers/scsi/qla1280.c:2974:
+			dprintk(5, "qla1280_64bit_start_scsi: "

WARNING:SPLIT_STRING: quoted string split across lines
#1085: FILE: drivers/scsi/qla1280.c:2975:
+			dprintk(5, "qla1280_64bit_start_scsi: "
+				"continuation packet data - b %i, t "

WARNING:SPLIT_STRING: quoted string split across lines
#1086: FILE: drivers/scsi/qla1280.c:2976:
+				"continuation packet data - b %i, t "
+				"%i, l %i \n", SCSI_BUS_32(cmd),

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1086: FILE: drivers/scsi/qla1280.c:2976:
+				"%i, l %i \n", SCSI_BUS_32(cmd),

WARNING:SPLIT_STRING: quoted string split across lines
#1178: FILE: drivers/scsi/qla1280.c:3176:
+		dprintk(3, "S/G Building Continuation"
+			"...seg_cnt=0x%x remains\n", seg_cnt);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1184: FILE: drivers/scsi/qla1280.c:3182:
+			if (ha->req_ring_index == REQUEST_ENTRY_CNT) {
[...]
+			} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1188: FILE: drivers/scsi/qla1280.c:3186:
+			} else

CHECK:SPACING: No space is necessary after a cast
#1197: FILE: drivers/scsi/qla1280.c:3195:
+			((struct cont_entry *) pkt)->

CHECK:SPACING: No space is necessary after a cast
#1199: FILE: drivers/scsi/qla1280.c:3197:
+			((struct cont_entry *) pkt)->entry_count = 1;

CHECK:SPACING: No space is necessary after a cast
#1204: FILE: drivers/scsi/qla1280.c:3199:
+			((struct cont_entry *) pkt)->sys_define =

CHECK:SPACING: No space is necessary after a cast
#1205: FILE: drivers/scsi/qla1280.c:3200:
+				(uint8_t) ha->req_ring_index;

CHECK:SPACING: No space is necessary after a cast
#1209: FILE: drivers/scsi/qla1280.c:3204:
+				&((struct cont_entry *) pkt)->dseg_0_address;

WARNING:SPLIT_STRING: quoted string split across lines
#1282: FILE: drivers/scsi/qla1280.c:3216:
+					"S/G Segment Cont. phys_addr=0x%x, "
+					"len=0x%x\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'qla1280_32bit_start_scsi', this function's name, in a string
#1296: FILE: drivers/scsi/qla1280.c:3221:
+			dprintk(5, "qla1280_32bit_start_scsi: "

WARNING:SPLIT_STRING: quoted string split across lines
#1297: FILE: drivers/scsi/qla1280.c:3222:
+			dprintk(5, "qla1280_32bit_start_scsi: "
+				"continuation packet data - "

WARNING:SPLIT_STRING: quoted string split across lines
#1298: FILE: drivers/scsi/qla1280.c:3223:
+				"continuation packet data - "
+				"scsi(%i:%i:%i)\n", SCSI_BUS_32(cmd),

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1310: FILE: drivers/scsi/qla1280.c:4034:
+	printk("  seg_cnt =%d\n", scsi_sg_count(cmd));

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1368: FILE: drivers/scsi/t128.c:261:
 	if (instance->irq != SCSI_IRQ_NONE) 
+	    if (request_irq(instance->irq, t128_intr, IRQF_DISABLED, "t128",

WARNING:TABSTOP: Statements should start on a tabstop
#1370: FILE: drivers/scsi/t128.c:262:
+	    if (request_irq(instance->irq, t128_intr, IRQF_DISABLED, "t128",

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000354282.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 22 warnings, 18 checks, 1173 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000354282.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
