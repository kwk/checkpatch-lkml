WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#74: FILE: arch/i386/kernel/alternative.c:339:
+		BUG_ON(used > p->len);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#82: FILE: arch/i386/kernel/alternative.c:346:
+	 * instructions */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#129: FILE: arch/i386/kernel/paravirt.c:75:
+	unsigned ret;

ERROR:SPACING: space required before the open parenthesis '('
#131: FILE: arch/i386/kernel/paravirt.c:77:
+	switch(type) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#132: FILE: arch/i386/kernel/paravirt.c:78:
+#define SITE(x)	case PARAVIRT_PATCH(x):	start = start_##x; end = end_##x; goto patch_site

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:INDENTED_LABEL: labels should not be indented
#146: FILE: arch/i386/kernel/paravirt.c:92:
+	patch_site:

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#159: FILE: arch/i386/kernel/paravirt.c:105:
+		/* These functions end up returning exactly what
+		   they're passed, in the same registers. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#159: FILE: arch/i386/kernel/paravirt.c:105:
+		   they're passed, in the same registers. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#171: FILE: arch/i386/kernel/paravirt.c:117:
+unsigned paravirt_patch_nop(void)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#176: FILE: arch/i386/kernel/paravirt.c:122:
+unsigned paravirt_patch_ignore(unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#176: FILE: arch/i386/kernel/paravirt.c:122:
+unsigned paravirt_patch_ignore(unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#181: FILE: arch/i386/kernel/paravirt.c:127:
+unsigned paravirt_patch_call(void *target, u16 tgt_clobbers,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#183: FILE: arch/i386/kernel/paravirt.c:129:
+			     unsigned len)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#186: FILE: arch/i386/kernel/paravirt.c:132:
+	unsigned long delta = (unsigned long)target - (unsigned long)(call+5);
 	                                                                  ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#199: FILE: arch/i386/kernel/paravirt.c:145:
+unsigned paravirt_patch_jmp(void *target, void *site, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#199: FILE: arch/i386/kernel/paravirt.c:145:
+unsigned paravirt_patch_jmp(void *target, void *site, unsigned len)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#202: FILE: arch/i386/kernel/paravirt.c:148:
+	unsigned long delta = (unsigned long)target - (unsigned long)(jmp+5);
 	                                                                 ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#213: FILE: arch/i386/kernel/paravirt.c:159:
+unsigned paravirt_patch_default(u8 type, u16 clobbers, void *site, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#213: FILE: arch/i386/kernel/paravirt.c:159:
+unsigned paravirt_patch_default(u8 type, u16 clobbers, void *site, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#216: FILE: arch/i386/kernel/paravirt.c:162:
+	unsigned ret;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!opfunc"
#218: FILE: arch/i386/kernel/paravirt.c:164:
+	if (opfunc == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#230: FILE: arch/i386/kernel/paravirt.c:176:
+		/* Otherwise call the function; assume target could
+		   clobber any caller-save reg */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#230: FILE: arch/i386/kernel/paravirt.c:176:
+		   clobber any caller-save reg */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#241: FILE: arch/i386/kernel/paravirt.c:183:
+unsigned paravirt_patch_insns(void *site, unsigned len,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#241: FILE: arch/i386/kernel/paravirt.c:183:
+unsigned paravirt_patch_insns(void *site, unsigned len,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#244: FILE: arch/i386/kernel/paravirt.c:186:
+	unsigned insn_len = end - start;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!start"
#249: FILE: arch/i386/kernel/paravirt.c:188:
+	if (insn_len > len || start == NULL)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#275: FILE: include/asm-i386/paravirt.h:251:
+unsigned paravirt_patch_nop(void);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#276: FILE: include/asm-i386/paravirt.h:252:
+unsigned paravirt_patch_ignore(unsigned len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#276: FILE: include/asm-i386/paravirt.h:252:
+unsigned paravirt_patch_ignore(unsigned len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#277: FILE: include/asm-i386/paravirt.h:253:
+unsigned paravirt_patch_call(void *target, u16 tgt_clobbers,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#279: FILE: include/asm-i386/paravirt.h:255:
+			     unsigned len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#280: FILE: include/asm-i386/paravirt.h:256:
+unsigned paravirt_patch_jmp(void *target, void *site, unsigned len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#280: FILE: include/asm-i386/paravirt.h:256:
+unsigned paravirt_patch_jmp(void *target, void *site, unsigned len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#281: FILE: include/asm-i386/paravirt.h:257:
+unsigned paravirt_patch_default(u8 type, u16 clobbers, void *site, unsigned len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#281: FILE: include/asm-i386/paravirt.h:257:
+unsigned paravirt_patch_default(u8 type, u16 clobbers, void *site, unsigned len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#283: FILE: include/asm-i386/paravirt.h:259:
+unsigned paravirt_patch_insns(void *site, unsigned len,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#283: FILE: include/asm-i386/paravirt.h:259:
+unsigned paravirt_patch_insns(void *site, unsigned len,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#286: FILE: include/asm-i386/paravirt.h:262:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000438468.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 32 warnings, 5 checks, 208 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000438468.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
