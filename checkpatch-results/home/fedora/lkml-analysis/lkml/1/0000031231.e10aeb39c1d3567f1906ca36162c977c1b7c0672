WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
> > We have a proper fix for BUILD_BUG_ON which I sent Linus a pull req for,

CHECK:SPACING: spaces preferred around that '*' (ctx:VxO)
#116: FILE: include/linux/kernel.h:709:
+#define BUILD_BUG_ON(condition) ((void)sizeof(char[1 - 2*!!(condition)]))
                                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'condition' - possible side-effects?
#119: FILE: include/linux/kernel.h:712:
+#define BUILD_BUG_ON(condition)					\
+	do {							\
+		((void)sizeof(char[1 - 2*!!(condition)]));	\
+		if (condition) __build_bug_on_failed = 1;	\
+	} while(0)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxO)
#121: FILE: include/linux/kernel.h:714:
+		((void)sizeof(char[1 - 2*!!(condition)]));	\
 		                        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#122: FILE: include/linux/kernel.h:715:
+		if (condition) __build_bug_on_failed = 1;	\

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required before the open parenthesis '('
#123: FILE: include/linux/kernel.h:716:
+	} while(0)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000031231.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 1 warnings, 3 checks, 45 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000031231.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
