WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#53: 
http://git.kernel.org/?p=linux/kernel/git/nab/lio-core-2.6.git;a=commitdiff;h=9c6293c1bfe82d04a215fab22a3a850ea879a137

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#182: FILE: drivers/lio-core/target_core_configfs.c:577:
+static ssize_t target_core_store_dev_fd (void *p, const char *page, size_t count)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#184: FILE: drivers/lio-core/target_core_configfs.c:579:
+^Ise_subsystem_dev_t *se_dev = (se_subsystem_dev_t *)p;^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#191: FILE: drivers/lio-core/target_core_configfs.c:586:
+		printk(KERN_ERR "se_dev->se_dev_ptr already set, ignoring fd request\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#195: FILE: drivers/lio-core/target_core_configfs.c:590:
+^It = (se_subsystem_api_t *)plugin_get_obj(PLUGIN_TYPE_TRANSPORT, hba->type, &ret);^I^I$

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#195: FILE: drivers/lio-core/target_core_configfs.c:590:
+	t = (se_subsystem_api_t *)plugin_get_obj(PLUGIN_TYPE_TRANSPORT, hba->type, &ret);		

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret != 0'
#196: FILE: drivers/lio-core/target_core_configfs.c:591:
+	if (!t || (ret != 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#200: FILE: drivers/lio-core/target_core_configfs.c:595:
+		printk(KERN_ERR "se_subsystem_api_t->create_virtdevice_from_fd()"

WARNING:SPLIT_STRING: quoted string split across lines
#201: FILE: drivers/lio-core/target_core_configfs.c:596:
+		printk(KERN_ERR "se_subsystem_api_t->create_virtdevice_from_fd()"
+			" NULL for: %s\n", hba->transport->name);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#214: FILE: drivers/lio-core/target_core_configfs.c:609:
+	printk("Target_Core_ConfigFS: Registered %s se_dev->se_dev_ptr: %p"

WARNING:SPLIT_STRING: quoted string split across lines
#215: FILE: drivers/lio-core/target_core_configfs.c:610:
+	printk("Target_Core_ConfigFS: Registered %s se_dev->se_dev_ptr: %p"
+		" from fd\n", hba->transport->name, se_dev->se_dev_ptr);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#216: FILE: drivers/lio-core/target_core_configfs.c:611:
+	return(count);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#224: FILE: drivers/lio-core/target_core_configfs.c:619:
+		    .ca_mode = S_IWUSR },

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_subsystem_dev_t *' should also have an identifier name
#269: FILE: drivers/lio-core/target_core_transport.h:432:
+	se_device_t *(*create_virtdevice_from_fd)(se_subsystem_dev_t *, const char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#269: FILE: drivers/lio-core/target_core_transport.h:432:
+	se_device_t *(*create_virtdevice_from_fd)(se_subsystem_dev_t *, const char *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000214248.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 11 warnings, 1 checks, 88 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000214248.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
