ERROR:SPACING: space required after that ',' (ctx:VxV)
#56: FILE: arch/x86/kernel/ptrace.c:639:
+#define R32(l,q)							\
              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#56: FILE: arch/x86/kernel/ptrace.c:639:
+#define R32(l,q)							\
+	case offsetof(struct user32, regs.l):				\
+		regs->q = value; break

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'q' may be better as '(q)' to avoid precedence issues
#56: FILE: arch/x86/kernel/ptrace.c:639:
+#define R32(l,q)							\
+	case offsetof(struct user32, regs.l):				\
+		regs->q = value; break

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#60: FILE: arch/x86/kernel/ptrace.c:643:
+#define SEG32(rs)							\
+	case offsetof(struct user32, regs.rs):				\
+		return set_segment_reg(child,				\
+				       offsetof(struct user_regs_struct, rs), \
+				       value);				\
+		break

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'rs' - possible side-effects?
#60: FILE: arch/x86/kernel/ptrace.c:643:
+#define SEG32(rs)							\
+	case offsetof(struct user32, regs.rs):				\
+		return set_segment_reg(child,				\
+				       offsetof(struct user_regs_struct, rs), \
+				       value);				\
+		break

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#60: FILE: arch/x86/kernel/ptrace.c:643:
+#define SEG32(rs)							\
+	case offsetof(struct user32, regs.rs):				\
+		return set_segment_reg(child,				\
+				       offsetof(struct user_regs_struct, rs), \
+				       value);				\
+		break

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#67: FILE: arch/x86/kernel/ptrace.c:650:
+static int putreg32(struct task_struct *child, unsigned regno, u32 value)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#72: FILE: arch/x86/kernel/ptrace.c:655:
+	switch (regno) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#115: FILE: arch/x86/kernel/ptrace.c:698:
+#define R32(l,q)							\
              ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#115: FILE: arch/x86/kernel/ptrace.c:698:
+#define R32(l,q)							\
+	case offsetof(struct user32, regs.l):				\
+		*val = regs->q; break

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'q' may be better as '(q)' to avoid precedence issues
#115: FILE: arch/x86/kernel/ptrace.c:698:
+#define R32(l,q)							\
+	case offsetof(struct user32, regs.l):				\
+		*val = regs->q; break

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#119: FILE: arch/x86/kernel/ptrace.c:702:
+#define SEG32(rs)							\
+	case offsetof(struct user32, regs.rs):				\
+		*val = get_segment_reg(child,				\
+				       offsetof(struct user_regs_struct, rs)); \
+		break

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'rs' - possible side-effects?
#119: FILE: arch/x86/kernel/ptrace.c:702:
+#define SEG32(rs)							\
+	case offsetof(struct user32, regs.rs):				\
+		*val = get_segment_reg(child,				\
+				       offsetof(struct user_regs_struct, rs)); \
+		break

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#125: FILE: arch/x86/kernel/ptrace.c:708:
+static int getreg32(struct task_struct *child, unsigned regno, u32 *val)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#130: FILE: arch/x86/kernel/ptrace.c:713:
+	switch (regno) {
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000352771.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 3 warnings, 6 checks, 132 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000352771.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
