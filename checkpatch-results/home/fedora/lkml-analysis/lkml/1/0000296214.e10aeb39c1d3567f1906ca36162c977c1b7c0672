WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#69: FILE: drivers/w1/w1.c:57:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#70: FILE: drivers/w1/w1.c:58:
+static int w1_attach_slave_device(struct w1_master *dev, struct w1_reg_num=
                                                                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#72: FILE: drivers/w1/w1.c:60:
+void w1_slave_detach(struct w1_slave *sl);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#84: FILE: drivers/w1/w1.c:354:
 }
+static ssize_t w1_master_attribute_show_slaves(struct device *dev,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#85: FILE: drivers/w1/w1.c:355:
+static ssize_t w1_master_attribute_show_slaves(struct device *dev,
+	struct device_attribute *attr, char *buf)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#94: FILE: drivers/w1/w1.c:381:
 }
+static ssize_t w1_master_attribute_show_add(struct device *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#95: FILE: drivers/w1/w1.c:382:
+static ssize_t w1_master_attribute_show_add(struct device *dev,
+	struct device_attribute *attr, char *buf)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#97: FILE: drivers/w1/w1.c:384:
+	int c =3D PAGE_SIZE;
 	      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#98: FILE: drivers/w1/w1.c:385:
+	int c =3D PAGE_SIZE;
+	c -=3D snprintf(buf+PAGE_SIZE - c, c,

ERROR:SPACING: spaces required around that '-=' (ctx:WxV)
#98: FILE: drivers/w1/w1.c:385:
+	c -=3D snprintf(buf+PAGE_SIZE - c, c,
 	  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#98: FILE: drivers/w1/w1.c:385:
+	c -=3D snprintf(buf+PAGE_SIZE - c, c,
 	                   ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#103: FILE: drivers/w1/w1.c:390:
+static int w1_atoreg_num(struct device * dev, const char *buf, size_t coun=

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#103: FILE: drivers/w1/w1.c:390:
+static int w1_atoreg_num(struct device * dev, const char *buf, size_t coun=
                                                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#116: FILE: drivers/w1/w1.c:402:
+	const char *error_msg=3D"bad slave string format, expecting "
 	                     ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#116: FILE: drivers/w1/w1.c:402:
+	const char *error_msg=3D"bad slave string format, expecting "

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:SPLIT_STRING: quoted string split across lines
#117: FILE: drivers/w1/w1.c:403:
+	const char *error_msg=3D"bad slave string format, expecting "
+		"ff-dddddddddddd\n";

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#119: FILE: drivers/w1/w1.c:405:
+	if(buf[2]!=3D'-') {
 	         ^

ERROR:SPACING: space required before the open parenthesis '('
#119: FILE: drivers/w1/w1.c:405:
+	if(buf[2]!=3D'-') {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#123: FILE: drivers/w1/w1.c:409:
+	i=3Dsscanf(buf, "%02x-%012llx", &family, &id);
 	 ^

CHECK:CAMELCASE: Avoid CamelCase: <Dsscanf>
#123: FILE: drivers/w1/w1.c:409:
+	i=3Dsscanf(buf, "%02x-%012llx", &family, &id);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#124: FILE: drivers/w1/w1.c:410:
+	if(i!=3D2) {
 	    ^

ERROR:SPACING: space required before the open parenthesis '('
#124: FILE: drivers/w1/w1.c:410:
+	if(i!=3D2) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#128: FILE: drivers/w1/w1.c:414:
+	rn->family=3Dfamily;
 	          ^

CHECK:CAMELCASE: Avoid CamelCase: <Dfamily>
#128: FILE: drivers/w1/w1.c:414:
+	rn->family=3Dfamily;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#129: FILE: drivers/w1/w1.c:415:
+	rn->id=3Did;
 	      ^

CHECK:CAMELCASE: Avoid CamelCase: <Did>
#129: FILE: drivers/w1/w1.c:415:
+	rn->id=3Did;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#131: FILE: drivers/w1/w1.c:417:
+	rn64_le=3Dcpu_to_le64(*(u64*)rn);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#131: FILE: drivers/w1/w1.c:417:
+	rn64_le=3Dcpu_to_le64(*(u64*)rn);
 	       ^

CHECK:CAMELCASE: Avoid CamelCase: <Dcpu_to_le64>
#131: FILE: drivers/w1/w1.c:417:
+	rn64_le=3Dcpu_to_le64(*(u64*)rn);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#132: FILE: drivers/w1/w1.c:418:
+	rn->crc=3Dw1_calc_crc8((u8 *)&rn64_le, 7);
 	       ^

CHECK:CAMELCASE: Avoid CamelCase: <Dw1_calc_crc8>
#132: FILE: drivers/w1/w1.c:418:
+	rn->crc=3Dw1_calc_crc8((u8 *)&rn64_le, 7);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#134: FILE: drivers/w1/w1.c:420:
+	#if 0

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#136: FILE: drivers/w1/w1.c:422:
+	dev_info(dev, "With CRC device is %02x.%012llx.%02x.\n",
+		  rn->family, (unsigned long long)rn->id, rn->crc);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#146: FILE: drivers/w1/w1.c:432:
+static struct w1_slave *w1_slave_search_device(struct w1_master *dev,
+	struct w1_reg_num *rn)

WARNING:LINE_SPACING: Missing a blank line after declarations
#149: FILE: drivers/w1/w1.c:435:
+	struct w1_slave *sl;
+	list_for_each_entry(sl, &dev->slist, w1_slave_entry) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#150: FILE: drivers/w1/w1.c:436:
+		if (sl->reg_num.family =3D=3D rn->family &&
 		                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#150: FILE: drivers/w1/w1.c:436:
+		if (sl->reg_num.family =3D=3D rn->family &&
 		                          ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#150: FILE: drivers/w1/w1.c:436:
+		if (sl->reg_num.family =3D=3D rn->family &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#151: FILE: drivers/w1/w1.c:437:
+		if (sl->reg_num.family =3D=3D rn->family &&
+				sl->reg_num.id =3D=3D rn->id &&

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#151: FILE: drivers/w1/w1.c:437:
+				sl->reg_num.id =3D=3D rn->id &&
 				               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#151: FILE: drivers/w1/w1.c:437:
+				sl->reg_num.id =3D=3D rn->id &&
 				                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#152: FILE: drivers/w1/w1.c:438:
+				sl->reg_num.crc =3D=3D rn->crc) {
 				                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#152: FILE: drivers/w1/w1.c:438:
+				sl->reg_num.crc =3D=3D rn->crc) {
 				                   ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#159: FILE: drivers/w1/w1.c:445:
+static ssize_t w1_master_attribute_store_add(struct device * dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#160: FILE: drivers/w1/w1.c:446:
+static ssize_t w1_master_attribute_store_add(struct device * dev,
+						struct device_attribute *attr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#161: FILE: drivers/w1/w1.c:447:
+						const char * buf, size_t count)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#163: FILE: drivers/w1/w1.c:449:
+	struct w1_master *md =3D dev_to_w1_master(dev);
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#166: FILE: drivers/w1/w1.c:452:
+	ssize_t result=3Dcount;
 	              ^

CHECK:CAMELCASE: Avoid CamelCase: <Dcount>
#166: FILE: drivers/w1/w1.c:452:
+	ssize_t result=3Dcount;

ERROR:SPACING: space required before the open parenthesis '('
#168: FILE: drivers/w1/w1.c:454:
+	if(w1_atoreg_num(dev, buf, count, &rn))

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#172: FILE: drivers/w1/w1.c:458:
+	sl=3Dw1_slave_search_device(md, &rn);
 	  ^

CHECK:CAMELCASE: Avoid CamelCase: <Dw1_slave_search_device>
#172: FILE: drivers/w1/w1.c:458:
+	sl=3Dw1_slave_search_device(md, &rn);

ERROR:SPACING: space required before the open parenthesis '('
#177: FILE: drivers/w1/w1.c:463:
+	if(sl) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#179: FILE: drivers/w1/w1.c:465:
+		result=3D-EINVAL;
 		      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#179: FILE: drivers/w1/w1.c:465:
+		result=3D-EINVAL;
 		         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#189: FILE: drivers/w1/w1.c:475:
+static ssize_t w1_master_attribute_show_remove(struct device *dev,
+	struct device_attribute *attr, char *buf)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#191: FILE: drivers/w1/w1.c:477:
+	int c =3D PAGE_SIZE;
 	      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#192: FILE: drivers/w1/w1.c:478:
+	int c =3D PAGE_SIZE;
+	c -=3D snprintf(buf+PAGE_SIZE - c, c,

ERROR:SPACING: spaces required around that '-=' (ctx:WxV)
#192: FILE: drivers/w1/w1.c:478:
+	c -=3D snprintf(buf+PAGE_SIZE - c, c,
 	  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#192: FILE: drivers/w1/w1.c:478:
+	c -=3D snprintf(buf+PAGE_SIZE - c, c,
 	                   ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#197: FILE: drivers/w1/w1.c:483:
+static ssize_t w1_master_attribute_store_remove(struct device * dev,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#199: FILE: drivers/w1/w1.c:485:
+						const char * buf, size_t count)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#201: FILE: drivers/w1/w1.c:487:
+	struct w1_master *md =3D dev_to_w1_master(dev);
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#204: FILE: drivers/w1/w1.c:490:
+	ssize_t result=3Dcount;
 	              ^

ERROR:SPACING: space required before the open parenthesis '('
#206: FILE: drivers/w1/w1.c:492:
+	if(w1_atoreg_num(dev, buf, count, &rn))

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#210: FILE: drivers/w1/w1.c:496:
+	sl=3Dw1_slave_search_device(md, &rn);
 	  ^

ERROR:SPACING: space required before the open parenthesis '('
#211: FILE: drivers/w1/w1.c:497:
+	if(sl) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#215: FILE: drivers/w1/w1.c:501:
+		dev_info(dev, "Device %02x-%012llx doesn't exists\n", rn.family,
+			(unsigned long long)rn.id);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#216: FILE: drivers/w1/w1.c:502:
+		result=3D-EINVAL;
 		      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#216: FILE: drivers/w1/w1.c:502:
+		result=3D-EINVAL;
 		         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#230: FILE: drivers/w1/w1.c:529:
+static W1_MASTER_ATTR_RW(add, S_IRUGO | S_IWUGO);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#231: FILE: drivers/w1/w1.c:530:
+static W1_MASTER_ATTR_RW(remove, S_IRUGO | S_IWUGO);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000296214.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 42 errors, 9 warnings, 22 checks, 190 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000296214.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
