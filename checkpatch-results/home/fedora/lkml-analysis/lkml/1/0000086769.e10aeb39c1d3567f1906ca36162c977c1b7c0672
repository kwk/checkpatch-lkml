CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#229: FILE: include/linux/res_counter.h:107:
+void res_counter_init(struct res_counter *counter, struct res_counter *parent,
+			unsigned long usage_tolerance);

WARNING:LINE_SPACING: Missing a blank line after declarations
#239: FILE: include/linux/res_counter.h:143:
+	unsigned long long usage = percpu_counter_read_positive(&cnt->usage);
+	if (usage < cnt->limit)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#249: FILE: include/linux/res_counter.h:152:
+	unsigned long long usage = percpu_counter_read_positive(&cnt->usage);
+	if (usage < cnt->soft_limit)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#337: FILE: kernel/res_counter.c:19:
+void res_counter_init(struct res_counter *counter, struct res_counter *parent,
+			unsigned long usage_tolerance)

CHECK:BRACES: braces {} should be used on all arms of this statement
#446: FILE: kernel/res_counter.c:140:
+	if (member == RES_USAGE) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#449: FILE: kernel/res_counter.c:143:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#525: FILE: mm/memcontrol.c:3037:
+		res_counter_init(&mem->res, &parent->res,
+			MEM_CGROUP_RES_ERR_TOLERANCE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#527: FILE: mm/memcontrol.c:3039:
+		res_counter_init(&mem->memsw, &parent->memsw,
+			MEM_CGROUP_RES_ERR_TOLERANCE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#538: FILE: mm/memcontrol.c:3049:
+		res_counter_init(&mem->res, NULL,
+			MEM_CGROUP_RES_ERR_TOLERANCE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#540: FILE: mm/memcontrol.c:3051:
+		res_counter_init(&mem->memsw, NULL,
+			MEM_CGROUP_RES_ERR_TOLERANCE);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000086769.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 8 checks, 407 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000086769.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
