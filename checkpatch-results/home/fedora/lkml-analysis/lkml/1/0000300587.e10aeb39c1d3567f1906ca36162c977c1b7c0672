WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
their own references to pages (KVM, GRU, XPmem, RDMA/Infiniband, DMA engines

WARNING:REPEATED_WORD: Possible repeated word: 'etc'
#40: 
allows support of remapping, permission changes etc etc for externally

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#122: FILE: mm/Kconfig:197:
+config EMM_NOTIFIER
+	def_bool n
+	bool "External Mapped Memory Notifier for drivers directly mapping memory"
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: include/linux/rmap.h:97:
+ ^Iemm_referenced^I^I/* Check if a range was referenced */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#143: FILE: include/linux/rmap.h:97:
+ ^Iemm_referenced^I^I/* Check if a range was referenced */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: include/linux/rmap.h:97:
+ ^Iemm_referenced^I^I/* Check if a range was referenced */$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#148: FILE: include/linux/rmap.h:102:
+	int (*callback)(struct emm_notifier *e, struct mm_struct *mm,
+		enum emm_operation op,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#153: FILE: include/linux/rmap.h:107:
+extern int __emm_notify(struct mm_struct *mm, enum emm_operation op,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#154: FILE: include/linux/rmap.h:108:
+extern int __emm_notify(struct mm_struct *mm, enum emm_operation op,
+		unsigned long start, unsigned long end);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#164: FILE: include/linux/rmap.h:118:
+static inline int emm_notify(struct mm_struct *mm, enum emm_operation op,
+	unsigned long start, unsigned long end)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#179: FILE: include/linux/rmap.h:133:
+extern void emm_notifier_register(struct emm_notifier *e,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#180: FILE: include/linux/rmap.h:134:
+extern void emm_notifier_register(struct emm_notifier *e,
+					struct mm_struct *mm);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#182: FILE: include/linux/rmap.h:136:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#233: FILE: mm/rmap.c:304:
+int __emm_notify(struct mm_struct *mm, enum emm_operation op,
+		unsigned long start, unsigned long end)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#239: FILE: mm/rmap.c:310:
+	while (e) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'retrival' may be misspelled - perhaps 'retrieval'?
#247: FILE: mm/rmap.c:318:
+		 * the retrival of the pointer to the notifier.
 		       ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#264: FILE: mm/rmap.c:363:
+	if (emm_notify(mm, emm_referenced, address, address + PAGE_SIZE)
[...]
+			referenced++;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#265: FILE: mm/rmap.c:364:
+	if (emm_notify(mm, emm_referenced, address, address + PAGE_SIZE)
+							&& !referenced)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#598: FILE: mm/filemap_xip.c:194:
+		emm_notify(mm, emm_invalidate_start,
+					address, address + PAGE_SIZE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#607: FILE: mm/filemap_xip.c:207:
+		emm_notify(mm, emm_invalidate_end,
+					address, address + PAGE_SIZE);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000300587.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 7 warnings, 12 checks, 466 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000300587.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
