WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#126: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#131: FILE: arch/x86_64/kernel/paravirt.c:1:
+/*  Paravirtualization interfaces

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#132: FILE: arch/x86_64/kernel/paravirt.c:2:
+/*  Paravirtualization interfaces
+    Copyright (C) 2007 Glauber de Oliveira Costa and Steven Rostedt,

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#147: FILE: arch/x86_64/kernel/paravirt.c:17:
+    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#148: FILE: arch/x86_64/kernel/paravirt.c:18:
+    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/bug.h> instead of <asm/bug.h>
#156: FILE: arch/x86_64/kernel/paravirt.c:26:
+#include <asm/bug.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/delay.h> instead of <asm/delay.h>
#161: FILE: arch/x86_64/kernel/paravirt.c:31:
+#include <asm/delay.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#167: FILE: arch/x86_64/kernel/paravirt.c:37:
+#include <asm/pgtable.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/smp.h> instead of <asm/smp.h>
#172: FILE: arch/x86_64/kernel/paravirt.c:42:
+#include <asm/smp.h>

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#188: FILE: arch/x86_64/kernel/paravirt.c:58:
+	printk(KERN_INFO "Booting paravirtualized kernel on %s\n",

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#204: FILE: arch/x86_64/kernel/paravirt.c:74:
+	extern const char start_##name[], end_##name[];		\

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#225: FILE: arch/x86_64/kernel/paravirt.c:95:
+static unsigned native_patch(u8 type, u16 clobbers, void *insns, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#225: FILE: arch/x86_64/kernel/paravirt.c:95:
+static unsigned native_patch(u8 type, u16 clobbers, void *insns, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#228: FILE: arch/x86_64/kernel/paravirt.c:98:
+	unsigned ret;

ERROR:SPACING: space required before the open parenthesis '('
#230: FILE: arch/x86_64/kernel/paravirt.c:100:
+	switch(type) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#231: FILE: arch/x86_64/kernel/paravirt.c:101:
+#define SITE(x)	case PARAVIRT_PATCH(x):	start = start_##x; end = end_##x; goto patch_site

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:INDENTED_LABEL: labels should not be indented
#247: FILE: arch/x86_64/kernel/paravirt.c:117:
+	patch_site:

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#260: FILE: arch/x86_64/kernel/paravirt.c:130:
+		/* These functions end up returning what
+		   they're passed in the first argument */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#260: FILE: arch/x86_64/kernel/paravirt.c:130:
+		   they're passed in the first argument */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#269: FILE: arch/x86_64/kernel/paravirt.c:139:
+		 * argument in the location pointed by the first */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#281: FILE: arch/x86_64/kernel/paravirt.c:151:
+unsigned paravirt_patch_nop(void)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#286: FILE: arch/x86_64/kernel/paravirt.c:156:
+unsigned paravirt_patch_ignore(unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#286: FILE: arch/x86_64/kernel/paravirt.c:156:
+unsigned paravirt_patch_ignore(unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#291: FILE: arch/x86_64/kernel/paravirt.c:161:
+unsigned paravirt_patch_call(void *target, u16 tgt_clobbers,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#293: FILE: arch/x86_64/kernel/paravirt.c:163:
+			     unsigned len)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#296: FILE: arch/x86_64/kernel/paravirt.c:166:
+	unsigned long delta = (unsigned long)target - (unsigned long)(call+5);
 	                                                                  ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#309: FILE: arch/x86_64/kernel/paravirt.c:179:
+unsigned paravirt_patch_copy_reg(void *site, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#309: FILE: arch/x86_64/kernel/paravirt.c:179:
+unsigned paravirt_patch_copy_reg(void *site, unsigned len)

WARNING:LINE_SPACING: Missing a blank line after declarations
#312: FILE: arch/x86_64/kernel/paravirt.c:182:
+	unsigned char *mov = site;
+	if (len < 3)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#322: FILE: arch/x86_64/kernel/paravirt.c:192:
+unsigned paravirt_patch_store_reg(void *site, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#322: FILE: arch/x86_64/kernel/paravirt.c:192:
+unsigned paravirt_patch_store_reg(void *site, unsigned len)

WARNING:LINE_SPACING: Missing a blank line after declarations
#325: FILE: arch/x86_64/kernel/paravirt.c:195:
+	unsigned char *mov = site;
+	if (len < 3)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#335: FILE: arch/x86_64/kernel/paravirt.c:205:
+unsigned paravirt_patch_jmp(void *target, void *site, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#335: FILE: arch/x86_64/kernel/paravirt.c:205:
+unsigned paravirt_patch_jmp(void *target, void *site, unsigned len)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#338: FILE: arch/x86_64/kernel/paravirt.c:208:
+	unsigned long delta = (unsigned long)target - (unsigned long)(jmp+5);
 	                                                                 ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#349: FILE: arch/x86_64/kernel/paravirt.c:219:
+unsigned paravirt_patch_default(u8 type, u16 clobbers, void *site, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#349: FILE: arch/x86_64/kernel/paravirt.c:219:
+unsigned paravirt_patch_default(u8 type, u16 clobbers, void *site, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#352: FILE: arch/x86_64/kernel/paravirt.c:222:
+	unsigned ret;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!opfunc"
#354: FILE: arch/x86_64/kernel/paravirt.c:224:
+	if (opfunc == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#366: FILE: arch/x86_64/kernel/paravirt.c:236:
+		/* Otherwise call the function; assume target could
+		   clobber any caller-save reg */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#366: FILE: arch/x86_64/kernel/paravirt.c:236:
+		   clobber any caller-save reg */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#368: FILE: arch/x86_64/kernel/paravirt.c:238:
+		ret = paravirt_patch_call(opfunc, CLBR_ANY,
+						  site, clobbers, len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#373: FILE: arch/x86_64/kernel/paravirt.c:243:
+unsigned paravirt_patch_insns(void *site, unsigned len,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#373: FILE: arch/x86_64/kernel/paravirt.c:243:
+unsigned paravirt_patch_insns(void *site, unsigned len,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#376: FILE: arch/x86_64/kernel/paravirt.c:246:
+	unsigned insn_len = end - start;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!start"
#378: FILE: arch/x86_64/kernel/paravirt.c:248:
+	if (insn_len > len || start == NULL)

WARNING:LINE_SPACING: Missing a blank line after declarations
#394: FILE: arch/x86_64/kernel/paravirt.c:264:
+	unsigned long f;
+	asm volatile("pushfq ; popq %0":"=g" (f): /* no input */);

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#394: FILE: arch/x86_64/kernel/paravirt.c:264:
+	asm volatile("pushfq ; popq %0":"=g" (f): /* no input */);
 	                               ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#394: FILE: arch/x86_64/kernel/paravirt.c:264:
+	asm volatile("pushfq ; popq %0":"=g" (f): /* no input */);
 	                                        ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#400: FILE: arch/x86_64/kernel/paravirt.c:270:
+	asm volatile("pushq %0 ; popfq": /* no output */
 	                               ^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#401: FILE: arch/x86_64/kernel/paravirt.c:271:
+			     :"g" (f)
 			     ^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#402: FILE: arch/x86_64/kernel/paravirt.c:272:
+			     :"memory", "cc");
 			     ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#407: FILE: arch/x86_64/kernel/paravirt.c:277:
+	asm volatile("cli": : :"memory");
 	                  ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#407: FILE: arch/x86_64/kernel/paravirt.c:277:
+	asm volatile("cli": : :"memory");
 	                      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#412: FILE: arch/x86_64/kernel/paravirt.c:282:
+	asm volatile("sti": : :"memory");
 	                  ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#412: FILE: arch/x86_64/kernel/paravirt.c:282:
+	asm volatile("sti": : :"memory");
 	                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#417: FILE: arch/x86_64/kernel/paravirt.c:287:
+	u32 *lp = (u32 *)((char *)dt + entry*8);
 	                                    ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#418: FILE: arch/x86_64/kernel/paravirt.c:288:
+	u32 *lp = (u32 *)((char *)dt + entry*8);
+	lp[0] = entry_low;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#448: FILE: arch/x86_64/kernel/paravirt.c:318:
+void native_set_pte_at(struct mm_struct *mm, u64 addr, pte_t *ptep,
+				pte_t pteval)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#450: FILE: arch/x86_64/kernel/paravirt.c:320:
+	native_set_pte(ptep,pteval);
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#455: FILE: arch/x86_64/kernel/paravirt.c:325:
+	native_set_pte_at(mm,addr,ptep,__pte(0));
 	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#455: FILE: arch/x86_64/kernel/paravirt.c:325:
+	native_set_pte_at(mm,addr,ptep,__pte(0));
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#455: FILE: arch/x86_64/kernel/paravirt.c:325:
+	native_set_pte_at(mm,addr,ptep,__pte(0));
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#460: FILE: arch/x86_64/kernel/paravirt.c:330:
+	native_set_pmd(pmd,__pmd(0));
 	                  ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#465: FILE: arch/x86_64/kernel/paravirt.c:335:
+	asm volatile ("swapgs" :: :"memory" );
 	                          ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#465: FILE: arch/x86_64/kernel/paravirt.c:335:
+	asm volatile ("swapgs" :: :"memory" );

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#470: FILE: arch/x86_64/kernel/paravirt.c:340:
+extern void native_sysret(void);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#585: FILE: arch/x86_64/kernel/paravirt.c:455:
+EXPORT_SYMBOL(paravirt_ops);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#609: FILE: include/asm-x86_64/paravirt.h:1:
+#ifndef __ASM_PARAVIRT_H

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#614: FILE: include/asm-x86_64/paravirt.h:6:
+ * para-virtualization: those hooks are defined here. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#635: FILE: include/asm-x86_64/paravirt.h:27:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#645: FILE: include/asm-x86_64/paravirt.h:37:
+        PARAVIRT_LAZY_NONE = 0,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#645: FILE: include/asm-x86_64/paravirt.h:37:
+        PARAVIRT_LAZY_NONE = 0,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#646: FILE: include/asm-x86_64/paravirt.h:38:
+        PARAVIRT_LAZY_MMU = 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#646: FILE: include/asm-x86_64/paravirt.h:38:
+        PARAVIRT_LAZY_MMU = 1,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#647: FILE: include/asm-x86_64/paravirt.h:39:
+        PARAVIRT_LAZY_CPU = 2,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#647: FILE: include/asm-x86_64/paravirt.h:39:
+        PARAVIRT_LAZY_CPU = 2,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#648: FILE: include/asm-x86_64/paravirt.h:40:
+        PARAVIRT_LAZY_FLUSH = 3,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#648: FILE: include/asm-x86_64/paravirt.h:40:
+        PARAVIRT_LAZY_FLUSH = 3,$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#667: FILE: include/asm-x86_64/paravirt.h:59:
+struct paravirt_ops
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#680: FILE: include/asm-x86_64/paravirt.h:72:
+	unsigned (*patch)(u8 type, u16 clobber, void *firstinsn, unsigned len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#680: FILE: include/asm-x86_64/paravirt.h:72:
+	unsigned (*patch)(u8 type, u16 clobber, void *firstinsn, unsigned len);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#693: FILE: include/asm-x86_64/paravirt.h:85:
+	int (*set_wallclock)(unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#705: FILE: include/asm-x86_64/paravirt.h:97:
+	void (*write_cr0)(unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#708: FILE: include/asm-x86_64/paravirt.h:100:
+	void (*write_cr2)(unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#711: FILE: include/asm-x86_64/paravirt.h:103:
+	void (*write_cr3)(unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#714: FILE: include/asm-x86_64/paravirt.h:106:
+	void (*write_cr4)(unsigned long);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#717: FILE: include/asm-x86_64/paravirt.h:109:
+	/*
+	* Get/set interrupt state.  save_fl and restore_fl are only

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#723: FILE: include/asm-x86_64/paravirt.h:115:
+	void (*restore_fl)(unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct desc_ptr *' should also have an identifier name
#740: FILE: include/asm-x86_64/paravirt.h:132:
+	void (*load_gdt)(const struct desc_ptr *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct desc_ptr *' should also have an identifier name
#741: FILE: include/asm-x86_64/paravirt.h:133:
+	void (*load_idt)(const struct desc_ptr *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct desc_ptr *' should also have an identifier name
#742: FILE: include/asm-x86_64/paravirt.h:134:
+	void (*store_gdt)(struct desc_ptr *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct desc_ptr *' should also have an identifier name
#743: FILE: include/asm-x86_64/paravirt.h:135:
+	void (*store_idt)(struct desc_ptr *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#744: FILE: include/asm-x86_64/paravirt.h:136:
+	void (*set_ldt)(const void *desc, unsigned entries);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct desc_struct *' should also have an identifier name
#747: FILE: include/asm-x86_64/paravirt.h:139:
+	void (*write_ldt_entry)(struct desc_struct *,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#749: FILE: include/asm-x86_64/paravirt.h:141:
+	void (*write_gdt_entry)(void *ptr, void *entry, unsigned type,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#750: FILE: include/asm-x86_64/paravirt.h:142:
+	void (*write_gdt_entry)(void *ptr, void *entry, unsigned type,
+					 unsigned size);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#750: FILE: include/asm-x86_64/paravirt.h:142:
+					 unsigned size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#754: FILE: include/asm-x86_64/paravirt.h:146:
+	void (*load_rsp0)(struct tss_struct *tss,
+				   struct thread_struct *thread);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#759: FILE: include/asm-x86_64/paravirt.h:151:
+	/*
+	* Hooks for intercepting the creation/use/destruction of an

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#763: FILE: include/asm-x86_64/paravirt.h:155:
+	void (*activate_mm)(struct mm_struct *prev,
+				     struct mm_struct *next);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#765: FILE: include/asm-x86_64/paravirt.h:157:
+	void (*dup_mmap)(struct mm_struct *oldmm,
+				  struct mm_struct *mm);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pte_t' should also have an identifier name
#802: FILE: include/asm-x86_64/paravirt.h:194:
+	unsigned long (*pte_val)(pte_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pud_t' should also have an identifier name
#803: FILE: include/asm-x86_64/paravirt.h:195:
+	unsigned long (*pud_val)(pud_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pmd_t' should also have an identifier name
#804: FILE: include/asm-x86_64/paravirt.h:196:
+	unsigned long (*pmd_val)(pmd_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pgd_t' should also have an identifier name
#805: FILE: include/asm-x86_64/paravirt.h:197:
+	unsigned long (*pgd_val)(pgd_t);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#813: FILE: include/asm-x86_64/paravirt.h:205:
+	void (*ebda_info)(unsigned *addr, unsigned *size);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#813: FILE: include/asm-x86_64/paravirt.h:205:
+	void (*ebda_info)(unsigned *addr, unsigned *size);

WARNING:STRING_FRAGMENTS: Consecutive strings are generally better as a single string
#844: FILE: include/asm-x86_64/paravirt.h:236:
+	"771:\n\t" insn_string "\n" "772:\n"		\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#846: FILE: include/asm-x86_64/paravirt.h:238:
+^I".align 8\n"^I ^I^I^I^I\$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#857: FILE: include/asm-x86_64/paravirt.h:249:
+unsigned paravirt_patch_nop(void);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#858: FILE: include/asm-x86_64/paravirt.h:250:
+unsigned paravirt_patch_ignore(unsigned len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#858: FILE: include/asm-x86_64/paravirt.h:250:
+unsigned paravirt_patch_ignore(unsigned len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#859: FILE: include/asm-x86_64/paravirt.h:251:
+unsigned paravirt_patch_call(void *target, u16 tgt_clobbers,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#861: FILE: include/asm-x86_64/paravirt.h:253:
+			     unsigned len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#862: FILE: include/asm-x86_64/paravirt.h:254:
+unsigned paravirt_patch_jmp(void *target, void *site, unsigned len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#862: FILE: include/asm-x86_64/paravirt.h:254:
+unsigned paravirt_patch_jmp(void *target, void *site, unsigned len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#863: FILE: include/asm-x86_64/paravirt.h:255:
+unsigned paravirt_patch_default(u8 type, u16 clobbers, void *site, unsigned len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#863: FILE: include/asm-x86_64/paravirt.h:255:
+unsigned paravirt_patch_default(u8 type, u16 clobbers, void *site, unsigned len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#864: FILE: include/asm-x86_64/paravirt.h:256:
+unsigned paravirt_patch_copy_reg(void *site, unsigned len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#864: FILE: include/asm-x86_64/paravirt.h:256:
+unsigned paravirt_patch_copy_reg(void *site, unsigned len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#865: FILE: include/asm-x86_64/paravirt.h:257:
+unsigned paravirt_patch_store_reg(void *site, unsigned len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#865: FILE: include/asm-x86_64/paravirt.h:257:
+unsigned paravirt_patch_store_reg(void *site, unsigned len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#866: FILE: include/asm-x86_64/paravirt.h:258:
+unsigned paravirt_patch_insns(void *site, unsigned len,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#866: FILE: include/asm-x86_64/paravirt.h:258:
+unsigned paravirt_patch_insns(void *site, unsigned len,

WARNING:REPEATED_WORD: Possible repeated word: 'expected'
#892: FILE: include/asm-x86_64/paravirt.h:284:
+ * All caller-save registers are expected expected to be modified

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#920: FILE: include/asm-x86_64/paravirt.h:312:
+ * makes sure the incoming and outgoing types are always correct.
+*/

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'rettype' - possible side-effects?
#923: FILE: include/asm-x86_64/paravirt.h:315:
+#define __PVOP_CALL(rettype, op, pre, post, ...)			\
+	({								\
+		rettype __ret;						\
+		unsigned long __rax, __rdi, __rsi, __rdx, __rcx;	\
+		asm volatile(pre					\
+			     paravirt_alt(PARAVIRT_CALL)		\
+			     post					\
+			     : "=a" (__rax), "=D" (__rdi),		\
+			       "=S" (__rsi), "=d" (__rdx),		\
+			       "=c" (__rcx)				\
+			     : paravirt_type(op),			\
+			       paravirt_clobber(CLBR_ANY),		\
+			       ##__VA_ARGS__				\
+			     : "memory", CALL_CLOBBERS, "cc");		\
+		__ret = (rettype)__rax;					\
+	})

ERROR:CODE_INDENT: code indent should use tabs where possible
#956: FILE: include/asm-x86_64/paravirt.h:348:
+        __PVOP_CALL(rettype, op, "", "")$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#956: FILE: include/asm-x86_64/paravirt.h:348:
+        __PVOP_CALL(rettype, op, "", "")$

ERROR:CODE_INDENT: code indent should use tabs where possible
#958: FILE: include/asm-x86_64/paravirt.h:350:
+        __PVOP_VCALL(op, "", "")$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#958: FILE: include/asm-x86_64/paravirt.h:350:
+        __PVOP_VCALL(op, "", "")$

ERROR:CODE_INDENT: code indent should use tabs where possible
#961: FILE: include/asm-x86_64/paravirt.h:353:
+        __PVOP_CALL(rettype, op, "", "", "D" ((u64)(arg1)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#961: FILE: include/asm-x86_64/paravirt.h:353:
+        __PVOP_CALL(rettype, op, "", "", "D" ((u64)(arg1)))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#963: FILE: include/asm-x86_64/paravirt.h:355:
+        __PVOP_VCALL(op, "", "", "D" ((u64)(arg1)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#963: FILE: include/asm-x86_64/paravirt.h:355:
+        __PVOP_VCALL(op, "", "", "D" ((u64)(arg1)))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#966: FILE: include/asm-x86_64/paravirt.h:358:
+        __PVOP_CALL(rettype, op, "", "", "D" ((u64)(arg1)), "S" ((u64)(arg2)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#966: FILE: include/asm-x86_64/paravirt.h:358:
+        __PVOP_CALL(rettype, op, "", "", "D" ((u64)(arg1)), "S" ((u64)(arg2)))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#968: FILE: include/asm-x86_64/paravirt.h:360:
+        __PVOP_VCALL(op, "", "", "D" ((u64)(arg1)), "S" ((u64)(arg2)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#968: FILE: include/asm-x86_64/paravirt.h:360:
+        __PVOP_VCALL(op, "", "", "D" ((u64)(arg1)), "S" ((u64)(arg2)))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#971: FILE: include/asm-x86_64/paravirt.h:363:
+        __PVOP_CALL(rettype, op, "", "", "D" ((u64)(arg1)),             \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#971: FILE: include/asm-x86_64/paravirt.h:363:
+        __PVOP_CALL(rettype, op, "", "", "D" ((u64)(arg1)),             \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#972: FILE: include/asm-x86_64/paravirt.h:364:
+                    "S"((u64)(arg2)), "d"((u64)(arg3)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#972: FILE: include/asm-x86_64/paravirt.h:364:
+                    "S"((u64)(arg2)), "d"((u64)(arg3)))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#974: FILE: include/asm-x86_64/paravirt.h:366:
+        __PVOP_VCALL(op, "", "", "D" ((u64)(arg1)), "S"((u64)(arg2)),   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#974: FILE: include/asm-x86_64/paravirt.h:366:
+        __PVOP_VCALL(op, "", "", "D" ((u64)(arg1)), "S"((u64)(arg2)),   \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#975: FILE: include/asm-x86_64/paravirt.h:367:
+                     "d"((u64)(arg3)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#975: FILE: include/asm-x86_64/paravirt.h:367:
+                     "d"((u64)(arg3)))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#978: FILE: include/asm-x86_64/paravirt.h:370:
+        __PVOP_CALL(rettype, op, "", "", "D" ((u64)(arg1)),             \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#978: FILE: include/asm-x86_64/paravirt.h:370:
+        __PVOP_CALL(rettype, op, "", "", "D" ((u64)(arg1)),             \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#979: FILE: include/asm-x86_64/paravirt.h:371:
+                    "S"((u64)(arg2)), "d"((u64)(arg3)), "c" ((u64)(arg4)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#979: FILE: include/asm-x86_64/paravirt.h:371:
+                    "S"((u64)(arg2)), "d"((u64)(arg3)), "c" ((u64)(arg4)))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#981: FILE: include/asm-x86_64/paravirt.h:373:
+        __PVOP_VCALL(op, "", "", "D" ((u64)(arg1)), "S"((u64)(arg2)),   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#981: FILE: include/asm-x86_64/paravirt.h:373:
+        __PVOP_VCALL(op, "", "", "D" ((u64)(arg1)), "S"((u64)(arg2)),   \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#982: FILE: include/asm-x86_64/paravirt.h:374:
+                     "d"((u64)(arg3)), "c"((u64)(arg4)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#982: FILE: include/asm-x86_64/paravirt.h:374:
+                     "d"((u64)(arg3)), "c"((u64)(arg4)))$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#994: FILE: include/asm-x86_64/paravirt.h:386:
+static inline void load_rsp0(struct tss_struct *tss,
+				struct thread_struct *thread)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#996: FILE: include/asm-x86_64/paravirt.h:388:
+	PVOP_VCALL2(load_rsp0, tss,thread);
 	                          ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1028: FILE: include/asm-x86_64/paravirt.h:420:
+}
+static inline void write_cr3(unsigned long x)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1037: FILE: include/asm-x86_64/paravirt.h:429:
+}
+static inline void write_cr4(unsigned long x)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1047: FILE: include/asm-x86_64/paravirt.h:439:
+#define get_debugreg(var, reg) var = paravirt_ops.get_debugreg(reg)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1050: FILE: include/asm-x86_64/paravirt.h:442:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1083: FILE: include/asm-x86_64/paravirt.h:475:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1087: FILE: include/asm-x86_64/paravirt.h:479:
+	int __err;
+	return PVOP_CALL2(unsigned long, read_msr, msr, &__err);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1114: FILE: include/asm-x86_64/paravirt.h:506:
+}
+static inline unsigned long read_tscp(int *aux)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1134: FILE: include/asm-x86_64/paravirt.h:526:
+static inline void set_ldt(void *addr, unsigned entries)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1154: FILE: include/asm-x86_64/paravirt.h:546:
+#define store_tr(tr) ^I(tr) = paravirt_store_tr();$

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1154: FILE: include/asm-x86_64/paravirt.h:546:
+#define store_tr(tr) 	(tr) = paravirt_store_tr();

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1154: FILE: include/asm-x86_64/paravirt.h:546:
+#define store_tr(tr) 	(tr) = paravirt_store_tr();

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1158: FILE: include/asm-x86_64/paravirt.h:550:
+	PVOP_VCALL2(load_tls, t,cpu);
 	                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1162: FILE: include/asm-x86_64/paravirt.h:554:
+static inline void write_ldt_entry(struct desc_struct *desc,
+				  int num, u32 entry1, u32 entry2)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1168: FILE: include/asm-x86_64/paravirt.h:560:
+				   unsigned type, unsigned size)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1168: FILE: include/asm-x86_64/paravirt.h:560:
+				   unsigned type, unsigned size)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1182: FILE: include/asm-x86_64/paravirt.h:574:
+}
+static inline unsigned long pte_val(pte_t pte)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1191: FILE: include/asm-x86_64/paravirt.h:583:
+}
+static inline unsigned long pgd_val(pgd_t pgd)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1200: FILE: include/asm-x86_64/paravirt.h:592:
+}
+static inline unsigned long pud_val(pud_t pud)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1209: FILE: include/asm-x86_64/paravirt.h:601:
+}
+static inline unsigned long pmd_val(pmd_t pmd)

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1215: FILE: include/asm-x86_64/paravirt.h:607:
+static inline void slow_down_io(void) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1230: FILE: include/asm-x86_64/paravirt.h:622:
+	PVOP_VCALL2(apic_write, reg,v);
 	                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1249: FILE: include/asm-x86_64/paravirt.h:641:
+static inline void startup_ipi_hook(int phys_apicid, unsigned long start_rip,
+					unsigned long init_rsp)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1279: FILE: include/asm-x86_64/paravirt.h:671:
+}
+static inline void __flush_tlb_all(void)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1283: FILE: include/asm-x86_64/paravirt.h:675:
+}
+static inline void __flush_tlb_one(unsigned long addr)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1318: FILE: include/asm-x86_64/paravirt.h:710:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1360: FILE: include/asm-x86_64/paravirt.h:752:
+ * have no need to save any. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1403: FILE: include/asm-x86_64/paravirt.h:795:
+        u8 *instr;              /* original instructions */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1403: FILE: include/asm-x86_64/paravirt.h:795:
+        u8 *instr;              /* original instructions */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1404: FILE: include/asm-x86_64/paravirt.h:796:
+        u8 instrtype;           /* type of this instruction */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1404: FILE: include/asm-x86_64/paravirt.h:796:
+        u8 instrtype;           /* type of this instruction */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1405: FILE: include/asm-x86_64/paravirt.h:797:
+        u8 len;                 /* length of original instruction */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1405: FILE: include/asm-x86_64/paravirt.h:797:
+        u8 len;                 /* length of original instruction */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1406: FILE: include/asm-x86_64/paravirt.h:798:
+        u32 clobbers;           /* what registers you may clobber */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1406: FILE: include/asm-x86_64/paravirt.h:798:
+        u32 clobbers;           /* what registers you may clobber */$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#1407: FILE: include/asm-x86_64/paravirt.h:799:
+} __attribute__((aligned(8)));

ERROR:SPACING: spaces required around that ':' (ctx:VxO)
#1445: FILE: include/asm-x86_64/paravirt.h:837:
+771:;						\
    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxO)
#1447: FILE: include/asm-x86_64/paravirt.h:839:
+772:;						\
    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1448: FILE: include/asm-x86_64/paravirt.h:840:
+	.pushsection .parainstructions,"a";	\
 	                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1452: FILE: include/asm-x86_64/paravirt.h:844:
+	 .byte 772b-771b;			\
 	           ^

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1462: FILE: include/asm-x86_64/paravirt.h:854:
+#define DISABLE_INTERRUPTS(clobbers)					\
+	PARA_SITE(PARA_PATCH(PARAVIRT_irq_disable), clobbers,		\
+		  pushq %rax; pushq %rdi; pushq %rcx; pushq %rdx;	\
+		  call *paravirt_ops+PARAVIRT_irq_disable;		\
+		  popq %rdx; popq %rcx; popq %rdi; popq %rax;	\
+		);

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1464: FILE: include/asm-x86_64/paravirt.h:856:
+		  pushq %rax; pushq %rdi; pushq %rcx; pushq %rdx;	\
 		        ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1464: FILE: include/asm-x86_64/paravirt.h:856:
+		  pushq %rax; pushq %rdi; pushq %rcx; pushq %rdx;	\
 		                    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1464: FILE: include/asm-x86_64/paravirt.h:856:
+		  pushq %rax; pushq %rdi; pushq %rcx; pushq %rdx;	\
 		                                ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1464: FILE: include/asm-x86_64/paravirt.h:856:
+		  pushq %rax; pushq %rdi; pushq %rcx; pushq %rdx;	\
 		                                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#1465: FILE: include/asm-x86_64/paravirt.h:857:
+		  call *paravirt_ops+PARAVIRT_irq_disable;		\
 		       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1465: FILE: include/asm-x86_64/paravirt.h:857:
+		  call *paravirt_ops+PARAVIRT_irq_disable;		\
 		                    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1466: FILE: include/asm-x86_64/paravirt.h:858:
+		  popq %rdx; popq %rcx; popq %rdi; popq %rax;	\
 		       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1466: FILE: include/asm-x86_64/paravirt.h:858:
+		  popq %rdx; popq %rcx; popq %rdi; popq %rax;	\
 		                  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1466: FILE: include/asm-x86_64/paravirt.h:858:
+		  popq %rdx; popq %rcx; popq %rdi; popq %rax;	\
 		                             ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1466: FILE: include/asm-x86_64/paravirt.h:858:
+		  popq %rdx; popq %rcx; popq %rdi; popq %rax;	\
 		                                        ^

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1469: FILE: include/asm-x86_64/paravirt.h:861:
+#define ENABLE_INTERRUPTS(clobbers)					\
+	PARA_SITE(PARA_PATCH(PARAVIRT_irq_enable), clobbers,		\
+		  pushq %rax; pushq %rdi; pushq %rcx; pushq %rdx;	\
+		  call *%cs:paravirt_ops+PARAVIRT_irq_enable;		\
+		  popq %rdx; popq %rcx; popq %rdi; popq %rax;		\
+		);

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1471: FILE: include/asm-x86_64/paravirt.h:863:
+		  pushq %rax; pushq %rdi; pushq %rcx; pushq %rdx;	\
 		        ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1471: FILE: include/asm-x86_64/paravirt.h:863:
+		  pushq %rax; pushq %rdi; pushq %rcx; pushq %rdx;	\
 		                    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1471: FILE: include/asm-x86_64/paravirt.h:863:
+		  pushq %rax; pushq %rdi; pushq %rcx; pushq %rdx;	\
 		                                ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1471: FILE: include/asm-x86_64/paravirt.h:863:
+		  pushq %rax; pushq %rdi; pushq %rcx; pushq %rdx;	\
 		                                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxO)
#1472: FILE: include/asm-x86_64/paravirt.h:864:
+		  call *%cs:paravirt_ops+PARAVIRT_irq_enable;		\
 		       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#1472: FILE: include/asm-x86_64/paravirt.h:864:
+		  call *%cs:paravirt_ops+PARAVIRT_irq_enable;		\
 		        ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1472: FILE: include/asm-x86_64/paravirt.h:864:
+		  call *%cs:paravirt_ops+PARAVIRT_irq_enable;		\
 		           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1472: FILE: include/asm-x86_64/paravirt.h:864:
+		  call *%cs:paravirt_ops+PARAVIRT_irq_enable;		\
 		                        ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1473: FILE: include/asm-x86_64/paravirt.h:865:
+		  popq %rdx; popq %rcx; popq %rdi; popq %rax;		\
 		       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1473: FILE: include/asm-x86_64/paravirt.h:865:
+		  popq %rdx; popq %rcx; popq %rdi; popq %rax;		\
 		                  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1473: FILE: include/asm-x86_64/paravirt.h:865:
+		  popq %rdx; popq %rcx; popq %rdi; popq %rax;		\
 		                             ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1473: FILE: include/asm-x86_64/paravirt.h:865:
+		  popq %rdx; popq %rcx; popq %rdi; popq %rax;		\
 		                                        ^

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1476: FILE: include/asm-x86_64/paravirt.h:868:
+#define SWAPGS								\
+	PARA_SITE(PARA_PATCH(PARAVIRT_swapgs), CLBR_NONE,		\
+		  pushq %rax; pushq %rdi; pushq %rcx; pushq %rdx;	\
+		  call *paravirt_ops+PARAVIRT_swapgs;			\
+		  popq %rdx; popq %rcx; popq %rdi; popq %rax;		\
+		);

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1478: FILE: include/asm-x86_64/paravirt.h:870:
+		  pushq %rax; pushq %rdi; pushq %rcx; pushq %rdx;	\
 		        ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1478: FILE: include/asm-x86_64/paravirt.h:870:
+		  pushq %rax; pushq %rdi; pushq %rcx; pushq %rdx;	\
 		                    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1478: FILE: include/asm-x86_64/paravirt.h:870:
+		  pushq %rax; pushq %rdi; pushq %rcx; pushq %rdx;	\
 		                                ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1478: FILE: include/asm-x86_64/paravirt.h:870:
+		  pushq %rax; pushq %rdi; pushq %rcx; pushq %rdx;	\
 		                                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#1479: FILE: include/asm-x86_64/paravirt.h:871:
+		  call *paravirt_ops+PARAVIRT_swapgs;			\
 		       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1479: FILE: include/asm-x86_64/paravirt.h:871:
+		  call *paravirt_ops+PARAVIRT_swapgs;			\
 		                    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1480: FILE: include/asm-x86_64/paravirt.h:872:
+		  popq %rdx; popq %rcx; popq %rdi; popq %rax;		\
 		       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1480: FILE: include/asm-x86_64/paravirt.h:872:
+		  popq %rdx; popq %rcx; popq %rdi; popq %rax;		\
 		                  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1480: FILE: include/asm-x86_64/paravirt.h:872:
+		  popq %rdx; popq %rcx; popq %rdi; popq %rax;		\
 		                             ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1480: FILE: include/asm-x86_64/paravirt.h:872:
+		  popq %rdx; popq %rcx; popq %rdi; popq %rax;		\
 		                                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxO)
#1490: FILE: include/asm-x86_64/paravirt.h:882:
+		  jmp *%cs:paravirt_ops+PARAVIRT_sysret)
 		      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#1490: FILE: include/asm-x86_64/paravirt.h:882:
+		  jmp *%cs:paravirt_ops+PARAVIRT_sysret)
 		       ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1490: FILE: include/asm-x86_64/paravirt.h:882:
+		  jmp *%cs:paravirt_ops+PARAVIRT_sysret)
 		          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1490: FILE: include/asm-x86_64/paravirt.h:882:
+		  jmp *%cs:paravirt_ops+PARAVIRT_sysret)
 		                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxO)
#1494: FILE: include/asm-x86_64/paravirt.h:886:
+		  jmp *%cs:paravirt_ops+PARAVIRT_iret)
 		      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#1494: FILE: include/asm-x86_64/paravirt.h:886:
+		  jmp *%cs:paravirt_ops+PARAVIRT_iret)
 		       ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1494: FILE: include/asm-x86_64/paravirt.h:886:
+		  jmp *%cs:paravirt_ops+PARAVIRT_iret)
 		          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1494: FILE: include/asm-x86_64/paravirt.h:886:
+		  jmp *%cs:paravirt_ops+PARAVIRT_iret)
 		                       ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1496: FILE: include/asm-x86_64/paravirt.h:888:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1498: FILE: include/asm-x86_64/paravirt.h:890:
+#define GET_CR2_INTO_RCX ^I^I^I^I  \$

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1498: FILE: include/asm-x86_64/paravirt.h:890:
+#define GET_CR2_INTO_RCX 				  \
+	call *paravirt_ops+PARAVIRT_read_cr2; 		  \
+	movq %rax, %rcx; 				  \
+	xorq %rax, %rax;				  \
+

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1498: FILE: include/asm-x86_64/paravirt.h:890:
+#define GET_CR2_INTO_RCX 				  \
+	call *paravirt_ops+PARAVIRT_read_cr2; 		  \
+	movq %rax, %rcx; 				  \
+	xorq %rax, %rax;				  \
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1499: FILE: include/asm-x86_64/paravirt.h:891:
+^Icall *paravirt_ops+PARAVIRT_read_cr2; ^I^I  \$

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#1499: FILE: include/asm-x86_64/paravirt.h:891:
+	call *paravirt_ops+PARAVIRT_read_cr2; 		  \
 	     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1499: FILE: include/asm-x86_64/paravirt.h:891:
+	call *paravirt_ops+PARAVIRT_read_cr2; 		  \
 	                  ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1500: FILE: include/asm-x86_64/paravirt.h:892:
+^Imovq %rax, %rcx; ^I^I^I^I  \$

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1500: FILE: include/asm-x86_64/paravirt.h:892:
+	movq %rax, %rcx; 				  \
 	     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1500: FILE: include/asm-x86_64/paravirt.h:892:
+	movq %rax, %rcx; 				  \
 	           ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1501: FILE: include/asm-x86_64/paravirt.h:893:
+	xorq %rax, %rax;				  \
 	     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1501: FILE: include/asm-x86_64/paravirt.h:893:
+	xorq %rax, %rax;				  \
 	           ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000394674.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 52 errors, 119 warnings, 81 checks, 1418 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000394674.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
