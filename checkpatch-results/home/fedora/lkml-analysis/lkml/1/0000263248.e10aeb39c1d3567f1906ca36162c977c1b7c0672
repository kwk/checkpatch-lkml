WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
    after we merge setup32/64.c, some funcs need to be moved back to setup.c

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#43: 
    Signed-off-by: Yinghai Lu <yhlu.kernel@gmail.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#46: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#582: FILE: arch/x86/kernel/setup_percpu.c:1:
+#include <linux/kernel.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/smp.h> instead of <asm/smp.h>
#589: FILE: arch/x86/kernel/setup_percpu.c:8:
+#include <asm/smp.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/percpu.h> instead of <asm/percpu.h>
#590: FILE: arch/x86/kernel/setup_percpu.c:9:
+#include <asm/percpu.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#592: FILE: arch/x86/kernel/setup_percpu.c:11:
+#include <asm/processor.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/topology.h> instead of <asm/topology.h>
#594: FILE: arch/x86/kernel/setup_percpu.c:13:
+#include <asm/topology.h>

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#611: FILE: arch/x86/kernel/setup_percpu.c:30:
+EXPORT_SYMBOL(boot_cpu_physical_apicid);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#767: FILE: arch/x86/kernel/setup_percpu.c:186:
+	printk(KERN_INFO "PERCPU: Allocating %zd bytes of per cpu data\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#768: FILE: arch/x86/kernel/setup_percpu.c:187:
+	printk(KERN_INFO "PERCPU: Allocating %zd bytes of per cpu data\n",
+			  size);

WARNING:LINE_SPACING: Missing a blank line after declarations
#775: FILE: arch/x86/kernel/setup_percpu.c:194:
+		int node = early_cpu_to_node(cpu);
+		if (!node_online(node) || !NODE_DATA(node)) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#775: FILE: arch/x86/kernel/setup_percpu.c:194:
+		if (!node_online(node) || !NODE_DATA(node)) {
[...]
+		else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#777: FILE: arch/x86/kernel/setup_percpu.c:196:
+			printk(KERN_INFO

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#781: FILE: arch/x86/kernel/setup_percpu.c:200:
+		}
+		else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#787: FILE: arch/x86/kernel/setup_percpu.c:206:
+
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#789: FILE: arch/x86/kernel/setup_percpu.c:208:
+	printk(KERN_DEBUG "NR_CPUS: %d, nr_cpu_ids: %d, nr_node_ids %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#790: FILE: arch/x86/kernel/setup_percpu.c:209:
+	printk(KERN_DEBUG "NR_CPUS: %d, nr_cpu_ids: %d, nr_node_ids %d\n",
+		NR_CPUS, nr_cpu_ids, nr_node_ids);

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#790: FILE: arch/x86/kernel/setup_percpu.c:209:
+		NR_CPUS, nr_cpu_ids, nr_node_ids);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#822: FILE: arch/x86/kernel/setup_percpu.c:241:
+		free_early(pa_data, pa_data+sizeof(*data)+data->len);
 		                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#822: FILE: arch/x86/kernel/setup_percpu.c:241:
+		free_early(pa_data, pa_data+sizeof(*data)+data->len);
 		                                         ^

CHECK:CAMELCASE: Avoid CamelCase: <Dprintk>
#852: FILE: arch/x86/kernel/setup_percpu.c:271:
+	Dprintk(KERN_DEBUG "Node to cpumask map at %p for %d nodes\n",

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!node_to_cpumask_map"
#904: FILE: arch/x86/kernel/setup_percpu.c:323:
+	if (node_to_cpumask_map == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#905: FILE: arch/x86/kernel/setup_percpu.c:324:
+		printk(KERN_ERR "node_to_cpumask_map NULL\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#917: FILE: arch/x86/kernel/setup_percpu.c:336:
+	printk(KERN_DEBUG "%s cpu %d node %d: mask now %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#918: FILE: arch/x86/kernel/setup_percpu.c:337:
+	printk(KERN_DEBUG "%s cpu %d node %d: mask now %s\n",
+		enable? "numa_add_cpu":"numa_remove_cpu", cpu, node, buf);

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#918: FILE: arch/x86/kernel/setup_percpu.c:337:
+		enable? "numa_add_cpu":"numa_remove_cpu", cpu, node, buf);
 		      ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#918: FILE: arch/x86/kernel/setup_percpu.c:337:
+		enable? "numa_add_cpu":"numa_remove_cpu", cpu, node, buf);
 		                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#919: FILE: arch/x86/kernel/setup_percpu.c:338:
+ }$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#934: FILE: arch/x86/kernel/setup_percpu.c:353:
+		printk(KERN_WARNING

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cpu_to_node', this function's name, in a string
#935: FILE: arch/x86/kernel/setup_percpu.c:354:
+			"cpu_to_node(%d): usage too early!\n", cpu);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#953: FILE: arch/x86/kernel/setup_percpu.c:372:
+		printk(KERN_WARNING

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'early_cpu_to_node', this function's name, in a string
#954: FILE: arch/x86/kernel/setup_percpu.c:373:
+			"early_cpu_to_node(%d): no per_cpu area!\n", cpu);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!node_to_cpumask_map"
#966: FILE: arch/x86/kernel/setup_percpu.c:385:
+	if (node_to_cpumask_map == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#967: FILE: arch/x86/kernel/setup_percpu.c:386:
+		printk(KERN_WARNING

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '_node_to_cpumask_ptr', this function's name, in a string
#968: FILE: arch/x86/kernel/setup_percpu.c:387:
+			"_node_to_cpumask_ptr(%d): no node_to_cpumask_map!\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#973: FILE: arch/x86/kernel/setup_percpu.c:392:
+	BUG_ON(node >= nr_node_ids);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!node_to_cpumask_map"
#983: FILE: arch/x86/kernel/setup_percpu.c:402:
+	if (node_to_cpumask_map == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#984: FILE: arch/x86/kernel/setup_percpu.c:403:
+		printk(KERN_WARNING

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'node_to_cpumask', this function's name, in a string
#985: FILE: arch/x86/kernel/setup_percpu.c:404:
+			"node_to_cpumask(%d): no node_to_cpumask_map!\n", node);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#989: FILE: arch/x86/kernel/setup_percpu.c:408:
+	BUG_ON(node >= nr_node_ids);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1028: FILE: arch/x86/kernel/setup_percpu.c:447:
+	ret = parse_crashkernel(boot_command_line, total_mem,
+			&crash_size, &crash_base);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1031: FILE: arch/x86/kernel/setup_percpu.c:450:
+			printk(KERN_INFO "crashkernel reservation failed - "

WARNING:SPLIT_STRING: quoted string split across lines
#1032: FILE: arch/x86/kernel/setup_percpu.c:451:
+			printk(KERN_INFO "crashkernel reservation failed - "
+					"you have to specify a base address\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1037: FILE: arch/x86/kernel/setup_percpu.c:456:
+		if (reserve_bootmem_generic(crash_base, crash_size,
+					BOOTMEM_EXCLUSIVE) < 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1038: FILE: arch/x86/kernel/setup_percpu.c:457:
+			printk(KERN_INFO "crashkernel reservation failed - "

WARNING:SPLIT_STRING: quoted string split across lines
#1039: FILE: arch/x86/kernel/setup_percpu.c:458:
+			printk(KERN_INFO "crashkernel reservation failed - "
+					"memory is in use\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1043: FILE: arch/x86/kernel/setup_percpu.c:462:
+		printk(KERN_INFO "Reserving %ldMB of memory at %ldMB "

WARNING:SPLIT_STRING: quoted string split across lines
#1044: FILE: arch/x86/kernel/setup_percpu.c:463:
+		printk(KERN_INFO "Reserving %ldMB of memory at %ldMB "
+				"for crashkernel (System RAM: %ldMB)\n",

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1090: FILE: arch/x86/kernel/setup_percpu.c:509:
+
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#1100: FILE: arch/x86/kernel/setup_percpu.c:519:
+	char *end;
+	if (!arg)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1105: FILE: arch/x86/kernel/setup_percpu.c:524:
+}
+early_param("elfcorehdr", setup_elfcorehdr);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000263248.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 30 warnings, 20 checks, 525 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000263248.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
