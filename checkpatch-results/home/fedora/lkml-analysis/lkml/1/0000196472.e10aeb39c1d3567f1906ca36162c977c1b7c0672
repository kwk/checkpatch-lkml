WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
This patch adds a driver for support errors reported by i5400 MCH chipset (Seaburg)

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#51: FILE: drivers/edac/Kconfig:112:
+config EDAC_I5400
+	tristate "Intel 5400 (Seaburg) chipsets"
+	depends on EDAC_MM_EDAC && PCI && X86
+	help
+	  Support for error detection and correction the Intel
+	  i5400 MCH chipset (Seaburg).
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#74: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#79: FILE: drivers/edac/i5400_edac.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#97: FILE: drivers/edac/i5400_edac.c:19:
+ * ^Ihttp://developer.intel.com/design/chipsets/datashts/313070.htm$

ERROR:DATE_TIME: Use of the '__DATE__' macro makes the build non-deterministic
#114: FILE: drivers/edac/i5400_edac.c:36:
+#define I5400_REVISION    " Ver: 1.0.0 " __DATE__

It is generally desirable that building the same source code with
the same set of tools is reproducible, i.e. the output is always
exactly the same.

The kernel does *not* use the ``__DATE__`` and ``__TIME__`` macros,
and enables warnings if they are used as they can lead to
non-deterministic builds.

See: https://www.kernel.org/doc/html/latest/kbuild/reproducible-builds.html#timestamps

WARNING:LONG_LINE_COMMENT: line length of 116 exceeds 100 columns
#150: FILE: drivers/edac/i5400_edac.c:72:
+#define			REC_ECC_LOCATOR_ODD(x)	((x) & 0x3fe00) /* bits [17:9] indicate ODD, [8:0]  indicate EVEN */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#158: FILE: drivers/edac/i5400_edac.c:80:
+#define			FERR_FAT_FBDCHAN (3<<28)	/* channel index where the highest-order error occurred */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#158: FILE: drivers/edac/i5400_edac.c:80:
+#define			FERR_FAT_FBDCHAN (3<<28)	/* channel index where the highest-order error occurred */
        			                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#219: FILE: drivers/edac/i5400_edac.c:141:
+	EMASK_M1  = 1<<0,  /* Memory Write error on non-redundant retry */
 	             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#220: FILE: drivers/edac/i5400_edac.c:142:
+	EMASK_M2  = 1<<1,  /* Memory or FB-DIMM configuration CRC read error */
 	             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#221: FILE: drivers/edac/i5400_edac.c:143:
+	EMASK_M3  = 1<<2,  /* Reserved */
 	             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#222: FILE: drivers/edac/i5400_edac.c:144:
+	EMASK_M4  = 1<<3,  /* Uncorrectable Data ECC on Replay */
 	             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#223: FILE: drivers/edac/i5400_edac.c:145:
+	EMASK_M5  = 1<<4,  /* Aliased Uncorrectable Non-Mirrored Demand Data ECC */
 	             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#224: FILE: drivers/edac/i5400_edac.c:146:
+	EMASK_M6  = 1<<5,  /* Unsupported on i5400 */
 	             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#225: FILE: drivers/edac/i5400_edac.c:147:
+	EMASK_M7  = 1<<6,  /* Aliased Uncorrectable Resilver- or Spare-Copy Data ECC */
 	             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#226: FILE: drivers/edac/i5400_edac.c:148:
+	EMASK_M8  = 1<<7,  /* Aliased Uncorrectable Patrol Data ECC */
 	             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#227: FILE: drivers/edac/i5400_edac.c:149:
+	EMASK_M9  = 1<<8,  /* Non-Aliased Uncorrectable Non-Mirrored Demand Data ECC */
 	             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#228: FILE: drivers/edac/i5400_edac.c:150:
+	EMASK_M10 = 1<<9,  /* Unsupported on i5400 */
 	             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#229: FILE: drivers/edac/i5400_edac.c:151:
+	EMASK_M11 = 1<<10, /* Non-Aliased Uncorrectable Resilver- or Spare-Copy Data ECC  */
 	             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#230: FILE: drivers/edac/i5400_edac.c:152:
+	EMASK_M12 = 1<<11, /* Non-Aliased Uncorrectable Patrol Data ECC */
 	             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#231: FILE: drivers/edac/i5400_edac.c:153:
+	EMASK_M13 = 1<<12, /* Memory Write error on first attempt */
 	             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#232: FILE: drivers/edac/i5400_edac.c:154:
+	EMASK_M14 = 1<<13, /* FB-DIMM Configuration Write error on first attempt */
 	             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#233: FILE: drivers/edac/i5400_edac.c:155:
+	EMASK_M15 = 1<<14, /* Memory or FB-DIMM configuration CRC read error */
 	             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#234: FILE: drivers/edac/i5400_edac.c:156:
+	EMASK_M16 = 1<<15, /* Channel Failed-Over Occurred */
 	             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#235: FILE: drivers/edac/i5400_edac.c:157:
+	EMASK_M17 = 1<<16, /* Correctable Non-Mirrored Demand Data ECC */
 	             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#236: FILE: drivers/edac/i5400_edac.c:158:
+	EMASK_M18 = 1<<17, /* Unsupported on i5400 */
 	             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#237: FILE: drivers/edac/i5400_edac.c:159:
+	EMASK_M19 = 1<<18, /* Correctable Resilver- or Spare-Copy Data ECC */
 	             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#238: FILE: drivers/edac/i5400_edac.c:160:
+	EMASK_M20 = 1<<19, /* Correctable Patrol Data ECC */
 	             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#239: FILE: drivers/edac/i5400_edac.c:161:
+	EMASK_M21 = 1<<20, /* FB-DIMM Northbound parity error on FB-DIMM Sync Status */
 	             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#240: FILE: drivers/edac/i5400_edac.c:162:
+	EMASK_M22 = 1<<21, /* SPD protocol Error */
 	             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#241: FILE: drivers/edac/i5400_edac.c:163:
+	EMASK_M23 = 1<<22, /* Non-Redundant Fast Reset Timeout */
 	             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#242: FILE: drivers/edac/i5400_edac.c:164:
+	EMASK_M24 = 1<<23, /* Refresh error */
 	             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#243: FILE: drivers/edac/i5400_edac.c:165:
+	EMASK_M25 = 1<<24, /* Memory Write error on redundant retry */
 	             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#244: FILE: drivers/edac/i5400_edac.c:166:
+	EMASK_M26 = 1<<25, /* Redundant Fast Reset Timeout */
 	             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#245: FILE: drivers/edac/i5400_edac.c:167:
+	EMASK_M27 = 1<<26, /* Correctable Counter Threshold Exceeded */
 	             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#246: FILE: drivers/edac/i5400_edac.c:168:
+	EMASK_M28 = 1<<27, /* DIMM-Spare Copy Completed */
 	             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#247: FILE: drivers/edac/i5400_edac.c:169:
+	EMASK_M29 = 1<<28, /* DIMM-Isolation Completed */
 	             ^

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#253: FILE: drivers/edac/i5400_edac.c:175:
+static const char *error_name[] = {

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#375: FILE: drivers/edac/i5400_edac.c:297:
+	return (x>>28) & 0x3;
 	         ^

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#380: FILE: drivers/edac/i5400_edac.c:302:
+static const char *numrow_toString[] = {

CHECK:CAMELCASE: Avoid CamelCase: <numrow_toString>
#380: FILE: drivers/edac/i5400_edac.c:302:
+static const char *numrow_toString[] = {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#388: FILE: drivers/edac/i5400_edac.c:310:
+static const char *numcol_toString[] = {

CHECK:CAMELCASE: Avoid CamelCase: <numcol_toString>
#388: FILE: drivers/edac/i5400_edac.c:310:
+static const char *numcol_toString[] = {

WARNING:TYPO_SPELLING: 'Technlogy' may be misspelled - perhaps 'Technology'?
#428: FILE: drivers/edac/i5400_edac.c:350:
+	u16 b0_mtr[NUM_MTRS_PER_BRANCH];	/* Memory Technlogy Reg */
 	                                	          ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'Brnach' may be misspelled - perhaps 'Branch'?
#430: FILE: drivers/edac/i5400_edac.c:352:
+	u16 b0_ambpresent1;			/* Brnach 0, Channel 1 */
 	                   			   ^^^^^^

WARNING:TYPO_SPELLING: 'Technlogy' may be misspelled - perhaps 'Technology'?
#432: FILE: drivers/edac/i5400_edac.c:354:
+	u16 b1_mtr[NUM_MTRS_PER_BRANCH];	/* Memory Technlogy Reg */
 	                                	          ^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#464: FILE: drivers/edac/i5400_edac.c:386:
+/* note that nrec_rdwr changed from NRECMEMA to NRECMEMB between the 5000 and
+   5400 better to use an inline function than a macro in this case */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#464: FILE: drivers/edac/i5400_edac.c:386:
+   5400 better to use an inline function than a macro in this case */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#469: FILE: drivers/edac/i5400_edac.c:391:
+}
+static inline int nrec_rank(struct i5400_error_info *info)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#473: FILE: drivers/edac/i5400_edac.c:395:
+}
+static inline int nrec_buf_id(struct i5400_error_info *info)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#477: FILE: drivers/edac/i5400_edac.c:399:
+}
+static inline int nrec_rdwr(struct i5400_error_info *info)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#481: FILE: drivers/edac/i5400_edac.c:403:
+}
+/* This applies to both NREC and REC string so it can be used with nrec_rdwr

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#482: FILE: drivers/edac/i5400_edac.c:404:
+/* This applies to both NREC and REC string so it can be used with nrec_rdwr
+   and rec_rdwr */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#482: FILE: drivers/edac/i5400_edac.c:404:
+   and rec_rdwr */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#487: FILE: drivers/edac/i5400_edac.c:409:
+}
+static inline int nrec_cas(struct i5400_error_info *info)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#491: FILE: drivers/edac/i5400_edac.c:413:
+}
+static inline int nrec_ras(struct i5400_error_info *info)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#495: FILE: drivers/edac/i5400_edac.c:417:
+}
+static inline int rec_bank(struct i5400_error_info *info)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#499: FILE: drivers/edac/i5400_edac.c:421:
+}
+static inline int rec_rank(struct i5400_error_info *info)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#503: FILE: drivers/edac/i5400_edac.c:425:
+}
+static inline int rec_rdwr(struct i5400_error_info *info)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#507: FILE: drivers/edac/i5400_edac.c:429:
+}
+static inline int rec_cas(struct i5400_error_info *info)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#511: FILE: drivers/edac/i5400_edac.c:433:
+}
+static inline int rec_ras(struct i5400_error_info *info)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#539: FILE: drivers/edac/i5400_edac.c:461:
+	/* If there is an error, then read in the
+	   NEXT FATAL error register and the Memory Error Log Register A

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#546: FILE: drivers/edac/i5400_edac.c:468:
+		pci_read_config_dword(pvt->branchmap_werrors,
+				NERR_FAT_FBD, &info->nerr_fat_fbd);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#548: FILE: drivers/edac/i5400_edac.c:470:
+		pci_read_config_word(pvt->branchmap_werrors,
+				NRECMEMA, &info->nrecmema);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#550: FILE: drivers/edac/i5400_edac.c:472:
+		pci_read_config_word(pvt->branchmap_werrors,
+				NRECMEMB, &info->nrecmemb);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#554: FILE: drivers/edac/i5400_edac.c:476:
+		pci_write_config_dword(pvt->branchmap_werrors,
+				FERR_FAT_FBD, value);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#566: FILE: drivers/edac/i5400_edac.c:488:
+	 * register as well */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#572: FILE: drivers/edac/i5400_edac.c:494:
+		pci_read_config_dword(pvt->branchmap_werrors,
+				NERR_NF_FBD, &info->nerr_nf_fbd);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#574: FILE: drivers/edac/i5400_edac.c:496:
+		pci_read_config_word(pvt->branchmap_werrors,
+				RECMEMA, &info->recmema);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#576: FILE: drivers/edac/i5400_edac.c:498:
+		pci_read_config_dword(pvt->branchmap_werrors,
+				RECMEMB, &info->recmemb);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#578: FILE: drivers/edac/i5400_edac.c:500:
+		pci_read_config_dword(pvt->branchmap_werrors,
+				REDMEMB, &info->redmemb);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#582: FILE: drivers/edac/i5400_edac.c:504:
+		pci_write_config_dword(pvt->branchmap_werrors,
+				FERR_NF_FBD, value);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#594: FILE: drivers/edac/i5400_edac.c:516:
+ * ^I^I^I^I^Istruct i5400_error_info *info,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#595: FILE: drivers/edac/i5400_edac.c:517:
+ * ^I^I^I^I^Iint handle_errors);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#600: FILE: drivers/edac/i5400_edac.c:522:
+static void i5400_proccess_non_recoverable_info(struct mem_ctl_info *mci,
+				    struct i5400_error_info *info,

CHECK:CAMELCASE: Avoid CamelCase: <allErrors>
#601: FILE: drivers/edac/i5400_edac.c:523:
+				    unsigned long allErrors)

WARNING:SPLIT_STRING: quoted string split across lines
#638: FILE: drivers/edac/i5400_edac.c:560:
+	debugf0("\t\tCSROW= %d  Channels= %d,%d  (Branch= %d "
+		"DRAM Bank= %d Buffer ID = %d rdwr= %s ras= %d cas= %d)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#648: FILE: drivers/edac/i5400_edac.c:570:
+		 "%s (Branch=%d DRAM-Bank=%d Buffer ID = %d RDWR=%s "
+		 "RAS=%d CAS=%d %s Err=0x%lx (%s))",

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#658: FILE: drivers/edac/i5400_edac.c:580:
+ * ^I^I^I^Istruct i5400_error_info *info,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#659: FILE: drivers/edac/i5400_edac.c:581:
+ * ^I^I^I^Iint handle_errors);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#664: FILE: drivers/edac/i5400_edac.c:586:
+static void i5400_process_nonfatal_error_info(struct mem_ctl_info *mci,
+					struct i5400_error_info *info)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#699: FILE: drivers/edac/i5400_edac.c:621:
+		 * from branch base of 0 */

WARNING:SPLIT_STRING: quoted string split across lines
#712: FILE: drivers/edac/i5400_edac.c:634:
+		debugf0("\t\tCSROW= %d Channel= %d  (Branch %d "
+			"DRAM Bank= %d rdwr= %s ras= %d cas= %d)\n",

WARNING:SPLIT_STRING: quoted string split across lines
#719: FILE: drivers/edac/i5400_edac.c:641:
+			 "Corrected error (Branch=%d DRAM-Bank=%d RDWR=%s "
+			 "RAS=%d CAS=%d, CE Err=0x%lx (%s))",

WARNING:TYPO_SPELLING: 'Miscelaneous' may be misspelled - perhaps 'Miscellaneous'?
#729: FILE: drivers/edac/i5400_edac.c:651:
+	/* Miscelaneous errors */
 	   ^^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#744: FILE: drivers/edac/i5400_edac.c:666:
+static void i5400_process_error_info(struct mem_ctl_info *mci,
+				struct i5400_error_info *info)

WARNING:LINE_SPACING: Missing a blank line after declarations
#775: FILE: drivers/edac/i5400_edac.c:697:
+	struct i5400_error_info info;
+	debugf4("MC%d: " __FILE__ ": %s()\n", mci->mc_idx, __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#822: FILE: drivers/edac/i5400_edac.c:744:
+			i5400_printk(KERN_ERR,
+				"'system address,Process Bus' "

WARNING:SPLIT_STRING: quoted string split across lines
#823: FILE: drivers/edac/i5400_edac.c:745:
+				"'system address,Process Bus' "
+				"device not found:"

WARNING:SPLIT_STRING: quoted string split across lines
#824: FILE: drivers/edac/i5400_edac.c:746:
+				"device not found:"
+				"vendor 0x%x device 0x%x ERR funcs "

WARNING:SPLIT_STRING: quoted string split across lines
#825: FILE: drivers/edac/i5400_edac.c:747:
+				"vendor 0x%x device 0x%x ERR funcs "
+				"(broken BIOS?)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#856: FILE: drivers/edac/i5400_edac.c:778:
+		i5400_printk(KERN_ERR,
+			"MC: 'BRANCH 0' device not found:"

WARNING:SPLIT_STRING: quoted string split across lines
#857: FILE: drivers/edac/i5400_edac.c:779:
+			"MC: 'BRANCH 0' device not found:"
+			"vendor 0x%x device 0x%x Func 0 (broken BIOS?)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#872: FILE: drivers/edac/i5400_edac.c:794:
+		i5400_printk(KERN_ERR,
+			"MC: 'BRANCH 1' device not found:"

WARNING:SPLIT_STRING: quoted string split across lines
#873: FILE: drivers/edac/i5400_edac.c:795:
+			"MC: 'BRANCH 1' device not found:"
+			"vendor 0x%x device 0x%x Func 0 "

WARNING:SPLIT_STRING: quoted string split across lines
#874: FILE: drivers/edac/i5400_edac.c:796:
+			"vendor 0x%x device 0x%x Func 0 "
+			"(broken BIOS?)\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#930: FILE: drivers/edac/i5400_edac.c:852:
+	/* There is one MTR for each slot pair of FB-DIMMs,
+	   Each slot may have one or two ranks (2 csrows),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#975: FILE: drivers/edac/i5400_edac.c:897:
+static void handle_channel(struct i5400_pvt *pvt, int csrow, int channel,
+			struct i5400_dimm_info *dinfo)

CHECK:CAMELCASE: Avoid CamelCase: <addrBits>
#979: FILE: drivers/edac/i5400_edac.c:901:
+	int addrBits;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dinfo->dual_rank == 0'
#989: FILE: drivers/edac/i5400_edac.c:911:
+			if (!((dinfo->dual_rank == 0) &&
+				((csrow & 0x1) == 0x1))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#990: FILE: drivers/edac/i5400_edac.c:912:
+			if (!((dinfo->dual_rank == 0) &&
+				((csrow & 0x1) == 0x1))) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#992: FILE: drivers/edac/i5400_edac.c:914:
+				 * on the DRAM */

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1025: FILE: drivers/edac/i5400_edac.c:947:
+	mem_buffer = p = kmalloc(space, GFP_KERNEL);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p"
#1026: FILE: drivers/edac/i5400_edac.c:948:
+	if (p == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1028: FILE: drivers/edac/i5400_edac.c:950:
+		i5400_printk(KERN_ERR, "MC: %s:%s() kmalloc() failed\n",
+			__FILE__, __func__);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1039: FILE: drivers/edac/i5400_edac.c:961:
+	for (csrow = max_csrows - 1; csrow >= 0; csrow--) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1041: FILE: drivers/edac/i5400_edac.c:963:
+		 * then reset the message buffer  */

WARNING:SPLIT_STRING: quoted string split across lines
#1044: FILE: drivers/edac/i5400_edac.c:966:
+			n = snprintf(p, space, "---------------------------"
+					"--------------------------------");

WARNING:SPLIT_STRING: quoted string split across lines
#1069: FILE: drivers/edac/i5400_edac.c:991:
+	n = snprintf(p, space, "---------------------------"
+			"--------------------------------");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1110: FILE: drivers/edac/i5400_edac.c:1032:
+	pci_read_config_dword(pvt->system_address, AMBASE,
+			(u32 *) &pvt->ambase);

CHECK:SPACING: No space is necessary after a cast
#1110: FILE: drivers/edac/i5400_edac.c:1032:
+			(u32 *) &pvt->ambase);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1112: FILE: drivers/edac/i5400_edac.c:1034:
+	pci_read_config_dword(pvt->system_address, AMBASE + sizeof(u32),
+			((u32 *) &pvt->ambase) + sizeof(u32));

CHECK:SPACING: No space is necessary after a cast
#1112: FILE: drivers/edac/i5400_edac.c:1034:
+			((u32 *) &pvt->ambase) + sizeof(u32));

WARNING:MISORDERED_TYPE: type 'long unsigned int' should be specified in [[un]signed] [short|int|long|long long] order
#1118: FILE: drivers/edac/i5400_edac.c:1040:
+		(long unsigned int)pvt->ambase, pvt->maxch, pvt->maxdimmperch);

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'long unsigned int' as the int is unnecessary
#1118: FILE: drivers/edac/i5400_edac.c:1040:
+		(long unsigned int)pvt->ambase, pvt->maxch, pvt->maxdimmperch);

CHECK:SPACING: No space is necessary after a cast
#1126: FILE: drivers/edac/i5400_edac.c:1048:
+	actual_tolm = (u32) ((1000l * pvt->tolm) >> (30 - 28));

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1128: FILE: drivers/edac/i5400_edac.c:1050:
+		actual_tolm/1000, actual_tolm % 1000, pvt->tolm << 28);
 		           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1149: FILE: drivers/edac/i5400_edac.c:1071:
+		pci_read_config_word(pvt->branch_0, where,
+				&pvt->b0_mtr[slot_row]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1161: FILE: drivers/edac/i5400_edac.c:1083:
+		pci_read_config_word(pvt->branch_1, where,
+				&pvt->b1_mtr[slot_row]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1173: FILE: drivers/edac/i5400_edac.c:1095:
+	pci_read_config_word(pvt->branch_0, AMBPRESENT_0,
+			&pvt->b0_ambpresent0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1176: FILE: drivers/edac/i5400_edac.c:1098:
+	pci_read_config_word(pvt->branch_0, AMBPRESENT_1,
+			&pvt->b0_ambpresent1);

WARNING:TYPO_SPELLING: 'branchs' may be misspelled - perhaps 'branches'?
#1179: FILE: drivers/edac/i5400_edac.c:1101:
+	/* Only if we have 2 branchs (4 channels) */
 	                     ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1190: FILE: drivers/edac/i5400_edac.c:1112:
+		pci_read_config_word(pvt->branch_1, AMBPRESENT_0,
+				&pvt->b1_ambpresent0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1194: FILE: drivers/edac/i5400_edac.c:1116:
+		pci_read_config_word(pvt->branch_1, AMBPRESENT_1,
+				&pvt->b1_ambpresent1);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1200: FILE: drivers/edac/i5400_edac.c:1122:
+	 * orderly matrix */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1286: FILE: drivers/edac/i5400_edac.c:1208:
+	pci_read_config_dword(pvt->branchmap_werrors, EMASK_FBD,
+			&fbd_error_mask);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1292: FILE: drivers/edac/i5400_edac.c:1214:
+	pci_write_config_dword(pvt->branchmap_werrors, EMASK_FBD,
+			fbd_error_mask);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1302: FILE: drivers/edac/i5400_edac.c:1224:
+static void i5400_get_dimm_and_channel_counts(struct pci_dev *pdev,
+					int *num_dimms_per_channel,

WARNING:REPEATED_WORD: Possible repeated word: 'have'
#1353: FILE: drivers/edac/i5400_edac.c:1275:
+	 * resource as specified by the chipset. Thus, we might have
+	 * have more DIMMs per channel than actually on the mobo, but this

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#1354: FILE: drivers/edac/i5400_edac.c:1276:
+	 * allows the driver to support upto the chipset max, without
 	                                ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1358: FILE: drivers/edac/i5400_edac.c:1280:
+	i5400_get_dimm_and_channel_counts(pdev, &num_dimms_per_channel,
+					&num_channels);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mci"
#1367: FILE: drivers/edac/i5400_edac.c:1289:
+	if (mci == NULL)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1400: FILE: drivers/edac/i5400_edac.c:1322:
+	 * with the mapping and control information */

WARNING:SPLIT_STRING: quoted string split across lines
#1404: FILE: drivers/edac/i5400_edac.c:1326:
+			"    because i5400_init_csrows() returned nonzero "
+			"value\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1426: FILE: drivers/edac/i5400_edac.c:1348:
+		printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1429: FILE: drivers/edac/i5400_edac.c:1351:
+		printk(KERN_WARNING

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1449: FILE: drivers/edac/i5400_edac.c:1371:
+ * ^Ireturns:$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1453: FILE: drivers/edac/i5400_edac.c:1375:
+static int __devinit i5400_init_one(struct pci_dev *pdev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1454: FILE: drivers/edac/i5400_edac.c:1376:
+static int __devinit i5400_init_one(struct pci_dev *pdev,
+				const struct pci_device_id *id)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1473: FILE: drivers/edac/i5400_edac.c:1395:
+static void __devexit i5400_remove_one(struct pci_dev *pdev)

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1477: FILE: drivers/edac/i5400_edac.c:1399:
+	debugf0(__FILE__ ": %s()\n", __func__);

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1497: FILE: drivers/edac/i5400_edac.c:1419:
+static const struct pci_device_id i5400_pci_tbl[] __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#1497: FILE: drivers/edac/i5400_edac.c:1419:
+static const struct pci_device_id i5400_pci_tbl[] __devinitdata = {

Const init definitions should use __initconst instead of
__initdata.

Similarly init definitions without const require a separate
use of const.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000196472.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 56 warnings, 86 checks, 1496 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000196472.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
