WARNING:TYPO_SPELLING: 'avaiable' may be misspelled - perhaps 'available'?
#47: 
dmar engine avaiable.
            ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#65: FILE: drivers/char/agp/Kconfig:77:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#113: FILE: drivers/char/agp/intel-agp.c:138:
+		*ret = pci_map_single(intel_private.pcidev, virt, PAGE_SIZE,
+				PCI_DMA_BIDIRECTIONAL);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#121: FILE: drivers/char/agp/intel-agp.c:146:
+	if ((mem->page_count * sizeof(*mem->sg_list)) < 2*PAGE_SIZE)
+	    mem->sg_list = kcalloc(mem->page_count, sizeof(*mem->sg_list), GFP_KERNEL);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#121: FILE: drivers/char/agp/intel-agp.c:146:
+	if ((mem->page_count * sizeof(*mem->sg_list)) < 2*PAGE_SIZE)
 	                                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#124: FILE: drivers/char/agp/intel-agp.c:149:
+	if (mem->sg_list == NULL) {
+	    mem->sg_list = vmalloc(mem->page_count * sizeof(*mem->sg_list));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mem->sg_list"
#124: FILE: drivers/char/agp/intel-agp.c:149:
+	if (mem->sg_list == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#129: FILE: drivers/char/agp/intel-agp.c:154:
+	if (!mem->sg_list) {
+	    mem->sg_vmalloc_flag = 0;

WARNING:TABSTOP: Statements should start on a tabstop
#131: FILE: drivers/char/agp/intel-agp.c:156:
+	    return -ENOMEM;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: drivers/char/agp/intel-agp.c:165:
+	mem->num_sg = pci_map_sg(intel_private.pcidev, mem->sg_list,
+					mem->page_count, PCI_DMA_BIDIRECTIONAL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#158: FILE: drivers/char/agp/intel-agp.c:183:
+		pci_unmap_single(intel_private.pcidev, addr, PAGE_SIZE,
+				PCI_DMA_BIDIRECTIONAL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#168: FILE: drivers/char/agp/intel-agp.c:193:
+		pci_unmap_sg(intel_private.pcidev, mem->sg_list, mem->page_count,
+				PCI_DMA_BIDIRECTIONAL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: drivers/char/agp/intel-agp.c:205:
+    return 0;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#182: FILE: drivers/char/agp/intel-agp.c:207:
+}
+static void intel_agp_unmap_pages(struct agp_memory *mem, dma_addr_t addr, int is_single)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#198: FILE: drivers/char/agp/intel-agp.c:945:
+	 * and workaround is not applied. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#206: FILE: drivers/char/agp/intel-agp.c:953:
+				writel(agp_bridge->driver->mask_memory(agp_bridge,
+							sg_dma_address(sg),

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#208: FILE: drivers/char/agp/intel-agp.c:955:
+						intel_private.gtt+j);
 						                 ^

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#212: FILE: drivers/char/agp/intel-agp.c:959:
+			/* sg may merge pages, but we have to seperate
 			                                      ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#213: FILE: drivers/char/agp/intel-agp.c:960:
+			 * per-page addr for GTT */

WARNING:LINE_SPACING: Missing a blank line after declarations
#215: FILE: drivers/char/agp/intel-agp.c:962:
+			unsigned int len, m;
+			for_each_sg(mem->sg_list, sg, mem->num_sg, i) {

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#219: FILE: drivers/char/agp/intel-agp.c:966:
+								sg_dma_address(sg) + m * PAGE_SIZE, mask_type),

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#219: FILE: drivers/char/agp/intel-agp.c:966:
+					writel(agp_bridge->driver->mask_memory(agp_bridge,
+								sg_dma_address(sg) + m * PAGE_SIZE, mask_type),

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#220: FILE: drivers/char/agp/intel-agp.c:967:
+							intel_private.gtt+j);
 							                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#228: FILE: drivers/char/agp/intel-agp.c:975:
+			writel(agp_bridge->driver->mask_memory(agp_bridge,
+						mem->memory[i], mask_type),

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#229: FILE: drivers/char/agp/intel-agp.c:976:
+					intel_private.gtt+j);
 					                 ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000345778.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 11 warnings, 13 checks, 176 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000345778.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
