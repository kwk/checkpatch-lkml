CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#60: FILE: include/linux/sched.h:328:
+extern long schedule_timeout_range(long timeout, long deadline);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#61: FILE: include/linux/sched.h:329:
+extern long schedule_timeout_range_interruptible(long timeout, long deadline);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#62: FILE: include/linux/sched.h:330:
+extern long schedule_timeout_range_killable(long timeout, long deadline);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#63: FILE: include/linux/sched.h:331:
+extern long schedule_timeout_range_uninterruptible(long timeout, long deadline);

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_t' - possible side-effects?
#66: FILE: include/linux/sched.h:334:
+#define schedule_timeout(_t) schedule_timeout_range((_t), (_t))

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_t' - possible side-effects?
#67: FILE: include/linux/sched.h:335:
+#define schedule_timeout_interruptible(_t) \
+	schedule_timeout_range_interruptible((_t), (_t))

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_t' - possible side-effects?
#69: FILE: include/linux/sched.h:337:
+#define schedule_timeout_killable(_t) \
+	schedule_timeout_range_killable((_t), (_t))

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_t' - possible side-effects?
#71: FILE: include/linux/sched.h:339:
+#define schedule_timeout_uninterruptible(_t) \
+	schedule_timeout_range_uninterruptible((_t), (_t))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#156: FILE: kernel/timer.c:1201:
+		printk(KERN_ERR "schedule_timeout: wrong timeout "

WARNING:SPLIT_STRING: quoted string split across lines
#157: FILE: kernel/timer.c:1202:
+		printk(KERN_ERR "schedule_timeout: wrong timeout "
+		       "value %lx\n", timeout);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#163: FILE: kernel/timer.c:1208:
+		printk(KERN_ERR "schedule_timeout: wrong deadline "

WARNING:SPLIT_STRING: quoted string split across lines
#164: FILE: kernel/timer.c:1209:
+		printk(KERN_ERR "schedule_timeout: wrong deadline "
+		       "value %lx\n", deadline);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#170: FILE: kernel/timer.c:1215:
+		printk(KERN_ERR "schedule_timeout: deadline %lx earlier "

WARNING:SPLIT_STRING: quoted string split across lines
#171: FILE: kernel/timer.c:1216:
+		printk(KERN_ERR "schedule_timeout: deadline %lx earlier "
+		       "than initial timeout %lx\n", deadline, timeout);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#179: FILE: kernel/timer.c:1224:
+	/* Don't bother to set up the deferrable timer if the deadline
+	   is at the same time */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#179: FILE: kernel/timer.c:1224:
+	   is at the same time */

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: kernel/timer.c:1232:
+ ^Iif (deadline != MAX_SCHEDULE_TIMEOUT) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#187: FILE: kernel/timer.c:1232:
+ ^Iif (deadline != MAX_SCHEDULE_TIMEOUT) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: kernel/timer.c:1232:
+ ^Iif (deadline != MAX_SCHEDULE_TIMEOUT) {$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000251353.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 10 warnings, 8 checks, 197 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000251353.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
