WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#51: 
The following changes since commit 1f31834fbbb8de367914f044d3268c6afbfdd783:

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '1f31834fbbb8de367914f044d3268c6afbfdd783', maybe rebased or not pulled?
#51: 
The following changes since commit 1f31834fbbb8de367914f044d3268c6afbfdd783:

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#90: FILE: arch/x86/kernel/cpu/intel.c:1:
+#include <linux/thread_info.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/topology.h> instead of <asm/topology.h>
#106: FILE: arch/x86/kernel/cpu/intel.c:12:
+#include <asm/topology.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:SPLIT_STRING: quoted string split across lines
#207: FILE: arch/x86/kernel/cpu/intel.c:135:
+		pr_info("Pentium Pro with Errata#50 detected. "
+			"Taking evasive action.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->x86 == 6'
#227: FILE: arch/x86/kernel/cpu/intel.c:187:
+	if ((c->x86 == 6) && (c->x86_model == 11) && (size == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->x86_model == 11'
#227: FILE: arch/x86/kernel/cpu/intel.c:187:
+	if ((c->x86 == 6) && (c->x86_model == 11) && (size == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'size == 0'
#227: FILE: arch/x86/kernel/cpu/intel.c:187:
+	if ((c->x86 == 6) && (c->x86_model == 11) && (size == 0))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#252: FILE: arch/x86/kernel/cpu/intel.c:211:
+			printk(KERN_NOTICE "Intel Pentium with F0 0F bug - "

WARNING:SPLIT_STRING: quoted string split across lines
#253: FILE: arch/x86/kernel/cpu/intel.c:212:
+			printk(KERN_NOTICE "Intel Pentium with F0 0F bug - "
+				"workaround enabled.\n");

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#309: FILE: arch/x86/kernel/cpu/intel.c:286:
+	unsigned node;

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/smp.h> instead of <asm/smp.h>
#513: FILE: arch/x86/kernel/i8253.c:16:
+#include <asm/smp.h>

CHECK:BRACES: Unbalanced braces around else statement
#711: FILE: arch/x86/kernel/kdebugfs.c:54:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#807: FILE: arch/x86/kernel/kdebugfs.c:140:
+		} else

WARNING:SPLIT_STRING: quoted string split across lines
#1222: FILE: arch/x86/kernel/mpparse.c:868:
+		pr_info("No spare slots, try to append...take your risk, "
+			"new mpc_length %x\n", count);

WARNING:SPLIT_STRING: quoted string split across lines
#1226: FILE: arch/x86/kernel/mpparse.c:872:
+			pr_info("No spare slots, try to append..., "
+				"new mpc_length %x\n", count);

CHECK:BRACES: Unbalanced braces around else statement
#1227: FILE: arch/x86/kernel/mpparse.c:873:
+		else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1229: FILE: arch/x86/kernel/mpparse.c:875:
+			pr_err("mpc_new_length %lx is too small\n",
+				mpc_new_length);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1350: FILE: arch/x86/kernel/mpparse.c:1029:
+		pr_info("mpc_new_length is %ld, please use alloc_mptable=8k\n",
 			 mpc_new_length);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1462: FILE: arch/x86/kernel/rtc.c:19:
+volatile unsigned long cmos_lock;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1537: FILE: arch/x86/kernel/tls.c:1:
+#include <linux/uaccess.h>

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000153642.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 11 warnings, 10 checks, 1457 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000153642.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
