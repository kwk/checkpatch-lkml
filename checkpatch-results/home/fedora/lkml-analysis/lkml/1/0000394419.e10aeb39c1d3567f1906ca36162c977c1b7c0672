WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#34: FILE: fs/logfs/logfs.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#35: FILE: fs/logfs/logfs.h:2:
+ * fs/logfs/logfs.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#48: FILE: fs/logfs/logfs.h:15:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#55: FILE: fs/logfs/logfs.h:22:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#67: FILE: fs/logfs/logfs.h:34:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#75: FILE: fs/logfs/logfs.h:42:
+
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#77: FILE: fs/logfs/logfs.h:44:
+#define LOGFS_LINK_MAX		(1<<30)
                       		  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#77: FILE: fs/logfs/logfs.h:44:
+#define LOGFS_LINK_MAX		(1<<30)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#79: FILE: fs/logfs/logfs.h:46:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#93: FILE: fs/logfs/logfs.h:60:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#97: FILE: fs/logfs/logfs.h:64:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#121: FILE: fs/logfs/logfs.h:88:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#137: FILE: fs/logfs/logfs.h:104:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#152: FILE: fs/logfs/logfs.h:119:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#178: FILE: fs/logfs/logfs.h:145:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#194: FILE: fs/logfs/logfs.h:161:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#207: FILE: fs/logfs/logfs.h:174:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#222: FILE: fs/logfs/logfs.h:189:
+
+

WARNING:TYPO_SPELLING: 'creat' may be misspelled - perhaps 'create'?
#231: FILE: fs/logfs/logfs.h:198:
+	struct mutex s_dirop_mutex;		/* for creat/unlink/rename */
 	                           		       ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#267: FILE: fs/logfs/logfs.h:234:
+	struct logfs_journal_entry s_retired[JE_LAST+1]; /* for journal scan */
 	                                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#268: FILE: fs/logfs/logfs.h:235:
+	struct logfs_journal_entry s_speculative[JE_LAST+1]; /* dito */
 	                                                ^

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#274: FILE: fs/logfs/logfs.h:241:
+	struct mutex s_w_mutex;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#284: FILE: fs/logfs/logfs.h:251:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#304: FILE: fs/logfs/logfs.h:271:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#305: FILE: fs/logfs/logfs.h:272:
+#define journal_for_each(__i) for (__i=0; __i<LOGFS_JOURNAL_SEGS; __i++)
                                       ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#305: FILE: fs/logfs/logfs.h:272:
+#define journal_for_each(__i) for (__i=0; __i<LOGFS_JOURNAL_SEGS; __i++)
                                              ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse '__i' - possible side-effects?
#305: FILE: fs/logfs/logfs.h:272:
+#define journal_for_each(__i) for (__i=0; __i<LOGFS_JOURNAL_SEGS; __i++)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#307: FILE: fs/logfs/logfs.h:274:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#314: FILE: fs/logfs/logfs.h:281:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#320: FILE: fs/logfs/logfs.h:287:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#329: FILE: fs/logfs/logfs.h:296:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#335: FILE: fs/logfs/logfs.h:302:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#347: FILE: fs/logfs/logfs.h:314:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#353: FILE: fs/logfs/logfs.h:320:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#360: FILE: fs/logfs/logfs.h:327:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#364: FILE: fs/logfs/logfs.h:331:
+int logfs_inode_write(struct inode *inode, const void *buf, size_t n,
+		loff_t pos, int lock, struct logfs_transaction *ta);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#367: FILE: fs/logfs/logfs.h:334:
+int logfs_write_buf(struct inode *inode, pgoff_t index, void *buf, int lock,
+		struct logfs_transaction *ta);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#369: FILE: fs/logfs/logfs.h:336:
+int logfs_delete(struct inode *inode, pgoff_t index,
+		struct logfs_transaction *ta);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#381: FILE: fs/logfs/logfs.h:348:
+int logfs_segment_read(struct inode *inode, void *buf, u64 ofs, u64 pos,
+		u8 level);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#383: FILE: fs/logfs/logfs.h:350:
+s64 logfs_segment_write(struct inode *inode, void *buf, u64 pos, int level,
+		int alloc);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#399: FILE: fs/logfs/logfs.h:366:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#410: FILE: fs/logfs/logfs.h:377:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#414: FILE: fs/logfs/logfs.h:381:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#419: FILE: fs/logfs/logfs.h:386:
+	BUG();							\

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: space required before the open parenthesis '('
#420: FILE: fs/logfs/logfs.h:387:
+} while(0)

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#423: FILE: fs/logfs/logfs.h:390:
+	do { if (unlikely((condition)!=0)) LOGFS_BUG((sb)); } while(0)
 	                             ^

ERROR:SPACING: space required before the open parenthesis '('
#423: FILE: fs/logfs/logfs.h:390:
+	do { if (unlikely((condition)!=0)) LOGFS_BUG((sb)); } while(0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#425: FILE: fs/logfs/logfs.h:392:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#436: FILE: fs/logfs/logfs.h:403:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#439: FILE: fs/logfs/logfs.h:406:
+	return cpu_to_be32(crc32(~0, data+skip, len-skip));
 	                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#439: FILE: fs/logfs/logfs.h:406:
+	return cpu_to_be32(crc32(~0, data+skip, len-skip));
 	                                           ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#442: FILE: fs/logfs/logfs.h:409:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#448: FILE: fs/logfs/logfs.h:415:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#454: FILE: fs/logfs/logfs.h:421:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#456: FILE: fs/logfs/logfs.h:423:
+static inline u64 logfs_block_ofs(struct super_block *sb, u32 segno,
+		u32 blockno)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#462: FILE: fs/logfs/logfs.h:429:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#468: FILE: fs/logfs/logfs.h:435:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#470: FILE: fs/logfs/logfs.h:437:
+static inline int device_read(struct super_block *sb, u32 segno, u32 ofs,
+		size_t len, void *buf)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#477: FILE: fs/logfs/logfs.h:444:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000394419.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 5 warnings, 50 checks, 445 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000394419.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
