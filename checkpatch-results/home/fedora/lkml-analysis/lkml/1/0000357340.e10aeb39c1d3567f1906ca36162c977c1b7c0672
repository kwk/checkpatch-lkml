ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: fs/fuse/dev.c:53:
+ ^Iif (req)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#99: FILE: fs/fuse/dev.c:53:
+ ^Iif (req)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: fs/fuse/dev.c:53:
+ ^Iif (req)$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#155: FILE: fs/fuse/dir.c:1150:
+		BUG_ON(fi->writectr < 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#176: FILE: fs/fuse/dir.c:1201:
+		BUG_ON(fi->writectr != FUSE_NOWRITE);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#221: FILE: fs/fuse/file.c:231:
+		BUG_ON(req->inode != inode);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#270: FILE: fs/fuse/file.c:308:
+	BUG_ON(fi->writectr < 0);

WARNING:TYPO_SPELLING: 'liftime' may be misspelled - perhaps 'lifetime'?
#307: FILE: fs/fuse/file.c:426:
+	 * Page writeback can extend beyond the liftime of the
 	                                        ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#477: FILE: fs/fuse/file.c:908:
+	BUG_ON(!ret);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#506: FILE: fs/fuse/file.c:937:
+	BUG_ON(list_empty(&fi->write_files));

WARNING:LINE_SPACING: Missing a blank line after declarations
#551: FILE: fs/fuse/file.c:982:
+	int err = 0;
+	if (clear_page_dirty_for_io(page)) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#597: FILE: fs/fuse/file.c:1028:
+static struct vm_operations_struct fuse_file_vm_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:REPEATED_WORD: Possible repeated word: 'page'
#654: FILE: fs/fuse/fuse_i.h:29:
+/** Block page page dirtying if the number of writepages for this

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#655: FILE: fs/fuse/fuse_i.h:30:
+/** Block page page dirtying if the number of writepages for this
+    filesystem is above this threshold */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#655: FILE: fs/fuse/fuse_i.h:30:
+    filesystem is above this threshold */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#673: FILE: fs/fuse/fuse_i.h:89:
+	 * means more writes are blocked */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#766: FILE: fs/fuse/inode.c:78:
+	BUG_ON(!list_empty(&fi->queued_writes));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#840: FILE: include/linux/backing-dev.h:131:
+extern void bdi_writeout_inc(struct backing_dev_info *bdi);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000357340.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 16 warnings, 1 checks, 745 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000357340.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
