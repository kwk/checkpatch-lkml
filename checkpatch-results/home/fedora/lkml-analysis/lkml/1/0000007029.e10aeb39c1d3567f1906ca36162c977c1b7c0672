WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#371: FILE: kernel/workqueue.c:573:
+	BUG_ON(gcwq->cpu != raw_smp_processor_id());

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: braces {} should be used on all arms of this statement
#428: FILE: kernel/workqueue.c:972:
+	if (likely(!(worker->flags & WORKER_ROGUE))) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#432: FILE: kernel/workqueue.c:976:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#473: FILE: kernel/workqueue.c:1142:
+		if (time_before(jiffies, expires))
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#475: FILE: kernel/workqueue.c:1144:
+		else {

WARNING:REPEATED_WORD: Possible repeated word: 'mayday'
#493: FILE: kernel/workqueue.c:1162:
+	/* mayday mayday mayday */

WARNING:REPEATED_WORD: Possible repeated word: 'mayday'
#493: FILE: kernel/workqueue.c:1162:
+	/* mayday mayday mayday */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#562: FILE: kernel/workqueue.c:1231:
+			BUG_ON(need_to_create_worker(gcwq));

WARNING:TYPO_SPELLING: 'inbetween' may be misspelled - perhaps 'between'?
#815: FILE: kernel/workqueue.c:1685:
+		/* CPU has come up inbetween, retry migration */
 		                   ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#869: FILE: kernel/workqueue.c:1739:
+		BUG_ON(!list_empty(&rescuer->scheduled));

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#931: FILE: kernel/workqueue.c:2515:
+		wq->rescuer = rescuer = alloc_worker();

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1072: FILE: kernel/workqueue.c:2734:
+	BUG_ON(rc < 0);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1140: FILE: kernel/workqueue.c:2804:
+			if (worker) {
[...]
+			} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1144: FILE: kernel/workqueue.c:2808:
+			} else

WARNING:FUNCTION_ARGUMENTS: function definition argument 'new_worker' should also have an identifier name
#1198: FILE: kernel/workqueue.c:2890:
+	struct worker *uninitialized_var(new_worker);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1206: FILE: kernel/workqueue.c:2901:
+		/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1208: FILE: kernel/workqueue.c:2903:
+		BUG_ON(gcwq->first_idle);

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1222: FILE: kernel/workqueue.c:2922:
+		/* fall through */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1224: FILE: kernel/workqueue.c:2924:
+		BUG_ON(gcwq->first_idle);

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1239: FILE: kernel/workqueue.c:2939:
+		/* fall through */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1315: FILE: kernel/workqueue.c:3220:
+		BUG_ON(!worker);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000007029.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 14 warnings, 7 checks, 1202 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000007029.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
