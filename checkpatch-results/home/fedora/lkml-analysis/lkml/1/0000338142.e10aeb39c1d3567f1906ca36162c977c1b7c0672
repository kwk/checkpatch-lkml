WARNING:TYPO_SPELLING: 'formated' may be misspelled - perhaps 'formatted'?
#177: 
Description: Prepare a newly formated 400GB disk as follows: create
                             ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#246: FILE: fs/ext3/balloc.c:174:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: fs/ext3/balloc.c:181:
+                               struct buffer_head *bitmap_bh,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#253: FILE: fs/ext3/balloc.c:181:
+ext3_init_grp_free_nonmc_blocks(struct super_block *sb,
+                               struct buffer_head *bitmap_bh,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: fs/ext3/balloc.c:181:
+                               struct buffer_head *bitmap_bh,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: fs/ext3/balloc.c:182:
+                               unsigned long block_group)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: fs/ext3/balloc.c:182:
+                               unsigned long block_group)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: fs/ext3/balloc.c:184:
+       struct ext3_sb_info *sbi = EXT3_SB(sb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: fs/ext3/balloc.c:185:
+       struct ext3_bg_info *bgi = &sbi->s_bginfo[block_group];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: fs/ext3/balloc.c:187:
+       BUG_ON(!test_opt(sb, METACLUSTER));$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#259: FILE: fs/ext3/balloc.c:187:
+       BUG_ON(!test_opt(sb, METACLUSTER));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: fs/ext3/balloc.c:189:
+       spin_lock(sb_bgl_lock(sbi, block_group));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: fs/ext3/balloc.c:190:
+       if (bgi->bgi_free_nonmc_blocks_count >= 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#262: FILE: fs/ext3/balloc.c:190:
+       if (bgi->bgi_free_nonmc_blocks_count >= 0)
+               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#263: FILE: fs/ext3/balloc.c:191:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: fs/ext3/balloc.c:191:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: fs/ext3/balloc.c:193:
+       bgi->bgi_free_nonmc_blocks_count =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#266: FILE: fs/ext3/balloc.c:194:
+               ext3_count_free(bitmap_bh, sbi->s_nonmc_blocks_per_group/8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: fs/ext3/balloc.c:194:
+               ext3_count_free(bitmap_bh, sbi->s_nonmc_blocks_per_group/8);$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#266: FILE: fs/ext3/balloc.c:194:
+               ext3_count_free(bitmap_bh, sbi->s_nonmc_blocks_per_group/8);
                                                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: fs/ext3/balloc.c:197:
+       spin_unlock(sb_bgl_lock(sbi, block_group));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: fs/ext3/balloc.c:198:
+       BUG_ON(bgi->bgi_free_nonmc_blocks_count >$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#270: FILE: fs/ext3/balloc.c:198:
+       BUG_ON(bgi->bgi_free_nonmc_blocks_count >

ERROR:CODE_INDENT: code indent should use tabs where possible
#271: FILE: fs/ext3/balloc.c:199:
+               sbi->s_nonmc_blocks_per_group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: fs/ext3/balloc.c:199:
+               sbi->s_nonmc_blocks_per_group);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#286: FILE: fs/ext3/balloc.c:214:
+                               ext3_grpblk_t start, unsigned long count,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#286: FILE: fs/ext3/balloc.c:214:
+ext3_update_nonmc_block_count(struct ext3_sb_info *sbi, unsigned long group_no,
+                               ext3_grpblk_t start, unsigned long count,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: fs/ext3/balloc.c:214:
+                               ext3_grpblk_t start, unsigned long count,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#287: FILE: fs/ext3/balloc.c:215:
+                               int allocation)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: fs/ext3/balloc.c:215:
+                               int allocation)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: fs/ext3/balloc.c:217:
+       struct ext3_bg_info *bginfo = &sbi->s_bginfo[group_no];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: fs/ext3/balloc.c:218:
+       ext3_grpblk_t change;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: fs/ext3/balloc.c:220:
+       BUG_ON(bginfo->bgi_free_nonmc_blocks_count < 0);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#292: FILE: fs/ext3/balloc.c:220:
+       BUG_ON(bginfo->bgi_free_nonmc_blocks_count < 0);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: fs/ext3/balloc.c:221:
+       BUG_ON(start >= sbi->s_nonmc_blocks_per_group);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#293: FILE: fs/ext3/balloc.c:221:
+       BUG_ON(start >= sbi->s_nonmc_blocks_per_group);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: fs/ext3/balloc.c:223:
+       change = min_t(ext3_grpblk_t, start + count,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#296: FILE: fs/ext3/balloc.c:224:
+                       sbi->s_nonmc_blocks_per_group) - start;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#296: FILE: fs/ext3/balloc.c:224:
+       change = min_t(ext3_grpblk_t, start + count,
+                       sbi->s_nonmc_blocks_per_group) - start;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: fs/ext3/balloc.c:224:
+                       sbi->s_nonmc_blocks_per_group) - start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: fs/ext3/balloc.c:226:
+       spin_lock(sb_bgl_lock(sbi, group_no));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: fs/ext3/balloc.c:227:
+       BUG_ON(bginfo->bgi_free_nonmc_blocks_count >$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#299: FILE: fs/ext3/balloc.c:227:
+       BUG_ON(bginfo->bgi_free_nonmc_blocks_count >

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: fs/ext3/balloc.c:228:
+               sbi->s_nonmc_blocks_per_group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: fs/ext3/balloc.c:228:
+               sbi->s_nonmc_blocks_per_group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: fs/ext3/balloc.c:229:
+       BUG_ON(allocation && bginfo->bgi_free_nonmc_blocks_count < change);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#301: FILE: fs/ext3/balloc.c:229:
+       BUG_ON(allocation && bginfo->bgi_free_nonmc_blocks_count < change);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: fs/ext3/balloc.c:231:
+       bginfo->bgi_free_nonmc_blocks_count += (allocation ? -change : change);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: fs/ext3/balloc.c:233:
+       BUG_ON(bginfo->bgi_free_nonmc_blocks_count >$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#305: FILE: fs/ext3/balloc.c:233:
+       BUG_ON(bginfo->bgi_free_nonmc_blocks_count >

ERROR:CODE_INDENT: code indent should use tabs where possible
#306: FILE: fs/ext3/balloc.c:234:
+               sbi->s_nonmc_blocks_per_group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: fs/ext3/balloc.c:234:
+               sbi->s_nonmc_blocks_per_group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: fs/ext3/balloc.c:235:
+       spin_unlock(sb_bgl_lock(sbi, group_no));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: fs/ext3/balloc.c:248:
+                                       struct ext3_bg_info *bgi,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#320: FILE: fs/ext3/balloc.c:248:
+static inline int allow_mc_alloc(struct ext3_sb_info *sbi,
+                                       struct ext3_bg_info *bgi,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: fs/ext3/balloc.c:248:
+                                       struct ext3_bg_info *bgi,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#321: FILE: fs/ext3/balloc.c:249:
+                                       ext3_grpblk_t blk)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: fs/ext3/balloc.c:249:
+                                       ext3_grpblk_t blk)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: fs/ext3/balloc.c:251:
+       return !(blk >= 0 && blk >= sbi->s_nonmc_blocks_per_group &&$

ERROR:CODE_INDENT: code indent should use tabs where possible
#324: FILE: fs/ext3/balloc.c:252:
+               bgi->bgi_free_nonmc_blocks_count >= 8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: fs/ext3/balloc.c:252:
+               bgi->bgi_free_nonmc_blocks_count >= 8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: fs/ext3/balloc.c:571:
+       struct ext3_bg_info *bgi;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: fs/ext3/balloc.c:611:
+       if (test_opt(sb, METACLUSTER)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#342: FILE: fs/ext3/balloc.c:611:
+       if (test_opt(sb, METACLUSTER)) {
+               bgi = &sbi->s_bginfo[block_group];

ERROR:CODE_INDENT: code indent should use tabs where possible
#343: FILE: fs/ext3/balloc.c:612:
+               bgi = &sbi->s_bginfo[block_group];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: fs/ext3/balloc.c:612:
+               bgi = &sbi->s_bginfo[block_group];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: fs/ext3/balloc.c:613:
+               if (bgi->bgi_free_nonmc_blocks_count < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: fs/ext3/balloc.c:613:
+               if (bgi->bgi_free_nonmc_blocks_count < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#344: FILE: fs/ext3/balloc.c:613:
+               if (bgi->bgi_free_nonmc_blocks_count < 0)
+                       ext3_init_grp_free_nonmc_blocks(sb, bitmap_bh,

ERROR:CODE_INDENT: code indent should use tabs where possible
#345: FILE: fs/ext3/balloc.c:614:
+                       ext3_init_grp_free_nonmc_blocks(sb, bitmap_bh,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: fs/ext3/balloc.c:614:
+                       ext3_init_grp_free_nonmc_blocks(sb, bitmap_bh,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: fs/ext3/balloc.c:615:
+                                                       block_group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: fs/ext3/balloc.c:615:
+                                                       block_group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: fs/ext3/balloc.c:616:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: fs/ext3/balloc.c:737:
+       if (test_opt(sb, METACLUSTER) && bit < sbi->s_nonmc_blocks_per_group)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#356: FILE: fs/ext3/balloc.c:737:
+       if (test_opt(sb, METACLUSTER) && bit < sbi->s_nonmc_blocks_per_group)
+               ext3_update_nonmc_block_count(sbi, block_group, bit, count, 0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#357: FILE: fs/ext3/balloc.c:738:
+               ext3_update_nonmc_block_count(sbi, block_group, bit, count, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#357: FILE: fs/ext3/balloc.c:738:
+               ext3_update_nonmc_block_count(sbi, block_group, bit, count, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: fs/ext3/balloc.c:848:
+       ext3_grpblk_t k, blk;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: fs/ext3/balloc.c:850:
+       k = start & ~7;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: fs/ext3/balloc.c:851:
+       while (lowest <= k) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#372: FILE: fs/ext3/balloc.c:851:
+       while (lowest <= k) {
+               if (map[k/8] != '\255' &&

ERROR:CODE_INDENT: code indent should use tabs where possible
#373: FILE: fs/ext3/balloc.c:852:
+               if (map[k/8] != '\255' &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: fs/ext3/balloc.c:852:
+               if (map[k/8] != '\255' &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 31)
#373: FILE: fs/ext3/balloc.c:852:
+               if (map[k/8] != '\255' &&
[...]
+                               return blk;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#373: FILE: fs/ext3/balloc.c:852:
+               if (map[k/8] != '\255' &&
                         ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#373: FILE: fs/ext3/balloc.c:852:
+               if (map[k/8] != '\255' &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#374: FILE: fs/ext3/balloc.c:853:
+                       (blk = ext3_find_next_zero_bit(map, k + 8, k))$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#374: FILE: fs/ext3/balloc.c:853:
+               if (map[k/8] != '\255' &&
+                       (blk = ext3_find_next_zero_bit(map, k + 8, k))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: fs/ext3/balloc.c:853:
+                       (blk = ext3_find_next_zero_bit(map, k + 8, k))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#375: FILE: fs/ext3/balloc.c:854:
+                        < (k + 8))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: fs/ext3/balloc.c:854:
+                        < (k + 8))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#376: FILE: fs/ext3/balloc.c:855:
+                               return blk;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: fs/ext3/balloc.c:855:
+                               return blk;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#378: FILE: fs/ext3/balloc.c:857:
+               k -= 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: fs/ext3/balloc.c:857:
+               k -= 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: fs/ext3/balloc.c:858:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: fs/ext3/balloc.c:859:
+       return -1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#385: FILE: fs/ext3/balloc.c:864:
+                                       ext3_grpblk_t lowest)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#385: FILE: fs/ext3/balloc.c:864:
+bitmap_search_prev_usable_block(ext3_grpblk_t start, struct buffer_head *bh,
+                                       ext3_grpblk_t lowest)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: fs/ext3/balloc.c:864:
+                                       ext3_grpblk_t lowest)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: fs/ext3/balloc.c:866:
+       ext3_grpblk_t next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: fs/ext3/balloc.c:867:
+       struct journal_head *jh = bh2jh(bh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#391: FILE: fs/ext3/balloc.c:870:
+        * The bitmap search --- search backward alternately through the actual$

ERROR:CODE_INDENT: code indent should use tabs where possible
#392: FILE: fs/ext3/balloc.c:871:
+        * bitmap and the last-committed copy until we find a bit free in$

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: fs/ext3/balloc.c:872:
+        * both$

ERROR:CODE_INDENT: code indent should use tabs where possible
#394: FILE: fs/ext3/balloc.c:873:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: fs/ext3/balloc.c:874:
+       while (start >= lowest) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#395: FILE: fs/ext3/balloc.c:874:
+       while (start >= lowest) {
+               next = bitmap_find_prev_zero_bit(bh->b_data, start, lowest);

ERROR:CODE_INDENT: code indent should use tabs where possible
#396: FILE: fs/ext3/balloc.c:875:
+               next = bitmap_find_prev_zero_bit(bh->b_data, start, lowest);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: fs/ext3/balloc.c:875:
+               next = bitmap_find_prev_zero_bit(bh->b_data, start, lowest);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#397: FILE: fs/ext3/balloc.c:876:
+               if (next < lowest)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: fs/ext3/balloc.c:876:
+               if (next < lowest)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#397: FILE: fs/ext3/balloc.c:876:
+               if (next < lowest)
+                       return -1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#398: FILE: fs/ext3/balloc.c:877:
+                       return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: fs/ext3/balloc.c:877:
+                       return -1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#399: FILE: fs/ext3/balloc.c:878:
+               if (ext3_test_allocatable(next, bh))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: fs/ext3/balloc.c:878:
+               if (ext3_test_allocatable(next, bh))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#399: FILE: fs/ext3/balloc.c:878:
+               if (ext3_test_allocatable(next, bh))
+                       return next;

ERROR:CODE_INDENT: code indent should use tabs where possible
#400: FILE: fs/ext3/balloc.c:879:
+                       return next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: fs/ext3/balloc.c:879:
+                       return next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#401: FILE: fs/ext3/balloc.c:880:
+               jbd_lock_bh_state(bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: fs/ext3/balloc.c:880:
+               jbd_lock_bh_state(bh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#402: FILE: fs/ext3/balloc.c:881:
+               if (jh->b_committed_data)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: fs/ext3/balloc.c:881:
+               if (jh->b_committed_data)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#402: FILE: fs/ext3/balloc.c:881:
+               if (jh->b_committed_data)
+                       start = bitmap_find_prev_zero_bit(jh->b_committed_data,

ERROR:CODE_INDENT: code indent should use tabs where possible
#403: FILE: fs/ext3/balloc.c:882:
+                       start = bitmap_find_prev_zero_bit(jh->b_committed_data,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: fs/ext3/balloc.c:882:
+                       start = bitmap_find_prev_zero_bit(jh->b_committed_data,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#404: FILE: fs/ext3/balloc.c:883:
+                                                               next, lowest);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#404: FILE: fs/ext3/balloc.c:883:
+                       start = bitmap_find_prev_zero_bit(jh->b_committed_data,
+                                                               next, lowest);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: fs/ext3/balloc.c:883:
+                                                               next, lowest);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#405: FILE: fs/ext3/balloc.c:884:
+               jbd_unlock_bh_state(bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#405: FILE: fs/ext3/balloc.c:884:
+               jbd_unlock_bh_state(bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#406: FILE: fs/ext3/balloc.c:885:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: fs/ext3/balloc.c:886:
+       return -1;$

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#426: FILE: fs/ext3/balloc.c:1000:
ext3_reserve_window *my_rsv)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: fs/ext3/balloc.c:1002:
+       struct ext3_sb_info *sbi = EXT3_SB(sb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#429: FILE: fs/ext3/balloc.c:1003:
+       struct ext3_group_desc *gdp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#430: FILE: fs/ext3/balloc.c:1004:
+       struct ext3_bg_info *bgi = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#431: FILE: fs/ext3/balloc.c:1005:
+       struct buffer_head *gdp_bh;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: fs/ext3/balloc.c:1009:
+       const int metaclustering = test_opt(sb, METACLUSTER);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#437: FILE: fs/ext3/balloc.c:1011:
+       if (metaclustering)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#437: FILE: fs/ext3/balloc.c:1011:
+       if (metaclustering)
+               bgi = &sbi->s_bginfo[group];

ERROR:CODE_INDENT: code indent should use tabs where possible
#438: FILE: fs/ext3/balloc.c:1012:
+               bgi = &sbi->s_bginfo[group];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: fs/ext3/balloc.c:1012:
+               bgi = &sbi->s_bginfo[group];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#440: FILE: fs/ext3/balloc.c:1014:
+       gdp = ext3_get_group_desc(sb, group, &gdp_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: fs/ext3/balloc.c:1015:
+       if (!gdp)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#441: FILE: fs/ext3/balloc.c:1015:
+       if (!gdp)
+               goto fail_access;

ERROR:CODE_INDENT: code indent should use tabs where possible
#442: FILE: fs/ext3/balloc.c:1016:
+               goto fail_access;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: fs/ext3/balloc.c:1016:
+               goto fail_access;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: fs/ext3/balloc.c:1061:
+       if (metaclustering && !allow_mc_alloc(sbi, bgi, grp_goal))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#452: FILE: fs/ext3/balloc.c:1061:
+       if (metaclustering && !allow_mc_alloc(sbi, bgi, grp_goal))
+               goto fail_access;

ERROR:CODE_INDENT: code indent should use tabs where possible
#453: FILE: fs/ext3/balloc.c:1062:
+               goto fail_access;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#453: FILE: fs/ext3/balloc.c:1062:
+               goto fail_access;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#455: FILE: fs/ext3/balloc.c:1064:
+       if (!claim_block(sb_bgl_lock(sbi, group), grp_goal, bitmap_bh)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#465: FILE: fs/ext3/balloc.c:1079:
+               && (!metaclustering || allow_mc_alloc(sbi, bgi, grp_goal))$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#465: FILE: fs/ext3/balloc.c:1079:
                && ext3_test_allocatable(grp_goal, bitmap_bh)
+               && (!metaclustering || allow_mc_alloc(sbi, bgi, grp_goal))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#465: FILE: fs/ext3/balloc.c:1079:
+               && (!metaclustering || allow_mc_alloc(sbi, bgi, grp_goal))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#466: FILE: fs/ext3/balloc.c:1080:
+               && claim_block(sb_bgl_lock(sbi, group), grp_goal, bitmap_bh)) {$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#466: FILE: fs/ext3/balloc.c:1080:
+               && (!metaclustering || allow_mc_alloc(sbi, bgi, grp_goal))
+               && claim_block(sb_bgl_lock(sbi, group), grp_goal, bitmap_bh)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#466: FILE: fs/ext3/balloc.c:1080:
+               && claim_block(sb_bgl_lock(sbi, group), grp_goal, bitmap_bh)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#475: FILE: fs/ext3/balloc.c:1311:
+        * inside the given range(start_block, group_end_block). The$

ERROR:CODE_INDENT: code indent should use tabs where possible
#476: FILE: fs/ext3/balloc.c:1312:
+        * reservation window must have a reservable free bit inside it for our$

ERROR:CODE_INDENT: code indent should use tabs where possible
#477: FILE: fs/ext3/balloc.c:1313:
+        * callers to work correctly.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: fs/ext3/balloc.c:1345:
+       if (first_free_block < 0 ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#486: FILE: fs/ext3/balloc.c:1345:
+       if (first_free_block < 0 ||
[...]
                spin_lock(rsv_lock);

ERROR:CODE_INDENT: code indent should use tabs where possible
#487: FILE: fs/ext3/balloc.c:1346:
+               (test_opt(sb, METACLUSTER)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#487: FILE: fs/ext3/balloc.c:1346:
+       if (first_free_block < 0 ||
+               (test_opt(sb, METACLUSTER)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: fs/ext3/balloc.c:1346:
+               (test_opt(sb, METACLUSTER)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#488: FILE: fs/ext3/balloc.c:1347:
+                && !allow_mc_alloc(EXT3_SB(sb), &EXT3_SB(sb)->s_bginfo[group],$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#488: FILE: fs/ext3/balloc.c:1347:
+               (test_opt(sb, METACLUSTER)
+                && !allow_mc_alloc(EXT3_SB(sb), &EXT3_SB(sb)->s_bginfo[group],

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: fs/ext3/balloc.c:1347:
+                && !allow_mc_alloc(EXT3_SB(sb), &EXT3_SB(sb)->s_bginfo[group],$

ERROR:CODE_INDENT: code indent should use tabs where possible
#489: FILE: fs/ext3/balloc.c:1348:
+                                       first_free_block))) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: fs/ext3/balloc.c:1348:
+                                       first_free_block))) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#493: FILE: fs/ext3/balloc.c:1350:
+                * No free block left on the bitmap, no point to reserve space,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#494: FILE: fs/ext3/balloc.c:1351:
+                * return failed. We also fail here if metaclustering is enabled$

ERROR:CODE_INDENT: code indent should use tabs where possible
#495: FILE: fs/ext3/balloc.c:1352:
+                * and the first free block in the window lies in the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#496: FILE: fs/ext3/balloc.c:1353:
+                * metacluster while there are free non-mc blocks in the block$

ERROR:CODE_INDENT: code indent should use tabs where possible
#497: FILE: fs/ext3/balloc.c:1354:
+                * group, such a window or any window following it is not useful$

ERROR:CODE_INDENT: code indent should use tabs where possible
#498: FILE: fs/ext3/balloc.c:1355:
+                * to us.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#507: FILE: fs/ext3/balloc.c:1458:
+                       unsigned long *count)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#507: FILE: fs/ext3/balloc.c:1458:
+                       unsigned long *count)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#509: FILE: fs/ext3/balloc.c:1460:
+       struct ext3_bg_info *bgi;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#527: FILE: fs/ext3/balloc.c:1465:
+       if (test_opt(sb, METACLUSTER)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#527: FILE: fs/ext3/balloc.c:1465:
+       if (test_opt(sb, METACLUSTER)) {
+               bgi = &EXT3_SB(sb)->s_bginfo[group];

ERROR:CODE_INDENT: code indent should use tabs where possible
#528: FILE: fs/ext3/balloc.c:1466:
+               bgi = &EXT3_SB(sb)->s_bginfo[group];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#528: FILE: fs/ext3/balloc.c:1466:
+               bgi = &EXT3_SB(sb)->s_bginfo[group];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#529: FILE: fs/ext3/balloc.c:1467:
+               if (bgi->bgi_free_nonmc_blocks_count < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#529: FILE: fs/ext3/balloc.c:1467:
+               if (bgi->bgi_free_nonmc_blocks_count < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#529: FILE: fs/ext3/balloc.c:1467:
+               if (bgi->bgi_free_nonmc_blocks_count < 0)
+                       ext3_init_grp_free_nonmc_blocks(sb, bitmap_bh, group);

ERROR:CODE_INDENT: code indent should use tabs where possible
#530: FILE: fs/ext3/balloc.c:1468:
+                       ext3_init_grp_free_nonmc_blocks(sb, bitmap_bh, group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#530: FILE: fs/ext3/balloc.c:1468:
+                       ext3_init_grp_free_nonmc_blocks(sb, bitmap_bh, group);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#564: FILE: fs/ext3/balloc.c:1595:
+                       struct buffer_head *bitmap_bh,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#564: FILE: fs/ext3/balloc.c:1595:
+int ext3_alloc_indirect_blocks(struct super_block *sb,
+                       struct buffer_head *bitmap_bh,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: fs/ext3/balloc.c:1595:
+                       struct buffer_head *bitmap_bh,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#565: FILE: fs/ext3/balloc.c:1596:
+                       struct ext3_group_desc *gdp,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: fs/ext3/balloc.c:1596:
+                       struct ext3_group_desc *gdp,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#566: FILE: fs/ext3/balloc.c:1597:
+                       int group_no, unsigned long indirect_blks,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#566: FILE: fs/ext3/balloc.c:1597:
+                       int group_no, unsigned long indirect_blks,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#567: FILE: fs/ext3/balloc.c:1598:
+                       ext3_fsblk_t new_blocks[])$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#567: FILE: fs/ext3/balloc.c:1598:
+                       ext3_fsblk_t new_blocks[])$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#569: FILE: fs/ext3/balloc.c:1600:
+       struct ext3_bg_info *bgi = &EXT3_SB(sb)->s_bginfo[group_no];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#570: FILE: fs/ext3/balloc.c:1601:
+       ext3_grpblk_t blk = EXT3_BLOCKS_PER_GROUP(sb) - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#571: FILE: fs/ext3/balloc.c:1602:
+       ext3_grpblk_t mc_start = EXT3_SB(sb)->s_nonmc_blocks_per_group;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#572: FILE: fs/ext3/balloc.c:1603:
+       ext3_fsblk_t group_first_block;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#573: FILE: fs/ext3/balloc.c:1604:
+       int allocated = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#575: FILE: fs/ext3/balloc.c:1606:
+       BUG_ON(!test_opt(sb, METACLUSTER));$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#575: FILE: fs/ext3/balloc.c:1606:
+       BUG_ON(!test_opt(sb, METACLUSTER));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#578: FILE: fs/ext3/balloc.c:1609:
+       if (bgi->bgi_free_nonmc_blocks_count >=$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#578: FILE: fs/ext3/balloc.c:1609:
+       if (bgi->bgi_free_nonmc_blocks_count >=
[...]
+               return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#579: FILE: fs/ext3/balloc.c:1610:
+               le16_to_cpu(gdp->bg_free_blocks_count))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#579: FILE: fs/ext3/balloc.c:1610:
+               le16_to_cpu(gdp->bg_free_blocks_count))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#580: FILE: fs/ext3/balloc.c:1611:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#580: FILE: fs/ext3/balloc.c:1611:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#582: FILE: fs/ext3/balloc.c:1613:
+       group_first_block = ext3_group_first_block_no(sb, group_no);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#583: FILE: fs/ext3/balloc.c:1614:
+       while (allocated < indirect_blks && blk >= mc_start) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#583: FILE: fs/ext3/balloc.c:1614:
+       while (allocated < indirect_blks && blk >= mc_start) {
+               if (!ext3_test_allocatable(blk, bitmap_bh)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#584: FILE: fs/ext3/balloc.c:1615:
+               if (!ext3_test_allocatable(blk, bitmap_bh)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#584: FILE: fs/ext3/balloc.c:1615:
+               if (!ext3_test_allocatable(blk, bitmap_bh)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#584: FILE: fs/ext3/balloc.c:1615:
+               if (!ext3_test_allocatable(blk, bitmap_bh)) {
+                       blk = bitmap_search_prev_usable_block(blk, bitmap_bh,

ERROR:CODE_INDENT: code indent should use tabs where possible
#585: FILE: fs/ext3/balloc.c:1616:
+                       blk = bitmap_search_prev_usable_block(blk, bitmap_bh,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#585: FILE: fs/ext3/balloc.c:1616:
+                       blk = bitmap_search_prev_usable_block(blk, bitmap_bh,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#586: FILE: fs/ext3/balloc.c:1617:
+                                                               mc_start);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#586: FILE: fs/ext3/balloc.c:1617:
+                       blk = bitmap_search_prev_usable_block(blk, bitmap_bh,
+                                                               mc_start);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#586: FILE: fs/ext3/balloc.c:1617:
+                                                               mc_start);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#587: FILE: fs/ext3/balloc.c:1618:
+                       continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#587: FILE: fs/ext3/balloc.c:1618:
+                       continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#588: FILE: fs/ext3/balloc.c:1619:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#588: FILE: fs/ext3/balloc.c:1619:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#589: FILE: fs/ext3/balloc.c:1620:
+               if (claim_block(sb_bgl_lock(EXT3_SB(sb), group_no), blk,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#589: FILE: fs/ext3/balloc.c:1620:
+               if (claim_block(sb_bgl_lock(EXT3_SB(sb), group_no), blk,$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#589: FILE: fs/ext3/balloc.c:1620:
+               if (claim_block(sb_bgl_lock(EXT3_SB(sb), group_no), blk,
[...]
+                       new_blocks[allocated++] = group_first_block + blk;

ERROR:CODE_INDENT: code indent should use tabs where possible
#590: FILE: fs/ext3/balloc.c:1621:
+                               bitmap_bh)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#590: FILE: fs/ext3/balloc.c:1621:
+                               bitmap_bh)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#591: FILE: fs/ext3/balloc.c:1622:
+                       new_blocks[allocated++] = group_first_block + blk;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#591: FILE: fs/ext3/balloc.c:1622:
+                       new_blocks[allocated++] = group_first_block + blk;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#592: FILE: fs/ext3/balloc.c:1623:
+               } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#592: FILE: fs/ext3/balloc.c:1623:
+               } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#592: FILE: fs/ext3/balloc.c:1623:
+               } else {
[...]
+                       cpu_relax();

ERROR:CODE_INDENT: code indent should use tabs where possible
#593: FILE: fs/ext3/balloc.c:1624:
+                       /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#594: FILE: fs/ext3/balloc.c:1625:
+                        * The block was allocated by another thread, or it$

ERROR:CODE_INDENT: code indent should use tabs where possible
#595: FILE: fs/ext3/balloc.c:1626:
+                        * was allocated and then freed by another thread$

ERROR:CODE_INDENT: code indent should use tabs where possible
#596: FILE: fs/ext3/balloc.c:1627:
+                        */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#597: FILE: fs/ext3/balloc.c:1628:
+                       cpu_relax();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#597: FILE: fs/ext3/balloc.c:1628:
+                       cpu_relax();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#598: FILE: fs/ext3/balloc.c:1629:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#598: FILE: fs/ext3/balloc.c:1629:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#599: FILE: fs/ext3/balloc.c:1630:
+               if (allocated < indirect_blks)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#599: FILE: fs/ext3/balloc.c:1630:
+               if (allocated < indirect_blks)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#599: FILE: fs/ext3/balloc.c:1630:
+               if (allocated < indirect_blks)
+                       blk = bitmap_search_prev_usable_block(blk, bitmap_bh,

ERROR:CODE_INDENT: code indent should use tabs where possible
#600: FILE: fs/ext3/balloc.c:1631:
+                       blk = bitmap_search_prev_usable_block(blk, bitmap_bh,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#600: FILE: fs/ext3/balloc.c:1631:
+                       blk = bitmap_search_prev_usable_block(blk, bitmap_bh,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#601: FILE: fs/ext3/balloc.c:1632:
+                                                               mc_start);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#601: FILE: fs/ext3/balloc.c:1632:
+                       blk = bitmap_search_prev_usable_block(blk, bitmap_bh,
+                                                               mc_start);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#601: FILE: fs/ext3/balloc.c:1632:
+                                                               mc_start);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#602: FILE: fs/ext3/balloc.c:1633:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#603: FILE: fs/ext3/balloc.c:1634:
+       return allocated;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#612: FILE: fs/ext3/balloc.c:1643:
+                               struct super_block *sb, int group_no,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#612: FILE: fs/ext3/balloc.c:1643:
+int check_allocated_blocks(ext3_fsblk_t blk, unsigned long num,
+                               struct super_block *sb, int group_no,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#612: FILE: fs/ext3/balloc.c:1643:
+                               struct super_block *sb, int group_no,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#613: FILE: fs/ext3/balloc.c:1644:
+                               struct ext3_group_desc *gdp,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#613: FILE: fs/ext3/balloc.c:1644:
+                               struct ext3_group_desc *gdp,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#614: FILE: fs/ext3/balloc.c:1645:
+                               struct buffer_head *bitmap_bh)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#614: FILE: fs/ext3/balloc.c:1645:
+                               struct buffer_head *bitmap_bh)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#616: FILE: fs/ext3/balloc.c:1647:
+       struct ext3_super_block *es = EXT3_SB(sb)->s_es;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#617: FILE: fs/ext3/balloc.c:1648:
+       struct ext3_sb_info *sbi = EXT3_SB(sb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#618: FILE: fs/ext3/balloc.c:1649:
+       ext3_fsblk_t grp_blk = blk - ext3_group_first_block_no(sb, group_no);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#620: FILE: fs/ext3/balloc.c:1651:
+       if (in_range(le32_to_cpu(gdp->bg_block_bitmap), blk, num) ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#620: FILE: fs/ext3/balloc.c:1651:
+       if (in_range(le32_to_cpu(gdp->bg_block_bitmap), blk, num) ||
[...]
+               ext3_error(sb, "ext3_new_blocks",

ERROR:CODE_INDENT: code indent should use tabs where possible
#621: FILE: fs/ext3/balloc.c:1652:
+               in_range(le32_to_cpu(gdp->bg_inode_bitmap), blk, num) ||$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#621: FILE: fs/ext3/balloc.c:1652:
+       if (in_range(le32_to_cpu(gdp->bg_block_bitmap), blk, num) ||
+               in_range(le32_to_cpu(gdp->bg_inode_bitmap), blk, num) ||

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#621: FILE: fs/ext3/balloc.c:1652:
+               in_range(le32_to_cpu(gdp->bg_inode_bitmap), blk, num) ||$

ERROR:CODE_INDENT: code indent should use tabs where possible
#622: FILE: fs/ext3/balloc.c:1653:
+               in_range(blk, le32_to_cpu(gdp->bg_inode_table),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#622: FILE: fs/ext3/balloc.c:1653:
+               in_range(blk, le32_to_cpu(gdp->bg_inode_table),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#623: FILE: fs/ext3/balloc.c:1654:
+                               EXT3_SB(sb)->s_itb_per_group) ||$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#623: FILE: fs/ext3/balloc.c:1654:
+               in_range(blk, le32_to_cpu(gdp->bg_inode_table),
+                               EXT3_SB(sb)->s_itb_per_group) ||

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#623: FILE: fs/ext3/balloc.c:1654:
+                               EXT3_SB(sb)->s_itb_per_group) ||$

ERROR:CODE_INDENT: code indent should use tabs where possible
#624: FILE: fs/ext3/balloc.c:1655:
+               in_range(blk + num - 1, le32_to_cpu(gdp->bg_inode_table),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: fs/ext3/balloc.c:1655:
+               in_range(blk + num - 1, le32_to_cpu(gdp->bg_inode_table),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#625: FILE: fs/ext3/balloc.c:1656:
+                               EXT3_SB(sb)->s_itb_per_group))$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#625: FILE: fs/ext3/balloc.c:1656:
+               in_range(blk + num - 1, le32_to_cpu(gdp->bg_inode_table),
+                               EXT3_SB(sb)->s_itb_per_group))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#625: FILE: fs/ext3/balloc.c:1656:
+                               EXT3_SB(sb)->s_itb_per_group))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#626: FILE: fs/ext3/balloc.c:1657:
+               ext3_error(sb, "ext3_new_blocks",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#626: FILE: fs/ext3/balloc.c:1657:
+               ext3_error(sb, "ext3_new_blocks",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#627: FILE: fs/ext3/balloc.c:1658:
+                               "Allocating block in system zone - "$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#627: FILE: fs/ext3/balloc.c:1658:
+               ext3_error(sb, "ext3_new_blocks",
+                               "Allocating block in system zone - "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#627: FILE: fs/ext3/balloc.c:1658:
+                               "Allocating block in system zone - "$

ERROR:CODE_INDENT: code indent should use tabs where possible
#628: FILE: fs/ext3/balloc.c:1659:
+                               "blocks from "E3FSBLK", length %lu",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#628: FILE: fs/ext3/balloc.c:1659:
+                               "blocks from "E3FSBLK", length %lu",$

WARNING:SPLIT_STRING: quoted string split across lines
#628: FILE: fs/ext3/balloc.c:1659:
+                               "Allocating block in system zone - "
+                               "blocks from "E3FSBLK", length %lu",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#628: FILE: fs/ext3/balloc.c:1659:
+                               "blocks from "E3FSBLK", length %lu",

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

ERROR:CODE_INDENT: code indent should use tabs where possible
#629: FILE: fs/ext3/balloc.c:1660:
+                               blk, num);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#629: FILE: fs/ext3/balloc.c:1660:
+                               blk, num);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#632: FILE: fs/ext3/balloc.c:1663:
+       {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#633: FILE: fs/ext3/balloc.c:1664:
+               struct buffer_head *debug_bh;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#633: FILE: fs/ext3/balloc.c:1664:
+               struct buffer_head *debug_bh;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#635: FILE: fs/ext3/balloc.c:1666:
+               /* Record bitmap buffer state in the newly allocated block */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#636: FILE: fs/ext3/balloc.c:1667:
+               debug_bh = sb_find_get_block(sb, blk);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#636: FILE: fs/ext3/balloc.c:1667:
+               debug_bh = sb_find_get_block(sb, blk);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#637: FILE: fs/ext3/balloc.c:1668:
+               if (debug_bh) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#637: FILE: fs/ext3/balloc.c:1668:
+               if (debug_bh) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#637: FILE: fs/ext3/balloc.c:1668:
+               if (debug_bh) {
+                       BUFFER_TRACE(debug_bh, "state when allocated");

ERROR:CODE_INDENT: code indent should use tabs where possible
#638: FILE: fs/ext3/balloc.c:1669:
+                       BUFFER_TRACE(debug_bh, "state when allocated");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#638: FILE: fs/ext3/balloc.c:1669:
+                       BUFFER_TRACE(debug_bh, "state when allocated");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#639: FILE: fs/ext3/balloc.c:1670:
+                       BUFFER_TRACE2(debug_bh, bitmap_bh, "bitmap state");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#639: FILE: fs/ext3/balloc.c:1670:
+                       BUFFER_TRACE2(debug_bh, bitmap_bh, "bitmap state");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#640: FILE: fs/ext3/balloc.c:1671:
+                       brelse(debug_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#640: FILE: fs/ext3/balloc.c:1671:
+                       brelse(debug_bh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#641: FILE: fs/ext3/balloc.c:1672:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#641: FILE: fs/ext3/balloc.c:1672:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#642: FILE: fs/ext3/balloc.c:1673:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#643: FILE: fs/ext3/balloc.c:1674:
+       jbd_lock_bh_state(bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#644: FILE: fs/ext3/balloc.c:1675:
+       spin_lock(sb_bgl_lock(sbi, group_no));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#645: FILE: fs/ext3/balloc.c:1676:
+       if (buffer_jbd(bitmap_bh) && bh2jh(bitmap_bh)->b_committed_data) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#645: FILE: fs/ext3/balloc.c:1676:
+       if (buffer_jbd(bitmap_bh) && bh2jh(bitmap_bh)->b_committed_data) {
+               int i;

ERROR:CODE_INDENT: code indent should use tabs where possible
#646: FILE: fs/ext3/balloc.c:1677:
+               int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#646: FILE: fs/ext3/balloc.c:1677:
+               int i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#648: FILE: fs/ext3/balloc.c:1679:
+               for (i = 0; i < num; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#648: FILE: fs/ext3/balloc.c:1679:
+               for (i = 0; i < num; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#648: FILE: fs/ext3/balloc.c:1679:
+               for (i = 0; i < num; i++) {
+                       if (ext3_test_bit(grp_blk+i,

ERROR:CODE_INDENT: code indent should use tabs where possible
#649: FILE: fs/ext3/balloc.c:1680:
+                       if (ext3_test_bit(grp_blk+i,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#649: FILE: fs/ext3/balloc.c:1680:
+                       if (ext3_test_bit(grp_blk+i,$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#649: FILE: fs/ext3/balloc.c:1680:
+                       if (ext3_test_bit(grp_blk+i,
[...]
+                               printk(KERN_ERR "%s: block was unexpectedly set"

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#649: FILE: fs/ext3/balloc.c:1680:
+                       if (ext3_test_bit(grp_blk+i,
                                                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#650: FILE: fs/ext3/balloc.c:1681:
+                                       bh2jh(bitmap_bh)->b_committed_data))$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#650: FILE: fs/ext3/balloc.c:1681:
+                       if (ext3_test_bit(grp_blk+i,
+                                       bh2jh(bitmap_bh)->b_committed_data))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#650: FILE: fs/ext3/balloc.c:1681:
+                                       bh2jh(bitmap_bh)->b_committed_data))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#651: FILE: fs/ext3/balloc.c:1682:
+                               printk(KERN_ERR "%s: block was unexpectedly set"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#651: FILE: fs/ext3/balloc.c:1682:
+                               printk(KERN_ERR "%s: block was unexpectedly set"$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#651: FILE: fs/ext3/balloc.c:1682:
+                               printk(KERN_ERR "%s: block was unexpectedly set"

ERROR:CODE_INDENT: code indent should use tabs where possible
#652: FILE: fs/ext3/balloc.c:1683:
+                                       " in b_committed_data\n", __FUNCTION__);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#652: FILE: fs/ext3/balloc.c:1683:
+                                       " in b_committed_data\n", __FUNCTION__);$

WARNING:SPLIT_STRING: quoted string split across lines
#652: FILE: fs/ext3/balloc.c:1683:
+                               printk(KERN_ERR "%s: block was unexpectedly set"
+                                       " in b_committed_data\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#652: FILE: fs/ext3/balloc.c:1683:
+                                       " in b_committed_data\n", __FUNCTION__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#653: FILE: fs/ext3/balloc.c:1684:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#653: FILE: fs/ext3/balloc.c:1684:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#654: FILE: fs/ext3/balloc.c:1685:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#655: FILE: fs/ext3/balloc.c:1686:
+       ext3_debug("found bit %d\n", grp_blk);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#656: FILE: fs/ext3/balloc.c:1687:
+       spin_unlock(sb_bgl_lock(sbi, group_no));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#657: FILE: fs/ext3/balloc.c:1688:
+       jbd_unlock_bh_state(bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#660: FILE: fs/ext3/balloc.c:1691:
+       if (blk + num - 1 >= le32_to_cpu(es->s_blocks_count)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#660: FILE: fs/ext3/balloc.c:1691:
+       if (blk + num - 1 >= le32_to_cpu(es->s_blocks_count)) {
+               ext3_error(sb, "ext3_new_blocks",

ERROR:CODE_INDENT: code indent should use tabs where possible
#661: FILE: fs/ext3/balloc.c:1692:
+               ext3_error(sb, "ext3_new_blocks",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#661: FILE: fs/ext3/balloc.c:1692:
+               ext3_error(sb, "ext3_new_blocks",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#662: FILE: fs/ext3/balloc.c:1693:
+                               "block("E3FSBLK") >= blocks count(%d) - "$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#662: FILE: fs/ext3/balloc.c:1693:
+               ext3_error(sb, "ext3_new_blocks",
+                               "block("E3FSBLK") >= blocks count(%d) - "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#662: FILE: fs/ext3/balloc.c:1693:
+                               "block("E3FSBLK") >= blocks count(%d) - "$

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#662: FILE: fs/ext3/balloc.c:1693:
+                               "block("E3FSBLK") >= blocks count(%d) - "

ERROR:CODE_INDENT: code indent should use tabs where possible
#663: FILE: fs/ext3/balloc.c:1694:
+                               "block_group = %d, es == %p ", blk,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#663: FILE: fs/ext3/balloc.c:1694:
+                               "block_group = %d, es == %p ", blk,$

WARNING:SPLIT_STRING: quoted string split across lines
#663: FILE: fs/ext3/balloc.c:1694:
+                               "block("E3FSBLK") >= blocks count(%d) - "
+                               "block_group = %d, es == %p ", blk,

ERROR:CODE_INDENT: code indent should use tabs where possible
#664: FILE: fs/ext3/balloc.c:1695:
+                               le32_to_cpu(es->s_blocks_count), group_no, es);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#664: FILE: fs/ext3/balloc.c:1695:
+                               le32_to_cpu(es->s_blocks_count), group_no, es);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#665: FILE: fs/ext3/balloc.c:1696:
+               return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#665: FILE: fs/ext3/balloc.c:1696:
+               return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#666: FILE: fs/ext3/balloc.c:1697:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#668: FILE: fs/ext3/balloc.c:1699:
+       return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#711: FILE: fs/ext3/balloc.c:1729:
+                       ext3_fsblk_t goal, int indirect_blks, int blks,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#711: FILE: fs/ext3/balloc.c:1729:
+int ext3_new_blocks(handle_t *handle, struct inode *inode,
+                       ext3_fsblk_t goal, int indirect_blks, int blks,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#711: FILE: fs/ext3/balloc.c:1729:
+                       ext3_fsblk_t goal, int indirect_blks, int blks,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#712: FILE: fs/ext3/balloc.c:1730:
+                       ext3_fsblk_t new_blocks[4], int *errp)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#712: FILE: fs/ext3/balloc.c:1730:
+                       ext3_fsblk_t new_blocks[4], int *errp)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#721: FILE: fs/ext3/balloc.c:1740:
+       ext3_fsblk_t group_first_block; /* first block in the group */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#726: FILE: fs/ext3/balloc.c:1745:
+       unsigned long ngroups;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#727: FILE: fs/ext3/balloc.c:1746:
+       unsigned long grp_mc_alloc;/* blocks allocated from mc in a group */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#728: FILE: fs/ext3/balloc.c:1747:
+       unsigned long grp_alloc;   /* blocks allocated outside mc in a group */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#729: FILE: fs/ext3/balloc.c:1748:
+       int indirect_blks_done = 0;/* total ind blocks allocated so far */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#730: FILE: fs/ext3/balloc.c:1749:
+       int blks_done = 0;         /* total direct blocks allocated */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#738: FILE: fs/ext3/balloc.c:1757:
+       int i;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#747: FILE: fs/ext3/balloc.c:1764:
        if (!sb) {
+               printk(KERN_INFO "ext3_new_blocks: nonexistent device");

ERROR:CODE_INDENT: code indent should use tabs where possible
#749: FILE: fs/ext3/balloc.c:1765:
+               printk(KERN_INFO "ext3_new_blocks: nonexistent device");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#749: FILE: fs/ext3/balloc.c:1765:
+               printk(KERN_INFO "ext3_new_blocks: nonexistent device");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#749: FILE: fs/ext3/balloc.c:1765:
+               printk(KERN_INFO "ext3_new_blocks: nonexistent device");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ext3_new_blocks', this function's name, in a string
#749: FILE: fs/ext3/balloc.c:1765:
+               printk(KERN_INFO "ext3_new_blocks: nonexistent device");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:CODE_INDENT: code indent should use tabs where possible
#750: FILE: fs/ext3/balloc.c:1766:
+               *errp = -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#750: FILE: fs/ext3/balloc.c:1766:
+               *errp = -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#758: FILE: fs/ext3/balloc.c:1773:
+       if (DQUOT_ALLOC_BLOCK(inode, indirect_blks + blks)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#758: FILE: fs/ext3/balloc.c:1773:
+       if (DQUOT_ALLOC_BLOCK(inode, indirect_blks + blks)) {
                *errp = -EDQUOT;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#796: FILE: fs/ext3/balloc.c:1809:
+       grp_target_blk = ((goal - le32_to_cpu(es->s_first_data_block)) %$

ERROR:CODE_INDENT: code indent should use tabs where possible
#797: FILE: fs/ext3/balloc.c:1810:
+                       EXT3_BLOCKS_PER_GROUP(sb));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#797: FILE: fs/ext3/balloc.c:1810:
+                       EXT3_BLOCKS_PER_GROUP(sb));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#804: FILE: fs/ext3/balloc.c:1815:
+        * Iterate over successive block groups for allocating (any) indirect$

ERROR:CODE_INDENT: code indent should use tabs where possible
#805: FILE: fs/ext3/balloc.c:1816:
+        * blocks and direct blocks until at least one direct block has been$

ERROR:CODE_INDENT: code indent should use tabs where possible
#806: FILE: fs/ext3/balloc.c:1817:
+        * allocated. If metaclustering is enabled, we try allocating indirect$

ERROR:CODE_INDENT: code indent should use tabs where possible
#807: FILE: fs/ext3/balloc.c:1818:
+        * blocks first in the metacluster region and then in the general$

ERROR:CODE_INDENT: code indent should use tabs where possible
#808: FILE: fs/ext3/balloc.c:1819:
+        * region and if that fails too, we repeat the same algorithm in the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#809: FILE: fs/ext3/balloc.c:1820:
+        * next block group and so on. This not only keeps the indirect blocks$

ERROR:CODE_INDENT: code indent should use tabs where possible
#810: FILE: fs/ext3/balloc.c:1821:
+        * together in the metacluster, but also keeps them in close proximity$

ERROR:CODE_INDENT: code indent should use tabs where possible
#811: FILE: fs/ext3/balloc.c:1822:
+        * to their corresponding direct blocks.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#812: FILE: fs/ext3/balloc.c:1823:
+        *$

ERROR:CODE_INDENT: code indent should use tabs where possible
#813: FILE: fs/ext3/balloc.c:1824:
+        * The search begins and ends at the goal group, though the second time$

ERROR:CODE_INDENT: code indent should use tabs where possible
#814: FILE: fs/ext3/balloc.c:1825:
+        * we are at the goal group we try allocating without a goal.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#818: FILE: fs/ext3/balloc.c:1827:
+       bgi = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#819: FILE: fs/ext3/balloc.c:1828:
+       while (bgi < ngroups + 1) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#819: FILE: fs/ext3/balloc.c:1828:
+       while (bgi < ngroups + 1) {
+               grp_mc_alloc = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#820: FILE: fs/ext3/balloc.c:1829:
+               grp_mc_alloc = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#820: FILE: fs/ext3/balloc.c:1829:
+               grp_mc_alloc = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#837: FILE: fs/ext3/balloc.c:1839:
+               if (group_no == goal_group) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#837: FILE: fs/ext3/balloc.c:1839:
+               if (group_no == goal_group) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#837: FILE: fs/ext3/balloc.c:1839:
+               if (group_no == goal_group) {
+                       if (my_rsv && (free_blocks < windowsz)

CHECK:BRACES: braces {} should be used on all arms of this statement
#837: FILE: fs/ext3/balloc.c:1839:
+               if (group_no == goal_group) {
[...]
+               } else if (free_blocks <= windowsz/2)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#838: FILE: fs/ext3/balloc.c:1840:
+                       if (my_rsv && (free_blocks < windowsz)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#838: FILE: fs/ext3/balloc.c:1840:
+                       if (my_rsv && (free_blocks < windowsz)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#838: FILE: fs/ext3/balloc.c:1840:
+                       if (my_rsv && (free_blocks < windowsz)
[...]
+                               my_rsv = NULL;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'free_blocks < windowsz'
#838: FILE: fs/ext3/balloc.c:1840:
+                       if (my_rsv && (free_blocks < windowsz)
+                               && (rsv_is_empty(&my_rsv->rsv_window)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:CODE_INDENT: code indent should use tabs where possible
#839: FILE: fs/ext3/balloc.c:1841:
+                               && (rsv_is_empty(&my_rsv->rsv_window)))$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#839: FILE: fs/ext3/balloc.c:1841:
+                       if (my_rsv && (free_blocks < windowsz)
+                               && (rsv_is_empty(&my_rsv->rsv_window)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#839: FILE: fs/ext3/balloc.c:1841:
+                               && (rsv_is_empty(&my_rsv->rsv_window)))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#840: FILE: fs/ext3/balloc.c:1842:
+                               my_rsv = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#840: FILE: fs/ext3/balloc.c:1842:
+                               my_rsv = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#841: FILE: fs/ext3/balloc.c:1843:
+                       if (free_blocks <= 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#841: FILE: fs/ext3/balloc.c:1843:
+                       if (free_blocks <= 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#841: FILE: fs/ext3/balloc.c:1843:
+                       if (free_blocks <= 0)
+                               goto next;

ERROR:CODE_INDENT: code indent should use tabs where possible
#842: FILE: fs/ext3/balloc.c:1844:
+                               goto next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#842: FILE: fs/ext3/balloc.c:1844:
+                               goto next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#843: FILE: fs/ext3/balloc.c:1845:
+               } else if (free_blocks <= windowsz/2)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#843: FILE: fs/ext3/balloc.c:1845:
+               } else if (free_blocks <= windowsz/2)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#843: FILE: fs/ext3/balloc.c:1845:
+               } else if (free_blocks <= windowsz/2)
+                       goto next;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#843: FILE: fs/ext3/balloc.c:1845:
+               } else if (free_blocks <= windowsz/2)
                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#844: FILE: fs/ext3/balloc.c:1846:
+                       goto next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#844: FILE: fs/ext3/balloc.c:1846:
+                       goto next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#853: FILE: fs/ext3/balloc.c:1853:
+                * Make sure we use undo access for the bitmap, because it is$

ERROR:CODE_INDENT: code indent should use tabs where possible
#854: FILE: fs/ext3/balloc.c:1854:
+                * critical that we do the frozen_data COW on bitmap buffers in$

ERROR:CODE_INDENT: code indent should use tabs where possible
#855: FILE: fs/ext3/balloc.c:1855:
+                * all cases even if the buffer is in BJ_Forget state in the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#856: FILE: fs/ext3/balloc.c:1856:
+                * committing transaction.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#857: FILE: fs/ext3/balloc.c:1857:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#858: FILE: fs/ext3/balloc.c:1858:
+               BUFFER_TRACE(bitmap_bh, "get undo access for new block");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#858: FILE: fs/ext3/balloc.c:1858:
+               BUFFER_TRACE(bitmap_bh, "get undo access for new block");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#859: FILE: fs/ext3/balloc.c:1859:
+               fatal = ext3_journal_get_undo_access(handle, bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#859: FILE: fs/ext3/balloc.c:1859:
+               fatal = ext3_journal_get_undo_access(handle, bitmap_bh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#860: FILE: fs/ext3/balloc.c:1860:
+               if (fatal)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#860: FILE: fs/ext3/balloc.c:1860:
+               if (fatal)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#860: FILE: fs/ext3/balloc.c:1860:
+               if (fatal)
+                       goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#861: FILE: fs/ext3/balloc.c:1861:
+                       goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#861: FILE: fs/ext3/balloc.c:1861:
+                       goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#863: FILE: fs/ext3/balloc.c:1863:
+               /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#864: FILE: fs/ext3/balloc.c:1864:
+                * If metaclustering is enabled, first try to allocate indirect$

ERROR:CODE_INDENT: code indent should use tabs where possible
#865: FILE: fs/ext3/balloc.c:1865:
+                * blocks in the metacluster.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#867: FILE: fs/ext3/balloc.c:1867:
+               if (test_opt(sb, METACLUSTER) &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#867: FILE: fs/ext3/balloc.c:1867:
+               if (test_opt(sb, METACLUSTER) &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#867: FILE: fs/ext3/balloc.c:1867:
+               if (test_opt(sb, METACLUSTER) &&
[...]
+                       grp_mc_alloc = ext3_alloc_indirect_blocks(sb,

ERROR:CODE_INDENT: code indent should use tabs where possible
#868: FILE: fs/ext3/balloc.c:1868:
+                       indirect_blks_done < indirect_blks)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#868: FILE: fs/ext3/balloc.c:1868:
+               if (test_opt(sb, METACLUSTER) &&
+                       indirect_blks_done < indirect_blks)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#868: FILE: fs/ext3/balloc.c:1868:
+                       indirect_blks_done < indirect_blks)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#869: FILE: fs/ext3/balloc.c:1869:
+                       grp_mc_alloc = ext3_alloc_indirect_blocks(sb,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#869: FILE: fs/ext3/balloc.c:1869:
+                       grp_mc_alloc = ext3_alloc_indirect_blocks(sb,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#870: FILE: fs/ext3/balloc.c:1870:
+                                       bitmap_bh, gdp, group_no,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#870: FILE: fs/ext3/balloc.c:1870:
+                       grp_mc_alloc = ext3_alloc_indirect_blocks(sb,
+                                       bitmap_bh, gdp, group_no,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#870: FILE: fs/ext3/balloc.c:1870:
+                                       bitmap_bh, gdp, group_no,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#871: FILE: fs/ext3/balloc.c:1871:
+                                       indirect_blks - indirect_blks_done,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#871: FILE: fs/ext3/balloc.c:1871:
+                                       indirect_blks - indirect_blks_done,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#872: FILE: fs/ext3/balloc.c:1872:
+                                       new_blocks + indirect_blks_done);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#872: FILE: fs/ext3/balloc.c:1872:
+                                       new_blocks + indirect_blks_done);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#874: FILE: fs/ext3/balloc.c:1874:
+               /* Allocate data blocks and any leftover indirect blocks. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#875: FILE: fs/ext3/balloc.c:1875:
+               grp_alloc = indirect_blks + blks$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#875: FILE: fs/ext3/balloc.c:1875:
+               grp_alloc = indirect_blks + blks$

ERROR:CODE_INDENT: code indent should use tabs where possible
#876: FILE: fs/ext3/balloc.c:1876:
+                               - (indirect_blks_done + grp_mc_alloc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#876: FILE: fs/ext3/balloc.c:1876:
+                               - (indirect_blks_done + grp_mc_alloc);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#880: FILE: fs/ext3/balloc.c:1878:
+                                       group_no, bitmap_bh, grp_target_blk,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#880: FILE: fs/ext3/balloc.c:1878:
+                                       group_no, bitmap_bh, grp_target_blk,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#881: FILE: fs/ext3/balloc.c:1879:
+                                       my_rsv, &grp_alloc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#881: FILE: fs/ext3/balloc.c:1879:
+                                       my_rsv, &grp_alloc);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#882: FILE: fs/ext3/balloc.c:1880:
+               if (grp_alloc_blk < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#882: FILE: fs/ext3/balloc.c:1880:
+               if (grp_alloc_blk < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#882: FILE: fs/ext3/balloc.c:1880:
+               if (grp_alloc_blk < 0)
+                       grp_alloc = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#883: FILE: fs/ext3/balloc.c:1881:
+                       grp_alloc = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#883: FILE: fs/ext3/balloc.c:1881:
+                       grp_alloc = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#885: FILE: fs/ext3/balloc.c:1883:
+               /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#886: FILE: fs/ext3/balloc.c:1884:
+                * If we couldn't allocate anything, there is nothing more to$

ERROR:CODE_INDENT: code indent should use tabs where possible
#887: FILE: fs/ext3/balloc.c:1885:
+                * do with this block group, so move over to the next. But$

ERROR:CODE_INDENT: code indent should use tabs where possible
#888: FILE: fs/ext3/balloc.c:1886:
+                * before that We must release write access to the old one via$

ERROR:CODE_INDENT: code indent should use tabs where possible
#889: FILE: fs/ext3/balloc.c:1887:
+                * ext3_journal_release_buffer(), else we'll run out of credits.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#890: FILE: fs/ext3/balloc.c:1888:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#891: FILE: fs/ext3/balloc.c:1889:
+               if (grp_mc_alloc == 0 && grp_alloc == 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#891: FILE: fs/ext3/balloc.c:1889:
+               if (grp_mc_alloc == 0 && grp_alloc == 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#891: FILE: fs/ext3/balloc.c:1889:
+               if (grp_mc_alloc == 0 && grp_alloc == 0) {
+                       BUFFER_TRACE(bitmap_bh, "journal_release_buffer");

ERROR:CODE_INDENT: code indent should use tabs where possible
#892: FILE: fs/ext3/balloc.c:1890:
+                       BUFFER_TRACE(bitmap_bh, "journal_release_buffer");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#892: FILE: fs/ext3/balloc.c:1890:
+                       BUFFER_TRACE(bitmap_bh, "journal_release_buffer");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#893: FILE: fs/ext3/balloc.c:1891:
+                       ext3_journal_release_buffer(handle, bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#893: FILE: fs/ext3/balloc.c:1891:
+                       ext3_journal_release_buffer(handle, bitmap_bh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#894: FILE: fs/ext3/balloc.c:1892:
+                       goto next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#894: FILE: fs/ext3/balloc.c:1892:
+                       goto next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#895: FILE: fs/ext3/balloc.c:1893:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#895: FILE: fs/ext3/balloc.c:1893:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#897: FILE: fs/ext3/balloc.c:1895:
+               BUFFER_TRACE(bitmap_bh, "journal_dirty_metadata for "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#897: FILE: fs/ext3/balloc.c:1895:
+               BUFFER_TRACE(bitmap_bh, "journal_dirty_metadata for "$

ERROR:CODE_INDENT: code indent should use tabs where possible
#898: FILE: fs/ext3/balloc.c:1896:
+                                       "bitmap block");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#898: FILE: fs/ext3/balloc.c:1896:
+                                       "bitmap block");$

WARNING:SPLIT_STRING: quoted string split across lines
#898: FILE: fs/ext3/balloc.c:1896:
+               BUFFER_TRACE(bitmap_bh, "journal_dirty_metadata for "
+                                       "bitmap block");

ERROR:CODE_INDENT: code indent should use tabs where possible
#899: FILE: fs/ext3/balloc.c:1897:
+               fatal = ext3_journal_dirty_metadata(handle, bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#899: FILE: fs/ext3/balloc.c:1897:
+               fatal = ext3_journal_dirty_metadata(handle, bitmap_bh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#904: FILE: fs/ext3/balloc.c:1901:
+               ext3_debug("using block group %d(%d)\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#904: FILE: fs/ext3/balloc.c:1901:
+               ext3_debug("using block group %d(%d)\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#905: FILE: fs/ext3/balloc.c:1902:
+                               group_no, gdp->bg_free_blocks_count);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#905: FILE: fs/ext3/balloc.c:1902:
+               ext3_debug("using block group %d(%d)\n",
+                               group_no, gdp->bg_free_blocks_count);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#905: FILE: fs/ext3/balloc.c:1902:
+                               group_no, gdp->bg_free_blocks_count);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#907: FILE: fs/ext3/balloc.c:1904:
+               BUFFER_TRACE(gdp_bh, "get_write_access");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#907: FILE: fs/ext3/balloc.c:1904:
+               BUFFER_TRACE(gdp_bh, "get_write_access");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#908: FILE: fs/ext3/balloc.c:1905:
+               fatal = ext3_journal_get_write_access(handle, gdp_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#908: FILE: fs/ext3/balloc.c:1905:
+               fatal = ext3_journal_get_write_access(handle, gdp_bh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#909: FILE: fs/ext3/balloc.c:1906:
+               if (fatal)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#909: FILE: fs/ext3/balloc.c:1906:
+               if (fatal)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#909: FILE: fs/ext3/balloc.c:1906:
+               if (fatal)
+                       goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#910: FILE: fs/ext3/balloc.c:1907:
+                       goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#910: FILE: fs/ext3/balloc.c:1907:
+                       goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#912: FILE: fs/ext3/balloc.c:1909:
+               /* Should this be called before ext3_journal_dirty_metadata? */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#913: FILE: fs/ext3/balloc.c:1910:
+               for (i = 0; i < grp_mc_alloc; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#913: FILE: fs/ext3/balloc.c:1910:
+               for (i = 0; i < grp_mc_alloc; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#913: FILE: fs/ext3/balloc.c:1910:
+               for (i = 0; i < grp_mc_alloc; i++) {
+                       if (check_allocated_blocks(

ERROR:CODE_INDENT: code indent should use tabs where possible
#914: FILE: fs/ext3/balloc.c:1911:
+                       if (check_allocated_blocks($

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#914: FILE: fs/ext3/balloc.c:1911:
+                       if (check_allocated_blocks($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#914: FILE: fs/ext3/balloc.c:1911:
+                       if (check_allocated_blocks(

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#914: FILE: fs/ext3/balloc.c:1911:
+                       if (check_allocated_blocks(
[...]
+                               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#915: FILE: fs/ext3/balloc.c:1912:
+                               new_blocks[indirect_blks_done + i], 1, sb,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#915: FILE: fs/ext3/balloc.c:1912:
+                               new_blocks[indirect_blks_done + i], 1, sb,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#916: FILE: fs/ext3/balloc.c:1913:
+                               group_no, gdp, bitmap_bh))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#916: FILE: fs/ext3/balloc.c:1913:
+                               group_no, gdp, bitmap_bh))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#917: FILE: fs/ext3/balloc.c:1914:
+                               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#917: FILE: fs/ext3/balloc.c:1914:
+                               goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#918: FILE: fs/ext3/balloc.c:1915:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#918: FILE: fs/ext3/balloc.c:1915:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#919: FILE: fs/ext3/balloc.c:1916:
+               if (grp_alloc > 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#919: FILE: fs/ext3/balloc.c:1916:
+               if (grp_alloc > 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#919: FILE: fs/ext3/balloc.c:1916:
+               if (grp_alloc > 0) {
+                       ret_block = ext3_group_first_block_no(sb, group_no) +

ERROR:CODE_INDENT: code indent should use tabs where possible
#920: FILE: fs/ext3/balloc.c:1917:
+                       ret_block = ext3_group_first_block_no(sb, group_no) +$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#920: FILE: fs/ext3/balloc.c:1917:
+                       ret_block = ext3_group_first_block_no(sb, group_no) +$

ERROR:CODE_INDENT: code indent should use tabs where possible
#921: FILE: fs/ext3/balloc.c:1918:
+                               grp_alloc_blk;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#921: FILE: fs/ext3/balloc.c:1918:
+                               grp_alloc_blk;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#922: FILE: fs/ext3/balloc.c:1919:
+                       if (check_allocated_blocks(ret_block, grp_alloc, sb,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#922: FILE: fs/ext3/balloc.c:1919:
+                       if (check_allocated_blocks(ret_block, grp_alloc, sb,$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#922: FILE: fs/ext3/balloc.c:1919:
+                       if (check_allocated_blocks(ret_block, grp_alloc, sb,
[...]
+                               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#923: FILE: fs/ext3/balloc.c:1920:
+                                               group_no, gdp, bitmap_bh))$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#923: FILE: fs/ext3/balloc.c:1920:
+                       if (check_allocated_blocks(ret_block, grp_alloc, sb,
+                                               group_no, gdp, bitmap_bh))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#923: FILE: fs/ext3/balloc.c:1920:
+                                               group_no, gdp, bitmap_bh))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#924: FILE: fs/ext3/balloc.c:1921:
+                               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#924: FILE: fs/ext3/balloc.c:1921:
+                               goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#925: FILE: fs/ext3/balloc.c:1922:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#925: FILE: fs/ext3/balloc.c:1922:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#927: FILE: fs/ext3/balloc.c:1924:
+               indirect_blks_done += grp_mc_alloc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#927: FILE: fs/ext3/balloc.c:1924:
+               indirect_blks_done += grp_mc_alloc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#928: FILE: fs/ext3/balloc.c:1925:
+               performed_allocation = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#928: FILE: fs/ext3/balloc.c:1925:
+               performed_allocation = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#930: FILE: fs/ext3/balloc.c:1927:
+               /* The caller will add the new buffer to the journal. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#931: FILE: fs/ext3/balloc.c:1928:
+               if (grp_alloc > 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#931: FILE: fs/ext3/balloc.c:1928:
+               if (grp_alloc > 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#931: FILE: fs/ext3/balloc.c:1928:
+               if (grp_alloc > 0)
+                       ext3_debug("allocating block %lu. "

ERROR:CODE_INDENT: code indent should use tabs where possible
#932: FILE: fs/ext3/balloc.c:1929:
+                       ext3_debug("allocating block %lu. "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#932: FILE: fs/ext3/balloc.c:1929:
+                       ext3_debug("allocating block %lu. "$

ERROR:CODE_INDENT: code indent should use tabs where possible
#933: FILE: fs/ext3/balloc.c:1930:
+                                       "Goal hits %d of %d.\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#933: FILE: fs/ext3/balloc.c:1930:
+                                       "Goal hits %d of %d.\n",$

WARNING:SPLIT_STRING: quoted string split across lines
#933: FILE: fs/ext3/balloc.c:1930:
+                       ext3_debug("allocating block %lu. "
+                                       "Goal hits %d of %d.\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#934: FILE: fs/ext3/balloc.c:1931:
+                                       ret_block, goal_hits, goal_attempts);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#934: FILE: fs/ext3/balloc.c:1931:
+                                       ret_block, goal_hits, goal_attempts);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#936: FILE: fs/ext3/balloc.c:1933:
+               spin_lock(sb_bgl_lock(sbi, group_no));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#936: FILE: fs/ext3/balloc.c:1933:
+               spin_lock(sb_bgl_lock(sbi, group_no));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#937: FILE: fs/ext3/balloc.c:1934:
+               gdp->bg_free_blocks_count =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#937: FILE: fs/ext3/balloc.c:1934:
+               gdp->bg_free_blocks_count =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#938: FILE: fs/ext3/balloc.c:1935:
+                       cpu_to_le16(le16_to_cpu(gdp->bg_free_blocks_count) -$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#938: FILE: fs/ext3/balloc.c:1935:
+                       cpu_to_le16(le16_to_cpu(gdp->bg_free_blocks_count) -$

ERROR:CODE_INDENT: code indent should use tabs where possible
#939: FILE: fs/ext3/balloc.c:1936:
+                                       (grp_mc_alloc + grp_alloc));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#939: FILE: fs/ext3/balloc.c:1936:
+                                       (grp_mc_alloc + grp_alloc));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#940: FILE: fs/ext3/balloc.c:1937:
+               spin_unlock(sb_bgl_lock(sbi, group_no));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#940: FILE: fs/ext3/balloc.c:1937:
+               spin_unlock(sb_bgl_lock(sbi, group_no));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#941: FILE: fs/ext3/balloc.c:1938:
+               percpu_counter_sub(&sbi->s_freeblocks_counter,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#941: FILE: fs/ext3/balloc.c:1938:
+               percpu_counter_sub(&sbi->s_freeblocks_counter,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#942: FILE: fs/ext3/balloc.c:1939:
+                               (grp_mc_alloc + grp_alloc));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#942: FILE: fs/ext3/balloc.c:1939:
+               percpu_counter_sub(&sbi->s_freeblocks_counter,
+                               (grp_mc_alloc + grp_alloc));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#942: FILE: fs/ext3/balloc.c:1939:
+                               (grp_mc_alloc + grp_alloc));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#944: FILE: fs/ext3/balloc.c:1941:
+               BUFFER_TRACE(gdp_bh, "journal_dirty_metadata for "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#944: FILE: fs/ext3/balloc.c:1941:
+               BUFFER_TRACE(gdp_bh, "journal_dirty_metadata for "$

ERROR:CODE_INDENT: code indent should use tabs where possible
#945: FILE: fs/ext3/balloc.c:1942:
+                               "group descriptor");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#945: FILE: fs/ext3/balloc.c:1942:
+                               "group descriptor");$

WARNING:SPLIT_STRING: quoted string split across lines
#945: FILE: fs/ext3/balloc.c:1942:
+               BUFFER_TRACE(gdp_bh, "journal_dirty_metadata for "
+                               "group descriptor");

ERROR:CODE_INDENT: code indent should use tabs where possible
#946: FILE: fs/ext3/balloc.c:1943:
+               err = ext3_journal_dirty_metadata(handle, gdp_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#946: FILE: fs/ext3/balloc.c:1943:
+               err = ext3_journal_dirty_metadata(handle, gdp_bh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#947: FILE: fs/ext3/balloc.c:1944:
+               if (!fatal)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#947: FILE: fs/ext3/balloc.c:1944:
+               if (!fatal)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#947: FILE: fs/ext3/balloc.c:1944:
+               if (!fatal)
+                       fatal = err;

ERROR:CODE_INDENT: code indent should use tabs where possible
#948: FILE: fs/ext3/balloc.c:1945:
+                       fatal = err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#948: FILE: fs/ext3/balloc.c:1945:
+                       fatal = err;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#950: FILE: fs/ext3/balloc.c:1947:
+               sb->s_dirt = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#950: FILE: fs/ext3/balloc.c:1947:
+               sb->s_dirt = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#951: FILE: fs/ext3/balloc.c:1948:
+               if (fatal)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#951: FILE: fs/ext3/balloc.c:1948:
+               if (fatal)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#951: FILE: fs/ext3/balloc.c:1948:
+               if (fatal)
+                       goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#952: FILE: fs/ext3/balloc.c:1949:
+                       goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#952: FILE: fs/ext3/balloc.c:1949:
+                       goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#954: FILE: fs/ext3/balloc.c:1951:
+               brelse(bitmap_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#954: FILE: fs/ext3/balloc.c:1951:
+               brelse(bitmap_bh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#955: FILE: fs/ext3/balloc.c:1952:
+               bitmap_bh = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#955: FILE: fs/ext3/balloc.c:1952:
+               bitmap_bh = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#957: FILE: fs/ext3/balloc.c:1954:
+               if (grp_alloc == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#957: FILE: fs/ext3/balloc.c:1954:
+               if (grp_alloc == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#957: FILE: fs/ext3/balloc.c:1954:
+               if (grp_alloc == 0)
+                       goto next;

ERROR:CODE_INDENT: code indent should use tabs where possible
#958: FILE: fs/ext3/balloc.c:1955:
+                       goto next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#958: FILE: fs/ext3/balloc.c:1955:
+                       goto next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#960: FILE: fs/ext3/balloc.c:1957:
+               /* Update block group non-mc block count since we used some. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#961: FILE: fs/ext3/balloc.c:1958:
+               if (test_opt(sb, METACLUSTER) &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#961: FILE: fs/ext3/balloc.c:1958:
+               if (test_opt(sb, METACLUSTER) &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#961: FILE: fs/ext3/balloc.c:1958:
+               if (test_opt(sb, METACLUSTER) &&
[...]
+                       ext3_update_nonmc_block_count(sbi, group_no,

ERROR:CODE_INDENT: code indent should use tabs where possible
#962: FILE: fs/ext3/balloc.c:1959:
+                       grp_alloc_blk < sbi->s_nonmc_blocks_per_group)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#962: FILE: fs/ext3/balloc.c:1959:
+               if (test_opt(sb, METACLUSTER) &&
+                       grp_alloc_blk < sbi->s_nonmc_blocks_per_group)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#962: FILE: fs/ext3/balloc.c:1959:
+                       grp_alloc_blk < sbi->s_nonmc_blocks_per_group)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#963: FILE: fs/ext3/balloc.c:1960:
+                       ext3_update_nonmc_block_count(sbi, group_no,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#963: FILE: fs/ext3/balloc.c:1960:
+                       ext3_update_nonmc_block_count(sbi, group_no,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#964: FILE: fs/ext3/balloc.c:1961:
+                               grp_alloc_blk, grp_alloc, 1);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#964: FILE: fs/ext3/balloc.c:1961:
+                       ext3_update_nonmc_block_count(sbi, group_no,
+                               grp_alloc_blk, grp_alloc, 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#964: FILE: fs/ext3/balloc.c:1961:
+                               grp_alloc_blk, grp_alloc, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#966: FILE: fs/ext3/balloc.c:1963:
+               /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#967: FILE: fs/ext3/balloc.c:1964:
+                * Assign all the non-mc blocks that we allocated from this$

ERROR:CODE_INDENT: code indent should use tabs where possible
#968: FILE: fs/ext3/balloc.c:1965:
+                * block group.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#969: FILE: fs/ext3/balloc.c:1966:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#970: FILE: fs/ext3/balloc.c:1967:
+               group_first_block = ext3_group_first_block_no(sb, group_no);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#970: FILE: fs/ext3/balloc.c:1967:
+               group_first_block = ext3_group_first_block_no(sb, group_no);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#971: FILE: fs/ext3/balloc.c:1968:
+               while (grp_alloc > 0 && indirect_blks_done < indirect_blks) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#971: FILE: fs/ext3/balloc.c:1968:
+               while (grp_alloc > 0 && indirect_blks_done < indirect_blks) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#971: FILE: fs/ext3/balloc.c:1968:
+               while (grp_alloc > 0 && indirect_blks_done < indirect_blks) {
+                       new_blocks[indirect_blks_done++] =

ERROR:CODE_INDENT: code indent should use tabs where possible
#972: FILE: fs/ext3/balloc.c:1969:
+                       new_blocks[indirect_blks_done++] =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#972: FILE: fs/ext3/balloc.c:1969:
+                       new_blocks[indirect_blks_done++] =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#973: FILE: fs/ext3/balloc.c:1970:
+                               group_first_block + grp_alloc_blk;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#973: FILE: fs/ext3/balloc.c:1970:
+                               group_first_block + grp_alloc_blk;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#974: FILE: fs/ext3/balloc.c:1971:
+                       grp_alloc_blk++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#974: FILE: fs/ext3/balloc.c:1971:
+                       grp_alloc_blk++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#975: FILE: fs/ext3/balloc.c:1972:
+                       grp_alloc--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#975: FILE: fs/ext3/balloc.c:1972:
+                       grp_alloc--;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#976: FILE: fs/ext3/balloc.c:1973:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#976: FILE: fs/ext3/balloc.c:1973:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#978: FILE: fs/ext3/balloc.c:1975:
+               if (grp_alloc > 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#978: FILE: fs/ext3/balloc.c:1975:
+               if (grp_alloc > 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#978: FILE: fs/ext3/balloc.c:1975:
+               if (grp_alloc > 0) {
+                       blks_done = grp_alloc;

ERROR:CODE_INDENT: code indent should use tabs where possible
#979: FILE: fs/ext3/balloc.c:1976:
+                       blks_done = grp_alloc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#979: FILE: fs/ext3/balloc.c:1976:
+                       blks_done = grp_alloc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#980: FILE: fs/ext3/balloc.c:1977:
+                       new_blocks[indirect_blks_done] =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#980: FILE: fs/ext3/balloc.c:1977:
+                       new_blocks[indirect_blks_done] =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#981: FILE: fs/ext3/balloc.c:1978:
+                               group_first_block + grp_alloc_blk;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#981: FILE: fs/ext3/balloc.c:1978:
+                               group_first_block + grp_alloc_blk;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#983: FILE: fs/ext3/balloc.c:1980:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#983: FILE: fs/ext3/balloc.c:1980:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#985: FILE: fs/ext3/balloc.c:1982:
+               /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#986: FILE: fs/ext3/balloc.c:1983:
+                * If we allocated something but not the minimum required,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#987: FILE: fs/ext3/balloc.c:1984:
+                * it's OK to retry in this group as it might have more free$

ERROR:CODE_INDENT: code indent should use tabs where possible
#988: FILE: fs/ext3/balloc.c:1985:
+                * blocks.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#989: FILE: fs/ext3/balloc.c:1986:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#990: FILE: fs/ext3/balloc.c:1987:
+               continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#990: FILE: fs/ext3/balloc.c:1987:
+               continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#993: FILE: fs/ext3/balloc.c:1990:
+               bgi++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#993: FILE: fs/ext3/balloc.c:1990:
+               bgi++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#994: FILE: fs/ext3/balloc.c:1991:
+               group_no++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#994: FILE: fs/ext3/balloc.c:1991:
+               group_no++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#995: FILE: fs/ext3/balloc.c:1992:
+               grp_target_blk = -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#995: FILE: fs/ext3/balloc.c:1992:
+               grp_target_blk = -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1095: FILE: fs/ext3/balloc.c:2014:
+       DQUOT_FREE_BLOCK(inode,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1096: FILE: fs/ext3/balloc.c:2015:
+                       indirect_blks + blks - indirect_blks_done - blks_done);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1096: FILE: fs/ext3/balloc.c:2015:
+       DQUOT_FREE_BLOCK(inode,
+                       indirect_blks + blks - indirect_blks_done - blks_done);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1096: FILE: fs/ext3/balloc.c:2015:
+                       indirect_blks + blks - indirect_blks_done - blks_done);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1098: FILE: fs/ext3/balloc.c:2017:
+       return blks_done;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1105: FILE: fs/ext3/balloc.c:2029:
        if (!performed_allocation)
+               DQUOT_FREE_BLOCK(inode, indirect_blks + blks);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1107: FILE: fs/ext3/balloc.c:2030:
+               DQUOT_FREE_BLOCK(inode, indirect_blks + blks);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1107: FILE: fs/ext3/balloc.c:2030:
+               DQUOT_FREE_BLOCK(inode, indirect_blks + blks);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1109: FILE: fs/ext3/balloc.c:2032:
+        * Free any indirect blocks we allocated already. If the transaction$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1110: FILE: fs/ext3/balloc.c:2033:
+        * has been aborted this is essentially a no-op.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1111: FILE: fs/ext3/balloc.c:2034:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1112: FILE: fs/ext3/balloc.c:2035:
+       for (i = 0; i < indirect_blks_done; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1112: FILE: fs/ext3/balloc.c:2035:
+       for (i = 0; i < indirect_blks_done; i++)
+               ext3_free_blocks(handle, inode, new_blocks[i], 1);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1113: FILE: fs/ext3/balloc.c:2036:
+               ext3_free_blocks(handle, inode, new_blocks[i], 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1113: FILE: fs/ext3/balloc.c:2036:
+               ext3_free_blocks(handle, inode, new_blocks[i], 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1122: FILE: fs/ext3/balloc.c:2044:
+       ext3_fsblk_t new_blocks[4];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1125: FILE: fs/ext3/balloc.c:2046:
+       ext3_new_blocks(handle, inode, goal, 0, 1, new_blocks, errp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1126: FILE: fs/ext3/balloc.c:2047:
+       if (*errp)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1126: FILE: fs/ext3/balloc.c:2047:
+       if (*errp)
+               return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1127: FILE: fs/ext3/balloc.c:2048:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1127: FILE: fs/ext3/balloc.c:2048:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1129: FILE: fs/ext3/balloc.c:2050:
+       return new_blocks[0];$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1170: FILE: fs/ext3/inode.c:43:
+typedef struct {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1171: FILE: fs/ext3/inode.c:44:
+       __le32  *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1172: FILE: fs/ext3/inode.c:45:
+       __le32  key;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1173: FILE: fs/ext3/inode.c:46:
+       struct buffer_head *bh;$

CHECK:CAMELCASE: Avoid CamelCase: <Indirect>
#1174: FILE: fs/ext3/inode.c:47:
+} Indirect;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1177: FILE: fs/ext3/inode.c:50:
+       int                     count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1178: FILE: fs/ext3/inode.c:51:
+       int                     seq_prefetch;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1179: FILE: fs/ext3/inode.c:52:
+       long                    size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1180: FILE: fs/ext3/inode.c:53:
+       struct buffer_head      *bh[0];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1184: FILE: fs/ext3/inode.c:57:
+       (sizeof(struct ext3_ind_read_info) + \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1185: FILE: fs/ext3/inode.c:58:
+        sizeof(struct buffer_head *) * (_c))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1185: FILE: fs/ext3/inode.c:58:
+        sizeof(struct buffer_head *) * (_c))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1191: FILE: fs/ext3/inode.c:64:
+                                    int depth, int offsets[4],$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1191: FILE: fs/ext3/inode.c:64:
+static Indirect *ext3_read_indblocks(struct inode *inode, int iblock,
+                                    int depth, int offsets[4],

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1191: FILE: fs/ext3/inode.c:64:
+                                    int depth, int offsets[4],$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1192: FILE: fs/ext3/inode.c:65:
+                                    Indirect chain[4], int *err);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1192: FILE: fs/ext3/inode.c:65:
+                                    Indirect chain[4], int *err);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1214: FILE: fs/ext3/inode.c:372:
+                                Indirect chain[4], int ind_readahead, int *err)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1214: FILE: fs/ext3/inode.c:372:
+                                Indirect chain[4], int ind_readahead, int *err)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1219: FILE: fs/ext3/inode.c:377:
+       int index;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1227: FILE: fs/ext3/inode.c:384:
+       for (index = 0; index < depth - 1; index++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1227: FILE: fs/ext3/inode.c:384:
+       for (index = 0; index < depth - 1; index++) {
+               if (ind_readahead && depth > 2 && index == depth - 2)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1228: FILE: fs/ext3/inode.c:385:
+               if (ind_readahead && depth > 2 && index == depth - 2)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1228: FILE: fs/ext3/inode.c:385:
+               if (ind_readahead && depth > 2 && index == depth - 2)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1228: FILE: fs/ext3/inode.c:385:
+               if (ind_readahead && depth > 2 && index == depth - 2)
+                       break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1229: FILE: fs/ext3/inode.c:386:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1229: FILE: fs/ext3/inode.c:386:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1253: FILE: fs/ext3/inode.c:448:
+       if (!test_opt(inode->i_sb, METACLUSTER)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1253: FILE: fs/ext3/inode.c:448:
+       if (!test_opt(inode->i_sb, METACLUSTER)) {
[...]
+               if (ind->bh)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1254: FILE: fs/ext3/inode.c:449:
+               /* No such thing, so let's try location of indirect block */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1255: FILE: fs/ext3/inode.c:450:
+               if (ind->bh)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1255: FILE: fs/ext3/inode.c:450:
+               if (ind->bh)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1255: FILE: fs/ext3/inode.c:450:
+               if (ind->bh)
+                       return ind->bh->b_blocknr;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1256: FILE: fs/ext3/inode.c:451:
+                       return ind->bh->b_blocknr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1256: FILE: fs/ext3/inode.c:451:
+                       return ind->bh->b_blocknr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1257: FILE: fs/ext3/inode.c:452:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1357: FILE: fs/ext3/inode.c:573:
+       num = ext3_new_blocks(handle, inode, goal, indirect_blks,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1358: FILE: fs/ext3/inode.c:574:
+       num = ext3_new_blocks(handle, inode, goal, indirect_blks,
                                *blks, new_blocks, &err);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1366: FILE: fs/ext3/inode.c:770:
+       int count = 0, ind_readahead;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1377: FILE: fs/ext3/inode.c:779:
+       ind_readahead = !create && depth > 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1378: FILE: fs/ext3/inode.c:780:
+       partial = ext3_get_branch(inode, depth, offsets, chain,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1379: FILE: fs/ext3/inode.c:781:
+                                 ind_readahead, &err);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1379: FILE: fs/ext3/inode.c:781:
+                                 ind_readahead, &err);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1380: FILE: fs/ext3/inode.c:782:
+       if (!partial && ind_readahead)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1380: FILE: fs/ext3/inode.c:782:
+       if (!partial && ind_readahead)
+               partial = ext3_read_indblocks(inode, iblock, depth,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1381: FILE: fs/ext3/inode.c:783:
+               partial = ext3_read_indblocks(inode, iblock, depth,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1381: FILE: fs/ext3/inode.c:783:
+               partial = ext3_read_indblocks(inode, iblock, depth,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1382: FILE: fs/ext3/inode.c:784:
+                                             offsets, chain, &err);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1382: FILE: fs/ext3/inode.c:784:
+                                             offsets, chain, &err);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1391: FILE: fs/ext3/inode.c:819:
+       if (!create || (err && err != -EAGAIN))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1391: FILE: fs/ext3/inode.c:819:
+       if (!create || (err && err != -EAGAIN))
                goto cleanup;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1400: FILE: fs/ext3/inode.c:841:
+               partial = ext3_get_branch(inode, depth, offsets, chain, 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1400: FILE: fs/ext3/inode.c:841:
+               partial = ext3_get_branch(inode, depth, offsets, chain, 0,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1401: FILE: fs/ext3/inode.c:842:
+                                       &err);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1401: FILE: fs/ext3/inode.c:842:
+               partial = ext3_get_branch(inode, depth, offsets, chain, 0,
+                                       &err);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1401: FILE: fs/ext3/inode.c:842:
+                                       &err);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1410: FILE: fs/ext3/inode.c:1950:
+       partial = ext3_get_branch(inode, k, offsets, chain, 0, &err);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1430: FILE: fs/ext3/inode.c:3285:
+       struct ext3_ind_read_info *read_info = bio->bi_private;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1431: FILE: fs/ext3/inode.c:3286:
+       struct buffer_head *bh;$

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1432: FILE: fs/ext3/inode.c:3287:
+       int uptodate = !err && test_bit(BIO_UPTODATE, &bio->bi_flags);
            ^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1432: FILE: fs/ext3/inode.c:3287:
+       int uptodate = !err && test_bit(BIO_UPTODATE, &bio->bi_flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1433: FILE: fs/ext3/inode.c:3288:
+       int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1435: FILE: fs/ext3/inode.c:3290:
+       if (err == -EOPNOTSUPP)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1435: FILE: fs/ext3/inode.c:3290:
+       if (err == -EOPNOTSUPP)
+               set_bit(BIO_EOPNOTSUPP, &bio->bi_flags);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1436: FILE: fs/ext3/inode.c:3291:
+               set_bit(BIO_EOPNOTSUPP, &bio->bi_flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1436: FILE: fs/ext3/inode.c:3291:
+               set_bit(BIO_EOPNOTSUPP, &bio->bi_flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1439: FILE: fs/ext3/inode.c:3294:
+       if (bio->bi_size)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1439: FILE: fs/ext3/inode.c:3294:
+       if (bio->bi_size)
+               return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1440: FILE: fs/ext3/inode.c:3295:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1440: FILE: fs/ext3/inode.c:3295:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1442: FILE: fs/ext3/inode.c:3297:
+       for (i = 0; i < read_info->count; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1442: FILE: fs/ext3/inode.c:3297:
+       for (i = 0; i < read_info->count; i++) {
+               bh = read_info->bh[i];

ERROR:CODE_INDENT: code indent should use tabs where possible
#1443: FILE: fs/ext3/inode.c:3298:
+               bh = read_info->bh[i];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1443: FILE: fs/ext3/inode.c:3298:
+               bh = read_info->bh[i];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1445: FILE: fs/ext3/inode.c:3300:
+               if (err == -EOPNOTSUPP)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1445: FILE: fs/ext3/inode.c:3300:
+               if (err == -EOPNOTSUPP)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1445: FILE: fs/ext3/inode.c:3300:
+               if (err == -EOPNOTSUPP)
+                       set_bit(BH_Eopnotsupp, &bh->b_state);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1446: FILE: fs/ext3/inode.c:3301:
+                       set_bit(BH_Eopnotsupp, &bh->b_state);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1446: FILE: fs/ext3/inode.c:3301:
+                       set_bit(BH_Eopnotsupp, &bh->b_state);$

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1448: FILE: fs/ext3/inode.c:3303:
+               if (uptodate) {
                    ^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1448: FILE: fs/ext3/inode.c:3303:
+               if (uptodate) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1448: FILE: fs/ext3/inode.c:3303:
+               if (uptodate) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1448: FILE: fs/ext3/inode.c:3303:
+               if (uptodate) {
+                       BUG_ON(buffer_uptodate(bh));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1449: FILE: fs/ext3/inode.c:3304:
+                       BUG_ON(buffer_uptodate(bh));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1449: FILE: fs/ext3/inode.c:3304:
+                       BUG_ON(buffer_uptodate(bh));$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1449: FILE: fs/ext3/inode.c:3304:
+                       BUG_ON(buffer_uptodate(bh));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1450: FILE: fs/ext3/inode.c:3305:
+                       BUG_ON(ext3_buffer_prefetch(bh));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1450: FILE: fs/ext3/inode.c:3305:
+                       BUG_ON(ext3_buffer_prefetch(bh));$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1450: FILE: fs/ext3/inode.c:3305:
+                       BUG_ON(ext3_buffer_prefetch(bh));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1451: FILE: fs/ext3/inode.c:3306:
+                       set_buffer_uptodate(bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1451: FILE: fs/ext3/inode.c:3306:
+                       set_buffer_uptodate(bh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1452: FILE: fs/ext3/inode.c:3307:
+                       if (read_info->seq_prefetch)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1452: FILE: fs/ext3/inode.c:3307:
+                       if (read_info->seq_prefetch)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#1452: FILE: fs/ext3/inode.c:3307:
+                       if (read_info->seq_prefetch)
+                               ext3_set_buffer_prefetch(bh);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1453: FILE: fs/ext3/inode.c:3308:
+                               ext3_set_buffer_prefetch(bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1453: FILE: fs/ext3/inode.c:3308:
+                               ext3_set_buffer_prefetch(bh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1454: FILE: fs/ext3/inode.c:3309:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1454: FILE: fs/ext3/inode.c:3309:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1456: FILE: fs/ext3/inode.c:3311:
+               unlock_buffer(bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1456: FILE: fs/ext3/inode.c:3311:
+               unlock_buffer(bh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1457: FILE: fs/ext3/inode.c:3312:
+               brelse(bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1457: FILE: fs/ext3/inode.c:3312:
+               brelse(bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1458: FILE: fs/ext3/inode.c:3313:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1460: FILE: fs/ext3/inode.c:3315:
+       kfree(read_info);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1461: FILE: fs/ext3/inode.c:3316:
+       bio_put(bio);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1478: FILE: fs/ext3/inode.c:3333:
+                                                 int block,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1478: FILE: fs/ext3/inode.c:3333:
+static inline unsigned long ext3_get_max_read(const struct inode *inode,
+                                                 int block,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1478: FILE: fs/ext3/inode.c:3333:
+                                                 int block,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1479: FILE: fs/ext3/inode.c:3334:
+                                                 int offset_in_dind_block)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1479: FILE: fs/ext3/inode.c:3334:
+                                                 int offset_in_dind_block)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1481: FILE: fs/ext3/inode.c:3336:
+       const struct super_block *sb = inode->i_sb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1482: FILE: fs/ext3/inode.c:3337:
+       unsigned long max_read;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1483: FILE: fs/ext3/inode.c:3338:
+       unsigned long ptrs = EXT3_ADDR_PER_BLOCK(inode->i_sb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1484: FILE: fs/ext3/inode.c:3339:
+       unsigned long ptrs_bits = EXT3_ADDR_PER_BLOCK_BITS(inode->i_sb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1485: FILE: fs/ext3/inode.c:3340:
+       unsigned long blocks_in_file =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1486: FILE: fs/ext3/inode.c:3341:
+               (inode->i_size + sb->s_blocksize - 1) >> sb->s_blocksize_bits;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1486: FILE: fs/ext3/inode.c:3341:
+               (inode->i_size + sb->s_blocksize - 1) >> sb->s_blocksize_bits;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1487: FILE: fs/ext3/inode.c:3342:
+       unsigned long remaining_ind_blks_in_dind =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1488: FILE: fs/ext3/inode.c:3343:
+               (ptrs >= offset_in_dind_block) ? (ptrs - offset_in_dind_block)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1488: FILE: fs/ext3/inode.c:3343:
+               (ptrs >= offset_in_dind_block) ? (ptrs - offset_in_dind_block)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1489: FILE: fs/ext3/inode.c:3344:
+                                              : 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1489: FILE: fs/ext3/inode.c:3344:
+                                              : 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1490: FILE: fs/ext3/inode.c:3345:
+       unsigned long remaining_ind_blks_before_eof =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1491: FILE: fs/ext3/inode.c:3346:
+               ((blocks_in_file - EXT3_NDIR_BLOCKS + ptrs - 1) >> ptrs_bits) -$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1491: FILE: fs/ext3/inode.c:3346:
+               ((blocks_in_file - EXT3_NDIR_BLOCKS + ptrs - 1) >> ptrs_bits) -$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1492: FILE: fs/ext3/inode.c:3347:
+               ((block - EXT3_NDIR_BLOCKS) >> ptrs_bits);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1492: FILE: fs/ext3/inode.c:3347:
+               ((block - EXT3_NDIR_BLOCKS) >> ptrs_bits);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1494: FILE: fs/ext3/inode.c:3349:
+       BUG_ON(block >= blocks_in_file);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1494: FILE: fs/ext3/inode.c:3349:
+       BUG_ON(block >= blocks_in_file);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1496: FILE: fs/ext3/inode.c:3351:
+       max_read = min_t(unsigned long, remaining_ind_blks_in_dind,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1497: FILE: fs/ext3/inode.c:3352:
+                        remaining_ind_blks_before_eof);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1497: FILE: fs/ext3/inode.c:3352:
+                        remaining_ind_blks_before_eof);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1499: FILE: fs/ext3/inode.c:3354:
+       BUG_ON(max_read < 1);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1499: FILE: fs/ext3/inode.c:3354:
+       BUG_ON(max_read < 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1501: FILE: fs/ext3/inode.c:3356:
+       return max_read;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1505: FILE: fs/ext3/inode.c:3360:
+                                       struct ext3_ind_read_info **pread_info,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1505: FILE: fs/ext3/inode.c:3360:
+                                       struct ext3_ind_read_info **pread_info,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1506: FILE: fs/ext3/inode.c:3361:
+                                       int *read_cnt, int seq_prefetch)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1506: FILE: fs/ext3/inode.c:3361:
+                                       int *read_cnt, int seq_prefetch)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1508: FILE: fs/ext3/inode.c:3363:
+       struct bio *bio = *pbio;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1509: FILE: fs/ext3/inode.c:3364:
+       struct ext3_ind_read_info *read_info = *pread_info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1511: FILE: fs/ext3/inode.c:3366:
+       BUG_ON(*read_cnt < 1);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1511: FILE: fs/ext3/inode.c:3366:
+       BUG_ON(*read_cnt < 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1513: FILE: fs/ext3/inode.c:3368:
+       read_info->seq_prefetch = seq_prefetch;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1514: FILE: fs/ext3/inode.c:3369:
+       read_info->count = *read_cnt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1515: FILE: fs/ext3/inode.c:3370:
+       read_info->size = bio->bi_size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1516: FILE: fs/ext3/inode.c:3371:
+       bio->bi_private = read_info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1517: FILE: fs/ext3/inode.c:3372:
+       bio->bi_end_io = ext3_ind_read_end_bio;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1518: FILE: fs/ext3/inode.c:3373:
+       submit_bio(READ, bio);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1520: FILE: fs/ext3/inode.c:3375:
+       *pbio = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1521: FILE: fs/ext3/inode.c:3376:
+       *pread_info = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1522: FILE: fs/ext3/inode.c:3377:
+       *read_cnt = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1526: FILE: fs/ext3/inode.c:3381:
+       ext3_fsblk_t            blockno;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1527: FILE: fs/ext3/inode.c:3382:
+       struct buffer_head      *bh;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1532: FILE: fs/ext3/inode.c:3387:
+       struct ind_block_info *info_a = (struct ind_block_info *)a;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1533: FILE: fs/ext3/inode.c:3388:
+       struct ind_block_info *info_b = (struct ind_block_info *)b;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1535: FILE: fs/ext3/inode.c:3390:
+       return info_a->blockno - info_b->blockno;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1540: FILE: fs/ext3/inode.c:3395:
+       struct ind_block_info *info_a = (struct ind_block_info *)a;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1541: FILE: fs/ext3/inode.c:3396:
+       struct ind_block_info *info_b = (struct ind_block_info *)b;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1542: FILE: fs/ext3/inode.c:3397:
+       struct ind_block_info tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1544: FILE: fs/ext3/inode.c:3399:
+       tmp = *info_a;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1545: FILE: fs/ext3/inode.c:3400:
+       *info_a = *info_b;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1546: FILE: fs/ext3/inode.c:3401:
+       *info_b = tmp;$

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#1560: FILE: fs/ext3/inode.c:3415:
+ *      Issue a single bio request to read upto count buffers identified in
                                            ^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1562: FILE: fs/ext3/inode.c:3417:
+ *      - If a buffer is found to be uptodate and it's prefetch bit is set, we
                                      ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1570: FILE: fs/ext3/inode.c:3424:
+ *      it's already uptodate.
                      ^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1573: FILE: fs/ext3/inode.c:3427:
+                                    const __le32 ind_blocks[], int count,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1573: FILE: fs/ext3/inode.c:3427:
+static int ext3_read_indblocks_async(struct super_block *sb,
+                                    const __le32 ind_blocks[], int count,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1573: FILE: fs/ext3/inode.c:3427:
+                                    const __le32 ind_blocks[], int count,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1574: FILE: fs/ext3/inode.c:3428:
+                                    struct buffer_head *first_bh,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1574: FILE: fs/ext3/inode.c:3428:
+                                    struct buffer_head *first_bh,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1575: FILE: fs/ext3/inode.c:3429:
+                                    int seq_prefetch,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1575: FILE: fs/ext3/inode.c:3429:
+                                    int seq_prefetch,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1576: FILE: fs/ext3/inode.c:3430:
+                                    unsigned long *blocks_done)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1576: FILE: fs/ext3/inode.c:3430:
+                                    unsigned long *blocks_done)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1578: FILE: fs/ext3/inode.c:3432:
+       struct buffer_head *bh;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1579: FILE: fs/ext3/inode.c:3433:
+       struct bio *bio = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1580: FILE: fs/ext3/inode.c:3434:
+       struct ext3_ind_read_info *read_info = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1581: FILE: fs/ext3/inode.c:3435:
+       int read_cnt = 0, blk;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1582: FILE: fs/ext3/inode.c:3436:
+       ext3_fsblk_t prev_blk = 0, io_start_blk = 0, curr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1583: FILE: fs/ext3/inode.c:3437:
+       struct ind_block_info *ind_info = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1584: FILE: fs/ext3/inode.c:3438:
+       int err = 0, ind_info_count = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1586: FILE: fs/ext3/inode.c:3440:
+       BUG_ON(count < 1);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1586: FILE: fs/ext3/inode.c:3440:
+       BUG_ON(count < 1);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1588: FILE: fs/ext3/inode.c:3442:
+        * trim the count returned by that function. So this bound must only$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1589: FILE: fs/ext3/inode.c:3443:
+        * be imposed at the last moment. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1589: FILE: fs/ext3/inode.c:3443:
+        * be imposed at the last moment. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1590: FILE: fs/ext3/inode.c:3444:
+       count = min_t(unsigned long, count, EXT3_IND_READ_MAX);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1591: FILE: fs/ext3/inode.c:3445:
+       *blocks_done = 0UL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1593: FILE: fs/ext3/inode.c:3447:
+       if (count == 1 && first_bh) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1593: FILE: fs/ext3/inode.c:3447:
+       if (count == 1 && first_bh) {
+               lock_buffer(first_bh);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1594: FILE: fs/ext3/inode.c:3448:
+               lock_buffer(first_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1594: FILE: fs/ext3/inode.c:3448:
+               lock_buffer(first_bh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1595: FILE: fs/ext3/inode.c:3449:
+               get_bh(first_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1595: FILE: fs/ext3/inode.c:3449:
+               get_bh(first_bh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1596: FILE: fs/ext3/inode.c:3450:
+               first_bh->b_end_io = end_buffer_read_sync;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1596: FILE: fs/ext3/inode.c:3450:
+               first_bh->b_end_io = end_buffer_read_sync;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1597: FILE: fs/ext3/inode.c:3451:
+               submit_bh(READ, first_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1597: FILE: fs/ext3/inode.c:3451:
+               submit_bh(READ, first_bh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1598: FILE: fs/ext3/inode.c:3452:
+               *blocks_done = 1UL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1598: FILE: fs/ext3/inode.c:3452:
+               *blocks_done = 1UL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1599: FILE: fs/ext3/inode.c:3453:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1599: FILE: fs/ext3/inode.c:3453:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1600: FILE: fs/ext3/inode.c:3454:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1602: FILE: fs/ext3/inode.c:3456:
+       ind_info = kmalloc(count * sizeof(*ind_info), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1603: FILE: fs/ext3/inode.c:3457:
+       if (unlikely(!ind_info))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1603: FILE: fs/ext3/inode.c:3457:
+       if (unlikely(!ind_info))
+               return -ENOMEM;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1604: FILE: fs/ext3/inode.c:3458:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1604: FILE: fs/ext3/inode.c:3458:
+               return -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1607: FILE: fs/ext3/inode.c:3461:
+        * First pass: sort block numbers for all indirect blocks that we'll$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1608: FILE: fs/ext3/inode.c:3462:
+        * read. This allows us to scan blocks in sequenial order during the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1609: FILE: fs/ext3/inode.c:3463:
+        * second pass which helps coalasce requests to contiguous blocks.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1610: FILE: fs/ext3/inode.c:3464:
+        * Since we sort block numbers here instead of assuming any specific$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1611: FILE: fs/ext3/inode.c:3465:
+        * layout on the disk, we have some protection against different$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1612: FILE: fs/ext3/inode.c:3466:
+        * indirect block layout strategies as long as they keep all indirect$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1613: FILE: fs/ext3/inode.c:3467:
+        * blocks close by.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1614: FILE: fs/ext3/inode.c:3468:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1615: FILE: fs/ext3/inode.c:3469:
+       for (blk = 0; blk < count; blk++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1615: FILE: fs/ext3/inode.c:3469:
+       for (blk = 0; blk < count; blk++) {
+               curr = le32_to_cpu(ind_blocks[blk]);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1616: FILE: fs/ext3/inode.c:3470:
+               curr = le32_to_cpu(ind_blocks[blk]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1616: FILE: fs/ext3/inode.c:3470:
+               curr = le32_to_cpu(ind_blocks[blk]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1617: FILE: fs/ext3/inode.c:3471:
+               if (!curr)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1617: FILE: fs/ext3/inode.c:3471:
+               if (!curr)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1617: FILE: fs/ext3/inode.c:3471:
+               if (!curr)
+                       continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1618: FILE: fs/ext3/inode.c:3472:
+                       continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1618: FILE: fs/ext3/inode.c:3472:
+                       continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1620: FILE: fs/ext3/inode.c:3474:
+               /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1621: FILE: fs/ext3/inode.c:3475:
+                * Skip this block if it lies too far from blocks we have$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1622: FILE: fs/ext3/inode.c:3476:
+                * already decided to read. "Too far" should typically indicate$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1623: FILE: fs/ext3/inode.c:3477:
+                * lying on a different track on the disk. EXT3_IND_READ_MAX$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1624: FILE: fs/ext3/inode.c:3478:
+                * seems reasonable for most disks.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1625: FILE: fs/ext3/inode.c:3479:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1626: FILE: fs/ext3/inode.c:3480:
+               if (io_start_blk > 0 &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1626: FILE: fs/ext3/inode.c:3480:
+               if (io_start_blk > 0 &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1626: FILE: fs/ext3/inode.c:3480:
+               if (io_start_blk > 0 &&
[...]
+                       continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1627: FILE: fs/ext3/inode.c:3481:
+                       (max(io_start_blk, curr) - min(io_start_blk, curr) >=$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1627: FILE: fs/ext3/inode.c:3481:
+               if (io_start_blk > 0 &&
+                       (max(io_start_blk, curr) - min(io_start_blk, curr) >=

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1627: FILE: fs/ext3/inode.c:3481:
+                       (max(io_start_blk, curr) - min(io_start_blk, curr) >=$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1628: FILE: fs/ext3/inode.c:3482:
+                               EXT3_IND_READ_MAX))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1628: FILE: fs/ext3/inode.c:3482:
+                               EXT3_IND_READ_MAX))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1629: FILE: fs/ext3/inode.c:3483:
+                       continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1629: FILE: fs/ext3/inode.c:3483:
+                       continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1631: FILE: fs/ext3/inode.c:3485:
+               if (blk == 0 && first_bh) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1631: FILE: fs/ext3/inode.c:3485:
+               if (blk == 0 && first_bh) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1631: FILE: fs/ext3/inode.c:3485:
+               if (blk == 0 && first_bh) {
+                       bh = first_bh;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1632: FILE: fs/ext3/inode.c:3486:
+                       bh = first_bh;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1632: FILE: fs/ext3/inode.c:3486:
+                       bh = first_bh;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1633: FILE: fs/ext3/inode.c:3487:
+                       get_bh(first_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1633: FILE: fs/ext3/inode.c:3487:
+                       get_bh(first_bh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1634: FILE: fs/ext3/inode.c:3488:
+               } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1634: FILE: fs/ext3/inode.c:3488:
+               } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1634: FILE: fs/ext3/inode.c:3488:
+               } else {
+                       bh = sb_getblk(sb, curr);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1635: FILE: fs/ext3/inode.c:3489:
+                       bh = sb_getblk(sb, curr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1635: FILE: fs/ext3/inode.c:3489:
+                       bh = sb_getblk(sb, curr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1636: FILE: fs/ext3/inode.c:3490:
+                       if (unlikely(!bh)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1636: FILE: fs/ext3/inode.c:3490:
+                       if (unlikely(!bh)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#1636: FILE: fs/ext3/inode.c:3490:
+                       if (unlikely(!bh)) {
+                               err = -ENOMEM;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1637: FILE: fs/ext3/inode.c:3491:
+                               err = -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1637: FILE: fs/ext3/inode.c:3491:
+                               err = -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1638: FILE: fs/ext3/inode.c:3492:
+                               goto failure;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1638: FILE: fs/ext3/inode.c:3492:
+                               goto failure;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1639: FILE: fs/ext3/inode.c:3493:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1639: FILE: fs/ext3/inode.c:3493:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1640: FILE: fs/ext3/inode.c:3494:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1640: FILE: fs/ext3/inode.c:3494:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1642: FILE: fs/ext3/inode.c:3496:
+               if (buffer_uptodate(bh)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1642: FILE: fs/ext3/inode.c:3496:
+               if (buffer_uptodate(bh)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1642: FILE: fs/ext3/inode.c:3496:
+               if (buffer_uptodate(bh)) {
+                       if (ext3_buffer_prefetch(bh)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1643: FILE: fs/ext3/inode.c:3497:
+                       if (ext3_buffer_prefetch(bh)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1643: FILE: fs/ext3/inode.c:3497:
+                       if (ext3_buffer_prefetch(bh)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#1643: FILE: fs/ext3/inode.c:3497:
+                       if (ext3_buffer_prefetch(bh)) {
+                               brelse(bh);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1644: FILE: fs/ext3/inode.c:3498:
+                               brelse(bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1644: FILE: fs/ext3/inode.c:3498:
+                               brelse(bh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1645: FILE: fs/ext3/inode.c:3499:
+                               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1645: FILE: fs/ext3/inode.c:3499:
+                               break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1646: FILE: fs/ext3/inode.c:3500:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1646: FILE: fs/ext3/inode.c:3500:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1647: FILE: fs/ext3/inode.c:3501:
+                       brelse(bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1647: FILE: fs/ext3/inode.c:3501:
+                       brelse(bh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1648: FILE: fs/ext3/inode.c:3502:
+                       continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1648: FILE: fs/ext3/inode.c:3502:
+                       continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1649: FILE: fs/ext3/inode.c:3503:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1649: FILE: fs/ext3/inode.c:3503:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1651: FILE: fs/ext3/inode.c:3505:
+               if (io_start_blk == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1651: FILE: fs/ext3/inode.c:3505:
+               if (io_start_blk == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1651: FILE: fs/ext3/inode.c:3505:
+               if (io_start_blk == 0)
+                       io_start_blk = curr;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1652: FILE: fs/ext3/inode.c:3506:
+                       io_start_blk = curr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1652: FILE: fs/ext3/inode.c:3506:
+                       io_start_blk = curr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1654: FILE: fs/ext3/inode.c:3508:
+               ind_info[ind_info_count].blockno = curr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1654: FILE: fs/ext3/inode.c:3508:
+               ind_info[ind_info_count].blockno = curr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1655: FILE: fs/ext3/inode.c:3509:
+               ind_info[ind_info_count].bh = bh;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1655: FILE: fs/ext3/inode.c:3509:
+               ind_info[ind_info_count].bh = bh;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1656: FILE: fs/ext3/inode.c:3510:
+               ind_info_count++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1656: FILE: fs/ext3/inode.c:3510:
+               ind_info_count++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1657: FILE: fs/ext3/inode.c:3511:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1658: FILE: fs/ext3/inode.c:3512:
+       *blocks_done = blk;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1660: FILE: fs/ext3/inode.c:3514:
+       sort(ind_info, ind_info_count, sizeof(*ind_info),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1661: FILE: fs/ext3/inode.c:3515:
+               ind_info_cmp, ind_info_swap);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1661: FILE: fs/ext3/inode.c:3515:
+       sort(ind_info, ind_info_count, sizeof(*ind_info),
+               ind_info_cmp, ind_info_swap);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1661: FILE: fs/ext3/inode.c:3515:
+               ind_info_cmp, ind_info_swap);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1664: FILE: fs/ext3/inode.c:3518:
+       for (blk = 0; blk < ind_info_count; blk++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1664: FILE: fs/ext3/inode.c:3518:
+       for (blk = 0; blk < ind_info_count; blk++) {
+               bh = ind_info[blk].bh;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1665: FILE: fs/ext3/inode.c:3519:
+               bh = ind_info[blk].bh;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1665: FILE: fs/ext3/inode.c:3519:
+               bh = ind_info[blk].bh;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1666: FILE: fs/ext3/inode.c:3520:
+               curr = ind_info[blk].blockno;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1666: FILE: fs/ext3/inode.c:3520:
+               curr = ind_info[blk].blockno;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1668: FILE: fs/ext3/inode.c:3522:
+               if (prev_blk > 0 && curr != prev_blk + 1) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1668: FILE: fs/ext3/inode.c:3522:
+               if (prev_blk > 0 && curr != prev_blk + 1) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1668: FILE: fs/ext3/inode.c:3522:
+               if (prev_blk > 0 && curr != prev_blk + 1) {
+                       ext3_read_indblocks_submit(&bio, &read_info,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1669: FILE: fs/ext3/inode.c:3523:
+                       ext3_read_indblocks_submit(&bio, &read_info,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1669: FILE: fs/ext3/inode.c:3523:
+                       ext3_read_indblocks_submit(&bio, &read_info,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1670: FILE: fs/ext3/inode.c:3524:
+                                               &read_cnt, seq_prefetch);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1670: FILE: fs/ext3/inode.c:3524:
+                       ext3_read_indblocks_submit(&bio, &read_info,
+                                               &read_cnt, seq_prefetch);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1670: FILE: fs/ext3/inode.c:3524:
+                                               &read_cnt, seq_prefetch);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1671: FILE: fs/ext3/inode.c:3525:
+                       prev_blk = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1671: FILE: fs/ext3/inode.c:3525:
+                       prev_blk = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1672: FILE: fs/ext3/inode.c:3526:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1672: FILE: fs/ext3/inode.c:3526:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1675: FILE: fs/ext3/inode.c:3529:
+               /* Lock the buffer without blocking, skipping any buffers$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1676: FILE: fs/ext3/inode.c:3530:
+                * which would require us to block. first_bh when specified is$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1677: FILE: fs/ext3/inode.c:3531:
+                * an exception as caller typically wants it to be read for$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1678: FILE: fs/ext3/inode.c:3532:
+                * sure (e.g., ext3_read_indblocks_sync).$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1679: FILE: fs/ext3/inode.c:3533:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1680: FILE: fs/ext3/inode.c:3534:
+               if (bh == first_bh) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1680: FILE: fs/ext3/inode.c:3534:
+               if (bh == first_bh) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1680: FILE: fs/ext3/inode.c:3534:
+               if (bh == first_bh) {
+                       lock_buffer(bh);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1681: FILE: fs/ext3/inode.c:3535:
+                       lock_buffer(bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1681: FILE: fs/ext3/inode.c:3535:
+                       lock_buffer(bh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1682: FILE: fs/ext3/inode.c:3536:
+               } else if (test_set_buffer_locked(bh)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1682: FILE: fs/ext3/inode.c:3536:
+               } else if (test_set_buffer_locked(bh)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1682: FILE: fs/ext3/inode.c:3536:
+               } else if (test_set_buffer_locked(bh)) {
+                       brelse(bh);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1683: FILE: fs/ext3/inode.c:3537:
+                       brelse(bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1683: FILE: fs/ext3/inode.c:3537:
+                       brelse(bh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1684: FILE: fs/ext3/inode.c:3538:
+                       continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1684: FILE: fs/ext3/inode.c:3538:
+                       continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1685: FILE: fs/ext3/inode.c:3539:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1685: FILE: fs/ext3/inode.c:3539:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1687: FILE: fs/ext3/inode.c:3541:
+               /* Check again with the buffer locked. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1688: FILE: fs/ext3/inode.c:3542:
+               if (buffer_uptodate(bh)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1688: FILE: fs/ext3/inode.c:3542:
+               if (buffer_uptodate(bh)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1688: FILE: fs/ext3/inode.c:3542:
+               if (buffer_uptodate(bh)) {
+                       if (ext3_buffer_prefetch(bh)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1689: FILE: fs/ext3/inode.c:3543:
+                       if (ext3_buffer_prefetch(bh)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1689: FILE: fs/ext3/inode.c:3543:
+                       if (ext3_buffer_prefetch(bh)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#1689: FILE: fs/ext3/inode.c:3543:
+                       if (ext3_buffer_prefetch(bh)) {
+                               unlock_buffer(bh);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1690: FILE: fs/ext3/inode.c:3544:
+                               unlock_buffer(bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1690: FILE: fs/ext3/inode.c:3544:
+                               unlock_buffer(bh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1691: FILE: fs/ext3/inode.c:3545:
+                               brelse(bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1691: FILE: fs/ext3/inode.c:3545:
+                               brelse(bh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1692: FILE: fs/ext3/inode.c:3546:
+                               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1692: FILE: fs/ext3/inode.c:3546:
+                               break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1693: FILE: fs/ext3/inode.c:3547:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1693: FILE: fs/ext3/inode.c:3547:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1694: FILE: fs/ext3/inode.c:3548:
+                       unlock_buffer(bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1694: FILE: fs/ext3/inode.c:3548:
+                       unlock_buffer(bh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1695: FILE: fs/ext3/inode.c:3549:
+                       brelse(bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1695: FILE: fs/ext3/inode.c:3549:
+                       brelse(bh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1696: FILE: fs/ext3/inode.c:3550:
+                       continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1696: FILE: fs/ext3/inode.c:3550:
+                       continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1697: FILE: fs/ext3/inode.c:3551:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1697: FILE: fs/ext3/inode.c:3551:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1699: FILE: fs/ext3/inode.c:3553:
+               if (read_cnt == 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1699: FILE: fs/ext3/inode.c:3553:
+               if (read_cnt == 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1699: FILE: fs/ext3/inode.c:3553:
+               if (read_cnt == 0) {
[...]
+                       read_info = kmalloc(EXT3_IND_READ_INFO_SIZE(count),

ERROR:CODE_INDENT: code indent should use tabs where possible
#1700: FILE: fs/ext3/inode.c:3554:
+                       /* read_info freed in ext3_ind_read_end_bio(). */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1701: FILE: fs/ext3/inode.c:3555:
+                       read_info = kmalloc(EXT3_IND_READ_INFO_SIZE(count),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1701: FILE: fs/ext3/inode.c:3555:
+                       read_info = kmalloc(EXT3_IND_READ_INFO_SIZE(count),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1702: FILE: fs/ext3/inode.c:3556:
+                                           GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1702: FILE: fs/ext3/inode.c:3556:
+                                           GFP_KERNEL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1703: FILE: fs/ext3/inode.c:3557:
+                       if (unlikely(!read_info)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1703: FILE: fs/ext3/inode.c:3557:
+                       if (unlikely(!read_info)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#1703: FILE: fs/ext3/inode.c:3557:
+                       if (unlikely(!read_info)) {
+                               err = -ENOMEM;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1704: FILE: fs/ext3/inode.c:3558:
+                               err = -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1704: FILE: fs/ext3/inode.c:3558:
+                               err = -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1705: FILE: fs/ext3/inode.c:3559:
+                               goto failure;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1705: FILE: fs/ext3/inode.c:3559:
+                               goto failure;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1706: FILE: fs/ext3/inode.c:3560:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1706: FILE: fs/ext3/inode.c:3560:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1708: FILE: fs/ext3/inode.c:3562:
+                       bio = bio_alloc(GFP_KERNEL, count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1708: FILE: fs/ext3/inode.c:3562:
+                       bio = bio_alloc(GFP_KERNEL, count);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1709: FILE: fs/ext3/inode.c:3563:
+                       if (unlikely(!bio)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1709: FILE: fs/ext3/inode.c:3563:
+                       if (unlikely(!bio)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#1709: FILE: fs/ext3/inode.c:3563:
+                       if (unlikely(!bio)) {
+                               err = -ENOMEM;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1710: FILE: fs/ext3/inode.c:3564:
+                               err = -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1710: FILE: fs/ext3/inode.c:3564:
+                               err = -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1711: FILE: fs/ext3/inode.c:3565:
+                               goto failure;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1711: FILE: fs/ext3/inode.c:3565:
+                               goto failure;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1712: FILE: fs/ext3/inode.c:3566:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1712: FILE: fs/ext3/inode.c:3566:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1713: FILE: fs/ext3/inode.c:3567:
+                       bio->bi_sector = bh->b_blocknr * (bh->b_size >> 9);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1713: FILE: fs/ext3/inode.c:3567:
+                       bio->bi_sector = bh->b_blocknr * (bh->b_size >> 9);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1714: FILE: fs/ext3/inode.c:3568:
+                       bio->bi_bdev = bh->b_bdev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1714: FILE: fs/ext3/inode.c:3568:
+                       bio->bi_bdev = bh->b_bdev;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1715: FILE: fs/ext3/inode.c:3569:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1715: FILE: fs/ext3/inode.c:3569:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1717: FILE: fs/ext3/inode.c:3571:
+               if (bio_add_page(bio, bh->b_page, bh->b_size, bh_offset(bh))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1717: FILE: fs/ext3/inode.c:3571:
+               if (bio_add_page(bio, bh->b_page, bh->b_size, bh_offset(bh))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1717: FILE: fs/ext3/inode.c:3571:
+               if (bio_add_page(bio, bh->b_page, bh->b_size, bh_offset(bh))
[...]
+                       brelse(bh);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1718: FILE: fs/ext3/inode.c:3572:
+                               < bh->b_size) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1718: FILE: fs/ext3/inode.c:3572:
+                               < bh->b_size) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1719: FILE: fs/ext3/inode.c:3573:
+                       brelse(bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1719: FILE: fs/ext3/inode.c:3573:
+                       brelse(bh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1720: FILE: fs/ext3/inode.c:3574:
+                       if (read_cnt == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1720: FILE: fs/ext3/inode.c:3574:
+                       if (read_cnt == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#1720: FILE: fs/ext3/inode.c:3574:
+                       if (read_cnt == 0)
+                               goto failure;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1721: FILE: fs/ext3/inode.c:3575:
+                               goto failure;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1721: FILE: fs/ext3/inode.c:3575:
+                               goto failure;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1723: FILE: fs/ext3/inode.c:3577:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1723: FILE: fs/ext3/inode.c:3577:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1724: FILE: fs/ext3/inode.c:3578:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1724: FILE: fs/ext3/inode.c:3578:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1726: FILE: fs/ext3/inode.c:3580:
+               read_info->bh[read_cnt++] = bh;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1726: FILE: fs/ext3/inode.c:3580:
+               read_info->bh[read_cnt++] = bh;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1727: FILE: fs/ext3/inode.c:3581:
+               prev_blk = curr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1727: FILE: fs/ext3/inode.c:3581:
+               prev_blk = curr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1728: FILE: fs/ext3/inode.c:3582:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1730: FILE: fs/ext3/inode.c:3584:
+       if (read_cnt == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1730: FILE: fs/ext3/inode.c:3584:
+       if (read_cnt == 0)
+               goto done;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1731: FILE: fs/ext3/inode.c:3585:
+               goto done;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1731: FILE: fs/ext3/inode.c:3585:
+               goto done;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1733: FILE: fs/ext3/inode.c:3587:
+       ext3_read_indblocks_submit(&bio, &read_info, &read_cnt, seq_prefetch);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1735: FILE: fs/ext3/inode.c:3589:
+       kfree(ind_info);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1736: FILE: fs/ext3/inode.c:3590:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1739: FILE: fs/ext3/inode.c:3593:
+       while (--read_cnt >= 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1739: FILE: fs/ext3/inode.c:3593:
+       while (--read_cnt >= 0) {
+               unlock_buffer(read_info->bh[read_cnt]);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1740: FILE: fs/ext3/inode.c:3594:
+               unlock_buffer(read_info->bh[read_cnt]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1740: FILE: fs/ext3/inode.c:3594:
+               unlock_buffer(read_info->bh[read_cnt]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1741: FILE: fs/ext3/inode.c:3595:
+               brelse(read_info->bh[read_cnt]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1741: FILE: fs/ext3/inode.c:3595:
+               brelse(read_info->bh[read_cnt]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1742: FILE: fs/ext3/inode.c:3596:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1743: FILE: fs/ext3/inode.c:3597:
+       *blocks_done = 0UL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1746: FILE: fs/ext3/inode.c:3600:
+       kfree(read_info);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1748: FILE: fs/ext3/inode.c:3602:
+       if (bio)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1748: FILE: fs/ext3/inode.c:3602:
+       if (bio)
+               bio_put(bio);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1749: FILE: fs/ext3/inode.c:3603:
+               bio_put(bio);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1749: FILE: fs/ext3/inode.c:3603:
+               bio_put(bio);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1751: FILE: fs/ext3/inode.c:3605:
+       kfree(ind_info);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1752: FILE: fs/ext3/inode.c:3606:
+       return err;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1773: FILE: fs/ext3/inode.c:3627:
+                                   const __le32 ind_blocks[], int count,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1773: FILE: fs/ext3/inode.c:3627:
+static int ext3_read_indblocks_sync(struct super_block *sb,
+                                   const __le32 ind_blocks[], int count,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1773: FILE: fs/ext3/inode.c:3627:
+                                   const __le32 ind_blocks[], int count,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1775: FILE: fs/ext3/inode.c:3629:
+                                   struct buffer_head *first_bh,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1775: FILE: fs/ext3/inode.c:3629:
+                                   struct buffer_head *first_bh,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1776: FILE: fs/ext3/inode.c:3630:
+                                   int seq_prefetch,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1776: FILE: fs/ext3/inode.c:3630:
+                                   int seq_prefetch,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1777: FILE: fs/ext3/inode.c:3631:
+                                   unsigned long *blocks_done)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1777: FILE: fs/ext3/inode.c:3631:
+                                   unsigned long *blocks_done)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1779: FILE: fs/ext3/inode.c:3633:
+       int err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1781: FILE: fs/ext3/inode.c:3635:
+       BUG_ON(count < 1);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1781: FILE: fs/ext3/inode.c:3635:
+       BUG_ON(count < 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1782: FILE: fs/ext3/inode.c:3636:
+       BUG_ON(!first_bh);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1782: FILE: fs/ext3/inode.c:3636:
+       BUG_ON(!first_bh);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1784: FILE: fs/ext3/inode.c:3638:
+       err = ext3_read_indblocks_async(sb, ind_blocks, count, first_bh,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1785: FILE: fs/ext3/inode.c:3639:
+                                       seq_prefetch, blocks_done);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1785: FILE: fs/ext3/inode.c:3639:
+                                       seq_prefetch, blocks_done);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1786: FILE: fs/ext3/inode.c:3640:
+       if (err)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1786: FILE: fs/ext3/inode.c:3640:
+       if (err)
+               return err;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1787: FILE: fs/ext3/inode.c:3641:
+               return err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1787: FILE: fs/ext3/inode.c:3641:
+               return err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1789: FILE: fs/ext3/inode.c:3643:
+       wait_on_buffer(first_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1790: FILE: fs/ext3/inode.c:3644:
+       if (!buffer_uptodate(first_bh))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1790: FILE: fs/ext3/inode.c:3644:
+       if (!buffer_uptodate(first_bh))
+               err = -EIO;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1791: FILE: fs/ext3/inode.c:3645:
+               err = -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1791: FILE: fs/ext3/inode.c:3645:
+               err = -EIO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1794: FILE: fs/ext3/inode.c:3648:
+        * for all buffers, but the first buffer for sync IO is never a prefetch$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1795: FILE: fs/ext3/inode.c:3649:
+        * buffer since it's needed presently so mark it so.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1796: FILE: fs/ext3/inode.c:3650:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1797: FILE: fs/ext3/inode.c:3651:
+       if (seq_prefetch)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1797: FILE: fs/ext3/inode.c:3651:
+       if (seq_prefetch)
+               ext3_clear_buffer_prefetch(first_bh);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1798: FILE: fs/ext3/inode.c:3652:
+               ext3_clear_buffer_prefetch(first_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1798: FILE: fs/ext3/inode.c:3652:
+               ext3_clear_buffer_prefetch(first_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1800: FILE: fs/ext3/inode.c:3654:
+       BUG_ON(ext3_buffer_prefetch(first_bh));$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1800: FILE: fs/ext3/inode.c:3654:
+       BUG_ON(ext3_buffer_prefetch(first_bh));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1802: FILE: fs/ext3/inode.c:3656:
+       return err;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1826: FILE: fs/ext3/inode.c:3680:
+                                    int depth, int offsets[4],$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1826: FILE: fs/ext3/inode.c:3680:
+static Indirect *ext3_read_indblocks(struct inode *inode, int iblock,
+                                    int depth, int offsets[4],

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1826: FILE: fs/ext3/inode.c:3680:
+                                    int depth, int offsets[4],$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1827: FILE: fs/ext3/inode.c:3681:
+                                    Indirect chain[4], int *err)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1827: FILE: fs/ext3/inode.c:3681:
+                                    Indirect chain[4], int *err)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1829: FILE: fs/ext3/inode.c:3683:
+       struct super_block *sb = inode->i_sb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1830: FILE: fs/ext3/inode.c:3684:
+       struct buffer_head *first_bh, *prev_bh;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1831: FILE: fs/ext3/inode.c:3685:
+       unsigned long max_read, blocks_done = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1832: FILE: fs/ext3/inode.c:3686:
+       __le32 *ind_blocks;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1835: FILE: fs/ext3/inode.c:3689:
+       BUG_ON(depth <= 2);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1835: FILE: fs/ext3/inode.c:3689:
+       BUG_ON(depth <= 2);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1836: FILE: fs/ext3/inode.c:3690:
+       BUG_ON(!chain[depth-2].key);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1836: FILE: fs/ext3/inode.c:3690:
+       BUG_ON(!chain[depth-2].key);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1836: FILE: fs/ext3/inode.c:3690:
+       BUG_ON(!chain[depth-2].key);
                           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1838: FILE: fs/ext3/inode.c:3692:
+       *err = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1841: FILE: fs/ext3/inode.c:3695:
+       ind_blocks = chain[depth-2].p;$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1841: FILE: fs/ext3/inode.c:3695:
+       ind_blocks = chain[depth-2].p;
                                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1842: FILE: fs/ext3/inode.c:3696:
+       first_bh = sb_getblk(sb, le32_to_cpu(ind_blocks[0]));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1843: FILE: fs/ext3/inode.c:3697:
+       if (unlikely(!first_bh)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1843: FILE: fs/ext3/inode.c:3697:
+       if (unlikely(!first_bh)) {
+               printk(KERN_ERR "Failed to get block %u for sb %p\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#1844: FILE: fs/ext3/inode.c:3698:
+               printk(KERN_ERR "Failed to get block %u for sb %p\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1844: FILE: fs/ext3/inode.c:3698:
+               printk(KERN_ERR "Failed to get block %u for sb %p\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1844: FILE: fs/ext3/inode.c:3698:
+               printk(KERN_ERR "Failed to get block %u for sb %p\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#1845: FILE: fs/ext3/inode.c:3699:
+                      le32_to_cpu(ind_blocks[0]), sb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1845: FILE: fs/ext3/inode.c:3699:
+                      le32_to_cpu(ind_blocks[0]), sb);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1846: FILE: fs/ext3/inode.c:3700:
+               goto failure;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1846: FILE: fs/ext3/inode.c:3700:
+               goto failure;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1847: FILE: fs/ext3/inode.c:3701:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1849: FILE: fs/ext3/inode.c:3703:
+       BUG_ON(first_bh->b_size != sb->s_blocksize);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1849: FILE: fs/ext3/inode.c:3703:
+       BUG_ON(first_bh->b_size != sb->s_blocksize);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1851: FILE: fs/ext3/inode.c:3705:
+       if (buffer_uptodate(first_bh)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1851: FILE: fs/ext3/inode.c:3705:
+       if (buffer_uptodate(first_bh)) {
[...]
+               if (!ext3_buffer_prefetch(first_bh)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1852: FILE: fs/ext3/inode.c:3706:
+               /* Found the buffer in cache, either it was accessed recently or$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1853: FILE: fs/ext3/inode.c:3707:
+                * it was prefetched while reading previous indirect block(s).$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1854: FILE: fs/ext3/inode.c:3708:
+                * We need to figure out if we need to prefetch the following$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1855: FILE: fs/ext3/inode.c:3709:
+                * indirect blocks.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1856: FILE: fs/ext3/inode.c:3710:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1857: FILE: fs/ext3/inode.c:3711:
+               if (!ext3_buffer_prefetch(first_bh)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1857: FILE: fs/ext3/inode.c:3711:
+               if (!ext3_buffer_prefetch(first_bh)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1857: FILE: fs/ext3/inode.c:3711:
+               if (!ext3_buffer_prefetch(first_bh)) {
[...]
+                       goto done;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1858: FILE: fs/ext3/inode.c:3712:
+                       /* Either we've seen this indirect block before while$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1859: FILE: fs/ext3/inode.c:3713:
+                        * accessing another data block, or this is a random$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1860: FILE: fs/ext3/inode.c:3714:
+                        * read. In the former case, we must have done the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1861: FILE: fs/ext3/inode.c:3715:
+                        * needful the first time we had a cache hit on this$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1862: FILE: fs/ext3/inode.c:3716:
+                        * indirect block, in the latter case we obviously$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1863: FILE: fs/ext3/inode.c:3717:
+                        * don't need to do any prefetching.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1864: FILE: fs/ext3/inode.c:3718:
+                        */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1865: FILE: fs/ext3/inode.c:3719:
+                       goto done;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1865: FILE: fs/ext3/inode.c:3719:
+                       goto done;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1866: FILE: fs/ext3/inode.c:3720:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1866: FILE: fs/ext3/inode.c:3720:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1868: FILE: fs/ext3/inode.c:3722:
+               max_read = ext3_get_max_read(inode, iblock,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1868: FILE: fs/ext3/inode.c:3722:
+               max_read = ext3_get_max_read(inode, iblock,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1869: FILE: fs/ext3/inode.c:3723:
+                                            offsets[depth-2]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1869: FILE: fs/ext3/inode.c:3723:
+                                            offsets[depth-2]);$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1869: FILE: fs/ext3/inode.c:3723:
+                                            offsets[depth-2]);
                                                          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1871: FILE: fs/ext3/inode.c:3725:
+               /* This indirect block is in the cache due to prefetching and$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1872: FILE: fs/ext3/inode.c:3726:
+                * this is its first cache hit, clear the prefetch bit and$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1873: FILE: fs/ext3/inode.c:3727:
+                * make sure the following blocks are also prefetched.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1874: FILE: fs/ext3/inode.c:3728:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1875: FILE: fs/ext3/inode.c:3729:
+               ext3_clear_buffer_prefetch(first_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1875: FILE: fs/ext3/inode.c:3729:
+               ext3_clear_buffer_prefetch(first_bh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1877: FILE: fs/ext3/inode.c:3731:
+               if (max_read >= 2) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1877: FILE: fs/ext3/inode.c:3731:
+               if (max_read >= 2) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1877: FILE: fs/ext3/inode.c:3731:
+               if (max_read >= 2) {
[...]
+                       ext3_read_indblocks_async(sb, &ind_blocks[1],

ERROR:CODE_INDENT: code indent should use tabs where possible
#1878: FILE: fs/ext3/inode.c:3732:
+                       /* ext3_read_indblocks_async() stops at the first$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1879: FILE: fs/ext3/inode.c:3733:
+                        * indirect block which has the prefetch bit set which$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1880: FILE: fs/ext3/inode.c:3734:
+                        * will most likely be the very next indirect block.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1881: FILE: fs/ext3/inode.c:3735:
+                        */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1882: FILE: fs/ext3/inode.c:3736:
+                       ext3_read_indblocks_async(sb, &ind_blocks[1],$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1882: FILE: fs/ext3/inode.c:3736:
+                       ext3_read_indblocks_async(sb, &ind_blocks[1],$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1883: FILE: fs/ext3/inode.c:3737:
+                                                 max_read - 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1883: FILE: fs/ext3/inode.c:3737:
+                                                 max_read - 1,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1884: FILE: fs/ext3/inode.c:3738:
+                                                 NULL, 1, &blocks_done);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1884: FILE: fs/ext3/inode.c:3738:
+                                                 NULL, 1, &blocks_done);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1885: FILE: fs/ext3/inode.c:3739:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1885: FILE: fs/ext3/inode.c:3739:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1887: FILE: fs/ext3/inode.c:3741:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1887: FILE: fs/ext3/inode.c:3741:
+       } else {
[...]
+               max_read = ext3_get_max_read(inode, iblock,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1888: FILE: fs/ext3/inode.c:3742:
+               /* Buffer is not in memory, we need to read it. If we are$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1889: FILE: fs/ext3/inode.c:3743:
+                * reading sequentially from the previous indirect block, we$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1890: FILE: fs/ext3/inode.c:3744:
+                * have just detected a sequential read and we must prefetch$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1891: FILE: fs/ext3/inode.c:3745:
+                * some indirect blocks for future.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1892: FILE: fs/ext3/inode.c:3746:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1894: FILE: fs/ext3/inode.c:3748:
+               max_read = ext3_get_max_read(inode, iblock,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1894: FILE: fs/ext3/inode.c:3748:
+               max_read = ext3_get_max_read(inode, iblock,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1895: FILE: fs/ext3/inode.c:3749:
+                                            offsets[depth-2]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1895: FILE: fs/ext3/inode.c:3749:
+                                            offsets[depth-2]);$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1895: FILE: fs/ext3/inode.c:3749:
+                                            offsets[depth-2]);
                                                          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1897: FILE: fs/ext3/inode.c:3751:
+               if ((ind_blocks - (__le32 *)chain[depth-2].bh->b_data) >= 1) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1897: FILE: fs/ext3/inode.c:3751:
+               if ((ind_blocks - (__le32 *)chain[depth-2].bh->b_data) >= 1) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1897: FILE: fs/ext3/inode.c:3751:
+               if ((ind_blocks - (__le32 *)chain[depth-2].bh->b_data) >= 1) {
+                       prev_bh = sb_getblk(sb, le32_to_cpu(ind_blocks[-1]));

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1897: FILE: fs/ext3/inode.c:3751:
+               if ((ind_blocks - (__le32 *)chain[depth-2].bh->b_data) >= 1) {
                                                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1898: FILE: fs/ext3/inode.c:3752:
+                       prev_bh = sb_getblk(sb, le32_to_cpu(ind_blocks[-1]));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1898: FILE: fs/ext3/inode.c:3752:
+                       prev_bh = sb_getblk(sb, le32_to_cpu(ind_blocks[-1]));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1899: FILE: fs/ext3/inode.c:3753:
+                       if (buffer_uptodate(prev_bh) &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1899: FILE: fs/ext3/inode.c:3753:
+                       if (buffer_uptodate(prev_bh) &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#1899: FILE: fs/ext3/inode.c:3753:
+                       if (buffer_uptodate(prev_bh) &&
[...]
+                               brelse(prev_bh);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1900: FILE: fs/ext3/inode.c:3754:
+                           !ext3_buffer_prefetch(prev_bh)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1900: FILE: fs/ext3/inode.c:3754:
+                           !ext3_buffer_prefetch(prev_bh)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1901: FILE: fs/ext3/inode.c:3755:
+                               /* Detected sequential read. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1902: FILE: fs/ext3/inode.c:3756:
+                               brelse(prev_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1902: FILE: fs/ext3/inode.c:3756:
+                               brelse(prev_bh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1904: FILE: fs/ext3/inode.c:3758:
+                               /* Sync read indirect block, also read the next$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1905: FILE: fs/ext3/inode.c:3759:
+                                * few indirect blocks.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1906: FILE: fs/ext3/inode.c:3760:
+                                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1907: FILE: fs/ext3/inode.c:3761:
+                               *err = ext3_read_indblocks_sync(sb, ind_blocks,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1907: FILE: fs/ext3/inode.c:3761:
+                               *err = ext3_read_indblocks_sync(sb, ind_blocks,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1908: FILE: fs/ext3/inode.c:3762:
+                                                        max_read, first_bh, 1,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1908: FILE: fs/ext3/inode.c:3762:
+                               *err = ext3_read_indblocks_sync(sb, ind_blocks,
+                                                        max_read, first_bh, 1,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1908: FILE: fs/ext3/inode.c:3762:
+                                                        max_read, first_bh, 1,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1909: FILE: fs/ext3/inode.c:3763:
+                                                        &blocks_done);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1909: FILE: fs/ext3/inode.c:3763:
+                                                        &blocks_done);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1911: FILE: fs/ext3/inode.c:3765:
+                               if (*err)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1911: FILE: fs/ext3/inode.c:3765:
+                               if (*err)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#1911: FILE: fs/ext3/inode.c:3765:
+                               if (*err)
+                                       goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1912: FILE: fs/ext3/inode.c:3766:
+                                       goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1912: FILE: fs/ext3/inode.c:3766:
+                                       goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1914: FILE: fs/ext3/inode.c:3768:
+                               /* In case the very next indirect block is$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1915: FILE: fs/ext3/inode.c:3769:
+                                * discontiguous by a non-trivial amount,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1916: FILE: fs/ext3/inode.c:3770:
+                                * ext3_read_indblocks_sync() above won't$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1917: FILE: fs/ext3/inode.c:3771:
+                                * prefetch it (indicated by blocks_done < 2).$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1918: FILE: fs/ext3/inode.c:3772:
+                                * So to help sequential read, schedule an$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1919: FILE: fs/ext3/inode.c:3773:
+                                * async request for reading the next$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1920: FILE: fs/ext3/inode.c:3774:
+                                * contiguous indirect block range (which$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1921: FILE: fs/ext3/inode.c:3775:
+                                * in metaclustering case would be the next$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1922: FILE: fs/ext3/inode.c:3776:
+                                * metacluster, without metaclustering it$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1923: FILE: fs/ext3/inode.c:3777:
+                                * would be the next indirect block). This is$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1924: FILE: fs/ext3/inode.c:3778:
+                                * expected to benefit the non-metaclustering$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1925: FILE: fs/ext3/inode.c:3779:
+                                * case.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1926: FILE: fs/ext3/inode.c:3780:
+                                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1927: FILE: fs/ext3/inode.c:3781:
+                               if (max_read >= 2 && blocks_done < 2)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1927: FILE: fs/ext3/inode.c:3781:
+                               if (max_read >= 2 && blocks_done < 2)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#1927: FILE: fs/ext3/inode.c:3781:
+                               if (max_read >= 2 && blocks_done < 2)
+                                       ext3_read_indblocks_async(sb,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1928: FILE: fs/ext3/inode.c:3782:
+                                       ext3_read_indblocks_async(sb,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1928: FILE: fs/ext3/inode.c:3782:
+                                       ext3_read_indblocks_async(sb,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1929: FILE: fs/ext3/inode.c:3783:
+                                                       &ind_blocks[1],$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1929: FILE: fs/ext3/inode.c:3783:
+                                       ext3_read_indblocks_async(sb,
+                                                       &ind_blocks[1],

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1929: FILE: fs/ext3/inode.c:3783:
+                                                       &ind_blocks[1],$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1930: FILE: fs/ext3/inode.c:3784:
+                                                       max_read - 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1930: FILE: fs/ext3/inode.c:3784:
+                                                       max_read - 1,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1931: FILE: fs/ext3/inode.c:3785:
+                                                       NULL, 1, &blocks_done);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1931: FILE: fs/ext3/inode.c:3785:
+                                                       NULL, 1, &blocks_done);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1933: FILE: fs/ext3/inode.c:3787:
+                               goto done;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1933: FILE: fs/ext3/inode.c:3787:
+                               goto done;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1934: FILE: fs/ext3/inode.c:3788:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1934: FILE: fs/ext3/inode.c:3788:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1935: FILE: fs/ext3/inode.c:3789:
+                       brelse(prev_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1935: FILE: fs/ext3/inode.c:3789:
+                       brelse(prev_bh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1936: FILE: fs/ext3/inode.c:3790:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1936: FILE: fs/ext3/inode.c:3790:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1938: FILE: fs/ext3/inode.c:3792:
+               /* Either random read, or sequential detection failed above.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1939: FILE: fs/ext3/inode.c:3793:
+                * We always prefetch the next indirect block in this case$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1940: FILE: fs/ext3/inode.c:3794:
+                * whenever possible.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1941: FILE: fs/ext3/inode.c:3795:
+                * This is because for random reads of size ~512KB, there is$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1942: FILE: fs/ext3/inode.c:3796:
+                * >12% chance that a read will span two indirect blocks.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1943: FILE: fs/ext3/inode.c:3797:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1944: FILE: fs/ext3/inode.c:3798:
+               *err = ext3_read_indblocks_sync(sb, ind_blocks,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1944: FILE: fs/ext3/inode.c:3798:
+               *err = ext3_read_indblocks_sync(sb, ind_blocks,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1945: FILE: fs/ext3/inode.c:3799:
+                                               (max_read >= 2) ? 2 : 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1945: FILE: fs/ext3/inode.c:3799:
+                                               (max_read >= 2) ? 2 : 1,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1946: FILE: fs/ext3/inode.c:3800:
+                                               first_bh, 0, &blocks_done);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1946: FILE: fs/ext3/inode.c:3800:
+                                               first_bh, 0, &blocks_done);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1947: FILE: fs/ext3/inode.c:3801:
+               if (*err)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1947: FILE: fs/ext3/inode.c:3801:
+               if (*err)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1947: FILE: fs/ext3/inode.c:3801:
+               if (*err)
+                       goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1948: FILE: fs/ext3/inode.c:3802:
+                       goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1948: FILE: fs/ext3/inode.c:3802:
+                       goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1949: FILE: fs/ext3/inode.c:3803:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1953: FILE: fs/ext3/inode.c:3807:
+       if (!verify_chain(chain, &chain[depth - 2])) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1953: FILE: fs/ext3/inode.c:3807:
+       if (!verify_chain(chain, &chain[depth - 2])) {
+               brelse(first_bh);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1954: FILE: fs/ext3/inode.c:3808:
+               brelse(first_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1954: FILE: fs/ext3/inode.c:3808:
+               brelse(first_bh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1955: FILE: fs/ext3/inode.c:3809:
+               goto changed;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1955: FILE: fs/ext3/inode.c:3809:
+               goto changed;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1956: FILE: fs/ext3/inode.c:3810:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1957: FILE: fs/ext3/inode.c:3811:
+       add_chain(&chain[depth - 1], first_bh,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1958: FILE: fs/ext3/inode.c:3812:
+                 (__le32*)first_bh->b_data + offsets[depth - 1]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1958: FILE: fs/ext3/inode.c:3812:
+                 (__le32*)first_bh->b_data + offsets[depth - 1]);$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1958: FILE: fs/ext3/inode.c:3812:
+                 (__le32*)first_bh->b_data + offsets[depth - 1]);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1960: FILE: fs/ext3/inode.c:3814:
+       if (!chain[depth - 1].key)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1960: FILE: fs/ext3/inode.c:3814:
+       if (!chain[depth - 1].key)
+               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1961: FILE: fs/ext3/inode.c:3815:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1961: FILE: fs/ext3/inode.c:3815:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1963: FILE: fs/ext3/inode.c:3817:
+       BUG_ON(!buffer_uptodate(first_bh));$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1963: FILE: fs/ext3/inode.c:3817:
+       BUG_ON(!buffer_uptodate(first_bh));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1964: FILE: fs/ext3/inode.c:3818:
+       return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1967: FILE: fs/ext3/inode.c:3821:
+       *err = -EAGAIN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1968: FILE: fs/ext3/inode.c:3822:
+       goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1970: FILE: fs/ext3/inode.c:3824:
+       *err = -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1972: FILE: fs/ext3/inode.c:3826:
+       if (*err) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1972: FILE: fs/ext3/inode.c:3826:
+       if (*err) {
+               ext3_debug("Error %d reading indirect blocks\n", *err);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1973: FILE: fs/ext3/inode.c:3827:
+               ext3_debug("Error %d reading indirect blocks\n", *err);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1973: FILE: fs/ext3/inode.c:3827:
+               ext3_debug("Error %d reading indirect blocks\n", *err);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1974: FILE: fs/ext3/inode.c:3828:
+               return &chain[depth - 2];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1974: FILE: fs/ext3/inode.c:3828:
+               return &chain[depth - 2];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1975: FILE: fs/ext3/inode.c:3829:
+       } else$

CHECK:BRACES: Unbalanced braces around else statement
#1975: FILE: fs/ext3/inode.c:3829:
+       } else

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1990: FILE: fs/ext3/super.c:628:
+       if (test_opt(sb, METACLUSTER))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1990: FILE: fs/ext3/super.c:628:
+       if (test_opt(sb, METACLUSTER))
+               seq_puts(seq, ",metacluster");

ERROR:CODE_INDENT: code indent should use tabs where possible
#1991: FILE: fs/ext3/super.c:629:
+               seq_puts(seq, ",metacluster");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1991: FILE: fs/ext3/super.c:629:
+               seq_puts(seq, ",metacluster");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2001: FILE: fs/ext3/super.c:764:
+       Opt_grpquota, Opt_metacluster$

CHECK:CAMELCASE: Avoid CamelCase: <Opt_grpquota>
#2001: FILE: fs/ext3/super.c:764:
+       Opt_grpquota, Opt_metacluster

CHECK:CAMELCASE: Avoid CamelCase: <Opt_metacluster>
#2001: FILE: fs/ext3/super.c:764:
+       Opt_grpquota, Opt_metacluster

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2009: FILE: fs/ext3/super.c:814:
+       {Opt_metacluster, "metacluster"},$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2017: FILE: fs/ext3/super.c:1147:
+               case Opt_metacluster:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2017: FILE: fs/ext3/super.c:1147:
+               case Opt_metacluster:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2018: FILE: fs/ext3/super.c:1148:
+                       set_opt(sbi->s_mount_opt, METACLUSTER);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2018: FILE: fs/ext3/super.c:1148:
+                       set_opt(sbi->s_mount_opt, METACLUSTER);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2019: FILE: fs/ext3/super.c:1149:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2019: FILE: fs/ext3/super.c:1149:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2027: FILE: fs/ext3/super.c:1684:
+       if (test_opt(sb, METACLUSTER)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#2027: FILE: fs/ext3/super.c:1684:
+       if (test_opt(sb, METACLUSTER)) {
+               sbi->s_nonmc_blocks_per_group = sbi->s_blocks_per_group -

CHECK:BRACES: braces {} should be used on all arms of this statement
#2027: FILE: fs/ext3/super.c:1684:
+       if (test_opt(sb, METACLUSTER)) {
[...]
+       } else
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#2028: FILE: fs/ext3/super.c:1685:
+               sbi->s_nonmc_blocks_per_group = sbi->s_blocks_per_group -$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2028: FILE: fs/ext3/super.c:1685:
+               sbi->s_nonmc_blocks_per_group = sbi->s_blocks_per_group -$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2029: FILE: fs/ext3/super.c:1686:
+                       sbi->s_blocks_per_group / 12;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2029: FILE: fs/ext3/super.c:1686:
+                       sbi->s_blocks_per_group / 12;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2030: FILE: fs/ext3/super.c:1687:
+               sbi->s_nonmc_blocks_per_group &= ~7;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2030: FILE: fs/ext3/super.c:1687:
+               sbi->s_nonmc_blocks_per_group &= ~7;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2031: FILE: fs/ext3/super.c:1688:
+       } else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#2031: FILE: fs/ext3/super.c:1688:
+       } else
+               sbi->s_nonmc_blocks_per_group = sbi->s_blocks_per_group;

CHECK:BRACES: Unbalanced braces around else statement
#2031: FILE: fs/ext3/super.c:1688:
+       } else

ERROR:CODE_INDENT: code indent should use tabs where possible
#2032: FILE: fs/ext3/super.c:1689:
+               sbi->s_nonmc_blocks_per_group = sbi->s_blocks_per_group;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2032: FILE: fs/ext3/super.c:1689:
+               sbi->s_nonmc_blocks_per_group = sbi->s_blocks_per_group;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2041: FILE: fs/ext3/super.c:1800:
+       if (test_opt(sb, METACLUSTER)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#2041: FILE: fs/ext3/super.c:1800:
+       if (test_opt(sb, METACLUSTER)) {
+               sbi->s_bginfo = kmalloc(sbi->s_groups_count *

CHECK:BRACES: braces {} should be used on all arms of this statement
#2041: FILE: fs/ext3/super.c:1800:
+       if (test_opt(sb, METACLUSTER)) {
[...]
+       } else
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#2042: FILE: fs/ext3/super.c:1801:
+               sbi->s_bginfo = kmalloc(sbi->s_groups_count *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2042: FILE: fs/ext3/super.c:1801:
+               sbi->s_bginfo = kmalloc(sbi->s_groups_count *$

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#2042: FILE: fs/ext3/super.c:1801:
+               sbi->s_bginfo = kmalloc(sbi->s_groups_count *
+                                       sizeof(*sbi->s_bginfo), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

ERROR:CODE_INDENT: code indent should use tabs where possible
#2043: FILE: fs/ext3/super.c:1802:
+                                       sizeof(*sbi->s_bginfo), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2043: FILE: fs/ext3/super.c:1802:
+                                       sizeof(*sbi->s_bginfo), GFP_KERNEL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2044: FILE: fs/ext3/super.c:1803:
+               if (!sbi->s_bginfo) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2044: FILE: fs/ext3/super.c:1803:
+               if (!sbi->s_bginfo) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#2044: FILE: fs/ext3/super.c:1803:
+               if (!sbi->s_bginfo) {
+                       printk(KERN_ERR "EXT3-fs: not enough memory\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#2045: FILE: fs/ext3/super.c:1804:
+                       printk(KERN_ERR "EXT3-fs: not enough memory\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2045: FILE: fs/ext3/super.c:1804:
+                       printk(KERN_ERR "EXT3-fs: not enough memory\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2045: FILE: fs/ext3/super.c:1804:
+                       printk(KERN_ERR "EXT3-fs: not enough memory\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#2045: FILE: fs/ext3/super.c:1804:
+               if (!sbi->s_bginfo) {
+                       printk(KERN_ERR "EXT3-fs: not enough memory\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#2046: FILE: fs/ext3/super.c:1805:
+                       goto failed_mount3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2046: FILE: fs/ext3/super.c:1805:
+                       goto failed_mount3;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2047: FILE: fs/ext3/super.c:1806:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2047: FILE: fs/ext3/super.c:1806:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2048: FILE: fs/ext3/super.c:1807:
+               for (i = 0; i < sbi->s_groups_count; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2048: FILE: fs/ext3/super.c:1807:
+               for (i = 0; i < sbi->s_groups_count; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#2048: FILE: fs/ext3/super.c:1807:
+               for (i = 0; i < sbi->s_groups_count; i++)
+                       sbi->s_bginfo[i].bgi_free_nonmc_blocks_count = -1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2049: FILE: fs/ext3/super.c:1808:
+                       sbi->s_bginfo[i].bgi_free_nonmc_blocks_count = -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2049: FILE: fs/ext3/super.c:1808:
+                       sbi->s_bginfo[i].bgi_free_nonmc_blocks_count = -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2050: FILE: fs/ext3/super.c:1809:
+       } else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#2050: FILE: fs/ext3/super.c:1809:
+       } else
+               sbi->s_bginfo = NULL;

CHECK:BRACES: Unbalanced braces around else statement
#2050: FILE: fs/ext3/super.c:1809:
+       } else

ERROR:CODE_INDENT: code indent should use tabs where possible
#2051: FILE: fs/ext3/super.c:1810:
+               sbi->s_bginfo = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2051: FILE: fs/ext3/super.c:1810:
+               sbi->s_bginfo = NULL;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#2059: FILE: fs/ext3/super.c:1836:
                if (ext3_load_journal(sb, es, journal_devnum))
+                       goto failed_mount4;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2061: FILE: fs/ext3/super.c:1837:
+                       goto failed_mount4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2061: FILE: fs/ext3/super.c:1837:
+                       goto failed_mount4;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#2063: FILE: fs/ext3/super.c:1839:
                if (ext3_create_journal(sb, es, journal_inum))
+                       goto failed_mount4;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2065: FILE: fs/ext3/super.c:1840:
+                       goto failed_mount4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2065: FILE: fs/ext3/super.c:1840:
+                       goto failed_mount4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2072: FILE: fs/ext3/super.c:1846:
+               goto failed_mount4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2072: FILE: fs/ext3/super.c:1846:
+               goto failed_mount4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2081: FILE: fs/ext3/super.c:1869:
+                       goto failed_mount5;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2081: FILE: fs/ext3/super.c:1869:
+                       goto failed_mount5;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2090: FILE: fs/ext3/super.c:1892:
+               goto failed_mount5;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2090: FILE: fs/ext3/super.c:1892:
+               goto failed_mount5;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2097: FILE: fs/ext3/super.c:1898:
+               goto failed_mount5;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2097: FILE: fs/ext3/super.c:1898:
+               goto failed_mount5;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2109: FILE: fs/ext3/super.c:1933:
+       kfree(sbi->s_bginfo);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2142: FILE: include/linux/ext3_fs.h:729:
+       EXT3_BH_PREFETCH = BH_JBD_Sentinel,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2155: FILE: include/linux/ext3_fs.h:743:
+       set_bit(EXT3_BH_PREFETCH, &bh->b_state);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2161: FILE: include/linux/ext3_fs.h:749:
+       clear_bit(EXT3_BH_PREFETCH, &bh->b_state);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2167: FILE: include/linux/ext3_fs.h:755:
+       return test_bit(EXT3_BH_PREFETCH, &bh->b_state);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2179: FILE: include/linux/ext3_fs.h:780:
+extern int ext3_new_blocks(handle_t *handle, struct inode *inode,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:CODE_INDENT: code indent should use tabs where possible
#2180: FILE: include/linux/ext3_fs.h:781:
+                       ext3_fsblk_t goal, int indirect_blks, int blks,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2180: FILE: include/linux/ext3_fs.h:781:
+extern int ext3_new_blocks(handle_t *handle, struct inode *inode,
+                       ext3_fsblk_t goal, int indirect_blks, int blks,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2180: FILE: include/linux/ext3_fs.h:781:
+                       ext3_fsblk_t goal, int indirect_blks, int blks,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2181: FILE: include/linux/ext3_fs.h:782:
+                       ext3_fsblk_t new_blocks[], int *errp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2181: FILE: include/linux/ext3_fs.h:782:
+                       ext3_fsblk_t new_blocks[], int *errp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2204: FILE: include/linux/ext3_fs_sb.h:38:
+       unsigned long s_nonmc_blocks_per_group;/* Number of non-metacluster$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2215: FILE: include/linux/ext3_fs_sb.h:74:
+       struct ext3_bg_info *s_bginfo;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2228: FILE: include/linux/ext3_fs_sb.h:96:
+       int bgi_free_nonmc_blocks_count;/* Number of free non-metacluster$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2230: FILE: include/linux/ext3_fs_sb.h:97:
+       int bgi_free_nonmc_blocks_count;/* Number of free non-metacluster
+};

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2243: FILE: include/linux/jbd.h:297:
+       BH_JBD_Sentinel,        /* Start bit for clients of jbd */$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000338142.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 551 errors, 812 warnings, 68 checks, 1937 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000338142.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
