CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#157: FILE: drivers/char/tty_io.c:863:
+ssize_t tty_read(struct file *file, char __user *buf, size_t count,
 			loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#166: FILE: drivers/char/tty_io.c:1038:
+ssize_t tty_write(struct file *file, const char __user *buf,
 						size_t count, loff_t *ppos)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#174: FILE: drivers/char/tty_io.c:1857:
+int tty_release(struct inode *inode, struct file *filp)
                                                   ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#183: FILE: drivers/char/tty_io.c:1877:
+unsigned int tty_poll(struct file *filp, poll_table *wait)
                                    ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#192: FILE: drivers/char/tty_io.c:1894:
+int tty_fasync(int fd, struct file *filp, int on)
                                     ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#202: FILE: drivers/char/tty_io.c:2572:
+long tty_compat_ioctl(struct file *file, unsigned int cmd,
 				unsigned long arg)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#560: FILE: fs/fuse/dev.c:749:
+ssize_t fuse_dev_read(struct kiocb *iocb, const struct iovec *iov,
 			      unsigned long nr_segs, loff_t pos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#569: FILE: fs/fuse/dev.c:991:
+ssize_t fuse_dev_write(struct kiocb *iocb, const struct iovec *iov,
 			       unsigned long nr_segs, loff_t pos)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#577: FILE: fs/fuse/dev.c:1087:
+unsigned fuse_dev_poll(struct file *file, poll_table *wait)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#598: FILE: fs/fuse/fuse_i.h:524:
+extern ssize_t fuse_dev_read(struct kiocb *iocb, const struct iovec *iov,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#599: FILE: fs/fuse/fuse_i.h:525:
+extern ssize_t fuse_dev_read(struct kiocb *iocb, const struct iovec *iov,
+			      unsigned long nr_segs, loff_t pos);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#601: FILE: fs/fuse/fuse_i.h:527:
+extern ssize_t fuse_dev_write(struct kiocb *iocb, const struct iovec *iov,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#602: FILE: fs/fuse/fuse_i.h:528:
+extern ssize_t fuse_dev_write(struct kiocb *iocb, const struct iovec *iov,
+			       unsigned long nr_segs, loff_t pos);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#604: FILE: fs/fuse/fuse_i.h:530:
+extern unsigned fuse_dev_poll(struct file *file, poll_table *wait);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#604: FILE: fs/fuse/fuse_i.h:530:
+extern unsigned fuse_dev_poll(struct file *file, poll_table *wait);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#606: FILE: fs/fuse/fuse_i.h:532:
+extern int fuse_dev_fasync(int fd, struct file *file, int on);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#636: FILE: include/linux/tty.h:486:
+extern ssize_t tty_read(struct file *, char __user *, size_t, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#636: FILE: include/linux/tty.h:486:
+extern ssize_t tty_read(struct file *, char __user *, size_t, loff_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char __user *' should also have an identifier name
#636: FILE: include/linux/tty.h:486:
+extern ssize_t tty_read(struct file *, char __user *, size_t, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#636: FILE: include/linux/tty.h:486:
+extern ssize_t tty_read(struct file *, char __user *, size_t, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#636: FILE: include/linux/tty.h:486:
+extern ssize_t tty_read(struct file *, char __user *, size_t, loff_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#637: FILE: include/linux/tty.h:487:
+extern ssize_t tty_write(struct file *, const char __user *, size_t, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#637: FILE: include/linux/tty.h:487:
+extern ssize_t tty_write(struct file *, const char __user *, size_t, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char __user *' should also have an identifier name
#637: FILE: include/linux/tty.h:487:
+extern ssize_t tty_write(struct file *, const char __user *, size_t, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#637: FILE: include/linux/tty.h:487:
+extern ssize_t tty_write(struct file *, const char __user *, size_t, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#637: FILE: include/linux/tty.h:487:
+extern ssize_t tty_write(struct file *, const char __user *, size_t, loff_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#638: FILE: include/linux/tty.h:488:
+extern unsigned int tty_poll(struct file *, poll_table *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#638: FILE: include/linux/tty.h:488:
+extern unsigned int tty_poll(struct file *, poll_table *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'poll_table *' should also have an identifier name
#638: FILE: include/linux/tty.h:488:
+extern unsigned int tty_poll(struct file *, poll_table *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#640: FILE: include/linux/tty.h:490:
+extern long tty_compat_ioctl(struct file *file, unsigned int cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#641: FILE: include/linux/tty.h:491:
+extern long tty_compat_ioctl(struct file *file, unsigned int cmd,
+				unsigned long arg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#645: FILE: include/linux/tty.h:495:
+extern int tty_release(struct inode *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#645: FILE: include/linux/tty.h:495:
+extern int tty_release(struct inode *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#645: FILE: include/linux/tty.h:495:
+extern int tty_release(struct inode *, struct file *);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#646: FILE: include/linux/tty.h:496:
+extern int tty_fasync(int fd, struct file *filp, int on);
                                            ^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#646: FILE: include/linux/tty.h:496:
+extern int tty_fasync(int fd, struct file *filp, int on);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000039105.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 18 warnings, 18 checks, 462 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000039105.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
