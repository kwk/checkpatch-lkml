WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
The "cfq_completed_request_after_fn" defines a function which winds up I/O's

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#49: 
      Signed-off-by: Satoshi UCHIDA <uchida@ap.jp.nec.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:LINE_SPACING: Please don't use multiple blank lines
#65: FILE: block/cfq-cgroup.c:18:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#112: FILE: block/cfq-cgroup.c:92:
+	cfqmd->cfq_driv_d.idle_slice_timer.data = (unsigned long) cfqmd;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: block/cfq-cgroup.c:205:
+  ^IRB_CLEAR_NODE(&cfqd->rb_node);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#130: FILE: block/cfq-cgroup.c:205:
+  ^IRB_CLEAR_NODE(&cfqd->rb_node);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: block/cfq-cgroup.c:205:
+  ^IRB_CLEAR_NODE(&cfqd->rb_node);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: block/cfq-cgroup.c:466:
+  ^Iif (cfq_cfqd_slice_new(cfqd))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#144: FILE: block/cfq-cgroup.c:466:
+  ^Iif (cfq_cfqd_slice_new(cfqd))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: block/cfq-cgroup.c:466:
+  ^Iif (cfq_cfqd_slice_new(cfqd))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: block/cfq-cgroup.c:468:
+  ^Iif (time_before(jiffies, cfqd->slice_end))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#146: FILE: block/cfq-cgroup.c:468:
+  ^Iif (time_before(jiffies, cfqd->slice_end))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: block/cfq-cgroup.c:468:
+  ^Iif (time_before(jiffies, cfqd->slice_end))$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#152: FILE: block/cfq-cgroup.c:474:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#154: FILE: block/cfq-cgroup.c:476:
+static inline int cfq_cgroup_prio_slice(struct cfq_data *cfqd,
+				 unsigned short prio)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#160: FILE: block/cfq-cgroup.c:482:
+	return base_slice + (base_slice/CFQ_CGROUP_SLICE_SCALE *
 	                               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: block/cfq-cgroup.c:494:
+^Ireturn (cfqd->cfqmd->busy_data - 1) * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#178: FILE: block/cfq-cgroup.c:500:
+static void cfq_cgroup_service_tree_add(struct cfq_data *cfqd,
+				 int add_front)

CHECK:BRACES: braces {} should be used on all arms of this statement
#186: FILE: block/cfq-cgroup.c:508:
+	if (!add_front) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#190: FILE: block/cfq-cgroup.c:512:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#227: FILE: block/cfq-cgroup.c:549:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#229: FILE: block/cfq-cgroup.c:551:
+__cfq_cgroup_slice_expired(struct cfq_meta_data *cfqmd,struct cfq_data *cfqd,
                                                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: block/cfq-cgroup.c:556:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#235: FILE: block/cfq-cgroup.c:557:
+	if (cfq_cfqd_on_rr(cfqd)) {
+		cfq_cgroup_service_tree_add(cfqd,0);
+	}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#236: FILE: block/cfq-cgroup.c:558:
+		cfq_cgroup_service_tree_add(cfqd,0);
 		                                ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#239: FILE: block/cfq-cgroup.c:561:
+	if (cfqd == cfqmd->active_data) {
+		cfqmd->active_data = NULL;
+	}

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#291: FILE: block/cfq-cgroup.c:613:
+	__cfq_cgroup_set_active_data(cfqmd , cfqd);
 	                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#309: FILE: block/cfq-cgroup.c:631:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#312: FILE: block/cfq-cgroup.c:634:
+^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#331: FILE: block/cfq-cgroup.c:653:
+	BUG_ON(cfqmd->busy_data);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LINE_SPACING: Please don't use multiple blank lines
#341: FILE: block/cfq-cgroup.c:663:
+
+

CHECK:SPACING: No space is necessary after a cast
#362: FILE: block/cfq-cgroup.c:684:
+	struct cfq_meta_data *cfqmd = (struct cfq_meta_data *) data;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#367: FILE: block/cfq-cgroup.c:689:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#384: FILE: block/cfq-cgroup.c:706:
+^I^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#385: FILE: block/cfq-cgroup.c:707:
+		
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#388: FILE: block/cfq-cgroup.c:710:
+out_kick:^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#401: FILE: block/cfq-cgroup.c:723:
+
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#405: FILE: block/cfq-cgroup.c:727:
+^I^I}^I     $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#497: FILE: block/cfq-iosched.c:903:
 
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#501: FILE: block/cfq-iosched.c:907:
+	struct cfq_queue *cfqq = cfqd->active_queue;
+	if (cfqq)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#551: FILE: block/cfq-iosched.c:1663:
+	int flag=1;
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#564: FILE: block/cfq-iosched.c:1739:
+	int flag=1;
 	        ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cfqq == cfqd->active_queue'
#576: FILE: block/cfq-iosched.c:1753:
+	if ((flag) && (cfqq == cfqd->active_queue)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_WHITESPACE: trailing whitespace
#588: FILE: block/cfq-iosched.c:1780:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#588: FILE: block/cfq-iosched.c:1780:
+ $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#596: FILE: block/cfq-iosched.c:1796:
+	int flag=1;
 	        ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cfqd->active_queue == cfqq'
#608: FILE: block/cfq-iosched.c:1821:
+	if ((flag) && (cfqd->active_queue == cfqq)) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#638: FILE: block/cfq-iosched.c:2032:
+
+

CHECK:SPACING: No space is necessary after a cast
#641: FILE: block/cfq-iosched.c:2035:
+	struct cfq_data *cfqd = (struct cfq_data *) data;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#699: FILE: include/linux/cfq-iosched.h:131:
+        unsigned int flags;^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#699: FILE: include/linux/cfq-iosched.h:131:
+        unsigned int flags;^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#699: FILE: include/linux/cfq-iosched.h:131:
+        unsigned int flags;^I$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#730: FILE: include/linux/cfq-iosched.h:182:
+extern void cfq_rb_erase(struct rb_node *n, struct cfq_rb_root *root);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#731: FILE: include/linux/cfq-iosched.h:183:
+extern void cfq_slice_expired(struct cfq_data *cfqd, int timed_out);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#732: FILE: include/linux/cfq-iosched.h:184:
+extern int cfq_queue_dispatch_requests(struct cfq_data *cfqd, int force);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#733: FILE: include/linux/cfq-iosched.h:185:
+extern int wait_request_checker(struct cfq_data *cfqd);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#734: FILE: include/linux/cfq-iosched.h:186:
+extern int cfq_forced_dispatch(struct cfq_data *cfqd);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#735: FILE: include/linux/cfq-iosched.h:187:
+extern int __cfq_idle_slice_timer(struct cfq_data *cfqd);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#736: FILE: include/linux/cfq-iosched.h:188:
+extern void cfq_schedule_dispatch(struct cfq_data *cfqd);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000299725.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 19 errors, 14 warnings, 26 checks, 644 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000299725.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
