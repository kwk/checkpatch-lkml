WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#605: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#610: FILE: arch/x86/kernel/tlb_32.c:1:
+#include <linux/spinlock.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#647: FILE: arch/x86/kernel/tlb_32.c:38:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#660: FILE: arch/x86/kernel/tlb_32.c:51:
+ * ^IStop ipi delivery for the old mm. This is not synchronized with$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#661: FILE: arch/x86/kernel/tlb_32.c:52:
+ * ^Ithe other cpus, but smp_invalidate_interrupt ignore flush ipis$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#662: FILE: arch/x86/kernel/tlb_32.c:53:
+ * ^Ifor the wrong mm, and in the worst case we perform a superfluous$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#663: FILE: arch/x86/kernel/tlb_32.c:54:
+ * ^Itlb flush.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#665: FILE: arch/x86/kernel/tlb_32.c:56:
+ * ^INow the smp_invalidate_interrupt won't call leave_mm if cpu0$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#668: FILE: arch/x86/kernel/tlb_32.c:59:
+ * ^INow cpu0 accepts tlb flushes for the new mm.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#670: FILE: arch/x86/kernel/tlb_32.c:61:
+ * ^INow the other cpus will send tlb flush ipis.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#677: FILE: arch/x86/kernel/tlb_32.c:68:
+ * ^IAtomically set the bit [other cpus will start sending flush ipis],$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#678: FILE: arch/x86/kernel/tlb_32.c:69:
+ * ^Iand test the bit.$

CHECK:BRACES: braces {} should be used on all arms of this statement
#717: FILE: arch/x86/kernel/tlb_32.c:108:
+		if (per_cpu(cpu_tlbstate, cpu).state == TLBSTATE_OK) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#722: FILE: arch/x86/kernel/tlb_32.c:113:
+		} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#745: FILE: arch/x86/kernel/tlb_32.c:136:
+	BUG_ON(cpus_empty(cpumask));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#746: FILE: arch/x86/kernel/tlb_32.c:137:
+	BUG_ON(cpu_isset(smp_processor_id(), cpumask));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#747: FILE: arch/x86/kernel/tlb_32.c:138:
+	BUG_ON(!mm);

WARNING:TABSTOP: Statements should start on a tabstop
#828: FILE: arch/x86/kernel/tlb_32.c:219:
+		 else

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#859: FILE: arch/x86/kernel/tlb_64.c:1:
+#include <linux/init.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/mmu_context.h> instead of <asm/mmu_context.h>
#873: FILE: arch/x86/kernel/tlb_64.c:15:
+#include <asm/mmu_context.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#904: FILE: arch/x86/kernel/tlb_64.c:46:
+		spinlock_t tlbstate_lock;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#910: FILE: arch/x86/kernel/tlb_64.c:52:
+/* State is put into the per CPU data section, but padded
+   to a full cache line because other CPUs can access it and we don't

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#911: FILE: arch/x86/kernel/tlb_64.c:53:
+   want false sharing in the per cpu data segment. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#921: FILE: arch/x86/kernel/tlb_64.c:63:
+		BUG();

CHECK:BRACES: braces {} should be used on all arms of this statement
#1001: FILE: arch/x86/kernel/tlb_64.c:143:
+		if (read_pda(mmu_state) == TLBSTATE_OK) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1006: FILE: arch/x86/kernel/tlb_64.c:148:
+		} else

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000312347.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 20 warnings, 6 checks, 530 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000312347.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
