ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#74: FILE: cpt/cpt_image.h:236:
+static inline void __user * cpt_ptr_import(__u64 ptr)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#76: FILE: cpt/cpt_image.h:238:
+	return (void*)(unsigned long)ptr;

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#83: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#88: FILE: cpt/rst_mm.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#136: FILE: cpt/rst_mm.c:49:
+	if (vmai->cpt_flags&(VM_SHARED|VM_MAYSHARE))
 	                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#136: FILE: cpt/rst_mm.c:49:
+	if (vmai->cpt_flags&(VM_SHARED|VM_MAYSHARE))
 	                              ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#200: FILE: cpt/rst_mm.c:113:
+		/* Just open file
+		   TODO: open with correct flags */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#200: FILE: cpt/rst_mm.c:113:
+		   TODO: open with correct flags */

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#219: FILE: cpt/rst_mm.c:132:
+		if (IS_ERR((void*)addr))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vma"
#225: FILE: cpt/rst_mm.c:138:
+	if (vma == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#235: FILE: cpt/rst_mm.c:148:
+	 * anon_vma on two adjacent regions. Split it by brute force. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#257: FILE: cpt/rst_mm.c:170:
+			int j;
+			for (j = 0; j < (pb.cpt_end-pb.cpt_start)/PAGE_SIZE; j++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#257: FILE: cpt/rst_mm.c:170:
+			for (j = 0; j < (pb.cpt_end-pb.cpt_start)/PAGE_SIZE; j++) {
 			                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#257: FILE: cpt/rst_mm.c:170:
+			for (j = 0; j < (pb.cpt_end-pb.cpt_start)/PAGE_SIZE; j++) {
 			                                         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#260: FILE: cpt/rst_mm.c:173:
+				void *maddr;
+				err = get_user_pages(current, current->mm,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#261: FILE: cpt/rst_mm.c:174:
+				err = get_user_pages(current, current->mm,
+						(unsigned long)pb.cpt_start +

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#292: FILE: cpt/rst_mm.c:205:
+				sys_mprotect(vmai.cpt_start,
+						vmai.cpt_end - vmai.cpt_start,

WARNING:LINE_SPACING: Missing a blank line after declarations
#296: FILE: cpt/rst_mm.c:209:
+				int j;
+				for (j=0; j<(pb.cpt_end-pb.cpt_start)/sizeof(unsigned long); j++) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#296: FILE: cpt/rst_mm.c:209:
+				for (j=0; j<(pb.cpt_end-pb.cpt_start)/sizeof(unsigned long); j++) {
 				      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#296: FILE: cpt/rst_mm.c:209:
+				for (j=0; j<(pb.cpt_end-pb.cpt_start)/sizeof(unsigned long); j++) {
 				           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#296: FILE: cpt/rst_mm.c:209:
+				for (j=0; j<(pb.cpt_end-pb.cpt_start)/sizeof(unsigned long); j++) {
 				                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#296: FILE: cpt/rst_mm.c:209:
+				for (j=0; j<(pb.cpt_end-pb.cpt_start)/sizeof(unsigned long); j++) {
 				                                     ^

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#297: FILE: cpt/rst_mm.c:210:
+					err = __put_user(0UL, ((unsigned long __user*)(unsigned long)pb.cpt_start) + j);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#297: FILE: cpt/rst_mm.c:210:
+					err = __put_user(0UL, ((unsigned long __user*)(unsigned long)pb.cpt_start) + j);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#315: FILE: cpt/rst_mm.c:228:
+				sys_mprotect(vmai.cpt_start,
+						vmai.cpt_end - vmai.cpt_start,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000232262.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 9 warnings, 10 checks, 367 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000232262.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
