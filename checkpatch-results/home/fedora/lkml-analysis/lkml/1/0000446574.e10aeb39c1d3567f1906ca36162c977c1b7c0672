WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
Documents the linux/marker.h header. Fix a bitwise flag manipulation mistake

WARNING:TYPO_SPELLING: 'connexion' may be misspelled - perhaps 'connection'?
#38: 
It allows the use of a probe "private" data : upon probe connexion, it
                                                         ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#87: FILE: include/linux/marker.h:41:
+ * used at reentrancy-unfriendly sites. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:BIT_MACRO: Prefer using the BIT macro
#88: FILE: include/linux/marker.h:42:
+#define MF_OPTIMIZED	(1 << 0)	/* Use optimized markers */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#89: FILE: include/linux/marker.h:43:
+#define MF_LOCKDEP	(1 << 1)	/* Can call lockdep */

CHECK:BIT_MACRO: Prefer using the BIT macro
#90: FILE: include/linux/marker.h:44:
+#define MF_PRINTK	(1 << 2)	/* vprintk can be called in the probe */

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section("__markers_strings") over __attribute__((section("__markers_strings")))
#104: FILE: include/linux/marker.h:53:
+		__attribute__((section("__markers_strings"))) \

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#105: FILE: include/linux/marker.h:54:
+		__attribute__((section("__markers_strings"))) \
+		= #name; \

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section("__markers_strings") over __attribute__((section("__markers_strings")))
#107: FILE: include/linux/marker.h:56:
+		__attribute__((section("__markers_strings"))) \

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#108: FILE: include/linux/marker.h:57:
+		__attribute__((section("__markers_strings"))) \
+		= format; \

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section("__markers_data") over __attribute__((section("__markers_data")))
#110: FILE: include/linux/marker.h:59:
+		__attribute__((section("__markers_data"))) = \

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section("__markers") over __attribute__((section("__markers")))
#121: FILE: include/linux/marker.h:64:
+			__attribute__((section("__markers"))) = \

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#158: FILE: include/linux/marker.h:117:
+extern int marker_remove_probe(const char *name);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000446574.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 6 checks, 107 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000446574.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
