WARNING:TYPO_SPELLING: 'swaped' may be misspelled - perhaps 'swapped'?
#29: 
Make KVM guest pages be allocated dynamically and able to be swaped out.
                                                             ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'moduels' may be misspelled - perhaps 'modules'?
#32: 
if one module changes field of the inode, other moduels might break.
                                                ^^^^^^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#74: FILE: drivers/kvm/kvm.h:466:
 };
+#define kvm_to_address_space(kvm) (kvm->filp->f_mapping)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'kvm' may be better as '(kvm)' to avoid precedence issues
#74: FILE: drivers/kvm/kvm.h:466:
+#define kvm_to_address_space(kvm) (kvm->filp->f_mapping)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#102: FILE: drivers/kvm/kvm_main.c:360:
+			if (free->phys_mem[i].entry.val) {
+				swap_free(free->phys_mem[i].entry);
+			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'm' may be better as '(m)' to avoid precedence issues
#222: FILE: drivers/kvm/kvm_main.c:1050:
+#define address_space_to_kvm(m) (m->host->i_private)

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#242: FILE: drivers/kvm/kvm_main.c:1069:
TBD: after this change, a lot of logic in kvm can be simplified, eg, we

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:BAD_SIGN_OFF: Duplicate signature
#245: FILE: drivers/kvm/kvm_main.c:1070:
Signed-off-by: Shaohua Li <shaohua.li@intel.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#247: FILE: drivers/kvm/kvm_main.c:1071:
+redirty:
        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#317: FILE: drivers/kvm/kvm_main.c:2978:
+ ^I * vcpus'. It's better shadow page table is per-vm.$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#317: FILE: drivers/kvm/kvm_main.c:2978:
+ ^I * vcpus'. It's better shadow page table is per-vm.$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#339: FILE: drivers/kvm/kvm_main.c:3000:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#349: FILE: drivers/kvm/kvm_main.c:3010:
+	BUG();

WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#352: FILE: drivers/kvm/kvm_main.c:3013:
+static struct address_space_operations kvm_aops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#361: FILE: drivers/kvm/kvm_main.c:3022:
+	.capabilities	= BDI_CAP_NO_ACCT_DIRTY|BDI_CAP_NO_WRITEBACK,
 	             	                       ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000402011.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 8 warnings, 4 checks, 327 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000402011.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
