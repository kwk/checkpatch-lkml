WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#114: 
 drivers/ide/setup-pci.c             |  202 +++++++++++++++--------------------

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#247: FILE: drivers/ide/arm/icside.c:334:
+	BUG_ON(dma_channel_active(state->dev->dma));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#263: FILE: drivers/ide/arm/icside.c:353:
+	BUG_ON(dma_channel_active(state->dev->dma));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hwif"
#443: FILE: drivers/ide/arm/rapide.c:23:
+	if (hwif == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:CAMELCASE: Avoid CamelCase: <tfRegister>
#563: FILE: drivers/ide/ide-disk.c:601:
+	args.tfRegister[IDE_FEATURE_OFFSET]	= sub_cmd;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#650: FILE: drivers/ide/ide-dma.c:993:
+void ide_setup_dma(ide_hwif_t *hwif, unsigned long base, unsigned num_ports)

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#680: FILE: drivers/ide/ide-io.c:58:
+			     int uptodate, unsigned int nr_bytes, int dequeue)
 			         ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#704: FILE: drivers/ide/ide-io.c:127:
+	ret = __ide_end_request(drive, rq, uptodate, nr_bytes, 1);
 	                                   ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#745: FILE: drivers/ide/ide-io.c:264:
+	ret = __ide_end_request(drive, rq, uptodate, nr_sectors << 9, 0);
 	                                   ^^^^^^^^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#756: FILE: drivers/ide/ide-io.c:779:
 		if (set_pio_mode_abuse(drive->hwif, req_pio)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hwif->set_pio_mode"
#757: FILE: drivers/ide/ide-io.c:780:
+			if (hwif->set_pio_mode == NULL)

CHECK:BRACES: Unbalanced braces around else statement
#769: FILE: drivers/ide/ide-io.c:792:
+			} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#929: FILE: drivers/ide/ide-probe.c:1372:
+				printk(KERN_WARNING "IDE: %s: "

WARNING:SPLIT_STRING: quoted string split across lines
#930: FILE: drivers/ide/ide-probe.c:1373:
+				printk(KERN_WARNING "IDE: %s: "
+					"device_register error: %d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#931: FILE: drivers/ide/ide-probe.c:1374:
+					__FUNCTION__, ret);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#991: FILE: drivers/ide/ide-probe.c:1429:
+EXPORT_SYMBOL_GPL(ide_device_add);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1118: FILE: drivers/ide/ide.c:267:
+ide_hwif_t * ide_find_port(unsigned long base)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1140: FILE: drivers/ide/ide.c:289:
+EXPORT_SYMBOL_GPL(ide_find_port);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1369: FILE: drivers/ide/legacy/dtc2278.c:87:
+		/* Actually we do - there is a data sheet available for the
+		   Winbond but does anyone actually care */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1369: FILE: drivers/ide/legacy/dtc2278.c:87:
+		   Winbond but does anyone actually care */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1517: FILE: drivers/ide/legacy/ide-cs.c:156:
+    return ide_register_hw(&hw, &ide_undecoded_slave, 0, NULL);$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hwif"
#1549: FILE: drivers/ide/legacy/ide_platform.c:39:
+	if (hwif == NULL)

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#1743: FILE: drivers/ide/legacy/qd65xx.c:352:
+			outb(hwif->channel ? QD6580_DEF_DATA2 : QD6580_DEF_DATA, QD_TIMREG(&hwif->drives[0]));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1947: FILE: drivers/ide/pci/aec62xx.c:2:
+ * linux/drivers/ide/pci/aec62xx.c		Version 0.27	Sep 16, 2007

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1968: FILE: drivers/ide/pci/aec62xx.c:144:
 static unsigned int __devinit init_chipset_aec62xx(struct pci_dev *dev, const char *name)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1985: FILE: drivers/ide/pci/aec62xx.c:197:
+static const struct ide_port_info aec62xx_chipsets[] __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#1985: FILE: drivers/ide/pci/aec62xx.c:197:
+static const struct ide_port_info aec62xx_chipsets[] __devinitdata = {

Const init definitions should use __initconst instead of
__initdata.

Similarly init definitions without const require a separate
use of const.

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1998: FILE: drivers/ide/pci/aec62xx.c:259:
 static int __devinit aec62xx_init_one(struct pci_dev *dev, const struct pci_device_id *id)

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#2012: FILE: drivers/ide/pci/alim15x3.c:2:
+ * linux/drivers/ide/pci/alim15x3.c		Version 0.29	Sep 16 2007

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2025: FILE: drivers/ide/pci/alim15x3.c:500:
+			chip_is_1543c_e = ((tmpbyte & 0x1e) == 0x12) ? 1: 0;
 			                                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#2135: FILE: drivers/ide/pci/alim15x3.c:749:
+static const struct ide_port_info ali15x3_chipset __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#2135: FILE: drivers/ide/pci/alim15x3.c:749:
+static const struct ide_port_info ali15x3_chipset __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2192: FILE: drivers/ide/pci/amd74xx.c:243:
 static void __devinit init_hwif_amd74xx(ide_hwif_t *hwif)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#2251: FILE: drivers/ide/pci/amd74xx.c:298:
+static const struct ide_port_info amd74xx_chipsets[] __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#2251: FILE: drivers/ide/pci/amd74xx.c:298:
+static const struct ide_port_info amd74xx_chipsets[] __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#2265: FILE: drivers/ide/pci/atiixp.c:192:
+static const struct ide_port_info atiixp_pci_info[] __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#2265: FILE: drivers/ide/pci/atiixp.c:192:
+static const struct ide_port_info atiixp_pci_info[] __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#2435: FILE: drivers/ide/pci/cmd64x.c:551:
+static const struct ide_port_info cmd64x_chipsets[] __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#2435: FILE: drivers/ide/pci/cmd64x.c:551:
+static const struct ide_port_info cmd64x_chipsets[] __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2449: FILE: drivers/ide/pci/cmd64x.c:592:
 static int __devinit cmd64x_init_one(struct pci_dev *dev, const struct pci_device_id *id)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#2465: FILE: drivers/ide/pci/cs5520.c:144:
+static const struct ide_port_info cyrix_chipsets[] __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#2465: FILE: drivers/ide/pci/cs5520.c:144:
+static const struct ide_port_info cyrix_chipsets[] __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2471: FILE: drivers/ide/pci/cs5520.c:155:
 static int __devinit cs5520_init_one(struct pci_dev *dev, const struct pci_device_id *id)

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#2520: FILE: drivers/ide/pci/cs5530.c:2:
+ * linux/drivers/ide/pci/cs5530.c		Version 0.77	Sep 24 2007

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2525: FILE: drivers/ide/pci/cs5530.c:146:
 static unsigned int __devinit init_chipset_cs5530 (struct pci_dev *dev, const char *name)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#2556: FILE: drivers/ide/pci/cs5530.c:258:
+static const struct ide_port_info cs5530_chipset __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#2556: FILE: drivers/ide/pci/cs5530.c:258:
+static const struct ide_port_info cs5530_chipset __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#2569: FILE: drivers/ide/pci/cs5535.c:189:
+static const struct ide_port_info cs5535_chipset __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#2569: FILE: drivers/ide/pci/cs5535.c:189:
+static const struct ide_port_info cs5535_chipset __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2579: FILE: drivers/ide/pci/cy82c693.c:429:
 static void __devinit init_hwif_cy82c693(ide_hwif_t *hwif)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#2590: FILE: drivers/ide/pci/cy82c693.c:451:
+static const struct ide_port_info cy82c693_chipset __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#2590: FILE: drivers/ide/pci/cy82c693.c:451:
+static const struct ide_port_info cy82c693_chipset __devinitdata = {

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'extra_flags' may be better as '(extra_flags)' to avoid precedence issues
#2635: FILE: drivers/ide/pci/generic.c:59:
+#define DECLARE_GENERIC_PCI_DEV(name_str, extra_flags) \
 	{ \
 		.name		= name_str, \
 		.host_flags	= IDE_HFLAG_TRUST_BIOS_FOR_DMA | \
+				  extra_flags | \
 				  IDE_HFLAG_BOOTABLE, \
 		.swdma_mask	= ATA_SWDMA2, \
 		.mwdma_mask	= ATA_MWDMA2, \
 		.udma_mask	= ATA_UDMA6, \
 	}

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#2649: FILE: drivers/ide/pci/generic.c:70:
+static const struct ide_port_info generic_chipsets[] __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#2649: FILE: drivers/ide/pci/generic.c:70:
+static const struct ide_port_info generic_chipsets[] __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2688: FILE: drivers/ide/pci/generic.c:124:
 static int __devinit generic_init_one(struct pci_dev *dev, const struct pci_device_id *id)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#2704: FILE: drivers/ide/pci/hpt34x.c:132:
+static const struct ide_port_info hpt34x_chipsets[] __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#2704: FILE: drivers/ide/pci/hpt34x.c:132:
+static const struct ide_port_info hpt34x_chipsets[] __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2710: FILE: drivers/ide/pci/hpt34x.c:159:
 static int __devinit hpt34x_init_one(struct pci_dev *dev, const struct pci_device_id *id)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#2726: FILE: drivers/ide/pci/hpt366.c:1428:
+static const struct ide_port_info hpt366_chipsets[] __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#2726: FILE: drivers/ide/pci/hpt366.c:1428:
+static const struct ide_port_info hpt366_chipsets[] __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#2748: FILE: drivers/ide/pci/it8213.c:196:
+static const struct ide_port_info it8213_chipsets[] __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#2748: FILE: drivers/ide/pci/it8213.c:196:
+static const struct ide_port_info it8213_chipsets[] __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#2761: FILE: drivers/ide/pci/it821x.c:641:
+static const struct ide_port_info it821x_chipsets[] __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#2761: FILE: drivers/ide/pci/it821x.c:641:
+static const struct ide_port_info it821x_chipsets[] __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#2774: FILE: drivers/ide/pci/jmicron.c:121:
+static const struct ide_port_info jmicron_chipset __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#2774: FILE: drivers/ide/pci/jmicron.c:121:
+static const struct ide_port_info jmicron_chipset __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#2787: FILE: drivers/ide/pci/ns87415.c:263:
+static const struct ide_port_info ns87415_chipset __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#2787: FILE: drivers/ide/pci/ns87415.c:263:
+static const struct ide_port_info ns87415_chipset __devinitdata = {

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#2798: FILE: drivers/ide/pci/opti621.c:2:
+ *  linux/drivers/ide/pci/opti621.c		Version 0.9	Sep 24, 2007

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#2834: FILE: drivers/ide/pci/opti621.c:336:
+static const struct ide_port_info opti621_chipsets[] __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#2834: FILE: drivers/ide/pci/opti621.c:336:
+static const struct ide_port_info opti621_chipsets[] __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#2847: FILE: drivers/ide/pci/pdc202xx_new.c:516:
+static const struct ide_port_info pdcnew_chipsets[] __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#2847: FILE: drivers/ide/pci/pdc202xx_new.c:516:
+static const struct ide_port_info pdcnew_chipsets[] __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2853: FILE: drivers/ide/pci/pdc202xx_new.c:535:
 static int __devinit pdc202new_init_one(struct pci_dev *dev, const struct pci_device_id *id)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2866: FILE: drivers/ide/pci/pdc202xx_old.c:303:
 static void __devinit init_hwif_pdc202xx(ide_hwif_t *hwif)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#2899: FILE: drivers/ide/pci/pdc202xx_old.c:393:
+static const struct ide_port_info pdc202xx_chipsets[] __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#2899: FILE: drivers/ide/pci/pdc202xx_old.c:393:
+static const struct ide_port_info pdc202xx_chipsets[] __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2920: FILE: drivers/ide/pci/pdc202xx_old.c:422:
 static int __devinit pdc202xx_init_one(struct pci_dev *dev, const struct pci_device_id *id)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#2936: FILE: drivers/ide/pci/piix.c:399:
+static const struct ide_port_info piix_pci_info[] __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#2936: FILE: drivers/ide/pci/piix.c:399:
+static const struct ide_port_info piix_pci_info[] __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2942: FILE: drivers/ide/pci/piix.c:450:
 static int __devinit piix_init_one(struct pci_dev *dev, const struct pci_device_id *id)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2967: FILE: drivers/ide/pci/rz1000.c:44:
+			hwif->mate->serialized = hwif->serialized = 1;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#2976: FILE: drivers/ide/pci/rz1000.c:52:
+static const struct ide_port_info rz1000_chipset __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#2976: FILE: drivers/ide/pci/rz1000.c:52:
+static const struct ide_port_info rz1000_chipset __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#2992: FILE: drivers/ide/pci/sc1200.c:375:
+static const struct ide_port_info sc1200_chipset __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#2992: FILE: drivers/ide/pci/sc1200.c:375:
+static const struct ide_port_info sc1200_chipset __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#3011: FILE: drivers/ide/pci/scc_pata.c:546:
+static int __devinit init_setup_scc(struct pci_dev *dev,

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#3021: FILE: drivers/ide/pci/scc_pata.c:706:
+static const struct ide_port_info scc_chipsets[] __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#3021: FILE: drivers/ide/pci/scc_pata.c:706:
+static const struct ide_port_info scc_chipsets[] __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#3027: FILE: drivers/ide/pci/scc_pata.c:719:
 static int __devinit scc_init_one(struct pci_dev *dev, const struct pci_device_id *id)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#3059: FILE: drivers/ide/pci/serverworks.c:369:
+static const struct ide_port_info serverworks_chipsets[] __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#3059: FILE: drivers/ide/pci/serverworks.c:369:
+static const struct ide_port_info serverworks_chipsets[] __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#3065: FILE: drivers/ide/pci/serverworks.c:424:
 static int __devinit svwks_init_one(struct pci_dev *dev, const struct pci_device_id *id)

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#3122: FILE: drivers/ide/pci/siimage.c:2:
+ * linux/drivers/ide/pci/siimage.c		Version 1.18	Oct 18 2007

ERROR:SPACING: space required before the open parenthesis '('
#3133: FILE: drivers/ide/pci/siimage.c:61:
+	switch(pdev->device) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#3220: FILE: drivers/ide/pci/siimage.c:390:
+static int sil_sata_busproc(ide_drive_t * drive, int state)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#3306: FILE: drivers/ide/pci/siimage.c:856:
 static void __devinit init_hwif_siimage(ide_hwif_t *hwif)

CHECK:BRACES: braces {} should be used on all arms of this statement
#3318: FILE: drivers/ide/pci/siimage.c:864:
+	if (sata) {
[...]
 		}
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3332: FILE: drivers/ide/pci/siimage.c:876:
+	} else

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#3348: FILE: drivers/ide/pci/siimage.c:908:
+static const struct ide_port_info siimage_chipsets[] __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#3348: FILE: drivers/ide/pci/siimage.c:908:
+static const struct ide_port_info siimage_chipsets[] __devinitdata = {

CHECK:BRACES: Unbalanced braces around else statement
#3361: FILE: drivers/ide/pci/sis5513.c:267:
+	} else

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#3370: FILE: drivers/ide/pci/sis5513.c:582:
+static const struct ide_port_info sis5513_chipset __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#3370: FILE: drivers/ide/pci/sis5513.c:582:
+static const struct ide_port_info sis5513_chipset __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#3397: FILE: drivers/ide/pci/sl82c105.c:390:
+static const struct ide_port_info sl82c105_chipset __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#3397: FILE: drivers/ide/pci/sl82c105.c:390:
+static const struct ide_port_info sl82c105_chipset __devinitdata = {

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#3417: FILE: drivers/ide/pci/slc90e66.c:2:
+ *  linux/drivers/ide/pci/slc90e66.c	Version 0.19	Sep 24, 2007

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#3453: FILE: drivers/ide/pci/slc90e66.c:151:
+static const struct ide_port_info slc90e66_chipset __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#3453: FILE: drivers/ide/pci/slc90e66.c:151:
+static const struct ide_port_info slc90e66_chipset __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#3466: FILE: drivers/ide/pci/tc86c001.c:221:
+static const struct ide_port_info tc86c001_chipset __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#3466: FILE: drivers/ide/pci/tc86c001.c:221:
+static const struct ide_port_info tc86c001_chipset __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#3479: FILE: drivers/ide/pci/triflex.c:105:
+static const struct ide_port_info triflex_device __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#3479: FILE: drivers/ide/pci/triflex.c:105:
+static const struct ide_port_info triflex_device __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#3500: FILE: drivers/ide/pci/trm290.c:322:
+static const struct ide_port_info trm290_chipset __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#3500: FILE: drivers/ide/pci/trm290.c:322:
+static const struct ide_port_info trm290_chipset __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#3521: FILE: drivers/ide/pci/via82cxxx.c:423:
 static void __devinit init_hwif_via82cxxx(ide_hwif_t *hwif)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#3576: FILE: drivers/ide/pci/via82cxxx.c:435:
+static const struct ide_port_info via82cxxx_chipset __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#3576: FILE: drivers/ide/pci/via82cxxx.c:435:
+static const struct ide_port_info via82cxxx_chipset __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#3591: FILE: drivers/ide/pci/via82cxxx.c:450:
 static int __devinit via_init_one(struct pci_dev *dev, const struct pci_device_id *id)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#3612: FILE: drivers/ide/pci/via82cxxx.c:472:
+		d.enablebits[1].reg = d.enablebits[0].reg = 0;

CHECK:CAMELCASE: Avoid CamelCase: <_CHRP_Pegasos>
#3618: FILE: drivers/ide/pci/via82cxxx.c:478:
+	if (machine_is(chrp) && _chrp_type == _CHRP_Pegasos)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3722: FILE: drivers/ide/setup-pci.c:230:
+	printk(KERN_INFO "%s: IDE controller (0x%04x:0x%04x rev 0x%02x) at "

WARNING:SPLIT_STRING: quoted string split across lines
#3723: FILE: drivers/ide/setup-pci.c:231:
+	printk(KERN_INFO "%s: IDE controller (0x%04x:0x%04x rev 0x%02x) at "
+			 " PCI slot %s\n", d->name, dev->vendor, dev->device,

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#3814: FILE: drivers/ide/setup-pci.c:362:
+static ide_hwif_t *ide_hwif_configure(struct pci_dev *dev, const struct ide_port_info *d, ide_hwif_t *mate, int port, int irq)

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#3897: FILE: drivers/ide/setup-pci.c:476:
+static int ide_setup_pci_controller(struct pci_dev *dev, const struct ide_port_info *d, int noisy, int *config)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around d->enablebits[port]
#3947: FILE: drivers/ide/setup-pci.c:532:
+		const ide_pci_enablebit_t *e = &(d->enablebits[port]);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3952: FILE: drivers/ide/setup-pci.c:536:
+			printk(KERN_INFO "%s: IDE port disabled\n", d->name);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4097: FILE: drivers/ide/setup-pci.c:692:
+		ret = do_ide_setup_pci_device(pdev[i], d, &idx[i*2], !i);
 		                                                ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'hwif' - possible side-effects?
#4196: FILE: include/asm-cris/arch-v32/ide.h:57:
+#define ide_ack_intr(hwif)	((hwif)->ack_intr(hwif))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'hwif' - possible side-effects?
#4233: FILE: include/asm-m68k/ide.h:140:
+#define ide_ack_intr(hwif)	((hwif)->ack_intr ? (hwif)->ack_intr(hwif) : 1)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'hwif' - possible side-effects?
#4270: FILE: include/asm-powerpc/ide.h:72:
+#define ide_ack_intr(hwif) ((hwif)->ack_intr ? (hwif)->ack_intr(hwif) : 1)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4374: FILE: include/linux/ide.h:221:
+struct hwif_s * ide_find_port(unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#4374: FILE: include/linux/ide.h:221:
+struct hwif_s * ide_find_port(unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'hw_regs_t *' should also have an identifier name
#4376: FILE: include/linux/ide.h:223:
+int ide_register_hw(hw_regs_t *, void (*)(struct hwif_s *), int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#4376: FILE: include/linux/ide.h:223:
+int ide_register_hw(hw_regs_t *, void (*)(struct hwif_s *), int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hwif_s **' should also have an identifier name
#4376: FILE: include/linux/ide.h:223:
+int ide_register_hw(hw_regs_t *, void (*)(struct hwif_s *), int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hwif_s *' should also have an identifier name
#4456: FILE: include/linux/ide.h:716:
+	void (*fixup)(struct hwif_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_dev *' should also have an identifier name
#4554: FILE: include/linux/ide.h:1153:
+void ide_pci_setup_ports(struct pci_dev *, const struct ide_port_info *, int, u8 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct ide_port_info *' should also have an identifier name
#4554: FILE: include/linux/ide.h:1153:
+void ide_pci_setup_ports(struct pci_dev *, const struct ide_port_info *, int, u8 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#4554: FILE: include/linux/ide.h:1153:
+void ide_pci_setup_ports(struct pci_dev *, const struct ide_port_info *, int, u8 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8 *' should also have an identifier name
#4554: FILE: include/linux/ide.h:1153:
+void ide_pci_setup_ports(struct pci_dev *, const struct ide_port_info *, int, u8 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_dev *' should also have an identifier name
#4555: FILE: include/linux/ide.h:1154:
+void ide_setup_pci_noise(struct pci_dev *, const struct ide_port_info *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct ide_port_info *' should also have an identifier name
#4555: FILE: include/linux/ide.h:1154:
+void ide_setup_pci_noise(struct pci_dev *, const struct ide_port_info *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_dev *' should also have an identifier name
#4600: FILE: include/linux/ide.h:1247:
+int ide_setup_pci_device(struct pci_dev *, const struct ide_port_info *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct ide_port_info *' should also have an identifier name
#4600: FILE: include/linux/ide.h:1247:
+int ide_setup_pci_device(struct pci_dev *, const struct ide_port_info *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_dev *' should also have an identifier name
#4601: FILE: include/linux/ide.h:1248:
+int ide_setup_pci_devices(struct pci_dev *, struct pci_dev *, const struct ide_port_info *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_dev *' should also have an identifier name
#4601: FILE: include/linux/ide.h:1248:
+int ide_setup_pci_devices(struct pci_dev *, struct pci_dev *, const struct ide_port_info *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct ide_port_info *' should also have an identifier name
#4601: FILE: include/linux/ide.h:1248:
+int ide_setup_pci_devices(struct pci_dev *, struct pci_dev *, const struct ide_port_info *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000367746.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 37 errors, 94 warnings, 18 checks, 3795 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000367746.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
