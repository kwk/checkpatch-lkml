ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: fs/namespace.c:1852:
+               int i;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: fs/namespace.c:1852:
+               int i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#80: FILE: fs/namespace.c:1854:
+               if (fs1 == 0L || fs2 == 0L) return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: fs/namespace.c:1854:
+               if (fs1 == 0L || fs2 == 0L) return 1;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#80: FILE: fs/namespace.c:1854:
+               if (fs1 == 0L || fs2 == 0L) return 1;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#82: FILE: fs/namespace.c:1856:
+               for (i=0;i<256;i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: fs/namespace.c:1856:
+               for (i=0;i<256;i++)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#82: FILE: fs/namespace.c:1856:
+               for (i=0;i<256;i++)
+               {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#82: FILE: fs/namespace.c:1856:
+               for (i=0;i<256;i++)
+               {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#82: FILE: fs/namespace.c:1856:
+               for (i=0;i<256;i++)
                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ';' (ctx:VxV)
#82: FILE: fs/namespace.c:1856:
+               for (i=0;i<256;i++)
                        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#82: FILE: fs/namespace.c:1856:
+               for (i=0;i<256;i++)
                          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#82: FILE: fs/namespace.c:1856:
+               for (i=0;i<256;i++)
                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: fs/namespace.c:1857:
+               {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: fs/namespace.c:1857:
+               {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#84: FILE: fs/namespace.c:1858:
+                       if (fs1[i] != fs2[i])$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: fs/namespace.c:1858:
+                       if (fs1[i] != fs2[i])$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#84: FILE: fs/namespace.c:1858:
+                       if (fs1[i] != fs2[i])
+                               return 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: fs/namespace.c:1859:
+                               return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: fs/namespace.c:1859:
+                               return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#86: FILE: fs/namespace.c:1860:
+                       if (fs1[i] == 0 && fs2[i] == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: fs/namespace.c:1860:
+                       if (fs1[i] == 0 && fs2[i] == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#86: FILE: fs/namespace.c:1860:
+                       if (fs1[i] == 0 && fs2[i] == 0)
+                               return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#87: FILE: fs/namespace.c:1861:
+                               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: fs/namespace.c:1861:
+                               return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#88: FILE: fs/namespace.c:1862:
+                       if (fs1[i] == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: fs/namespace.c:1862:
+                       if (fs1[i] == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#88: FILE: fs/namespace.c:1862:
+                       if (fs1[i] == 0)
+                               return 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: fs/namespace.c:1863:
+                               return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: fs/namespace.c:1863:
+                               return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: fs/namespace.c:1864:
+                       if (fs2[i] == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: fs/namespace.c:1864:
+                       if (fs2[i] == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#90: FILE: fs/namespace.c:1864:
+                       if (fs2[i] == 0)
+                               return 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#91: FILE: fs/namespace.c:1865:
+                               return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: fs/namespace.c:1865:
+                               return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#92: FILE: fs/namespace.c:1866:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: fs/namespace.c:1866:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#93: FILE: fs/namespace.c:1867:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: fs/namespace.c:1867:
+               return 0;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#96: FILE: fs/namespace.c:1870:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#106: FILE: fs/namespace.c:1926:
+        * This causes ext2 filesystems to be mounted with the ext4 driver.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: fs/namespace.c:1927:
+        *$

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: fs/namespace.c:1928:
+        * Part of the ext2/3 as ext4 patch.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: fs/namespace.c:1929:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: fs/namespace.c:1930:
+       if (compare_fs_names(type_page, "ext2") == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#110: FILE: fs/namespace.c:1930:
+       if (compare_fs_names(type_page, "ext2") == 0)
+               type_page[3] = '4';

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: fs/namespace.c:1931:
+               type_page[3] = '4';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: fs/namespace.c:1931:
+               type_page[3] = '4';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: fs/namespace.c:1934:
+        * This causes ext3 filesystems to be mounted with the ext4 driver.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: fs/namespace.c:1935:
+        *$

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: fs/namespace.c:1936:
+        * Part of the ext2/3 as ext4 patch.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: fs/namespace.c:1937:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: fs/namespace.c:1938:
+       if (compare_fs_names(type_page, "ext3") == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#118: FILE: fs/namespace.c:1938:
+       if (compare_fs_names(type_page, "ext3") == 0)
+               type_page[3] = '4';

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: fs/namespace.c:1939:
+               type_page[3] = '4';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: fs/namespace.c:1939:
+               type_page[3] = '4';$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000040646.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 30 errors, 25 warnings, 1 checks, 64 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000040646.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
