WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#37: FILE: Makefile:4:
+EXTRAVERSION = .18
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: No space is necessary after a cast
#68: FILE: arch/x86/kernel/hpet.c:290:
+	cnt += (u32) delta;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#123: FILE: drivers/acpi/ec.c:231:
+		if (acpi_ec_check_status(ec,event))
 		                           ^

CHECK:SPACING: No space is necessary after a cast
#195: FILE: drivers/net/niu.c:5247:
+						(struct page *) page->mapping;

WARNING:LINE_SPACING: Missing a blank line after declarations
#197: FILE: drivers/net/niu.c:5249:
+					u64 base = page->index;
+					base = base >> RBR_DESCR_ADDR_SHIFT;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#220: FILE: drivers/net/niu.c:5272:
+					(void) release_tx_packet(np, rp, j);

CHECK:BRACES: Unbalanced braces around else statement
#286: FILE: drivers/spi/pxa2xx_spi.c:416:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#305: FILE: drivers/spi/pxa2xx_spi.c:435:
+			next_msg = list_entry(drv_data->queue.next,
+					struct spi_message, queue);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#375: FILE: drivers/spi/pxa2xx_spi.c:890:
+	if (transfer->len > MAX_DMA_LEN && chip->enable_dma) {
+

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#378: FILE: drivers/spi/pxa2xx_spi.c:893:
+		if (message->is_dma_mapped
+				|| transfer->rx_dma || transfer->tx_dma) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pump_transfers', this function's name, in a string
#380: FILE: drivers/spi/pxa2xx_spi.c:895:
+				"pump_transfers: mapped transfer length "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#381: FILE: drivers/spi/pxa2xx_spi.c:896:
+				"pump_transfers: mapped transfer length "
+				"of %u is greater than %d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#389: FILE: drivers/spi/pxa2xx_spi.c:904:
+		if (printk_ratelimit())

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pump_transfers', this function's name, in a string
#390: FILE: drivers/spi/pxa2xx_spi.c:905:
+			dev_warn(&message->spi->dev, "pump_transfers: "

WARNING:SPLIT_STRING: quoted string split across lines
#391: FILE: drivers/spi/pxa2xx_spi.c:906:
+			dev_warn(&message->spi->dev, "pump_transfers: "
+				"DMA disabled for transfer length %ld "

WARNING:SPLIT_STRING: quoted string split across lines
#392: FILE: drivers/spi/pxa2xx_spi.c:907:
+				"DMA disabled for transfer length %ld "
+				"greater than %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pump_transfers', this function's name, in a string
#410: FILE: drivers/spi/pxa2xx_spi.c:976:
+						"pump_transfers: "

WARNING:REPEATED_WORD: Possible repeated word: 'have'
#425: FILE: drivers/spi/pxa2xx_spi.c:995:
+	 * have have been passed with buffers that are already dma mapped.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#505: FILE: include/linux/clockchips.h:130:
+extern void clockevents_handle_noop(struct clock_event_device *dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: No space is necessary after a cast
#519: FILE: include/net/netlink.h:707:
+	return remaining >= (int) sizeof(*nla) &&

WARNING:TYPO_SPELLING: 'alrady' may be misspelled - perhaps 'already'?
#576: FILE: kernel/time/tick-broadcast.c:190:
+	 * when the event alrady expired. clockevents_program_event()
 	                  ^^^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#685: FILE: kernel/time/tick-broadcast.c:533:
+		if (was_periodic && !cpus_empty(mask)) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#688: FILE: kernel/time/tick-broadcast.c:536:
+		} else

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#714: FILE: kernel/time/tick-internal.h:20:
+extern int tick_dev_program_event(struct clock_event_device *dev,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#757: FILE: kernel/time/tick-oneshot.c:52:
+			printk(KERN_WARNING

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#807: FILE: net/ipv4/udp.c:964:
+	if ((rc = sock_queue_rcv_skb(sk, skb)) < 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#932: FILE: net/ipv6/ip6_output.c:934:
+	/*
+	 * Here if the dst entry we've looked up

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#953: FILE: net/ipv6/ip6_output.c:955:
+			/*
+			 * We need to get the dst entry for the

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#960: FILE: net/ipv6/ip6_output.c:962:
+			if ((err = (*dst)->error))

WARNING:TABSTOP: Statements should start on a tabstop
#1028: FILE: net/sctp/sm_make_chunk.c:1889:
+			    if (sctp_auth_enable)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (28, 36)
#1028: FILE: net/sctp/sm_make_chunk.c:1889:
+			    if (sctp_auth_enable)
+				    asoc->peer.auth_capable = 1;

WARNING:TABSTOP: Statements should start on a tabstop
#1034: FILE: net/sctp/sm_make_chunk.c:1894:
+			    if (sctp_addip_enable)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (28, 36)
#1034: FILE: net/sctp/sm_make_chunk.c:1894:
+			    if (sctp_addip_enable)
+				    asoc->peer.asconf_capable = 1;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000219342.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 19 warnings, 12 checks, 883 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000219342.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
