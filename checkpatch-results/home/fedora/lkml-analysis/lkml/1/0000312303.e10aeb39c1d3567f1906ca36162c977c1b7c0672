WARNING:TYPO_SPELLING: 'occurances' may be misspelled - perhaps 'occurrences'?
#17: 
Subject: [PATCH] ia64: remove remaining __FUNCTION__ occurances
                                                     ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPLIT_STRING: quoted string split across lines
#75: FILE: arch/ia64/hp/common/hwsw_iommu.c:74:
 		printk(KERN_WARNING "%s: Failed to initialize software I/O TLB,"
+		       " reverting to hpzx1 platform vector\n", __func__);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#107: FILE: arch/ia64/hp/common/sba_iommu.c:725:
+			DBG_RES("%s( ,%x,%x) %x/%lx %x %p %lx\n", __func__, (uint) iova, size,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: arch/ia64/hp/common/sba_iommu.c:726:
+^I^I^I        bits_not_wanted, m, pide, res_ptr, *res_ptr);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: No space is necessary after a cast
#118: FILE: arch/ia64/hp/common/sba_iommu.c:943:
+	DBG_RUN("%s() 0x%p -> 0x%lx\n", __func__, addr, (long) iovp | offset);

CHECK:SPACING: No space is necessary after a cast
#128: FILE: arch/ia64/hp/common/sba_iommu.c:1031:
+	DBG_RUN("%s() iovp 0x%lx/%x\n", __func__, (long) iova, size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#183: FILE: arch/ia64/hp/common/sba_iommu.c:1571:
+	DBG_INIT("%s() IOV page size %ldK pdir %p size %x\n", __func__,
 		iovp_size >> 10, ioc->pdir_base, ioc->pdir_size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#219: FILE: arch/ia64/hp/common/sba_iommu.c:1769:
+	DBG_INIT("%s: PAGE_SIZE %ldK, iovp_size %ldK\n", __func__,
 		PAGE_SIZE >> 10, iovp_size >> 10);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#280: FILE: arch/ia64/kernel/efi.c:382:
+			printk(KERN_INFO "%s: no need to install ITR for PAL code\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#357: FILE: arch/ia64/kernel/iosapic.c:932:
+		printk(KERN_ERR "%s: invalid int type 0x%x\n", __func__,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#375: FILE: arch/ia64/kernel/iosapic.c:1012:
+	printk(KERN_WARNING "%s: failed to allocate iosapic\n", __func__);

WARNING:SPLIT_STRING: quoted string split across lines
#414: FILE: arch/ia64/kernel/irq_ia64.c:443:
 				       "vector %d on CPU %d is not mapped "
+				       "to any IRQ!\n", __func__, vector,

WARNING:SPLIT_STRING: quoted string split across lines
#423: FILE: arch/ia64/kernel/irq_ia64.c:508:
 				       "vector %d on CPU %d not being mapped "
+				       "to any IRQ!!\n", __func__, vector,

WARNING:LONG_LINE_STRING: line length of 103 exceeds 100 columns
#437: FILE: arch/ia64/kernel/mca.c:416:
+			IA64_MCA_DEBUG("%s: SAL error record type %d retrieved. Record length = %ld\n",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPLIT_STRING: quoted string split across lines
#456: FILE: arch/ia64/kernel/mca.c:597:
 	IA64_MCA_DEBUG("%s: corrected platform error "
+		       "vector %#x registered\n", __func__, cpev);

ERROR:CODE_INDENT: code indent should use tabs where possible
#568: FILE: arch/ia64/kernel/mca.c:1614:
+^I^I        __func__, cpu);$

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#627: FILE: arch/ia64/kernel/mca.c:1884:
+	IA64_MCA_DEBUG("%s: begin\n", __func__);

WARNING:LONG_LINE: line length of 158 exceeds 100 columns
#807: FILE: arch/ia64/kernel/perfmon.c:230:
+		if (unlikely(pfm_sysctl.debug >0)) { printk("%s.%d: CPU%d [%d] ", __func__, __LINE__, smp_processor_id(), task_pid_nr(current)); printk a; } \

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#807: FILE: arch/ia64/kernel/perfmon.c:230:
+		if (unlikely(pfm_sysctl.debug >0)) { printk("%s.%d: CPU%d [%d] ", __func__, __LINE__, smp_processor_id(), task_pid_nr(current)); printk a; } \

ERROR:SPACING: spaces required around that '>' (ctx:WxV)
#807: FILE: arch/ia64/kernel/perfmon.c:230:
+		if (unlikely(pfm_sysctl.debug >0)) { printk("%s.%d: CPU%d [%d] ", __func__, __LINE__, smp_processor_id(), task_pid_nr(current)); printk a; } \
 		                              ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#807: FILE: arch/ia64/kernel/perfmon.c:230:
+		if (unlikely(pfm_sysctl.debug >0)) { printk("%s.%d: CPU%d [%d] ", __func__, __LINE__, smp_processor_id(), task_pid_nr(current)); printk a; } \

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LONG_LINE: line length of 187 exceeds 100 columns
#813: FILE: arch/ia64/kernel/perfmon.c:235:
+		if (unlikely(pfm_sysctl.debug > 0 && pfm_sysctl.debug_ovfl >0)) { printk("%s.%d: CPU%d [%d] ", __func__, __LINE__, smp_processor_id(), task_pid_nr(current)); printk a; } \

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#813: FILE: arch/ia64/kernel/perfmon.c:235:
+		if (unlikely(pfm_sysctl.debug > 0 && pfm_sysctl.debug_ovfl >0)) { printk("%s.%d: CPU%d [%d] ", __func__, __LINE__, smp_processor_id(), task_pid_nr(current)); printk a; } \

ERROR:SPACING: spaces required around that '>' (ctx:WxV)
#813: FILE: arch/ia64/kernel/perfmon.c:235:
+		if (unlikely(pfm_sysctl.debug > 0 && pfm_sysctl.debug_ovfl >0)) { printk("%s.%d: CPU%d [%d] ", __func__, __LINE__, smp_processor_id(), task_pid_nr(current)); printk a; } \
 		                                                           ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#813: FILE: arch/ia64/kernel/perfmon.c:235:
+		if (unlikely(pfm_sysctl.debug > 0 && pfm_sysctl.debug_ovfl >0)) { printk("%s.%d: CPU%d [%d] ", __func__, __LINE__, smp_processor_id(), task_pid_nr(current)); printk a; } \

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#826: FILE: arch/ia64/kernel/perfmon_default_smpl.c:27:
+		if (unlikely(pfm_sysctl.debug >0)) { printk("%s.%d: CPU%d ", __func__, __LINE__, smp_processor_id()); printk a; } \

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#826: FILE: arch/ia64/kernel/perfmon_default_smpl.c:27:
+		if (unlikely(pfm_sysctl.debug >0)) { printk("%s.%d: CPU%d ", __func__, __LINE__, smp_processor_id()); printk a; } \

ERROR:SPACING: spaces required around that '>' (ctx:WxV)
#826: FILE: arch/ia64/kernel/perfmon_default_smpl.c:27:
+		if (unlikely(pfm_sysctl.debug >0)) { printk("%s.%d: CPU%d ", __func__, __LINE__, smp_processor_id()); printk a; } \
 		                              ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#826: FILE: arch/ia64/kernel/perfmon_default_smpl.c:27:
+		if (unlikely(pfm_sysctl.debug >0)) { printk("%s.%d: CPU%d ", __func__, __LINE__, smp_processor_id()); printk a; } \

WARNING:LONG_LINE: line length of 160 exceeds 100 columns
#832: FILE: arch/ia64/kernel/perfmon_default_smpl.c:32:
+		if (unlikely(pfm_sysctl.debug > 0 && pfm_sysctl.debug_ovfl >0)) { printk("%s.%d: CPU%d ", __func__, __LINE__, smp_processor_id()); printk a; } \

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#832: FILE: arch/ia64/kernel/perfmon_default_smpl.c:32:
+		if (unlikely(pfm_sysctl.debug > 0 && pfm_sysctl.debug_ovfl >0)) { printk("%s.%d: CPU%d ", __func__, __LINE__, smp_processor_id()); printk a; } \

ERROR:SPACING: spaces required around that '>' (ctx:WxV)
#832: FILE: arch/ia64/kernel/perfmon_default_smpl.c:32:
+		if (unlikely(pfm_sysctl.debug > 0 && pfm_sysctl.debug_ovfl >0)) { printk("%s.%d: CPU%d ", __func__, __LINE__, smp_processor_id()); printk a; } \
 		                                                           ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#832: FILE: arch/ia64/kernel/perfmon_default_smpl.c:32:
+		if (unlikely(pfm_sysctl.debug > 0 && pfm_sysctl.debug_ovfl >0)) { printk("%s.%d: CPU%d ", __func__, __LINE__, smp_processor_id()); printk a; } \

WARNING:SPLIT_STRING: quoted string split across lines
#845: FILE: arch/ia64/kernel/ptrace.c:829:
 			dprintk("ptrace.%s: ran off the top of the kernel "
+				"stack\n", __func__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#875: FILE: arch/ia64/kernel/setup.c:788:
+                       __func__, status);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#875: FILE: arch/ia64/kernel/setup.c:788:
+                       __func__, status);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#906: FILE: arch/ia64/kernel/unaligned.c:31:
+# define DPRINT(a...)	do { printk("%s %u: ", __func__, __LINE__); printk (a); } while (0)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#906: FILE: arch/ia64/kernel/unaligned.c:31:
+# define DPRINT(a...)	do { printk("%s %u: ", __func__, __LINE__); printk (a); } while (0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#915: FILE: arch/ia64/kernel/unaligned.c:677:
+		printk(KERN_ERR "%s: register update on speculative load, error\n", __func__);

CHECK:SPACING: No space is necessary after a cast
#971: FILE: arch/ia64/kernel/unwind.c:344:
+							__func__, (void *) addr,

WARNING:SPLIT_STRING: quoted string split across lines
#980: FILE: arch/ia64/kernel/unwind.c:377:
 			UNW_DPRINT(0, "unwind.%s: ignoring attempt to access register outside "
+				   "of rbs\n",  __func__);

CHECK:SPACING: No space is necessary after a cast
#1292: FILE: arch/ia64/kernel/unwind.c:2031:
+		   __func__, (unsigned long) t, rbslimit, rbstop, stktop, stklimit,

WARNING:SPLIT_STRING: quoted string split across lines
#1336: FILE: arch/ia64/kernel/unwind.c:2129:
 		UNW_DPRINT(0, "unwind.%s: sorry, freeing the kernel's unwind table is a "
+			   "no-can-do!\n", __func__);

CHECK:SPACING: No space is necessary after a cast
#1345: FILE: arch/ia64/kernel/unwind.c:2142:
+				   __func__, (void *) table);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1354: FILE: arch/ia64/kernel/unwind.c:2188:
+		printk("%s: failed to find gate DSO's unwind table!\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1363: FILE: arch/ia64/kernel/unwind.c:2205:
+		printk(KERN_ERR "%s: unable to create unwind data for gate page!\n", __func__);

WARNING:SPLIT_STRING: quoted string split across lines
#1389: FILE: arch/ia64/pci/pci.c:768:
 		printk(KERN_ERR "%s: ia64_pal_cache_summary() failed "
+			"(status=%ld)\n", __func__, status);

WARNING:SPLIT_STRING: quoted string split across lines
#1398: FILE: arch/ia64/pci/pci.c:776:
 		printk(KERN_ERR "%s: ia64_pal_cache_config_info() failed "
+			"(status=%ld)\n", __func__, status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1412: FILE: arch/ia64/sn/kernel/huberror.c:41:
+			panic("%s: Fatal %s Error", __func__,
 				((nasid & 1) ? "TIO" : "HUBII"));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1451: FILE: arch/ia64/sn/kernel/io_acpi_init.c:187:
+^I^I        __func__, status);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1460: FILE: arch/ia64/sn/kernel/io_acpi_init.c:199:
+^I^I        __func__, vendor->byte_length);$

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1469: FILE: arch/ia64/sn/kernel/io_acpi_init.c:208:
 	if (!pcidev_ptr)
+		panic("%s: Unable to alloc memory for pcidev_info", __func__);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#1476: FILE: arch/ia64/sn/kernel/io_acpi_init.c:216:
 	if (!irq_info)
+		 panic("%s: Unable to alloc memory for sn_irq_info", __func__);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1478: FILE: arch/ia64/sn/kernel/io_acpi_init.c:217:
 	if (!irq_info)
+		 panic("%s: Unable to alloc memory for sn_irq_info", __func__);

WARNING:SPLIT_STRING: quoted string split across lines
#1487: FILE: arch/ia64/sn/kernel/io_acpi_init.c:252:
 			printk(KERN_ERR "%s: acpi_get_parent() failed "
+			       "(0x%x) for: ", __func__, status);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1588: FILE: arch/ia64/sn/kernel/io_common.c:367:
 	if (!element) {
+		dev_dbg(&dev->dev, "%s: out of memory!\n", __func__);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1601: FILE: arch/ia64/sn/kernel/io_init.c:212:
 	if (!pcidev_info)
+		panic("%s: Unable to alloc memory for pcidev_info", __func__);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1606: FILE: arch/ia64/sn/kernel/io_init.c:216:
 	if (!sn_irq_info)
+		panic("%s: Unable to alloc memory for sn_irq_info", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1632: FILE: arch/ia64/sn/pci/pci_dma.c:119:
+		printk(KERN_ERR "%s: out of ATEs\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1641: FILE: arch/ia64/sn/pci/pci_dma.c:182:
+		printk(KERN_ERR "%s: out of ATEs\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1650: FILE: arch/ia64/sn/pci/pci_dma.c:269:
+			printk(KERN_ERR "%s: out of ATEs\n", __func__);

CHECK:SPACING: No space is necessary after a cast
#1663: FILE: arch/ia64/sn/pci/tioca_provider.c:91:
+		       "0x%lx\n", __func__, (ulong) CA_APERATURE_SIZE);

WARNING:SPLIT_STRING: quoted string split across lines
#1663: FILE: arch/ia64/sn/pci/tioca_provider.c:91:
 		printk(KERN_ERR "%s:  Invalid CA_APERATURE_SIZE "
+		       "0x%lx\n", __func__, (ulong) CA_APERATURE_SIZE);

WARNING:SPLIT_STRING: quoted string split across lines
#1681: FILE: arch/ia64/sn/pci/tioca_provider.c:344:
 		printk(KERN_ERR "%s:  coretalk addr 0x%p node id out "
+		       "of range\n", __func__, (void *)ct_addr);

WARNING:SPLIT_STRING: quoted string split across lines
#1699: FILE: arch/ia64/sn/pci/tioca_provider.c:600:
 		    (KERN_ERR "%s:  SGI prom rev 4.06 or greater required "
+		     "for tioca support\n", __func__);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000312303.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 13 errors, 42 warnings, 10 checks, 1411 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000312303.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
