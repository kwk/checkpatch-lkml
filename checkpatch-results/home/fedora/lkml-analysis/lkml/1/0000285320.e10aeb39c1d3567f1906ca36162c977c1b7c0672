WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#49: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#54: FILE: arch/microblaze/kernel/signal.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#55: FILE: arch/microblaze/kernel/signal.c:2:
+ * arch/microblaze/kernel/signal.c -- Signal handling

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:REPEATED_WORD: Possible repeated word: 'was'
#69: FILE: arch/microblaze/kernel/signal.c:16:
+ * This file was was derived from the sh version, arch/sh/kernel/signal.c

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/uaccess.h> instead of <asm/uaccess.h>
#87: FILE: arch/microblaze/kernel/signal.c:34:
+#include <asm/uaccess.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#88: FILE: arch/microblaze/kernel/signal.c:35:
+#include <asm/pgtable.h>

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: arch/microblaze/kernel/signal.c:69:
+sys_rt_sigsuspend(sigset_t *unewset, size_t sigsetsize,
+		struct pt_regs *regs)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: arch/microblaze/kernel/signal.c:97:
+sys_sigaction(int sig, const struct old_sigaction *act,
+		struct old_sigaction *oact)

WARNING:LINE_SPACING: Missing a blank line after declarations
#157: FILE: arch/microblaze/kernel/signal.c:104:
+		old_sigset_t mask;
+		if (!access_ok(VERIFY_READ, act, sizeof(*act)) ||

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#158: FILE: arch/microblaze/kernel/signal.c:105:
+		if (!access_ok(VERIFY_READ, act, sizeof(*act)) ||
+			__get_user(new_ka.sa.sa_handler, &act->sa_handler) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#170: FILE: arch/microblaze/kernel/signal.c:117:
+		if (!access_ok(VERIFY_WRITE, oact, sizeof(*oact)) ||
+			__put_user(old_ka.sa.sa_handler, &oact->sa_handler) ||

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#193: FILE: arch/microblaze/kernel/signal.c:140:
+	unsigned long extramask[_NSIG_WORDS-1];
 	                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#208: FILE: arch/microblaze/kernel/signal.c:155:
+#define COPY(x)		err |= __get_user(regs->x, &sc->regs.x)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#208: FILE: arch/microblaze/kernel/signal.c:155:
+#define COPY(x)		err |= __get_user(regs->x, &sc->regs.x)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#208: FILE: arch/microblaze/kernel/signal.c:155:
+#define COPY(x)		err |= __get_user(regs->x, &sc->regs.x)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#236: FILE: arch/microblaze/kernel/signal.c:183:
+	if (__get_user(set.sig[0], &frame->sc.oldmask)
+		|| (_NSIG_WORDS > 1

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#237: FILE: arch/microblaze/kernel/signal.c:184:
+		|| (_NSIG_WORDS > 1
+		&& __copy_from_user(&set.sig[1], &frame->extramask,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#282: FILE: arch/microblaze/kernel/signal.c:229:
+	/* It is more difficult to avoid calling this function than to
+	 call it and ignore errors. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#282: FILE: arch/microblaze/kernel/signal.c:229:
+	 call it and ignore errors. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#298: FILE: arch/microblaze/kernel/signal.c:245:
+setup_sigcontext(struct sigcontext *sc, struct pt_regs *regs,
+		unsigned long mask)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#302: FILE: arch/microblaze/kernel/signal.c:249:
+#define COPY(x)		err |= __put_user(regs->x, &sc->regs.x)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#302: FILE: arch/microblaze/kernel/signal.c:249:
+#define COPY(x)		err |= __put_user(regs->x, &sc->regs.x)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#302: FILE: arch/microblaze/kernel/signal.c:249:
+#define COPY(x)		err |= __put_user(regs->x, &sc->regs.x)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#348: FILE: arch/microblaze/kernel/signal.c:295:
+	signal = current_thread_info()->exec_domain
+		&& current_thread_info()->exec_domain->signal_invmap

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#349: FILE: arch/microblaze/kernel/signal.c:296:
+		&& current_thread_info()->exec_domain->signal_invmap
+		&& sig < 32

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#361: FILE: arch/microblaze/kernel/signal.c:308:
+	/* Set up to return from userspace. If provided, use a stub
+	 already in userspace. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#361: FILE: arch/microblaze/kernel/signal.c:308:
+	 already in userspace. */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#364: FILE: arch/microblaze/kernel/signal.c:311:
+		regs->r15 = ((unsigned long)ka->sa.sa_restorer)-8;
 		                                               ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#369: FILE: arch/microblaze/kernel/signal.c:316:
+		err |= __put_user(0x31800000 | __NR_sigreturn ,
 		                                              ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#375: FILE: arch/microblaze/kernel/signal.c:322:
+		/* Return from sighandler will jump to the tramp.
+		 Negative 8 offset because return is rtsd r15, 8 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#375: FILE: arch/microblaze/kernel/signal.c:322:
+		 Negative 8 offset because return is rtsd r15, 8 */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#376: FILE: arch/microblaze/kernel/signal.c:323:
+		regs->r15 = ((unsigned long)frame->tramp)-8;
 		                                         ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#378: FILE: arch/microblaze/kernel/signal.c:325:
+#if 0

CHECK:SPACING: No space is necessary after a cast
#387: FILE: arch/microblaze/kernel/signal.c:334:
+	regs->r1 = (unsigned long) frame;

CHECK:SPACING: No space is necessary after a cast
#390: FILE: arch/microblaze/kernel/signal.c:337:
+	regs->r6 = (unsigned long) &frame->sc; /* arg 1: sigcontext */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#398: FILE: arch/microblaze/kernel/signal.c:345:
+	printk(KERN_INFO "SIG deliver (%s:%d): sp=%p pc=%08lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#399: FILE: arch/microblaze/kernel/signal.c:346:
+	printk(KERN_INFO "SIG deliver (%s:%d): sp=%p pc=%08lx\n",
+		current->comm, current->pid, frame, regs->pc);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#411: FILE: arch/microblaze/kernel/signal.c:358:
+static void setup_rt_frame(int sig, struct k_sigaction *ka, siginfo_t *info,
+			sigset_t *set, struct pt_regs *regs)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#423: FILE: arch/microblaze/kernel/signal.c:370:
+	signal = current_thread_info()->exec_domain
+		&& current_thread_info()->exec_domain->signal_invmap

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#424: FILE: arch/microblaze/kernel/signal.c:371:
+		&& current_thread_info()->exec_domain->signal_invmap
+		&& sig < 32

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#443: FILE: arch/microblaze/kernel/signal.c:390:
+	/* Set up to return from userspace. If provided, use a stub
+	 already in userspace. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#443: FILE: arch/microblaze/kernel/signal.c:390:
+	 already in userspace. */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#446: FILE: arch/microblaze/kernel/signal.c:393:
+		regs->r15 = ((unsigned long)ka->sa.sa_restorer)-8;
 		                                               ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#449: FILE: arch/microblaze/kernel/signal.c:396:
+		err |= __put_user(0x31800000 | __NR_rt_sigreturn ,
 		                                                 ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#455: FILE: arch/microblaze/kernel/signal.c:402:
+		/* Return from sighandler will jump to the tramp.
+		 Negative 8 offset because return is rtsd r15, 8 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#455: FILE: arch/microblaze/kernel/signal.c:402:
+		 Negative 8 offset because return is rtsd r15, 8 */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#456: FILE: arch/microblaze/kernel/signal.c:403:
+		regs->r15 = ((unsigned long)frame->tramp)-8;
 		                                         ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#458: FILE: arch/microblaze/kernel/signal.c:405:
+#if 0

CHECK:SPACING: No space is necessary after a cast
#467: FILE: arch/microblaze/kernel/signal.c:414:
+	regs->r1 = (unsigned long) frame;

CHECK:SPACING: No space is necessary after a cast
#470: FILE: arch/microblaze/kernel/signal.c:417:
+	regs->r6 = (unsigned long) &frame->info; /* arg 1: siginfo */

CHECK:SPACING: No space is necessary after a cast
#471: FILE: arch/microblaze/kernel/signal.c:418:
+	regs->r7 = (unsigned long) &frame->uc; /* arg2: ucontext */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#478: FILE: arch/microblaze/kernel/signal.c:425:
+	printk(KERN_INFO "SIG deliver (%s:%d): sp=%p pc=%08lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#479: FILE: arch/microblaze/kernel/signal.c:426:
+	printk(KERN_INFO "SIG deliver (%s:%d): sp=%p pc=%08lx\n",
+		current->comm, current->pid, frame, regs->pc);

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#506: FILE: arch/microblaze/kernel/signal.c:453:
+	/* fallthrough */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#521: FILE: arch/microblaze/kernel/signal.c:468:
+handle_signal(unsigned long sig, struct k_sigaction *ka,
+		siginfo_t *info, sigset_t *oldset, struct pt_regs *regs)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#535: FILE: arch/microblaze/kernel/signal.c:482:
+		sigorsets(&current->blocked,
+				&current->blocked, &ka->sa.sa_mask);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#557: FILE: arch/microblaze/kernel/signal.c:504:
+	printk(KERN_INFO "do signal: %p %p %d\n", regs, oldset, in_syscall);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#558: FILE: arch/microblaze/kernel/signal.c:505:
+	printk(KERN_INFO "do signal2: %lx %lx %ld [%lx]\n", regs->pc, regs->r1,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#559: FILE: arch/microblaze/kernel/signal.c:506:
+	printk(KERN_INFO "do signal2: %lx %lx %ld [%lx]\n", regs->pc, regs->r1,
+			regs->r12, current_thread_info()->flags);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#594: FILE: include/asm-microblaze/signal.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#595: FILE: include/asm-microblaze/signal.h:2:
+ * include/asm-microblaze/signal.h

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#621: FILE: include/asm-microblaze/signal.h:28:
+/* Most things should be clean enough to redefine this at will, if care
+ is taken to make libc match. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#621: FILE: include/asm-microblaze/signal.h:28:
+ is taken to make libc match. */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#626: FILE: include/asm-microblaze/signal.h:33:
+typedef unsigned long old_sigset_t; /* at least 32 bits */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#628: FILE: include/asm-microblaze/signal.h:35:
+typedef struct {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#637: FILE: include/asm-microblaze/signal.h:44:
+typedef unsigned long sigset_t;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#675: FILE: include/asm-microblaze/signal.h:82:
+/*
+#define SIGLOST		29

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#750: FILE: include/asm-microblaze/signal.h:157:
+	void (*_sa_sigaction)(int, struct siginfo *, void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct siginfo *' should also have an identifier name
#750: FILE: include/asm-microblaze/signal.h:157:
+	void (*_sa_sigaction)(int, struct siginfo *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#750: FILE: include/asm-microblaze/signal.h:157:
+	void (*_sa_sigaction)(int, struct siginfo *, void *);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#762: FILE: include/asm-microblaze/signal.h:169:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#763: FILE: include/asm-microblaze/signal.h:170:
+typedef struct sigaltstack {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#780: FILE: include/asm-microblaze/signal.h:187:
+asmlinkage int sys_rt_sigsuspend(sigset_t *unewset, size_t sigsetsize,
+					struct pt_regs *regs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#782: FILE: include/asm-microblaze/signal.h:189:
+asmlinkage int sys_sigaction(int sig, const struct old_sigaction *act,
+					struct old_sigaction *oact);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#784: FILE: include/asm-microblaze/signal.h:191:
+asmlinkage int sys_sigaltstack(const stack_t __user *uss, stack_t __user *uoss,
+					struct pt_regs *regs);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#788: FILE: include/asm-microblaze/signal.h:195:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000285320.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 34 warnings, 38 checks, 733 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000285320.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
