WARNING:TYPO_SPELLING: 'protoypes' may be misspelled - perhaps 'prototypes'?
#37: 
Changed the protoypes of the read_regs, write_regs, lock_regs, lock64_regs
            ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#50: 
and do the conversion once in the places where each struct member is set/read,

WARNING:TYPO_SPELLING: 'everwhere' may be misspelled - perhaps 'everywhere'?
#58: 
setting of the flags is done as cpu-endian where everwhere else it is done
                                                 ^^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: drivers/ieee1394/csr.c:536:
+                     u64 addr, __be32 data, __be32 arg, int extcode, u16 fl)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: drivers/ieee1394/csr.c:536:
+                     u64 addr, __be32 data, __be32 arg, int extcode, u16 fl)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: drivers/ieee1394/csr.c:567:
+                                   be32_to_cpu(data), be32_to_cpu(arg));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: drivers/ieee1394/csr.c:567:
+                                   be32_to_cpu(data), be32_to_cpu(arg));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#258: FILE: drivers/ieee1394/csr.c:602:
+                if (cpuarg > 0x1fff) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: drivers/ieee1394/csr.c:602:
+                if (cpuarg > 0x1fff) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: drivers/ieee1394/csr.c:603:
+                        *store = regdata;^I/* change nothing */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: drivers/ieee1394/csr.c:603:
+                        *store = regdata;^I/* change nothing */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#264: FILE: drivers/ieee1394/csr.c:606:
+                cpudata &= 0x1fff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: drivers/ieee1394/csr.c:606:
+                cpudata &= 0x1fff;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#265: FILE: drivers/ieee1394/csr.c:607:
+                if (cpuarg >= cpudata) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: drivers/ieee1394/csr.c:607:
+                if (cpuarg >= cpudata) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: drivers/ieee1394/csr.c:609:
+                        bandwidth = cpuarg - cpudata;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: drivers/ieee1394/csr.c:609:
+                        bandwidth = cpuarg - cpudata;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#272: FILE: drivers/ieee1394/csr.c:612:
+                                *store = arg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: drivers/ieee1394/csr.c:612:
+                                *store = arg;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#276: FILE: drivers/ieee1394/csr.c:615:
+                                *store = regdata;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: drivers/ieee1394/csr.c:615:
+                                *store = regdata;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#281: FILE: drivers/ieee1394/csr.c:619:
+                        bandwidth = cpudata - cpuarg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: drivers/ieee1394/csr.c:619:
+                        bandwidth = cpudata - cpuarg;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#285: FILE: drivers/ieee1394/csr.c:622:
+                                *store = arg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: drivers/ieee1394/csr.c:622:
+                                *store = arg;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#289: FILE: drivers/ieee1394/csr.c:625:
+                                *store = regdata;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: drivers/ieee1394/csr.c:625:
+                                *store = regdata;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#298: FILE: drivers/ieee1394/csr.c:634:
+                __be32 affected_channels = arg ^ data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: drivers/ieee1394/csr.c:634:
+                __be32 affected_channels = arg ^ data;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#307: FILE: drivers/ieee1394/csr.c:640:
+                if ((arg & affected_channels) == (regdata & affected_channels)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: drivers/ieee1394/csr.c:640:
+                if ((arg & affected_channels) == (regdata & affected_channels)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#308: FILE: drivers/ieee1394/csr.c:641:
+                        *regptr ^= be32_to_cpu(affected_channels);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: drivers/ieee1394/csr.c:641:
+                        *regptr ^= be32_to_cpu(affected_channels);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#309: FILE: drivers/ieee1394/csr.c:642:
+                        *store = arg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: drivers/ieee1394/csr.c:642:
+                        *store = arg;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#312: FILE: drivers/ieee1394/csr.c:644:
+                        *store = regdata;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: drivers/ieee1394/csr.c:644:
+                        *store = regdata;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#321: FILE: drivers/ieee1394/csr.c:653:
+                __be32 affected_channels = arg ^ data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: drivers/ieee1394/csr.c:653:
+                __be32 affected_channels = arg ^ data;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#330: FILE: drivers/ieee1394/csr.c:659:
+                if ((arg & affected_channels) == (regdata & affected_channels)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: drivers/ieee1394/csr.c:659:
+                if ((arg & affected_channels) == (regdata & affected_channels)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#331: FILE: drivers/ieee1394/csr.c:660:
+                        *regptr ^= be32_to_cpu(affected_channels);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: drivers/ieee1394/csr.c:660:
+                        *regptr ^= be32_to_cpu(affected_channels);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#332: FILE: drivers/ieee1394/csr.c:661:
+                        *store = arg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: drivers/ieee1394/csr.c:661:
+                        *store = arg;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#335: FILE: drivers/ieee1394/csr.c:663:
+                        *store = regdata;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: drivers/ieee1394/csr.c:663:
+                        *store = regdata;$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#544: FILE: drivers/ieee1394/csr1212.c:377:
+	kv->value.leaf.data[0] = cpu_to_be32(

WARNING:SPACING: Unnecessary space before function pointer arguments
#692: FILE: drivers/ieee1394/csr1212.h:218:
+	int (*get_max_rom) (__be32 *bus_info, void *private);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#779: FILE: drivers/ieee1394/dv1394-private.h:165:
+	im->q[3] = cpu_to_le32(0); /* xferStatus & resCount, resCount must be initialize to data_size */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#905: FILE: drivers/ieee1394/eth1394.c:833:
+static __be16 ether1394_parse_encap(struct sk_buff *skb, struct net_device *dev,
 				 nodeid_t srcid, nodeid_t destid,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1164: FILE: drivers/ieee1394/ieee1394_transactions.c:315:
+					  u64 addr, __be32 * buffer,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <branchAddress>
#1310: FILE: drivers/ieee1394/ohci1394.h:63:
+	__le32 branchAddress;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1399: FILE: drivers/ieee1394/raw1394.c:1223:
+					new = (__force __be32)cpu_to_le32(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1432: FILE: drivers/ieee1394/raw1394.c:1449:
+					new = (__force __be64)cpu_to_le64(

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000204954.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 23 errors, 27 warnings, 5 checks, 1502 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000204954.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
