CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#73: FILE: fs/ext2/dir.c:151:
+		ext2_error(sb, __func__,
+			"size of directory #%lu is not a multiple "

WARNING:SPLIT_STRING: quoted string split across lines
#74: FILE: fs/ext2/dir.c:152:
+			"size of directory #%lu is not a multiple "
+			"of chunk size", dir->i_ino);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#89: FILE: fs/ext2/dir.c:171:
+		ext2_error(sb, __func__, "bad entry in directory #%lu: : %s - "
+			"offset=%lu, inode=%lu, rec_len=%d, name_len=%d",

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#90: FILE: fs/ext2/dir.c:172:
+			dir->i_ino, error, (page->index<<PAGE_CACHE_SHIFT)+offs,
 			                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#90: FILE: fs/ext2/dir.c:172:
+			dir->i_ino, error, (page->index<<PAGE_CACHE_SHIFT)+offs,
 			                                                  ^

CHECK:SPACING: No space is necessary after a cast
#91: FILE: fs/ext2/dir.c:173:
+			(unsigned long) le32_to_cpu(p->inode),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#103: FILE: fs/ext2/dir.c:179:
+		ext2_error (sb, "ext2_check_page",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#104: FILE: fs/ext2/dir.c:180:
+		ext2_error (sb, "ext2_check_page",
+			"entry in directory #%lu spans the page boundary"

WARNING:SPLIT_STRING: quoted string split across lines
#105: FILE: fs/ext2/dir.c:181:
+			"entry in directory #%lu spans the page boundary"
+			"offset=%lu, inode=%lu",

WARNING:MISSING_SPACE: break quoted strings at a space character
#105: FILE: fs/ext2/dir.c:181:
+			"entry in directory #%lu spans the page boundary"
+			"offset=%lu, inode=%lu",

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#106: FILE: fs/ext2/dir.c:182:
+			dir->i_ino, (page->index<<PAGE_CACHE_SHIFT)+offs,
 			                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#106: FILE: fs/ext2/dir.c:182:
+			dir->i_ino, (page->index<<PAGE_CACHE_SHIFT)+offs,
 			                                           ^

CHECK:SPACING: No space is necessary after a cast
#107: FILE: fs/ext2/dir.c:183:
+			(unsigned long) le32_to_cpu(p->inode));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#115: FILE: fs/ext2/dir.c:190:
+static struct page * ext2_get_page(struct inode *dir, unsigned long n,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#159: FILE: fs/ext2/dir.c:399:
+		} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000228365.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 5 warnings, 9 checks, 139 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000228365.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
