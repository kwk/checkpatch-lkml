CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#49: FILE: include/linux/cfqio-cgroup.h:45:
 }
+extern int cfqio_cgrp_expired(struct cfq_data *);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#49: FILE: include/linux/cfqio-cgroup.h:45:
+extern int cfqio_cgrp_expired(struct cfq_data *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#50: FILE: include/linux/cfqio-cgroup.h:46:
+extern void cfqio_cgrp_schedule_active(struct cfq_data *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cfq_data *' should also have an identifier name
#50: FILE: include/linux/cfqio-cgroup.h:46:
+extern void cfqio_cgrp_schedule_active(struct cfq_data *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#51: FILE: include/linux/cfqio-cgroup.h:47:
+extern void  cfqio_cgrp_inc_rqnum(struct cfq_queue *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cfq_queue *' should also have an identifier name
#51: FILE: include/linux/cfqio-cgroup.h:47:
+extern void  cfqio_cgrp_inc_rqnum(struct cfq_queue *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#52: FILE: include/linux/cfqio-cgroup.h:48:
+extern void cfqio_cgrp_dec_rqnum(struct cfq_queue *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cfq_queue *' should also have an identifier name
#52: FILE: include/linux/cfqio-cgroup.h:48:
+extern void cfqio_cgrp_dec_rqnum(struct cfq_queue *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#104: FILE: block/cfqio-cgroup.c:33:
+static inline unsigned long time_slice_by_ioprio(unsigned int ioprio,
+							unsigned int base_slice)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#117: FILE: block/cfqio-cgroup.c:46:
+	cfqd->active_cfqio_cgroup = list_first_entry(&cfqd->act_cfqio_cgrp_head,
+				struct cfqio_cgroup_data, act_cfqio_cgrp_list);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#119: FILE: block/cfqio-cgroup.c:48:
+	list_move_tail(&cfqd->active_cfqio_cgroup->act_cfqio_cgrp_list,
+					&cfqd->act_cfqio_cgrp_head);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: block/cfqio-cgroup.c:51:
+	time_slice_by_ioprio(cfqd->active_cfqio_cgroup->cfqio_css->ioprio,
+							cfqd->cfqio_cgrp_slice);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#128: FILE: block/cfqio-cgroup.c:57:
+	if (cfqio_cgrp_expired(cfqd) || !cfqd->active_cfqio_cgroup ||
+				!cfqd->active_cfqio_cgroup->rqnum)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: block/cfqio-cgroup.c:69:
+		list_add_tail(&cfqio_cgrp->act_cfqio_cgrp_list,
+				&cfqq->cfqd->act_cfqio_cgrp_head);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000301039.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 11 checks, 150 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000301039.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
