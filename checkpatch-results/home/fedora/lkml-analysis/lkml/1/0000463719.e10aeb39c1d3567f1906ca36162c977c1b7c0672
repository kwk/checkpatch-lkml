WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#36: FILE: Makefile:4:
+EXTRAVERSION = .8
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#96: FILE: drivers/char/mem.c:619:
+        ^Iif (zeromap_page_range(vma, addr, count, PAGE_COPY))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#96: FILE: drivers/char/mem.c:619:
+        ^Iif (zeromap_page_range(vma, addr, count, PAGE_COPY))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: drivers/char/mem.c:619:
+        ^Iif (zeromap_page_range(vma, addr, count, PAGE_COPY))$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#113: FILE: drivers/char/mem.c:692:
+	err = zeromap_page_range(vma, vma->vm_start,
+			vma->vm_end - vma->vm_start, vma->vm_page_prot);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#114: FILE: drivers/char/mem.c:693:
+	BUG_ON(err == -EEXIST);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#128: FILE: drivers/i2c/chips/ds1337.c:350:
+		u8 buf[1+16];	/* First byte is interpreted as address */
 		        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#137: FILE: drivers/i2c/chips/ds1337.c:359:
+		buf[1+DS1337_REG_DAY] = 1;
 		     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#138: FILE: drivers/i2c/chips/ds1337.c:360:
+		buf[1+DS1337_REG_DATE] = 1;
 		     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#139: FILE: drivers/i2c/chips/ds1337.c:361:
+		buf[1+DS1337_REG_MONTH] = 1;
 		     ^

CHECK:SPACING: No space is necessary after a cast
#166: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1854:
+	srp_dev->fmr_page_mask  = ~((u64) srp_dev->fmr_page_size - 1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#201: FILE: drivers/media/dvb/dvb-core/dvb_net.c:620:
+				printk(KERN_WARNING "%lu: CRC32 check FAILED: %08x / %08x, SNDU len %d type %#x, ts_remain %d, next 2: %x.\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#380: FILE: fs/buffer.c:1190:
+		printk(KERN_ERR "%s: requested out-of-range block %llu for "

WARNING:SPLIT_STRING: quoted string split across lines
#381: FILE: fs/buffer.c:1191:
+		printk(KERN_ERR "%s: requested out-of-range block %llu for "
+			"device %s\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#382: FILE: fs/buffer.c:1192:
+			__FUNCTION__, (unsigned long long)block,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#483: FILE: include/asm-powerpc/current.h:27:
+}
+#define current	get_current()

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#658: FILE: mm/mincore.c:62:
+^I * FIXME: This is just stupid. And returning ENOMEM is $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#731: FILE: mm/mincore.c:120:
+ ^Iif (start & ~PAGE_CACHE_MASK)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#731: FILE: mm/mincore.c:120:
+ ^Iif (start & ~PAGE_CACHE_MASK)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#731: FILE: mm/mincore.c:120:
+ ^Iif (start & ~PAGE_CACHE_MASK)$

CHECK:SPACING: No space is necessary after a cast
#738: FILE: mm/mincore.c:124:
+	if (!access_ok(VERIFY_READ, (void __user *) start, len))

CHECK:SPACING: No space is necessary after a cast
#773: FILE: mm/mincore.c:134:
+	tmp = (void *) __get_free_page(GFP_USER);

CHECK:SPACING: No space is necessary after a cast
#818: FILE: mm/mincore.c:159:
+	free_page((unsigned long) tmp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#884: FILE: mm/msync.c:191:
+		error = msync_interval(vma, start, min(end, vma->vm_end),
+						flags, &nr_pages_dirtied);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'limit <= SHMEM_NR_DIRECT'
#945: FILE: mm/shmem.c:518:
+	if (!topdir || (punch_hole && (limit <= SHMEM_NR_DIRECT)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000463719.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 11 warnings, 12 checks, 763 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000463719.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
