WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#45: 
    Signed-off-by: eaktas <eaktas1@gmail.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#68: FILE: tools/perf/builtin-stat.c:243:
char **argv)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#74: FILE: tools/perf/builtin-stat.c:249:
+			sched_setaffinity(pid, sizeof(affinity_mask),
+				&affinity_mask);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: tools/perf/builtin-stat.c:523:
+  enableaffinity = 0;$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#133: FILE: tools/perf/util/parse-events.c:492:
+	if (opt == NULL && unset == 0) {
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!opt"
#133: FILE: tools/perf/util/parse-events.c:492:
+	if (opt == NULL && unset == 0) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "token"
#147: FILE: tools/perf/util/parse-events.c:506:
+		while (token != NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#150: FILE: tools/perf/util/parse-events.c:509:
+				int number2;
+				number2 = atoi(token);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#151: FILE: tools/perf/util/parse-events.c:510:
+				while (number < number2) {
+					CPU_SET(++number, &affinity_mask);
+				}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#166: FILE: tools/perf/util/parse-events.c:525:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#189: FILE: tools/perf/util/parse-events.h:24:
+extern int set_cpu_affinity(const struct option *opt,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#190: FILE: tools/perf/util/parse-events.h:25:
+extern int set_cpu_affinity(const struct option *opt,
+						const char *str, int unset);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000100039.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 5 warnings, 6 checks, 128 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000100039.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
