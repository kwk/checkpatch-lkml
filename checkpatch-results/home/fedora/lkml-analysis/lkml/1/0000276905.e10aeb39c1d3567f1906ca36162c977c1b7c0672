WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
> >> (not in a function) drivers/block/cciss_scsi.c:76: error: field name not

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#48: 
> I agree, keep things seperate. One mail with patch to fix casts,
                       ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#104: FILE: drivers/i2c/i2c-dev.c:221:
+	rdwr_pa = kmalloc(rdwr_arg.nmsgs * sizeof(struct i2c_msg),
 		GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#105: FILE: drivers/i2c/i2c-dev.c:222:
+	rdwr_pa = kmalloc(rdwr_arg.nmsgs * sizeof(struct i2c_msg),
 		GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#160: FILE: drivers/net/wireless/zd1211rw/zd_chip.c:121:
+	a16 = kmalloc(count16 * (sizeof(zd_addr_t) + sizeof(u16)),
 		                   GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#171: FILE: drivers/net/wireless/ipw2100.c:3376:
+	priv->msg_buffers = kmalloc(IPW_COMMAND_POOL_SIZE *
 						sizeof(struct
 						       ipw2100_tx_packet),
 						GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#191: FILE: drivers/net/wireless/ipw2100.c:4560:
+	priv->rx_buffers = kmalloc(RX_QUEUE_LENGTH *
+		    sizeof(struct ipw2100_rx_packet),
 		    GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*tp->mtable)...) over kmalloc(sizeof(struct mediatable)...)
#204: FILE: drivers/net/tulip/eeprom.c:124:
+		tp->mtable = kmalloc(sizeof(struct mediatable) +

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*mtable)...) over kmalloc(sizeof(struct mediatable)...)
#215: FILE: drivers/net/tulip/eeprom.c:226:
+		mtable = kmalloc(sizeof(struct mediatable) +

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#216: FILE: drivers/net/tulip/eeprom.c:227:
+			count*sizeof(struct medialeaf),
 			     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#228: FILE: drivers/net/gianfar.c:740:
+	priv->tx_skbuff = kmalloc(sizeof(struct sk_buff *) *
 					priv->tx_ring_size, GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#238: FILE: drivers/net/gianfar.c:754:
+	priv->rx_skbuff = kmalloc(sizeof(struct sk_buff *) *
 					priv->rx_ring_size, GFP_KERNEL);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#251: FILE: drivers/s390/net/qeth_core_main.c:638:
+			kmalloc(QETH_BUFSIZE, GFP_DMA|GFP_KERNEL);
 			                             ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*header)...) over kmalloc(sizeof(struct th_sweep)...)
#263: FILE: drivers/s390/net/ctcm_mpc.c:699:
+	header = kmalloc(sizeof(struct th_sweep), gfp_type());

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*mpcginfo)...) over kmalloc(sizeof(struct mpcg_info)...)
#273: FILE: drivers/s390/net/ctcm_mpc.c:1310:
+		mpcginfo = kmalloc(sizeof(struct mpcg_info), gfp_type());

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*n)...) over kmalloc(sizeof(struct ncci_datahandle_queue)...)
#285: FILE: drivers/isdn/capi/capidrv.c:472:
+	n = kmalloc(sizeof(struct ncci_datahandle_queue), GFP_ATOMIC);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*cs->hw.hfcsx.extra)...) over kmalloc(sizeof(struct hfcsx_extra)...)
#297: FILE: drivers/isdn/hisax/hfc_sx.c:1483:
+		cs->hw.hfcsx.extra = kmalloc(sizeof(struct hfcsx_extra),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#298: FILE: drivers/isdn/hisax/hfc_sx.c:1484:
+		cs->hw.hfcsx.extra = kmalloc(sizeof(struct hfcsx_extra),
+			GFP_ATOMIC);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 18)
#299: FILE: drivers/isdn/hisax/hfc_sx.c:1485:
+		if (!cs->hw.hfcsx.extra) {
 		  release_region(cs->hw.hfcsx.base, 2);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#312: FILE: drivers/scsi/osst.c:5761:
+		os_scsi_tapes = kmalloc(osst_max_dev *
+				   sizeof(struct osst_tape *), GFP_ATOMIC);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ptr)...) over kmalloc(sizeof(struct floppy_raw_cmd)...)
#336: FILE: drivers/block/floppy.c:3197:
+		ptr = kmalloc(sizeof(struct floppy_raw_cmd), GFP_USER);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#360: FILE: drivers/media/video/vino.c:851:
+	fb->desc_table.virtual = kmalloc(count *
+	    sizeof(unsigned long), GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#371: FILE: drivers/media/video/vino.c:937:
+	fb->desc_table.virtual = kmalloc(count *
+	    sizeof(unsigned long), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*tmp)...) over kmalloc(sizeof(struct i2o_cfg_info)...)
#384: FILE: drivers/message/i2o/i2o_config.c:1056:
+	struct i2o_cfg_info *tmp = kmalloc(sizeof(struct i2o_cfg_info),

CHECK:CAMELCASE: Avoid CamelCase: <RegsBuf>
#396: FILE: drivers/usb/storage/isd200.c:1499:
+		info->RegsBuf = kmalloc(sizeof(info->ATARegs), GFP_KERNEL);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <ATARegs>
#396: FILE: drivers/usb/storage/isd200.c:1499:
+		info->RegsBuf = kmalloc(sizeof(info->ATARegs), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ubh)...) over kmalloc(sizeof(struct ufs_buffer_head)...)
#456: FILE: fs/ufs/util.c:29:
+	ubh = kmalloc(sizeof(struct ufs_buffer_head), GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#481: FILE: security/selinux/ss/conditional.c:174:
+	p->bool_val_to_struct = kmalloc(p->p_bools.nprim *
+	    sizeof(struct cond_bool_datum *), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*tmp_part)...) over kmalloc(sizeof(struct nvram_partition)...)
#494: FILE: arch/powerpc/kernel/nvram_64.c:530:
+		tmp_part = kmalloc(sizeof(struct nvram_partition), GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#541: FILE: arch/ia64/kernel/mca_drv.c:351:
+	slidx_pool.buffer = kmalloc(slidx_pool.max_idx *
+	    sizeof(slidx_list_t), GFP_KERNEL);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000276905.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 13 warnings, 17 checks, 354 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000276905.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
