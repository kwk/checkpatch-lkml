WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
file to configure weight and ioprio_class for each device in a given cgroup.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
#echo dev_major:dev_minor weight ioprio_class > /patch/to/cgroup/policy

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
# echo "8:16 300 2" > io.policy

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
# cat io.policy

WARNING:TYPO_SPELLING: 'hda' may be misspelled - perhaps 'had'?
#49: 
Configure weight=500 ioprio_class=1 on /dev/hda (8:0) in this cgroup
                                            ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
# echo "8:0 500 1" > io.policy

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
# cat io.policy

WARNING:TYPO_SPELLING: 'hda' may be misspelled - perhaps 'had'?
#56: 
Remove the policy for /dev/hda in this cgroup
                           ^^^

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
# echo 8:0 0 1 > io.policy

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
# cat io.policy

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#96: FILE: block/elevator-fq.c:1194:
+static struct io_policy_node *policy_search_node(const struct io_cgroup *iocg,
+							dev_t dev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#129: FILE: block/elevator-fq.c:1337:
+static int io_cgroup_policy_read(struct cgroup *cgrp, struct cftype *cft,
+				  struct seq_file *m)

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#139: FILE: block/elevator-fq.c:1347:
+	seq_printf(m, "dev\tweight\tclass\n");

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#143: FILE: block/elevator-fq.c:1351:
+		seq_printf(m, "%u:%u\t%u\t%hu\n", MAJOR(pn->dev),
+			   MINOR(pn->dev), pn->weight, pn->ioprio_class);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#152: FILE: block/elevator-fq.c:1360:
+static inline void policy_insert_node(struct io_cgroup *iocg,
+					  struct io_policy_node *pn)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "p"
#215: FILE: block/elevator-fq.c:1423:
+	if (p != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#224: FILE: block/elevator-fq.c:1432:
+	ret = strict_strtoul(major_s, 10, &major);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#228: FILE: block/elevator-fq.c:1436:
+	ret = strict_strtoul(minor_s, 10, &minor);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!s[1]"
#240: FILE: block/elevator-fq.c:1448:
+	if (s[1] == NULL)

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#243: FILE: block/elevator-fq.c:1451:
+	ret = strict_strtoul(s[1], 10, &temp);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!s[2]"
#249: FILE: block/elevator-fq.c:1457:
+	if (s[2] == NULL)

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#252: FILE: block/elevator-fq.c:1460:
+	ret = strict_strtoul(s[2], 10, &temp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#261: FILE: block/elevator-fq.c:1469:
+static int io_cgroup_policy_write(struct cgroup *cgrp, struct cftype *cft,
+			    const char *buffer)

WARNING:TYPO_SPELLING: 'deleteing' may be misspelled - perhaps 'deleting'?
#303: FILE: block/elevator-fq.c:1511:
+		/* weight == 0 means deleteing a policy */
 		                     ^^^^^^^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000092804.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 17 warnings, 7 checks, 350 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000092804.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
