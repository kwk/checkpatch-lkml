WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#62: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#67: FILE: fs/nilfs2/nilfs.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#83: FILE: fs/nilfs2/nilfs.h:17:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#84: FILE: fs/nilfs2/nilfs.h:18:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#138: FILE: fs/nilfs2/nilfs.h:72:
+	struct buffer_head *i_bh;	/* i_bh contains a new or dirty
+					   disk inode */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#138: FILE: fs/nilfs2/nilfs.h:72:
+					   disk inode */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#176: FILE: fs/nilfs2/nilfs.h:110:
+	NILFS_I_BUSY,			/* inode is grabbed by a segment
+					   constructor */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#176: FILE: fs/nilfs2/nilfs.h:110:
+					   constructor */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: fs/nilfs2/nilfs.h:123:
+  ((unsigned int)(1 << NILFS_DAT_INO | 1 << NILFS_CPFILE_INO |^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: fs/nilfs2/nilfs.h:128:
+  ((unsigned int)(1 << NILFS_ROOT_INO) | NILFS_MDT_INO_BITS)$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ino' - possible side-effects?
#198: FILE: fs/nilfs2/nilfs.h:132:
+#define NILFS_MDT_INODE(sb, ino) \
+  ((ino) < NILFS_FIRST_INO(sb) && (NILFS_MDT_INO_BITS & (1 << (ino))))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: fs/nilfs2/nilfs.h:133:
+  ((ino) < NILFS_FIRST_INO(sb) && (NILFS_MDT_INO_BITS & (1 << (ino))))$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ino' - possible side-effects?
#200: FILE: fs/nilfs2/nilfs.h:134:
+#define NILFS_VALID_INODE(sb, ino) \
+  ((ino) >= NILFS_FIRST_INO(sb) || (NILFS_SYS_INO_BITS & (1 << (ino))))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: fs/nilfs2/nilfs.h:135:
+  ((ino) >= NILFS_FIRST_INO(sb) || (NILFS_SYS_INO_BITS & (1 << (ino))))$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#215: FILE: fs/nilfs2/nilfs.h:149:
+				/* This should never used. If this happens,
+				   one of other filesystems has a bug. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#215: FILE: fs/nilfs2/nilfs.h:149:
+				   one of other filesystems has a bug. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#227: FILE: fs/nilfs2/nilfs.h:161:
+#define NILFS_TI_SYNC		0x0002	/* Force to construct segment at the
+					   end of transaction. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#227: FILE: fs/nilfs2/nilfs.h:161:
+					   end of transaction. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#232: FILE: fs/nilfs2/nilfs.h:166:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#233: FILE: fs/nilfs2/nilfs.h:167:
+int nilfs_transaction_begin(struct super_block *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_transaction_info *' should also have an identifier name
#233: FILE: fs/nilfs2/nilfs.h:167:
+int nilfs_transaction_begin(struct super_block *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#233: FILE: fs/nilfs2/nilfs.h:167:
+int nilfs_transaction_begin(struct super_block *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#235: FILE: fs/nilfs2/nilfs.h:169:
+int nilfs_transaction_end(struct super_block *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#235: FILE: fs/nilfs2/nilfs.h:169:
+int nilfs_transaction_end(struct super_block *, int);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#241: FILE: fs/nilfs2/nilfs.h:175:
+	BUG_ON(!ti);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ti"
#249: FILE: fs/nilfs2/nilfs.h:183:
+	if (ti == NULL || ti->ti_magic != NILFS_TI_MAGIC)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#274: FILE: fs/nilfs2/nilfs.h:208:
+extern int nilfs_permission(struct inode *, int, struct nameidata *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#275: FILE: fs/nilfs2/nilfs.h:209:
+extern int nilfs_acl_chmod(struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#275: FILE: fs/nilfs2/nilfs.h:209:
+extern int nilfs_acl_chmod(struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#276: FILE: fs/nilfs2/nilfs.h:210:
+extern int nilfs_init_acl(struct inode *, struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#276: FILE: fs/nilfs2/nilfs.h:210:
+extern int nilfs_init_acl(struct inode *, struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#276: FILE: fs/nilfs2/nilfs.h:210:
+extern int nilfs_init_acl(struct inode *, struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#295: FILE: fs/nilfs2/nilfs.h:229:
+extern int nilfs_add_link(struct dentry *, struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#295: FILE: fs/nilfs2/nilfs.h:229:
+extern int nilfs_add_link(struct dentry *, struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#295: FILE: fs/nilfs2/nilfs.h:229:
+extern int nilfs_add_link(struct dentry *, struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#296: FILE: fs/nilfs2/nilfs.h:230:
+extern ino_t nilfs_inode_by_name(struct inode *, struct dentry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#296: FILE: fs/nilfs2/nilfs.h:230:
+extern ino_t nilfs_inode_by_name(struct inode *, struct dentry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#296: FILE: fs/nilfs2/nilfs.h:230:
+extern ino_t nilfs_inode_by_name(struct inode *, struct dentry *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#297: FILE: fs/nilfs2/nilfs.h:231:
+extern int nilfs_make_empty(struct inode *, struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#297: FILE: fs/nilfs2/nilfs.h:231:
+extern int nilfs_make_empty(struct inode *, struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#297: FILE: fs/nilfs2/nilfs.h:231:
+extern int nilfs_make_empty(struct inode *, struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#298: FILE: fs/nilfs2/nilfs.h:232:
+extern struct nilfs_dir_entry *

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#298: FILE: fs/nilfs2/nilfs.h:232:
+extern struct nilfs_dir_entry *

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page **' should also have an identifier name
#298: FILE: fs/nilfs2/nilfs.h:232:
+extern struct nilfs_dir_entry *

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#300: FILE: fs/nilfs2/nilfs.h:234:
+extern int nilfs_delete_entry(struct nilfs_dir_entry *, struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_dir_entry *' should also have an identifier name
#300: FILE: fs/nilfs2/nilfs.h:234:
+extern int nilfs_delete_entry(struct nilfs_dir_entry *, struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#300: FILE: fs/nilfs2/nilfs.h:234:
+extern int nilfs_delete_entry(struct nilfs_dir_entry *, struct page *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#301: FILE: fs/nilfs2/nilfs.h:235:
+extern int nilfs_empty_dir(struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#301: FILE: fs/nilfs2/nilfs.h:235:
+extern int nilfs_empty_dir(struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#302: FILE: fs/nilfs2/nilfs.h:236:
+extern struct nilfs_dir_entry *nilfs_dotdot(struct inode *, struct page **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#302: FILE: fs/nilfs2/nilfs.h:236:
+extern struct nilfs_dir_entry *nilfs_dotdot(struct inode *, struct page **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page **' should also have an identifier name
#302: FILE: fs/nilfs2/nilfs.h:236:
+extern struct nilfs_dir_entry *nilfs_dotdot(struct inode *, struct page **);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#303: FILE: fs/nilfs2/nilfs.h:237:
+extern void nilfs_set_link(struct inode *, struct nilfs_dir_entry *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#303: FILE: fs/nilfs2/nilfs.h:237:
+extern void nilfs_set_link(struct inode *, struct nilfs_dir_entry *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_dir_entry *' should also have an identifier name
#303: FILE: fs/nilfs2/nilfs.h:237:
+extern void nilfs_set_link(struct inode *, struct nilfs_dir_entry *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#303: FILE: fs/nilfs2/nilfs.h:237:
+extern void nilfs_set_link(struct inode *, struct nilfs_dir_entry *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#303: FILE: fs/nilfs2/nilfs.h:237:
+extern void nilfs_set_link(struct inode *, struct nilfs_dir_entry *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#307: FILE: fs/nilfs2/nilfs.h:241:
+extern int nilfs_sync_file(struct file *, struct dentry *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#307: FILE: fs/nilfs2/nilfs.h:241:
+extern int nilfs_sync_file(struct file *, struct dentry *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#307: FILE: fs/nilfs2/nilfs.h:241:
+extern int nilfs_sync_file(struct file *, struct dentry *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#307: FILE: fs/nilfs2/nilfs.h:241:
+extern int nilfs_sync_file(struct file *, struct dentry *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#310: FILE: fs/nilfs2/nilfs.h:244:
+int nilfs_ioctl(struct inode *, struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#310: FILE: fs/nilfs2/nilfs.h:244:
+int nilfs_ioctl(struct inode *, struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#310: FILE: fs/nilfs2/nilfs.h:244:
+int nilfs_ioctl(struct inode *, struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#310: FILE: fs/nilfs2/nilfs.h:244:
+int nilfs_ioctl(struct inode *, struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#311: FILE: fs/nilfs2/nilfs.h:245:
+long nilfs_compat_ioctl(struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#311: FILE: fs/nilfs2/nilfs.h:245:
+long nilfs_compat_ioctl(struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#311: FILE: fs/nilfs2/nilfs.h:245:
+long nilfs_compat_ioctl(struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct the_nilfs *' should also have an identifier name
#312: FILE: fs/nilfs2/nilfs.h:246:
+int nilfs_ioctl_prepare_clean_segments(struct the_nilfs *, void __user *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#312: FILE: fs/nilfs2/nilfs.h:246:
+int nilfs_ioctl_prepare_clean_segments(struct the_nilfs *, void __user *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#315: FILE: fs/nilfs2/nilfs.h:249:
+extern struct inode *nilfs_new_inode(struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#315: FILE: fs/nilfs2/nilfs.h:249:
+extern struct inode *nilfs_new_inode(struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#315: FILE: fs/nilfs2/nilfs.h:249:
+extern struct inode *nilfs_new_inode(struct inode *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#316: FILE: fs/nilfs2/nilfs.h:250:
+extern void nilfs_free_inode(struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#316: FILE: fs/nilfs2/nilfs.h:250:
+extern void nilfs_free_inode(struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#317: FILE: fs/nilfs2/nilfs.h:251:
+extern int nilfs_get_block(struct inode *, sector_t, struct buffer_head *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#317: FILE: fs/nilfs2/nilfs.h:251:
+extern int nilfs_get_block(struct inode *, sector_t, struct buffer_head *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'sector_t' should also have an identifier name
#317: FILE: fs/nilfs2/nilfs.h:251:
+extern int nilfs_get_block(struct inode *, sector_t, struct buffer_head *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct buffer_head *' should also have an identifier name
#317: FILE: fs/nilfs2/nilfs.h:251:
+extern int nilfs_get_block(struct inode *, sector_t, struct buffer_head *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#317: FILE: fs/nilfs2/nilfs.h:251:
+extern int nilfs_get_block(struct inode *, sector_t, struct buffer_head *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#318: FILE: fs/nilfs2/nilfs.h:252:
+extern void nilfs_set_inode_flags(struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#318: FILE: fs/nilfs2/nilfs.h:252:
+extern void nilfs_set_inode_flags(struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#319: FILE: fs/nilfs2/nilfs.h:253:
+extern int nilfs_read_inode_common(struct inode *, struct nilfs_inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#319: FILE: fs/nilfs2/nilfs.h:253:
+extern int nilfs_read_inode_common(struct inode *, struct nilfs_inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_inode *' should also have an identifier name
#319: FILE: fs/nilfs2/nilfs.h:253:
+extern int nilfs_read_inode_common(struct inode *, struct nilfs_inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#320: FILE: fs/nilfs2/nilfs.h:254:
+extern void nilfs_write_inode_common(struct inode *, struct nilfs_inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#320: FILE: fs/nilfs2/nilfs.h:254:
+extern void nilfs_write_inode_common(struct inode *, struct nilfs_inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_inode *' should also have an identifier name
#320: FILE: fs/nilfs2/nilfs.h:254:
+extern void nilfs_write_inode_common(struct inode *, struct nilfs_inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#320: FILE: fs/nilfs2/nilfs.h:254:
+extern void nilfs_write_inode_common(struct inode *, struct nilfs_inode *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#321: FILE: fs/nilfs2/nilfs.h:255:
+extern struct inode *nilfs_iget(struct super_block *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#321: FILE: fs/nilfs2/nilfs.h:255:
+extern struct inode *nilfs_iget(struct super_block *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#321: FILE: fs/nilfs2/nilfs.h:255:
+extern struct inode *nilfs_iget(struct super_block *, unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#322: FILE: fs/nilfs2/nilfs.h:256:
+extern void nilfs_update_inode(struct inode *, struct buffer_head *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#322: FILE: fs/nilfs2/nilfs.h:256:
+extern void nilfs_update_inode(struct inode *, struct buffer_head *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct buffer_head *' should also have an identifier name
#322: FILE: fs/nilfs2/nilfs.h:256:
+extern void nilfs_update_inode(struct inode *, struct buffer_head *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#323: FILE: fs/nilfs2/nilfs.h:257:
+extern void nilfs_truncate(struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#323: FILE: fs/nilfs2/nilfs.h:257:
+extern void nilfs_truncate(struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#324: FILE: fs/nilfs2/nilfs.h:258:
+extern void nilfs_delete_inode(struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#324: FILE: fs/nilfs2/nilfs.h:258:
+extern void nilfs_delete_inode(struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#325: FILE: fs/nilfs2/nilfs.h:259:
+extern int nilfs_setattr(struct dentry *, struct iattr *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#325: FILE: fs/nilfs2/nilfs.h:259:
+extern int nilfs_setattr(struct dentry *, struct iattr *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct iattr *' should also have an identifier name
#325: FILE: fs/nilfs2/nilfs.h:259:
+extern int nilfs_setattr(struct dentry *, struct iattr *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#326: FILE: fs/nilfs2/nilfs.h:260:
+extern int nilfs_load_inode_block(struct nilfs_sb_info *, struct inode *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_sb_info *' should also have an identifier name
#326: FILE: fs/nilfs2/nilfs.h:260:
+extern int nilfs_load_inode_block(struct nilfs_sb_info *, struct inode *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#326: FILE: fs/nilfs2/nilfs.h:260:
+extern int nilfs_load_inode_block(struct nilfs_sb_info *, struct inode *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct buffer_head **' should also have an identifier name
#326: FILE: fs/nilfs2/nilfs.h:260:
+extern int nilfs_load_inode_block(struct nilfs_sb_info *, struct inode *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#328: FILE: fs/nilfs2/nilfs.h:262:
+extern int nilfs_inode_dirty(struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#328: FILE: fs/nilfs2/nilfs.h:262:
+extern int nilfs_inode_dirty(struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#329: FILE: fs/nilfs2/nilfs.h:263:
+extern int nilfs_set_file_dirty(struct nilfs_sb_info *, struct inode *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_sb_info *' should also have an identifier name
#329: FILE: fs/nilfs2/nilfs.h:263:
+extern int nilfs_set_file_dirty(struct nilfs_sb_info *, struct inode *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#329: FILE: fs/nilfs2/nilfs.h:263:
+extern int nilfs_set_file_dirty(struct nilfs_sb_info *, struct inode *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#329: FILE: fs/nilfs2/nilfs.h:263:
+extern int nilfs_set_file_dirty(struct nilfs_sb_info *, struct inode *,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#330: FILE: fs/nilfs2/nilfs.h:264:
+				unsigned);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#331: FILE: fs/nilfs2/nilfs.h:265:
+extern int nilfs_mark_inode_dirty(struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#331: FILE: fs/nilfs2/nilfs.h:265:
+extern int nilfs_mark_inode_dirty(struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#332: FILE: fs/nilfs2/nilfs.h:266:
+extern void nilfs_dirty_inode(struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#332: FILE: fs/nilfs2/nilfs.h:266:
+extern void nilfs_dirty_inode(struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#335: FILE: fs/nilfs2/nilfs.h:269:
+extern struct dentry *nilfs_get_parent(struct dentry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#335: FILE: fs/nilfs2/nilfs.h:269:
+extern struct dentry *nilfs_get_parent(struct dentry *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#338: FILE: fs/nilfs2/nilfs.h:272:
+extern struct inode *nilfs_alloc_inode(struct super_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#338: FILE: fs/nilfs2/nilfs.h:272:
+extern struct inode *nilfs_alloc_inode(struct super_block *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#339: FILE: fs/nilfs2/nilfs.h:273:
+extern void nilfs_destroy_inode(struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#339: FILE: fs/nilfs2/nilfs.h:273:
+extern void nilfs_destroy_inode(struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#340: FILE: fs/nilfs2/nilfs.h:274:
+extern void nilfs_error(struct super_block *, const char *, const char *, ...)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#340: FILE: fs/nilfs2/nilfs.h:274:
+extern void nilfs_error(struct super_block *, const char *, const char *, ...)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#340: FILE: fs/nilfs2/nilfs.h:274:
+extern void nilfs_error(struct super_block *, const char *, const char *, ...)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#340: FILE: fs/nilfs2/nilfs.h:274:
+extern void nilfs_error(struct super_block *, const char *, const char *, ...)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(3, 4) over __attribute__((format(printf, 3, 4)))
#341: FILE: fs/nilfs2/nilfs.h:275:
+	__attribute__ ((format (printf, 3, 4)));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#342: FILE: fs/nilfs2/nilfs.h:276:
+extern void nilfs_warning(struct super_block *, const char *, const char *, ...)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#342: FILE: fs/nilfs2/nilfs.h:276:
+extern void nilfs_warning(struct super_block *, const char *, const char *, ...)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#342: FILE: fs/nilfs2/nilfs.h:276:
+extern void nilfs_warning(struct super_block *, const char *, const char *, ...)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#342: FILE: fs/nilfs2/nilfs.h:276:
+extern void nilfs_warning(struct super_block *, const char *, const char *, ...)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: fs/nilfs2/nilfs.h:277:
+       __attribute__ ((format (printf, 3, 4)));$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(3, 4) over __attribute__((format(printf, 3, 4)))
#343: FILE: fs/nilfs2/nilfs.h:277:
+       __attribute__ ((format (printf, 3, 4)));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#344: FILE: fs/nilfs2/nilfs.h:278:
+extern struct nilfs_super_block *

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct buffer_head **' should also have an identifier name
#344: FILE: fs/nilfs2/nilfs.h:278:
+extern struct nilfs_super_block *

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#346: FILE: fs/nilfs2/nilfs.h:280:
+extern struct nilfs_super_block *

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct buffer_head **' should also have an identifier name
#346: FILE: fs/nilfs2/nilfs.h:280:
+extern struct nilfs_super_block *

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#346: FILE: fs/nilfs2/nilfs.h:280:
+extern struct nilfs_super_block *

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#348: FILE: fs/nilfs2/nilfs.h:282:
+extern int nilfs_store_magic_and_option(struct super_block *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#348: FILE: fs/nilfs2/nilfs.h:282:
+extern int nilfs_store_magic_and_option(struct super_block *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_super_block *' should also have an identifier name
#348: FILE: fs/nilfs2/nilfs.h:282:
+extern int nilfs_store_magic_and_option(struct super_block *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#348: FILE: fs/nilfs2/nilfs.h:282:
+extern int nilfs_store_magic_and_option(struct super_block *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#350: FILE: fs/nilfs2/nilfs.h:284:
+extern void nilfs_update_last_segment(struct nilfs_sb_info *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_sb_info *' should also have an identifier name
#350: FILE: fs/nilfs2/nilfs.h:284:
+extern void nilfs_update_last_segment(struct nilfs_sb_info *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#350: FILE: fs/nilfs2/nilfs.h:284:
+extern void nilfs_update_last_segment(struct nilfs_sb_info *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#351: FILE: fs/nilfs2/nilfs.h:285:
+extern int nilfs_commit_super(struct nilfs_sb_info *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_sb_info *' should also have an identifier name
#351: FILE: fs/nilfs2/nilfs.h:285:
+extern int nilfs_commit_super(struct nilfs_sb_info *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#352: FILE: fs/nilfs2/nilfs.h:286:
+extern int nilfs_attach_checkpoint(struct nilfs_sb_info *, __u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_sb_info *' should also have an identifier name
#352: FILE: fs/nilfs2/nilfs.h:286:
+extern int nilfs_attach_checkpoint(struct nilfs_sb_info *, __u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u64' should also have an identifier name
#352: FILE: fs/nilfs2/nilfs.h:286:
+extern int nilfs_attach_checkpoint(struct nilfs_sb_info *, __u64);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#353: FILE: fs/nilfs2/nilfs.h:287:
+extern void nilfs_detach_checkpoint(struct nilfs_sb_info *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_sb_info *' should also have an identifier name
#353: FILE: fs/nilfs2/nilfs.h:287:
+extern void nilfs_detach_checkpoint(struct nilfs_sb_info *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#356: FILE: fs/nilfs2/nilfs.h:290:
+int nilfs_gccache_submit_read_data(struct inode *, sector_t, sector_t, __u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'sector_t' should also have an identifier name
#356: FILE: fs/nilfs2/nilfs.h:290:
+int nilfs_gccache_submit_read_data(struct inode *, sector_t, sector_t, __u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'sector_t' should also have an identifier name
#356: FILE: fs/nilfs2/nilfs.h:290:
+int nilfs_gccache_submit_read_data(struct inode *, sector_t, sector_t, __u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u64' should also have an identifier name
#356: FILE: fs/nilfs2/nilfs.h:290:
+int nilfs_gccache_submit_read_data(struct inode *, sector_t, sector_t, __u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct buffer_head **' should also have an identifier name
#356: FILE: fs/nilfs2/nilfs.h:290:
+int nilfs_gccache_submit_read_data(struct inode *, sector_t, sector_t, __u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#358: FILE: fs/nilfs2/nilfs.h:292:
+int nilfs_gccache_submit_read_node(struct inode *, sector_t, __u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'sector_t' should also have an identifier name
#358: FILE: fs/nilfs2/nilfs.h:292:
+int nilfs_gccache_submit_read_node(struct inode *, sector_t, __u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u64' should also have an identifier name
#358: FILE: fs/nilfs2/nilfs.h:292:
+int nilfs_gccache_submit_read_node(struct inode *, sector_t, __u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct buffer_head **' should also have an identifier name
#358: FILE: fs/nilfs2/nilfs.h:292:
+int nilfs_gccache_submit_read_node(struct inode *, sector_t, __u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct buffer_head *' should also have an identifier name
#360: FILE: fs/nilfs2/nilfs.h:294:
+int nilfs_gccache_wait_and_mark_dirty(struct buffer_head *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct the_nilfs *' should also have an identifier name
#361: FILE: fs/nilfs2/nilfs.h:295:
+int nilfs_init_gccache(struct the_nilfs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct the_nilfs *' should also have an identifier name
#362: FILE: fs/nilfs2/nilfs.h:296:
+void nilfs_destroy_gccache(struct the_nilfs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#363: FILE: fs/nilfs2/nilfs.h:297:
+void nilfs_clear_gcinode(struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct the_nilfs *' should also have an identifier name
#364: FILE: fs/nilfs2/nilfs.h:298:
+struct inode *nilfs_gc_iget(struct the_nilfs *, ino_t, __u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ino_t' should also have an identifier name
#364: FILE: fs/nilfs2/nilfs.h:298:
+struct inode *nilfs_gc_iget(struct the_nilfs *, ino_t, __u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u64' should also have an identifier name
#364: FILE: fs/nilfs2/nilfs.h:298:
+struct inode *nilfs_gc_iget(struct the_nilfs *, ino_t, __u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct the_nilfs *' should also have an identifier name
#365: FILE: fs/nilfs2/nilfs.h:299:
+void nilfs_remove_all_gcinode(struct the_nilfs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct the_nilfs *' should also have an identifier name
#368: FILE: fs/nilfs2/nilfs.h:302:
+int nilfs_init_gcdat_inode(struct the_nilfs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct the_nilfs *' should also have an identifier name
#369: FILE: fs/nilfs2/nilfs.h:303:
+void nilfs_commit_gcdat_inode(struct the_nilfs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct the_nilfs *' should also have an identifier name
#370: FILE: fs/nilfs2/nilfs.h:304:
+void nilfs_clear_gcdat_inode(struct the_nilfs *);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#375: FILE: fs/nilfs2/nilfs.h:309:
+extern struct file_operations nilfs_dir_operations;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#376: FILE: fs/nilfs2/nilfs.h:310:
+extern struct inode_operations nilfs_file_inode_operations;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#377: FILE: fs/nilfs2/nilfs.h:311:
+extern struct file_operations nilfs_file_operations;

WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#378: FILE: fs/nilfs2/nilfs.h:312:
+extern struct address_space_operations nilfs_aops;

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#379: FILE: fs/nilfs2/nilfs.h:313:
+extern struct inode_operations nilfs_dir_inode_operations;

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#380: FILE: fs/nilfs2/nilfs.h:314:
+extern struct inode_operations nilfs_special_inode_operations;

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#381: FILE: fs/nilfs2/nilfs.h:315:
+extern struct inode_operations nilfs_symlink_inode_operations;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#388: FILE: fs/nilfs2/nilfs.h:322:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#396: FILE: fs/nilfs2/sb.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#412: FILE: fs/nilfs2/sb.h:17:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#413: FILE: fs/nilfs2/sb.h:18:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#452: FILE: fs/nilfs2/sb.h:57:
+	unsigned long s_watermark;	/* threshold of data amount
+					   for the segment construction */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#452: FILE: fs/nilfs2/sb.h:57:
+					   for the segment construction */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#463: FILE: fs/nilfs2/sb.h:68:
+	spinlock_t s_inode_lock;	/* Lock for the nilfs inode.
+					   It covers s_dirty_files list */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#463: FILE: fs/nilfs2/sb.h:68:
+					   It covers s_dirty_files list */

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#486: FILE: fs/nilfs2/sb.h:91:
+#define nilfs_clear_opt(sbi, opt)  \
+	do { (sbi)->s_mount_opt &= ~NILFS_MOUNT_##opt; } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#488: FILE: fs/nilfs2/sb.h:93:
+#define nilfs_set_opt(sbi, opt)  \
+	do { (sbi)->s_mount_opt |= NILFS_MOUNT_##opt; } while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'sbi' - possible side-effects?
#491: FILE: fs/nilfs2/sb.h:96:
+#define nilfs_write_opt(sbi, mask, opt)					\
+	do { (sbi)->s_mount_opt =					\
+		(((sbi)->s_mount_opt & ~NILFS_MOUNT_##mask) |		\
+		 NILFS_MOUNT_##opt);					\
+	} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#491: FILE: fs/nilfs2/sb.h:96:
+#define nilfs_write_opt(sbi, mask, opt)					\
+	do { (sbi)->s_mount_opt =					\
+		(((sbi)->s_mount_opt & ~NILFS_MOUNT_##mask) |		\
+		 NILFS_MOUNT_##opt);					\
+	} while (0)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#504: FILE: fs/nilfs2/the_nilfs.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#520: FILE: fs/nilfs2/the_nilfs.h:17:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#521: FILE: fs/nilfs2/the_nilfs.h:18:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#541: FILE: fs/nilfs2/the_nilfs.h:38:
+	THE_NILFS_LOADED,       /* Roll-back/roll-forward has done and
+				   the latest checkpoint was loaded */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#541: FILE: fs/nilfs2/the_nilfs.h:38:
+				   the latest checkpoint was loaded */

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#599: FILE: fs/nilfs2/the_nilfs.h:96:
+	struct mutex		ns_writer_mutex;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#612: FILE: fs/nilfs2/the_nilfs.h:109:
+	unsigned		ns_mount_state;

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#673: FILE: fs/nilfs2/the_nilfs.h:170:
+#define NILFS_GCINODE_HASH_SIZE		(1<<NILFS_GCINODE_HASH_BITS)
                                		  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#673: FILE: fs/nilfs2/the_nilfs.h:170:
+#define NILFS_GCINODE_HASH_SIZE		(1<<NILFS_GCINODE_HASH_BITS)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct block_device *' should also have an identifier name
#695: FILE: fs/nilfs2/the_nilfs.h:192:
+struct the_nilfs *alloc_nilfs(struct block_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct the_nilfs *' should also have an identifier name
#696: FILE: fs/nilfs2/the_nilfs.h:193:
+void put_nilfs(struct the_nilfs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct the_nilfs *' should also have an identifier name
#697: FILE: fs/nilfs2/the_nilfs.h:194:
+int init_nilfs(struct the_nilfs *, struct nilfs_sb_info *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_sb_info *' should also have an identifier name
#697: FILE: fs/nilfs2/the_nilfs.h:194:
+int init_nilfs(struct the_nilfs *, struct nilfs_sb_info *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#697: FILE: fs/nilfs2/the_nilfs.h:194:
+int init_nilfs(struct the_nilfs *, struct nilfs_sb_info *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct the_nilfs *' should also have an identifier name
#698: FILE: fs/nilfs2/the_nilfs.h:195:
+int load_nilfs(struct the_nilfs *, struct nilfs_sb_info *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_sb_info *' should also have an identifier name
#698: FILE: fs/nilfs2/the_nilfs.h:195:
+int load_nilfs(struct the_nilfs *, struct nilfs_sb_info *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct the_nilfs *' should also have an identifier name
#699: FILE: fs/nilfs2/the_nilfs.h:196:
+int nilfs_count_free_blocks(struct the_nilfs *, sector_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'sector_t *' should also have an identifier name
#699: FILE: fs/nilfs2/the_nilfs.h:196:
+int nilfs_count_free_blocks(struct the_nilfs *, sector_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct the_nilfs *' should also have an identifier name
#700: FILE: fs/nilfs2/the_nilfs.h:197:
+void nilfs_dispose_used_segments(struct the_nilfs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct the_nilfs *' should also have an identifier name
#701: FILE: fs/nilfs2/the_nilfs.h:198:
+int nilfs_checkpoint_is_mounted(struct the_nilfs *, __u64, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u64' should also have an identifier name
#701: FILE: fs/nilfs2/the_nilfs.h:198:
+int nilfs_checkpoint_is_mounted(struct the_nilfs *, __u64, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#701: FILE: fs/nilfs2/the_nilfs.h:198:
+int nilfs_checkpoint_is_mounted(struct the_nilfs *, __u64, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct the_nilfs *' should also have an identifier name
#702: FILE: fs/nilfs2/the_nilfs.h:199:
+int nilfs_near_disk_full(struct the_nilfs *);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#704: FILE: fs/nilfs2/the_nilfs.h:201:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000228132.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 163 warnings, 47 checks, 715 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000228132.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
