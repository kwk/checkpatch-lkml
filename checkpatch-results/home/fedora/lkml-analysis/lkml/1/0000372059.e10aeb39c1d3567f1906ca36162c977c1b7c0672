WARNING:TYPO_SPELLING: 'upcomming' may be misspelled - perhaps 'upcoming'?
#43: 
> is the upcomming 2.6.24 tree. Best you submit it against .23
         ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#48: 
This patch should apply cleanly to the 2.6.23-rc8-mm2 kernel.  It changes 
                                                              ^

WARNING:TYPO_SPELLING: 'architectual' may be misspelled - perhaps 'architectural'?
#50: 
and later processors to match the architectual pstate driver described
                                  ^^^^^^^^^^^^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#51: 
in the AMD64 Architecture Programmer's Manual Volume 2 Chapter 18.  The
                                                                   ^

WARNING:TYPO_SPELLING: 'Resarch' may be misspelled - perhaps 'Research'?
#58: 
Operating System Resarch Center
                 ^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#64: 
diff -uprN -X linux-2.6.23-rc8-mm2.vanilla/Documentation/dontdiff linux-2.6.23-rc8-mm2.vanilla/arch/i386/kernel/cpu/cpufreq/powernow-k8.c linux-2.6.23-rc8-mm2/arch/i386/kernel/cpu/cpufreq/powernow-k8.c

WARNING:LINE_SPACING: Missing a blank line after declarations
#137: FILE: arch/i386/kernel/cpu/cpufreq/powernow-k8.c:825:
+	u32 hi = 0, lo = 0;
+	rdmsr(MSR_PSTATE_CUR_LIMIT, hi, lo);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TRAILING_SEMICOLON: trailing semicolon indicates no statements, indent implies otherwise
#195: FILE: arch/i386/kernel/cpu/cpufreq/powernow-k8.c:997:
+	if (pstate > data->max_hw_pstate);
 		return 0;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#195: FILE: arch/i386/kernel/cpu/cpufreq/powernow-k8.c:997:
+	if (pstate > data->max_hw_pstate);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000372059.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 6 warnings, 2 checks, 217 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000372059.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
