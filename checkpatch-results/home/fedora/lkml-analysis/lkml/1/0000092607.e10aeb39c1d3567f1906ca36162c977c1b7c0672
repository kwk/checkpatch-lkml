WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#52: FILE: drivers/isdn/hardware/mISDN/Kconfig:50:
+config MISDN_SPEEDFAX
+	tristate "Support for Sedlbauer Speedfax+"
+	depends on MISDN
+	depends on PCI
+	select MISDN_IPAC
+	select MISDN_ISAR
+	help
+	  Enable support for Sedlbauer Speedfax+.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#86: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#91: FILE: drivers/isdn/hardware/mISDN/isar.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#109: FILE: drivers/isdn/hardware/mISDN/isar.h:19:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#110: FILE: drivers/isdn/hardware/mISDN/isar.h:20:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:TYPO_SPELLING: 'acccess' may be misspelled - perhaps 'access'?
#137: FILE: drivers/isdn/hardware/mISDN/isar.h:47:
+	spinlock_t	*hwlock;	/* lock HW acccess */
 	          	        	           ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#144: FILE: drivers/isdn/hardware/mISDN/isar.h:54:
+	int		(*ctrl)(void *, u32, u_long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#144: FILE: drivers/isdn/hardware/mISDN/isar.h:54:
+	int		(*ctrl)(void *, u32, u_long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u_long' should also have an identifier name
#144: FILE: drivers/isdn/hardware/mISDN/isar.h:54:
+	int		(*ctrl)(void *, u32, u_long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct isar_hw *' should also have an identifier name
#145: FILE: drivers/isdn/hardware/mISDN/isar.h:55:
+	void		(*release)(struct isar_hw *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct isar_hw *' should also have an identifier name
#146: FILE: drivers/isdn/hardware/mISDN/isar.h:56:
+	int		(*init)(struct isar_hw *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct isar_hw *' should also have an identifier name
#147: FILE: drivers/isdn/hardware/mISDN/isar.h:57:
+	int		(*open)(struct isar_hw *, struct channel_req *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct channel_req *' should also have an identifier name
#147: FILE: drivers/isdn/hardware/mISDN/isar.h:57:
+	int		(*open)(struct isar_hw *, struct channel_req *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct isar_hw *' should also have an identifier name
#148: FILE: drivers/isdn/hardware/mISDN/isar.h:58:
+	int		(*firmware)(struct isar_hw *, const u8 *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const u8 *' should also have an identifier name
#148: FILE: drivers/isdn/hardware/mISDN/isar.h:58:
+	int		(*firmware)(struct isar_hw *, const u8 *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#148: FILE: drivers/isdn/hardware/mISDN/isar.h:58:
+	int		(*firmware)(struct isar_hw *, const u8 *, int);

CHECK:CAMELCASE: Avoid CamelCase: <Flags>
#149: FILE: drivers/isdn/hardware/mISDN/isar.h:59:
+	unsigned long	Flags;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#190: FILE: drivers/isdn/hardware/mISDN/isar.h:100:
+#define SET_DPS(x)		((x<<6) & 0xc0)
                   		   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#190: FILE: drivers/isdn/hardware/mISDN/isar.h:100:
+#define SET_DPS(x)		((x<<6) & 0xc0)

CHECK:CAMELCASE: Avoid CamelCase: <mISDNisar_init>
#358: FILE: drivers/isdn/hardware/mISDN/isar.h:268:
+extern u32 mISDNisar_init(struct isar_hw *, void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#358: FILE: drivers/isdn/hardware/mISDN/isar.h:268:
+extern u32 mISDNisar_init(struct isar_hw *, void *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct isar_hw *' should also have an identifier name
#358: FILE: drivers/isdn/hardware/mISDN/isar.h:268:
+extern u32 mISDNisar_init(struct isar_hw *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#358: FILE: drivers/isdn/hardware/mISDN/isar.h:268:
+extern u32 mISDNisar_init(struct isar_hw *, void *);

CHECK:CAMELCASE: Avoid CamelCase: <mISDNisar_irq>
#359: FILE: drivers/isdn/hardware/mISDN/isar.h:269:
+extern void mISDNisar_irq(struct isar_hw *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#359: FILE: drivers/isdn/hardware/mISDN/isar.h:269:
+extern void mISDNisar_irq(struct isar_hw *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct isar_hw *' should also have an identifier name
#359: FILE: drivers/isdn/hardware/mISDN/isar.h:269:
+extern void mISDNisar_irq(struct isar_hw *);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#366: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#383: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#384: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:19:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:CAMELCASE: Avoid CamelCase: <waitforHIA>
#414: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:49:
+waitforHIA(struct isar_hw *isar, int timeout)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'send_mbox', this function's name, in a string
#437: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:72:
+	pr_debug("send_mbox(%02x,%02x,%d)\n", his, creg, len);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#450: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:85:
+				hex_dump_to_buffer(msg + l, len - l, 32, 1,
+					isar->log, 256, 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#452: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:87:
+				pr_debug("%s: %s %02x: %s\n", isar->name,
+					__func__, l, isar->log);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#479: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:114:
+				hex_dump_to_buffer(msg + l, isar->clsb - l, 32,
+					1, isar->log, 256, 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#481: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:116:
+				pr_debug("%s: %s %02x: %s\n", isar->name,
+					__func__, l, isar->log);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#496: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:131:
+	pr_debug("%s: rcv_mbox(%02x,%02x,%d)\n", isar->name,
+		isar->iis, isar->cmsb, isar->clsb);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#520: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:155:
+	pr_debug("%s: pulled %d bytes after %d us\n",
+		isar->name, isar->clsb, maxdelay - t);

CHECK:CAMELCASE: Avoid CamelCase: <ISARVersion>
#525: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:160:
+ISARVersion(struct isar_hw *isar)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#564: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:199:
+	if (1 != isar->version) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#566: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:201:
+		pr_err("%s: ISAR wrong version %d firmware download aborted\n",
+			isar->name, isar->version);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#572: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:207:
+	pr_debug("%s: load firmware %d words (%d bytes)\n",
+		isar->name, size/2, size);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#572: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:207:
+		isar->name, size/2, size);
 		                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#585: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:220:
+		pr_debug("ISAR firmware block (%#x,%d,%#x)\n",
+			blk_head.sadr, blk_head.len, blk_head.d_key & 0xff);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#595: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:230:
+		if (!send_mbox(isar, ISAR_HIS_DKEY, blk_head.d_key & 0xff,
+		    0, NULL)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'isar->iis != ISAR_IIS_DKEY'
#606: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:241:
+		if ((isar->iis != ISAR_IIS_DKEY) || isar->cmsb || isar->clsb) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#626: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:261:
+			pr_debug("%s: load %3d words at %04x\n", isar->name,
+				noc, blk_head.sadr);

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#631: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:266:
+				*mp++ = val & 0xFF;;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'isar->iis != ISAR_IIS_FIRM'
#646: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:281:
+			if ((isar->iis != ISAR_IIS_FIRM) ||
+			    isar->cmsb || isar->clsb) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#655: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:290:
+		pr_debug("%s: ISAR firmware block %d words loaded\n",
+			isar->name, blk_head.len);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'isar->iis != ISAR_IIS_STDSP'
#676: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:311:
+	if ((isar->iis != ISAR_IIS_STDSP) || isar->cmsb || isar->clsb) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#676: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:311:
+	if ((isar->iis != ISAR_IIS_STDSP) || isar->cmsb || isar->clsb) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#681: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:316:
+	} else

CHECK:BRACES: Unbalanced braces around else statement
#697: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:332:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#699: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:334:
+		pr_debug("%s: ISAR general status event %x\n",
+			isar->name, isar->bstat);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#714: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:349:
+		udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'isar->cmsb == ISAR_CTRL_STST'
#723: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:358:
+	if ((isar->cmsb == ISAR_CTRL_STST) && (isar->clsb == 1)
+	    && (isar->buf[0] == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'isar->clsb == 1'
#723: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:358:
+	if ((isar->cmsb == ISAR_CTRL_STST) && (isar->clsb == 1)
+	    && (isar->buf[0] == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'isar->buf[0] == 0'
#723: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:358:
+	if ((isar->cmsb == ISAR_CTRL_STST) && (isar->clsb == 1)
+	    && (isar->buf[0] == 0))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#724: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:359:
+	if ((isar->cmsb == ISAR_CTRL_STST) && (isar->clsb == 1)
+	    && (isar->buf[0] == 0))

CHECK:BRACES: Unbalanced braces around else statement
#726: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:361:
+	else {

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#742: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:377:
+		udelay(10);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'isar->cmsb == ISAR_CTRL_SWVER'
#751: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:386:
+		if ((isar->cmsb == ISAR_CTRL_SWVER) && (isar->clsb == 1)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'isar->clsb == 1'
#751: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:386:
+		if ((isar->cmsb == ISAR_CTRL_SWVER) && (isar->clsb == 1)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#753: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:388:
+			pr_notice("%s: ISAR software version %#x\n",
+				isar->name, isar->buf[0]);

WARNING:SPLIT_STRING: quoted string split across lines
#756: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:391:
+			pr_info("%s: ISAR wrong swver response (%x,%x)"
+				" cnt(%d)\n", isar->name, isar->cmsb,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#797: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:432:
+		pr_debug("%s: ISAR protocol 0 spurious IIS_RDATA %x/%x/%x\n",
+			ch->is->name, ch->is->iis, ch->is->cmsb, ch->is->clsb);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#805: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:440:
+			ch->bch.rx_skb = mI_alloc_skb(ch->bch.maxlen,
+						GFP_ATOMIC);

CHECK:CAMELCASE: Avoid CamelCase: <recv_Bchannel>
#814: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:449:
+		recv_Bchannel(&ch->bch, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#819: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:454:
+			ch->bch.rx_skb = mI_alloc_skb(ch->bch.maxlen,
+						GFP_ATOMIC);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#830: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:465:
+			pr_debug("%s: incoming packet too large\n",
+				ch->is->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#837: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:472:
+			pr_debug("%s: ISAR frame error %x len %d\n",
+				ch->is->name, ch->is->cmsb, ch->is->clsb);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#855: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:490:
+				pr_debug("%s: ISAR frame to short %d\n",
+					ch->is->name, ch->bch.rx_skb->len);

WARNING:TYPO_SPELLING: 'ACTIV' may be misspelled - perhaps 'ACTIVE'?
#865: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:500:
+			pr_debug("%s: isar_rcv_frame: not ACTIV\n",
 			                                  ^^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'isar_rcv_frame', this function's name, in a string
#865: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:500:
+			pr_debug("%s: isar_rcv_frame: not ACTIV\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#866: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:501:
+			pr_debug("%s: isar_rcv_frame: not ACTIV\n",
+				ch->is->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#874: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:509:
+			ch->bch.rx_skb = mI_alloc_skb(ch->bch.maxlen,
+						GFP_ATOMIC);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'isar_rcv_frame', this function's name, in a string
#884: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:519:
+			pr_debug("%s: isar_rcv_frame: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#885: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:520:
+			pr_debug("%s: isar_rcv_frame: %d\n",
+				ch->is->name, ch->bch.rx_skb->len);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'isar_rcv_frame', this function's name, in a string
#887: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:522:
+				pr_debug("%s: isar_rcv_frame: no more data\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#888: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:523:
+				pr_debug("%s: isar_rcv_frame: no more data\n",
+					ch->is->name);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'isar_rcv_frame', this function's name, in a string
#902: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:537:
+			pr_debug("%s: isar_rcv_frame: unknown fax mode %x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#903: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:538:
+			pr_debug("%s: isar_rcv_frame: unknown fax mode %x\n",
+				ch->is->name, ch->cmd);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'isar_rcv_frame', this function's name, in a string
#939: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:574:
+			pr_debug("%s: isar_rcv_frame: no more data\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#940: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:575:
+			pr_debug("%s: isar_rcv_frame: no more data\n",
+				ch->is->name);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'isar_rcv_frame', this function's name, in a string
#951: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:586:
+		pr_info("isar_rcv_frame protocol (%x)error\n", ch->bch.state);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#965: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:600:
+	pr_debug("%s: ch%d  tx_skb %p tx_idx %d\n",
+		ch->is->name, ch->bch.nr, ch->bch.tx_skb, ch->bch.tx_idx);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ch->bch.state == ISDN_P_B_T30_FAX'
#983: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:618:
+		if ((ch->bch.state == ISDN_P_B_T30_FAX) &&
+			(ch->cmd == PCTRL_CMD_FTH)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ch->cmd == PCTRL_CMD_FTH'
#983: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:618:
+		if ((ch->bch.state == ISDN_P_B_T30_FAX) &&
+			(ch->cmd == PCTRL_CMD_FTH)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#984: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:619:
+		if ((ch->bch.state == ISDN_P_B_T30_FAX) &&
+			(ch->cmd == PCTRL_CMD_FTH)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ptr[0] == 0xff'
#986: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:621:
+				if ((ptr[0] == 0xff) && (ptr[1] == 0x13)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ptr[1] == 0x13'
#986: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:621:
+				if ((ptr[0] == 0xff) && (ptr[1] == 0x13)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#989: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:624:
+					test_and_set_bit(FLG_LASTDATA,
+						&ch->bch.Flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#991: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:626:
+					pr_debug("%s: set LASTDATA\n",
+						ch->is->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#994: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:629:
+						test_and_set_bit(FLG_DLEETX,
+							&ch->bch.Flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1009: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:644:
+		send_mbox(ch->is, SET_DPS(ch->dpath) | ISAR_HIS_SDATA,
+			0, count, ptr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1013: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:648:
+		send_mbox(ch->is, SET_DPS(ch->dpath) | ISAR_HIS_SDATA,
+			msb, count, ptr);

WARNING:TYPO_SPELLING: 'ACTIV' may be misspelled - perhaps 'ACTIVE'?
#1017: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:652:
+			pr_debug("%s: not ACTIV\n", ch->is->name);
 			                  ^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1020: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:655:
+			send_mbox(ch->is, SET_DPS(ch->dpath) | ISAR_HIS_SDATA,
+				msb, count, ptr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1023: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:658:
+			send_mbox(ch->is, SET_DPS(ch->dpath) | ISAR_HIS_SDATA,
+				0, count, ptr);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!dpath'
#1039: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:674:
+	if ((!dpath) || (dpath > 2))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dpath > 2'
#1039: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:674:
+	if ((!dpath) || (dpath > 2))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1053: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:688:
+	pr_debug("%s: %s ch%d tx_skb %p tx_idx %d\n",
+		ch->is->name, __func__, ch->bch.nr,

CHECK:CAMELCASE: Avoid CamelCase: <confirm_Bsend>
#1071: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:706:
+			confirm_Bsend(&ch->bch);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1074: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:709:
+	if (get_next_bframe(&ch->bch))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1076: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:711:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1079: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:714:
+			if (test_and_clear_bit(FLG_LASTDATA,
+			    &ch->bch.Flags)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1081: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:716:
+				if (test_and_clear_bit(FLG_NMD_DATA,
+				    &ch->bch.Flags)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1083: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:718:
+					u8 zd = 0;
+					send_mbox(ch->is, SET_DPS(ch->dpath) |

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ch->bch.tx_skb->len >
 			    ch->bch.tx_idx'
#1103: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:738:
+			if (ch->bch.tx_skb && (ch->bch.tx_skb->len >
+			    ch->bch.tx_idx))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ch->bch.tx_skb->len >
 			    ch->bch.tx_idx'
#1113: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:748:
+			if (ch->bch.tx_skb && (ch->bch.tx_skb->len >
+			    ch->bch.tx_idx))

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1128: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:763:
+static void
+isar_pump_status_rsp(struct isar_ch *ch) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1178: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:813:
+static void
+isar_pump_statev_modem(struct isar_ch *ch, u8 devt) {

WARNING:TYPO_SPELLING: 'nknown' may be misspelled - perhaps 'unknown'?
#1228: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:863:
+		pr_info("u%s: nknown pump stev %x\n", ch->is->name, devt);
 		              ^^^^^^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1233: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:868:
+static void
+isar_pump_statev_fax(struct isar_ch *ch, u8 devt) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1258: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:893:
+			send_mbox(ch->is, dps | ISAR_HIS_PUMPCTRL,
+				PCTRL_CMD_CONT, 0, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1261: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:896:
+			pr_debug("%s: pump stev LINE_TX_H wrong st %x\n",
+				ch->is->name, ch->state);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1269: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:904:
+			send_mbox(ch->is, dps | ISAR_HIS_PUMPCTRL,
+				PCTRL_CMD_CONT, 0, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1272: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:907:
+			pr_debug("%s: pump stev LINE_RX_H wrong st %x\n",
+				ch->is->name, ch->state);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1280: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:915:
+			send_mbox(ch->is, dps | ISAR_HIS_PUMPCTRL,
+				PCTRL_CMD_CONT, 0, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1283: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:918:
+			pr_debug("%s: pump stev LINE_TX_B wrong st %x\n",
+				ch->is->name, ch->state);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1291: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:926:
+			send_mbox(ch->is, dps | ISAR_HIS_PUMPCTRL,
+				PCTRL_CMD_CONT, 0, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1294: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:929:
+			pr_debug("%s: pump stev LINE_RX_B wrong st %x\n",
+				ch->is->name, ch->state);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1307: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:942:
+				if (test_and_set_bit(FLG_FTI_RUN,
+				    &ch->bch.Flags))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1310: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:945:
+					jiffies + ((delay * HZ)/1000);
 					                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1312: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:947:
+				test_and_set_bit(FLG_LL_CONN,
+					&ch->bch.Flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1319: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:954:
+			pr_debug("%s: pump stev RSP_CONN wrong st %x\n",
+				ch->is->name, ch->state);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1327: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:962:
+		pr_debug("%s: pump stev RSP_DISC state(%d)\n",
+			ch->is->name, ch->state);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1338: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:973:
+				send_mbox(ch->is, dps | ISAR_HIS_PUMPCTRL,
+					PCTRL_CMD_SILON, 1, &p1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1349: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:984:
+				send_mbox(ch->is, dps | ISAR_HIS_PUMPCTRL,
+					ch->cmd, 1, &p1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1355: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:990:
+				pr_debug("%s: RSP_DISC unknown newcmd %x\n",
+					ch->is->name, ch->newcmd);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1381: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1016:
+			send_mbox(ch->is, dps | ISAR_HIS_PUMPCTRL,
+				ch->cmd, 1, &p1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1392: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1027:
+			pr_debug("%s: pump stev RSP_FCERR try %d\n",
+				ch->is->name, ch->try_mod);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1395: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1030:
+				send_mbox(ch->is, dps | ISAR_HIS_PUMPCTRL,
+					ch->cmd, 1, &ch->mod);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1402: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1037:
+		send_mbox(ch->is, dps | ISAR_HIS_PUMPCTRL, PCTRL_CMD_ESC,
+			0, NULL);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1419: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1054:
+		if (ch)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1421: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1056:
+		else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1423: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1058:
+			pr_debug("%s: ISAR spurious IIS_RDATA %x/%x/%x\n",
+				isar->name, isar->iis, isar->cmsb,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1444: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1079:
+		pr_debug("%s: Buffer STEV dpath%d msb(%x)\n",
+			isar->name, isar->iis>>6, isar->cmsb);

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1444: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1079:
+			isar->name, isar->iis>>6, isar->cmsb);
 			                     ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1451: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1086:
+			if (ch->bch.state == ISDN_P_B_MODEM_ASYNC)
[...]
+			else if (ch->bch.state == ISDN_P_B_T30_FAX)
[...]
+			else if (ch->bch.state == ISDN_P_B_RAW) {
[...]
+			} else
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#1457: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1092:
+				int	tt;
+				tt = isar->cmsb | 0x30;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1466: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1101:
+				_queue_data(&ch->bch.ch, PH_CONTROL_IND,
+					MISDN_ID_ANY, sizeof(tt), &tt,

CHECK:BRACES: Unbalanced braces around else statement
#1468: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1103:
+			} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1470: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1105:
+				pr_debug("%s: ISAR IIS_PSTEV pm %d sta %x\n",
+					isar->name, ch->bch.state,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1474: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1109:
+			pr_debug("%s: ISAR spurious IIS_PSTEV %x/%x/%x\n",
+				isar->name, isar->iis, isar->cmsb,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1486: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1121:
+			pr_debug("%s: ISAR spurious IIS_PSTRSP %x/%x/%x\n",
+				isar->name, isar->iis, isar->cmsb,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1503: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1138:
+		pr_debug("%s: unhandled msg iis(%x) ctrl(%x/%x)\n",
+			isar->name, isar->iis, isar->cmsb, isar->clsb);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1520: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1155:
+static void
+setup_pump(struct isar_ch *ch) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1535: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1170:
+			send_mbox(ch->is, dps | ISAR_HIS_PUMPCFG,
+				PMOD_DTMF_TRANS, 1, param);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1539: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1174:
+			send_mbox(ch->is, dps | ISAR_HIS_PUMPCFG,
+				PMOD_DTMF, 1, param);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1573: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1208:
+	udelay(1000);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1575: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1210:
+	udelay(1000);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1578: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1213:
+static void
+setup_sart(struct isar_ch *ch) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1586: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1221:
+		send_mbox(ch->is, dps | ISAR_HIS_SARTCFG, SMODE_DISABLE,
+			0, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1591: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1226:
+		send_mbox(ch->is, dps | ISAR_HIS_SARTCFG, SMODE_BINARY,
+			2, param);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1596: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1231:
+		send_mbox(ch->is, dps | ISAR_HIS_SARTCFG, SMODE_HDLC,
+			1, param);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1605: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1240:
+	udelay(1000);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1607: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1242:
+	udelay(1000);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1610: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1245:
+static void
+setup_iom2(struct isar_ch *ch) {

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1639: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1274:
+	udelay(1000);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1641: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1276:
+	udelay(1000);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1660: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1295:
+			if (!test_and_set_bit(ISAR_DP2_USE, &ch->is->Flags))
[...]
+			else if (!test_and_set_bit(ISAR_DP1_USE,
[...]
+			else {
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1663: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1298:
+			else if (!test_and_set_bit(ISAR_DP1_USE,
+			    &ch->is->Flags))

CHECK:BRACES: Unbalanced braces around else statement
#1665: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1300:
+			else {

WARNING:TYPO_SPELLING: 'pathes' may be misspelled - perhaps 'paths'?
#1666: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1301:
+				pr_info("modeisar both pathes in use\n");
 				                       ^^^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'modeisar', this function's name, in a string
#1666: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1301:
+				pr_info("modeisar both pathes in use\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1673: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1308:
+				test_and_set_bit(FLG_TRANSPARENT,
+					&ch->bch.Flags);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1679: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1314:
+			if (!test_and_set_bit(ISAR_DP1_USE, &ch->is->Flags))
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1681: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1316:
+			else {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'modeisar', this function's name, in a string
#1682: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1317:
+				pr_info("%s: ISAR modeisar analog functions"

WARNING:SPLIT_STRING: quoted string split across lines
#1683: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1318:
+				pr_info("%s: ISAR modeisar analog functions"
+					"only with DP1\n", ch->is->name);

WARNING:MISSING_SPACE: break quoted strings at a space character
#1683: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1318:
+				pr_info("%s: ISAR modeisar analog functions"
+					"only with DP1\n", ch->is->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1694: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1329:
+	pr_debug("%s: ISAR ch%d dp%d protocol %x->%x\n", ch->is->name,
+		ch->bch.nr, ch->dpath, ch->bch.state, bprotocol);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1699: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1334:
+	if (ch->bch.state == ISDN_P_NONE) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1707: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1342:
+	} else

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'isar_pump_cmd', this function's name, in a string
#1718: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1353:
+	pr_debug("%s: isar_pump_cmd %x/%x state(%x)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1719: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1354:
+	pr_debug("%s: isar_pump_cmd %x/%x state(%x)\n",
+		ch->is->name, cmd, para, ch->bch.state);

CHECK:BRACES: Unbalanced braces around else statement
#1735: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1370:
+		else {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#1754: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1389:
+		} else if ((ch->state == STFAX_ACTIV) &&
[...]
+				deliver_status(ch, HW_MOD_CONNECT);

CHECK:BRACES: Unbalanced braces around else statement
#1757: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1392:
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#1779: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1414:
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#1801: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1436:
+		else {

CHECK:CAMELCASE: Avoid CamelCase: <mISDNchannel>
#1839: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1474:
+isar_l2l1(struct mISDNchannel *ch, struct sk_buff *skb)

CHECK:CAMELCASE: Avoid CamelCase: <mISDNhead>
#1844: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1479:
+	struct mISDNhead *hh = mISDN_HEAD_P(skb);

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_HEAD_P>
#1844: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1479:
+	struct mISDNhead *hh = mISDN_HEAD_P(skb);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1852: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1487:
+		if (ret > 0) { /* direct TX */
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1859: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1494:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1871: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1506:
+			_queue_data(ch, PH_ACTIVATE_IND, MISDN_ID_ANY, 0,
+				NULL, GFP_KERNEL);

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_clear_bchannel>
#1875: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1510:
+		mISDN_clear_bchannel(bch);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1879: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1514:
+		_queue_data(ch, PH_DEACTIVATE_IND, MISDN_ID_ANY, 0,
+			NULL, GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1885: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1520:
+		pr_debug("%s: PH_CONTROL | REQUEST %x/%x\n", ich->is->name,
+			hh->id, *val);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hh->id == 0'
#1886: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1521:
+		if ((hh->id == 0) && ((*val & ~DTMF_TONE_MASK) ==
+		    DTMF_TONE_VAL)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1886: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1521:
+		if ((hh->id == 0) && ((*val & ~DTMF_TONE_MASK) ==
[...]
+		} else if ((hh->id == HW_MOD_FRM) || (hh->id == HW_MOD_FRH) ||
[...]
+		} else if (hh->id == HW_MOD_LASTDATA)
[...]
+		else {
[...]

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'FAXMODCNT > id'
#1911: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1546:
+			if ((FAXMODCNT > id) &&
+			    test_bit(FLG_INITIALIZED, &bch->Flags)) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1911: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1546:
+			if ((FAXMODCNT > id) &&

CHECK:BRACES: Unbalanced braces around else statement
#1923: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1558:
+		else {

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_ctrl_req>
#1939: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1574:
+channel_bctrl(struct bchannel *bch, struct mISDN_ctrl_req *cq)

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_freebchannel>
#1971: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1606:
+			mISDN_freebchannel(bch);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2013: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1648:
+			pr_notice("%s: Testing version %d (%d time)\n",
+				isar->name, isar->version, 3 - cnt);

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_initbchannel>
#2057: FILE: drivers/isdn/hardware/mISDN/mISDNisar.c:1692:
+		mISDN_initbchannel(&isar->ch[i].bch, MAX_DATA_MEM);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2098: FILE: drivers/isdn/hardware/mISDN/speedfax.c:1:
+/*

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#2101: FILE: drivers/isdn/hardware/mISDN/speedfax.c:4:
+ *		Thanks to Sedlbauer AG for informations and HW
   		                           ^^^^^^^^^^^^

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2117: FILE: drivers/isdn/hardware/mISDN/speedfax.c:20:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2118: FILE: drivers/isdn/hardware/mISDN/speedfax.c:21:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:CAMELCASE: Avoid CamelCase: <Cards>
#2180: FILE: drivers/isdn/hardware/mISDN/speedfax.c:83:
+static LIST_HEAD(Cards);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#2210: FILE: drivers/isdn/hardware/mISDN/speedfax.c:113:
+module_param_call(debug, set_debug, param_get_uint, &debug, S_IRUGO | S_IWUSR);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#2212: FILE: drivers/isdn/hardware/mISDN/speedfax.c:115:
+module_param(irqloops, uint, S_IRUGO | S_IWUSR);

CHECK:CAMELCASE: Avoid CamelCase: <ReadISAR_IND>
#2232: FILE: drivers/isdn/hardware/mISDN/speedfax.c:135:
+	val = ReadISAR_IND(sf, ISAR_IRQBIT);

CHECK:CAMELCASE: Avoid CamelCase: <Start_ISAR>
#2233: FILE: drivers/isdn/hardware/mISDN/speedfax.c:136:
+Start_ISAR:

CHECK:CAMELCASE: Avoid CamelCase: <ReadISAC_IND>
#2236: FILE: drivers/isdn/hardware/mISDN/speedfax.c:139:
+	val = ReadISAC_IND(sf, ISAC_ISTA);

CHECK:CAMELCASE: Avoid CamelCase: <mISDNisac_irq>
#2238: FILE: drivers/isdn/hardware/mISDN/speedfax.c:141:
+		mISDNisac_irq(&sf->isac, val);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2244: FILE: drivers/isdn/hardware/mISDN/speedfax.c:147:
+		pr_debug("%s: %d irqloops cpu%d\n", sf->name,
+			irqloops - cnt, smp_processor_id());

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2247: FILE: drivers/isdn/hardware/mISDN/speedfax.c:150:
+		pr_notice("%s: %d IRQ LOOP cpu%d\n", sf->name,
+			irqloops, smp_processor_id());

CHECK:CAMELCASE: Avoid CamelCase: <WriteISAC_IND>
#2255: FILE: drivers/isdn/hardware/mISDN/speedfax.c:158:
+	WriteISAC_IND(sf, ISAC_MASK, 0);

CHECK:CAMELCASE: Avoid CamelCase: <WriteISAR_IND>
#2256: FILE: drivers/isdn/hardware/mISDN/speedfax.c:159:
+	WriteISAR_IND(sf, ISAR_IRQBIT, ISAR_IRQMSK);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2271: FILE: drivers/isdn/hardware/mISDN/speedfax.c:174:
+{
+

CHECK:CAMELCASE: Avoid CamelCase: <mISDNdevice>
#2342: FILE: drivers/isdn/hardware/mISDN/speedfax.c:245:
+	struct mISDNdevice	*dev = container_of(ch, struct mISDNdevice, D);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2363: FILE: drivers/isdn/hardware/mISDN/speedfax.c:266:
+		pr_debug("%s: dev(%d) close from %p\n", sf->name,
+			dch->dev.id, __builtin_return_address(0));

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2376: FILE: drivers/isdn/hardware/mISDN/speedfax.c:279:
+static int __devinit

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2403: FILE: drivers/isdn/hardware/mISDN/speedfax.c:306:
+			pr_notice("%s: IRQ %d count %d\n", sf->name,
+				sf->irq, sf->irqcnt);

CHECK:BRACES: braces {} should be used on all arms of this statement
#2404: FILE: drivers/isdn/hardware/mISDN/speedfax.c:307:
+		if (!sf->irqcnt) {
[...]
+		} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2406: FILE: drivers/isdn/hardware/mISDN/speedfax.c:309:
+			pr_info("%s: IRQ(%d) got no requests during init %d\n",
+			       sf->name, sf->irq, 3 - cnt);

CHECK:BRACES: Unbalanced braces around else statement
#2407: FILE: drivers/isdn/hardware/mISDN/speedfax.c:310:
+		} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2414: FILE: drivers/isdn/hardware/mISDN/speedfax.c:317:
+
+

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2415: FILE: drivers/isdn/hardware/mISDN/speedfax.c:318:
+static int __devinit

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2422: FILE: drivers/isdn/hardware/mISDN/speedfax.c:325:
+		pr_info("mISDN: %s config port %x-%x already in use\n",
+		       sf->name, sf->cfg, sf->cfg + 255);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#2444: FILE: drivers/isdn/hardware/mISDN/speedfax.c:347:
+static void
+release_card(struct sfax_hw *card) {

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_unregister_device>
#2454: FILE: drivers/isdn/hardware/mISDN/speedfax.c:357:
+	mISDN_unregister_device(&card->isac.dch.dev);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2465: FILE: drivers/isdn/hardware/mISDN/speedfax.c:368:
+static int __devinit

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2493: FILE: drivers/isdn/hardware/mISDN/speedfax.c:396:
+		pr_notice("%s: got firmware %zu bytes\n",
+			card->name, firmware->size);

CHECK:CAMELCASE: Avoid CamelCase: <mISDNisac_init>
#2495: FILE: drivers/isdn/hardware/mISDN/speedfax.c:398:
+	mISDNisac_init(&card->isac, card);

CHECK:CAMELCASE: Avoid CamelCase: <Bprotocols>
#2498: FILE: drivers/isdn/hardware/mISDN/speedfax.c:401:
+	card->isac.dch.dev.Bprotocols =

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2503: FILE: drivers/isdn/hardware/mISDN/speedfax.c:406:
+		list_add(&card->isar.ch[i].bch.ch.list,
+			&card->isac.dch.dev.bchannels);

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_register_device>
#2512: FILE: drivers/isdn/hardware/mISDN/speedfax.c:415:
+	err = mISDN_register_device(&card->isac.dch.dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2513: FILE: drivers/isdn/hardware/mISDN/speedfax.c:416:
+	err = mISDN_register_device(&card->isac.dch.dev,
+		&card->pdev->dev, card->name);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2545: FILE: drivers/isdn/hardware/mISDN/speedfax.c:448:
+static int __devinit

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*card)...) over kzalloc(sizeof(struct sfax_hw)...)
#2549: FILE: drivers/isdn/hardware/mISDN/speedfax.c:452:
+	struct sfax_hw *card = kzalloc(sizeof(struct sfax_hw), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#2552: FILE: drivers/isdn/hardware/mISDN/speedfax.c:455:
+	if (!card) {
+		pr_info("No memory for Speedfax+ PCI\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2563: FILE: drivers/isdn/hardware/mISDN/speedfax.c:466:
+	pr_notice("mISDN: Speedfax found adapter %s at %s\n",
+		(char *)ent->driver_data, pci_name(pdev));

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#2574: FILE: drivers/isdn/hardware/mISDN/speedfax.c:477:
+static void __devexit

WARNING:TYPO_SPELLING: 'allready' may be misspelled - perhaps 'already'?
#2582: FILE: drivers/isdn/hardware/mISDN/speedfax.c:485:
+		pr_debug("%s: drvdata allready removed\n", __func__);
 		                      ^^^^^^^^

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#2585: FILE: drivers/isdn/hardware/mISDN/speedfax.c:488:
+static struct pci_device_id sfaxpci_ids[] __devinitdata = {

CHECK:SPACING: No space is necessary after a cast
#2588: FILE: drivers/isdn/hardware/mISDN/speedfax.c:491:
+	  0, 0, (unsigned long) "Pyramid Speedfax + PCI"

CHECK:SPACING: No space is necessary after a cast
#2592: FILE: drivers/isdn/hardware/mISDN/speedfax.c:495:
+	  0, 0, (unsigned long) "Sedlbauer Speedfax + PCI"

CHECK:CAMELCASE: Avoid CamelCase: <Speedfax_init>
#2606: FILE: drivers/isdn/hardware/mISDN/speedfax.c:509:
+Speedfax_init(void)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2611: FILE: drivers/isdn/hardware/mISDN/speedfax.c:514:
+	pr_notice("Sedlbauer Speedfax+ Driver Rev. %s\n",
+		SPEEDFAX_REV);

CHECK:CAMELCASE: Avoid CamelCase: <Speedfax_cleanup>
#2617: FILE: drivers/isdn/hardware/mISDN/speedfax.c:520:
+Speedfax_cleanup(void)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000092607.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 13 errors, 53 warnings, 181 checks, 2585 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000092607.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
