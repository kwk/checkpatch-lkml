WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#54: FILE: drivers/net/lguest_net.c:1:
+/* A simple network driver for lguest.

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#69: FILE: drivers/net/lguest_net.c:16:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#70: FILE: drivers/net/lguest_net.c:17:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#78: FILE: drivers/net/lguest_net.c:25:
+#include <asm/io.h>

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#85: FILE: drivers/net/lguest_net.c:32:
+struct lguestnet_info
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#108: FILE: drivers/net/lguest_net.c:55:
+static unsigned long peer_key(struct lguestnet_info *info, unsigned peernum)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#118: FILE: drivers/net/lguest_net.c:65:
+	for (i = seg = 0; i < headlen; seg++, i += rest_of_page(skb->data+i)) {
 	                                                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#120: FILE: drivers/net/lguest_net.c:67:
+		dma->len[seg] = min((unsigned)(headlen - i),

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#127: FILE: drivers/net/lguest_net.c:74:
+			printk("Woah dude!  Megapacket!\n");

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#144: FILE: drivers/net/lguest_net.c:91:
+	if ((dev->flags & (IFF_PROMISC|IFF_ALLMULTI)) || dev->mc_count)
 	                              ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '~PROMISC_BIT'
#159: FILE: drivers/net/lguest_net.c:106:
+	if ((info->peer[peer].mac[0] & (~PROMISC_BIT)) != mac[0])

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#161: FILE: drivers/net/lguest_net.c:108:
+	return memcmp(mac+1, info->peer[peer].mac+1, ETH_ALEN-1) == 0;
 	                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#161: FILE: drivers/net/lguest_net.c:108:
+	return memcmp(mac+1, info->peer[peer].mac+1, ETH_ALEN-1) == 0;
 	                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#161: FILE: drivers/net/lguest_net.c:108:
+	return memcmp(mac+1, info->peer[peer].mac+1, ETH_ALEN-1) == 0;
 	                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#174: FILE: drivers/net/lguest_net.c:121:
+	hcall(LHCALL_SEND_DMA, peer_key(info,peernum), __pa(&dma), 0);
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#199: FILE: drivers/net/lguest_net.c:146:
+		 dev->name, dest[0],dest[1],dest[2],dest[3],dest[4],dest[5]);
 		                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#199: FILE: drivers/net/lguest_net.c:146:
+		 dev->name, dest[0],dest[1],dest[2],dest[3],dest[4],dest[5]);
 		                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#199: FILE: drivers/net/lguest_net.c:146:
+		 dev->name, dest[0],dest[1],dest[2],dest[3],dest[4],dest[5]);
 		                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#199: FILE: drivers/net/lguest_net.c:146:
+		 dev->name, dest[0],dest[1],dest[2],dest[3],dest[4],dest[5]);
 		                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#199: FILE: drivers/net/lguest_net.c:146:
+		 dev->name, dest[0],dest[1],dest[2],dest[3],dest[4],dest[5]);
 		                                                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#202: FILE: drivers/net/lguest_net.c:149:
+	for (i = 0; i < info->mapsize/sizeof(struct lguest_net); i++) {
 	                             ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#224: FILE: drivers/net/lguest_net.c:171:
+		printk("%s: could not fill slot %i\n", dev->name, slot);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#224: FILE: drivers/net/lguest_net.c:171:
+	if (!info->skb[slot]) {
+		printk("%s: could not fill slot %i\n", dev->name, slot);

WARNING:MEMORY_BARRIER: memory barrier without comment
#229: FILE: drivers/net/lguest_net.c:176:
+	wmb();

WARNING:UNNECESSARY_KERN_LEVEL: Possible unnecessary KERN_WARNING
#254: FILE: drivers/net/lguest_net.c:201:
+			pr_debug(KERN_WARNING "%s: unbelievable skb len: %i\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#354: FILE: drivers/net/lguest_net.c:301:
+	 * We don't actually support multicast yet */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#358: FILE: drivers/net/lguest_net.c:305:
+	dev->irq = lgdev->index+1;
 	                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#368: FILE: drivers/net/lguest_net.c:315:
+	info->me = (desc->features & (info->mapsize-1));
 	                                           ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000446884.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 10 warnings, 9 checks, 359 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000446884.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
