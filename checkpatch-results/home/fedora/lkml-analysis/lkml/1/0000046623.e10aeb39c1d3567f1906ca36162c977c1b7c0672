WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
>   - alloc_pages() eats nodemask as its arguments, __alloc_pages_nodemask().

WARNING:TYPO_SPELLING: 'similiar' may be misspelled - perhaps 'similar'?
#70: 
determine the best task depending on our heuristics, similiar to how we 
                                                     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#83: FILE: include/linux/mempolicy.h:204:
+extern bool init_nodemask_of_task_mempolicy(struct task_struct *tsk,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#84: FILE: include/linux/mempolicy.h:205:
+extern bool init_nodemask_of_task_mempolicy(struct task_struct *tsk,
+				nodemask_t *mask);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#85: FILE: include/linux/mempolicy.h:206:
+extern bool init_nodemask_of_current_mempolicy(nodemask_t *mask);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#95: FILE: include/linux/mempolicy.h:335:
+static inline bool init_nodemask_of_task_mempolicy(struct task_struct *tsk,
+							nodemask_t *mask)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#204: FILE: mm/oom_kill.c:42:
+static int has_intersects_mems_allowed(struct task_struct *tsk,
+						nodemask_t *nodemask)

WARNING:LINE_SPACING: Missing a blank line after declarations
#208: FILE: mm/oom_kill.c:45:
+	struct task_struct *start = tsk;
+	NODEMASK_ALLOC(nodemask_t, mpol_nodemask, GFP_KERNEL);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#218: FILE: mm/oom_kill.c:53:
+			if (init_nodemask_of_task_mempolicy(tsk, mpol_nodemask) &&
+				nodes_intersects(*nodemask, *mpol_nodemask)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#248: FILE: mm/oom_kill.c:89:
+unsigned long badness(struct task_struct *p, unsigned long uptime,
+			enum oom_constraint constraint, nodemask_t *nodemask)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#258: FILE: mm/oom_kill.c:191:
+	if (!has_intersects_mems_allowed(p,
+			constraint == CONSTRAINT_MEMORY_POLICY ? nodemask :

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#297: FILE: mm/oom_kill.c:577:
+static void __out_of_memory(gfp_t gfp_mask, int order,
+			enum oom_constraint constraint, nodemask_t *nodemask)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000046623.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 9 checks, 233 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000046623.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
