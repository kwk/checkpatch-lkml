WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
# rmdir baz

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
# rm bar

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
# touch bar

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
# chcon -t foo_exec_t bar # foo_exec_t is not yet defined

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#56: 
chcon: failed to change context of `bar' to `system_u:object_r:foo_exec_t': Invalid argument

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
# mkdir -Z system_u:object_r:foo_exec_t baz

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
# cat setundefined.te

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#59: 
# cat setundefined.te
                   ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
# make -f /usr/share/selinux/devel/Makefile setundefined.pp

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#67: 
# make -f /usr/share/selinux/devel/Makefile setundefined.pp

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
# semodule -i setundefined.pp

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
# chcon -t foo_exec_t bar # foo_exec_t is not yet defined

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
# mkdir -Z system_u:object_r:foo_exec_t baz

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
# ls -Zd bar baz

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#74: 
# cat foo.te

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#74: 
# cat foo.te
          ^^

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#78: 
# make -f /usr/share/selinux/devel/Makefile foo.pp

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#78: 
# make -f /usr/share/selinux/devel/Makefile foo.pp

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#79: 
# semodule -i foo.pp # defines foo_exec_t

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#80: 
# ls -Zd bar baz

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#83: 
# semodule -r foo

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#84: 
# ls -Zd bar baz

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#87: 
# semodule -i foo.pp

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#88: 
# ls -Zd bar baz

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#91: 
# semodule -r setundefined foo

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#92: 
# chcon -t foo_exec_t bar # no longer defined and not allowed

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#94: 
# rmdir baz

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#95: 
# mkdir -Z system_u:object_r:foo_exec_t baz

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#145: FILE: security/selinux/hooks.c:2713:
+		printk(KERN_ERR "SELinux:  unable to map context to SID"

WARNING:SPLIT_STRING: quoted string split across lines
#146: FILE: security/selinux/hooks.c:2714:
+		printk(KERN_ERR "SELinux:  unable to map context to SID"
+		       "for (%s, %lu), rc=%d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:MISSING_SPACE: break quoted strings at a space character
#146: FILE: security/selinux/hooks.c:2714:
+		printk(KERN_ERR "SELinux:  unable to map context to SID"
+		       "for (%s, %lu), rc=%d\n",

CHECK:BRACES: braces {} should be used on all arms of this statement
#546: FILE: security/selinux/ss/services.c:854:
+	if (rc == -EINVAL && force) {
[...]
+	} else if (rc)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#547: FILE: security/selinux/ss/services.c:855:
+		context.str = kmalloc(scontext_len+1, gfp_flags);
 		                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#606: FILE: security/selinux/ss/services.c:1304:
+			printk(KERN_WARNING

WARNING:LINE_SPACING: Missing a blank line after declarations
#620: FILE: security/selinux/ss/services.c:1342:
+		struct context ctx;
+		rc = string_to_context_struct(args->newp, NULL, c->str,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#624: FILE: security/selinux/ss/services.c:1346:
+			printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#637: FILE: security/selinux/ss/services.c:1359:
+			printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#665: FILE: security/selinux/ss/services.c:1416:
+	printk(KERN_INFO

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cur"
#734: FILE: security/selinux/ss/sidtab.c:105:
+	if (cur == NULL || sid != cur->sid || cur->context.len) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#804: FILE: security/selinux/ss/sidtab.c:195:
+			printk(KERN_INFO

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000257978.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 37 warnings, 3 checks, 655 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000257978.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
