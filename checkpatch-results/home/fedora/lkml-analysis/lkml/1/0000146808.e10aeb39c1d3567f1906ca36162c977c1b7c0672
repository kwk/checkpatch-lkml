CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#86: FILE: arch/x86/include/asm/ds.h:98:
+extern struct bts_tracer *ds_request_bts_task(struct task_struct *task,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#90: FILE: arch/x86/include/asm/ds.h:102:
+extern struct bts_tracer *ds_request_bts_cpu(int cpu, void *base, size_t size,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#93: FILE: arch/x86/include/asm/ds.h:105:
+extern struct pebs_tracer *ds_request_pebs_task(struct task_struct *task,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#97: FILE: arch/x86/include/asm/ds.h:109:
+extern struct pebs_tracer *ds_request_pebs_cpu(int cpu,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#130: FILE: arch/x86/include/asm/ds.h:144:
+extern int ds_release_bts_noirq(struct bts_tracer *tracer);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#131: FILE: arch/x86/include/asm/ds.h:145:
+extern int ds_suspend_bts_noirq(struct bts_tracer *tracer);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#132: FILE: arch/x86/include/asm/ds.h:146:
+extern int ds_resume_bts_noirq(struct bts_tracer *tracer);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#133: FILE: arch/x86/include/asm/ds.h:147:
+extern int ds_release_pebs_noirq(struct pebs_tracer *tracer);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#134: FILE: arch/x86/include/asm/ds.h:148:
+extern int ds_suspend_pebs_noirq(struct pebs_tracer *tracer);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#135: FILE: arch/x86/include/asm/ds.h:149:
+extern int ds_resume_pebs_noirq(struct pebs_tracer *tracer);

CHECK:BRACES: Unbalanced braces around else statement
#268: FILE: arch/x86/kernel/ds.c:393:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tracer->ds.context->cpu != smp_processor_id()'
#542: FILE: arch/x86/kernel/ds.c:935:
+	if (!task &&
+	    (tracer->ds.context->cpu != smp_processor_id()))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'task != current'
#547: FILE: arch/x86/kernel/ds.c:940:
+	if (task && (task != current))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cpu != smp_processor_id()'
#630: FILE: arch/x86/kernel/ds.c:1012:
+	if (!task && (cpu != smp_processor_id()))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cpu != smp_processor_id()'
#715: FILE: arch/x86/kernel/ds.c:1088:
+	if (!task && (cpu != smp_processor_id()))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tracer->ds.context->cpu != smp_processor_id()'
#771: FILE: arch/x86/kernel/ds.c:1147:
+	if (!task &&
+	    (tracer->ds.context->cpu != smp_processor_id()))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'task != current'
#776: FILE: arch/x86/kernel/ds.c:1152:
+	if (task && (task != current))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000146808.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 0 warnings, 17 checks, 736 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000146808.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
