WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#54: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#59: FILE: fs/nilfs2/super.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#75: FILE: fs/nilfs2/super.c:17:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#76: FILE: fs/nilfs2/super.c:18:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

WARNING:SPLIT_STRING: quoted string split across lines
#123: FILE: fs/nilfs2/super.c:65:
+MODULE_DESCRIPTION("A New Implementation of the Log-structured Filesystem "
+		   "(NILFS)");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#150: FILE: fs/nilfs2/super.c:92:
+	printk(KERN_CRIT "NILFS error (device %s): %s: ", sb->s_id, function);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#152: FILE: fs/nilfs2/super.c:94:
+	printk("\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#170: FILE: fs/nilfs2/super.c:112:
+			printk(KERN_CRIT "Remounting filesystem read-only\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#186: FILE: fs/nilfs2/super.c:128:
+	printk(KERN_WARNING "NILFS warning (device %s): %s: ",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#189: FILE: fs/nilfs2/super.c:131:
+	printk("\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!nilfs_inode_cachep"
#234: FILE: fs/nilfs2/super.c:176:
+	return (nilfs_inode_cachep == NULL) ? -ENOMEM : 0;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#303: FILE: fs/nilfs2/super.c:245:
+	sbi->s_super->s_dirt = 1; /* must be set if delaying the call of
+				     nilfs_commit_super() */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#303: FILE: fs/nilfs2/super.c:245:
+				     nilfs_commit_super() */

WARNING:SPLIT_STRING: quoted string split across lines
#322: FILE: fs/nilfs2/super.c:264:
+			      "barrier-based sync failed. "
+			      "disabling barriers\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#329: FILE: fs/nilfs2/super.c:271:
+		printk(KERN_ERR

CHECK:BRACES: Unbalanced braces around else statement
#331: FILE: fs/nilfs2/super.c:273:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#349: FILE: fs/nilfs2/super.c:291:
+		printk(KERN_ERR "NILFS: failed to count free blocks\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#441: FILE: fs/nilfs2/super.c:383:
+	sbi->s_ifile = nilfs_mdt_new(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#454: FILE: fs/nilfs2/super.c:396:
+			printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#456: FILE: fs/nilfs2/super.c:398:
+			       "NILFS: Invalid checkpoint "
+			       "(checkpoint number=%llu)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#506: FILE: fs/nilfs2/super.c:448:
+			printk(KERN_INFO "NILFS: recovery complete.\n");

WARNING:TYPO_SPELLING: 'semgent' may be misspelled - perhaps 'segment'?
#536: FILE: fs/nilfs2/super.c:478:
+	 * When distributing meta data blocks outside semgent structure,
 	                                              ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#590: FILE: fs/nilfs2/super.c:532:
+		iput(inode);
 		^^^^

CHECK:CAMELCASE: Avoid CamelCase: <Opt_err_cont>
#620: FILE: fs/nilfs2/super.c:562:
+	Opt_err_cont, Opt_err_panic, Opt_err_ro,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Opt_err_panic>
#620: FILE: fs/nilfs2/super.c:562:
+	Opt_err_cont, Opt_err_panic, Opt_err_ro,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_err_ro>
#620: FILE: fs/nilfs2/super.c:562:
+	Opt_err_cont, Opt_err_panic, Opt_err_ro,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_barrier>
#621: FILE: fs/nilfs2/super.c:563:
+	Opt_barrier, Opt_snapshot, Opt_order,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_snapshot>
#621: FILE: fs/nilfs2/super.c:563:
+	Opt_barrier, Opt_snapshot, Opt_order,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_order>
#621: FILE: fs/nilfs2/super.c:563:
+	Opt_barrier, Opt_snapshot, Opt_order,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_err>
#622: FILE: fs/nilfs2/super.c:564:
+	Opt_err,

WARNING:LINE_SPACING: Missing a blank line after declarations
#660: FILE: fs/nilfs2/super.c:602:
+		int token;
+		if (!*p)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#701: FILE: fs/nilfs2/super.c:643:
+			printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#726: FILE: fs/nilfs2/super.c:668:
+		printk(KERN_WARNING "NILFS warning: mounting unchecked fs\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#728: FILE: fs/nilfs2/super.c:670:
+		printk(KERN_WARNING

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#730: FILE: fs/nilfs2/super.c:672:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#732: FILE: fs/nilfs2/super.c:674:
+		printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#759: FILE: fs/nilfs2/super.c:701:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#768: FILE: fs/nilfs2/super.c:710:
+		printk(KERN_ERR "NILFS: unable to read superblock\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#783: FILE: fs/nilfs2/super.c:725:
+		printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#785: FILE: fs/nilfs2/super.c:727:
+		       "NILFS: blocksize %d too small for device "
+		       "(sector-size = %d).\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#797: FILE: fs/nilfs2/super.c:739:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#804: FILE: fs/nilfs2/super.c:746:
+		printk(KERN_ERR

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#832: FILE: fs/nilfs2/super.c:774:
+		printk("NILFS: Can't find nilfs on dev %s.\n", sb->s_id);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#911: FILE: fs/nilfs2/super.c:853:
+				printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#913: FILE: fs/nilfs2/super.c:855:
+				       "NILFS: The specified checkpoint is "
+				       "not a snapshot "

WARNING:SPLIT_STRING: quoted string split across lines
#914: FILE: fs/nilfs2/super.c:856:
+				       "not a snapshot "
+				       "(checkpoint number=%llu).\n",

CHECK:BRACES: Unbalanced braces around else statement
#920: FILE: fs/nilfs2/super.c:862:
+		} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#927: FILE: fs/nilfs2/super.c:869:
+		printk(KERN_ERR "NILFS: error loading a checkpoint"

WARNING:SPLIT_STRING: quoted string split across lines
#928: FILE: fs/nilfs2/super.c:870:
+		printk(KERN_ERR "NILFS: error loading a checkpoint"
+		       " (checkpoint number=%llu).\n", (unsigned long long)cno);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#940: FILE: fs/nilfs2/super.c:882:
+		printk(KERN_ERR "NILFS: get root inode failed\n");

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#945: FILE: fs/nilfs2/super.c:887:
+		iput(root);
 		^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#946: FILE: fs/nilfs2/super.c:888:
+		printk(KERN_ERR "NILFS: corrupt root inode.\n");

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#952: FILE: fs/nilfs2/super.c:894:
+		iput(root);
 		^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#953: FILE: fs/nilfs2/super.c:895:
+		printk(KERN_ERR "NILFS: get root dentry failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#966: FILE: fs/nilfs2/super.c:908:
+		printk(KERN_ERR "NILFS: recovery failed.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1010: FILE: fs/nilfs2/super.c:952:
+		printk(KERN_WARNING "NILFS (device %s): couldn't "

WARNING:SPLIT_STRING: quoted string split across lines
#1011: FILE: fs/nilfs2/super.c:953:
+		printk(KERN_WARNING "NILFS (device %s): couldn't "
+		       "remount to a different snapshot. \n",

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1011: FILE: fs/nilfs2/super.c:953:
+		       "remount to a different snapshot. \n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1048: FILE: fs/nilfs2/super.c:990:
+			printk(KERN_WARNING "NILFS (device %s): couldn't "

WARNING:SPLIT_STRING: quoted string split across lines
#1049: FILE: fs/nilfs2/super.c:991:
+			printk(KERN_WARNING "NILFS (device %s): couldn't "
+			       "remount because a RW-mount exists.\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1055: FILE: fs/nilfs2/super.c:997:
+			printk(KERN_WARNING "NILFS (device %s): couldn't "

WARNING:SPLIT_STRING: quoted string split across lines
#1056: FILE: fs/nilfs2/super.c:998:
+			printk(KERN_WARNING "NILFS (device %s): couldn't "
+			       "remount because the current RO-mount is not "

WARNING:SPLIT_STRING: quoted string split across lines
#1057: FILE: fs/nilfs2/super.c:999:
+			       "remount because the current RO-mount is not "
+			       "the latest one.\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "p"
#1108: FILE: fs/nilfs2/super.c:1050:
+		if (p != NULL && *p) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1111: FILE: fs/nilfs2/super.c:1053:
+				if (!(sd->flags & MS_RDONLY))
[...]
+				else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1113: FILE: fs/nilfs2/super.c:1055:
+				else {

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#1116: FILE: fs/nilfs2/super.c:1058:
+						if (option > 0)

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#1118: FILE: fs/nilfs2/super.c:1060:
+						else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1124: FILE: fs/nilfs2/super.c:1066:
+				printk(KERN_ERR

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1129: FILE: fs/nilfs2/super.c:1071:
+		BUG_ON(options == data);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1210: FILE: fs/nilfs2/super.c:1152:
+	if (!sd.cno &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1231: FILE: fs/nilfs2/super.c:1173:
+		BUG_ON(!sbi || !sbi->s_nilfs);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1264: FILE: fs/nilfs2/super.c:1206:
+		strlcpy(s->s_id, bdevname(sd.bdev, b), sizeof(s->s_id));

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1331: FILE: fs/nilfs2/super.c:1273:
+#if 0 /* XXX: workaround for lock debug. This is not good idea */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000228152.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 57 warnings, 14 checks, 1365 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000228152.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
