WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
> > > IMO to really fix the problem, we should let the drivers that need much memory

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#77: FILE: kernel/power/notify.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#78: FILE: kernel/power/notify.c:2:
+ * linux/kernel/power/notify.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:LINE_SPACING: Missing a blank line after declarations
#102: FILE: kernel/power/notify.c:26:
+	int ret;
+	mutex_lock(&suspend_notifier_lock);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#172: FILE: include/linux/suspend.h:73:
+static inline int register_suspend_notifier(struct notifier_block *nb) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#175: FILE: include/linux/suspend.h:76:
+}
+static inline void unregister_suspend_notifier(struct notifier_block *nb) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#175: FILE: include/linux/suspend.h:76:
+static inline void unregister_suspend_notifier(struct notifier_block *nb) {

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#178: FILE: include/linux/suspend.h:79:
+#define suspend_notifier(fn, pri)	do { (void)(fn); } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#205: FILE: kernel/power/power.h:176:
+extern int suspend_notifier_call_chain(unsigned long val);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:CAMELCASE: Avoid CamelCase: <Finish>
#240: FILE: kernel/power/disk.c:133:
+		goto Finish;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Thaw>
#251: FILE: kernel/power/disk.c:147:
+		goto Thaw;

CHECK:CAMELCASE: Avoid CamelCase: <Done>
#273: FILE: kernel/power/disk.c:271:
+		goto Done;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000445135.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 5 warnings, 5 checks, 281 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000445135.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
