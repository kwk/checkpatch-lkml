WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#39: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#44: FILE: arch/arm/mach-msm/include/mach/mmc.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:CODE_INDENT: code indent should use tabs where possible
#55: FILE: arch/arm/mach-msm/include/mach/mmc.h:12:
+        struct sdio_cis cis;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#55: FILE: arch/arm/mach-msm/include/mach/mmc.h:12:
+        struct sdio_cis cis;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#56: FILE: arch/arm/mach-msm/include/mach/mmc.h:13:
+        struct sdio_cccr cccr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#56: FILE: arch/arm/mach-msm/include/mach/mmc.h:13:
+        struct sdio_cccr cccr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#57: FILE: arch/arm/mach-msm/include/mach/mmc.h:14:
+        struct sdio_embedded_func *funcs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#57: FILE: arch/arm/mach-msm/include/mach/mmc.h:14:
+        struct sdio_embedded_func *funcs;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#58: FILE: arch/arm/mach-msm/include/mach/mmc.h:15:
+        int num_funcs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#58: FILE: arch/arm/mach-msm/include/mach/mmc.h:15:
+        int num_funcs;$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#63: FILE: arch/arm/mach-msm/include/mach/mmc.h:20:
+	u32 (*translate_vdd)(struct device *, unsigned int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#63: FILE: arch/arm/mach-msm/include/mach/mmc.h:20:
+	u32 (*translate_vdd)(struct device *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#64: FILE: arch/arm/mach-msm/include/mach/mmc.h:21:
+	unsigned int (*status)(struct device *);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#66: FILE: arch/arm/mach-msm/include/mach/mmc.h:23:
+	int (*register_status_notify)(void (*callback)(int card_present, void *dev_id), void *dev_id);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000038667.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 10 warnings, 0 checks, 50 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000038667.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
