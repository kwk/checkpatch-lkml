WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3161: FILE: arch/arm/mach-at91/board-sam9-l9261.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#3162: FILE: arch/arm/mach-at91/board-sam9-l9261.c:2:
+ * linux/arch/arm/mach-at91/board-sam9-l9261.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#3179: FILE: arch/arm/mach-at91/board-sam9-l9261.c:19:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#3180: FILE: arch/arm/mach-at91/board-sam9-l9261.c:20:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3241: FILE: arch/arm/mach-at91/board-sam9-l9261.c:81:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 143 exceeds 100 columns
#3285: FILE: arch/arm/mach-at91/board-sam9-l9261.c:125:
+	at91_sys_write(AT91_SMC_SETUP(2), AT91_SMC_NWESETUP_(2) | AT91_SMC_NCS_WRSETUP_(0) | AT91_SMC_NRDSETUP_(2) | AT91_SMC_NCS_RDSETUP_(0));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 143 exceeds 100 columns
#3286: FILE: arch/arm/mach-at91/board-sam9-l9261.c:126:
+	at91_sys_write(AT91_SMC_PULSE(2), AT91_SMC_NWEPULSE_(4) | AT91_SMC_NCS_WRPULSE_(8) | AT91_SMC_NRDPULSE_(4) | AT91_SMC_NCS_RDPULSE_(8));

WARNING:LONG_LINE: line length of 167 exceeds 100 columns
#3288: FILE: arch/arm/mach-at91/board-sam9-l9261.c:128:
+	at91_sys_write(AT91_SMC_MODE(2), AT91_SMC_READMODE | AT91_SMC_WRITEMODE | AT91_SMC_EXNWMODE_DISABLE | AT91_SMC_BAT_WRITE | AT91_SMC_DBW_16 | AT91_SMC_TDF_(1));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3302: FILE: arch/arm/mach-at91/board-sam9-l9261.c:142:
+
+

WARNING:MISPLACED_INIT: __initdata should be placed after ek_usbh_data
#3306: FILE: arch/arm/mach-at91/board-sam9-l9261.c:146:
+static struct at91_usbh_data __initdata ek_usbh_data = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3310: FILE: arch/arm/mach-at91/board-sam9-l9261.c:150:
+
+

WARNING:MISPLACED_INIT: __initdata should be placed after ek_udc_data
#3314: FILE: arch/arm/mach-at91/board-sam9-l9261.c:154:
+static struct at91_udc_data __initdata ek_udc_data = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3319: FILE: arch/arm/mach-at91/board-sam9-l9261.c:159:
+
+

WARNING:MISPLACED_INIT: __initdata should be placed after ek_mmc_data
#3323: FILE: arch/arm/mach-at91/board-sam9-l9261.c:163:
+static struct at91_mmc_data __initdata ek_mmc_data = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3330: FILE: arch/arm/mach-at91/board-sam9-l9261.c:170:
+
+

WARNING:MISPLACED_INIT: __initdata should be placed after ek_nand_partition[]
#3334: FILE: arch/arm/mach-at91/board-sam9-l9261.c:174:
+static struct mtd_partition __initdata ek_nand_partition[] = {

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#3342: FILE: arch/arm/mach-at91/board-sam9-l9261.c:182:
+		.offset	= 256 * 1024 ,
 		       	             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MISPLACED_INIT: __initdata should be placed after ek_nand_data
#3353: FILE: arch/arm/mach-at91/board-sam9-l9261.c:193:
+static struct atmel_nand_data __initdata ek_nand_data = {

CHECK:SPACING: No space is necessary after a cast
#3451: FILE: arch/arm/mach-at91/board-sam9-l9261.c:291:
+		.controller_data = (void *) AT91_PIN_PA28,	/* CS pin */

WARNING:LONG_LINE_COMMENT: line length of 113 exceeds 100 columns
#3469: FILE: arch/arm/mach-at91/board-sam9-l9261.c:309:
+		.controller_data = (void *) AT91_PIN_PA29,	/* default for CS3 is PA6, but it must be PA29 */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#3469: FILE: arch/arm/mach-at91/board-sam9-l9261.c:309:
+		.controller_data = (void *) AT91_PIN_PA29,	/* default for CS3 is PA6, but it must be PA29 */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3474: FILE: arch/arm/mach-at91/board-sam9-l9261.c:314:
+
+

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#3478: FILE: arch/arm/mach-at91/board-sam9-l9261.c:318:
+#if defined(CONFIG_FB_ATMEL) || defined(CONFIG_FB_ATMEL_MODULE)

WARNING:MISPLACED_INIT: __initdata should be placed after ek_lcdc_data
#3523: FILE: arch/arm/mach-at91/board-sam9-l9261.c:363:
+static struct atmel_lcdfb_info __initdata ek_lcdc_data = {

WARNING:MISPLACED_INIT: __initdata should be placed after ek_lcdc_data
#3534: FILE: arch/arm/mach-at91/board-sam9-l9261.c:374:
+static struct atmel_lcdfb_info __initdata ek_lcdc_data;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3537: FILE: arch/arm/mach-at91/board-sam9-l9261.c:377:
+
+

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#3541: FILE: arch/arm/mach-at91/board-sam9-l9261.c:381:
+#if defined(CONFIG_KEYBOARD_GPIO) || defined(CONFIG_KEYBOARD_GPIO_MODULE)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#3636: FILE: arch/arm/mach-at91/board-sam9-l9261.c:476:
+#if defined(CONFIG_SPI_ATMEL) || defined(CONFIG_SPI_ATMEL_MODULE)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#3641: FILE: arch/arm/mach-at91/board-sam9-l9261.c:481:
+#if defined(CONFIG_SPI_ATMEL) || defined(CONFIG_SPI_ATMEL_MODULE)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3649: FILE: arch/arm/mach-at91/board-sam9-l9261.c:489:
+
+

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(ext_conn_pins)
#3660: FILE: arch/arm/mach-at91/board-sam9-l9261.c:500:
+	for(i = 0; i < (sizeof(ext_conn_pins)/sizeof(ext_conn_pins[0])); ++i) {

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3660: FILE: arch/arm/mach-at91/board-sam9-l9261.c:500:
+	for(i = 0; i < (sizeof(ext_conn_pins)/sizeof(ext_conn_pins[0])); ++i) {
 	                                     ^

ERROR:SPACING: space required before the open parenthesis '('
#3660: FILE: arch/arm/mach-at91/board-sam9-l9261.c:500:
+	for(i = 0; i < (sizeof(ext_conn_pins)/sizeof(ext_conn_pins[0])); ++i) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3662: FILE: arch/arm/mach-at91/board-sam9-l9261.c:502:
+		stat = gpio_sysfs_export(ext_conn_pins[i].pin,
+						ext_conn_pins[i].name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3665: FILE: arch/arm/mach-at91/board-sam9-l9261.c:505:
+			pr_err("GPIO-%s cannot be exported (errcode=%d)\n",
+					ext_conn_pins[i].name, stat);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3672: FILE: arch/arm/mach-at91/board-sam9-l9261.c:512:
+
+

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#3689: FILE: arch/arm/mach-at91/board-sam9-l9261.c:529:
+#if defined(CONFIG_SPI_ATMEL) || defined(CONFIG_SPI_ATMEL_MODULE)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3716: FILE: arch/arm/mach-at91/board-sam9-l9261.c:556:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3731: FILE: arch/arm/mach-at91/gpio-sysfs.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#3732: FILE: arch/arm/mach-at91/gpio-sysfs.c:2:
+ * linux/arch/arm/mach-at91/gpio-sysfs.c

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#3767: FILE: arch/arm/mach-at91/gpio-sysfs.c:37:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3773: FILE: arch/arm/mach-at91/gpio-sysfs.c:43:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3784: FILE: arch/arm/mach-at91/gpio-sysfs.c:54:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3797: FILE: arch/arm/mach-at91/gpio-sysfs.c:67:
+static ssize_t gpio_direction_show(struct device *dev,
+		struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3811: FILE: arch/arm/mach-at91/gpio-sysfs.c:81:
+static ssize_t gpio_direction_store(struct device *dev,
+		struct device_attribute *attr, const char *buf, size_t size)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3814: FILE: arch/arm/mach-at91/gpio-sysfs.c:84:
+	unsigned		gpio = desc->pin;

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'gpio_direction_show' to 'direction_show' 'gpio_direction_store' to 'direction_store'
#3834: FILE: arch/arm/mach-at91/gpio-sysfs.c:104:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3840: FILE: arch/arm/mach-at91/gpio-sysfs.c:110:
+static ssize_t gpio_value_show(struct device *dev,
+		struct device_attribute *attr, char *buf)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3843: FILE: arch/arm/mach-at91/gpio-sysfs.c:113:
+	unsigned		gpio = desc->pin;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3855: FILE: arch/arm/mach-at91/gpio-sysfs.c:125:
+static ssize_t gpio_value_store(struct device *dev,
+		struct device_attribute *attr, const char *buf, size_t size)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3858: FILE: arch/arm/mach-at91/gpio-sysfs.c:128:
+	unsigned		gpio = desc->pin;

CHECK:BRACES: braces {} should be used on all arms of this statement
#3863: FILE: arch/arm/mach-at91/gpio-sysfs.c:133:
+	if (!desc->isout)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#3865: FILE: arch/arm/mach-at91/gpio-sysfs.c:135:
+	else {

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#3868: FILE: arch/arm/mach-at91/gpio-sysfs.c:138:
+		status = strict_strtol(buf, 0, &value);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'gpio_value_show' to 'value_show' 'gpio_value_store' to 'value_store'
#3877: FILE: arch/arm/mach-at91/gpio-sysfs.c:147:
+}

CHECK:SPACING: No space is necessary after a cast
#3889: FILE: arch/arm/mach-at91/gpio-sysfs.c:159:
+	.attrs = (struct attribute **) gpio_attrs,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3892: FILE: arch/arm/mach-at91/gpio-sysfs.c:162:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3904: FILE: arch/arm/mach-at91/gpio-sysfs.c:174:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3922: FILE: arch/arm/mach-at91/gpio-sysfs.c:192:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3924: FILE: arch/arm/mach-at91/gpio-sysfs.c:194:
+	BUG_ON(!desc);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3931: FILE: arch/arm/mach-at91/gpio-sysfs.c:201:
+	dev = device_create(&gpio_class, 0, MKDEV(0, 0),
+			desc, "gpio-%s", name);

CHECK:BRACES: braces {} should be used on all arms of this statement
#3932: FILE: arch/arm/mach-at91/gpio-sysfs.c:202:
+	if (dev) {
[...]
+	} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3934: FILE: arch/arm/mach-at91/gpio-sysfs.c:204:
+		status = sysfs_create_group(&dev->kobj,
+					&gpio_attr_group);

CHECK:BRACES: Unbalanced braces around else statement
#3939: FILE: arch/arm/mach-at91/gpio-sysfs.c:209:
+	} else

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#3949: FILE: arch/arm/mach-at91/gpio-sysfs.c:219:
+
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3955: FILE: arch/arm/mach-at91/gpio-sysfs.h:1:
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3956: FILE: arch/arm/mach-at91/gpio-sysfs.h:2:
+extern int gpio_sysfs_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3958: FILE: arch/arm/mach-at91/gpio-sysfs.h:4:
+extern int gpio_sysfs_export(unsigned int gpio, const char *name);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000001066.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 30 warnings, 35 checks, 3884 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000001066.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
