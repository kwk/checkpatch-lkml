WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#42: FILE: drivers/i2c/chips/Kconfig:67:
+config PCA9543
+	tristate "Philips PCA9543 i2c bus switch"
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#61: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#66: FILE: drivers/i2c/chips/pca9543.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#84: FILE: drivers/i2c/chips/pca9543.c:19:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#85: FILE: drivers/i2c/chips/pca9543.c:20:
+ *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#95: FILE: drivers/i2c/chips/pca9543.c:30:
+	struct mutex lock;

WARNING:LINE_SPACING: Missing a blank line after declarations
#103: FILE: drivers/i2c/chips/pca9543.c:38:
+	struct i2c_msg msg;
+	mutex_lock(&data->lock);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'stat >= 0'
#110: FILE: drivers/i2c/chips/pca9543.c:45:
+	if ((stat >= 0) && (stat != 1))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'stat != 1'
#110: FILE: drivers/i2c/chips/pca9543.c:45:
+	if ((stat >= 0) && (stat != 1))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#116: FILE: drivers/i2c/chips/pca9543.c:51:
+static ssize_t pca9543_bin_read(struct kobject *kobj,
+		struct bin_attribute *attr, char *buf, loff_t off, size_t count)

WARNING:LINE_SPACING: Missing a blank line after declarations
#119: FILE: drivers/i2c/chips/pca9543.c:54:
+	struct pca9543_data *data;
+	data = dev_get_drvdata(container_of(kobj, struct device, kobj));

WARNING:LINE_SPACING: Missing a blank line after declarations
#131: FILE: drivers/i2c/chips/pca9543.c:66:
+	struct i2c_msg msg;
+	mutex_lock(&data->lock);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'stat >= 0'
#138: FILE: drivers/i2c/chips/pca9543.c:73:
+	if ((stat >= 0) && (stat != 1))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'stat != 1'
#138: FILE: drivers/i2c/chips/pca9543.c:73:
+	if ((stat >= 0) && (stat != 1))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#144: FILE: drivers/i2c/chips/pca9543.c:79:
+static ssize_t pca9543_bin_write(struct kobject *kobj,
+		struct bin_attribute *attr, char *buf, loff_t off, size_t count)

WARNING:LINE_SPACING: Missing a blank line after declarations
#147: FILE: drivers/i2c/chips/pca9543.c:82:
+	struct pca9543_data *data;
+	data = dev_get_drvdata(container_of(kobj, struct device, kobj));

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#158: FILE: drivers/i2c/chips/pca9543.c:93:
+		.mode = S_IRUGO | S_IWUSR,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#165: FILE: drivers/i2c/chips/pca9543.c:100:
+int pca9543_set_switch(struct i2c_client *client, unsigned value)

WARNING:LINE_SPACING: Missing a blank line after declarations
#170: FILE: drivers/i2c/chips/pca9543.c:105:
+	int ret;
+	data = i2c_get_clientdata(client);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#184: FILE: drivers/i2c/chips/pca9543.c:119:
+	void (*cbf)(struct i2c_client *, int(*)(struct i2c_client *, unsigned));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct i2c_client *' should also have an identifier name
#184: FILE: drivers/i2c/chips/pca9543.c:119:
+	void (*cbf)(struct i2c_client *, int(*)(struct i2c_client *, unsigned));

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:LINE_SPACING: Missing a blank line after declarations
#185: FILE: drivers/i2c/chips/pca9543.c:120:
+	void (*cbf)(struct i2c_client *, int(*)(struct i2c_client *, unsigned));
+	if (!i2c_check_functionality(client->adapter, I2C_FUNC_I2C)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#186: FILE: drivers/i2c/chips/pca9543.c:121:
+		printk(KERN_ERR "pca9543 probe failure\n");

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*data)...) over kzalloc(sizeof(struct pca9543_data)...)
#190: FILE: drivers/i2c/chips/pca9543.c:125:
+	data = kzalloc(sizeof(struct pca9543_data), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#202: FILE: drivers/i2c/chips/pca9543.c:137:
+	dev_info(&client->dev,
+		"pca9543 i2c switch @ x%02x\n", client->addr);

WARNING:LINE_SPACING: Missing a blank line after declarations
#216: FILE: drivers/i2c/chips/pca9543.c:151:
+	struct pca9543_data *data;
+	data = i2c_get_clientdata(client);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000149011.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 15 warnings, 9 checks, 204 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000149011.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
