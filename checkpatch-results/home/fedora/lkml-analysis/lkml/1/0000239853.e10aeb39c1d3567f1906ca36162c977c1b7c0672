WARNING:TYPO_SPELLING: 'inheritence' may be misspelled - perhaps 'inheritance'?
#32: 
inheritence.  However, all of the priority-inheritence logic is
^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'seperation' may be misspelled - perhaps 'separation'?
#40: 
    there is no seperation between the locking code, and the pi-code.
                ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'inteface' may be misspelled - perhaps 'interface'?
#55: 
There are currently no users of this inteface.
                                     ^^^^^^^^

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#70: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#113: FILE: Documentation/libpi.txt:39:
+                  /^I          /^I    $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#140: FILE: include/linux/pi.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#149: FILE: include/linux/pi.h:10:
+#include <asm/atomic.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#159: FILE: include/linux/pi.h:20:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#160: FILE: include/linux/pi.h:21:
+#define PI_FLAG_DEFER_UPDATE     (1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#161: FILE: include/linux/pi.h:22:
+#define PI_FLAG_ALREADY_BOOSTED  (1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#162: FILE: include/linux/pi.h:23:
+#define PI_FLAG_NO_DROPREF       (1 << 2)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#173: FILE: include/linux/pi.h:34:
+	int (*free)(struct pi_sink *snk,
+		      unsigned int flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#217: FILE: include/linux/pi.h:78:
+extern void pi_node_init(struct pi_node *node);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:TYPO_SPELLING: 'inital' may be misspelled - perhaps 'initial'?
#231: FILE: include/linux/pi.h:92:
+ * to get an inital boost notification on the next update (even
              ^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#244: FILE: include/linux/pi.h:105:
+extern int pi_add_sink(struct pi_node *node, struct pi_sink *snk,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#266: FILE: include/linux/pi.h:127:
+extern int pi_del_sink(struct pi_node *node, struct pi_sink *snk,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#386: FILE: include/linux/pi.h:247:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#438: FILE: lib/pi.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#439: FILE: lib/pi.c:2:
+ *  lib/pi.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#490: FILE: lib/pi.c:53:
+	BUG_ON(!pool->count);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#505: FILE: lib/pi.c:68:
+pi_sinkref_free(struct pi_sinkref_pool *pool,
+		  struct pi_sinkref *sinkref)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#566: FILE: lib/pi.c:129:
+	BUG_ON(src->boosted);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#578: FILE: lib/pi.c:141:
+	BUG_ON(!src->boosted);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#629: FILE: lib/pi.c:192:
+		if (sinkref->prio != node->prio
+		    || sinkref->state != pi_state_boosted) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#632: FILE: lib/pi.c:195:
+			BUG_ON(!atomic_read(&sinkref->snk->refs));

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#657: FILE: lib/pi.c:220:
+			/* Fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#849: FILE: lib/pi.c:412:
+    .boost   = _pi_node_boost,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#850: FILE: lib/pi.c:413:
+    .deboost = _pi_node_deboost,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#851: FILE: lib/pi.c:414:
+    .update  = _pi_node_update,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#852: FILE: lib/pi.c:415:
+    .free    = _pi_node_free,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#952: FILE: lib/pi.c:515:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000239853.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 18 warnings, 12 checks, 862 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000239853.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
