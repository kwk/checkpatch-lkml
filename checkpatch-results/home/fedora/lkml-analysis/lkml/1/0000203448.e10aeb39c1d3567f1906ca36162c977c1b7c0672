WARNING:TYPO_SPELLING: 'indivdually' may be misspelled - perhaps 'individually'?
#75: 
reset the bit and we thus need to set it indivdually for the low
                                         ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - u64 hpet_read_counter64() should probably be u64 hpet_read_counter64(void)
#116: FILE: arch/x86/kernel/hpet.c:80:
+static inline u64 hpet_read_counter64()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

WARNING:LINE_SPACING: Missing a blank line after declarations
#119: FILE: arch/x86/kernel/hpet.c:83:
+	u32 high, high2, low;
+	do {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#163: FILE: arch/x86/kernel/hpet.c:127:
 
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#210: FILE: arch/x86/kernel/hpet.c:340:
+			cmp = now + (unsigned long) delta;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#216: FILE: arch/x86/kernel/hpet.c:346:
+			hpet_write64((unsigned long) delta, HPET_Tn_CMP(timer));

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#218: FILE: arch/x86/kernel/hpet.c:348:
+		}
+		else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#218: FILE: arch/x86/kernel/hpet.c:348:
+		else {

CHECK:SPACING: No space is necessary after a cast
#221: FILE: arch/x86/kernel/hpet.c:351:
+			cmp = now + (unsigned long) delta;

CHECK:SPACING: No space is necessary after a cast
#232: FILE: arch/x86/kernel/hpet.c:362:
+			hpet_writel((unsigned long) delta, HPET_Tn_CMP(timer));

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#255: FILE: arch/x86/kernel/hpet.c:399:
+	if (hpet_readl(HPET_Tn_CFG(timer) & HPET_TN_64BIT_CAP))
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#259: FILE: arch/x86/kernel/hpet.c:403:
+		cnt += (u32) delta;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#262: FILE: arch/x86/kernel/hpet.c:406:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#262: FILE: arch/x86/kernel/hpet.c:406:
+	else {

CHECK:SPACING: No space is necessary after a cast
#265: FILE: arch/x86/kernel/hpet.c:409:
+		cnt += (u32) delta;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000203448.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 2 warnings, 9 checks, 183 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000203448.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
