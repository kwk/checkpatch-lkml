WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
This patch introduces header files containing constants, structure definitions

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#53: FILE: asm-generic/hw_breakpoint.h:1:
+#ifndef	_ASM_GENERIC_HW_BREAKPOINT_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#100: FILE: asm-generic/hw_breakpoint.h:48:
+ * ^I%HW_BREAKPOINT_RW (triggered on read or write access),$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#101: FILE: asm-generic/hw_breakpoint.h:49:
+ * ^I%HW_BREAKPOINT_WRITE (triggered on write access), and$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#102: FILE: asm-generic/hw_breakpoint.h:50:
+ * ^I%HW_BREAKPOINT_READ (triggered on read access).$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#127: FILE: asm-generic/hw_breakpoint.h:75:
+ * ^Iprintk(KERN_DEBUG "Inside triggered routine of breakpoint exception\n");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#128: FILE: asm-generic/hw_breakpoint.h:76:
+ * ^Idump_stack();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#129: FILE: asm-generic/hw_breakpoint.h:77:
+ *  ^I.......<more debugging output>........$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hw_breakpoint *' should also have an identifier name
#156: FILE: asm-generic/hw_breakpoint.h:104:
+	void (*triggered)(struct hw_breakpoint *, struct pt_regs *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#156: FILE: asm-generic/hw_breakpoint.h:104:
+	void (*triggered)(struct hw_breakpoint *, struct pt_regs *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#176: FILE: asm-generic/hw_breakpoint.h:124:
+extern int register_user_hw_breakpoint(struct task_struct *tsk,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#177: FILE: asm-generic/hw_breakpoint.h:125:
+extern int register_user_hw_breakpoint(struct task_struct *tsk,
+					struct hw_breakpoint *bp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#178: FILE: asm-generic/hw_breakpoint.h:126:
+extern int modify_user_hw_breakpoint(struct task_struct *tsk,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#179: FILE: asm-generic/hw_breakpoint.h:127:
+extern int modify_user_hw_breakpoint(struct task_struct *tsk,
+					struct hw_breakpoint *bp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#180: FILE: asm-generic/hw_breakpoint.h:128:
+extern void unregister_user_hw_breakpoint(struct task_struct *tsk,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#181: FILE: asm-generic/hw_breakpoint.h:129:
+extern void unregister_user_hw_breakpoint(struct task_struct *tsk,
+						struct hw_breakpoint *bp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#185: FILE: asm-generic/hw_breakpoint.h:133:
+extern int register_kernel_hw_breakpoint(struct hw_breakpoint *bp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#186: FILE: asm-generic/hw_breakpoint.h:134:
+extern void unregister_kernel_hw_breakpoint(struct hw_breakpoint *bp);

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#197: FILE: x86/include/asm/hw_breakpoint.h:1:
+#ifndef	_I386_HW_BREAKPOINT_H

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#239: FILE: x86/include/asm/hw_breakpoint.h:43:
+extern void arch_install_thread_hw_breakpoint(struct task_struct *tsk);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#240: FILE: x86/include/asm/hw_breakpoint.h:44:
+extern void arch_uninstall_thread_hw_breakpoint(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#241: FILE: x86/include/asm/hw_breakpoint.h:45:
+extern int arch_check_va_in_userspace(unsigned long va, u8 hbp_len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#242: FILE: x86/include/asm/hw_breakpoint.h:46:
+extern int arch_validate_hwbkpt_settings(struct hw_breakpoint *bp,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#243: FILE: x86/include/asm/hw_breakpoint.h:47:
+extern int arch_validate_hwbkpt_settings(struct hw_breakpoint *bp,
+						struct task_struct *tsk);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#244: FILE: x86/include/asm/hw_breakpoint.h:48:
+extern void arch_update_user_hw_breakpoint(int pos, struct task_struct *tsk);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#245: FILE: x86/include/asm/hw_breakpoint.h:49:
+extern void arch_flush_thread_hw_breakpoint(struct task_struct *tsk);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#246: FILE: x86/include/asm/hw_breakpoint.h:50:
+extern void arch_update_kernel_hw_breakpoint(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#246: FILE: x86/include/asm/hw_breakpoint.h:50:
+extern void arch_update_kernel_hw_breakpoint(void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#247: FILE: x86/include/asm/hw_breakpoint.h:51:
+extern int hw_breakpoint_exceptions_notify(struct notifier_block *unused,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#248: FILE: x86/include/asm/hw_breakpoint.h:52:
+extern int hw_breakpoint_exceptions_notify(struct notifier_block *unused,
+				     unsigned long val, void *data);

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#260: FILE: x86/include/asm/debugreg.h:21:
+#define DR_TRAP_BITS	(DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3)
                     	         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#260: FILE: x86/include/asm/debugreg.h:21:
+#define DR_TRAP_BITS	(DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3)
                     	                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#260: FILE: x86/include/asm/debugreg.h:21:
+#define DR_TRAP_BITS	(DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3)
                     	                           ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#283: FILE: x86/include/asm/debugreg.h:79:
+extern void flush_thread_hw_breakpoint(struct task_struct *tsk);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#284: FILE: x86/include/asm/debugreg.h:80:
+extern int copy_thread_hw_breakpoint(struct task_struct *tsk,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#285: FILE: x86/include/asm/debugreg.h:81:
+extern int copy_thread_hw_breakpoint(struct task_struct *tsk,
+		struct task_struct *child, unsigned long clone_flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#288: FILE: x86/include/asm/debugreg.h:84:
+extern void load_debug_registers(void);

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000124610.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 16 warnings, 25 checks, 261 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000124610.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
