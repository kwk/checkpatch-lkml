WARNING:TYPO_SPELLING: 'isnt' may be misspelled - perhaps 'isn't'?
#52: 
> This isnt trivial/possible to do though as .data/.bss is in 
       ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'wouldnt' may be misspelled - perhaps 'wouldn't'?
#53: 
> the high alias. (high .text aliases alone wouldnt be a big 
                                            ^^^^^^^

WARNING:TYPO_SPELLING: 'isnt' may be misspelled - perhaps 'isn't'?
#56: 
> Moving .data/.bss into the linear space isnt feasible as we'd 
                                          ^^^^

WARNING:TYPO_SPELLING: 'unusal' may be misspelled - perhaps 'unusual'?
#61: 
> rare and unusal thing to do, and CONFIG_DEBUG_VIRTUAL could 
           ^^^^^^

WARNING:TYPO_SPELLING: 'couldnt' may be misspelled - perhaps 'couldn't'?
#68: 
Ok, i couldnt resist and using ftrace_printk() (regular printk 
      ^^^^^^^

WARNING:TYPO_SPELLING: 'wont' may be misspelled - perhaps 'won't'?
#87: 
(32-bit is untested and likely wont even build.)
                               ^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#144: FILE: arch/x86/include/asm/page_64_types.h:70:
+extern unsigned long __phys_addr_slow(unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#144: FILE: arch/x86/include/asm/page_64_types.h:70:
+extern unsigned long __phys_addr_slow(unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#211: FILE: arch/x86/kernel/setup.c:737:
+	code_resource.end = __pa_symbol(_etext)-1;
 	                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#213: FILE: arch/x86/kernel/setup.c:739:
+	data_resource.end = __pa_symbol(_edata)-1;
 	                                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#215: FILE: arch/x86/kernel/setup.c:741:
+	bss_resource.end = __pa_symbol(&__bss_stop)-1;
 	                                           ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__phys_addr', this function's name, in a string
#268: FILE: arch/x86/mm/ioremap.c:52:
+		ftrace_printk("__phys_addr() done on symbol: %p\n", (void *)x);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#356: FILE: arch/x86/mm/pageattr.c:962:
+	if (reserve_memtype(__pa_symbol(addr), __pa_symbol(addr) + numpages * PAGE_SIZE,
 		_PAGE_CACHE_WC, NULL))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#409: FILE: arch/x86/include/asm/page.h:36:
+#define __pa(x)		((unsigned long)(x)-PAGE_OFFSET)
                		                   ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000163586.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 6 checks, 231 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000163586.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
