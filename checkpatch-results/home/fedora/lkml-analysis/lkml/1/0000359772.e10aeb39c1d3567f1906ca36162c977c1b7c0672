CHECK:CAMELCASE: Avoid CamelCase: <Elf_Shdr>
#152: FILE: scripts/mod/modpost.c:1258:
+	const Elf_Shdr *sh = &info->sechdrs[info->markers_strings_sec];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: No space is necessary after a cast
#153: FILE: scripts/mod/modpost.c:1259:
+	const char *strings = (const char *) info->hdr + sh->sh_offset;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Sym>
#154: FILE: scripts/mod/modpost.c:1260:
+	const Elf_Sym *sym, *first_sym, *last_sym;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#168: FILE: scripts/mod/modpost.c:1274:
+	first_sym = last_sym = NULL;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!first_sym"
#173: FILE: scripts/mod/modpost.c:1279:
+			if (first_sym == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!first_sym"
#189: FILE: scripts/mod/modpost.c:1295:
+	if (n % 2 != 0 || first_sym == NULL) {

WARNING:SIZEOF_PARENTHESIS: sizeof mod->markers[0] should be sizeof(mod->markers[0])
#205: FILE: scripts/mod/modpost.c:1311:
+	mod->markers = NOFAIL(malloc(sizeof mod->markers[0] * n));

WARNING:LINE_SPACING: Missing a blank line after declarations
#214: FILE: scripts/mod/modpost.c:1320:
+			const char *str = strings + sym->st_value;
+			if (name == NULL)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!name"
#214: FILE: scripts/mod/modpost.c:1320:
+			if (name == NULL)

CHECK:BRACES: Unbalanced braces around else statement
#216: FILE: scripts/mod/modpost.c:1322:
+			else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#218: FILE: scripts/mod/modpost.c:1324:
+				char *line = NULL;
+				asprintf(&line, "%s\t%s\t%s\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#246: FILE: scripts/mod/modpost.c:1738:
+	char *line = NULL;
+	asprintf(&line, "%s\t%s\t%s\n", name, mod->name, fmt);

WARNING:SIZEOF_PARENTHESIS: sizeof mod->markers[0] should be sizeof(mod->markers[0])
#250: FILE: scripts/mod/modpost.c:1742:
+						     sizeof mod->markers[0])));

ERROR:CODE_INDENT: code indent should use tabs where possible
#260: FILE: scripts/mod/modpost.c:1752:
+        if (!file)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: scripts/mod/modpost.c:1752:
+        if (!file)$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#269: FILE: scripts/mod/modpost.c:1761:
+		if (!(modname = strchr(marker, '\t')))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#272: FILE: scripts/mod/modpost.c:1764:
+		if (!(fmt = strchr(modname, '\t')))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#278: FILE: scripts/mod/modpost.c:1770:
+		if (!(mod = find_module(modname))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#279: FILE: scripts/mod/modpost.c:1771:
+			if (is_vmlinux(modname)) {
+				have_vmlinux = 1;
+			}

CHECK:SPACING: No space is necessary after a cast
#295: FILE: scripts/mod/modpost.c:1787:
+	return strcmp(*(const char **) a, *(const char **) b);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "mod->markers"
#305: FILE: scripts/mod/modpost.c:1797:
+		if ((!external_module || !mod->skip) && mod->markers != NULL) {

WARNING:SIZEOF_PARENTHESIS: sizeof mod->markers[0] should be sizeof(mod->markers[0])
#311: FILE: scripts/mod/modpost.c:1803:
+			      sizeof mod->markers[0], &compare_strings);

WARNING:LINE_SPACING: Missing a blank line after declarations
#314: FILE: scripts/mod/modpost.c:1806:
+				char *line = mod->markers[i];
+				buf_write(&buf, line, strlen(line));

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Section>
#387: FILE: scripts/mod/modpost.h:129:
+	Elf_Section  markers_strings_sec;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000359772.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 9 warnings, 11 checks, 284 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000359772.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
