WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#47: FILE: fs/namei.c:1761:
+		if (IS_ERR(filp))
 		           ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#48: FILE: fs/namei.c:1762:
+			ima_counts_put(&nd.path,
 			                ^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#58: FILE: fs/namei.c:1819:
+	if (IS_ERR(filp))
 	           ^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#59: FILE: fs/namei.c:1820:
+		ima_counts_put(&nd.path,
 		                ^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#72: FILE: include/linux/ima.h:27:
+extern void ima_counts_put(struct path *path, int mask);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:RETURN_VOID: void function return statements are not generally useful
#84: FILE: include/linux/ima.h:68:
+	return;
+}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mask == 0'
#115: FILE: security/integrity/ima/ima_main.c:260:
+	if ((mask & MAY_WRITE) || (mask == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000104099.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 2 checks, 71 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000104099.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
