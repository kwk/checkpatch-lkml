CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#148: FILE: include/linux/syscalls.h:538:
+asmlinkage long sys_fincore(unsigned int fd, unsigned char __user *vec,
+				loff_t start, loff_t len);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#153: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#158: FILE: fs/fincore.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#159: FILE: fs/fincore.c:2:
+ *	fs/fincore.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:LINE_SPACING: Missing a blank line after declarations
#178: FILE: fs/fincore.c:21:
+	struct page *page = find_get_page(mapping, pgoff);
+	if (page) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#219: FILE: fs/fincore.c:62:
+	struct file *filp;
 	             ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#225: FILE: fs/fincore.c:68:
+	unsigned kernel_vec_count;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#232: FILE: fs/fincore.c:75:
+	filp = fget_light(fd, &fput_needed);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#233: FILE: fs/fincore.c:76:
+	if (!filp)
 	     ^^^^

CHECK:SPACING: No space is necessary after a cast
#249: FILE: fs/fincore.c:92:
+		kernel_vec = (void *) __get_free_page(GFP_USER);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#280: FILE: fs/fincore.c:123:
+		free_page((unsigned long) kernel_vec);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#281: FILE: fs/fincore.c:124:
+	fput_light(filp, fput_needed);
 	           ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#519: FILE: fs/fincore.c:19:
+                          unsigned vec_count, unsigned char *vec)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#519: FILE: fs/fincore.c:19:
+                          unsigned vec_count, unsigned char *vec)$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#519: FILE: fs/fincore.c:19:
+                          unsigned vec_count, unsigned char *vec)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#528: FILE: fs/fincore.c:22:
+	unsigned vec_i = 0;

CHECK:SPACING: No space is necessary after a cast
#533: FILE: fs/fincore.c:27:
+		unsigned pvec_max = min(vec_count - vec_i, (unsigned) PAGEVEC_SIZE);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#533: FILE: fs/fincore.c:27:
+		unsigned pvec_max = min(vec_count - vec_i, (unsigned) PAGEVEC_SIZE);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#533: FILE: fs/fincore.c:27:
+		unsigned pvec_max = min(vec_count - vec_i, (unsigned) PAGEVEC_SIZE);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#534: FILE: fs/fincore.c:28:
+		unsigned pvec_i = 0;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#541: FILE: fs/fincore.c:34:
+			if (pvec_i >= pagevec_count(&pvec) ||
+				pvec.pages[pvec_i]->index != pgoff)

CHECK:SPACING: No space is necessary after a cast
#573: FILE: fs/fincore.c:120:
+		unsigned len = min((uint64_t) (pgend - pgoff),

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#573: FILE: fs/fincore.c:120:
+		unsigned len = min((uint64_t) (pgend - pgoff),

CHECK:SPACING: No space is necessary after a cast
#574: FILE: fs/fincore.c:121:
+			(uint64_t) kernel_vec_count);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000011067.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 16 warnings, 7 checks, 259 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000011067.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
