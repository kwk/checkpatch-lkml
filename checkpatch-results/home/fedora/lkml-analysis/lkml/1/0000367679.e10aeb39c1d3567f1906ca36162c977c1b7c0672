WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
This patch adds a new readdir() inode operation. The purpose of this patch is

CHECK:BRACES: braces {} should be used on all arms of this statement
#76: FILE: fs/readdir.c:38:
+		if (inode->i_op->readdir) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#77: FILE: fs/readdir.c:39:
+			printk(KERN_DEBUG "i_op->readdir @ ");

CHECK:BRACES: Unbalanced braces around else statement
#83: FILE: fs/readdir.c:45:
+		} else

WARNING:SPACING: Unnecessary space before function pointer arguments
#97: FILE: include/linux/fs.h:1218:
+	int (*readdir) (struct dentry *, loff_t *, void *, filldir_t, void *);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#97: FILE: include/linux/fs.h:1218:
+	int (*readdir) (struct dentry *, loff_t *, void *, filldir_t, void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#97: FILE: include/linux/fs.h:1218:
+	int (*readdir) (struct dentry *, loff_t *, void *, filldir_t, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#97: FILE: include/linux/fs.h:1218:
+	int (*readdir) (struct dentry *, loff_t *, void *, filldir_t, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'filldir_t' should also have an identifier name
#97: FILE: include/linux/fs.h:1218:
+	int (*readdir) (struct dentry *, loff_t *, void *, filldir_t, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#97: FILE: include/linux/fs.h:1218:
+	int (*readdir) (struct dentry *, loff_t *, void *, filldir_t, void *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000367679.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 2 checks, 40 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000367679.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
