WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#54: FILE: arch/x86/ia32/ptrace32.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#63: FILE: arch/x86/ia32/ptrace32.c:6:
see the extended

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: arch/x86/ia32/ptrace32.c:48:
+               if (val && (val & 3) != 3)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: arch/x86/ia32/ptrace32.c:48:
+               if (val && (val & 3) != 3)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#79: FILE: arch/x86/ia32/ptrace32.c:48:
+               if (val && (val & 3) != 3)
+                       return -EIO;

ERROR:CODE_INDENT: code indent should use tabs where possible
#80: FILE: arch/x86/ia32/ptrace32.c:49:
+                       return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: arch/x86/ia32/ptrace32.c:49:
+                       return -EIO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: arch/x86/ia32/ptrace32.c:53:
+               if (val && (val & 3) != 3)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: arch/x86/ia32/ptrace32.c:53:
+               if (val && (val & 3) != 3)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#85: FILE: arch/x86/ia32/ptrace32.c:53:
+               if (val && (val & 3) != 3)
+                       return -EIO;

ERROR:CODE_INDENT: code indent should use tabs where possible
#86: FILE: arch/x86/ia32/ptrace32.c:54:
+                       return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: arch/x86/ia32/ptrace32.c:54:
+                       return -EIO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#91: FILE: arch/x86/ia32/ptrace32.c:58:
+               if (val && (val & 3) != 3)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: arch/x86/ia32/ptrace32.c:58:
+               if (val && (val & 3) != 3)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#91: FILE: arch/x86/ia32/ptrace32.c:58:
+               if (val && (val & 3) != 3)
+                       return -EIO;

ERROR:CODE_INDENT: code indent should use tabs where possible
#92: FILE: arch/x86/ia32/ptrace32.c:59:
+                       return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: arch/x86/ia32/ptrace32.c:59:
+                       return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: arch/x86/ia32/ptrace32.c:65:
+       case offsetof(struct user32, regs.ss):$

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: arch/x86/ia32/ptrace32.c:66:
+               if ((val & 3) != 3)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: arch/x86/ia32/ptrace32.c:66:
+               if ((val & 3) != 3)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#102: FILE: arch/x86/ia32/ptrace32.c:66:
+               if ((val & 3) != 3)
+                       return -EIO;

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: arch/x86/ia32/ptrace32.c:67:
+                       return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: arch/x86/ia32/ptrace32.c:67:
+                       return -EIO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: arch/x86/ia32/ptrace32.c:68:
+               stack[offsetof(struct pt_regs, ss)/8] = val & 0xffff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: arch/x86/ia32/ptrace32.c:68:
+               stack[offsetof(struct pt_regs, ss)/8] = val & 0xffff;$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#104: FILE: arch/x86/ia32/ptrace32.c:68:
+               stack[offsetof(struct pt_regs, ss)/8] = val & 0xffff;
                                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: arch/x86/ia32/ptrace32.c:70:
+       case offsetof(struct user32, regs.cs):$

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: arch/x86/ia32/ptrace32.c:71:
+               if ((val & 3) != 3)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: arch/x86/ia32/ptrace32.c:71:
+               if ((val & 3) != 3)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#109: FILE: arch/x86/ia32/ptrace32.c:71:
+               if ((val & 3) != 3)
+                       return -EIO;

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: arch/x86/ia32/ptrace32.c:72:
+                       return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: arch/x86/ia32/ptrace32.c:72:
+                       return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: arch/x86/ia32/ptrace32.c:76:
+       R32(ebx, rbx);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: arch/x86/ia32/ptrace32.c:94:
+       case offsetof(struct user32, u_debugreg[4]):$

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: arch/x86/ia32/ptrace32.c:116:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: arch/x86/ia32/ptrace32.c:116:
+               break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: arch/x86/ia32/ptrace32.c:122:
+               for (i = 0; i < 4; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: arch/x86/ia32/ptrace32.c:122:
+               for (i = 0; i < 4; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#142: FILE: arch/x86/ia32/ptrace32.c:122:
+               for (i = 0; i < 4; i++)
                        if ((0x5454 >> ((val >> (16 + 4*i)) & 0xf)) & 1)

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: arch/x86/ia32/ptrace32.c:125:
+               child->thread.debugreg7 = val;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: arch/x86/ia32/ptrace32.c:125:
+               child->thread.debugreg7 = val;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: arch/x86/ia32/ptrace32.c:130:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: arch/x86/ia32/ptrace32.c:130:
+               break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: arch/x86/ia32/ptrace32.c:136:
+               /* Other dummy fields in the virtual user structure$

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: arch/x86/ia32/ptrace32.c:137:
+               break;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#165: FILE: arch/x86/ia32/ptrace32.c:137:
+               /* Other dummy fields in the virtual user structure
+               break;

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: arch/x86/ia32/ptrace32.c:153:
+               *val = child->thread.fsindex;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: arch/x86/ia32/ptrace32.c:153:
+               *val = child->thread.fsindex;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: arch/x86/ia32/ptrace32.c:167:
+       R32(ebx, rbx);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: arch/x86/ia32/ptrace32.c:180:
+               *val = child->thread.debugreg0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: arch/x86/ia32/ptrace32.c:181:
+               break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: arch/x86/ia32/ptrace32.c:183:
+               *val = child->thread.debugreg1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: arch/x86/ia32/ptrace32.c:184:
+               break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: arch/x86/ia32/ptrace32.c:186:
+               *val = child->thread.debugreg2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: arch/x86/ia32/ptrace32.c:187:
+               break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: arch/x86/ia32/ptrace32.c:189:
+               *val = child->thread.debugreg3;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#224: FILE: arch/x86/ia32/ptrace32.c:190:
+               break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: arch/x86/ia32/ptrace32.c:192:
+               *val = child->thread.debugreg6;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: arch/x86/ia32/ptrace32.c:193:
+               break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: arch/x86/ia32/ptrace32.c:195:
+               *val = child->thread.debugreg7;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: arch/x86/ia32/ptrace32.c:196:
+               break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: arch/x86/ia32/ptrace32.c:202:
+               /* Other dummy fields in the virtual user structure$

ERROR:CODE_INDENT: code indent should use tabs where possible
#242: FILE: arch/x86/ia32/ptrace32.c:204:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: arch/x86/ia32/ptrace32.c:215:
+       siginfo_t ssi;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: arch/x86/ia32/ptrace32.c:239:
+       struct pt_regs *childregs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: arch/x86/ia32/ptrace32.c:244:
+       switch (request) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: arch/x86/ia32/ptrace32.c:256:
+               return sys_ptrace(request, pid, addr, data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: arch/x86/ia32/ptrace32.c:256:
+               return sys_ptrace(request, pid, addr, data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: arch/x86/ia32/ptrace32.c:265:
+       case PTRACE_POKEUSR:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#299: FILE: arch/x86/ia32/ptrace32.c:295:
+               if (access_process_vm(child, addr, &val, sizeof(u32),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: arch/x86/ia32/ptrace32.c:295:
+               if (access_process_vm(child, addr, &val, sizeof(u32),$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#299: FILE: arch/x86/ia32/ptrace32.c:295:
+               if (access_process_vm(child, addr, &val, sizeof(u32),
[...]
                        ret = -EIO;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#301: FILE: arch/x86/ia32/ptrace32.c:296:
+               if (access_process_vm(child, addr, &val, sizeof(u32),
                        ret = -EIO;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#302: FILE: arch/x86/ia32/ptrace32.c:297:
                else
+                       ret = put_user(val, (unsigned int __user *)datap);

ERROR:CODE_INDENT: code indent should use tabs where possible
#305: FILE: arch/x86/ia32/ptrace32.c:298:
+                       ret = put_user(val, (unsigned int __user *)datap);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: arch/x86/ia32/ptrace32.c:298:
+                       ret = put_user(val, (unsigned int __user *)datap);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#306: FILE: arch/x86/ia32/ptrace32.c:299:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: arch/x86/ia32/ptrace32.c:299:
+               break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#314: FILE: arch/x86/ia32/ptrace32.c:304:
+               if (access_process_vm(child, addr, &data, sizeof(u32),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: arch/x86/ia32/ptrace32.c:304:
+               if (access_process_vm(child, addr, &data, sizeof(u32),$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#314: FILE: arch/x86/ia32/ptrace32.c:304:
+               if (access_process_vm(child, addr, &data, sizeof(u32),
[...]
+                       ret = -EIO;

ERROR:CODE_INDENT: code indent should use tabs where possible
#316: FILE: arch/x86/ia32/ptrace32.c:305:
+                       ret = -EIO;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#316: FILE: arch/x86/ia32/ptrace32.c:305:
+               if (access_process_vm(child, addr, &data, sizeof(u32),
+                       ret = -EIO;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: arch/x86/ia32/ptrace32.c:305:
+                       ret = -EIO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#326: FILE: arch/x86/ia32/ptrace32.c:320:
+               if (!access_ok(VERIFY_WRITE, datap, 16*4)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: arch/x86/ia32/ptrace32.c:320:
+               if (!access_ok(VERIFY_WRITE, datap, 16*4)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#326: FILE: arch/x86/ia32/ptrace32.c:320:
+               if (!access_ok(VERIFY_WRITE, datap, 16*4)) {
                        ret = -EIO;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#326: FILE: arch/x86/ia32/ptrace32.c:320:
+               if (!access_ok(VERIFY_WRITE, datap, 16*4)) {
                                                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#332: FILE: arch/x86/ia32/ptrace32.c:325:
+               for (i = 0; i <= 16*4 ; i += sizeof(__u32)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: arch/x86/ia32/ptrace32.c:325:
+               for (i = 0; i <= 16*4 ; i += sizeof(__u32)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#332: FILE: arch/x86/ia32/ptrace32.c:325:
+               for (i = 0; i <= 16*4 ; i += sizeof(__u32)) {
                        getreg32(child, i, &val);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#332: FILE: arch/x86/ia32/ptrace32.c:325:
+               for (i = 0; i <= 16*4 ; i += sizeof(__u32)) {
                                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#335: FILE: arch/x86/ia32/ptrace32.c:327:
+                       ret |= __put_user(val, (u32 __user *)datap);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: arch/x86/ia32/ptrace32.c:327:
+                       ret |= __put_user(val, (u32 __user *)datap);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#345: FILE: arch/x86/ia32/ptrace32.c:336:
+               if (!access_ok(VERIFY_READ, datap, 16*4)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: arch/x86/ia32/ptrace32.c:336:
+               if (!access_ok(VERIFY_READ, datap, 16*4)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#345: FILE: arch/x86/ia32/ptrace32.c:336:
+               if (!access_ok(VERIFY_READ, datap, 16*4)) {
                        ret = -EIO;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#345: FILE: arch/x86/ia32/ptrace32.c:336:
+               if (!access_ok(VERIFY_READ, datap, 16*4)) {
                                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#351: FILE: arch/x86/ia32/ptrace32.c:340:
+               ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: arch/x86/ia32/ptrace32.c:340:
+               ret = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#352: FILE: arch/x86/ia32/ptrace32.c:341:
+               for (i = 0; i <= 16*4; i += sizeof(u32)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: arch/x86/ia32/ptrace32.c:341:
+               for (i = 0; i <= 16*4; i += sizeof(u32)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#352: FILE: arch/x86/ia32/ptrace32.c:341:
+               for (i = 0; i <= 16*4; i += sizeof(u32)) {
                        ret |= __get_user(tmp, (u32 __user *)datap);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#352: FILE: arch/x86/ia32/ptrace32.c:341:
+               for (i = 0; i <= 16*4; i += sizeof(u32)) {
                                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#363: FILE: arch/x86/ia32/ptrace32.c:350:
+               ret = -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: arch/x86/ia32/ptrace32.c:350:
+               ret = -EIO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#364: FILE: arch/x86/ia32/ptrace32.c:351:
+               if (!access_ok(VERIFY_READ, compat_ptr(data),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: arch/x86/ia32/ptrace32.c:351:
+               if (!access_ok(VERIFY_READ, compat_ptr(data),$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#364: FILE: arch/x86/ia32/ptrace32.c:351:
+               if (!access_ok(VERIFY_READ, compat_ptr(data),
[...]
                        break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#369: FILE: arch/x86/ia32/ptrace32.c:355:
+               ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: arch/x86/ia32/ptrace32.c:355:
+               ret = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#375: FILE: arch/x86/ia32/ptrace32.c:360:
+               if (!access_ok(VERIFY_WRITE, datap,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: arch/x86/ia32/ptrace32.c:360:
+               if (!access_ok(VERIFY_WRITE, datap,$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#375: FILE: arch/x86/ia32/ptrace32.c:360:
+               if (!access_ok(VERIFY_WRITE, datap,
[...]
                        break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: arch/x86/ia32/ptrace32.c:368:
+       case PTRACE_GETFPXREGS: {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#388: FILE: arch/x86/ia32/ptrace32.c:370:
+               init_fpu(child);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: arch/x86/ia32/ptrace32.c:370:
+               init_fpu(child);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#401: FILE: arch/x86/ia32/ptrace32.c:378:
+               ret |= __put_user(child->thread.ds, &u->fos);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: arch/x86/ia32/ptrace32.c:378:
+               ret |= __put_user(child->thread.ds, &u->fos);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#402: FILE: arch/x86/ia32/ptrace32.c:379:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: arch/x86/ia32/ptrace32.c:379:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: arch/x86/ia32/ptrace32.c:380:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: arch/x86/ia32/ptrace32.c:381:
+       case PTRACE_SETFPXREGS: {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#414: FILE: arch/x86/ia32/ptrace32.c:393:
+               ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: arch/x86/ia32/ptrace32.c:393:
+               ret = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#421: FILE: arch/x86/ia32/ptrace32.c:398:
+               ret = put_user(child->ptrace_message, (unsigned int$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: arch/x86/ia32/ptrace32.c:398:
+               ret = put_user(child->ptrace_message, (unsigned int$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000339965.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 54 errors, 66 warnings, 7 checks, 356 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000339965.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
