WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#23: 
- remove recently-noop'd 'reverse_scan' module parm
                                               ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#136: FILE: drivers/scsi/gdth.c:1353:
         if (ha->cmd_tab[i].cmnd == UNUSED_CMND) {
+	    ha->cmd_tab[i].cmnd = ha->cmdext.RequestBuffer;

CHECK:CAMELCASE: Avoid CamelCase: <RequestBuffer>
#141: FILE: drivers/scsi/gdth.c:1354:
+	    ha->cmd_tab[i].cmnd = ha->cmdext.RequestBuffer;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Service>
#142: FILE: drivers/scsi/gdth.c:1355:
+	    ha->cmd_tab[i].service = ha->cmdext.Service;

CHECK:CAMELCASE: Avoid CamelCase: <CommandIndex>
#143: FILE: drivers/scsi/gdth.c:1356:
+	    ha->cmdext.CommandIndex = (ulong32) i + 2;

WARNING:TABSTOP: Statements should start on a tabstop
#145: FILE: drivers/scsi/gdth.c:1358:
+	    return (i + 2);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: drivers/scsi/gdth.c:1397:
+    cmd_ptr  = &ha->cmdext;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: drivers/scsi/gdth.c:1460:
+    if (ha->cmdext.OpCode == GDT_INIT)$

CHECK:CAMELCASE: Avoid CamelCase: <OpCode>
#164: FILE: drivers/scsi/gdth.c:1460:
+    if (ha->cmdext.OpCode == GDT_INIT)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#171: FILE: drivers/scsi/gdth.c:1464:
+	if (ha->cmdext.OpCode == GDT_INIT)               /* store DMA buffer */
+	    outl(ha->ccb_phys, ha->bmic + MAILBOXREG);

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: drivers/scsi/gdth.c:1466:
+        outb(ha->cmdext.Service, ha->bmic + LDOORREG);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: drivers/scsi/gdth.c:1466:
+        outb(ha->cmdext.Service, ha->bmic + LDOORREG);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: drivers/scsi/gdth.c:1512:
+    cmd_ptr = &ha->cmdext;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: drivers/scsi/gdth.c:2475:
+    cmdp = &ha->cmdext;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: drivers/scsi/gdth.c:2655:
+    cmdp = &ha->cmdext;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: drivers/scsi/gdth.c:2820:
+    cmdp = &ha->cmdext;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: drivers/scsi/gdth.c:3274:
+    cmdp = &ha->cmdext;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: drivers/scsi/gdth.c:3636:
+    cmdp = &ha->cmdext;$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ha->type == GDT_EISA'
#261: FILE: drivers/scsi/gdth.c:4715:
+	if ((ha->type == GDT_EISA) && (ha->ccb_phys))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ha->ccb_phys'
#261: FILE: drivers/scsi/gdth.c:4715:
+	if ((ha->type == GDT_EISA) && (ha->ccb_phys))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: drivers/scsi/gdth.c:4729:
+	ha->pscratch = pci_alloc_consistent(ha->pdev, GDTH_SCRATCH,
+						&scratch_dma_handle);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#281: FILE: drivers/scsi/gdth.c:4735:
+	ha->pmsg = pci_alloc_consistent(ha->pdev, sizeof(gdth_msg_str),
+						&scratch_dma_handle);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#288: FILE: drivers/scsi/gdth.c:4742:
+	ha->coal_stat = pci_alloc_consistent(ha->pdev,
+				sizeof(gdth_coal_status) * MAXOFFSETS,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#298: FILE: drivers/scsi/gdth.c:4752:
+		ha->ccb_phys = pci_map_single(ha->pdev, &ha->cmdext,
+				sizeof(gdth_cmd_str), PCI_DMA_BIDIRECTIONAL);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000316157.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 13 warnings, 10 checks, 548 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000316157.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
