WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
> > I understand your concern and I am not trying to reduce memcg's performance - or

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#196: FILE: mm/memcontrol.c:262:
+static int page_assign_page_cgroup(struct page *page, struct page_cgroup *pc,
+					gfp_t gfp_mask)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#211: FILE: mm/memcontrol.c:272:
+			printk(KERN_WARNING "could not preload radix tree "

WARNING:SPLIT_STRING: quoted string split across lines
#212: FILE: mm/memcontrol.c:273:
+			printk(KERN_WARNING "could not preload radix tree "
+				"in %s\n", __func__);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:BRACES: braces {} should be used on all arms of this statement
#223: FILE: mm/memcontrol.c:284:
+	if (pc) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#226: FILE: mm/memcontrol.c:287:
+			printk(KERN_WARNING "Inserting into radix tree failed "

WARNING:SPLIT_STRING: quoted string split across lines
#227: FILE: mm/memcontrol.c:288:
+			printk(KERN_WARNING "Inserting into radix tree failed "
+				"in %s\n", __func__);

CHECK:BRACES: Unbalanced braces around else statement
#228: FILE: mm/memcontrol.c:289:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#240: FILE: mm/memcontrol.c:300:
+struct page_cgroup *__page_get_page_cgroup(struct page *page, bool lock,
+						bool trylock)

WARNING:LINE_SPACING: Missing a blank line after declarations
#416: FILE: mm/memcontrol.c:768:
+	int ret;
+	ret = page_assign_page_cgroup(page, NULL, GFP_KERNEL);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#455: FILE: include/linux/memcontrol.h:30:
+extern void page_reset_bad_cgroup(struct page *page);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#456: FILE: include/linux/memcontrol.h:31:
+extern struct page_cgroup *__page_get_page_cgroup(struct page *page, bool lock,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#457: FILE: include/linux/memcontrol.h:32:
+extern struct page_cgroup *__page_get_page_cgroup(struct page *page, bool lock,
+							bool trylock);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000230362.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 7 checks, 366 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000230362.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
