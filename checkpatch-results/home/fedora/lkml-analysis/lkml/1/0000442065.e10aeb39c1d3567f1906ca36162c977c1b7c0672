WARNING:TYPO_SPELLING: 'principly' may be misspelled - perhaps 'principally'?
#48: 
highmem (highpte), principly by implementing xen_kmap_atomic_pte.
                   ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#75: FILE: arch/i386/kernel/setup.c:610:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#141: FILE: arch/i386/xen/enlighten.c:460:
+/* Early in boot, while setting up the initial pagetable, assume
+   everything is pinned. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#141: FILE: arch/i386/xen/enlighten.c:460:
+   everything is pinned. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#144: FILE: arch/i386/xen/enlighten.c:463:
+	BUG_ON(mem_map);	/* should only be used early */

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#159: FILE: arch/i386/xen/enlighten.c:468:
+/* This needs to make sure the new pte page is pinned iff its being
+   attached to a pinned pagetable. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#159: FILE: arch/i386/xen/enlighten.c:468:
+   attached to a pinned pagetable. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#171: FILE: arch/i386/xen/enlighten.c:480:
+			/* make sure there are no stray mappings of
+			   this page */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#171: FILE: arch/i386/xen/enlighten.c:480:
+			   this page */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#204: FILE: arch/i386/xen/enlighten.c:505:
+		printk("mapping highpte %lx type %d prot %s\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#228: FILE: arch/i386/xen/enlighten.c:561:
+	/* This will work as long as patching hasn't happened yet
+	   (which it hasn't) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#228: FILE: arch/i386/xen/enlighten.c:561:
+	   (which it hasn't) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#240: FILE: arch/i386/xen/enlighten.c:582:
+	/* Actually pin the pagetable down, but we can't set PG_pinned
+	   yet because the page structures don't exist yet. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#240: FILE: arch/i386/xen/enlighten.c:582:
+	   yet because the page structures don't exist yet. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#250: FILE: arch/i386/xen/enlighten.c:592:
+			BUG();

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#287: FILE: arch/i386/xen/mmu.c:1:
+#include <linux/highmem.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#355: FILE: arch/i386/xen/mmu.c:120:
+		BUG();

WARNING:MEMORY_BARRIER: memory barrier without comment
#361: FILE: arch/i386/xen/mmu.c:126:
+	smp_wmb();

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#429: FILE: arch/i386/xen/mmu.c:241:
+/*
+  (Yet another) pagetable walker.  This one is intended for pinning a

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#438: FILE: arch/i386/xen/mmu.c:250:
+static int pgd_walk(pgd_t *pgd_base, int (*func)(struct page *, unsigned),

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#450: FILE: arch/i386/xen/mmu.c:258:
+	BUG_ON(limit > FIXADDR_TOP);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#463: FILE: arch/i386/xen/mmu.c:267:
+		pgd_next = pud_limit = pgd_addr_end(addr, FIXADDR_TOP);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#500: FILE: arch/i386/xen/mmu.c:298:
+				if ((pmd_limit-1) < (addr-1)) {
 				              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#500: FILE: arch/i386/xen/mmu.c:298:
+				if ((pmd_limit-1) < (addr-1)) {
 				                         ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#537: FILE: arch/i386/xen/mmu.c:316:
+static int pin_page(struct page *page, unsigned flags)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#539: FILE: arch/i386/xen/mmu.c:318:
+	unsigned pgfl = test_and_set_bit(PG_pinned, &page->flags);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#546: FILE: arch/i386/xen/mmu.c:325:
+		/* kmaps need flushing if we found an unpinned
+		   highpage */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#546: FILE: arch/i386/xen/mmu.c:325:
+		   highpage */

CHECK:BRACES: Unbalanced braces around else statement
#548: FILE: arch/i386/xen/mmu.c:327:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#564: FILE: arch/i386/xen/mmu.c:343:
+/* This is called just after a mm has been created, but it has not
+   been used yet.  We need to make sure that its pagetable is all

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#565: FILE: arch/i386/xen/mmu.c:344:
+   read-only, and can be pinned. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#599: FILE: arch/i386/xen/mmu.c:368:
+/* The init_mm pagetable is really pinned as soon as its created, but
+   that's before we have page structures to store the bits.  So do all

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#600: FILE: arch/i386/xen/mmu.c:369:
+   the book-keeping now. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#601: FILE: arch/i386/xen/mmu.c:370:
+static __init int mark_pinned(struct page *page, unsigned flags)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#612: FILE: arch/i386/xen/mmu.c:381:
+static int unpin_page(struct page *page, unsigned flags)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#614: FILE: arch/i386/xen/mmu.c:383:
+	unsigned pgfl = test_and_clear_bit(PG_pinned, &page->flags);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#738: FILE: include/asm-i386/paravirt.h:749:
+static inline void paravirt_alloc_pt(struct mm_struct *mm, unsigned pfn)

ERROR:SPACING: space required before the open parenthesis '('
#780: FILE: include/asm-i386/setup.h:83:
+#define paravirt_post_allocator_init()	do {} while(0)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000442065.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 32 warnings, 5 checks, 674 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000442065.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
