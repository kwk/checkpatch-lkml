WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#116: FILE: arch/arm/mach-pxa/mfp-pxa2xx.c:171:
+printk(KERN_INFO "gpio_set_wake() GPIO: %d, on: %d\n", gpio, on);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'gpio_set_wake', this function's name, in a string
#116: FILE: arch/arm/mach-pxa/mfp-pxa2xx.c:171:
+printk(KERN_INFO "gpio_set_wake() GPIO: %d, on: %d\n", gpio, on);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#118: FILE: arch/arm/mach-pxa/mfp-pxa2xx.c:173:
 	if (gpio > mfp_to_gpio(MFP_PIN_GPIO127))
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 0)
#118: FILE: arch/arm/mach-pxa/mfp-pxa2xx.c:173:
 	if (gpio > mfp_to_gpio(MFP_PIN_GPIO127))
+{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#120: FILE: arch/arm/mach-pxa/mfp-pxa2xx.c:175:
+printk(KERN_INFO "gpio_set_wake() returning EINVAL\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'gpio_set_wake', this function's name, in a string
#120: FILE: arch/arm/mach-pxa/mfp-pxa2xx.c:175:
+printk(KERN_INFO "gpio_set_wake() returning EINVAL\n");

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#127: FILE: arch/arm/mach-pxa/mfp-pxa2xx.c:182:
 	if (!d->valid)
+{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 0)
#127: FILE: arch/arm/mach-pxa/mfp-pxa2xx.c:182:
 	if (!d->valid)
+{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#129: FILE: arch/arm/mach-pxa/mfp-pxa2xx.c:184:
+printk(KERN_INFO "gpio_set_wake() returning EINVAL (not valid)\n");

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#133: FILE: arch/arm/mach-pxa/mfp-pxa2xx.c:188:
 	if (d->keypad_gpio)
+{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 0)
#133: FILE: arch/arm/mach-pxa/mfp-pxa2xx.c:188:
 	if (d->keypad_gpio)
+{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#135: FILE: arch/arm/mach-pxa/mfp-pxa2xx.c:190:
+printk(KERN_INFO "gpio_set_wake() returning EINVAL (keypad_gpio)\n");

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#140: FILE: arch/arm/mach-pxa/mfp-pxa2xx.c:195:
 	if (on && mux_taken)
+{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 0)
#140: FILE: arch/arm/mach-pxa/mfp-pxa2xx.c:195:
 	if (on && mux_taken)
+{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#142: FILE: arch/arm/mach-pxa/mfp-pxa2xx.c:197:
+printk(KERN_INFO "gpio_set_wake() returning EBUSY\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#152: FILE: arch/arm/mach-pxa/mfp-pxa2xx.c:219:
+printk(KERN_INFO "gpio_set_wake() modified P?ER\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'gpio_set_wake', this function's name, in a string
#152: FILE: arch/arm/mach-pxa/mfp-pxa2xx.c:219:
+printk(KERN_INFO "gpio_set_wake() modified P?ER\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#164: FILE: arch/arm/mach-pxa/pxa27x.c:323:
+	printk(KERN_INFO "pxa27x_set_wake() IRQ: %d to %d, GPIO: %d\n", irq, on, gpio);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pxa27x_set_wake', this function's name, in a string
#164: FILE: arch/arm/mach-pxa/pxa27x.c:323:
+	printk(KERN_INFO "pxa27x_set_wake() IRQ: %d to %d, GPIO: %d\n", irq, on, gpio);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#165: FILE: arch/arm/mach-pxa/pxa27x.c:324:
 	if (gpio >= 0 && gpio < 128)
+{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#165: FILE: arch/arm/mach-pxa/pxa27x.c:324:
 	if (gpio >= 0 && gpio < 128)
+{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#167: FILE: arch/arm/mach-pxa/pxa27x.c:326:
+	printk(KERN_INFO "pxa27x_set_wake() calling gpio_set_wake()\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pxa27x_set_wake', this function's name, in a string
#167: FILE: arch/arm/mach-pxa/pxa27x.c:326:
+	printk(KERN_INFO "pxa27x_set_wake() calling gpio_set_wake()\n");

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#171: FILE: arch/arm/mach-pxa/pxa27x.c:330:
 	if (irq == IRQ_KEYPAD)
+{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#171: FILE: arch/arm/mach-pxa/pxa27x.c:330:
 	if (irq == IRQ_KEYPAD)
+{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#173: FILE: arch/arm/mach-pxa/pxa27x.c:332:
+	printk(KERN_INFO "pxa27x_set_wake() calling keypad_set_wake(()\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#183: FILE: arch/arm/mach-pxa/pxa27x.c:344:
+	printk(KERN_INFO "pxa27x_set_wake() returning EINVAL\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pxa27x_set_wake', this function's name, in a string
#183: FILE: arch/arm/mach-pxa/pxa27x.c:344:
+	printk(KERN_INFO "pxa27x_set_wake() returning EINVAL\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#191: FILE: arch/arm/mach-pxa/pxa27x.c:352:
+	printk(KERN_INFO "pxa27x_set_wake() modified PWER\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pxa27x_set_wake', this function's name, in a string
#191: FILE: arch/arm/mach-pxa/pxa27x.c:352:
+	printk(KERN_INFO "pxa27x_set_wake() modified PWER\n");

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#203: FILE: kernel/irq/manage.c:347:
+printk(KERN_INFO "set_irq_wake() started IRQ: %d to %d, desc->wake_depth: %d\n", irq, on, desc->wake_depth);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#203: FILE: kernel/irq/manage.c:347:
+printk(KERN_INFO "set_irq_wake() started IRQ: %d to %d, desc->wake_depth: %d\n", irq, on, desc->wake_depth);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_irq_wake', this function's name, in a string
#203: FILE: kernel/irq/manage.c:347:
+printk(KERN_INFO "set_irq_wake() started IRQ: %d to %d, desc->wake_depth: %d\n", irq, on, desc->wake_depth);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#211: FILE: kernel/irq/manage.c:373:
+printk(KERN_INFO "set_irq_wake() done IRQ: %d to %d, desc->wake_depth: %d\n", irq, on, desc->wake_depth);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#211: FILE: kernel/irq/manage.c:373:
+printk(KERN_INFO "set_irq_wake() done IRQ: %d to %d, desc->wake_depth: %d\n", irq, on, desc->wake_depth);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_irq_wake', this function's name, in a string
#211: FILE: kernel/irq/manage.c:373:
+printk(KERN_INFO "set_irq_wake() done IRQ: %d to %d, desc->wake_depth: %d\n", irq, on, desc->wake_depth);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000020606.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 30 warnings, 0 checks, 88 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000020606.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
