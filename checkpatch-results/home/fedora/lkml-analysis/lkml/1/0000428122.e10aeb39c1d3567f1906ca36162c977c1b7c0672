WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#145: FILE: arch/i386/xen/mmu.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'menas' may be misspelled - perhaps 'means'?
#179: FILE: arch/i386/xen/mmu.c:35:
+ * when it is not actively in use.  This menas that Xen can be assured
                                          ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/bug.h> instead of <asm/bug.h>
#185: FILE: arch/i386/xen/mmu.c:41:
+#include <asm/bug.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#187: FILE: arch/i386/xen/mmu.c:43:
+#include <asm/pgtable.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/mmu_context.h> instead of <asm/mmu_context.h>
#189: FILE: arch/i386/xen/mmu.c:45:
+#include <asm/mmu_context.h>

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#202: FILE: arch/i386/xen/mmu.c:58:
+	unsigned offset = address & PAGE_MASK;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#204: FILE: arch/i386/xen/mmu.c:60:
+	BUG_ON(pte == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pte"
#204: FILE: arch/i386/xen/mmu.c:60:
+	BUG_ON(pte == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#215: FILE: arch/i386/xen/mmu.c:71:
+	BUG_ON(pte == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pte"
#215: FILE: arch/i386/xen/mmu.c:71:
+	BUG_ON(pte == NULL);

ERROR:SPACING: space required before the open parenthesis '('
#219: FILE: arch/i386/xen/mmu.c:75:
+	if(HYPERVISOR_update_va_mapping(address, ptev, 0))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#220: FILE: arch/i386/xen/mmu.c:76:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#229: FILE: arch/i386/xen/mmu.c:85:
+	BUG_ON(pte == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pte"
#229: FILE: arch/i386/xen/mmu.c:85:
+	BUG_ON(pte == NULL);

ERROR:SPACING: space required before the open parenthesis '('
#233: FILE: arch/i386/xen/mmu.c:89:
+	if(HYPERVISOR_update_va_mapping(address, ptev, 0))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#234: FILE: arch/i386/xen/mmu.c:90:
+		BUG();

CHECK:LINE_SPACING: Please don't use multiple blank lines
#237: FILE: arch/i386/xen/mmu.c:93:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#245: FILE: arch/i386/xen/mmu.c:101:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#255: FILE: arch/i386/xen/mmu.c:111:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#266: FILE: arch/i386/xen/mmu.c:122:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#283: FILE: arch/i386/xen/mmu.c:139:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#288: FILE: arch/i386/xen/mmu.c:144:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#293: FILE: arch/i386/xen/mmu.c:149:
+		BUG();

ERROR:SPACING: space required after that ',' (ctx:VxV)
#321: FILE: arch/i386/xen/mmu.c:177:
+void xen_pte_clear(struct mm_struct *mm, unsigned long addr,pte_t *ptep)
                                                            ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#324: FILE: arch/i386/xen/mmu.c:180:
+	smp_wmb();

WARNING:LINE_SPACING: Missing a blank line after declarations
#348: FILE: arch/i386/xen/mmu.c:204:
+	unsigned long long ret = pmd.pmd;
+	if (ret)

WARNING:LINE_SPACING: Missing a blank line after declarations
#356: FILE: arch/i386/xen/mmu.c:212:
+	unsigned long long ret = pgd.pgd;
+	if (ret)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#398: FILE: arch/i386/xen/mmu.c:254:
+	BUG();

WARNING:LINE_SPACING: Missing a blank line after declarations
#405: FILE: arch/i386/xen/mmu.c:261:
+	unsigned long ret = pgd.pgd;
+	if (ret)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#421: FILE: arch/i386/xen/mmu.c:277:
+	BUG();

CHECK:LINE_SPACING: Please don't use multiple blank lines
#434: FILE: arch/i386/xen/mmu.c:290:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#442: FILE: arch/i386/xen/mmu.c:298:
+		BUG();

ERROR:SPACING: space required after that ',' (ctx:VxV)
#462: FILE: arch/i386/xen/mmu.c:318:
+			pgd_walk_set_prot(pud,flags);
 			                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#470: FILE: arch/i386/xen/mmu.c:326:
+				pgd_walk_set_prot(pmd,flags);
 				                     ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#477: FILE: arch/i386/xen/mmu.c:333:
+				/* This can get called before mem_map
+				   is set up, so we assume nothing is

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#478: FILE: arch/i386/xen/mmu.c:334:
+				   highmem at that point. */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mem_map"
#479: FILE: arch/i386/xen/mmu.c:335:
+				if (mem_map == NULL ||

ERROR:SPACING: space required after that ',' (ctx:VxV)
#481: FILE: arch/i386/xen/mmu.c:337:
+					pte = pte_offset_kernel(pmd,0);
 					                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#482: FILE: arch/i386/xen/mmu.c:338:
+					pgd_walk_set_prot(pte,flags);
 					                     ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#492: FILE: arch/i386/xen/mmu.c:348:
+		BUG();

CHECK:LINE_SPACING: Please don't use multiple blank lines
#495: FILE: arch/i386/xen/mmu.c:351:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#497: FILE: arch/i386/xen/mmu.c:353:
+/* This is called just after a mm has been duplicated from its parent,
+   but it has not been used yet.  We need to make sure that its

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#498: FILE: arch/i386/xen/mmu.c:354:
+   pagetable is all read-only, and can be pinned. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#512: FILE: arch/i386/xen/mmu.c:368:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#524: FILE: arch/i386/xen/mmu.c:380:
+		BUG();

CHECK:LINE_SPACING: Please don't use multiple blank lines
#529: FILE: arch/i386/xen/mmu.c:385:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#557: FILE: arch/i386/xen/mmu.c:413:
+		BUG_ON(atomic_read(&mm->mm_count) == 0);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#568: FILE: arch/i386/xen/mmu.h:1:
+#ifndef _XEN_MMU_H

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pmd_t' should also have an identifier name
#589: FILE: arch/i386/xen/mmu.h:22:
+unsigned long long xen_pmd_val(pmd_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pgd_t' should also have an identifier name
#590: FILE: arch/i386/xen/mmu.h:23:
+unsigned long long xen_pgd_val(pgd_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long long' should also have an identifier name
#592: FILE: arch/i386/xen/mmu.h:25:
+pte_t xen_make_pte(unsigned long long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long long' should also have an identifier name
#593: FILE: arch/i386/xen/mmu.h:26:
+pmd_t xen_make_pmd(unsigned long long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long long' should also have an identifier name
#594: FILE: arch/i386/xen/mmu.h:27:
+pgd_t xen_make_pgd(unsigned long long);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#600: FILE: arch/i386/xen/mmu.h:33:
+void xen_pte_clear(struct mm_struct *mm, unsigned long addr,pte_t *ptep);
                                                            ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#603: FILE: arch/i386/xen/mmu.h:36:
+
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pmd_t' should also have an identifier name
#606: FILE: arch/i386/xen/mmu.h:39:
+unsigned long xen_pmd_val(pmd_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pgd_t' should also have an identifier name
#607: FILE: arch/i386/xen/mmu.h:40:
+unsigned long xen_pgd_val(pgd_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#609: FILE: arch/i386/xen/mmu.h:42:
+pte_t xen_make_pte(unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#610: FILE: arch/i386/xen/mmu.h:43:
+pmd_t xen_make_pmd(unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#611: FILE: arch/i386/xen/mmu.h:44:
+pgd_t xen_make_pgd(unsigned long);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000428122.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 40 warnings, 12 checks, 526 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000428122.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
