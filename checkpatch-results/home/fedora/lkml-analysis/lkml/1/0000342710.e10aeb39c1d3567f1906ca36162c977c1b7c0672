WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
b) ->proc_fops are proc_file_operations which do not have ->open callback. So, it's

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#107: FILE: fs/proc/generic.c:562:
+static struct proc_dir_entry *__proc_create(struct proc_dir_entry **parent,
 					  const char *name,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#115: FILE: fs/proc/generic.c:604:
+	ent = __proc_create(&parent,name,
 	                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#116: FILE: fs/proc/generic.c:605:
+	ent = __proc_create(&parent,name,
 			  (S_IFLNK | S_IRUGO | S_IWUGO | S_IXUGO),1);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#133: FILE: fs/proc/generic.c:663:
+	ent = __proc_create(&parent,name,mode,nlink);
 	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#133: FILE: fs/proc/generic.c:663:
+	ent = __proc_create(&parent,name,mode,nlink);
 	                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#133: FILE: fs/proc/generic.c:663:
+	ent = __proc_create(&parent,name,mode,nlink);
 	                                     ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IXUGO' are not preferred. Consider using octal permissions '0555'.
#150: FILE: fs/proc/generic.c:682:
+			mode |= S_IRUGO | S_IXUGO;

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#156: FILE: fs/proc/generic.c:688:
+			mode |= S_IRUGO;

WARNING:LONG_LINE: line length of 138 exceeds 100 columns
#208: FILE: include/linux/proc_fs.h:127:
+struct proc_dir_entry *proc_create(const char *name, mode_t mode, struct proc_dir_entry *parent, const struct file_operations *proc_fops);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 151 exceeds 100 columns
#217: FILE: include/linux/proc_fs.h:220:
+static inline struct proc_dir_entry *proc_create(const char *name, mode_t mode, struct proc_dir_entry *parent, const struct file_operations *proc_fops)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000342710.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 5 warnings, 2 checks, 108 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000342710.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
