WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
On Sun, May 11, 2008 at 9:58 PM, Arjan van de Ven <arjan@linux.intel.com> wrote:

WARNING:LINE_SPACING: Missing a blank line after declarations
#101: FILE: arch/x86/mm/fault.c:610:
+	unsigned long entries[16];
+	trace.nr_entries = 0;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#105: FILE: arch/x86/mm/fault.c:614:
+	printk(KERN_EMERG "saved stack trace:\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#108: FILE: arch/x86/mm/fault.c:617:
+	printk(KERN_EMERG "end saved stack trace\n");

ERROR:SPACING: space required before the open parenthesis '('
#110: FILE: arch/x86/mm/fault.c:619:
+	while(1)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#124: FILE: init/main.c:534:
+void noinline trigger_page_fault(void) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#124: FILE: init/main.c:534:
+void noinline trigger_page_fault(void) {

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

WARNING:LINE_SPACING: Missing a blank line after declarations
#127: FILE: init/main.c:537:
+	unsigned long addr = page_address(p);
+	set_memory_4k(addr, 0);

WARNING:LINE_SPACING: Missing a blank line after declarations
#130: FILE: init/main.c:540:
+	pte_t *pte = lookup_address(addr, &level);
+	set_pte(pte, __pte(pte_val(*pte) & ~_PAGE_PRESENT));

CHECK:SPACING: No space is necessary after a cast
#131: FILE: init/main.c:541:
+	*(char*) addr = 0;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#131: FILE: init/main.c:541:
+	*(char*) addr = 0;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000282273.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 6 warnings, 1 checks, 60 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000282273.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
