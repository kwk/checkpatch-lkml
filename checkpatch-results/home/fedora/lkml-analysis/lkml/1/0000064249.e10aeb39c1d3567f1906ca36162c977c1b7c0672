WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
This patch contains code for getting canonicalized pathnames used by TOMOYO.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#84: FILE: security/tomoyo/new-realpath.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LINE_SPACING: Missing a blank line after declarations
#126: FILE: security/tomoyo/new-realpath.c:43:
+		struct dentry *parent;
+		if (dentry == vfsmnt->mnt_root || IS_ROOT(dentry)) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#144: FILE: security/tomoyo/new-realpath.c:61:
+			const pid_t pid = (pid_t) simple_strtoul(name, &ep,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#144: FILE: security/tomoyo/new-realpath.c:61:
+			const pid_t pid = (pid_t) simple_strtoul(name, &ep,

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dentry->d_sb->s_fs_info'
#148: FILE: security/tomoyo/new-realpath.c:65:
+							   dentry->d_sb->
+							   s_fs_info);

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:LINE_SPACING: Missing a blank line after declarations
#191: FILE: security/tomoyo/new-realpath.c:108:
+	struct dentry *dentry = path->dentry;
+	if (!dentry)

WARNING:LINE_SPACING: Missing a blank line after declarations
#195: FILE: security/tomoyo/new-realpath.c:112:
+		char *pos;
+		buf_len <<= 1;

WARNING:LINE_SPACING: Missing a blank line after declarations
#205: FILE: security/tomoyo/new-realpath.c:122:
+			struct sock *sk = sock ? sock->sk : NULL;
+			if (sk) {

WARNING:SPLIT_STRING: quoted string split across lines
#207: FILE: security/tomoyo/new-realpath.c:124:
+				snprintf(buf, buf_len - 1, "socket:[family=%u:"
+					 "type=%u:protocol=%u]", sk->sk_family,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LINE_SPACING: Missing a blank line after declarations
#258: FILE: security/tomoyo/new-realpath.c:175:
+	struct path path;
+	if (!pathname || kern_path(pathname, 0, &path))

WARNING:LINE_SPACING: Missing a blank line after declarations
#286: FILE: security/tomoyo/new-realpath.c:203:
+	char *cp0;
+	if (!p)

WARNING:LINE_SPACING: Missing a blank line after declarations
#290: FILE: security/tomoyo/new-realpath.c:207:
+		const unsigned char c = *p++;
+		if (c == '\\')

WARNING:LINE_SPACING: Missing a blank line after declarations
#306: FILE: security/tomoyo/new-realpath.c:223:
+		const unsigned char c = *p++;
+		if (c == '\\') {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000064249.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 13 warnings, 1 checks, 251 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000064249.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
