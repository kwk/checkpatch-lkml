CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#115: FILE: include/linux/kprobes.h:228:
 }
+static inline void unregister_kprobe_fast(struct kprobe *p)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#125: FILE: include/linux/kprobes.h:251:
 }
+static inline void commit_kprobes(void)

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: kernel/kprobes.c:653:
+  ^I^Iarch_disarm_kprobe(p);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#201: FILE: kernel/kprobes.c:653:
+  ^I^Iarch_disarm_kprobe(p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: kernel/kprobes.c:653:
+  ^I^Iarch_disarm_kprobe(p);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: kernel/kprobes.c:654:
+  ^I^Ihlist_del_rcu(&old_p->hlist);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#202: FILE: kernel/kprobes.c:654:
+  ^I^Ihlist_del_rcu(&old_p->hlist);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: kernel/kprobes.c:654:
+  ^I^Ihlist_del_rcu(&old_p->hlist);$

ERROR:SPACING: space required before the open brace '{'
#207: FILE: kernel/kprobes.c:659:
+		if (p->post_handler){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open brace '{'
#208: FILE: kernel/kprobes.c:660:
+			list_for_each_entry_rcu(list_p, &old_p->list, list){

ERROR:SPACING: space required before the open brace '{'
#209: FILE: kernel/kprobes.c:661:
+				if ((list_p != p) && (list_p->post_handler)){

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'list_p != p'
#209: FILE: kernel/kprobes.c:661:
+				if ((list_p != p) && (list_p->post_handler)){

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'list_p->post_handler'
#209: FILE: kernel/kprobes.c:661:
+				if ((list_p != p) && (list_p->post_handler)){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#209: FILE: kernel/kprobes.c:661:
+				if ((list_p != p) && (list_p->post_handler)){
+					goto noclean;
+				}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#285: FILE: kernel/kprobes.c:715:
+		synchronize_sched();

Usage of a deprecated RCU API is detected.  It is recommended to replace
old flavourful RCU APIs by their new vanilla-RCU counterparts.

The full list of available RCU APIs can be viewed from the kernel docs.

See: https://www.kernel.org/doc/html/latest/RCU/whatisRCU.html#full-list-of-rcu-apis

WARNING:SPACING: space prohibited before semicolon
#301: FILE: kernel/kprobes.c:731:
+	return ;

WARNING:RETURN_VOID: void function return statements are not generally useful
#302: FILE: kernel/kprobes.c:732:
+	return ;
+}

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#310: FILE: kernel/kprobes.c:740:
+	if (cleanup == 0) {
[...]
+	} else if (cleanup == 1) {
[...]

WARNING:SPACING: space prohibited before semicolon
#326: FILE: kernel/kprobes.c:756:
+	if (cleanup < 0) return ;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#326: FILE: kernel/kprobes.c:756:
+	if (cleanup < 0) return ;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#328: FILE: kernel/kprobes.c:758:
+	synchronize_sched();

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#343: FILE: kernel/kprobes.c:1001:
+EXPORT_SYMBOL_GPL(commit_kprobes);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000452767.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 12 warnings, 4 checks, 287 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000452767.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
