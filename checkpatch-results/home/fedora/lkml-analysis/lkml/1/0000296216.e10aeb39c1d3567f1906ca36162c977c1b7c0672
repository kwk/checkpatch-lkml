WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#107: FILE: drivers/w1/w1.c:269:
device *dev,

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#111: FILE: drivers/w1/w1.c:272:
 }
+static ssize_t w1_master_attribute_store_pullup(struct device * dev,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#111: FILE: drivers/w1/w1.c:272:
+static ssize_t w1_master_attribute_store_pullup(struct device * dev,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#113: FILE: drivers/w1/w1.c:274:
+						const char * buf, size_t count)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#115: FILE: drivers/w1/w1.c:276:
+	struct w1_master *md =3D dev_to_w1_master(dev);
 	                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#118: FILE: drivers/w1/w1.c:279:
+	md->enable_pullup =3D simple_strtol(buf, NULL, 0);
 	                  ^

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#118: FILE: drivers/w1/w1.c:279:
+	md->enable_pullup =3D simple_strtol(buf, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#129: FILE: drivers/w1/w1.c:290:
+	struct w1_master *md =3D dev_to_w1_master(dev);
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#133: FILE: drivers/w1/w1.c:294:
+	count =3D sprintf(buf, "%d\n", md->enable_pullup);
 	      ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#147: FILE: drivers/w1/w1.c:396:
+static W1_MASTER_ATTR_RW(pullup, S_IRUGO | S_IWUGO);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct w1_master *' should also have an identifier name
#192: FILE: drivers/w1/w1.h:215:
+void w1_next_pullup(struct w1_master *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#192: FILE: drivers/w1/w1.h:215:
+void w1_next_pullup(struct w1_master *, int);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#204: FILE: drivers/w1/w1_int.c:32:
+static int w1_enable_pullup =3D 1;
                             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#216: FILE: drivers/w1/w1_int.c:65:
+	dev->enable_pullup	=3D w1_enable_pullup;
 	                  	^

WARNING:TYPO_SPELLING: 'hardare' may be misspelled - perhaps 'hardware'?
#225: FILE: drivers/w1/w1_int.c:115:
+	 * generated a strong pullup in bit bang mode, only hardare that
 	                                                    ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space required before the open parenthesis '('
#231: FILE: drivers/w1/w1_int.c:121:
+	if(!master->write_byte && !master->touch_bit && master->set_pullup) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#232: FILE: drivers/w1/w1_int.c:122:
+		printk(KERN_ERR "w1_add_master_device: set_pullup requires "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'w1_add_master_device', this function's name, in a string
#232: FILE: drivers/w1/w1_int.c:122:
+		printk(KERN_ERR "w1_add_master_device: set_pullup requires "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#233: FILE: drivers/w1/w1_int.c:123:
+		printk(KERN_ERR "w1_add_master_device: set_pullup requires "
+			"write_byte or touch_bit, disabling\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#234: FILE: drivers/w1/w1_int.c:124:
+		master->set_pullup=3DNULL;
 		                  ^

ERROR:SPACING: space required before the open parenthesis '('
#256: FILE: drivers/w1/w1_io.c:103:
+	if(dev->pullup_duration &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#257: FILE: drivers/w1/w1_io.c:104:
+	if(dev->pullup_duration &&
+		dev->enable_pullup && dev->bus_master->set_pullup) {

ERROR:SPACING: space required before the open parenthesis '('
#272: FILE: drivers/w1/w1_io.c:119:
+	if(dev->pullup_duration) {

ERROR:SPACING: space required before the open parenthesis '('
#273: FILE: drivers/w1/w1_io.c:120:
+		if(dev->enable_pullup && dev->bus_master->set_pullup)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#277: FILE: drivers/w1/w1_io.c:124:
+		dev->pullup_duration=3D0;
 		                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#296: FILE: drivers/w1/w1_io.c:143:
+		for (i =3D 0; i < 8; ++i) {
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#297: FILE: drivers/w1/w1_io.c:144:
+			if(i=3D=3D7)
 			    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#297: FILE: drivers/w1/w1_io.c:144:
+			if(i=3D=3D7)
 			       ^

ERROR:SPACING: space required before the open parenthesis '('
#297: FILE: drivers/w1/w1_io.c:144:
+			if(i=3D=3D7)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#297: FILE: drivers/w1/w1_io.c:144:
+			if(i=3D=3D7)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#341: FILE: drivers/w1/w1_io.c:366:
+	dev->pullup_duration=3Ddelay;
 	                    ^

CHECK:CAMELCASE: Avoid CamelCase: <Ddelay>
#341: FILE: drivers/w1/w1_io.c:366:
+	dev->pullup_duration=3Ddelay;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000296216.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 21 errors, 9 warnings, 3 checks, 219 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000296216.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
