ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#52: FILE: include/asm-generic/mman.h:29:
references */

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:CODE_INDENT: code indent should use tabs where possible
#69: FILE: include/linux/page-flags.h:108:
+        PG_untouched,           /* migrate page on next touch */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: include/linux/page-flags.h:108:
+        PG_untouched,           /* migrate page on next touch */$

CHECK:CAMELCASE: Avoid CamelCase: <Untouched>
#81: FILE: include/linux/page-flags.h:233:
+PAGEFLAG(Untouched, untouched) TESTCLEARFLAG(Untouched, untouched)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:INCLUDE_LINUX: Use #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#98: FILE: mm/madvise.c:17:
+#include <asm/cacheflush.h>

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: mm/madvise.c:31:
+       case MADV_ACCESS_LWP:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: mm/madvise.c:227:
+               struct mm_struct *mm, pmd_t *pmd, unsigned long addr,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#117: FILE: mm/madvise.c:227:
+static inline void change_pte_range(struct vm_area_struct *vma,
+               struct mm_struct *mm, pmd_t *pmd, unsigned long addr,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: mm/madvise.c:227:
+               struct mm_struct *mm, pmd_t *pmd, unsigned long addr,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: mm/madvise.c:228:
+               unsigned long end, pgprot_t newprot)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: mm/madvise.c:228:
+               unsigned long end, pgprot_t newprot)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: mm/madvise.c:230:
+       pte_t *pte, ptent;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: mm/madvise.c:231:
+       struct page *page;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: mm/madvise.c:232:
+       spinlock_t *ptl;$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#122: FILE: mm/madvise.c:232:
+       spinlock_t *ptl;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: mm/madvise.c:234:
+       pte = pte_offset_map_lock(mm, pmd, addr, &ptl);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: mm/madvise.c:235:
+       arch_enter_lazy_mmu_mode();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: mm/madvise.c:236:
+       do {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#126: FILE: mm/madvise.c:236:
+       do {
+               if (pte_none(*pte))

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: mm/madvise.c:237:
+               if (pte_none(*pte))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: mm/madvise.c:237:
+               if (pte_none(*pte))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#127: FILE: mm/madvise.c:237:
+               if (pte_none(*pte))
+                       continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: mm/madvise.c:238:
+                       continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: mm/madvise.c:238:
+                       continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#129: FILE: mm/madvise.c:239:
+               if (!pte_present(*pte))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: mm/madvise.c:239:
+               if (!pte_present(*pte))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#129: FILE: mm/madvise.c:239:
+               if (!pte_present(*pte))
+                       continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: mm/madvise.c:240:
+                       continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: mm/madvise.c:240:
+                       continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: mm/madvise.c:242:
+               page = (struct page*) vm_normal_page(vma, addr, *pte);$

CHECK:SPACING: No space is necessary after a cast
#132: FILE: mm/madvise.c:242:
+               page = (struct page*) vm_normal_page(vma, addr, *pte);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: mm/madvise.c:242:
+               page = (struct page*) vm_normal_page(vma, addr, *pte);$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#132: FILE: mm/madvise.c:242:
+               page = (struct page*) vm_normal_page(vma, addr, *pte);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#133: FILE: mm/madvise.c:243:
+               if (!page $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: mm/madvise.c:243:
+               if (!page $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: mm/madvise.c:243:
+               if (!page $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#133: FILE: mm/madvise.c:243:
+               if (!page 
[...]
+                       continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: mm/madvise.c:244:
+                 || PageReserved(page)$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#134: FILE: mm/madvise.c:244:
+               if (!page 
+                 || PageReserved(page)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: mm/madvise.c:244:
+                 || PageReserved(page)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: mm/madvise.c:245:
+                 || !trylock_page(page))$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#135: FILE: mm/madvise.c:245:
+                 || PageReserved(page)
+                 || !trylock_page(page))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: mm/madvise.c:245:
+                 || !trylock_page(page))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: mm/madvise.c:246:
+                       continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: mm/madvise.c:246:
+                       continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: mm/madvise.c:247:
+               SetPageUntouched(page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: mm/madvise.c:247:
+               SetPageUntouched(page);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: mm/madvise.c:249:
+               ptent = ptep_modify_prot_start(mm, addr, pte);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: mm/madvise.c:249:
+               ptent = ptep_modify_prot_start(mm, addr, pte);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: mm/madvise.c:250:
+               ptent = pte_modify(ptent, newprot);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: mm/madvise.c:250:
+               ptent = pte_modify(ptent, newprot);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: mm/madvise.c:251:
+               ptep_modify_prot_commit(mm, addr, pte, ptent);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: mm/madvise.c:251:
+               ptep_modify_prot_commit(mm, addr, pte, ptent);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: mm/madvise.c:252:
+       } while (pte++, addr += PAGE_SIZE, addr != end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: mm/madvise.c:253:
+       arch_leave_lazy_mmu_mode();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: mm/madvise.c:254:
+       pte_unmap_unlock(pte - 1, ptl);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: mm/madvise.c:258:
+               struct mm_struct *mm, pud_t *pud, unsigned long addr,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#148: FILE: mm/madvise.c:258:
+static inline void change_pmd_range(struct vm_area_struct *vma,
+               struct mm_struct *mm, pud_t *pud, unsigned long addr,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: mm/madvise.c:258:
+               struct mm_struct *mm, pud_t *pud, unsigned long addr,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: mm/madvise.c:259:
+               unsigned long end, pgprot_t newprot)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: mm/madvise.c:259:
+               unsigned long end, pgprot_t newprot)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: mm/madvise.c:261:
+       pmd_t *pmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: mm/madvise.c:262:
+       unsigned long next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: mm/madvise.c:264:
+       pmd = pmd_offset(pud, addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: mm/madvise.c:265:
+       do {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#155: FILE: mm/madvise.c:265:
+       do {
+               next = pmd_addr_end(addr, end);

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: mm/madvise.c:266:
+               next = pmd_addr_end(addr, end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: mm/madvise.c:266:
+               next = pmd_addr_end(addr, end);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: mm/madvise.c:267:
+               if (pmd_none_or_clear_bad(pmd))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: mm/madvise.c:267:
+               if (pmd_none_or_clear_bad(pmd))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#157: FILE: mm/madvise.c:267:
+               if (pmd_none_or_clear_bad(pmd))
+                       continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: mm/madvise.c:268:
+                       continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: mm/madvise.c:268:
+                       continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: mm/madvise.c:269:
+               change_pte_range(vma, mm, pmd, addr, next, newprot);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: mm/madvise.c:269:
+               change_pte_range(vma, mm, pmd, addr, next, newprot);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: mm/madvise.c:270:
+       } while (pmd++, addr = next, addr != end);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: mm/madvise.c:274:
+               struct mm_struct *mm, pgd_t *pgd, unsigned long addr,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#164: FILE: mm/madvise.c:274:
+static inline void change_pud_range(struct vm_area_struct *vma,
+               struct mm_struct *mm, pgd_t *pgd, unsigned long addr,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: mm/madvise.c:274:
+               struct mm_struct *mm, pgd_t *pgd, unsigned long addr,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: mm/madvise.c:275:
+               unsigned long end, pgprot_t newprot)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: mm/madvise.c:275:
+               unsigned long end, pgprot_t newprot)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: mm/madvise.c:277:
+       pud_t *pud;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: mm/madvise.c:278:
+       unsigned long next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: mm/madvise.c:280:
+       pud = pud_offset(pgd, addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: mm/madvise.c:281:
+       do {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#171: FILE: mm/madvise.c:281:
+       do {
+               next = pud_addr_end(addr, end);

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: mm/madvise.c:282:
+               next = pud_addr_end(addr, end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: mm/madvise.c:282:
+               next = pud_addr_end(addr, end);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: mm/madvise.c:283:
+               if (pud_none_or_clear_bad(pud))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: mm/madvise.c:283:
+               if (pud_none_or_clear_bad(pud))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#173: FILE: mm/madvise.c:283:
+               if (pud_none_or_clear_bad(pud))
+                       continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: mm/madvise.c:284:
+                       continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: mm/madvise.c:284:
+                       continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: mm/madvise.c:285:
+               change_pmd_range(vma, mm, pud, addr, next, newprot);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: mm/madvise.c:285:
+               change_pmd_range(vma, mm, pud, addr, next, newprot);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: mm/madvise.c:286:
+       } while (pud++, addr = next, addr != end);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#180: FILE: mm/madvise.c:290:
+ * To realize the page placement strategy "affinity-on-next-touch", the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#181: FILE: mm/madvise.c:291:
+ * access to the pages will be denied. If an access violation occurs, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#182: FILE: mm/madvise.c:292:
+ * the page fault handler migrates the page to the current node and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#184: FILE: mm/madvise.c:294:
+ * to signalize the page fault handler that this page uses the page $

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: mm/madvise.c:301:
+                               unsigned long start, unsigned long end)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: mm/madvise.c:301:
+                               unsigned long start, unsigned long end)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: mm/madvise.c:303:
+       struct mm_struct * mm = vma->vm_mm;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#195: FILE: mm/madvise.c:303:
+       struct mm_struct * mm = vma->vm_mm;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: mm/madvise.c:304:
+       pgd_t *pgd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: mm/madvise.c:305:
+       pgprot_t newprot;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: mm/madvise.c:306:
+       unsigned long addr, next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: mm/madvise.c:309:
+       if (num_online_nodes() == 1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#201: FILE: mm/madvise.c:309:
+       if (num_online_nodes() == 1)
+               return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: mm/madvise.c:310:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: mm/madvise.c:310:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: mm/madvise.c:312:
+       if (!vma_migratable(vma))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#204: FILE: mm/madvise.c:312:
+       if (!vma_migratable(vma))
+               return -EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: mm/madvise.c:313:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: mm/madvise.c:313:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: mm/madvise.c:315:
+       newprot = protection_map[PROT_NONE &$

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: mm/madvise.c:316:
+                               (VM_READ|VM_WRITE|VM_EXEC|VM_SHARED)];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: mm/madvise.c:316:
+                               (VM_READ|VM_WRITE|VM_EXEC|VM_SHARED)];$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#208: FILE: mm/madvise.c:316:
+                               (VM_READ|VM_WRITE|VM_EXEC|VM_SHARED)];
                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#208: FILE: mm/madvise.c:316:
+                               (VM_READ|VM_WRITE|VM_EXEC|VM_SHARED)];
                                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#208: FILE: mm/madvise.c:316:
+                               (VM_READ|VM_WRITE|VM_EXEC|VM_SHARED)];
                                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: mm/madvise.c:317:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: mm/madvise.c:317:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: mm/madvise.c:318:
+       mmu_notifier_invalidate_range_start(mm, start, end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: mm/madvise.c:319:
+       addr = start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: mm/madvise.c:320:
+       pgd = pgd_offset(mm, start);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: mm/madvise.c:321:
+       flush_cache_range(vma, start, end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: mm/madvise.c:322:
+       do {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#214: FILE: mm/madvise.c:322:
+       do {
+               next = pgd_addr_end(addr, end);

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: mm/madvise.c:323:
+               next = pgd_addr_end(addr, end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: mm/madvise.c:323:
+               next = pgd_addr_end(addr, end);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: mm/madvise.c:324:
+               if (pgd_none_or_clear_bad(pgd))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: mm/madvise.c:324:
+               if (pgd_none_or_clear_bad(pgd))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#216: FILE: mm/madvise.c:324:
+               if (pgd_none_or_clear_bad(pgd))
+                       continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: mm/madvise.c:325:
+                       continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: mm/madvise.c:325:
+                       continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: mm/madvise.c:326:
+               change_pud_range(vma, mm, pgd, addr, next, newprot);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: mm/madvise.c:326:
+               change_pud_range(vma, mm, pgd, addr, next, newprot);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: mm/madvise.c:327:
+       } while (pgd++, addr = next, addr != end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: mm/madvise.c:328:
+       flush_tlb_range(vma, start, end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: mm/madvise.c:329:
+       mmu_notifier_invalidate_range_end(mm, start, end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: mm/madvise.c:331:
+       lru_add_drain();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: mm/madvise.c:333:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: mm/madvise.c:368:
+       case MADV_ACCESS_LWP:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#239: FILE: mm/madvise.c:369:
+               error = madvise_access_lwp(vma, start, end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: mm/madvise.c:369:
+               error = madvise_access_lwp(vma, start, end);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#240: FILE: mm/madvise.c:370:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: mm/madvise.c:370:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: mm/madvise.c:404:
+ *  MADV_ACCESS_LWP - the next LWP, which touch the specified address$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: mm/madvise.c:405:
+ *              range, will access it heavily$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000127045.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 47 errors, 92 warnings, 11 checks, 189 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000127045.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
