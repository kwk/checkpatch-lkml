WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#60: FILE: include/asm-x86/bitops_64.h:32:
+static inline void set_bit(int nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#69: FILE: include/asm-x86/bitops_64.h:49:
+static inline void __set_bit(int nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#78: FILE: include/asm-x86/bitops_64.h:67:
+static inline void clear_bit(int nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#87: FILE: include/asm-x86/bitops_64.h:89:
+static inline void __clear_bit(int nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#96: FILE: include/asm-x86/bitops_64.h:127:
+static inline void __change_bit(int nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#105: FILE: include/asm-x86/bitops_64.h:144:
+static inline void change_bit(int nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#114: FILE: include/asm-x86/bitops_64.h:160:
+static inline int test_and_set_bit(int nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#123: FILE: include/asm-x86/bitops_64.h:178:
+static inline int test_and_set_bit_lock(int nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#132: FILE: include/asm-x86/bitops_64.h:192:
+static inline int __test_and_set_bit(int nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#141: FILE: include/asm-x86/bitops_64.h:211:
+static inline int test_and_clear_bit(int nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#150: FILE: include/asm-x86/bitops_64.h:231:
+static inline int __test_and_clear_bit(int nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#159: FILE: include/asm-x86/bitops_64.h:243:
+static inline int __test_and_change_bit(int nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#168: FILE: include/asm-x86/bitops_64.h:262:
+static inline int test_and_change_bit(int nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#177: FILE: include/asm-x86/bitops_64.h:279:
+static int test_bit(int nr, const volatile void *addr);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#181: FILE: include/asm-x86/bitops_64.h:282:
+static inline int constant_test_bit(int nr, const volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#187: FILE: include/asm-x86/bitops_64.h:287:
+static inline int variable_test_bit(int nr, volatile const void *addr)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#199: FILE: include/asm-x86/bitops_64.h:305:
+extern long find_first_zero_bit(const unsigned long *addr, unsigned long size);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#200: FILE: include/asm-x86/bitops_64.h:306:
+extern long find_next_zero_bit(const unsigned long *addr, long size, long offset);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#201: FILE: include/asm-x86/bitops_64.h:307:
+extern long find_first_bit(const unsigned long *addr, unsigned long size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#202: FILE: include/asm-x86/bitops_64.h:308:
+extern long find_next_bit(const unsigned long *addr, long size, long offset);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000365259.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 16 warnings, 4 checks, 184 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000365259.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
