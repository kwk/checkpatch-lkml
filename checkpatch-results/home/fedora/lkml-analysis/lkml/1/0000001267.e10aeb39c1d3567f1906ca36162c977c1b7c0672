WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
In this initial patch it just checks if the output is a tty, if not it falls

WARNING:TYPO_SPELLING: 'chello' may be misspelled - perhaps 'cello'?
#49: 
Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
                                 ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BAD_SIGN_OFF: Duplicate signature
#52: 
Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:BRACES: Unbalanced braces around else statement
#116: FILE: tools/perf/builtin-report.c:309:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#119: FILE: tools/perf/builtin-report.c:312:
+				fprintf(stdout, "# Samples: %Ld\n#\n",

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#122: FILE: tools/perf/builtin-report.c:315:
+				fprintf(stdout, "# Samples: %Ld %s\n#\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#127: FILE: tools/perf/builtin-report.c:320:
+			perf_session__fprintf_hists(&stats->hists, NULL, false, stdout,
 					    stats->stats.total);

WARNING:LINE_SPACING: Missing a blank line after declarations
#149: FILE: tools/perf/builtin-report.c:333:
+			bool style = !strcmp(pretty_printing_style, "raw");
+			perf_read_values_display(stdout, &show_threads_values,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#201: FILE: tools/perf/util/cache.h:80:
+}
+static inline void exit_browser(void) {}

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#299: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#304: FILE: tools/perf/util/newt.c:1:
+#define _GNU_SOURCE

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:CAMELCASE: Avoid CamelCase: <newtComponent>
#318: FILE: tools/perf/util/newt.c:15:
+				       newtComponent listbox, u64 total)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fp"
#327: FILE: tools/perf/util/newt.c:24:
+	if (fp == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:CAMELCASE: Avoid CamelCase: <newtListboxAppendEntry>
#333: FILE: tools/perf/util/newt.c:30:
+	newtListboxAppendEntry(listbox, bf, self);

CHECK:CAMELCASE: Avoid CamelCase: <newtExitStruct>
#341: FILE: tools/perf/util/newt.c:38:
+	struct newtExitStruct es;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!self->sym"
#346: FILE: tools/perf/util/newt.c:43:
+	if (self->sym == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fp"
#353: FILE: tools/perf/util/newt.c:50:
+	if (fp == NULL)

CHECK:CAMELCASE: Avoid CamelCase: <newtCenteredWindow>
#357: FILE: tools/perf/util/newt.c:54:
+	newtCenteredWindow(ws.ws_col, ws.ws_row, self->sym->name);

CHECK:CAMELCASE: Avoid CamelCase: <newtForm>
#358: FILE: tools/perf/util/newt.c:55:
+	form = newtForm(NULL, NULL, 0);

CHECK:CAMELCASE: Avoid CamelCase: <newtFormAddHotKey>
#359: FILE: tools/perf/util/newt.c:56:
+	newtFormAddHotKey(form, NEWT_KEY_ESCAPE);

CHECK:CAMELCASE: Avoid CamelCase: <newtListbox>
#360: FILE: tools/perf/util/newt.c:57:
+	listbox = newtListbox(10, 1, ws.ws_row - 2, NEWT_FLAG_SCROLL | NEWT_FLAG_RETURNEXIT);

CHECK:CAMELCASE: Avoid CamelCase: <newtFormAddComponents>
#361: FILE: tools/perf/util/newt.c:58:
+	newtFormAddComponents(form, listbox, NULL);

CHECK:CAMELCASE: Avoid CamelCase: <newtFormRun>
#370: FILE: tools/perf/util/newt.c:67:
+	newtFormRun(form, &es);

CHECK:CAMELCASE: Avoid CamelCase: <newtPopWindow>
#371: FILE: tools/perf/util/newt.c:68:
+	newtPopWindow();

CHECK:CAMELCASE: Avoid CamelCase: <newtFormDestroy>
#372: FILE: tools/perf/util/newt.c:69:
+	newtFormDestroy(form);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#381: FILE: tools/perf/util/newt.c:78:
+	struct rb_node *nd;
 	                ^^

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#389: FILE: tools/perf/util/newt.c:86:
+	snprintf(str, sizeof(str), "Samples: %Ld", session_total);

CHECK:CAMELCASE: Avoid CamelCase: <newtDrawRootText>
#390: FILE: tools/perf/util/newt.c:87:
+	newtDrawRootText(0, 0, str);

CHECK:CAMELCASE: Avoid CamelCase: <newtPushHelpLine>
#391: FILE: tools/perf/util/newt.c:88:
+	newtPushHelpLine(helpline);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#398: FILE: tools/perf/util/newt.c:95:
+	listbox = newtListbox(1, 1, ws.ws_row - 2, NEWT_FLAG_SCROLL | NEWT_FLAG_BORDER | NEWT_FLAG_RETURNEXIT);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#417: FILE: tools/perf/util/newt.c:114:
+	for (nd = rb_first(hists); nd; nd = rb_next(nd)) {
 	     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#417: FILE: tools/perf/util/newt.c:114:
+	for (nd = rb_first(hists); nd; nd = rb_next(nd)) {
 	                           ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#417: FILE: tools/perf/util/newt.c:114:
+	for (nd = rb_first(hists); nd; nd = rb_next(nd)) {
 	                               ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#417: FILE: tools/perf/util/newt.c:114:
+	for (nd = rb_first(hists); nd; nd = rb_next(nd)) {
 	                                            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#418: FILE: tools/perf/util/newt.c:115:
+		struct hist_entry *h = rb_entry(nd, struct hist_entry, rb_node);
 		                                ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#419: FILE: tools/perf/util/newt.c:116:
+		struct hist_entry *h = rb_entry(nd, struct hist_entry, rb_node);
+		hist_entry__append_browser(h, listbox, session_total);

CHECK:CAMELCASE: Avoid CamelCase: <newtListboxGetCurrent>
#430: FILE: tools/perf/util/newt.c:127:
+		selection = newtListboxGetCurrent(listbox);

ERROR:CODE_INDENT: code indent should use tabs where possible
#443: FILE: tools/perf/util/newt.c:140:
+        ret = vsnprintf(msg + backlog, sizeof(msg) - backlog, format, ap);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#443: FILE: tools/perf/util/newt.c:140:
+        ret = vsnprintf(msg + backlog, sizeof(msg) - backlog, format, ap);$

CHECK:CAMELCASE: Avoid CamelCase: <newtPopHelpLine>
#447: FILE: tools/perf/util/newt.c:144:
+		newtPopHelpLine();

CHECK:CAMELCASE: Avoid CamelCase: <newtRefresh>
#449: FILE: tools/perf/util/newt.c:146:
+		newtRefresh();

CHECK:CAMELCASE: Avoid CamelCase: <newtInit>
#464: FILE: tools/perf/util/newt.c:161:
+	newtInit();

CHECK:CAMELCASE: Avoid CamelCase: <newtCls>
#465: FILE: tools/perf/util/newt.c:162:
+	newtCls();

CHECK:CAMELCASE: Avoid CamelCase: <newtFinished>
#472: FILE: tools/perf/util/newt.c:169:
+		newtFinished();

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000001267.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 18 warnings, 25 checks, 364 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000001267.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
