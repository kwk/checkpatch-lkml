WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#89: FILE: arch/x86/include/asm/bitops.h:78:
+static inline void __set_bit(unsigned int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#98: FILE: arch/x86/include/asm/bitops.h:93:
+static inline void clear_bit(unsigned int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#107: FILE: arch/x86/include/asm/bitops.h:120:
+static inline void __clear_bit(unsigned int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#116: FILE: arch/x86/include/asm/bitops.h:155:
+static inline void __change_bit(unsigned int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#125: FILE: arch/x86/include/asm/bitops.h:169:
+static inline void change_bit(unsigned int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#134: FILE: arch/x86/include/asm/bitops.h:190:
+static inline int test_and_set_bit(unsigned int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#143: FILE: arch/x86/include/asm/bitops.h:207:
+static inline int test_and_set_bit_lock(unsigned int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#152: FILE: arch/x86/include/asm/bitops.h:221:
+static inline int __test_and_set_bit(unsigned int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#161: FILE: arch/x86/include/asm/bitops.h:240:
+static inline int test_and_clear_bit(unsigned int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#170: FILE: arch/x86/include/asm/bitops.h:260:
+static inline int __test_and_clear_bit(unsigned int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#179: FILE: arch/x86/include/asm/bitops.h:272:
+static inline int __test_and_change_bit(unsigned int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#188: FILE: arch/x86/include/asm/bitops.h:292:
+static inline int test_and_change_bit(unsigned int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#198: FILE: arch/x86/include/asm/bitops.h:304:
+constant_test_bit(unsigned int nr, const volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#205: FILE: arch/x86/include/asm/bitops.h:310:
+static inline int variable_test_bit(unsigned int nr, volatile const unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#214: FILE: arch/x86/include/asm/bitops.h:328:
+static int test_bit(unsigned int nr, const volatile unsigned long *addr);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000183539.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 15 warnings, 0 checks, 120 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000183539.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
