CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#106: FILE: drivers/char/vt.c:1942:
+	uint32_t first;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#107: FILE: drivers/char/vt.c:1943:
+	uint32_t last;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#110: FILE: drivers/char/vt.c:1946:
+static int bisearch(uint32_t ucs, const struct interval *table, int max)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#130: FILE: drivers/char/vt.c:1966:
+/*
+static int is_zero_width(uint32_t ucs)

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#200: FILE: drivers/char/vt.c:2045:
+	uint8_t rescan;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#201: FILE: drivers/char/vt.c:2046:
+	uint8_t inverse;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#202: FILE: drivers/char/vt.c:2047:
+	uint8_t width;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#217: FILE: drivers/char/vt.c:2117:
 		} else if (vc->vc_utf && !vc->vc_disp_ctrl) {
[...]
+		    if ((c & 0xc0) == 0x80) {

WARNING:TABSTOP: Statements should start on a tabstop
#225: FILE: drivers/char/vt.c:2122:
+		    if ((c & 0xc0) == 0x80) {

WARNING:LONG_LINE: line length of 145 exceeds 100 columns
#227: FILE: drivers/char/vt.c:2124:
+			static const uint32_t utf8_length_changes[] = { 0x0000007f, 0x000007ff, 0x0000ffff, 0x001fffff, 0x03ffffff, 0x7fffffff };

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#227: FILE: drivers/char/vt.c:2124:
+			static const uint32_t utf8_length_changes[] = { 0x0000007f, 0x000007ff, 0x0000ffff, 0x001fffff, 0x03ffffff, 0x7fffffff };

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#228: FILE: drivers/char/vt.c:2125:
 			if (vc->vc_utf_count) {
+			    vc->vc_utf_char = (vc->vc_utf_char << 6) | (c & 0x3f);

WARNING:TABSTOP: Statements should start on a tabstop
#259: FILE: drivers/char/vt.c:2128:
+			    if (--vc->vc_utf_count) {

WARNING:TABSTOP: Statements should start on a tabstop
#263: FILE: drivers/char/vt.c:2131:
+			    }

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#267: FILE: drivers/char/vt.c:2135:
+			    if (c <= utf8_length_changes[vc->vc_npar - 1] || c > utf8_length_changes[vc->vc_npar]) {

WARNING:TABSTOP: Statements should start on a tabstop
#267: FILE: drivers/char/vt.c:2135:
+			    if (c <= utf8_length_changes[vc->vc_npar - 1] || c > utf8_length_changes[vc->vc_npar]) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#267: FILE: drivers/char/vt.c:2135:
+			    if (c <= utf8_length_changes[vc->vc_npar - 1] || c > utf8_length_changes[vc->vc_npar]) {
+				c = 0xfffd;
+			    }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TABSTOP: Statements should start on a tabstop
#269: FILE: drivers/char/vt.c:2137:
+			    }

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#270: FILE: drivers/char/vt.c:2138:
+			} else {
[...]
+			    vc->vc_utf_count = 0;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#280: FILE: drivers/char/vt.c:2145:
+			if (vc->vc_utf_count) {
[...]
+			    rescan = 1;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#285: FILE: drivers/char/vt.c:2150:
+			} else if (c > 0x7f) {
[...]
+			    vc->vc_npar = 0;

WARNING:TABSTOP: Statements should start on a tabstop
#288: FILE: drivers/char/vt.c:2153:
+			    if ((c & 0xe0) == 0xc0) {

WARNING:TABSTOP: Statements should start on a tabstop
#291: FILE: drivers/char/vt.c:2156:
+			    } else if ((c & 0xf0) == 0xe0) {

WARNING:TABSTOP: Statements should start on a tabstop
#294: FILE: drivers/char/vt.c:2159:
+			    } else if ((c & 0xf8) == 0xf0) {

WARNING:TABSTOP: Statements should start on a tabstop
#297: FILE: drivers/char/vt.c:2162:
+			    } else if ((c & 0xfc) == 0xf8) {

WARNING:TABSTOP: Statements should start on a tabstop
#300: FILE: drivers/char/vt.c:2165:
+			    } else if ((c & 0xfe) == 0xfc) {

WARNING:TABSTOP: Statements should start on a tabstop
#303: FILE: drivers/char/vt.c:2168:
+			    } else {

WARNING:TABSTOP: Statements should start on a tabstop
#306: FILE: drivers/char/vt.c:2171:
+			    }

WARNING:TABSTOP: Statements should start on a tabstop
#307: FILE: drivers/char/vt.c:2172:
+			    if (vc->vc_utf_count) {

WARNING:TABSTOP: Statements should start on a tabstop
#310: FILE: drivers/char/vt.c:2175:
+			    }

WARNING:TABSTOP: Statements should start on a tabstop
#317: FILE: drivers/char/vt.c:2182:
+		    if ((c >= 0xd800 && c <= 0xdfff) || c == 0xfffe || c == 0xffff)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#328: FILE: drivers/char/vt.c:2207:
+				if (is_double_width(c)) {
+					width = 2;
+				}

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#332: FILE: drivers/char/vt.c:2211:
+				/* Uncomment this and the definition of is_zero_width()
+				   if you'd prefer zero-width characters to be silently

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#333: FILE: drivers/char/vt.c:2212:
+				   dropped instead of printing the replacement glyph */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#335: FILE: drivers/char/vt.c:2214:
+				/*
+				else if (is_zero_width(c)) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 36)
#358: FILE: drivers/char/vt.c:2222:
+				if (tc == -1 || tc == -2) {
+				    continue; /* nothing to display */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#358: FILE: drivers/char/vt.c:2222:
+				if (tc == -1 || tc == -2) {
+				    continue; /* nothing to display */
+				}

WARNING:TABSTOP: Statements should start on a tabstop
#359: FILE: drivers/char/vt.c:2223:
+				    continue; /* nothing to display */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 36)
#362: FILE: drivers/char/vt.c:2226:
+				if (!(vc->vc_utf && !vc->vc_disp_ctrl) && !(c & ~charmask)) {
[...]
+				    tc = c;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#364: FILE: drivers/char/vt.c:2228:
+				    /* In legacy mode use the glyph we get by a 1:1 mapping.
+				       This would make absolutely no sense with Unicode in mind. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#364: FILE: drivers/char/vt.c:2228:
+				       This would make absolutely no sense with Unicode in mind. */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 36)
#366: FILE: drivers/char/vt.c:2230:
+				} else {
[...]
+				    tc = conv_uni_to_pc(vc, 0xfffd);

WARNING:LONG_LINE_COMMENT: line length of 110 exceeds 100 columns
#367: FILE: drivers/char/vt.c:2231:
+				    /* Display U+FFFD. If it's not found, display an inverse question mark. */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:TABSTOP: Statements should start on a tabstop
#369: FILE: drivers/char/vt.c:2233:
+				    if (tc < 0) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#372: FILE: drivers/char/vt.c:2236:
+					if (tc < 0) tc = '?';

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:TABSTOP: Statements should start on a tabstop
#373: FILE: drivers/char/vt.c:2237:
+				    }

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#403: FILE: drivers/char/vt.c:2245:
+				if (!vc->vc_can_do_color) {
[...]
+				} else if (vc->vc_hi_font_mask == 0x100) {
[...]
+				} else {
[...]

WARNING:LONG_LINE: line length of 137 exceeds 100 columns
#406: FILE: drivers/char/vt.c:2248:
+					vc_attr = ((vc->vc_attr) & 0x11) | (((vc->vc_attr) & 0xe0) >> 4) | (((vc->vc_attr) & 0x0e) << 4);

WARNING:LONG_LINE: line length of 137 exceeds 100 columns
#408: FILE: drivers/char/vt.c:2250:
+					vc_attr = ((vc->vc_attr) & 0x88) | (((vc->vc_attr) & 0x70) >> 4) | (((vc->vc_attr) & 0x07) << 4);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#418: FILE: drivers/char/vt.c:2256:
+					FLUSH
+				if (vc->vc_need_wrap) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#426: FILE: drivers/char/vt.c:2264:
+					     ((vc_attr << 8) & ~himask) + ((tc & 0x100) ? himask : 0) + (tc & 0xff) :

CHECK:SPACING: No space is necessary after a cast
#428: FILE: drivers/char/vt.c:2266:
+					   (u16 *) vc->vc_pos);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#442: FILE: drivers/char/vt.c:2279:
+				if (!--width) break;

WARNING:LONG_LINE_COMMENT: line length of 107 exceeds 100 columns
#444: FILE: drivers/char/vt.c:2281:
+				tc = conv_uni_to_pc(vc, ' '); /* A space is printed in the second column */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#445: FILE: drivers/char/vt.c:2282:
+				if (tc < 0) tc = ' ';

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000445914.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 43 warnings, 8 checks, 367 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000445914.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
