WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#52: 
|DEFINE_PER_CPU_DYN_ARRAY_ADDR(per_cpu__kstat_irqs, per_cpu__kstat.irqs, sizeof(unsigned int), nr_irqs, sizeof(unsigned long), NULL);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nameX' - possible side-effects?
#138: FILE: include/linux/init.h:275:
+#define DEFINE_DYN_ARRAY(nameX, sizeX, nrX, alignX, init_workX) \
+	DEFINE_DYN_ARRAY_ADDR(nameX, nameX, sizeX, nrX, alignX, init_workX)

CHECK:CAMELCASE: Avoid CamelCase: <__per_cpu_dyn_array_##nameX>
#142: FILE: include/linux/init.h:279:
+		static struct dyn_array __per_cpu_dyn_array_##nameX __initdata = \

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <__per_cpu_dyn_array_ptr_##nameX>
#149: FILE: include/linux/init.h:286:
+		static struct dyn_array *__per_cpu_dyn_array_ptr_##nameX __used \

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".per_cpu_dyn_array.init") over __attribute__((__section__(".per_cpu_dyn_array.init")))
#150: FILE: include/linux/init.h:287:
+		__attribute__((__section__(".per_cpu_dyn_array.init"))) = \

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nameX' - possible side-effects?
#153: FILE: include/linux/init.h:290:
+#define DEFINE_PER_CPU_DYN_ARRAY(nameX, sizeX, nrX, alignX, init_workX) \
+	DEFINE_PER_CPU_DYN_ARRAY_ADDR(nameX, nameX, nrX, alignX, init_workX)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#157: FILE: include/linux/init.h:294:
+extern unsigned long per_cpu_dyn_array_size(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#158: FILE: include/linux/init.h:295:
+extern void per_cpu_alloc_dyn_array(int cpu, char *ptr);

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#197: FILE: init/main.c:572:
+	struct dyn_array **daa;
 	                   ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#199: FILE: init/main.c:574:
+	for (daa = __per_cpu_dyn_array_start ; daa < __per_cpu_dyn_array_end; daa++) {
 	     ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#199: FILE: init/main.c:574:
+	for (daa = __per_cpu_dyn_array_start ; daa < __per_cpu_dyn_array_end; daa++) {
 	                                       ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#199: FILE: init/main.c:574:
+	for (daa = __per_cpu_dyn_array_start ; daa < __per_cpu_dyn_array_end; daa++) {
 	                                                                      ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#200: FILE: init/main.c:575:
+		struct dyn_array *da = *daa;
 		                        ^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#204: FILE: init/main.c:579:
+		printk(KERN_CONT "size:%#lx nr:%d align:%#lx\n",

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#204: FILE: init/main.c:579:
+		printk(KERN_CONT "size:%#lx nr:%d align:%#lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: init/main.c:580:
+		printk(KERN_CONT "size:%#lx nr:%d align:%#lx\n",
+			da->size, *da->nr, da->align);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#209: FILE: init/main.c:584:
+		printk(KERN_DEBUG "per_cpu_dyna_array total_size: %#lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#210: FILE: init/main.c:585:
+		printk(KERN_DEBUG "per_cpu_dyna_array total_size: %#lx\n",
+			 total_size);

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#219: FILE: init/main.c:594:
+	struct dyn_array **daa;
 	                   ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#225: FILE: init/main.c:600:
+	for (daa = __per_cpu_dyn_array_start ; daa < __per_cpu_dyn_array_end; daa++) {
 	     ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#225: FILE: init/main.c:600:
+	for (daa = __per_cpu_dyn_array_start ; daa < __per_cpu_dyn_array_end; daa++) {
 	                                       ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#225: FILE: init/main.c:600:
+	for (daa = __per_cpu_dyn_array_start ; daa < __per_cpu_dyn_array_end; daa++) {
 	                                                                      ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#226: FILE: init/main.c:601:
+		struct dyn_array *da = *daa;
 		                        ^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#230: FILE: init/main.c:605:
+		printk(KERN_CONT "size:%#lx nr:%d align:%#lx",

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#230: FILE: init/main.c:605:
+		printk(KERN_CONT "size:%#lx nr:%d align:%#lx",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#231: FILE: init/main.c:606:
+		printk(KERN_CONT "size:%#lx nr:%d align:%#lx",
+			da->size, *da->nr, da->align);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#239: FILE: init/main.c:614:
+		printk(KERN_CONT " %p ==> [%#lx - %#lx]\n", array, phys, phys + size);

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#239: FILE: init/main.c:614:
+		printk(KERN_CONT " %p ==> [%#lx - %#lx]\n", array, phys, phys + size);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000242630.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 19 warnings, 9 checks, 164 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000242630.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
