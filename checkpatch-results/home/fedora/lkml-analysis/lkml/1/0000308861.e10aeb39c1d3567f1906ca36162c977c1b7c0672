WARNING:TYPO_SPELLING: 'Successed' may be misspelled - perhaps 'Succeeded'?
#123: FILE: drivers/rapidio/rio.c:353:
+ * Return: 0 - Successed.
                ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'Allocat' may be misspelled - perhaps 'Allocate'?
#135: FILE: drivers/rapidio/rio.c:365:
+ * rio_alloc_io - Allocat IO resource for RapidIO master port.
                   ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#143: FILE: drivers/rapidio/rio.c:373:
+int rio_alloc_io(struct rio_mport *mport, resource_size_t size,
+		const char *name, unsigned long flags, struct resource *res)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#151: FILE: drivers/rapidio/rio.c:381:
+	if (allocate_resource(&mport->iores, res, size,	mport->iores.start,
+				mport->iores.end, size, NULL, NULL) < 0) {

WARNING:TYPO_SPELLING: 'allocte' may be misspelled - perhaps 'allocate'?
#152: FILE: drivers/rapidio/rio.c:382:
+		dev_err(mport->dev, "allocte IO error, no enough space!\n");
 		                     ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#197: FILE: drivers/rapidio/rio.c:427:
+int rio_map_outb_region(struct rio_mport *mport, u16 tid,
+		struct rio_mem *mem, u32 rflags)

WARNING:LINE_SPACING: Missing a blank line after declarations
#219: FILE: drivers/rapidio/rio.c:449:
+	unsigned long flags;
+	if (!mport->mops)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#234: FILE: drivers/rapidio/rio.c:464:
+	unsigned long flags;
+	if (!mport->mops)

WARNING:TYPO_SPELLING: 'successed' may be misspelled - perhaps 'succeeded'?
#246: FILE: drivers/rapidio/rio.c:476:
+ * Return 0 is successed.
                ^^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#251: FILE: drivers/rapidio/rio.c:481:
+	int rc = 0;
+	if (!mem)

WARNING:TYPO_SPELLING: 'Retrun' may be misspelled - perhaps 'Return'?
#278: FILE: drivers/rapidio/rio.c:508:
+ * Retrun: The rio_mem struction for inbound memory descriptor.
    ^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#289: FILE: drivers/rapidio/rio.c:519:
+struct rio_mem *rio_request_inb_region(struct rio_mport *mport, void *dev_id,
+		resource_size_t size, const char *name, u32 owner)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*rmem)...) over kzalloc(sizeof(struct rio_mem)...)
#295: FILE: drivers/rapidio/rio.c:525:
+	rmem = kzalloc(sizeof(struct rio_mem), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#317: FILE: drivers/rapidio/rio.c:547:
+	if (!rmem->virt) {
+		dev_err(mport->dev, "Inbound memory alloc error\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#327: FILE: drivers/rapidio/rio.c:557:
+		dev_err(mport->dev, "RIO map inbound mem error, ret = %d\n",
+					ret);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#335: FILE: drivers/rapidio/rio.c:565:
+		dev_err(mport->dev, "RIO inbound mem claim error, ret = %d\n",
+					ret);

WARNING:TYPO_SPELLING: 'successed' may be misspelled - perhaps 'succeeded'?
#352: FILE: drivers/rapidio/rio.c:582:
+ * Return 0 is successed.
                ^^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#357: FILE: drivers/rapidio/rio.c:587:
+	int rc = 0;
+	if (!mem)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#391: FILE: drivers/rapidio/rio.c:621:
+struct rio_mem *rio_prepare_io_mem(struct rio_mport *mport,
+		struct rio_dev *dev, resource_size_t size, const char *name)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*rmem)...) over kzalloc(sizeof(struct rio_mem)...)
#396: FILE: drivers/rapidio/rio.c:626:
+	rmem = kzalloc(sizeof(struct rio_mem), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#438: FILE: drivers/rapidio/rio.c:668:
+struct rio_mem *rio_request_outb_region(struct rio_mport *mport, void *dev_id,
+			resource_size_t size, const char *name, u32 owner)

WARNING:SPACING: Unnecessary space before function pointer arguments
#522: FILE: include/linux/rio.h:351:
+	int (*map_inb) (struct rio_mport *, resource_size_t lstart,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#522: FILE: include/linux/rio.h:351:
+	int (*map_inb) (struct rio_mport *, resource_size_t lstart,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: Unnecessary space before function pointer arguments
#525: FILE: include/linux/rio.h:354:
+	int (*map_outb) (struct rio_mport *, resource_size_t lstart,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#525: FILE: include/linux/rio.h:354:
+	int (*map_outb) (struct rio_mport *, resource_size_t lstart,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#526: FILE: include/linux/rio.h:355:
+	int (*map_outb) (struct rio_mport *, resource_size_t lstart,
+			resource_size_t rstart,

WARNING:SPACING: Unnecessary space before function pointer arguments
#528: FILE: include/linux/rio.h:357:
+	void (*unmap_inb) (struct rio_mport *, resource_size_t lstart);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#528: FILE: include/linux/rio.h:357:
+	void (*unmap_inb) (struct rio_mport *, resource_size_t lstart);

WARNING:SPACING: Unnecessary space before function pointer arguments
#529: FILE: include/linux/rio.h:358:
+	void (*unmap_outb) (struct rio_mport *, resource_size_t lstart);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#529: FILE: include/linux/rio.h:358:
+	void (*unmap_outb) (struct rio_mport *, resource_size_t lstart);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#544: FILE: include/linux/rio_drv.h:338:
+static inline void rio_init_io_res(struct resource *res, resource_size_t start,
+		resource_size_t size, const char *name, unsigned long flag)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#560: FILE: include/linux/rio_drv.h:421:
+extern int rio_request_io_region(struct rio_mport *, struct resource *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#560: FILE: include/linux/rio_drv.h:421:
+extern int rio_request_io_region(struct rio_mport *, struct resource *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct resource *' should also have an identifier name
#560: FILE: include/linux/rio_drv.h:421:
+extern int rio_request_io_region(struct rio_mport *, struct resource *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#561: FILE: include/linux/rio_drv.h:422:
+extern int rio_alloc_io(struct rio_mport *mport, resource_size_t size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#562: FILE: include/linux/rio_drv.h:423:
+extern int rio_alloc_io(struct rio_mport *mport, resource_size_t size,
+		const char *name, unsigned long flags, struct resource *res);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#563: FILE: include/linux/rio_drv.h:424:
+extern struct rio_mem *rio_prepare_io_mem(struct rio_mport *, struct rio_dev *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#563: FILE: include/linux/rio_drv.h:424:
+extern struct rio_mem *rio_prepare_io_mem(struct rio_mport *, struct rio_dev *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_dev *' should also have an identifier name
#563: FILE: include/linux/rio_drv.h:424:
+extern struct rio_mem *rio_prepare_io_mem(struct rio_mport *, struct rio_dev *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'resource_size_t' should also have an identifier name
#563: FILE: include/linux/rio_drv.h:424:
+extern struct rio_mem *rio_prepare_io_mem(struct rio_mport *, struct rio_dev *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#563: FILE: include/linux/rio_drv.h:424:
+extern struct rio_mem *rio_prepare_io_mem(struct rio_mport *, struct rio_dev *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#564: FILE: include/linux/rio_drv.h:425:
+extern struct rio_mem *rio_prepare_io_mem(struct rio_mport *, struct rio_dev *,
+				resource_size_t, const char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#572: FILE: include/linux/rio_drv.h:428:
+extern struct rio_mem *rio_request_inb_region(struct rio_mport *, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#572: FILE: include/linux/rio_drv.h:428:
+extern struct rio_mem *rio_request_inb_region(struct rio_mport *, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#572: FILE: include/linux/rio_drv.h:428:
+extern struct rio_mem *rio_request_inb_region(struct rio_mport *, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'resource_size_t' should also have an identifier name
#572: FILE: include/linux/rio_drv.h:428:
+extern struct rio_mem *rio_request_inb_region(struct rio_mport *, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#572: FILE: include/linux/rio_drv.h:428:
+extern struct rio_mem *rio_request_inb_region(struct rio_mport *, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#572: FILE: include/linux/rio_drv.h:428:
+extern struct rio_mem *rio_request_inb_region(struct rio_mport *, void *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#573: FILE: include/linux/rio_drv.h:429:
+extern struct rio_mem *rio_request_inb_region(struct rio_mport *, void *,
+				resource_size_t, const char *, u32);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#574: FILE: include/linux/rio_drv.h:430:
+extern struct rio_mem *rio_request_outb_region(struct rio_mport *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#574: FILE: include/linux/rio_drv.h:430:
+extern struct rio_mem *rio_request_outb_region(struct rio_mport *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#574: FILE: include/linux/rio_drv.h:430:
+extern struct rio_mem *rio_request_outb_region(struct rio_mport *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'resource_size_t' should also have an identifier name
#574: FILE: include/linux/rio_drv.h:430:
+extern struct rio_mem *rio_request_outb_region(struct rio_mport *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#574: FILE: include/linux/rio_drv.h:430:
+extern struct rio_mem *rio_request_outb_region(struct rio_mport *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#574: FILE: include/linux/rio_drv.h:430:
+extern struct rio_mem *rio_request_outb_region(struct rio_mport *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#575: FILE: include/linux/rio_drv.h:431:
+extern struct rio_mem *rio_request_outb_region(struct rio_mport *,
+		void *, resource_size_t, const char *, u32);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#576: FILE: include/linux/rio_drv.h:432:
+extern int rio_release_inb_region(struct rio_mport *, struct rio_mem *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#576: FILE: include/linux/rio_drv.h:432:
+extern int rio_release_inb_region(struct rio_mport *, struct rio_mem *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mem *' should also have an identifier name
#576: FILE: include/linux/rio_drv.h:432:
+extern int rio_release_inb_region(struct rio_mport *, struct rio_mem *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#577: FILE: include/linux/rio_drv.h:433:
+extern int rio_release_outb_region(struct rio_mport *, struct rio_mem *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#577: FILE: include/linux/rio_drv.h:433:
+extern int rio_release_outb_region(struct rio_mport *, struct rio_mem *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mem *' should also have an identifier name
#577: FILE: include/linux/rio_drv.h:433:
+extern int rio_release_outb_region(struct rio_mport *, struct rio_mem *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#580: FILE: include/linux/rio_drv.h:436:
+extern int rio_map_inb_region(struct rio_mport *, struct rio_mem *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#580: FILE: include/linux/rio_drv.h:436:
+extern int rio_map_inb_region(struct rio_mport *, struct rio_mem *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mem *' should also have an identifier name
#580: FILE: include/linux/rio_drv.h:436:
+extern int rio_map_inb_region(struct rio_mport *, struct rio_mem *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#580: FILE: include/linux/rio_drv.h:436:
+extern int rio_map_inb_region(struct rio_mport *, struct rio_mem *, u32);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#581: FILE: include/linux/rio_drv.h:437:
+extern int rio_map_outb_region(struct rio_mport *, u16, struct rio_mem *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#581: FILE: include/linux/rio_drv.h:437:
+extern int rio_map_outb_region(struct rio_mport *, u16, struct rio_mem *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16' should also have an identifier name
#581: FILE: include/linux/rio_drv.h:437:
+extern int rio_map_outb_region(struct rio_mport *, u16, struct rio_mem *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mem *' should also have an identifier name
#581: FILE: include/linux/rio_drv.h:437:
+extern int rio_map_outb_region(struct rio_mport *, u16, struct rio_mem *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#581: FILE: include/linux/rio_drv.h:437:
+extern int rio_map_outb_region(struct rio_mport *, u16, struct rio_mem *, u32);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#582: FILE: include/linux/rio_drv.h:438:
+extern void rio_unmap_inb_region(struct rio_mport *, struct rio_mem *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#582: FILE: include/linux/rio_drv.h:438:
+extern void rio_unmap_inb_region(struct rio_mport *, struct rio_mem *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mem *' should also have an identifier name
#582: FILE: include/linux/rio_drv.h:438:
+extern void rio_unmap_inb_region(struct rio_mport *, struct rio_mem *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#583: FILE: include/linux/rio_drv.h:439:
+extern void rio_unmap_outb_region(struct rio_mport *, struct rio_mem *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#583: FILE: include/linux/rio_drv.h:439:
+extern void rio_unmap_outb_region(struct rio_mport *, struct rio_mem *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mem *' should also have an identifier name
#583: FILE: include/linux/rio_drv.h:439:
+extern void rio_unmap_outb_region(struct rio_mport *, struct rio_mem *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#586: FILE: include/linux/rio_drv.h:442:
+extern int rio_space_request(struct rio_mport *, resource_size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#586: FILE: include/linux/rio_drv.h:442:
+extern int rio_space_request(struct rio_mport *, resource_size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'resource_size_t' should also have an identifier name
#586: FILE: include/linux/rio_drv.h:442:
+extern int rio_space_request(struct rio_mport *, resource_size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct resource *' should also have an identifier name
#586: FILE: include/linux/rio_drv.h:442:
+extern int rio_space_request(struct rio_mport *, resource_size_t,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#587: FILE: include/linux/rio_drv.h:443:
+extern int rio_space_request(struct rio_mport *, resource_size_t,
+						struct resource *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#588: FILE: include/linux/rio_drv.h:444:
+extern int rio_space_find_mem(struct rio_mport *, u16, u32, struct resource *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#588: FILE: include/linux/rio_drv.h:444:
+extern int rio_space_find_mem(struct rio_mport *, u16, u32, struct resource *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16' should also have an identifier name
#588: FILE: include/linux/rio_drv.h:444:
+extern int rio_space_find_mem(struct rio_mport *, u16, u32, struct resource *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#588: FILE: include/linux/rio_drv.h:444:
+extern int rio_space_find_mem(struct rio_mport *, u16, u32, struct resource *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct resource *' should also have an identifier name
#588: FILE: include/linux/rio_drv.h:444:
+extern int rio_space_find_mem(struct rio_mport *, u16, u32, struct resource *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#589: FILE: include/linux/rio_drv.h:445:
+extern int rio_space_init(struct rio_mport *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#589: FILE: include/linux/rio_drv.h:445:
+extern int rio_space_init(struct rio_mport *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#590: FILE: include/linux/rio_drv.h:446:
+extern int rio_space_claim(struct rio_mem *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mem *' should also have an identifier name
#590: FILE: include/linux/rio_drv.h:446:
+extern int rio_space_claim(struct rio_mem *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#591: FILE: include/linux/rio_drv.h:447:
+extern void rio_space_release(struct rio_mem *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mem *' should also have an identifier name
#591: FILE: include/linux/rio_drv.h:447:
+extern void rio_space_release(struct rio_mem *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#599: FILE: include/linux/rio_drv.h:497:
+extern u32 rio_get_mport_id(struct rio_mport *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#599: FILE: include/linux/rio_drv.h:497:
+extern u32 rio_get_mport_id(struct rio_mport *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000308861.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 61 warnings, 34 checks, 522 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000308861.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
