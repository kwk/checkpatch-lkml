WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#102: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:TYPO_SPELLING: 'subsytem' may be misspelled - perhaps 'subsystem'?
#108: FILE: drivers/iio/Kconfig:2:
+# Industrial I/O subsytem configuration
                  ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#111: FILE: drivers/iio/Kconfig:5:
+menuconfig IIO
+	tristate "Industrial I/O support"
+	---help---
+	  The industrial I/O subsystem provides a unified framework for
+	  drivers for many different types of embedded sensors using a
+	  number of different physical interfaces (i2c, spi etc). See
+	  Documentation/industrialio for more information.

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#136: FILE: drivers/iio/industrialio-core.c:1:
+/* The industrial I/O core

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: drivers/iio/industrialio-core.c:68:
+ int __iio_push_event(struct iio_event_interface *ev_int,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#204: FILE: drivers/iio/industrialio-core.c:69:
+ int __iio_push_event(struct iio_event_interface *ev_int,
+		     int ev_code,

CHECK:BRACES: braces {} should be used on all arms of this statement
#214: FILE: drivers/iio/industrialio-core.c:79:
+	if (test_bit(IIO_BUSY_BIT_POS, &ev_int->handler.flags)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ev"
#218: FILE: drivers/iio/industrialio-core.c:83:
+		if (ev == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: Unbalanced braces around else statement
#232: FILE: drivers/iio/industrialio-core.c:97:
+	} else

CHECK:BRACES: Unbalanced braces around else statement
#274: FILE: drivers/iio/industrialio-core.c:139:
+	} else

WARNING:SIZEOF_PARENTHESIS: sizeof *i should be sizeof(*i)
#286: FILE: drivers/iio/industrialio-core.c:151:
+	struct iio_interrupt *i = kmalloc(sizeof *i, GFP_KERNEL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#287: FILE: drivers/iio/industrialio-core.c:152:
+	struct iio_interrupt *i = kmalloc(sizeof *i, GFP_KERNEL);
+	if (i) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev_info->interrupts[line_number]"
#304: FILE: drivers/iio/industrialio-core.c:169:
+	if (dev_info->interrupts[line_number] == NULL) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#315: FILE: drivers/iio/industrialio-core.c:180:
+	 * events no-one cares about.*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#349: FILE: drivers/iio/industrialio-core.c:214:
+void iio_add_event_to_list(struct iio_event_handler_list *el,
+			  struct list_head *head)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#368: FILE: drivers/iio/industrialio-core.c:233:
+void iio_remove_event_from_list(struct iio_event_handler_list *el,
+			       struct list_head *head)

WARNING:TYPO_SPELLING: 'noone' may be misspelled - perhaps 'no one'?
#408: FILE: drivers/iio/industrialio-core.c:273:
+		/* Single access device so noone else can get the data */
 		                           ^^^^^

WARNING:SIZEOF_PARENTHESIS: sizeof el->ev should be sizeof(el->ev)
#415: FILE: drivers/iio/industrialio-core.c:280:
+	len = sizeof el->ev;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around el->ev
#416: FILE: drivers/iio/industrialio-core.c:281:
+	if (copy_to_user(buf, &(el->ev), len)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TYPO_SPELLING: 'concurency' may be misspelled - perhaps 'concurrency'?
#424: FILE: drivers/iio/industrialio-core.c:289:
+	 * Possible concurency issue if an update of this event is on its way
 	            ^^^^^^^^^^

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#491: FILE: drivers/iio/industrialio-core.c:356:
+	struct iio_event_interface *ev_int
+		= container_of(dev, struct iio_event_interface, dev);

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#590: FILE: drivers/iio/industrialio-core.c:455:
+		printk(KERN_ERR "%s: failed to allocate char dev region\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#609: FILE: drivers/iio/industrialio-core.c:474:
+		printk(KERN_ERR

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#697: FILE: drivers/iio/industrialio-core.c:562:
+{
+

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#731: FILE: drivers/iio/industrialio-core.c:596:
+	while (attrq != attrp) {
+			sysfs_remove_file_from_group(&dev_info->dev.kobj,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#733: FILE: drivers/iio/industrialio-core.c:598:
+			sysfs_remove_file_from_group(&dev_info->dev.kobj,
+					     *attrq,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#747: FILE: drivers/iio/industrialio-core.c:612:
+	if (dev_info->event_conf_attrs
+		&& dev_info->event_conf_attrs[i].attrs) {

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#768: FILE: drivers/iio/industrialio-core.c:633:
+	dev_info->event_interfaces =
+		kzalloc(sizeof(struct iio_event_interface)
+			*dev_info->num_interrupt_lines,
+			GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#770: FILE: drivers/iio/industrialio-core.c:635:
+			*dev_info->num_interrupt_lines,
 			^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev_info->event_interfaces"
#772: FILE: drivers/iio/industrialio-core.c:637:
+	if (dev_info->event_interfaces == NULL) {

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#778: FILE: drivers/iio/industrialio-core.c:643:
+				       *dev_info->num_interrupt_lines,
 				       ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev_info->interrupts"
#780: FILE: drivers/iio/industrialio-core.c:645:
+	if (dev_info->interrupts == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#814: FILE: drivers/iio/industrialio-core.c:679:
+		snprintf(dev_info->event_interfaces[i]._attrname, 20,
+			"event_line%d_sources", i);

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#816: FILE: drivers/iio/industrialio-core.c:681:
+		dev_info->event_attrs[i].name
+			= (const char *)

WARNING:SIZEOF_PARENTHESIS: sizeof *dev should be sizeof(*dev)
#892: FILE: drivers/iio/industrialio-core.c:757:
+	struct iio_dev *dev = kzalloc(sizeof *dev, GFP_KERNEL);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#937: FILE: drivers/iio/industrialio-core.c:802:
+			"Failed to register event set \n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#989: FILE: include/linux/iio/chrdev.h:1:
+/* The industrial I/O core - character device related

WARNING:TYPO_SPELLING: 'occurance' may be misspelled - perhaps 'occurrence'?
#1024: FILE: include/linux/iio/chrdev.h:36:
+ * @timestamp:	best estimate of time of event occurance (often from
               	                               ^^^^^^^^^

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#1033: FILE: include/linux/iio/chrdev.h:45:
+ * struct iio_detected_event_list - list element for events that have occured
                                                                       ^^^^^^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1044: FILE: include/linux/iio/chrdev.h:56:
+};
+/**

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1052: FILE: include/linux/iio/chrdev.h:64:
+	spinlock_t			lock;

WARNING:TYPO_SPELLING: 'assocated' may be misspelled - perhaps 'associated'?
#1057: FILE: include/linux/iio/chrdev.h:69:
+ * @dev:		device assocated with event interface
         		       ^^^^^^^^^

WARNING:TYPO_SPELLING: 'indentifier' may be misspelled - perhaps 'identifier'?
#1064: FILE: include/linux/iio/chrdev.h:76:
+ * @id:			indentifier to allow the event interface to know which
        			^^^^^^^^^^^

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#1075: FILE: include/linux/iio/chrdev.h:87:
+	struct mutex				event_list_lock;

WARNING:TYPO_SPELLING: 'useage' may be misspelled - perhaps 'usage'?
#1092: FILE: include/linux/iio/chrdev.h:104:
+ * @exist_lock:		prevents race conditions related to refcount useage.
                		                                             ^^^^^^

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#1101: FILE: include/linux/iio/chrdev.h:113:
+	struct mutex		exist_lock;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1113: FILE: include/linux/iio/iio.h:1:
+/* The industrial I/O core

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1186: FILE: include/linux/iio/iio.h:74:
+ * call to iio_device_register. */

WARNING:TYPO_SPELLING: 'recieved' may be misspelled - perhaps 'received'?
#1213: FILE: include/linux/iio/iio.h:101:
+ * @pollfunc:		[DRIVER] function run on trigger being recieved
              		                                       ^^^^^^^^

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#1232: FILE: include/linux/iio/iio.h:120:
+	struct mutex			mlock;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1281: FILE: include/linux/iio/iio.h:169:
+static inline int iio_scan_mask_count_to_right(struct iio_dev *dev_info,
+int bit)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1285: FILE: include/linux/iio/iio.h:173:
+	int mask = (1 << bit);
+	if (bit > IIO_MAX_SCAN_LENGTH)

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1324: FILE: include/linux/iio/iio.h:212:
+	spinlock_t			ev_list_lock;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1347: FILE: include/linux/iio/iio.h:235:
+
+

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#1354: FILE: include/linux/iio/iio.h:242:
+ * @timestamp:		When the event occured
               		               ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1357: FILE: include/linux/iio/iio.h:245:
+int iio_push_event(struct iio_dev *dev_info,
+		  int ev_line,

WARNING:TYPO_SPELLING: 'intiialize' may be misspelled - perhaps 'initialize'?
#1384: FILE: include/linux/iio/iio.h:272:
+ * iio_init_work_cont() - intiialize the elements of a work container
                           ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'dependant' may be misspelled - perhaps 'dependent'?
#1388: FILE: include/linux/iio/iio.h:276:
+ * @_add: driver dependant, typically a register address
                  ^^^^^^^^^

WARNING:TYPO_SPELLING: 'dependant' may be misspelled - perhaps 'dependent'?
#1389: FILE: include/linux/iio/iio.h:277:
+ * @_mask: driver dependant, typically a bit mask for a register
                   ^^^^^^^^^

WARNING:TYPO_SPELLING: 'dependant' may be misspelled - perhaps 'dependent'?
#1390: FILE: include/linux/iio/iio.h:278:
+ * @_st: driver dependant, typically pointer to a device state structure
                 ^^^^^^^^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1404: FILE: include/linux/iio/iio.h:292:
+}
+/**

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1412: FILE: include/linux/iio/iio.h:300:
+int __iio_push_event(struct iio_event_interface *ev_int,
+		    int ev_code,

WARNING:TYPO_SPELLING: 'evnet' may be misspelled - perhaps 'event'?
#1418: FILE: include/linux/iio/iio.h:306:
+ * @ev:			the evnet to be changed
        			    ^^^^^

WARNING:TYPO_SPELLING: 'elemenents' may be misspelled - perhaps 'elements'?
#1448: FILE: include/linux/iio/iio.h:336:
+/* Used to distinguish between bipolar and unipolar scan elemenents.
                                                          ^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1450: FILE: include/linux/iio/iio.h:338:
+ * in the future!*/

WARNING:REPEATED_WORD: Possible repeated word: 'have'
#1468: FILE: include/linux/iio/iio.h:356:
+ * to_iio_dev() - get iio_dev for which we have have the struct device

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1530: FILE: include/linux/iio/sysfs.h:1:
+/* The industrial I/O core

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1551: FILE: include/linux/iio/sysfs.h:22:
+ * @listel:	list header to allow addition to list of event handlers
+*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1574: FILE: include/linux/iio/sysfs.h:45:
+__init_iio_chrdev_minor_attr(struct iio_chrdev_minor_attr *minor_attr,
+			   const char *name,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1578: FILE: include/linux/iio/sysfs.h:49:
+
+

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1579: FILE: include/linux/iio/sysfs.h:50:
+#define to_iio_chrdev_minor_attr(_dev_attr) \
+	container_of(_dev_attr, struct iio_chrdev_minor_attr, dev_attr);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:TYPO_SPELLING: 'dependant' may be misspelled - perhaps 'dependent'?
#1612: FILE: include/linux/iio/sysfs.h:83:
+/* Some attributes will be hard coded (device dependant) and not require an
                                               ^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1613: FILE: include/linux/iio/sysfs.h:84:
+/* Some attributes will be hard coded (device dependant) and not require an
+   address, in these cases pass a negative */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1613: FILE: include/linux/iio/sysfs.h:84:
+   address, in these cases pass a negative */

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1625: FILE: include/linux/iio/sysfs.h:96:
+	struct iio_dev_attr iio_dev_attr_##_name		\
+	= IIO_ATTR(_name, _mode, _show, _store, _addr)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1627: FILE: include/linux/iio/sysfs.h:98:
+
+

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1630: FILE: include/linux/iio/sysfs.h:101:
+	struct iio_dev_attr iio_dev_attr_##_name			\
+	= IIO_ATTR_2(_name, _mode, _show, _store, _addr, _val2)

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1634: FILE: include/linux/iio/sysfs.h:105:
+	struct iio_const_attr iio_const_attr_##_name			\
+	= { .string = _string,						\

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1635: FILE: include/linux/iio/sysfs.h:106:
+	    .dev_attr = __ATTR(_name, S_IRUGO, iio_read_const_attr, NULL)}

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1645: FILE: include/linux/iio/sysfs.h:116:
+	IIO_DEVICE_ATTR(revision, S_IRUGO, _show, NULL, 0)

WARNING:TYPO_SPELLING: 'dependant' may be misspelled - perhaps 'dependent'?
#1647: FILE: include/linux/iio/sysfs.h:118:
+ * IIO_DEV_ATTR_NAME: chip type dependant identifier
                                 ^^^^^^^^^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1650: FILE: include/linux/iio/sysfs.h:121:
+	IIO_DEVICE_ATTR(name, S_IRUGO, _show, NULL, 0)

WARNING:TYPO_SPELLING: 'dependant' may be misspelled - perhaps 'dependent'?
#1661: FILE: include/linux/iio/sysfs.h:132:
+ * May be mode dependant on some devices
                ^^^^^^^^^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1664: FILE: include/linux/iio/sysfs.h:135:
+	IIO_DEVICE_ATTR(available_sampling_frequency, S_IRUGO, _show, NULL, 0)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1685: FILE: include/linux/iio/sysfs.h:156:
+	IIO_DEVICE_ATTR(available_scan_modes, S_IRUGO, _show, NULL, 0)

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1690: FILE: include/linux/iio/sysfs.h:161:
+#define IIO_DEV_ATTR_SCAN(_show)		\
+	IIO_DEVICE_ATTR(scan, S_IRUGO, _show, NULL, 0);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1691: FILE: include/linux/iio/sysfs.h:162:
+	IIO_DEVICE_ATTR(scan, S_IRUGO, _show, NULL, 0);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1697: FILE: include/linux/iio/sysfs.h:168:
+	IIO_DEVICE_ATTR(in##_number, S_IRUGO, _show, NULL, _number)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1699: FILE: include/linux/iio/sysfs.h:170:
+
+

WARNING:TYPO_SPELLING: 'dependant' may be misspelled - perhaps 'dependent'?
#1703: FILE: include/linux/iio/sysfs.h:174:
+ * Success may be dependant on attachment of trigger previously
                   ^^^^^^^^^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1706: FILE: include/linux/iio/sysfs.h:177:
+	IIO_DEVICE_ATTR(sw_ring_enable, S_IRUGO | S_IWUSR, _show, _store, 0)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1715: FILE: include/linux/iio/sysfs.h:186:
+	IIO_DEVICE_ATTR(hw_ring_enable, S_IRUGO | S_IWUSR, _show, _store, 0)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1727: FILE: include/linux/iio/sysfs.h:198:
+	IIO_DEVICE_ATTR(bpse_available, S_IRUGO, _show, NULL, 0)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1733: FILE: include/linux/iio/sysfs.h:204:
+	IIO_DEVICE_ATTR(temp, S_IRUGO, _show, NULL, 0)

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1741: FILE: include/linux/iio/sysfs.h:212:
+#define IIO_EVENT_SH(_name, _handler)					\
+	static struct iio_event_handler_list				\
+	iio_event_##_name = {						\
+		.handler = _handler,					\
+		.refcount = 0,						\
+		.exist_lock = __MUTEX_INITIALIZER(iio_event_##_name	\
+						  .exist_lock),		\
+		.list = {						\
+			.next = &iio_event_##_name.list,		\
+			.prev = &iio_event_##_name.list,		\
+		},							\
+	};

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '_ev_list' may be better as '(_ev_list)' to avoid precedence issues
#1758: FILE: include/linux/iio/sysfs.h:229:
+#define IIO_EVENT_ATTR_SH(_name, _ev_list, _show, _store, _mask)	\
+	static struct iio_event_attr					\
+	iio_event_attr_##_name						\
+	= { .dev_attr = __ATTR(_name, S_IRUGO | S_IWUSR,		\
+			       _show, _store),				\
+	    .mask = _mask,						\
+	    .listel = &_ev_list };

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1758: FILE: include/linux/iio/sysfs.h:229:
+#define IIO_EVENT_ATTR_SH(_name, _ev_list, _show, _store, _mask)	\
+	static struct iio_event_attr					\
+	iio_event_attr_##_name						\
+	= { .dev_attr = __ATTR(_name, S_IRUGO | S_IWUSR,		\
+			       _show, _store),				\
+	    .mask = _mask,						\
+	    .listel = &_ev_list };

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1761: FILE: include/linux/iio/sysfs.h:232:
+	iio_event_attr_##_name						\
+	= { .dev_attr = __ATTR(_name, S_IRUGO | S_IWUSR,		\

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1761: FILE: include/linux/iio/sysfs.h:232:
+	= { .dev_attr = __ATTR(_name, S_IRUGO | S_IWUSR,		\

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1769: FILE: include/linux/iio/sysfs.h:240:
+#define IIO_EVENT_ATTR(_name, _show, _store, _mask, _handler)		\
+	static struct iio_event_handler_list				\
+	iio_event_##_name = {						\
+		.handler = _handler,					\
+	};								\
+	static struct							\
+	iio_event_attr							\
+	iio_event_attr_##_name						\
+	= { .dev_attr = __ATTR(_name, S_IRUGO | S_IWUSR,		\
+			       _show, _store),				\
+	    .mask = _mask,						\
+	    .listel = &iio_event_##_name };				\
+

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1777: FILE: include/linux/iio/sysfs.h:248:
+	iio_event_attr_##_name						\
+	= { .dev_attr = __ATTR(_name, S_IRUGO | S_IWUSR,		\

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1777: FILE: include/linux/iio/sysfs.h:248:
+	= { .dev_attr = __ATTR(_name, S_IRUGO | S_IWUSR,		\

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1829: FILE: include/linux/iio/trigger_consumer.h:1:
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1847: FILE: include/linux/iio/trigger_consumer.h:19:
+};
+/**

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000101242.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 64 warnings, 41 checks, 1727 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000101242.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
