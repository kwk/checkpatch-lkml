WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#56: FILE: ltt/ltt-channels.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#57: FILE: ltt/ltt-channels.c:2:
+ * ltt/ltt-channels.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#112: FILE: ltt/ltt-channels.c:57:
+	if (atomic_read(&index_kref.refcount) == 0
+	    && atomic_read(&setting->kref.refcount) == 0) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#152: FILE: ltt/ltt-channels.c:97:
+		if (atomic_read(&setting->kref.refcount) == 0)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#154: FILE: ltt/ltt-channels.c:99:
+		else {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#165: FILE: ltt/ltt-channels.c:110:
+	strncpy(setting->name, name, PATH_MAX-1);
 	                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#251: FILE: ltt/ltt-channels.c:196:
+		if (!strcmp(iter->name, name)
+		    && atomic_read(&iter->kref.refcount))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*channel)...) over kzalloc(sizeof(struct ltt_channel_struct)...)
#301: FILE: ltt/ltt-channels.c:246:
+	channel = kzalloc(sizeof(struct ltt_channel_struct) * free_index,

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#301: FILE: ltt/ltt-channels.c:246:
+	channel = kzalloc(sizeof(struct ltt_channel_struct) * free_index,
+			  GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#399: FILE: include/linux/ltt-channels.h:1:
+#ifndef _LTT_CHANNELS_H

WARNING:SPACING: Unnecessary space before function pointer arguments
#437: FILE: include/linux/ltt-channels.h:39:
+	void (*buffer_begin) (struct rchan_buf *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#438: FILE: include/linux/ltt-channels.h:40:
+	void (*buffer_begin) (struct rchan_buf *buf,
+			u64 tsc, unsigned int subbuf_idx);

WARNING:SPACING: Unnecessary space before function pointer arguments
#443: FILE: include/linux/ltt-channels.h:45:
+	void (*buffer_end) (struct rchan_buf *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#444: FILE: include/linux/ltt-channels.h:46:
+	void (*buffer_end) (struct rchan_buf *buf,
+			u64 tsc, unsigned int offset, unsigned int subbuf_idx);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000158727.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 8 checks, 432 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000158727.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
