WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
It's important to note that freezing can be incomplete. In that case we return

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#90: FILE: include/linux/cgroup_freezer.h:1:
+#ifndef _LINUX_CGROUP_FREEZER_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#121: FILE: include/linux/cgroup_freezer.h:32:
+	spinlock_t lock;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#124: FILE: include/linux/cgroup_freezer.h:35:
+static inline struct freezer *cgroup_freezer(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#127: FILE: include/linux/cgroup_freezer.h:38:
+	return container_of(

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#181: FILE: init/Kconfig:326:
+config CGROUP_FREEZER
+        bool "control group freezer subsystem"
+        depends on CGROUPS
+        help
+          Provides a way to freeze and unfreeze all tasks in a
+	  cgroup
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#214: FILE: kernel/cgroup_freezer.c:1:
+/*

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#237: FILE: kernel/cgroup_freezer.c:24:
+static const char *freezer_state_strs[] = {

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#239: FILE: kernel/cgroup_freezer.c:26:
+	"FREEZING\n" ,
 	             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#243: FILE: kernel/cgroup_freezer.c:30:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#246: FILE: kernel/cgroup_freezer.c:33:
+
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#247: FILE: kernel/cgroup_freezer.c:34:
+static struct cgroup_subsys_state *freezer_create(

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*freezer)...) over kzalloc(sizeof(struct freezer)...)
#255: FILE: kernel/cgroup_freezer.c:42:
+	freezer = kzalloc(sizeof(struct freezer), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:LINE_SPACING: Please don't use multiple blank lines
#270: FILE: kernel/cgroup_freezer.c:57:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#396: FILE: kernel/cgroup_freezer.c:183:
+			 * "echo FROZEN > freezer.state" returned -EBUSY */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buffer"
#431: FILE: kernel/cgroup_freezer.c:218:
+	if (buffer == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: braces {} should be used on all arms of this statement
#440: FILE: kernel/cgroup_freezer.c:227:
+	if (strcmp(buffer, "RUNNING") == 0)
[...]
+	else if (strcmp(buffer, "FROZEN") == 0)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#444: FILE: kernel/cgroup_freezer.c:231:
+	else {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000291241.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 6 warnings, 11 checks, 386 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000291241.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
