WARNING:TYPO_SPELLING: 'funtionality' may be misspelled - perhaps 'functionality'?
#36: 
separated the suspend to RAM and standby funtionality from the
                                         ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1046: FILE: kernel/power/hibernate.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1047: FILE: kernel/power/hibernate.c:2:
+ * kernel/power/hibernate.c - Hibernation (a.k.a suspend-to-disk) support.

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1075: FILE: kernel/power/hibernate.c:30:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1076: FILE: kernel/power/hibernate.c:31:
+static int noresume = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1091: FILE: kernel/power/hibernate.c:46:
+};
+#define HIBERNATION_MAX (__HIBERNATION_AFTER_LAST-1)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1091: FILE: kernel/power/hibernate.c:46:
+#define HIBERNATION_MAX (__HIBERNATION_AFTER_LAST-1)
                                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct platform_hibernation_ops should normally be const
#1096: FILE: kernel/power/hibernate.c:51:
+static struct platform_hibernation_ops *hibernation_ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct platform_hibernation_ops should normally be const
#1103: FILE: kernel/power/hibernate.c:58:
+void hibernation_set_ops(struct platform_hibernation_ops *ops)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1106: FILE: kernel/power/hibernate.c:61:
+	if (ops && !(ops->begin && ops->end &&  ops->pre_snapshot
+	    && ops->prepare && ops->finish && ops->enter && ops->pre_restore

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1107: FILE: kernel/power/hibernate.c:62:
+	    && ops->prepare && ops->finish && ops->enter && ops->pre_restore
+	    && ops->restore_cleanup)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1132: FILE: kernel/power/hibernate.c:87:
+	printk(KERN_INFO "hibernation debug: Waiting for 5 seconds.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1271: FILE: kernel/power/hibernate.c:226:
+		printk(KERN_ERR "PM: Some devices failed to power down, "

WARNING:SPLIT_STRING: quoted string split across lines
#1272: FILE: kernel/power/hibernate.c:227:
+		printk(KERN_ERR "PM: Some devices failed to power down, "
+			"aborting hibernation\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:CAMELCASE: Avoid CamelCase: <Platform_finish>
#1278: FILE: kernel/power/hibernate.c:233:
+		goto Platform_finish;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1282: FILE: kernel/power/hibernate.c:237:
+	if (error || hibernation_test(TEST_CPUS)
+	    || hibernation_testmode(HIBERNATION_TEST))

CHECK:CAMELCASE: Avoid CamelCase: <Enable_cpus>
#1283: FILE: kernel/power/hibernate.c:238:
+		goto Enable_cpus;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1289: FILE: kernel/power/hibernate.c:244:
+		printk(KERN_ERR "PM: Some system devices failed to power down, "

WARNING:SPLIT_STRING: quoted string split across lines
#1290: FILE: kernel/power/hibernate.c:245:
+		printk(KERN_ERR "PM: Some system devices failed to power down, "
+			"aborting hibernation\n");

CHECK:CAMELCASE: Avoid CamelCase: <Enable_irqs>
#1291: FILE: kernel/power/hibernate.c:246:
+		goto Enable_irqs;

CHECK:CAMELCASE: Avoid CamelCase: <Power_up>
#1295: FILE: kernel/power/hibernate.c:250:
+		goto Power_up;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1301: FILE: kernel/power/hibernate.c:256:
+		printk(KERN_ERR "PM: Error %d creating hibernation image\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1302: FILE: kernel/power/hibernate.c:257:
+		printk(KERN_ERR "PM: Error %d creating hibernation image\n",
+			error);

CHECK:CAMELCASE: Avoid CamelCase: <Close>
#1349: FILE: kernel/power/hibernate.c:304:
+		goto Close;

CHECK:CAMELCASE: Avoid CamelCase: <Recover_platform>
#1354: FILE: kernel/power/hibernate.c:309:
+		goto Recover_platform;

CHECK:CAMELCASE: Avoid CamelCase: <Resume_devices>
#1362: FILE: kernel/power/hibernate.c:317:
+ Resume_devices:

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1389: FILE: kernel/power/hibernate.c:344:
+		printk(KERN_ERR "PM: Some devices failed to power down, "

WARNING:SPLIT_STRING: quoted string split across lines
#1390: FILE: kernel/power/hibernate.c:345:
+		printk(KERN_ERR "PM: Some devices failed to power down, "
+			"aborting resume\n");

CHECK:CAMELCASE: Avoid CamelCase: <Cleanup>
#1396: FILE: kernel/power/hibernate.c:351:
+		goto Cleanup;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1418: FILE: kernel/power/hibernate.c:373:
+		BUG_ON(!error);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1482: FILE: kernel/power/hibernate.c:437:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:CAMELCASE: Avoid CamelCase: <Platofrm_finish>
#1508: FILE: kernel/power/hibernate.c:463:
+		goto Platofrm_finish;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1518: FILE: kernel/power/hibernate.c:473:
+	while (1);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#1521: FILE: kernel/power/hibernate.c:476:
+	 * We don't need to reenable the nonboot CPUs or resume consoles, since
 	                    ^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1567: FILE: kernel/power/hibernate.c:522:
+	printk(KERN_CRIT "PM: Please power down manually\n");

ERROR:SPACING: space required before the open parenthesis '('
#1568: FILE: kernel/power/hibernate.c:523:
+	while(1);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1568: FILE: kernel/power/hibernate.c:523:
+	while(1);

CHECK:CAMELCASE: Avoid CamelCase: <Unlock>
#1594: FILE: kernel/power/hibernate.c:549:
+		goto Unlock;

CHECK:CAMELCASE: Avoid CamelCase: <Exit>
#1600: FILE: kernel/power/hibernate.c:555:
+		goto Exit;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1611: FILE: kernel/power/hibernate.c:566:
+	printk(KERN_INFO "PM: Syncing filesystems ... ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1613: FILE: kernel/power/hibernate.c:568:
+	printk("done.\n");

CHECK:CAMELCASE: Avoid CamelCase: <Finish>
#1617: FILE: kernel/power/hibernate.c:572:
+		goto Finish;

CHECK:CAMELCASE: Avoid CamelCase: <Thaw>
#1620: FILE: kernel/power/hibernate.c:575:
+		goto Thaw;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1654: FILE: kernel/power/hibernate.c:609:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <Check_image>
#1691: FILE: kernel/power/hibernate.c:646:
+		goto Check_image;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1724: FILE: kernel/power/hibernate.c:679:
+	pr_debug("PM: Resume from partition %d:%d\n",
+		MAJOR(swsusp_resume_device), MINOR(swsusp_resume_device));

CHECK:CAMELCASE: Avoid CamelCase: <Done>
#1754: FILE: kernel/power/hibernate.c:709:
+		goto Done;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1763: FILE: kernel/power/hibernate.c:718:
+	printk(KERN_ERR "PM: Restore failed, recovering.\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1782: FILE: kernel/power/hibernate.c:737:
+
+

WARNING:TYPO_SPELLING: 'fo' may be misspelled - perhaps 'of'?
#1801: FILE: kernel/power/hibernate.c:756:
+ *	choose 'shutdown' or 'reboot' as alternatives, as well as one fo the
   	                                                              ^^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1844: FILE: kernel/power/hibernate.c:799:
+	return buf-start;
 	          ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1847: FILE: kernel/power/hibernate.c:802:
+
+

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1863: FILE: kernel/power/hibernate.c:818:
+		if (len == strlen(hibernation_modes[i])
+		    && !strncmp(buf, hibernation_modes[i], len)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1868: FILE: kernel/power/hibernate.c:823:
+	if (mode != HIBERNATION_INVALID) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1882: FILE: kernel/power/hibernate.c:837:
+	} else

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1897: FILE: kernel/power/hibernate.c:852:
+	return sprintf(buf,"%d:%d\n", MAJOR(swsusp_resume_device),
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1911: FILE: kernel/power/hibernate.c:866:
+	res = MKDEV(maj,min);
 	               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1918: FILE: kernel/power/hibernate.c:873:
+	printk(KERN_INFO "PM: Starting manual resume from disk\n");

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#1939: FILE: kernel/power/hibernate.c:894:
+	if (sscanf(buf, "%lu", &size) == 1) {
+		image_size = size;
+		return n;
+	}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1949: FILE: kernel/power/hibernate.c:904:
+static struct attribute * g[] = {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1956: FILE: kernel/power/hibernate.c:911:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1961: FILE: kernel/power/hibernate.c:916:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1969: FILE: kernel/power/hibernate.c:924:
+
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#1975: FILE: kernel/power/hibernate.c:930:
+	strncpy( resume_file, str, 255 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1975: FILE: kernel/power/hibernate.c:930:
+	strncpy( resume_file, str, 255 );

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#1986: FILE: kernel/power/hibernate.c:941:
+	if (sscanf(str, "%llu", &offset) == 1)
+		swsusp_resume_block = offset;

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#1998: FILE: kernel/power/hibernate.c:953:
+__setup("noresume", noresume_setup);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#1999: FILE: kernel/power/hibernate.c:954:
+__setup("resume_offset=", resume_offset_setup);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#2000: FILE: kernel/power/hibernate.c:955:
+__setup("resume=", resume_setup);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000114542.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 24 warnings, 36 checks, 978 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000114542.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
