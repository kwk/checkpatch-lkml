WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#79: FILE: include/linux/pagemap.h:154:
+	VM_BUG_ON(!in_atomic());

in_atomic() is not for driver use so any such use is reported as an ERROR.
Also in_atomic() is often used to determine if sleeping is permitted,
but it is not reliable in this use model.  Therefore its use is
strongly discouraged.

However, in_atomic() is ok for core kernel use.

See: https://lore.kernel.org/lkml/20080320201723.b87b3732.akpm@linux-foundation.org/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#114: FILE: arch/powerpc/mm/gup.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#125: FILE: arch/powerpc/mm/gup.c:12:
+#include <asm/pgtable.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#133: FILE: arch/powerpc/mm/gup.c:20:
+static noinline int gup_pte_range(pmd_t pmd, unsigned long addr,
+		unsigned long end, int write, struct page **pages, int *nr)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#138: FILE: arch/powerpc/mm/gup.c:25:
+	result = _PAGE_PRESENT|_PAGE_USER;
 	                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#167: FILE: arch/powerpc/mm/gup.c:54:
+static noinline int gup_huge_pte(pte_t *ptep, unsigned long *addr,
+		unsigned long end, int write, struct page **pages, int *nr)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#180: FILE: arch/powerpc/mm/gup.c:67:
+	mask = _PAGE_PRESENT|_PAGE_USER;
 	                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#215: FILE: arch/powerpc/mm/gup.c:102:
+static int gup_pmd_range(pud_t pud, unsigned long addr, unsigned long end,
+		int write, struct page **pages, int *nr)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#235: FILE: arch/powerpc/mm/gup.c:122:
+static int gup_pud_range(pgd_t pgd, unsigned long addr, unsigned long end,
+		int write, struct page **pages, int *nr)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#263: FILE: arch/powerpc/mm/gup.c:150:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#265: FILE: arch/powerpc/mm/gup.c:152:
+	if (unlikely(!access_ok(write ? VERIFY_WRITE : VERIFY_READ,
+					start, nr_pages*PAGE_SIZE)))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#265: FILE: arch/powerpc/mm/gup.c:152:
+					start, nr_pages*PAGE_SIZE)))
 					               ^

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#287: FILE: arch/powerpc/mm/gup.c:174:
+	 * we can follow the address down to the the page and take a ref on it.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#330: FILE: arch/powerpc/mm/gup.c:217:
+		ret = get_user_pages(current, mm, start,
+			(end - start) >> PAGE_SHIFT, write, 0, pages, NULL);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000271141.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 11 checks, 287 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000271141.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
