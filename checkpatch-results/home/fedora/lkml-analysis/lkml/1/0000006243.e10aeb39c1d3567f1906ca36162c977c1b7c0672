WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#52: 
In order of this model to be useable, both the data structure that
                             ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#96: FILE: arch/arm/include/asm/unistd.h:395:
+#define __NR_sched_setscheduler_ex	(__NR_SYSCALL_BASE+366)
                                   	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#97: FILE: arch/arm/include/asm/unistd.h:396:
+#define __NR_sched_setparam_ex		(__NR_SYSCALL_BASE+367)
                               		                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#98: FILE: arch/arm/include/asm/unistd.h:397:
+#define __NR_sched_getparam_ex		(__NR_SYSCALL_BASE+368)
                               		                  ^

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#99: FILE: arch/arm/include/asm/unistd.h:397:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#105: FILE: arch/arm/kernel/calls.S:400:
+++ b/arch/arm/kernel/calls.S

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#247: FILE: include/linux/sched.h:2102:
+extern int sched_setscheduler_ex(struct task_struct *, int,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#247: FILE: include/linux/sched.h:2102:
+extern int sched_setscheduler_ex(struct task_struct *, int,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#247: FILE: include/linux/sched.h:2102:
+extern int sched_setscheduler_ex(struct task_struct *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sched_param *' should also have an identifier name
#247: FILE: include/linux/sched.h:2102:
+extern int sched_setscheduler_ex(struct task_struct *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sched_param_ex *' should also have an identifier name
#247: FILE: include/linux/sched.h:2102:
+extern int sched_setscheduler_ex(struct task_struct *, int,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#270: FILE: include/linux/syscalls.h:344:
+asmlinkage long sys_sched_setscheduler_ex(pid_t pid, int policy, unsigned =

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#275: FILE: include/linux/syscalls.h:348:
+asmlinkage long sys_sched_setparam_ex(pid_t pid, unsigned len,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#276: FILE: include/linux/syscalls.h:349:
+asmlinkage long sys_sched_setparam_ex(pid_t pid, unsigned len,
+					struct sched_param_ex __user *param);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#280: FILE: include/linux/syscalls.h:353:
+asmlinkage long sys_sched_getparam_ex(pid_t pid, unsigned len,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#281: FILE: include/linux/syscalls.h:354:
+asmlinkage long sys_sched_getparam_ex(pid_t pid, unsigned len,
+					struct sched_param_ex __user *param);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#300: FILE: kernel/sched.c:6297:
+		p->sched_class =3D &dl_sched_class;
 		               ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#300: FILE: kernel/sched.c:6297:
+		p->sched_class =3D &dl_sched_class;
 		                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#320: FILE: kernel/sched.c:6315:
+	struct sched_dl_entity *dl_se =3D &p->dl;
 	                              ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#320: FILE: kernel/sched.c:6315:
+	struct sched_dl_entity *dl_se =3D &p->dl;
 	                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#322: FILE: kernel/sched.c:6317:
+	dl_se->dl_runtime =3D timespec_to_ns(&param_ex->sched_runtime);
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#323: FILE: kernel/sched.c:6318:
+	dl_se->dl_deadline =3D timespec_to_ns(&param_ex->sched_deadline);
 	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#324: FILE: kernel/sched.c:6319:
+	dl_se->flags =3D param_ex->sched_flags;
 	             ^

ERROR:SPACING: spaces required around that '&=' (ctx:WxV)
#325: FILE: kernel/sched.c:6320:
+	dl_se->flags &=3D ~DL_THROTTLED;
 	             ^

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#326: FILE: kernel/sched.c:6321:
+	dl_se->flags |=3D DL_NEW;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#332: FILE: kernel/sched.c:6327:
+	struct sched_dl_entity *dl_se =3D &p->dl;
 	                              ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#332: FILE: kernel/sched.c:6327:
+	struct sched_dl_entity *dl_se =3D &p->dl;
 	                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#334: FILE: kernel/sched.c:6329:
+	param_ex->sched_priority =3D p->rt_priority;
 	                         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#335: FILE: kernel/sched.c:6330:
+	param_ex->sched_runtime =3D ns_to_timespec(dl_se->dl_runtime);
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#336: FILE: kernel/sched.c:6331:
+	param_ex->sched_deadline =3D ns_to_timespec(dl_se->dl_deadline);
 	                         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#337: FILE: kernel/sched.c:6332:
+	param_ex->sched_flags =3D dl_se->flags;
 	                      ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#348: FILE: kernel/sched.c:6343:
+	return prm && timespec_to_ns(&prm->sched_deadline) !=3D 0 &&
 	                                                   ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#349: FILE: kernel/sched.c:6344:
+	       timespec_to_ns(&prm->sched_deadline) >=3D
 	                                            ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#374: FILE: kernel/sched.c:6403:
+	    (rt_policy(policy) !=3D (param->sched_priority !=3D 0)))

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#374: FILE: kernel/sched.c:6403:
+	    (rt_policy(policy) !=3D (param->sched_priority !=3D 0)))
 	                       ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#374: FILE: kernel/sched.c:6403:
+	    (rt_policy(policy) !=3D (param->sched_priority !=3D 0)))
 	                                                   ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#422: FILE: kernel/sched.c:6567:
 }
+static int

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#423: FILE: kernel/sched.c:6568:
+do_sched_setscheduler_ex(pid_t pid, int policy, unsigned len,

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#441: FILE: kernel/sched.c:6586:
+	retval =3D -ESRCH;
 	       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#441: FILE: kernel/sched.c:6586:
+	retval =3D -ESRCH;
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#442: FILE: kernel/sched.c:6587:
+	p =3D find_process_by_pid(pid);
 	  ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#443: FILE: kernel/sched.c:6588:
+	if (p !=3D NULL) {
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#444: FILE: kernel/sched.c:6589:
+		lparam.sched_priority =3D lparam_ex.sched_priority;
 		                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#445: FILE: kernel/sched.c:6590:
+		retval =3D sched_setscheduler_ex(p, policy, &lparam, &lparam_ex);
 		       ^

WARNING:TYPO_SPELLING: 'containg' may be misspelled - perhaps 'containing'?
#466: FILE: kernel/sched.c:6619:
+ * @param: structure containg the extended parameters.
                      ^^^^^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#469: FILE: kernel/sched.c:6622:
+		unsigned, len, struct sched_param_ex __user *, param_ex)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#491: FILE: kernel/sched.c:6645:
+SYSCALL_DEFINE3(sched_setparam_ex, pid_t, pid, unsigned, len,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#505: FILE: kernel/sched.c:6715:
 }
+/**

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#511: FILE: kernel/sched.c:6721:
+SYSCALL_DEFINE3(sched_getparam_ex, pid_t, pid, unsigned, len,

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#524: FILE: kernel/sched.c:6734:
+	p =3D find_process_by_pid(pid);
 	  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#525: FILE: kernel/sched.c:6735:
+	retval =3D -ESRCH;
 	       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#525: FILE: kernel/sched.c:6735:
+	retval =3D -ESRCH;
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#529: FILE: kernel/sched.c:6739:
+	retval =3D security_task_getscheduler(p);
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#540: FILE: kernel/sched.c:6750:
+	retval =3D copy_to_user(param_ex, &lp, len) ? -EFAULT : 0;
 	       ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#548: FILE: kernel/sched.c:6758:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000006243.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 26 errors, 15 warnings, 14 checks, 416 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000006243.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
