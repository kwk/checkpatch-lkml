CHECK:SPACING: No space is necessary after a cast
#161: FILE: arch/um/include/kern_util.h:17:
+	((((unsigned long) addr) + PAGE_SIZE - 1) & PAGE_MASK)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#168: FILE: arch/um/include/kern_util.h:20:
+extern void free_stack(unsigned long stack, int order);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#172: FILE: arch/um/include/kern_util.h:23:
+extern void copy_sc(struct uml_pt_regs *regs, void *from);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#173: FILE: arch/um/include/kern_util.h:24:
+extern void interrupt_end(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#174: FILE: arch/um/include/kern_util.h:25:
+extern void relay_signal(int sig, struct uml_pt_regs *regs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#236: FILE: arch/um/include/kern_util.h:34:
+extern void initial_thread_cb(void (*proc)(void *), void *arg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#238: FILE: arch/um/include/kern_util.h:36:
+extern void timer_handler(int sig, struct uml_pt_regs *regs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#242: FILE: arch/um/include/kern_util.h:38:
+extern void timer_handler(int sig, struct uml_pt_regs *regs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#245: FILE: arch/um/include/kern_util.h:40:
+extern int start_uml(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#246: FILE: arch/um/include/kern_util.h:41:
+extern void paging_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#249: FILE: arch/um/include/kern_util.h:43:
+extern void uml_cleanup(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#250: FILE: arch/um/include/kern_util.h:44:
+extern void do_uml_exitcalls(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#259: FILE: arch/um/include/kern_util.h:51:
+extern void *get_current(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#260: FILE: arch/um/include/kern_util.h:52:
+extern int copy_from_user_proc(void *to, void *from, int size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#261: FILE: arch/um/include/kern_util.h:53:
+extern int cpu(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#262: FILE: arch/um/include/kern_util.h:54:
+extern char *uml_strdup(const char *string);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#267: FILE: arch/um/include/kern_util.h:57:
+extern unsigned long from_irq_stack(int nested);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#269: FILE: arch/um/include/kern_util.h:59:
+extern void syscall_trace(struct uml_pt_regs *regs, int entryexit);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#270: FILE: arch/um/include/kern_util.h:60:
+extern int singlestepping(void *t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#272: FILE: arch/um/include/kern_util.h:62:
+extern void segv_handler(int sig, struct uml_pt_regs *regs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#273: FILE: arch/um/include/kern_util.h:63:
+extern void bus_handler(int sig, struct uml_pt_regs *regs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#274: FILE: arch/um/include/kern_util.h:64:
+extern void winch(int sig, struct uml_pt_regs *regs);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#276: FILE: arch/um/include/kern_util.h:66:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#582: FILE: arch/um/os-Linux/tty.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#613: FILE: arch/um/os-Linux/tty.c:37:
+		printk(UM_KERN_ERR "get_pty : Couldn't open /dev/ptmx - "

WARNING:SPLIT_STRING: quoted string split across lines
#614: FILE: arch/um/os-Linux/tty.c:38:
+		printk(UM_KERN_ERR "get_pty : Couldn't open /dev/ptmx - "
+		       "err = %d\n", errno);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#627: FILE: arch/um/os-Linux/tty.c:47:
+		printk(UM_KERN_ERR "get_pty : Couldn't grant pty - "

WARNING:SPLIT_STRING: quoted string split across lines
#628: FILE: arch/um/os-Linux/tty.c:48:
+		printk(UM_KERN_ERR "get_pty : Couldn't grant pty - "
+		       "errno = %d\n", -info.err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#637: FILE: arch/um/os-Linux/tty.c:54:
+		printk(UM_KERN_ERR "get_pty : Couldn't unlock pty - "

WARNING:SPLIT_STRING: quoted string split across lines
#638: FILE: arch/um/os-Linux/tty.c:55:
+		printk(UM_KERN_ERR "get_pty : Couldn't unlock pty - "
+		       "errno = %d\n", errno);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000360136.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 23 checks, 447 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000360136.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
