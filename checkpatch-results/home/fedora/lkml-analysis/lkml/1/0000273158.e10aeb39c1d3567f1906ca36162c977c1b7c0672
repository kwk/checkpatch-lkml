CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#79: FILE: arch/x86/kernel/setup.c:139:
+#define ENABLE_CF8_EXT_CFG      (1ULL << 46)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:LINE_SPACING: Missing a blank line after declarations
#84: FILE: arch/x86/kernel/setup.c:144:
+	u64 reg;
+	rdmsrl(MSR_AMD64_NB_CFG, reg);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#94: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#99: FILE: arch/x86/kernel/setup.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#115: FILE: arch/x86/kernel/setup.h:17:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#116: FILE: arch/x86/kernel/setup.h:18:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#122: FILE: arch/x86/kernel/setup.h:24:
+extern void __cpuinit amd_enable_pci_ext_cfg(struct cpuinfo_x86 *c);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bus > 255'
#173: FILE: arch/x86/pci/direct.c:25:
+	if ((bus > 255) || (devfn > 255) || (reg > 4095)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'devfn > 255'
#173: FILE: arch/x86/pci/direct.c:25:
+	if ((bus > 255) || (devfn > 255) || (reg > 4095)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg > 4095'
#173: FILE: arch/x86/pci/direct.c:25:
+	if ((bus > 255) || (devfn > 255) || (reg > 4095)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bus > 255'
#182: FILE: arch/x86/pci/direct.c:56:
+	if ((bus > 255) || (devfn > 255) || (reg > 4095))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'devfn > 255'
#182: FILE: arch/x86/pci/direct.c:56:
+	if ((bus > 255) || (devfn > 255) || (reg > 4095))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg > 4095'
#182: FILE: arch/x86/pci/direct.c:56:
+	if ((bus > 255) || (devfn > 255) || (reg > 4095))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#195: FILE: arch/x86/pci/direct.c:269:
+			printk(KERN_INFO "PCI: Using configuration type 1 "

WARNING:SPLIT_STRING: quoted string split across lines
#196: FILE: arch/x86/pci/direct.c:270:
+			printk(KERN_INFO "PCI: Using configuration type 1 "
+			       "for extended access\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#213: FILE: include/asm-x86/cpufeature.h:82:
+#define X86_FEATURE_PCI_EXT_CFG	(3*32+19) /* PCI extended cfg access */
                                	  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#213: FILE: include/asm-x86/cpufeature.h:82:
+#define X86_FEATURE_PCI_EXT_CFG	(3*32+19) /* PCI extended cfg access */
                                	     ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000273158.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 5 warnings, 10 checks, 140 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000273158.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
