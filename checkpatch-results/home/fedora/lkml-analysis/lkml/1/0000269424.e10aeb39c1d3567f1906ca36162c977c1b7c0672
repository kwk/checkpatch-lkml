ERROR:INITIALISED_STATIC: do not initialise statics to 0
#170: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:45:
+static int max_spu_num_to_index=0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#170: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:45:
+static int max_spu_num_to_index=0;
                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#196: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:71:
+static int max_entries_spu_cpu_map=0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#196: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:71:
+static int max_entries_spu_cpu_map=0;
                                   ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#204: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:79:
+static int add_spu_index(int spu_num) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#213: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:88:
+	for (i=0; i<max_spu_num_to_index; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#213: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:88:
+	for (i=0; i<max_spu_num_to_index; i++)
 	           ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#230: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:105:
+static int get_spu_index(int spu_num) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#234: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:109:
+	for (i=0; i<max_spu_num_to_index; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#234: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:109:
+	for (i=0; i<max_spu_num_to_index; i++)
 	           ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#245: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:120:
+static int valid_spu_num(int spu_num) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#249: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:124:
+	for (i=0; i<max_spu_num_to_index; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#249: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:124:
+	for (i=0; i<max_spu_num_to_index; i++)
 	           ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#257: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:132:
+static int initialize_active_cpu_nums(void) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#265: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:140:
+        for_each_online_cpu(cpu) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:140:
+        for_each_online_cpu(cpu) {$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#266: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:141:
+		if (!(tmp = kzalloc(sizeof(struct list_cpu_nums),

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*tmp)...) over kzalloc(sizeof(struct list_cpu_nums)...)
#266: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:141:
+		if (!(tmp = kzalloc(sizeof(struct list_cpu_nums),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#285: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:160:
+static int get_cpu_buf(int spu_num) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#288: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:163:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#289: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:164:
+	for (i=0; i< max_entries_spu_cpu_map; i++)
+	  if (spu_cpu_map[i].spu_num == spu_num)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#289: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:164:
+	for (i=0; i< max_entries_spu_cpu_map; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxW)
#289: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:164:
+	for (i=0; i< max_entries_spu_cpu_map; i++)
 	           ^

WARNING:TABSTOP: Statements should start on a tabstop
#290: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:165:
+	  if (spu_cpu_map[i].spu_num == spu_num)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 24)
#290: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:165:
+	  if (spu_cpu_map[i].spu_num == spu_num)
+			return spu_cpu_map[i].cpu_num;

WARNING:MISORDERED_TYPE: type 'int unsigned long' should be specified in [[un]signed] [short|int|long|long long] order
#446: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:523:
+	int unsigned long values[NUM_SPU_SYNC_START];

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'int unsigned long' as the int is unnecessary
#446: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:523:
+	int unsigned long values[NUM_SPU_SYNC_START];

WARNING:TYPO_SPELLING: 'mulitple' may be misspelled - perhaps 'multiple'?
#466: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:537:
+	 * call graphs, hence just need lock to prevent mulitple
 	                                                ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: No space is necessary after a cast
#471: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:542:
+	values[2] =(unsigned long int) num_spu_nodes;

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#471: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:542:
+	values[2] =(unsigned long int) num_spu_nodes;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#471: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:542:
+	values[2] =(unsigned long int) num_spu_nodes;
 	          ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#616: FILE: drivers/oprofile/buffer_sync.c:43:
+extern int work_enabled;  // carll added for debug

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#647: FILE: drivers/oprofile/buffer_sync.c:548:
+				if ((available - i) < (num+1))
 				                          ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#653: FILE: drivers/oprofile/buffer_sync.c:554:
+				if (work_enabled == 0) {
+					printk("work_enabled is zero\n");
+				}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#654: FILE: drivers/oprofile/buffer_sync.c:555:
+					printk("work_enabled is zero\n");

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#677: FILE: drivers/oprofile/cpu_buffer.c:36:
+extern int work_enabled;

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#692: FILE: drivers/oprofile/cpu_buffer.c:235:
+void oprofile_add_value(unsigned long *values, int cpu, int num) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#693: FILE: drivers/oprofile/cpu_buffer.c:236:
+	struct oprofile_cpu_buffer * cpu_buf = &cpu_buffer[cpu];

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#696: FILE: drivers/oprofile/cpu_buffer.c:239:
+	if (nr_available_slots(cpu_buf) < num+1) {
 	                                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#703: FILE: drivers/oprofile/cpu_buffer.c:246:
+	for (i=1; i<num; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#703: FILE: drivers/oprofile/cpu_buffer.c:246:
+	for (i=1; i<num; i++)
 	           ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#729: FILE: drivers/oprofile/event_buffer.h:20:
  
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#762: FILE: drivers/oprofile/oprof.c:56:
+	if (oprofile_ops.sync_start

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#763: FILE: drivers/oprofile/oprof.c:57:
+	if (oprofile_ops.sync_start
+	    && ((err = oprofile_ops.sync_start())))

ERROR:CODE_INDENT: code indent should use tabs where possible
#818: FILE: include/linux/oprofile.h:54:
+  ^I/* Start delivering interrupts. */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#818: FILE: include/linux/oprofile.h:54:
+  ^I/* Start delivering interrupts. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#818: FILE: include/linux/oprofile.h:54:
+  ^I/* Start delivering interrupts. */$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000269424.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 26 errors, 14 warnings, 7 checks, 745 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000269424.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
