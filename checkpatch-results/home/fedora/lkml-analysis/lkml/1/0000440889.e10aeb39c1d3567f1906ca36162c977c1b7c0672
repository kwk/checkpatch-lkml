ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#74: FILE: Documentation/vm/slabinfo.c:43:
+int slabs = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#75: FILE: Documentation/vm/slabinfo.c:44:
+int aliases = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#76: FILE: Documentation/vm/slabinfo.c:45:
+int highest_node = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#86: FILE: Documentation/vm/slabinfo.c:54:
+int show_first_alias = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#88: FILE: Documentation/vm/slabinfo.c:56:
+int shrink = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#89: FILE: Documentation/vm/slabinfo.c:57:
+int show_inverted = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#90: FILE: Documentation/vm/slabinfo.c:58:
+int show_single_ref = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#91: FILE: Documentation/vm/slabinfo.c:59:
+int show_totals = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#92: FILE: Documentation/vm/slabinfo.c:60:
+int sort_size = 0;

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#201: FILE: Documentation/vm/slabinfo.c:225:
+		while (*p && *p !=':')
 		                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#230: FILE: Documentation/vm/slabinfo.c:247:
+	printf("Name                 Objects   Objsize    Space "
+		"Slabs/Part/Cpu  O/S O %%Fr %%Ef Flg\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space required after that ';' (ctx:VxV)
#241: FILE: Documentation/vm/slabinfo.c:258:
+	for(a = aliasinfo;a < aliasinfo + aliases; a++) {
 	                 ^

ERROR:SPACING: space required before the open parenthesis '('
#241: FILE: Documentation/vm/slabinfo.c:258:
+	for(a = aliasinfo;a < aliasinfo + aliases; a++) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#242: FILE: Documentation/vm/slabinfo.c:259:
+		if (a->slab == find &&
[...]
+				best = a;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#243: FILE: Documentation/vm/slabinfo.c:260:
+		if (a->slab == find &&
+			(!best || strlen(best->name) < strlen(a->name))) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#245: FILE: Documentation/vm/slabinfo.c:262:
+				if (strncmp(a->name,"kmall", 5) == 0)
 				                   ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#258: FILE: Documentation/vm/slabinfo.c:274:
+^Ireturn ^Is->slabs * (page_size << s->order);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#261: FILE: Documentation/vm/slabinfo.c:277:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#304: FILE: Documentation/vm/slabinfo.c:290:
+	sprintf(dist_str,"%lu/%lu/%d", s->slabs, s->partial, s->cpu_slabs);
 	                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#346: FILE: Documentation/vm/slabinfo.c:317:
+	printf("%-21s %8ld %7d %8s %14s %4d %1d %3ld %3ld %s\n",
+			n, s->objects, s->object_size, size_str, dist_str,

ERROR:SPACING: space required before the open parenthesis '('
#373: FILE: Documentation/vm/slabinfo.c:336:
+		for(node = 0; node <= highest_node; node++)

ERROR:SPACING: space required before the open parenthesis '('
#376: FILE: Documentation/vm/slabinfo.c:339:
+		for(node = 0; node <= highest_node; node++)

ERROR:SPACING: space required before the open parenthesis '('
#381: FILE: Documentation/vm/slabinfo.c:344:
+	for(node = 0; node <= highest_node; node++) {

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxV)
#452: FILE: Documentation/vm/slabinfo.c:408:
+		objects_in_partial = s->objects - (s->slabs - s->partial - s ->cpu_slabs)
 		                                                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#537: FILE: Documentation/vm/slabinfo.c:493:
+	printf("Slabcaches : %3d      Aliases  : %3d     Active: %3d\n",
+			slabs, aliases, used_slabs);

ERROR:SPACING: space required after that ';' (ctx:VxV)
#539: FILE: Documentation/vm/slabinfo.c:495:
+	store_size(b1, total_used);store_size(b2, total_waste);
 	                          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#543: FILE: Documentation/vm/slabinfo.c:499:
+	store_size(b1, total_objects);store_size(b2, total_objects_in_partial);
 	                             ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#551: FILE: Documentation/vm/slabinfo.c:507:
+	store_size(b1, avg_objects);store_size(b2, min_objects);
 	                           ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#552: FILE: Documentation/vm/slabinfo.c:508:
+	store_size(b3, max_objects);store_size(b4, total_objects);
 	                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#554: FILE: Documentation/vm/slabinfo.c:510:
+	printf("# Objects %10s  %10s  %10s  %10s\n",
+			b1,	b2,	b3,	b4);

ERROR:SPACING: space required after that ';' (ctx:VxV)
#556: FILE: Documentation/vm/slabinfo.c:512:
+	store_size(b1, avg_slabs);store_size(b2, min_slabs);
 	                         ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#557: FILE: Documentation/vm/slabinfo.c:513:
+	store_size(b3, max_slabs);store_size(b4, total_slabs);
 	                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#559: FILE: Documentation/vm/slabinfo.c:515:
+	printf("# Slabs   %10s  %10s  %10s  %10s\n",
+			b1,	b2,	b3,	b4);

ERROR:SPACING: space required after that ';' (ctx:VxV)
#561: FILE: Documentation/vm/slabinfo.c:517:
+	store_size(b1, avg_partial);store_size(b2, min_partial);
 	                           ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#562: FILE: Documentation/vm/slabinfo.c:518:
+	store_size(b3, max_partial);store_size(b4, total_partial);
 	                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#564: FILE: Documentation/vm/slabinfo.c:520:
+	printf("# Partial %10s  %10s  %10s  %10s\n",
+			b1,	b2,	b3,	b4);

ERROR:SPACING: space required after that ';' (ctx:VxV)
#565: FILE: Documentation/vm/slabinfo.c:521:
+	store_size(b1, avg_ppart);store_size(b2, min_ppart);
 	                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#568: FILE: Documentation/vm/slabinfo.c:524:
+	printf("Partial   %10s%% %10s%% %10s%%\n",
+			b1,	b2,	b3);

ERROR:SPACING: space required after that ';' (ctx:VxV)
#570: FILE: Documentation/vm/slabinfo.c:526:
+	store_size(b1, avg_size);store_size(b2, min_size);
 	                        ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#571: FILE: Documentation/vm/slabinfo.c:527:
+	store_size(b3, max_size);store_size(b4, total_size);
 	                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#573: FILE: Documentation/vm/slabinfo.c:529:
+	printf("Memory    %10s  %10s  %10s  %10s\n",
+			b1,	b2,	b3,	b4);

ERROR:SPACING: space required after that ';' (ctx:VxV)
#575: FILE: Documentation/vm/slabinfo.c:531:
+	store_size(b1, avg_used);store_size(b2, min_used);
 	                        ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#576: FILE: Documentation/vm/slabinfo.c:532:
+	store_size(b3, max_used);store_size(b4, total_used);
 	                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#578: FILE: Documentation/vm/slabinfo.c:534:
+	printf("Used      %10s  %10s  %10s  %10s\n",
+			b1,	b2,	b3,	b4);

ERROR:SPACING: space required after that ';' (ctx:VxV)
#580: FILE: Documentation/vm/slabinfo.c:536:
+	store_size(b1, avg_slabs);store_size(b2, min_slabs);
 	                         ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#581: FILE: Documentation/vm/slabinfo.c:537:
+	store_size(b3, max_slabs);store_size(b4, total_slabs);
 	                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#583: FILE: Documentation/vm/slabinfo.c:539:
+	printf("Waste     %10s  %10s  %10s  %10s\n",
+			b1,	b2,	b3,	b4);

ERROR:SPACING: space required after that ';' (ctx:VxV)
#589: FILE: Documentation/vm/slabinfo.c:545:
+	store_size(b1, avg_objsize);store_size(b2, min_objsize);
 	                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#592: FILE: Documentation/vm/slabinfo.c:548:
+	printf("Size      %10s  %10s  %10s\n",
+			b1,	b2,	b3);

ERROR:SPACING: space required after that ';' (ctx:VxV)
#594: FILE: Documentation/vm/slabinfo.c:550:
+	store_size(b1, avg_objwaste);store_size(b2, min_objwaste);
 	                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#597: FILE: Documentation/vm/slabinfo.c:553:
+	printf("Loss      %10s  %10s  %10s\n",
+			b1,	b2,	b3);

ERROR:SPACING: space required after that ',' (ctx:VxO)
#602: FILE: Documentation/vm/slabinfo.c:558:
+	struct slabinfo *s1,*s2;
 	                   ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#602: FILE: Documentation/vm/slabinfo.c:558:
+	struct slabinfo *s1,*s2;
 	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#629: FILE: Documentation/vm/slabinfo.c:585:
+	struct aliasinfo *a1,*a2;
 	                    ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#629: FILE: Documentation/vm/slabinfo.c:585:
+	struct aliasinfo *a1,*a2;
 	                     ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#658: FILE: Documentation/vm/slabinfo.c:614:
+	for (a = aliasinfo; a < aliasinfo + aliases; a++) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#659: FILE: Documentation/vm/slabinfo.c:615:
+		for(s = slabinfo; s < slabinfo + slabs; s++)

ERROR:SPACING: space required before the open parenthesis '('
#678: FILE: Documentation/vm/slabinfo.c:634:
+	for(a = aliasinfo; a < aliasinfo + aliases; a++) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#679: FILE: Documentation/vm/slabinfo.c:635:
+	for(a = aliasinfo; a < aliasinfo + aliases; a++) {
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#683: FILE: Documentation/vm/slabinfo.c:639:
+		if (!show_inverted) {
[...]
+		else
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#693: FILE: Documentation/vm/slabinfo.c:649:
+		}
+		else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#700: FILE: Documentation/vm/slabinfo.c:656:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#737: FILE: Documentation/vm/slabinfo.c:693:
+		if (de->d_name[0] == '.' ||
+				slab_mismatch(de->d_name))

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#739: FILE: Documentation/vm/slabinfo.c:695:
+		switch (de->d_type) {
+		   case DT_LNK:
[...]
+		   case DT_DIR:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:TABSTOP: Statements should start on a tabstop
#740: FILE: Documentation/vm/slabinfo.c:696:
+		   case DT_LNK:

ERROR:CODE_INDENT: code indent should use tabs where possible
#741: FILE: Documentation/vm/slabinfo.c:697:
+^I^I   ^Ialias->name = strdup(de->d_name);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#741: FILE: Documentation/vm/slabinfo.c:697:
+^I^I   ^Ialias->name = strdup(de->d_name);$

WARNING:TABSTOP: Statements should start on a tabstop
#754: FILE: Documentation/vm/slabinfo.c:710:
+		   case DT_DIR:

ERROR:CODE_INDENT: code indent should use tabs where possible
#757: FILE: Documentation/vm/slabinfo.c:713:
+^I^I   ^Islab->name = strdup(de->d_name);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#757: FILE: Documentation/vm/slabinfo.c:713:
+^I^I   ^Islab->name = strdup(de->d_name);$

WARNING:TABSTOP: Statements should start on a tabstop
#785: FILE: Documentation/vm/slabinfo.c:741:
+		   default :

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#785: FILE: Documentation/vm/slabinfo.c:741:
+		   default :
 		           ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#803: FILE: Documentation/vm/slabinfo.c:759:
+	for (slab = slabinfo; slab < slabinfo + slabs; slab++) {
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#807: FILE: Documentation/vm/slabinfo.c:763:
+
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#808: FILE: Documentation/vm/slabinfo.c:764:
+		if (show_numa)
[...]
+		else
[...]
+		else
[...]
+		else
[...]
+		else {
[...]

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#810: FILE: Documentation/vm/slabinfo.c:766:
+		else
+		if (show_track)

CHECK:BRACES: braces {} should be used on all arms of this statement
#811: FILE: Documentation/vm/slabinfo.c:767:
+		if (show_track)
[...]
+		else
[...]
+		else
[...]
+		else {
[...]

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#813: FILE: Documentation/vm/slabinfo.c:769:
+		else
+		if (validate)

CHECK:BRACES: braces {} should be used on all arms of this statement
#814: FILE: Documentation/vm/slabinfo.c:770:
+		if (validate)
[...]
+		else
[...]
+		else {
[...]

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#816: FILE: Documentation/vm/slabinfo.c:772:
+		else
+		if (shrink)

CHECK:BRACES: braces {} should be used on all arms of this statement
#817: FILE: Documentation/vm/slabinfo.c:773:
+		if (shrink)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#819: FILE: Documentation/vm/slabinfo.c:775:
+		else {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#854: FILE: Documentation/vm/slabinfo.c:807:
+	while ((c = getopt_long(argc, argv, "afhi1nprstvzTS", opts, NULL)) != -1)
 	switch(c) {

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#855: FILE: Documentation/vm/slabinfo.c:808:
 	switch(c) {
+		case '1':
[...]
+		case 'f':
[...]
+		case 'h':
[...]
+		case 'i':
[...]
+		case 'r':
[...]
+		case 's':

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#912: FILE: Documentation/vm/slabinfo.c:854:
+	if (!show_slab && !show_alias && !show_track
[...]
 			show_slab = 1;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#913: FILE: Documentation/vm/slabinfo.c:855:
+	if (!show_slab && !show_alias && !show_track
+		&& !validate && !shrink)

CHECK:BRACES: braces {} should be used on all arms of this statement
#954: FILE: Documentation/vm/slabinfo.c:868:
+	if (show_alias)
[...]
+	else
[...]
+	else {
[...]

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#956: FILE: Documentation/vm/slabinfo.c:870:
+	else
+	if (show_totals)

CHECK:BRACES: braces {} should be used on all arms of this statement
#957: FILE: Documentation/vm/slabinfo.c:871:
+	if (show_totals)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#959: FILE: Documentation/vm/slabinfo.c:873:
+	else {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000440889.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 47 errors, 14 warnings, 29 checks, 922 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000440889.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
