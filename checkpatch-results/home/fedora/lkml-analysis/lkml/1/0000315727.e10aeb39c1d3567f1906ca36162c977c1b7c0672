WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#56: FILE: drivers/ata/ahci.c:263:
+int ahci_pci_device_suspend(struct pci_dev *pdev, pm_message_t mesg);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#57: FILE: drivers/ata/ahci.c:264:
+int ahci_pci_device_resume(struct pci_dev *pdev);

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#69: FILE: drivers/ata/ahci.c:276:
+static int autosuspend(struct Scsi_Host *host)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#72: FILE: drivers/ata/ahci.c:279:
+		printk("ahci: should autosuspend\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'autosuspend', this function's name, in a string
#72: FILE: drivers/ata/ahci.c:279:
+		printk("ahci: should autosuspend\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#75: FILE: drivers/ata/ahci.c:282:
+^I} $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#76: FILE: drivers/ata/ahci.c:283:
+	printk("ahci: autosuspend disabled\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'autosuspend', this function's name, in a string
#76: FILE: drivers/ata/ahci.c:283:
+	printk("ahci: autosuspend disabled\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#84: FILE: drivers/ata/ahci.c:291:
+		printk("ahci: should autoresume\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'autoresume', this function's name, in a string
#84: FILE: drivers/ata/ahci.c:291:
+		printk("ahci: should autoresume\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#88: FILE: drivers/ata/ahci.c:295:
+	printk("ahci: autoresume disabled\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'autoresume', this function's name, in a string
#88: FILE: drivers/ata/ahci.c:295:
+	printk("ahci: autoresume disabled\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#92: FILE: drivers/ata/ahci.c:299:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#113: FILE: drivers/ata/ahci.c:2361:
+	rc = ata_host_activate(host, pdev->irq, ahci_interrupt, IRQF_SHARED,
 				 &ahci_sht);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#150: FILE: drivers/scsi/scsi_error.c:1582:
+#if 0

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#152: FILE: drivers/scsi/scsi_error.c:1584:
+		/* libata uses scsi_error_handler to suspend its parts; we deadlock
+		   if we try to autoresume here */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#152: FILE: drivers/scsi/scsi_error.c:1584:
+		   if we try to autoresume here */

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#162: FILE: drivers/scsi/scsi_error.c:1600:
+#if 0

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#177: FILE: drivers/scsi/scsi_lib.c:70:
+void scsi_run_queue(struct request_queue *q);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#197: FILE: drivers/scsi/scsi_sysfs.c:350:
+	 * driver may have altered it and it's being removed */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: drivers/scsi/sd.c:1599:
+struct device *my_scsi_disk; $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#233: FILE: drivers/scsi/sd.c:1841:
+	printk("sleepy: sd_suspend start\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sd_suspend', this function's name, in a string
#233: FILE: drivers/scsi/sd.c:1841:
+	printk("sleepy: sd_suspend start\n");

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#354: FILE: drivers/scsi/Kconfig:60:
+config SCSI_DYNAMIC_PM
+	bool "SCSI dynamic Power Management support (EXPERIMENTAL)"
+	depends on SCSI && PM && EXPERIMENTAL
+	---help---
+	  This option enables support for dynamic (or runtime)
+	  power management of SCSI devices and host adapters.
+	  If you say Y here, you can use the sysfs "power/level"
+	  and "power/autosuspend" files to control manual or
+	  automatic suspend/resume of individual SCSI devices.
+
+	  If unsure say N.
+
 comment "SCSI support type (disk, tape, CD-ROM)"
 	depends on SCSI
 

Kconfig symbols should have a help text which fully describes
it.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#632: FILE: drivers/scsi/scsi_priv.h:72:
+extern void scsi_run_queue(struct request_queue *q);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#641: FILE: drivers/scsi/scsi_priv.h:139:
+extern int scsi_bus_suspend(struct device *, pm_message_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#642: FILE: drivers/scsi/scsi_priv.h:140:
+extern int scsi_bus_resume(struct device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#642: FILE: drivers/scsi/scsi_priv.h:140:
+extern int scsi_bus_resume(struct device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#643: FILE: drivers/scsi/scsi_priv.h:141:
+extern int scsi_pm_state_check(struct scsi_device *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scsi_device *' should also have an identifier name
#643: FILE: drivers/scsi/scsi_priv.h:141:
+extern int scsi_pm_state_check(struct scsi_device *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#643: FILE: drivers/scsi/scsi_priv.h:141:
+extern int scsi_pm_state_check(struct scsi_device *, struct request *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#644: FILE: drivers/scsi/scsi_priv.h:142:
+extern int scsi_pm_device_stop(struct scsi_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scsi_device *' should also have an identifier name
#644: FILE: drivers/scsi/scsi_priv.h:142:
+extern int scsi_pm_device_stop(struct scsi_device *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#645: FILE: drivers/scsi/scsi_priv.h:143:
+extern int scsi_pm_host_stop(struct Scsi_Host *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct Scsi_Host *' should also have an identifier name
#645: FILE: drivers/scsi/scsi_priv.h:143:
+extern int scsi_pm_host_stop(struct Scsi_Host *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#647: FILE: drivers/scsi/scsi_priv.h:145:
+extern void scsi_autosuspend_host(struct Scsi_Host *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#648: FILE: drivers/scsi/scsi_priv.h:146:
+extern int scsi_autoresume_host(struct Scsi_Host *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct Scsi_Host *' should also have an identifier name
#648: FILE: drivers/scsi/scsi_priv.h:146:
+extern int scsi_autoresume_host(struct Scsi_Host *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#649: FILE: drivers/scsi/scsi_priv.h:147:
+extern void scsi_pm_host_initialize(struct Scsi_Host *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct Scsi_Host *' should also have an identifier name
#649: FILE: drivers/scsi/scsi_priv.h:147:
+extern void scsi_pm_host_initialize(struct Scsi_Host *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#650: FILE: drivers/scsi/scsi_priv.h:148:
+extern void scsi_mark_last_busy(struct scsi_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scsi_device *' should also have an identifier name
#650: FILE: drivers/scsi/scsi_priv.h:148:
+extern void scsi_mark_last_busy(struct scsi_device *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#651: FILE: drivers/scsi/scsi_priv.h:149:
+extern void scsi_use_ULD_pm(struct scsi_device *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scsi_device *' should also have an identifier name
#651: FILE: drivers/scsi/scsi_priv.h:149:
+extern void scsi_use_ULD_pm(struct scsi_device *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#651: FILE: drivers/scsi/scsi_priv.h:149:
+extern void scsi_use_ULD_pm(struct scsi_device *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#652: FILE: drivers/scsi/scsi_priv.h:150:
+extern void scsi_autosuspend_device(struct scsi_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scsi_device *' should also have an identifier name
#652: FILE: drivers/scsi/scsi_priv.h:150:
+extern void scsi_autosuspend_device(struct scsi_device *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#653: FILE: drivers/scsi/scsi_priv.h:151:
+extern int scsi_autoresume_device(struct scsi_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scsi_device *' should also have an identifier name
#653: FILE: drivers/scsi/scsi_priv.h:151:
+extern int scsi_autoresume_device(struct scsi_device *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#654: FILE: drivers/scsi/scsi_priv.h:152:
+extern int scsi_pm_create_device_files(struct scsi_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scsi_device *' should also have an identifier name
#654: FILE: drivers/scsi/scsi_priv.h:152:
+extern int scsi_pm_create_device_files(struct scsi_device *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#655: FILE: drivers/scsi/scsi_priv.h:153:
+extern void scsi_pm_device_initialize(struct scsi_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scsi_device *' should also have an identifier name
#655: FILE: drivers/scsi/scsi_priv.h:153:
+extern void scsi_pm_device_initialize(struct scsi_device *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#656: FILE: drivers/scsi/scsi_priv.h:154:
+extern int scsi_init_pm(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#657: FILE: drivers/scsi/scsi_priv.h:155:
+extern void scsi_exit_pm(void);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#891: FILE: drivers/scsi/sg.c:246:
+	retval = autoresume_rc = scsi_autoresume_device(sdp->device);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#930: FILE: drivers/usb/storage/scsiglue.c:304:
+	if (result == 0) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around us->dev_mutex
#932: FILE: drivers/usb/storage/scsiglue.c:306:
+		mutex_lock(&(us->dev_mutex));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LINE_SPACING: Please don't use multiple blank lines
#961: FILE: drivers/usb/storage/scsiglue.c:370:
+
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#984: FILE: drivers/usb/storage/usb.c:187:
+	US_DEBUGP("%s\n", __FUNCTION__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1082: FILE: include/scsi/scsi_device.h:180:
+					 *   suspend/resume methods */

WARNING:SPACING: Unnecessary space before function pointer name
#1108: FILE: include/scsi/scsi_host.h:191:
+	int (* autosuspend)(struct Scsi_Host *);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#1108: FILE: include/scsi/scsi_host.h:191:
+	int (* autosuspend)(struct Scsi_Host *);
 	     ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct Scsi_Host *' should also have an identifier name
#1108: FILE: include/scsi/scsi_host.h:191:
+	int (* autosuspend)(struct Scsi_Host *);

WARNING:SPACING: Unnecessary space before function pointer name
#1109: FILE: include/scsi/scsi_host.h:192:
+	int (* autoresume)(struct Scsi_Host *);

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#1109: FILE: include/scsi/scsi_host.h:192:
+	int (* autoresume)(struct Scsi_Host *);
 	     ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct Scsi_Host *' should also have an identifier name
#1109: FILE: include/scsi/scsi_host.h:192:
+	int (* autoresume)(struct Scsi_Host *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000315727.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 39 warnings, 24 checks, 890 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000315727.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
