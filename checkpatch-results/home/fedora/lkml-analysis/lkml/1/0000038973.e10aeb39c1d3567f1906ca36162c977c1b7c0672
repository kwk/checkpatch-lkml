CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#45: FILE: mm/mremap.c:317:
+static unsigned long mremap_to(unsigned long addr,
+	unsigned long old_len, unsigned long new_addr,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#62: FILE: mm/mremap.c:334:
+	if ((new_addr <= addr) && (new_addr+new_len) > addr)
 	                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_addr <= addr'
#62: FILE: mm/mremap.c:334:
+	if ((new_addr <= addr) && (new_addr+new_len) > addr)

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#65: FILE: mm/mremap.c:337:
+	if ((addr <= new_addr) && (addr+old_len) > new_addr)
 	                               ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr <= new_addr'
#65: FILE: mm/mremap.c:337:
+	if ((addr <= new_addr) && (addr+old_len) > new_addr)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#77: FILE: mm/mremap.c:349:
+		ret = do_munmap(mm, addr+new_len, old_len - new_len);
 		                        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#185: FILE: mm/mremap.c:462:
+		unsigned long map_flags = 0;
+		if (vma->vm_flags & VM_MAYSHARE)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#189: FILE: mm/mremap.c:466:
+		new_addr = get_unmapped_area(vma->vm_file, 0, new_len,
+					vma->vm_pgoff, map_flags);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000038973.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 1 warnings, 7 checks, 156 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000038973.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
