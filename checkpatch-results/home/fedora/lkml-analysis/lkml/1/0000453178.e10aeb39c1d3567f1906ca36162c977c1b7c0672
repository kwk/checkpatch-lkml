WARNING:REPEATED_WORD: Possible repeated word: 'here'
#40: 
desktop here here and it works well for me, no guarantees! I would be

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#56: 
Forward port of nicksched to 2.6.21-rc4. Can't find my old design/description

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#195: FILE: include/linux/sched.h:1194:
+extern int get_task_timeslice(struct task_struct *t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:BIT_MACRO: Prefer using the BIT macro
#247: FILE: kernel/sched.c:106:
+#define MAX_SLEEP		(1UL << MAX_SLEEP_SHIFT)        /* ~0.25s */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:TYPO_SPELLING: 'dicard' may be misspelled - perhaps 'discard'?
#252: FILE: kernel/sched.c:110:
+ * will moderate dicard freak events (eg. SIGSTOP)
                  ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#270: FILE: kernel/sched.c:113:
+#define MAX_SLEEP_AFFECT	(MAX_SLEEP/4)
                         	          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#301: FILE: kernel/sched.c:119:
+#define MIN_HISTORY		(MAX_SLEEP/8)
                    		          ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#553: FILE: kernel/sched.c:710:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#570: FILE: kernel/sched.c:721:
+static void add_task_time(struct task_struct *p,
+				unsigned long long time, unsigned long type)

WARNING:LINE_SPACING: Missing a blank line after declarations
#588: FILE: kernel/sched.c:733:
+		unsigned long fac;
+		fac = USER_PRIO(p->static_prio); /* 0..39 */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#590: FILE: kernel/sched.c:735:
+		if (time > MAX_SLEEP_AFFECT*8)
 		                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#591: FILE: kernel/sched.c:736:
+			t = MAX_SLEEP_AFFECT*8;
 			                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#600: FILE: kernel/sched.c:745:
+	tmp = (unsigned long long)ratio*p->total_time + MAX_SLEEP/2;
 	                               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#600: FILE: kernel/sched.c:745:
+	tmp = (unsigned long long)ratio*p->total_time + MAX_SLEEP/2;
 	                                                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#604: FILE: kernel/sched.c:749:
+	tmp = (unsigned long long)ratio*p->sleep_time + MAX_SLEEP/2;
 	                               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#604: FILE: kernel/sched.c:749:
+	tmp = (unsigned long long)ratio*p->sleep_time + MAX_SLEEP/2;
 	                                                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#666: FILE: kernel/sched.c:786:
+	scale = delta*delta;	/* 9..1764 */
 	             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#671: FILE: kernel/sched.c:791:
+	ts = ts * BASE_TIMESLICE / (29*1024/9);
 	                              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#671: FILE: kernel/sched.c:791:
+	ts = ts * BASE_TIMESLICE / (29*1024/9);
 	                                   ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#691: FILE: kernel/sched.c:805:
+	unsigned long flags;
+	rq = task_rq_lock(p, &flags);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#774: FILE: kernel/sched.c:834:
+	if (prio > MAX_PRIO-1)
 	                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#775: FILE: kernel/sched.c:835:
+		return MAX_PRIO-1;
 		               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#789: FILE: kernel/sched.c:844:
+static inline void __activate_task(struct task_struct *p, struct rq *rq,
+					struct prio_array *array)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#972: FILE: kernel/sched.c:1516:
+	p->prio = p->normal_prio = task_priority(p);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#975: FILE: kernel/sched.c:1519:
+	cur->sleep_time -= min(cur->sleep_time/4, p->sleep_time);
 	                                      ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#994: FILE: kernel/sched.c:1522:
+	if (unlikely(cur->used_slice == -1 || cur == rq->idle))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#996: FILE: kernel/sched.c:1524:
+	else {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#998: FILE: kernel/sched.c:1526:
+		int child_ts = min_t(int, ts/4, FORKED_TS_MAX);
 		                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1014: FILE: kernel/sched.c:1541:
+  ^Iput_cpu();$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1014: FILE: kernel/sched.c:1541:
+  ^Iput_cpu();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1014: FILE: kernel/sched.c:1541:
+  ^Iput_cpu();$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'array == rq->active'
#1056: FILE: kernel/sched.c:1574:
+		if (!rt_task(p) && !rt_task(cur) &&
+			!(clone_flags & CLONE_VM) && (array == rq->active)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1057: FILE: kernel/sched.c:1575:
+		if (!rt_task(p) && !rt_task(cur) &&
+			!(clone_flags & CLONE_VM) && (array == rq->active)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1227: FILE: kernel/sched.c:1896:
 	if (!cpu_isset(dest_cpu, p->cpus_allowed)
+	    || cpu == dest_cpu

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'rq' - possible side-effects?
#1271: FILE: kernel/sched.c:1995:
+#define rq_best_prio(rq) min((rq)->curr->prio, (rq)->min_expired_prio)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1507: FILE: kernel/sched.c:3080:
+			printk(KERN_ERR "BUG: scheduling while atomic: "

WARNING:SPLIT_STRING: quoted string split across lines
#1508: FILE: kernel/sched.c:3081:
+			printk(KERN_ERR "BUG: scheduling while atomic: "
+				"%s/0x%08x/%d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1555: FILE: kernel/sched.c:3102:
+	prev->timestamp = prev->last_ran = now;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1918: FILE: kernel/sysctl.c:79:
+extern int sched_base_timeslice;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1919: FILE: kernel/sysctl.c:80:
+extern int sched_min_base;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1920: FILE: kernel/sysctl.c:81:
+extern int sched_max_base;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1933: FILE: kernel/sysctl.c:613:
+		.maxlen		= sizeof (sched_base_timeslice),

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1962: FILE: include/linux/init_task.h:102:
+	.prio		= MAX_PRIO-29,					\
 	     		          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1963: FILE: include/linux/init_task.h:103:
+	.static_prio	= MAX_PRIO-29,					\
 	            	          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1964: FILE: include/linux/init_task.h:104:
+	.normal_prio	= MAX_PRIO-29,					\
 	            	          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1983: FILE: include/linux/sysctl.h:168:
+	KERN_SCHED_TIMESLICE=77, /* int: base timeslice for scheduler */
 	                    ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000453178.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 13 warnings, 31 checks, 1820 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000453178.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
