WARNING:TYPO_SPELLING: 'troughput' may be misspelled - perhaps 'throughput'?
#60: 
ping benchmark (where there's no TSO) troughput is also improved.
                                      ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#101: FILE: MAINTAINERS:5436:
+P:	Michael S. Tsirkin
+M:	mst@redhat.com

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#142: FILE: drivers/vhost/Kconfig:1:
+config VHOST_NET
+	tristate "Host kernel accelerator for virtio net"
+	depends on NET && EVENTFD
+	---help---
+	  This kernel module can be loaded in host kernel to accelerate
+	  guest networking with virtio_net. Not to be confused with virtio_net
+	  module itself which needs to be loaded in guest kernel.
+
+	  To compile this driver as a module, choose M here: the module will
+	  be called vhost_net.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#167: FILE: drivers/vhost/net.c:1:
+/* Copyright (C) 2009 Red Hat, Inc.

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#210: FILE: drivers/vhost/net.c:44:
+	 * Writers use device mutex. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: drivers/vhost/net.c:53:
+       int seg = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: drivers/vhost/net.c:54:
+       size_t size;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#221: FILE: drivers/vhost/net.c:55:
+       size_t size;
+       while (len && seg < iov_count) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: drivers/vhost/net.c:55:
+       while (len && seg < iov_count) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#221: FILE: drivers/vhost/net.c:55:
+       while (len && seg < iov_count) {
+               size = min(from->iov_len, len);

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: drivers/vhost/net.c:56:
+               size = min(from->iov_len, len);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: drivers/vhost/net.c:56:
+               size = min(from->iov_len, len);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: drivers/vhost/net.c:57:
+               to->iov_base = from->iov_base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: drivers/vhost/net.c:57:
+               to->iov_base = from->iov_base;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#224: FILE: drivers/vhost/net.c:58:
+               to->iov_len = size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: drivers/vhost/net.c:58:
+               to->iov_len = size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: drivers/vhost/net.c:59:
+               from->iov_len -= size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: drivers/vhost/net.c:59:
+               from->iov_len -= size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: drivers/vhost/net.c:60:
+               from->iov_base += size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: drivers/vhost/net.c:60:
+               from->iov_base += size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: drivers/vhost/net.c:61:
+               len -= size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: drivers/vhost/net.c:61:
+               len -= size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#228: FILE: drivers/vhost/net.c:62:
+               ++from;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: drivers/vhost/net.c:62:
+               ++from;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: drivers/vhost/net.c:63:
+               ++to;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: drivers/vhost/net.c:63:
+               ++to;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: drivers/vhost/net.c:64:
+               ++seg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: drivers/vhost/net.c:64:
+               ++seg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: drivers/vhost/net.c:65:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: drivers/vhost/net.c:66:
+       return seg;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#236: FILE: drivers/vhost/net.c:70:
+ * read-size critical section for our kind of RCU. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#240: FILE: drivers/vhost/net.c:74:
+	unsigned head, out, in, s;

WARNING:LINE_SPACING: Missing a blank line after declarations
#252: FILE: drivers/vhost/net.c:86:
+	struct socket *sock = rcu_dereference(net->sock);
+	if (!sock || !sock_writeable(sock->sk))

WARNING:SPLIT_STRING: quoted string split across lines
#264: FILE: drivers/vhost/net.c:98:
+			vq_err(vq, "Unexpected descriptor format for TX: "
+			       "out %d, int %d\n", out, in);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#275: FILE: drivers/vhost/net.c:109:
+			vq_err(vq, "Unexpected header len for TX: "
+			       "%ld expected %zd\n",

WARNING:SPLIT_STRING: quoted string split across lines
#288: FILE: drivers/vhost/net.c:122:
+			pr_err("Truncated TX packet: "
+			       " len %d != %zd\n", err, len);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#297: FILE: drivers/vhost/net.c:131:
+ * read-size critical section for our kind of RCU. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#301: FILE: drivers/vhost/net.c:135:
+	unsigned head, out, in, s;

WARNING:LINE_SPACING: Missing a blank line after declarations
#319: FILE: drivers/vhost/net.c:153:
+	struct socket *sock = rcu_dereference(net->sock);
+	if (!sock || skb_queue_empty(&sock->sk->sk_receive_queue))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#331: FILE: drivers/vhost/net.c:165:
+			 * check again. */

WARNING:SPLIT_STRING: quoted string split across lines
#340: FILE: drivers/vhost/net.c:174:
+			vq_err(vq, "Unexpected descriptor format for RX: "
+			       "out %d, int %d\n",

WARNING:SIZEOF_PARENTHESIS: sizeof hdr should be sizeof(hdr)
#345: FILE: drivers/vhost/net.c:179:
+		s = move_iovec_hdr(vq->iov, vq->hdr, sizeof hdr, in);

WARNING:SPLIT_STRING: quoted string split across lines
#351: FILE: drivers/vhost/net.c:185:
+			vq_err(vq, "Unexpected header len for RX: "
+			       "%zd expected %zd\n",

WARNING:SIZEOF_PARENTHESIS: sizeof hdr should be sizeof(hdr)
#352: FILE: drivers/vhost/net.c:186:
+			       iov_length(vq->hdr, s), sizeof hdr);

WARNING:SPLIT_STRING: quoted string split across lines
#365: FILE: drivers/vhost/net.c:199:
+			pr_err("Discarded truncated rx packet: "
+			       " len %d > %zd\n", err, len);

WARNING:SIZEOF_PARENTHESIS: sizeof hdr should be sizeof(hdr)
#370: FILE: drivers/vhost/net.c:204:
+		err = memcpy_toiovec(vq->hdr, (unsigned char *)&hdr, sizeof hdr);

WARNING:SIZEOF_PARENTHESIS: sizeof hdr should be sizeof(hdr)
#377: FILE: drivers/vhost/net.c:211:
+					   len + sizeof hdr);

WARNING:LINE_SPACING: Missing a blank line after declarations
#388: FILE: drivers/vhost/net.c:222:
+	struct vhost_net *net;
+	vq = container_of(work, struct vhost_virtqueue, poll.work);

WARNING:LINE_SPACING: Missing a blank line after declarations
#397: FILE: drivers/vhost/net.c:231:
+	struct vhost_net *net;
+	vq = container_of(work, struct vhost_virtqueue, poll.work);

WARNING:LINE_SPACING: Missing a blank line after declarations
#405: FILE: drivers/vhost/net.c:239:
+	struct vhost_net *net;
+	net = container_of(work, struct vhost_net, poll[VHOST_NET_VQ_TX].work);

WARNING:LINE_SPACING: Missing a blank line after declarations
#412: FILE: drivers/vhost/net.c:246:
+	struct vhost_net *net;
+	net = container_of(work, struct vhost_net, poll[VHOST_NET_VQ_RX].work);

WARNING:SIZEOF_PARENTHESIS: sizeof *n should be sizeof(*n)
#418: FILE: drivers/vhost/net.c:252:
+	struct vhost_net *n = kzalloc(sizeof *n, GFP_KERNEL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#420: FILE: drivers/vhost/net.c:254:
+	int r;
+	if (!n)

WARNING:LINE_SPACING: Missing a blank line after declarations
#439: FILE: drivers/vhost/net.c:273:
+	struct socket *sock = n->sock;
+	rcu_assign_pointer(n->sock, NULL);

WARNING:SIZEOF_PARENTHESIS: sizeof uaddr should be sizeof(uaddr)
#475: FILE: drivers/vhost/net.c:309:
+	int uaddr_len = sizeof uaddr, r;

WARNING:LINE_SPACING: Missing a blank line after declarations
#535: FILE: drivers/vhost/net.c:369:
+	long r;
+	mutex_lock(&n->dev.mutex);

WARNING:LINE_SPACING: Missing a blank line after declarations
#565: FILE: drivers/vhost/net.c:399:
+	int fd, r;
+	switch (ioctl) {

WARNING:STATIC_CONST: Move const after static - use 'static const struct file_operations '
#598: FILE: drivers/vhost/net.c:432:
+const static struct file_operations vhost_net_fops = {

WARNING:LINE_SPACING: Missing a blank line after declarations
#617: FILE: drivers/vhost/net.c:451:
+	int r = vhost_init();
+	if (r)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#628: FILE: drivers/vhost/net.c:462:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#648: FILE: drivers/vhost/vhost.c:1:
+/* Copyright (C) 2009 Red Hat, Inc.

WARNING:LINE_SPACING: Missing a blank line after declarations
#690: FILE: drivers/vhost/vhost.c:43:
+	struct vhost_poll *poll;
+	poll = container_of(pt, struct vhost_poll, table);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#696: FILE: drivers/vhost/vhost.c:49:
+static int vhost_poll_wakeup(wait_queue_t *wait, unsigned mode, int sync,

WARNING:LINE_SPACING: Missing a blank line after declarations
#700: FILE: drivers/vhost/vhost.c:53:
+	struct vhost_poll *poll;
+	poll = container_of(wait, struct vhost_poll, wait);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#719: FILE: drivers/vhost/vhost.c:72:
+ * keep a reference to a file until after vhost_poll_stop is called. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#723: FILE: drivers/vhost/vhost.c:76:
+	unsigned long mask;
+	mask = file->f_op->poll(file, &poll->table);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#729: FILE: drivers/vhost/vhost.c:82:
+ * file reference. You must also flush afterwards. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#736: FILE: drivers/vhost/vhost.c:89:
+ * locks that are also used by the callback. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#746: FILE: drivers/vhost/vhost.c:99:
+	int i;
+	dev->vqs = vqs;

WARNING:SIZEOF_PARENTHESIS: sizeof *memory->regions should be sizeof(*memory->regions)
#786: FILE: drivers/vhost/vhost.c:139:
+			 2 * sizeof *memory->regions, GFP_KERNEL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#807: FILE: drivers/vhost/vhost.c:160:
+	int i;
+	for (i = 0; i < dev->nvqs; ++i) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#841: FILE: drivers/vhost/vhost.c:194:
+	long r;
+	r = copy_from_user(&mem, m, size);

WARNING:SIZEOF_PARENTHESIS: sizeof *m->regions should be sizeof(*m->regions)
#848: FILE: drivers/vhost/vhost.c:201:
+	newmem = kmalloc(size + mem.nregions * sizeof *m->regions, GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof *m->regions should be sizeof(*m->regions)
#854: FILE: drivers/vhost/vhost.c:207:
+			   mem.nregions * sizeof *m->regions);

WARNING:LINE_SPACING: Missing a blank line after declarations
#869: FILE: drivers/vhost/vhost.c:222:
+	int r = put_user(vq->used_flags, &vq->used->flags);
+	if (r)

WARNING:SIZEOF_PARENTHESIS: sizeof s should be sizeof(s)
#899: FILE: drivers/vhost/vhost.c:252:
+		r = copy_from_user(&s, argp, sizeof s);

WARNING:SIZEOF_PARENTHESIS: sizeof s should be sizeof(s)
#909: FILE: drivers/vhost/vhost.c:262:
+		r = copy_from_user(&s, argp, sizeof s);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#916: FILE: drivers/vhost/vhost.c:269:
+		vq->avail_idx = vq->last_avail_idx = s.num;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SIZEOF_PARENTHESIS: sizeof s should be sizeof(s)
#921: FILE: drivers/vhost/vhost.c:274:
+		r = copy_to_user(argp, &s, sizeof s);

WARNING:SIZEOF_PARENTHESIS: sizeof a should be sizeof(a)
#924: FILE: drivers/vhost/vhost.c:277:
+		r = copy_from_user(&a, argp, sizeof a);

WARNING:SIZEOF_PARENTHESIS: sizeof a should be sizeof(a)
#938: FILE: drivers/vhost/vhost.c:291:
+		r = copy_from_user(&a, argp, sizeof a);

WARNING:SIZEOF_PARENTHESIS: sizeof a should be sizeof(a)
#954: FILE: drivers/vhost/vhost.c:307:
+		r = copy_from_user(&a, argp, sizeof a);

WARNING:SIZEOF_PARENTHESIS: sizeof f should be sizeof(f)
#971: FILE: drivers/vhost/vhost.c:324:
+		r = copy_from_user(&f, argp, sizeof f);

CHECK:BRACES: braces {} should be used on all arms of this statement
#977: FILE: drivers/vhost/vhost.c:330:
+		if (eventfp != vq->kick) {
[...]
+		} else
[...]

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#978: FILE: drivers/vhost/vhost.c:331:
+			pollstop = filep = vq->kick;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#979: FILE: drivers/vhost/vhost.c:332:
+			pollstart = vq->kick = eventfp;

CHECK:BRACES: Unbalanced braces around else statement
#980: FILE: drivers/vhost/vhost.c:333:
+		} else

WARNING:SIZEOF_PARENTHESIS: sizeof f should be sizeof(f)
#984: FILE: drivers/vhost/vhost.c:337:
+		r = copy_from_user(&f, argp, sizeof f);

CHECK:BRACES: braces {} should be used on all arms of this statement
#990: FILE: drivers/vhost/vhost.c:343:
+		if (eventfp != vq->call) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#996: FILE: drivers/vhost/vhost.c:349:
+		} else

WARNING:SIZEOF_PARENTHESIS: sizeof f should be sizeof(f)
#1000: FILE: drivers/vhost/vhost.c:353:
+		r = copy_from_user(&f, argp, sizeof f);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1006: FILE: drivers/vhost/vhost.c:359:
+		if (eventfp != vq->error) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1012: FILE: drivers/vhost/vhost.c:365:
+		} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1073: FILE: drivers/vhost/vhost.c:426:
+	 * regions in practice */

WARNING:LINE_SPACING: Missing a blank line after declarations
#1097: FILE: drivers/vhost/vhost.c:450:
+		u64 size;
+		if (ret >= iov_size) {

WARNING:MINMAX: min() should probably be min_t(u64, len, size)
#1108: FILE: drivers/vhost/vhost.c:461:
+		_iov->iov_len = min((u64)len, size);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1122: FILE: drivers/vhost/vhost.c:475:
+ * at the end. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1123: FILE: drivers/vhost/vhost.c:476:
+static unsigned next_desc(struct vhost_virtqueue *vq, struct vring_desc *desc)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1135: FILE: drivers/vhost/vhost.c:488:
+	 * architectures only need a compiler barrier here. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1152: FILE: drivers/vhost/vhost.c:505:
+ * is never a valid descriptor number) if none was found. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1153: FILE: drivers/vhost/vhost.c:506:
+unsigned vhost_get_vq_desc(struct vhost_dev *dev, struct vhost_virtqueue *vq,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1181: FILE: drivers/vhost/vhost.c:534:
+	 * the index we've seen. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1203: FILE: drivers/vhost/vhost.c:556:
+		unsigned iov_count = *in_num + *out_num;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1204: FILE: drivers/vhost/vhost.c:557:
+		unsigned iov_count = *in_num + *out_num;
+		if (copy_from_user(&desc, vq->desc + i, sizeof desc)) {

WARNING:SIZEOF_PARENTHESIS: sizeof desc should be sizeof(desc)
#1204: FILE: drivers/vhost/vhost.c:557:
+		if (copy_from_user(&desc, vq->desc + i, sizeof desc)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1217: FILE: drivers/vhost/vhost.c:570:
+		if (desc.flags & VRING_DESC_F_WRITE)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1219: FILE: drivers/vhost/vhost.c:572:
+		else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1221: FILE: drivers/vhost/vhost.c:574:
+			 * to come before any input descriptors. */

WARNING:SPLIT_STRING: quoted string split across lines
#1224: FILE: drivers/vhost/vhost.c:577:
+				vq_err(vq, "Descriptor has out after in: "
+				       "idx %d\n", i);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1240: FILE: drivers/vhost/vhost.c:593:
+ * want to send them an interrupt, using vq->call. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1242: FILE: drivers/vhost/vhost.c:595:
+int vhost_add_used(struct vhost_virtqueue *vq,
+			  unsigned int head, int len)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1247: FILE: drivers/vhost/vhost.c:600:
+	 * next entry in that used ring. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#1271: FILE: drivers/vhost/vhost.c:624:
+	__u16 flags = 0;
+	if (get_user(flags, &vq->avail->flags)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1300: FILE: drivers/vhost/vhost.c:653:
+	int r;
+	if (!(vq->used_flags & VRING_USED_F_NO_NOTIFY))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1307: FILE: drivers/vhost/vhost.c:660:
+	 * sure it's written, tell caller it needs to check again. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#1316: FILE: drivers/vhost/vhost.c:669:
+	int r;
+	if (vq->used_flags & VRING_USED_F_NO_NOTIFY)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1342: FILE: drivers/vhost/vhost.h:1:
+#ifndef _VHOST_H

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1418: FILE: drivers/vhost/vhost.h:77:
+	 * Writers use mutex below.*/

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#1423: FILE: drivers/vhost/vhost.h:82:
+	struct mutex mutex;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1424: FILE: drivers/vhost/vhost.h:83:
+	unsigned acked_features;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vhost_dev *' should also have an identifier name
#1427: FILE: drivers/vhost/vhost.h:86:
+long vhost_dev_init(struct vhost_dev *, struct vhost_virtqueue *vqs, int nvqs);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vhost_dev *' should also have an identifier name
#1428: FILE: drivers/vhost/vhost.h:87:
+long vhost_dev_check_owner(struct vhost_dev *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vhost_dev *' should also have an identifier name
#1429: FILE: drivers/vhost/vhost.h:88:
+long vhost_dev_reset_owner(struct vhost_dev *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vhost_dev *' should also have an identifier name
#1430: FILE: drivers/vhost/vhost.h:89:
+void vhost_dev_cleanup(struct vhost_dev *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vhost_dev *' should also have an identifier name
#1431: FILE: drivers/vhost/vhost.h:90:
+long vhost_dev_ioctl(struct vhost_dev *, unsigned int ioctl, unsigned long arg);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1433: FILE: drivers/vhost/vhost.h:92:
+unsigned vhost_get_vq_desc(struct vhost_dev *, struct vhost_virtqueue *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vhost_dev *' should also have an identifier name
#1433: FILE: drivers/vhost/vhost.h:92:
+unsigned vhost_get_vq_desc(struct vhost_dev *, struct vhost_virtqueue *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vhost_virtqueue *' should also have an identifier name
#1433: FILE: drivers/vhost/vhost.h:92:
+unsigned vhost_get_vq_desc(struct vhost_dev *, struct vhost_virtqueue *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vhost_virtqueue *' should also have an identifier name
#1436: FILE: drivers/vhost/vhost.h:95:
+void vhost_discard_vq_desc(struct vhost_virtqueue *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vhost_virtqueue *' should also have an identifier name
#1438: FILE: drivers/vhost/vhost.h:97:
+int vhost_add_used(struct vhost_virtqueue *, unsigned int head, int len);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vhost_dev *' should also have an identifier name
#1439: FILE: drivers/vhost/vhost.h:98:
+void vhost_trigger_irq(struct vhost_dev *, struct vhost_virtqueue *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vhost_virtqueue *' should also have an identifier name
#1439: FILE: drivers/vhost/vhost.h:98:
+void vhost_trigger_irq(struct vhost_dev *, struct vhost_virtqueue *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vhost_dev *' should also have an identifier name
#1440: FILE: drivers/vhost/vhost.h:99:
+void vhost_add_used_and_trigger(struct vhost_dev *, struct vhost_virtqueue *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vhost_virtqueue *' should also have an identifier name
#1440: FILE: drivers/vhost/vhost.h:99:
+void vhost_add_used_and_trigger(struct vhost_dev *, struct vhost_virtqueue *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vhost_virtqueue *' should also have an identifier name
#1442: FILE: drivers/vhost/vhost.h:101:
+void vhost_no_notify(struct vhost_virtqueue *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vhost_virtqueue *' should also have an identifier name
#1443: FILE: drivers/vhost/vhost.h:102:
+bool vhost_notify(struct vhost_virtqueue *);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'vq' - possible side-effects?
#1448: FILE: drivers/vhost/vhost.h:107:
+#define vq_err(vq, fmt, ...) do {                                  \
+		pr_debug(pr_fmt(fmt), ##__VA_ARGS__);       \
+		if ((vq)->error_ctx)                               \
+				eventfd_signal((vq)->error_ctx, 1);\
+	} while (0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#1450: FILE: drivers/vhost/vhost.h:109:
+		if ((vq)->error_ctx)                               \
+				eventfd_signal((vq)->error_ctx, 1);\

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1494: FILE: include/linux/vhost.h:1:
+#ifndef _LINUX_VHOST_H

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1546: FILE: include/linux/vhost.h:53:
+ * vhost specific features. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1552: FILE: include/linux/vhost.h:59:
+ * VHOST_OWNER_SET fail until VHOST_OWNER_RESET is called. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1555: FILE: include/linux/vhost.h:62:
+ * Allows subsequent call to VHOST_OWNER_SET to succeed. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1562: FILE: include/linux/vhost.h:69:
+ * (bound to a device). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1577: FILE: include/linux/vhost.h:84:
+ * for events. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1591: FILE: include/linux/vhost.h:98:
+ * This can be used to stop the device (e.g. for migration). */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078980.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 121 warnings, 15 checks, 1443 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078980.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
