WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
   so can use kernel/kexec to start other os that doesn't have good acpi support

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#79: FILE: arch/x86/kernel/mpparse.c:168:
+	printk(KERN_CONT "Int: type %d, pol %d, trig %d, bus %02x,"

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#79: FILE: arch/x86/kernel/mpparse.c:168:
+	printk(KERN_CONT "Int: type %d, pol %d, trig %d, bus %02x,"

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#95: FILE: arch/x86/kernel/mpparse.c:177:
+	printk(KERN_CONT "Int: type %d, pol %d, trig %d, bus %02x,"

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#95: FILE: arch/x86/kernel/mpparse.c:177:
+	printk(KERN_CONT "Int: type %d, pol %d, trig %d, bus %02x,"

WARNING:SPLIT_STRING: quoted string split across lines
#96: FILE: arch/x86/kernel/mpparse.c:178:
+	printk(KERN_CONT "Int: type %d, pol %d, trig %d, bus %02x,"
+		" IRQ %02x, APIC ID %x, APIC INT %02x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#153: FILE: arch/x86/kernel/mpparse.c:235:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#192: FILE: arch/x86/kernel/mpparse.c:372:
+static int __init smp_read_mpc(struct mp_config_table *mpc, unsigned early)

WARNING:MISPLACED_INIT: __initdata should be placed after irq_used[MAX_IRQ_SOURCES]
#216: FILE: arch/x86/kernel/mpparse.c:866:
+static u8 __initdata irq_used[MAX_IRQ_SOURCES];

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#259: FILE: arch/x86/kernel/mpparse.c:909:
+static int  __init replace_intsrc_all(struct mp_config_table *mpc,
+					unsigned long mpc_new_phys,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#270: FILE: arch/x86/kernel/mpparse.c:920:
+	printk(KERN_INFO "mpc_length %x\n", mpc->mpc_length);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#301: FILE: arch/x86/kernel/mpparse.c:951:
+				printk(KERN_INFO "OLD ");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#306: FILE: arch/x86/kernel/mpparse.c:956:
+					printk(KERN_INFO "NEW ");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#334: FILE: arch/x86/kernel/mpparse.c:984:
+			printk(KERN_ERR "Your mptable is wrong, contact your HW vendor!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#335: FILE: arch/x86/kernel/mpparse.c:985:
+			printk(KERN_ERR "type %x\n", *mpt);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#337: FILE: arch/x86/kernel/mpparse.c:987:
+			print_hex_dump(KERN_ERR, "  ", DUMP_PREFIX_ADDRESS, 16,
+					1, mpc, mpc->mpc_length, 1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#354: FILE: arch/x86/kernel/mpparse.c:1004:
+			printk(KERN_INFO "*NEW* found ");

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#363: FILE: arch/x86/kernel/mpparse.c:1013:
+				printk(KERN_INFO "No spare slots, try to append...take your risk, new mpc_length %x\n", count);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#363: FILE: arch/x86/kernel/mpparse.c:1013:
+				printk(KERN_INFO "No spare slots, try to append...take your risk, new mpc_length %x\n", count);

CHECK:BRACES: braces {} should be used on all arms of this statement
#365: FILE: arch/x86/kernel/mpparse.c:1015:
+				if (count <= mpc_new_length)
[...]
+				else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#366: FILE: arch/x86/kernel/mpparse.c:1016:
+					printk(KERN_INFO "No spare slots, try to append..., new mpc_length %x\n", count);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#366: FILE: arch/x86/kernel/mpparse.c:1016:
+					printk(KERN_INFO "No spare slots, try to append..., new mpc_length %x\n", count);

CHECK:BRACES: Unbalanced braces around else statement
#367: FILE: arch/x86/kernel/mpparse.c:1017:
+				else {

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#368: FILE: arch/x86/kernel/mpparse.c:1018:
+					printk(KERN_ERR "mpc_new_length %lx is too small\n", mpc_new_length);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#368: FILE: arch/x86/kernel/mpparse.c:1018:
+					printk(KERN_ERR "mpc_new_length %lx is too small\n", mpc_new_length);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#395: FILE: arch/x86/kernel/mpparse.c:1045:
+}
+early_param("update_mptable", update_mptable_setup);

WARNING:MISPLACED_INIT: __initdata should be placed after mpc_new_phys
#397: FILE: arch/x86/kernel/mpparse.c:1047:
+static unsigned long __initdata mpc_new_phys;

WARNING:MISPLACED_INIT: __initdata should be placed after alloc_mptable
#401: FILE: arch/x86/kernel/mpparse.c:1051:
+static int __initdata alloc_mptable;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#411: FILE: arch/x86/kernel/mpparse.c:1061:
+}
+early_param("alloc_mptable", parse_alloc_mptable_opt);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#453: FILE: arch/x86/kernel/mpparse.c:1103:
+	printk(KERN_INFO "mpf: %lx\n", virt_to_phys(mpf));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#454: FILE: arch/x86/kernel/mpparse.c:1104:
+	printk(KERN_INFO "mpf_physptr: %x\n", mpf->mpf_physptr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#458: FILE: arch/x86/kernel/mpparse.c:1108:
+		printk(KERN_INFO "mpc_new_length is %ld, please use alloc_mptable=8k\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#459: FILE: arch/x86/kernel/mpparse.c:1109:
+		printk(KERN_INFO "mpc_new_length is %ld, please use alloc_mptable=8k\n",
+			 mpc_new_length);

WARNING:TYPO_SPELLING: 'postion' may be misspelled - perhaps 'position'?
#464: FILE: arch/x86/kernel/mpparse.c:1114:
+		/* check if we can change the postion */
 		                              ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#470: FILE: arch/x86/kernel/mpparse.c:1120:
+			printk(KERN_INFO "mpc is readonly, please try alloc_mptable instead\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#473: FILE: arch/x86/kernel/mpparse.c:1123:
+		printk(KERN_INFO "use in-positon replacing\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#483: FILE: arch/x86/kernel/mpparse.c:1133:
+			printk(KERN_INFO "mpf new: %x\n", 0x400 - 16);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#491: FILE: arch/x86/kernel/mpparse.c:1141:
+		printk(KERN_INFO "mpf_physptr new: %x\n", mpf->mpf_physptr);

WARNING:TYPO_SPELLING: 'allocte' may be misspelled - perhaps 'allocate'?
#523: FILE: arch/x86/kernel/setup_64.c:378:
+	/* pre allocte 4k for mptable mpc */
 	       ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#538: FILE: drivers/acpi/pci_irq.c:575:
+	mp_config_acpi_gsi(dev->bus->number, dev->devfn, dev->pin, irq,
+				 triggering, polarity);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#552: FILE: include/asm-x86/mpspec.h:42:
+extern void early_reserve_e820_mpc_new(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#560: FILE: include/asm-x86/mpspec.h:51:
+extern void MP_intsrc_info(struct mpc_config_intsrc *m);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#561: FILE: include/asm-x86/mpspec.h:52:
+extern int mp_config_acpi_gsi(unsigned char number, unsigned int devfn, u8 pin,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#562: FILE: include/asm-x86/mpspec.h:53:
+extern int mp_config_acpi_gsi(unsigned char number, unsigned int devfn, u8 pin,
+				u32 gsi, int triggering, int polarity);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#575: FILE: arch/x86/kernel/acpi/boot.c:1168:
+int mp_config_acpi_gsi(unsigned char number, unsigned int devfn, u8 pin,
+			u32 gsi, int triggering, int polarity)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#626: FILE: arch/x86/kernel/e820.c:761:
+	printk(KERN_INFO "update e820 for early_reserve_e820\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'early_reserve_e820', this function's name, in a string
#626: FILE: arch/x86/kernel/e820.c:761:
+	printk(KERN_INFO "update e820 for early_reserve_e820\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#640: FILE: include/asm-x86/e820.h:87:
+extern u64 early_reserve_e820(u64 startt, u64 sizet, u64 align);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000275541.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 33 warnings, 15 checks, 545 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000275541.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
