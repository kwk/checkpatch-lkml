WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
the disks whenever the utility calls the CCISS_REGNEWD ioctl. Unfortunately,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#77: FILE: drivers/block/cciss.c:1356:
+		rc = sendcmd_withirq(CISS_INQUIRY, ctlr, buf,
+			PAGE_83_INQ_BYTES, 1, logvol, 0x83, TYPE_CMD);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#80: FILE: drivers/block/cciss.c:1359:
+		rc = sendcmd(CISS_INQUIRY, ctlr, buf,
+			PAGE_83_INQ_BYTES, 1, logvol, 0x83, NULL, TYPE_CMD);

WARNING:RETURN_VOID: void function return statements are not generally useful
#85: FILE: drivers/block/cciss.c:1364:
+	return;
+}

CHECK:CAMELCASE: Avoid CamelCase: <InquiryData_struct>
#112: FILE: drivers/block/cciss.c:1388:
+	inq_buff = kmalloc(sizeof(InquiryData_struct), GFP_KERNEL);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!inq_buff"
#114: FILE: drivers/block/cciss.c:1390:
+	if (inq_buff == NULL || drvinfo == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!drvinfo"
#114: FILE: drivers/block/cciss.c:1390:
+	if (inq_buff == NULL || drvinfo == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#120: FILE: drivers/block/cciss.c:1396:
+		cciss_read_capacity_16(h->ctlr, drv_index, 1,
+			&total_size, &block_size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#131: FILE: drivers/block/cciss.c:1407:
+			cciss_read_capacity_16(ctlr, drv_index, 1,
+			&total_size, &block_size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#146: FILE: drivers/block/cciss.c:1422:
+	cciss_get_serial_no(ctlr, drv_index, 1, drvinfo->serial_no,
+			sizeof(drvinfo->serial_no));

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#149: FILE: drivers/block/cciss.c:1425:
+	if (h->drv[drv_index].raid_level != -1 &&
[...]
+			goto freeret;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: drivers/block/cciss.c:1426:
+	if (h->drv[drv_index].raid_level != -1 &&
+		((memcmp(drvinfo->serial_no,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#168: FILE: drivers/block/cciss.c:1443:
+		printk(KERN_WARNING "disk %d has changed.\n", drv_index);

CHECK:CAMELCASE: Avoid CamelCase: <ReportLunData_struct>
#286: FILE: drivers/block/cciss.c:1573:
+	ld_buff = kzalloc(sizeof(ReportLunData_struct), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ld_buff"
#287: FILE: drivers/block/cciss.c:1574:
+	if (ld_buff == NULL)

CHECK:BRACES: braces {} should be used on all arms of this statement
#300: FILE: drivers/block/cciss.c:1581:
+	if (return_code == IO_OK)
[...]
+	else {	/* reading number of logical volumes failed */
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#301: FILE: drivers/block/cciss.c:1582:
+		listlength = be32_to_cpu(*(__be32 *) ld_buff->LUNListLength);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <LUNListLength>
#301: FILE: drivers/block/cciss.c:1582:
+		listlength = be32_to_cpu(*(__be32 *) ld_buff->LUNListLength);

CHECK:BRACES: Unbalanced braces around else statement
#302: FILE: drivers/block/cciss.c:1583:
+	else {	/* reading number of logical volumes failed */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#303: FILE: drivers/block/cciss.c:1584:
+		printk(KERN_WARNING "cciss: report logical volume"

WARNING:SPLIT_STRING: quoted string split across lines
#304: FILE: drivers/block/cciss.c:1585:
+		printk(KERN_WARNING "cciss: report logical volume"
+		       " command failed\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#312: FILE: drivers/block/cciss.c:1593:
+		printk(KERN_WARNING "cciss: more luns configured"

WARNING:SPLIT_STRING: quoted string split across lines
#313: FILE: drivers/block/cciss.c:1594:
+		printk(KERN_WARNING "cciss: more luns configured"
+		       " on controller than can be handled by"

WARNING:SPLIT_STRING: quoted string split across lines
#314: FILE: drivers/block/cciss.c:1595:
+		       " on controller than can be handled by"
+		       " this driver.\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#323: FILE: drivers/block/cciss.c:1604:
+		int j;
+		drv_found = 0;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <LunID>
#327: FILE: drivers/block/cciss.c:1608:
+			if (h->drv[i].LunID == lunid) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#338: FILE: drivers/block/cciss.c:1619:
+			return_code = deregister_disk(h->gendisk[i],
+				&h->drv[i], 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#387: FILE: drivers/block/cciss.c:1644:
+			if (h->drv[j].raid_level != -1 &&
+				h->drv[j].LunID == lunid) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#416: FILE: drivers/block/cciss.c:1661:
+					printk(KERN_ERR "cciss: could not "

WARNING:SPLIT_STRING: quoted string split across lines
#417: FILE: drivers/block/cciss.c:1662:
+					printk(KERN_ERR "cciss: could not "
+						"allocate new disk %d\n",

WARNING:MEMORY_BARRIER: memory barrier without comment
#432: FILE: drivers/block/cciss.c:1674:
+			wmb();

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#434: FILE: drivers/block/cciss.c:1676:
+
+		}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#481: FILE: drivers/block/cciss.c:3413:
+			cciss_get_serial_no(cntl_num, i, 0,
+				hba[cntl_num]->drv[i].serial_no,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000247222.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 13 warnings, 20 checks, 432 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000247222.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
