WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
diff -uprwNBb -X 2.6.25-rc9/Documentation/dontdiff /home/rossb/local/linux-2.6.25-rc9/arch/powerpc/mm/fault.c 2.6.25-rc9/arch/powerpc/mm/fault.c

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#34: 
diff -uprwNBb -X 2.6.25-rc9/Documentation/dontdiff /home/rossb/local/linux-2.6.25-rc9/arch/powerpc/mm/fault.c 2.6.25-rc9/arch/powerpc/mm/fault.c

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#35: 
--- /home/rossb/local/linux-2.6.25-rc9/arch/powerpc/mm/fault.c	2008-04-11 13:32:29.000000000 -0700

CHECK:SPACING: spaces preferred around that '|' (ctx:WxV)
#127: FILE: arch/x86/mm/pgtable_32.c:329:
+#define PAGE_ALLOC(node) alloc_pages_node(node, GFP_KERNEL |__GFP_REPEAT, 0)
                                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#188: FILE: include/asm-generic/pgalloc.h:1:
+#ifndef _ASM_GENERIC_PGALLOC_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#218: FILE: include/asm-generic/pgalloc.h:31:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#247: FILE: include/asm-generic/pgalloc.h:60:
+		BUG();

CHECK:LINE_SPACING: Please don't use multiple blank lines
#252: FILE: include/asm-generic/pgalloc.h:65:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#265: FILE: include/asm-generic/pgalloc.h:78:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#284: FILE: include/asm-generic/pgalloc.h:97:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#303: FILE: include/asm-generic/pgtable.h:201:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#333: FILE: include/asm-x86/pgalloc_32.h:43:
+extern void pgd_free(struct mm_struct *mm, pgd_t *pgd);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#348: FILE: include/asm-x86/pgalloc_32.h:69:
+	return (pmd_t *)page_address(alloc_pages_node(node,
+			 GFP_KERNEL | __GFP_REPEAT | __GFP_ZERO, 0));

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#359: FILE: include/asm-x86/pgalloc_32.h:103:
+#else ^I/* CONFIG_X86_PAE */$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#363: FILE: include/asm-x86/pgalloc_32.h:107:
+	BUG();

CHECK:LINE_SPACING: Please don't use multiple blank lines
#369: FILE: include/asm-x86/pgalloc_32.h:113:
 
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#371: FILE: include/asm-x86/pgalloc_32.h:115:
+extern void arch_cleanup_pgd_page(pgd_t *pgd);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#374: FILE: include/asm-x86/pgalloc_32.h:118:
+extern pgd_t *pgd_alloc_node(struct mm_struct *, int node);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#375: FILE: include/asm-x86/pgalloc_32.h:119:
+extern pte_t *pte_alloc_one_kernel_node(struct mm_struct *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#375: FILE: include/asm-x86/pgalloc_32.h:119:
+extern pte_t *pte_alloc_one_kernel_node(struct mm_struct *, unsigned long,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#375: FILE: include/asm-x86/pgalloc_32.h:119:
+extern pte_t *pte_alloc_one_kernel_node(struct mm_struct *, unsigned long,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#377: FILE: include/asm-x86/pgalloc_32.h:121:
+extern pgtable_t pte_alloc_one_node(struct mm_struct *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#377: FILE: include/asm-x86/pgalloc_32.h:121:
+extern pgtable_t pte_alloc_one_node(struct mm_struct *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#377: FILE: include/asm-x86/pgalloc_32.h:121:
+extern pgtable_t pte_alloc_one_node(struct mm_struct *, unsigned long,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#382: FILE: include/asm-x86/pgalloc_32.h:126:
+	BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#424: FILE: include/asm-x86/pgalloc_64.h:57:
+	BUG_ON((unsigned long)pgd & (PAGE_SIZE-1));

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#424: FILE: include/asm-x86/pgalloc_64.h:57:
+	BUG_ON((unsigned long)pgd & (PAGE_SIZE-1));
 	                                      ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#429: FILE: include/asm-x86/pgalloc_64.h:62:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#431: FILE: include/asm-x86/pgalloc_64.h:64:
+/* Should really implement gc for free page table pages. This could be
+   done with a reference count in struct page. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#431: FILE: include/asm-x86/pgalloc_64.h:64:
+   done with a reference count in struct page. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#435: FILE: include/asm-x86/pgalloc_64.h:68:
+	BUG_ON((unsigned long)pte & (PAGE_SIZE-1));

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#435: FILE: include/asm-x86/pgalloc_64.h:68:
+	BUG_ON((unsigned long)pte & (PAGE_SIZE-1));
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#445: FILE: include/asm-x86/pgalloc_64.h:78:
+#define __pte_free_tlb(tlb,pte)				\
                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pte' - possible side-effects?
#445: FILE: include/asm-x86/pgalloc_64.h:78:
+#define __pte_free_tlb(tlb,pte)				\
+do {							\
+	pgtable_page_dtor((pte));				\
+	tlb_remove_page((tlb), (pte));			\
+} while (0)

CHECK:SPACING: spaces preferred around that '|' (ctx:WxV)
#454: FILE: include/asm-x86/pgalloc_64.h:87:
+#define PAGE_ALLOC(node) alloc_pages_node(node, GFP_KERNEL |__GFP_REPEAT, 0)
                                                            ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#524: FILE: include/asm-x86/pgalloc_64.h:145:
+static inline pmd_t *pmd_alloc_one (struct mm_struct *mm, unsigned long addr)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#558: FILE: include/asm-x86/pgalloc_64.h:172:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#604: FILE: include/linux/migrate.h:9:
+typedef struct page *new_page_table_t(struct mm_struct *,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#639: FILE: include/linux/mm.h:962:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#647: FILE: include/linux/mm.h:970:
+static inline void delimbo_pte(pte_t **pte, spinlock_t **ptl,  pmd_t **pmd,
+			  struct mm_struct *mm,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#664: FILE: include/linux/mm.h:987:
+^I * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#671: FILE: include/linux/mm.h:994:
+^I * because we have the wrong lock. $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#703: FILE: include/linux/mm.h:1026:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#705: FILE: include/linux/mm.h:1028:
+static inline void delimbo_pud(pud_t **pud,  struct mm_struct *mm,
+			  unsigned long addr)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#746: FILE: include/linux/mm.h:1069:
+
+

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#847: FILE: include/linux/mm_types.h:246:
+	struct mutex page_table_relocation_lock;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#874: FILE: mm/Kconfig:146:
+config RELOCATE_PAGE_TABLES $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#969: FILE: mm/memory.c:2111:
+	/* Unless of course the cpu might be looking at an old
+	   copy of the pte. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#969: FILE: mm/memory.c:2111:
+	   copy of the pte. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#980: FILE: mm/memory.c:2166:
+	/* Unless of course the cpu might be looking at an old
+	   copy of the pte. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#980: FILE: mm/memory.c:2166:
+	   copy of the pte. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#991: FILE: mm/memory.c:2331:
+		/* Unless of course the cpu could be looking at an old page
+		   table entry. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#991: FILE: mm/memory.c:2331:
+		   table entry. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1020: FILE: mm/memory.c:2523:
+	/* if the cpu could be looking at an old page table, we need to
+	   flush out everything. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1020: FILE: mm/memory.c:2523:
+	   flush out everything. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1023: FILE: mm/memory.c:2526:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1071: FILE: mm/mempolicy.c:644:
+	struct page *p;
+	p = alloc_page_table_node(mm, addr, node, level);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1112: FILE: mm/migrate.c:45:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1183: FILE: mm/migrate.c:1133:
+
+

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1187: FILE: mm/migrate.c:1137:
+ * These are only used in the _delimbo* functions in mm/migrate.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1190: FILE: mm/migrate.c:1140:
+ * XXXXX Why not just copy this into mm/migrate.c?

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1193: FILE: mm/migrate.c:1143:
+static inline pgd_t *walk_page_table_pgd(struct mm_struct *mm,
+					  unsigned long addr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1201: FILE: mm/migrate.c:1151:
+	pgd_t *pgd;
+	pgd = walk_page_table_pgd(mm, addr);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1202: FILE: mm/migrate.c:1152:
+	BUG_ON(!pgd);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1214: FILE: mm/migrate.c:1164:
+	pud_t *pud;
+	pud = walk_page_table_pud(mm, addr);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1215: FILE: mm/migrate.c:1165:
+	BUG_ON(!pud);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1227: FILE: mm/migrate.c:1177:
+	pmd_t *pmd;
+	pmd = walk_page_table_pmd(mm, addr);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1228: FILE: mm/migrate.c:1178:
+	BUG_ON(!pmd);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1249: FILE: mm/migrate.c:1199:
+	pte_t *old_pte, old_pte_val=__pte(0);
 	                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1273: FILE: mm/migrate.c:1223:
+^I^I * pte entry that's in limbo. $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1300: FILE: mm/migrate.c:1250:
+	pte_t *old_pte, old_pte_val=__pte(0);
 	                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1319: FILE: mm/migrate.c:1269:
+^I^I * pte entry that's in limbo. $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1331: FILE: mm/migrate.c:1281:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1337: FILE: mm/migrate.c:1287:
+^I^I * the new pte. $

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1343: FILE: mm/migrate.c:1293:
+		if (optl != *ptl )

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1349: FILE: mm/migrate.c:1299:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1376: FILE: mm/migrate.c:1326:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1382: FILE: mm/migrate.c:1332:
+		spinlock_t *ptl;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1428: FILE: mm/migrate.c:1378:
+static inline int migrate_top_level_page_table_entry(struct mm_struct *mm,
+					     struct page *dest,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1437: FILE: mm/migrate.c:1387:
+	BUG_ON ((unsigned long)(mm->pgd) & ~PAGE_MASK);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1437: FILE: mm/migrate.c:1387:
+	BUG_ON ((unsigned long)(mm->pgd) & ~PAGE_MASK);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1480: FILE: mm/migrate.c:1430:
+{
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1486: FILE: mm/migrate.c:1436:
+	if (sizeof(pud_t) * PTRS_PER_PUD != PAGE_SIZE) {
+		return 1;
+	} 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1488: FILE: mm/migrate.c:1438:
+^I} $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1496: FILE: mm/migrate.c:1446:
+	BUG_ON ((unsigned long)src_pud & ~PAGE_MASK);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1496: FILE: mm/migrate.c:1446:
+	BUG_ON ((unsigned long)src_pud & ~PAGE_MASK);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1509: FILE: mm/migrate.c:1459:
+
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1516: FILE: mm/migrate.c:1466:
+
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1518: FILE: mm/migrate.c:1468:
+
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1544: FILE: mm/migrate.c:1494:
+	if (sizeof(pmd_t) * PTRS_PER_PMD != PAGE_SIZE) {
+		return 1;
+	} 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1546: FILE: mm/migrate.c:1496:
+^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1552: FILE: mm/migrate.c:1502:
+^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1553: FILE: mm/migrate.c:1503:
+	BUG_ON((unsigned long)src_pmd & ~PAGE_MASK);

CHECK:SPACING: No space is necessary after a cast
#1555: FILE: mm/migrate.c:1505:
+	dest_pmd = (pmd_t *) page_address(dest);

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1599: FILE: mm/migrate.c:1549:
+	spinlock_t *ptl;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1604: FILE: mm/migrate.c:1554:
+	if (sizeof(pte_t) * PTRS_PER_PTE != PAGE_SIZE) {
+		return 1;
+	} 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1606: FILE: mm/migrate.c:1556:
+^I} $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1613: FILE: mm/migrate.c:1563:
+	/* this could happen if the page table has been swapped out and we
+	   were looking at the old one. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1613: FILE: mm/migrate.c:1563:
+	   were looking at the old one. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1627: FILE: mm/migrate.c:1577:
+	BUG_ON ((unsigned long)src_pte & ~PAGE_MASK);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1627: FILE: mm/migrate.c:1577:
+	BUG_ON ((unsigned long)src_pte & ~PAGE_MASK);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1686: FILE: mm/migrate.c:1636:
+		not_migrated = migrate_pmd_entry(pmd, mm, *address, new_page,
+					   old_pages);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1693: FILE: mm/migrate.c:1643:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1735: FILE: mm/migrate.c:1685:
+		int ret;
+		ret = migrate_page_tables_pmd_entry(pmd_offset(pud, *address),

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1780: FILE: mm/migrate.c:1730:
+
+	}

WARNING:LINE_SPACING: Missing a blank line after declarations
#1784: FILE: mm/migrate.c:1734:
+		int ret;
+		ret = migrate_page_tables_pud_entry(pud_offset(pgd, *address),

WARNING:TYPO_SPELLING: 'beacuse' may be misspelled - perhaps 'because'?
#1805: FILE: mm/migrate.c:1755:
+	 * beacuse we only check this inside the spinlock,
 	   ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1820: FILE: mm/migrate.c:1770:
+	BUG_ON(mm->page_table_relocation_count > INT_MAX/2);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1820: FILE: mm/migrate.c:1770:
+	BUG_ON(mm->page_table_relocation_count > INT_MAX/2);
 	                                                ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1835: FILE: mm/migrate.c:1785:
+	BUG_ON(mm->page_table_relocation_count < 0);

WARNING:TYPO_SPELLING: 'Similiar' may be misspelled - perhaps 'Similar'?
#1840: FILE: mm/migrate.c:1790:
+/* Similiar to migrate pages, but migrates the page tables.
    ^^^^^^^^

WARNING:TYPO_SPELLING: 'get's' may be misspelled - perhaps 'gets'?
#1842: FILE: mm/migrate.c:1792:
+ * the source node to whatever get's allocated by get_new_page.
                                ^^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mm->pgd"
#1863: FILE: mm/migrate.c:1813:
+	if (mm->pgd == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'unneccessary' may be misspelled - perhaps 'unnecessary'?
#1867: FILE: mm/migrate.c:1817:
+	 * mucking with, we will do a bunch of unneccessary
 	                                       ^^^^^^^^^^^^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1899: FILE: mm/migrate.c:1849:
+		if (not_migrated) {
+			free_page_table_page(mm, new_page, PAGE_TABLE_PGD);
+		}

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000282802.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 14 errors, 57 warnings, 44 checks, 1801 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000282802.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
