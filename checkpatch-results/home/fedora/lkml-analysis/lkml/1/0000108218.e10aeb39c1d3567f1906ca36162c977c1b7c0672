WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
I have a patch to rip out the prefixes and use sparse annotations instead; I'll

CHECK:SPACING: No space is necessary after a cast
#116: FILE: arch/ia64/kernel/setup.c:975:
+	cpuinfo = cpu_data + ((char *) &__ia64_per_cpu_var(cpu_info) - __per_cpu_start);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#265: FILE: arch/x86/kernel/dumpstack_64.c:43:
+		unsigned long end = per_cpu(orig_ist_pcpu, cpu).ist[k];
 		                                                ^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#316: FILE: arch/x86/kvm/svm.c:304:
 	struct svm_cpu_data *svm_data
+		= per_cpu(svm_data_pcpu, raw_smp_processor_id());

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#627: FILE: kernel/softlockup.c:134:
+	if (now > touch_ts + softlockup_thresh/2)
 	                                      ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!reap->work.func"
#661: FILE: mm/slab.c:943:
+	if (keventd_up() && reap->work.func == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#667: FILE: mm/slab.c:947:
+		schedule_delayed_work_on(cpu, reap,
 					__round_jiffies_relative(HZ, cpu));

WARNING:BAD_SIGN_OFF: Duplicate signature
#696: 
Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#733: FILE: arch/alpha/include/asm/percpu.h:46:
+		ldq %0, "#var"(%1)\t!literal"		\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#733: FILE: arch/alpha/include/asm/percpu.h:46:
+		ldq %0, "#var"(%1)\t!literal"		\

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#733: FILE: arch/alpha/include/asm/percpu.h:46:
+		ldq %0, "#var"(%1)\t!literal"		\

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#875: FILE: arch/x86/include/asm/percpu.h:69:
+	movl %fs:this_cpu_off, reg;			\
 	     ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#875: FILE: arch/x86/include/asm/percpu.h:69:
+	movl %fs:this_cpu_off, reg;			\
 	        ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#877: FILE: arch/x86/include/asm/percpu.h:71:
+#define PER_CPU_VAR(var)	%fs:var
                         	^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#877: FILE: arch/x86/include/asm/percpu.h:71:
+#define PER_CPU_VAR(var)	%fs:var
                         	   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#877: FILE: arch/x86/include/asm/percpu.h:71:
+#define PER_CPU_VAR(var)	%fs:var

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#912: FILE: arch/x86/kernel/entry_64.S:1076:
+	subq $EXCEPTION_STKSZ, init_tss + TSS_ist + (\ist - 1) * 8(%rbp)
 	                                              ^^^

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#915: FILE: arch/x86/kernel/entry_64.S:1078:
+	addq $EXCEPTION_STKSZ, init_tss + TSS_ist + (\ist - 1) * 8(%rbp)
 	                                              ^^^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1007: FILE: include/linux/percpu.h:41:
+#define EXPORT_PER_CPU_SYMBOL(var) EXPORT_SYMBOL(var)

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:BAD_SIGN_OFF: Duplicate signature
#1019: 
Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

CHECK:MACRO_ARG_REUSE: Macro argument reuse '__p' - possible side-effects?
#1036: FILE: include/asm-generic/percpu.h:49:
+#define SHIFT_PERCPU_PTR(__p, __offset)	\
+	((typeof(*__p) __kernel __force *)RELOC_HIDE((__p), (__offset)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '__p' may be better as '(__p)' to avoid precedence issues
#1036: FILE: include/asm-generic/percpu.h:49:
+#define SHIFT_PERCPU_PTR(__p, __offset)	\
+	((typeof(*__p) __kernel __force *)RELOC_HIDE((__p), (__offset)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'addr' - possible side-effects?
#1045: FILE: include/asm-generic/percpu.h:66:
+#define RELOC_PERCPU(addr, off) \
+	((typeof(*addr) __kernel __force *)RELOC_HIDE((addr), (off)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'addr' may be better as '(addr)' to avoid precedence issues
#1045: FILE: include/asm-generic/percpu.h:66:
+#define RELOC_PERCPU(addr, off) \
+	((typeof(*addr) __kernel __force *)RELOC_HIDE((addr), (off)))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1080: FILE: include/asm-generic/percpu.h:108:
+#define DECLARE_PER_CPU(type, name) \
+	extern PER_CPU_ATTRIBUTES __percpu __typeof__(type) per_cpu_var(name)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000108218.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 9 warnings, 14 checks, 832 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000108218.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
