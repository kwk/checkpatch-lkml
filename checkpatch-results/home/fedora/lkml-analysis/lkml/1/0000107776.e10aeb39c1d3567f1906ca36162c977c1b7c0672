WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
> > everything" one, because there are situations in which we don't want even

WARNING:TYPO_SPELLING: 'responsibile' may be misspelled - perhaps 'responsible'?
#231: FILE: kernel/power/Kconfig:223:
+	  responsibile for the actual handling of the autosuspend requests and
 	  ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#265: FILE: kernel/power/main.c:237:
+	int error = pm_start_workqueue();
+	if (error)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#397: FILE: include/linux/pm.h:413:
+	spinlock_t		lock;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#418: FILE: drivers/base/power/runtime.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#419: FILE: drivers/base/power/runtime.c:2:
+ * drivers/base/power/runtime.c - Helper functions for device run-time PM

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#447: FILE: drivers/base/power/runtime.c:30:
+		dev_warn(dev, "Excessive %s!\n", __FUNCTION__);

WARNING:TYPO_SPELLING: 'funtion' may be misspelled - perhaps 'function'?
#469: FILE: drivers/base/power/runtime.c:52:
+ * @sync: If unset, the funtion has been called via pm_wq.
                         ^^^^^^^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#493: FILE: drivers/base/power/runtime.c:76:
+	} else if ((dev->power.runtime_status & (RPM_WAKE | RPM_RESUMING))
+	    || dev->power.resume_count > 0

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#494: FILE: drivers/base/power/runtime.c:77:
+	    || dev->power.resume_count > 0
+	    || (!sync && dev->power.suspend_aborted)) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#644: FILE: drivers/base/power/runtime.c:227:
+		dev_warn(dev, "Excessive %s!\n", __FUNCTION__);

WARNING:TYPO_SPELLING: 'funtion' may be misspelled - perhaps 'function'?
#651: FILE: drivers/base/power/runtime.c:234:
+ * @sync: If unset, the funtion has been called via pm_wq.
                         ^^^^^^^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#719: FILE: drivers/base/power/runtime.c:302:
+	} else if (dev->power.runtime_status == RPM_SUSPENDED && parent
+	    && parent->power.runtime_status != RPM_ACTIVE) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#819: FILE: drivers/base/power/runtime.c:402:
+	if ((dev->power.runtime_status & RPM_WAKE)
+	    || !(dev->power.runtime_status &

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#823: FILE: drivers/base/power/runtime.c:406:
+	} else if (parent && !(parent->power.runtime_status & RPM_WAKE)
+	    && (parent->power.runtime_status &

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#956: FILE: include/linux/pm_runtime.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#974: FILE: include/linux/pm_runtime.h:19:
+extern void pm_runtime_init(struct device *dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#975: FILE: include/linux/pm_runtime.h:20:
+extern int __pm_runtime_suspend(struct device *dev, bool sync);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#976: FILE: include/linux/pm_runtime.h:21:
+extern void pm_request_suspend(struct device *dev, unsigned int msec);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#977: FILE: include/linux/pm_runtime.h:22:
+extern int __pm_runtime_resume(struct device *dev, bool get, bool sync);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#978: FILE: include/linux/pm_runtime.h:23:
+extern void pm_request_resume(struct device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#979: FILE: include/linux/pm_runtime.h:24:
+extern void pm_runtime_put(struct device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#980: FILE: include/linux/pm_runtime.h:25:
+extern void pm_runtime_disable(struct device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#981: FILE: include/linux/pm_runtime.h:26:
+extern void __pm_runtime_clear_status(struct device *dev, unsigned int status);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1008: FILE: include/linux/pm_runtime.h:53:
+	return pm_children_suspended(dev) && !(dev->power.resume_count > 0
+		|| (dev->power.runtime_status & (RPM_WAKE | RPM_RESUMING)));

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1021: FILE: include/linux/pm_runtime.h:66:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1023: FILE: include/linux/pm_runtime.h:68:
+}
+static inline void pm_request_suspend(struct device *dev, unsigned int msec) {}

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1026: FILE: include/linux/pm_runtime.h:71:
+	return -ENOSYS;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1028: FILE: include/linux/pm_runtime.h:73:
+}
+static inline void pm_request_resume(struct device *dev) {}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1032: FILE: include/linux/pm_runtime.h:77:
+static inline void __pm_runtime_clear_status(struct device *dev,
+					      unsigned int status) {}

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000107776.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 12 warnings, 18 checks, 1274 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000107776.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
