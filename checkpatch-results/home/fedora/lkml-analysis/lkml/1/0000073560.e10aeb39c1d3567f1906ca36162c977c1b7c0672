WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
   git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip.git oprofile-for-linus

WARNING:TYPO_SPELLING: 'obselete' may be misspelled - perhaps 'obsolete'?
#66: 
      oprofile: remove obselete include headers
                       ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'an user' may be misspelled - perhaps 'a user'?
#147: FILE: arch/Kconfig:41:
+	  between events at an user specified time interval.
 	                    ^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#207: FILE: arch/x86/oprofile/nmi_int.c:58:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#241: FILE: arch/x86/oprofile/nmi_int.c:98:
+	struct op_msrs const *msrs = &__get_cpu_var(cpu_msrs);
+	model->start(msrs);

WARNING:LINE_SPACING: Missing a blank line after declarations
#253: FILE: arch/x86/oprofile/nmi_int.c:110:
+	struct op_msrs const *msrs = &__get_cpu_var(cpu_msrs);
+	model->stop(msrs);

WARNING:LINE_SPACING: Missing a blank line after declarations
#345: FILE: arch/x86/oprofile/nmi_int.c:197:
+		int virt = op_x86_phys_to_virt(i);
+		if (multiplex[virt].addr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#357: FILE: arch/x86/oprofile/nmi_int.c:209:
+		int virt = op_x86_phys_to_virt(i);
+		if (multiplex[virt].addr)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'si > model->num_virt_counters'
#375: FILE: arch/x86/oprofile/nmi_int.c:225:
+	if ((si > model->num_virt_counters) || (counter_config[si].count == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'counter_config[si].count == 0'
#375: FILE: arch/x86/oprofile/nmi_int.c:225:
+	if ((si > model->num_virt_counters) || (counter_config[si].count == 0))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#386: FILE: arch/x86/oprofile/nmi_int.c:236:
+
+

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#400: FILE: arch/x86/oprofile/nmi_int.c:250:
+		return -ENOSYS;		/* not implemented */

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#809: FILE: arch/x86/oprofile/op_model_amd.c:40:
+#define OP_CTR_OVERFLOW			(1ULL<<31)
                        			     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#809: FILE: arch/x86/oprofile/op_model_amd.c:40:
+#define OP_CTR_OVERFLOW			(1ULL<<31)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#833: FILE: arch/x86/oprofile/op_model_amd.c:42:
+#define MSR_AMD_EVENTSEL_RESERVED	((0xFFFFFCF0ULL<<32)|(1ULL<<21))
                                  	               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#833: FILE: arch/x86/oprofile/op_model_amd.c:42:
+#define MSR_AMD_EVENTSEL_RESERVED	((0xFFFFFCF0ULL<<32)|(1ULL<<21))
                                  	                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#833: FILE: arch/x86/oprofile/op_model_amd.c:42:
+#define MSR_AMD_EVENTSEL_RESERVED	((0xFFFFFCF0ULL<<32)|(1ULL<<21))
                                  	                          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#843: FILE: arch/x86/oprofile/op_model_amd.c:49:
+#define IBS_FETCH_RAND_EN		(1ULL<<57)
                          		     ^

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#843: FILE: arch/x86/oprofile/op_model_amd.c:49:
+#define IBS_FETCH_RAND_EN		(1ULL<<57)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#844: FILE: arch/x86/oprofile/op_model_amd.c:50:
+#define IBS_FETCH_VAL			(1ULL<<49)
                      			     ^

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#844: FILE: arch/x86/oprofile/op_model_amd.c:50:
+#define IBS_FETCH_VAL			(1ULL<<49)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#845: FILE: arch/x86/oprofile/op_model_amd.c:51:
+#define IBS_FETCH_ENABLE		(1ULL<<48)
                         		     ^

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#845: FILE: arch/x86/oprofile/op_model_amd.c:51:
+#define IBS_FETCH_ENABLE		(1ULL<<48)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#851: FILE: arch/x86/oprofile/op_model_amd.c:55:
+#define IBS_OP_CNT_CTL			(1ULL<<19)
                       			     ^

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#851: FILE: arch/x86/oprofile/op_model_amd.c:55:
+#define IBS_OP_CNT_CTL			(1ULL<<19)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#852: FILE: arch/x86/oprofile/op_model_amd.c:56:
+#define IBS_OP_VAL			(1ULL<<18)
                   			     ^

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#852: FILE: arch/x86/oprofile/op_model_amd.c:56:
+#define IBS_OP_VAL			(1ULL<<18)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#853: FILE: arch/x86/oprofile/op_model_amd.c:57:
+#define IBS_OP_ENABLE			(1ULL<<17)
                      			     ^

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#853: FILE: arch/x86/oprofile/op_model_amd.c:57:
+#define IBS_OP_ENABLE			(1ULL<<17)

WARNING:LINE_SPACING: Missing a blank line after declarations
#874: FILE: arch/x86/oprofile/op_model_amd.c:85:
+		int hw_counter = op_x86_virt_to_phys(i);
+		if (reserve_perfctr_nmi(MSR_K7_PERFCTR0 + i))

WARNING:LINE_SPACING: Missing a blank line after declarations
#890: FILE: arch/x86/oprofile/op_model_amd.c:101:
+		int virt = op_x86_phys_to_virt(i);
+		if (!counter_config[virt].enabled)

WARNING:LINE_SPACING: Missing a blank line after declarations
#962: FILE: arch/x86/oprofile/op_model_amd.c:172:
+		int virt = op_x86_phys_to_virt(i);
+		if (!counter_config[virt].enabled)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1102: FILE: arch/x86/oprofile/op_model_amd.c:249:
+	u64 val;
+	if (has_ibs && ibs_config.fetch_enabled) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1131: FILE: arch/x86/oprofile/op_model_amd.c:278:
+static inline void op_amd_handle_ibs(struct pt_regs * const regs,
+				    struct op_msrs const * const msrs) { }

WARNING:LINE_SPACING: Missing a blank line after declarations
#1148: FILE: arch/x86/oprofile/op_model_amd.c:292:
+		int virt = op_x86_phys_to_virt(i);
+		if (!reset_value[virt])

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1302: FILE: arch/x86/oprofile/op_model_p4.c:35:
+#define OP_CTR_OVERFLOW			(1ULL<<31)
                        			     ^

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#1302: FILE: arch/x86/oprofile/op_model_p4.c:35:
+#define OP_CTR_OVERFLOW			(1ULL<<31)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1535: FILE: arch/x86/oprofile/op_model_ppro.c:29:
+#define MSR_PPRO_EVENTSEL_RESERVED	((0xFFFFFFFFULL<<32)|(1ULL<<21))
                                   	               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1535: FILE: arch/x86/oprofile/op_model_ppro.c:29:
+#define MSR_PPRO_EVENTSEL_RESERVED	((0xFFFFFFFFULL<<32)|(1ULL<<21))
                                   	                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1535: FILE: arch/x86/oprofile/op_model_ppro.c:29:
+#define MSR_PPRO_EVENTSEL_RESERVED	((0xFFFFFFFFULL<<32)|(1ULL<<21))
                                   	                          ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1797: FILE: arch/x86/oprofile/op_x86_model.h:60:
+extern u64 op_x86_get_ctrl(struct op_x86_model_spec const *model,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1799: FILE: arch/x86/oprofile/op_x86_model.h:62:
+extern int op_x86_phys_to_virt(int phys);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1800: FILE: arch/x86/oprofile/op_x86_model.h:63:
+extern int op_x86_virt_to_phys(int virt);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1920: FILE: drivers/oprofile/oprof.c:147:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2004: FILE: drivers/oprofile/oprofile_files.c:31:
+static ssize_t timeout_read(struct file *file, char __user *buf,
+		size_t count, loff_t *offset)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2010: FILE: drivers/oprofile/oprofile_files.c:37:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2012: FILE: drivers/oprofile/oprofile_files.c:39:
+static ssize_t timeout_write(struct file *file, char const __user *buf,
+		size_t count, loff_t *offset)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2031: FILE: drivers/oprofile/oprofile_files.c:58:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2078: FILE: drivers/oprofile/oprofile_stats.c:82:
+	oprofilefs_create_ro_atomic(sb, dir, "multiplex_counter",
+		&oprofile_stats.multiplex_counter);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000073560.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 13 warnings, 36 checks, 1864 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000073560.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
