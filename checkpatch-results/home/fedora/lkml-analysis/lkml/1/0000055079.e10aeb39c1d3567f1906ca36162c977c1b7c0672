CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#108: FILE: arch/x86/include/asm/inat.h:106:
+extern insn_attr_t inat_get_avx_attribute(insn_byte_t opcode,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#211: FILE: arch/x86/include/asm/insn.h:159:
 }
+static inline int insn_offset_vex_prefix(struct insn *insn)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#215: FILE: arch/x86/include/asm/insn.h:163:
 }
+static inline int insn_offset_opcode(struct insn *insn)

WARNING:LINE_SPACING: Missing a blank line after declarations
#234: FILE: arch/x86/lib/inat.c:83:
+	const insn_attr_t *table;
+	if (vex_m > X86_VEX_M_MAX || vex_p > INAT_LSTPFX_MAX)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 't' - possible side-effects?
#250: FILE: arch/x86/lib/insn.c:31:
+#define peek_nbyte_next(t, insn, n)	\
+	({t r; r = *(t*)((insn)->next_byte + n); r; })

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#250: FILE: arch/x86/lib/insn.c:31:
+#define peek_nbyte_next(t, insn, n)	\
+	({t r; r = *(t*)((insn)->next_byte + n); r; })

CHECK:SPACING: spaces preferred around that '*' (ctx:VxB)
#251: FILE: arch/x86/lib/insn.c:32:
+	({t r; r = *(t*)((insn)->next_byte + n); r; })
 	              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#274: FILE: arch/x86/lib/insn.c:133:
+		insn_byte_t b2 = peek_nbyte_next(insn_byte_t, insn, 1);
+		if (!insn->x86_64) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#312: FILE: arch/x86/lib/insn.c:191:
+		insn_byte_t m, p;
+		m = insn_vex_m_bits(insn);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000055079.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 6 checks, 958 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000055079.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
