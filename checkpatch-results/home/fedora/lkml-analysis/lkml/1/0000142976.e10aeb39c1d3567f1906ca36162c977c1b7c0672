WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#55: FILE: arch/x86/kernel/cpu/mcheck/mce-inject.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/uaccess.h> instead of <asm/uaccess.h>
#74: FILE: arch/x86/kernel/cpu/mcheck/mce-inject.c:20:
+#include <asm/uaccess.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:TYPO_SPELLING: 'noone' may be misspelled - perhaps 'no one'?
#82: FILE: arch/x86/kernel/cpu/mcheck/mce-inject.c:28:
+	/* Make sure noone reads partially written injectm */
 	             ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:MEMORY_BARRIER: memory barrier without comment
#84: FILE: arch/x86/kernel/cpu/mcheck/mce-inject.c:30:
+	mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#88: FILE: arch/x86/kernel/cpu/mcheck/mce-inject.c:34:
+	mb();

WARNING:LINE_SPACING: Missing a blank line after declarations
#111: FILE: arch/x86/kernel/cpu/mcheck/mce-inject.c:57:
+		struct pt_regs regs;
+		memset(&regs, 0, sizeof(struct pt_regs));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#114: FILE: arch/x86/kernel/cpu/mcheck/mce-inject.c:60:
+		printk(KERN_INFO "Triggering MCE exception on CPU %d\n", cpu);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#116: FILE: arch/x86/kernel/cpu/mcheck/mce-inject.c:62:
+		printk(KERN_INFO "MCE exception done on CPU %d\n", cpu);

WARNING:LINE_SPACING: Missing a blank line after declarations
#119: FILE: arch/x86/kernel/cpu/mcheck/mce-inject.c:65:
+		mce_banks_t b;
+		memset(&b, 0xff, sizeof(mce_banks_t));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#120: FILE: arch/x86/kernel/cpu/mcheck/mce-inject.c:66:
+		printk(KERN_INFO "Starting machine check poll CPU %d\n", cpu);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#123: FILE: arch/x86/kernel/cpu/mcheck/mce-inject.c:69:
+		printk(KERN_INFO "Finished machine check poll on CPU %d\n",

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#130: FILE: arch/x86/kernel/cpu/mcheck/mce-inject.c:76:
+static ssize_t mce_write(struct file *filp, const char __user *ubuf,
                                       ^^^^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#153: FILE: arch/x86/kernel/cpu/mcheck/mce-inject.c:99:
+	if (m.extcpu >= NR_CPUS || !cpu_online(m.extcpu))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*dm)...) over kmalloc(sizeof(struct delayed_mce)...)
#156: FILE: arch/x86/kernel/cpu/mcheck/mce-inject.c:102:
+	dm = kmalloc(sizeof(struct delayed_mce), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#174: FILE: arch/x86/kernel/cpu/mcheck/mce-inject.c:120:
+	printk(KERN_INFO "Machine check injector initialized\n");

WARNING:CONST_STRUCT: struct file_operations should normally be const
#193: FILE: arch/x86/include/asm/mce.h:160:
+extern struct file_operations mce_chrdev_ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#194: FILE: arch/x86/include/asm/mce.h:161:
+extern int mce_notify_user(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#207: FILE: arch/x86/Kconfig:798:
+config X86_MCE_INJECT
+	depends on X86_64
+	tristate "Machine check injector support"
+	help
+	  Provide support for injecting machine checks for testing purposes.
+	  If you don't know what a machine check is and you don't do kernel
+	  QA it is safe to say n.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#250: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:236:
+	unsigned bank = __get_cpu_var(injectm.bank);

WARNING:LINE_SPACING: Missing a blank line after declarations
#251: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:237:
+	unsigned bank = __get_cpu_var(injectm.bank);
+	if (msr == rip_msr)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#253: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:239:
+	if (msr == MSR_IA32_MC0_STATUS + bank*4)
 	                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#255: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:241:
+	if (msr == MSR_IA32_MC0_ADDR + bank*4)
 	                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#257: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:243:
+	if (msr == MSR_IA32_MC0_MISC + bank*4)
 	                                   ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#270: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:256:
+		int offset = msr_to_offset(msr);
+		if (offset < 0)

WARNING:LINE_SPACING: Missing a blank line after declarations
#282: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:268:
+		int offset = msr_to_offset(msr);
+		if (offset >= 0)

WARNING:CONST_STRUCT: struct file_operations should normally be const
#318: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:1249:
+struct file_operations mce_chrdev_ops = {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000142976.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 20 warnings, 6 checks, 249 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000142976.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
