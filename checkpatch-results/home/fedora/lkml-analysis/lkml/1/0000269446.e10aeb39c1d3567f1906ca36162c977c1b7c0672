WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#40: FILE: drivers/misc/gru/gru.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#54: FILE: drivers/misc/gru/gru.h:15:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#55: FILE: drivers/misc/gru/gru.h:16:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#100: FILE: drivers/misc/gru/gru.h:61:
+#define GRU_OPT_MISS_FMM_INTR	0x0002	/* Send interrupt to cpu to
+					   handle fault */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#100: FILE: drivers/misc/gru/gru.h:61:
+					   handle fault */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#104: FILE: drivers/misc/gru/gru.h:65:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#112: FILE: drivers/misc/gru/grulib.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#126: FILE: drivers/misc/gru/grulib.h:15:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#127: FILE: drivers/misc/gru/grulib.h:16:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#135: FILE: drivers/misc/gru/grulib.h:24:
+#define GRU_IOCTL_NUM ^I^I 'G'$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'p' may be better as '(p)' to avoid precedence issues
#168: FILE: drivers/misc/gru/grulib.h:57:
+#define THREAD_POINTER(p, th)		(p + GRU_GSEG_PAGESIZE * (th))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#214: FILE: drivers/misc/gru/grutables.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#232: FILE: drivers/misc/gru/grutables.h:19:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#233: FILE: drivers/misc/gru/grutables.h:20:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#242: FILE: drivers/misc/gru/grutables.h:29:
+ * ^IVDATA-VMA Data^I^I- Holds a few parameters. Head of linked list of$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#243: FILE: drivers/misc/gru/grutables.h:30:
+ * ^I^I^I^I  GTS tables for threads using the GSEG$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#244: FILE: drivers/misc/gru/grutables.h:31:
+ * ^IGTS - Gru Thread State  - contains info for managing a GSEG context. A$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#245: FILE: drivers/misc/gru/grutables.h:32:
+ * ^I^I^I^I  GTS is allocated for each thread accessing a$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#246: FILE: drivers/misc/gru/grutables.h:33:
+ * ^I^I^I^I  GSEG.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#247: FILE: drivers/misc/gru/grutables.h:34:
+ *     ^IGTD - GRU Thread Data   - contains shadow copy of GRU data when GSEG is$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#248: FILE: drivers/misc/gru/grutables.h:35:
+ *     ^I^I^I^I  not loaded into a GRU$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#253: FILE: drivers/misc/gru/grutables.h:40:
+ *^IGS  - GRU State ^I- Used to manage the state of a GRU chiplet$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#259: FILE: drivers/misc/gru/grutables.h:46:
+ *  ^I^I- 2 threads in process$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#260: FILE: drivers/misc/gru/grutables.h:47:
+ *  ^I^I- 2 GSEGs open in process$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#261: FILE: drivers/misc/gru/grutables.h:48:
+ *  ^I^I- GSEG1 is being used by both threads$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#262: FILE: drivers/misc/gru/grutables.h:49:
+ *  ^I^I- GSEG2 is used only by thread 2$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#278: FILE: drivers/misc/gru/grutables.h:65:
+ * ^Ifile.private_data -> NULL$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#281: FILE: drivers/misc/gru/grutables.h:68:
+ * ^Ivma -> vdata$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#284: FILE: drivers/misc/gru/grutables.h:71:
+ * ^Ivma -> vdata ->gts$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#288: FILE: drivers/misc/gru/grutables.h:75:
+ * ^Ivma -> vdata -> gts$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#290: FILE: drivers/misc/gru/grutables.h:77:
+ * ^I(vma is not copied)$

WARNING:TYPO_SPELLING: 'mmaped' may be misspelled - perhaps 'mapped'?
#306: FILE: drivers/misc/gru/grutables.h:93:
+ * no mmaped files being accessed by the GRU, and no changes to the
       ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'unacceptible' may be misspelled - perhaps 'unacceptable'?
#309: FILE: drivers/misc/gru/grutables.h:96:
+ * This is clearly unacceptible for the final product  but works for
                    ^^^^^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#313: FILE: drivers/misc/gru/grutables.h:100:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#407: FILE: drivers/misc/gru/grutables.h:194:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#468: FILE: drivers/misc/gru/grutables.h:255:
+	unsigned short		mt_ctxbitmap;	/* bitmap of contexts using
+						   asid */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#468: FILE: drivers/misc/gru/grutables.h:255:
+						   asid */

WARNING:TYPO_SPELLING: 'mmaped' may be misspelled - perhaps 'mapped'?
#483: FILE: drivers/misc/gru/grutables.h:270:
+ * One of these structures is allocated when a GSEG is mmaped. The
                                                        ^^^^^^

WARNING:TYPO_SPELLING: 'mmaped' may be misspelled - perhaps 'mapped'?
#495: FILE: drivers/misc/gru/grutables.h:282:
+ * One of these is allocated for each thread accessing a mmaped GRU. A linked
                                                          ^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#502: FILE: drivers/misc/gru/grutables.h:289:
+	struct mm_struct	*ts_mm;		/* mm currently mapped to
+						   context */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#502: FILE: drivers/misc/gru/grutables.h:289:
+						   context */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#505: FILE: drivers/misc/gru/grutables.h:292:
+	struct gru_state	*ts_gru;	/* GRU where the context is
+						   loaded */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#505: FILE: drivers/misc/gru/grutables.h:292:
+						   loaded */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#509: FILE: drivers/misc/gru/grutables.h:296:
+	unsigned long		ts_dsr_map;	/* map of allocated DATA
+						   resources */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#509: FILE: drivers/misc/gru/grutables.h:296:
+						   resources */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#511: FILE: drivers/misc/gru/grutables.h:298:
+	unsigned long		ts_steal_jiffies;/* jiffies when context last
+						    stolen */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#511: FILE: drivers/misc/gru/grutables.h:298:
+						    stolen */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#514: FILE: drivers/misc/gru/grutables.h:301:
+	pid_t			ts_tgid_owner;	/* task that is using the
+						   context - for migration */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#514: FILE: drivers/misc/gru/grutables.h:301:
+						   context - for migration */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#516: FILE: drivers/misc/gru/grutables.h:303:
+	int			ts_tsid;	/* thread that owns the
+						   structure */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#516: FILE: drivers/misc/gru/grutables.h:303:
+						   structure */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#518: FILE: drivers/misc/gru/grutables.h:305:
+	int			ts_tlb_int_select;/* target cpu if interrupts
+						     enabled */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#518: FILE: drivers/misc/gru/grutables.h:305:
+						     enabled */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#520: FILE: drivers/misc/gru/grutables.h:307:
+	int			ts_ctxnum;	/* context number where the
+						   context is loaded */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#520: FILE: drivers/misc/gru/grutables.h:307:
+						   context is loaded */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#523: FILE: drivers/misc/gru/grutables.h:310:
+	unsigned char		ts_dsr_au_count;/* Number of DSR resources
+						   required for contest */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#523: FILE: drivers/misc/gru/grutables.h:310:
+						   required for contest */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#525: FILE: drivers/misc/gru/grutables.h:312:
+	unsigned char		ts_cbr_au_count;/* Number of CBR resources
+						   required for contest */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#525: FILE: drivers/misc/gru/grutables.h:312:
+						   required for contest */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#527: FILE: drivers/misc/gru/grutables.h:314:
+	char			ts_force_unload;/* force context to be unloaded
+						   after migration */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#527: FILE: drivers/misc/gru/grutables.h:314:
+						   after migration */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#529: FILE: drivers/misc/gru/grutables.h:316:
+	char			ts_cbr_idx[GRU_CBR_AU];/* CBR numbers of each
+							  allocated CB */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#529: FILE: drivers/misc/gru/grutables.h:316:
+							  allocated CB */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#531: FILE: drivers/misc/gru/grutables.h:318:
+	unsigned long		ts_gdata[0];	/* save area for GRU data (CB,
+						   DS, CBE) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#531: FILE: drivers/misc/gru/grutables.h:318:
+						   DS, CBE) */

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'gts' - possible side-effects?
#540: FILE: drivers/misc/gru/grutables.h:327:
+#define UGRUADDR(gts)		((gts)->ts_vma->vm_start +		\
+					(gts)->ts_tsid * GRU_GSEG_PAGESIZE)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#554: FILE: drivers/misc/gru/grutables.h:341:
+	struct gru_blade_state	*gs_blade;		/* GRU state for entire
+							   blade */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#554: FILE: drivers/misc/gru/grutables.h:341:
+							   blade */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#556: FILE: drivers/misc/gru/grutables.h:343:
+	unsigned long		gs_gru_base_paddr;	/* Physical address of
+							   gru segments (64) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#556: FILE: drivers/misc/gru/grutables.h:343:
+							   gru segments (64) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#558: FILE: drivers/misc/gru/grutables.h:345:
+	void			*gs_gru_base_vaddr;	/* Virtual address of
+							   gru segments (64) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#558: FILE: drivers/misc/gru/grutables.h:345:
+							   gru segments (64) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#561: FILE: drivers/misc/gru/grutables.h:348:
+	unsigned char		gs_tgh_local_shift;	/* used to pick TGH for
+							   local flush */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#561: FILE: drivers/misc/gru/grutables.h:348:
+							   local flush */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#563: FILE: drivers/misc/gru/grutables.h:350:
+	unsigned char		gs_tgh_first_remote;	/* starting TGH# for
+							   remote flush */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#563: FILE: drivers/misc/gru/grutables.h:350:
+							   remote flush */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#566: FILE: drivers/misc/gru/grutables.h:353:
+	spinlock_t		gs_asid_lock;		/* lock used for
+							   assigning asids */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#566: FILE: drivers/misc/gru/grutables.h:353:
+							   assigning asids */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#568: FILE: drivers/misc/gru/grutables.h:355:
+	spinlock_t		gs_lock;		/* lock used for
+							   assigning contexts */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#568: FILE: drivers/misc/gru/grutables.h:355:
+							   assigning contexts */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#573: FILE: drivers/misc/gru/grutables.h:360:
+	unsigned int		gs_asid_limit;		/* Limit of available
+							   ASIDs */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#573: FILE: drivers/misc/gru/grutables.h:360:
+							   ASIDs */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#575: FILE: drivers/misc/gru/grutables.h:362:
+	unsigned int		gs_asid_gen;		/* asid generation.
+							   Inc on wrap */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#575: FILE: drivers/misc/gru/grutables.h:362:
+							   Inc on wrap */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#579: FILE: drivers/misc/gru/grutables.h:366:
+	unsigned long		gs_context_map;		/* bitmap to manage
+							   contexts in use */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#579: FILE: drivers/misc/gru/grutables.h:366:
+							   contexts in use */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#581: FILE: drivers/misc/gru/grutables.h:368:
+	unsigned long		gs_cbr_map;		/* bitmap to manage CB
+							   resources */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#581: FILE: drivers/misc/gru/grutables.h:368:
+							   resources */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#583: FILE: drivers/misc/gru/grutables.h:370:
+	unsigned long		gs_dsr_map;		/* bitmap used to manage
+							   DATA resources */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#583: FILE: drivers/misc/gru/grutables.h:370:
+							   DATA resources */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#585: FILE: drivers/misc/gru/grutables.h:372:
+	unsigned int		gs_reserved_cbrs;	/* Number of kernel-
+							   reserved cbrs */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#585: FILE: drivers/misc/gru/grutables.h:372:
+							   reserved cbrs */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#587: FILE: drivers/misc/gru/grutables.h:374:
+	unsigned int		gs_reserved_dsr_bytes;	/* Bytes of kernel-
+							   reserved dsrs */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#587: FILE: drivers/misc/gru/grutables.h:374:
+							   reserved dsrs */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#589: FILE: drivers/misc/gru/grutables.h:376:
+	unsigned short		gs_active_contexts;	/* number of contexts
+							   in use */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#589: FILE: drivers/misc/gru/grutables.h:376:
+							   in use */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#591: FILE: drivers/misc/gru/grutables.h:378:
+	struct gru_thread_state	*gs_gts[GRU_NUM_CCH];	/* GTS currently using
+							   the context */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#591: FILE: drivers/misc/gru/grutables.h:378:
+							   the context */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#599: FILE: drivers/misc/gru/grutables.h:386:
+	void			*kernel_cb;		/* First kernel
+							   reserved cb */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#599: FILE: drivers/misc/gru/grutables.h:386:
+							   reserved cb */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#601: FILE: drivers/misc/gru/grutables.h:388:
+	void			*kernel_dsr;		/* First kernel
+							   reserved DSR */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#601: FILE: drivers/misc/gru/grutables.h:388:
+							   reserved DSR */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#604: FILE: drivers/misc/gru/grutables.h:391:
+	spinlock_t		bs_lock;		/* lock used for
+							   stealing contexts */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#604: FILE: drivers/misc/gru/grutables.h:391:
+							   stealing contexts */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#606: FILE: drivers/misc/gru/grutables.h:393:
+	int			bs_lru_ctxnum;		/* STEAL - last context
+							   stolen */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#606: FILE: drivers/misc/gru/grutables.h:393:
+							   stolen */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#608: FILE: drivers/misc/gru/grutables.h:395:
+	struct gru_state	*bs_lru_gru;		/* STEAL - last gru
+							   stolen */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#608: FILE: drivers/misc/gru/grutables.h:395:
+							   stolen */

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#638: FILE: drivers/misc/gru/grutables.h:425:
+#define thread_cbr_number(gts, n) ((gts)->ts_cbr_idx[(n) / GRU_CBR_AU_SIZE] \
+				  * GRU_CBR_AU_SIZE + (n) % GRU_CBR_AU_SIZE)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'gid' - possible side-effects?
#645: FILE: drivers/misc/gru/grutables.h:432:
+#define GID_TO_GRU(gid)							\
+	(gru_base[(gid) / GRU_CHIPLETS_PER_BLADE] ?			\
+		(&gru_base[(gid) / GRU_CHIPLETS_PER_BLADE]->		\
+			bs_grus[(gid) % GRU_CHIPLETS_PER_BLADE]) :	\
+	 NULL)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'gid' - possible side-effects?
#652: FILE: drivers/misc/gru/grutables.h:439:
+#define for_each_gru_in_bitmap(gid, map)				\
+	for ((gid) = find_first_bit((map), GRU_MAX_GRUS); (gid) < GRU_MAX_GRUS;\
+		(gid)++, (gid) = find_next_bit((map), GRU_MAX_GRUS, (gid)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'map' - possible side-effects?
#652: FILE: drivers/misc/gru/grutables.h:439:
+#define for_each_gru_in_bitmap(gid, map)				\
+	for ((gid) = find_first_bit((map), GRU_MAX_GRUS); (gid) < GRU_MAX_GRUS;\
+		(gid)++, (gid) = find_next_bit((map), GRU_MAX_GRUS, (gid)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'gru' - possible side-effects?
#657: FILE: drivers/misc/gru/grutables.h:444:
+#define for_each_gru_on_blade(gru, nid, i)				\
+	for ((gru) = gru_base[nid]->bs_grus, (i) = 0;			\
+			(i) < GRU_CHIPLETS_PER_BLADE;			\
+			(i)++, (gru)++)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#657: FILE: drivers/misc/gru/grutables.h:444:
+#define for_each_gru_on_blade(gru, nid, i)				\
+	for ((gru) = gru_base[nid]->bs_grus, (i) = 0;			\
+			(i) < GRU_CHIPLETS_PER_BLADE;			\
+			(i)++, (gru)++)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#663: FILE: drivers/misc/gru/grutables.h:450:
+#define for_each_gts_on_gru(gts, gru, ctxnum)				\
+	for ((ctxnum) = 0; (ctxnum) < GRU_NUM_CCH; (ctxnum)++)		\
+		if (((gts) = (gru)->gs_gts[ctxnum]))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ctxnum' - possible side-effects?
#663: FILE: drivers/misc/gru/grutables.h:450:
+#define for_each_gts_on_gru(gts, gru, ctxnum)				\
+	for ((ctxnum) = 0; (ctxnum) < GRU_NUM_CCH; (ctxnum)++)		\
+		if (((gts) = (gru)->gs_gts[ctxnum]))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#665: FILE: drivers/misc/gru/grutables.h:452:
+		if (((gts) = (gru)->gs_gts[ctxnum]))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#668: FILE: drivers/misc/gru/grutables.h:455:
+#define for_each_cbr_in_tfm(i, map)					\
+	for ((i) = find_first_bit(map, GRU_NUM_CBE);			\
+			(i) < GRU_NUM_CBE;				\
+			(i)++, (i) = find_next_bit(map, GRU_NUM_CBE, i))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'map' - possible side-effects?
#668: FILE: drivers/misc/gru/grutables.h:455:
+#define for_each_cbr_in_tfm(i, map)					\
+	for ((i) = find_first_bit(map, GRU_NUM_CBE);			\
+			(i) < GRU_NUM_CBE;				\
+			(i)++, (i) = find_next_bit(map, GRU_NUM_CBE, i))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#674: FILE: drivers/misc/gru/grutables.h:461:
+#define for_each_cbr_in_allocation_map(i, map, k)			\
+	for ((k) = find_first_bit(map, GRU_CBR_AU); (k) < GRU_CBR_AU;	\
+			(k) = find_next_bit(map, GRU_CBR_AU, (k) + 1)) 	\
+		for ((i) = (k)*GRU_CBR_AU_SIZE;				\
+				(i) < ((k) + 1) * GRU_CBR_AU_SIZE; (i)++)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#674: FILE: drivers/misc/gru/grutables.h:461:
+#define for_each_cbr_in_allocation_map(i, map, k)			\
+	for ((k) = find_first_bit(map, GRU_CBR_AU); (k) < GRU_CBR_AU;	\
+			(k) = find_next_bit(map, GRU_CBR_AU, (k) + 1)) 	\
+		for ((i) = (k)*GRU_CBR_AU_SIZE;				\
+				(i) < ((k) + 1) * GRU_CBR_AU_SIZE; (i)++)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'map' - possible side-effects?
#674: FILE: drivers/misc/gru/grutables.h:461:
+#define for_each_cbr_in_allocation_map(i, map, k)			\
+	for ((k) = find_first_bit(map, GRU_CBR_AU); (k) < GRU_CBR_AU;	\
+			(k) = find_next_bit(map, GRU_CBR_AU, (k) + 1)) 	\
+		for ((i) = (k)*GRU_CBR_AU_SIZE;				\
+				(i) < ((k) + 1) * GRU_CBR_AU_SIZE; (i)++)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'k' - possible side-effects?
#674: FILE: drivers/misc/gru/grutables.h:461:
+#define for_each_cbr_in_allocation_map(i, map, k)			\
+	for ((k) = find_first_bit(map, GRU_CBR_AU); (k) < GRU_CBR_AU;	\
+			(k) = find_next_bit(map, GRU_CBR_AU, (k) + 1)) 	\
+		for ((i) = (k)*GRU_CBR_AU_SIZE;				\
+				(i) < ((k) + 1) * GRU_CBR_AU_SIZE; (i)++)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#676: FILE: drivers/misc/gru/grutables.h:463:
+^I^I^I(k) = find_next_bit(map, GRU_CBR_AU, (k) + 1)) ^I\$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#677: FILE: drivers/misc/gru/grutables.h:464:
+		for ((i) = (k)*GRU_CBR_AU_SIZE;				\
 		              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#681: FILE: drivers/misc/gru/grutables.h:468:
+#define for_each_dsr_in_allocation_map(i, map, k)			\
+	for ((k) = find_first_bit((const unsigned long *)map, GRU_DSR_AU);\
+			(k) < GRU_DSR_AU;				\
+			(k) = find_next_bit((const unsigned long *)map,	\
+					  GRU_DSR_AU, (k) + 1))		\
+		for ((i) = (k) * GRU_DSR_AU_CL;				\
+				(i) < ((k) + 1) * GRU_DSR_AU_CL; (i)++)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#681: FILE: drivers/misc/gru/grutables.h:468:
+#define for_each_dsr_in_allocation_map(i, map, k)			\
+	for ((k) = find_first_bit((const unsigned long *)map, GRU_DSR_AU);\
+			(k) < GRU_DSR_AU;				\
+			(k) = find_next_bit((const unsigned long *)map,	\
+					  GRU_DSR_AU, (k) + 1))		\
+		for ((i) = (k) * GRU_DSR_AU_CL;				\
+				(i) < ((k) + 1) * GRU_DSR_AU_CL; (i)++)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'map' - possible side-effects?
#681: FILE: drivers/misc/gru/grutables.h:468:
+#define for_each_dsr_in_allocation_map(i, map, k)			\
+	for ((k) = find_first_bit((const unsigned long *)map, GRU_DSR_AU);\
+			(k) < GRU_DSR_AU;				\
+			(k) = find_next_bit((const unsigned long *)map,	\
+					  GRU_DSR_AU, (k) + 1))		\
+		for ((i) = (k) * GRU_DSR_AU_CL;				\
+				(i) < ((k) + 1) * GRU_DSR_AU_CL; (i)++)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'k' - possible side-effects?
#681: FILE: drivers/misc/gru/grutables.h:468:
+#define for_each_dsr_in_allocation_map(i, map, k)			\
+	for ((k) = find_first_bit((const unsigned long *)map, GRU_DSR_AU);\
+			(k) < GRU_DSR_AU;				\
+			(k) = find_next_bit((const unsigned long *)map,	\
+					  GRU_DSR_AU, (k) + 1))		\
+		for ((i) = (k) * GRU_DSR_AU_CL;				\
+				(i) < ((k) + 1) * GRU_DSR_AU_CL; (i)++)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ctxnum' may be better as '(ctxnum)' to avoid precedence issues
#689: FILE: drivers/misc/gru/grutables.h:476:
+#define gseg_physical_address(gru, ctxnum)				\
+		((gru)->gs_gru_base_paddr + ctxnum * GRU_GSEG_STRIDE)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ctxnum' may be better as '(ctxnum)' to avoid precedence issues
#691: FILE: drivers/misc/gru/grutables.h:478:
+#define gseg_virtual_address(gru, ctxnum)				\
+		((gru)->gs_gru_base_vaddr + ctxnum * GRU_GSEG_STRIDE)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#696: FILE: drivers/misc/gru/grutables.h:483:
+ * ^IUse the "delresp" bit in the handle as a "lock" bit.$

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#738: FILE: drivers/misc/gru/grutables.h:525:
+extern struct vm_operations_struct gru_vm_ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#741: FILE: drivers/misc/gru/grutables.h:528:
+extern struct gru_vma_data *gru_alloc_vma_data(struct vm_area_struct *vma,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#742: FILE: drivers/misc/gru/grutables.h:529:
+extern struct gru_vma_data *gru_alloc_vma_data(struct vm_area_struct *vma,
+				int tsid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#743: FILE: drivers/misc/gru/grutables.h:530:
+extern struct gru_thread_state *gru_find_thread_state(struct vm_area_struct

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#745: FILE: drivers/misc/gru/grutables.h:532:
+extern struct gru_thread_state *gru_alloc_thread_state(struct vm_area_struct

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#747: FILE: drivers/misc/gru/grutables.h:534:
+extern void gru_unload_context(struct gru_thread_state *gts, int savestate);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#748: FILE: drivers/misc/gru/grutables.h:535:
+extern void gts_drop(struct gru_thread_state *gts);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#749: FILE: drivers/misc/gru/grutables.h:536:
+extern void gru_tgh_flush_init(struct gru_state *gru);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#750: FILE: drivers/misc/gru/grutables.h:537:
+extern int gru_kservices_init(struct gru_state *gru);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#751: FILE: drivers/misc/gru/grutables.h:538:
+extern irqreturn_t gru_intr(int irq, void *dev_id);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#752: FILE: drivers/misc/gru/grutables.h:539:
+extern int gru_handle_user_call_os(unsigned long address);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#753: FILE: drivers/misc/gru/grutables.h:540:
+extern int gru_user_flush_tlb(unsigned long arg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#754: FILE: drivers/misc/gru/grutables.h:541:
+extern int gru_user_unload_context(unsigned long arg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#755: FILE: drivers/misc/gru/grutables.h:542:
+extern int gru_get_exception_detail(unsigned long arg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#756: FILE: drivers/misc/gru/grutables.h:543:
+extern int gru_set_task_slice(long address);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#757: FILE: drivers/misc/gru/grutables.h:544:
+extern int gru_cpu_fault_map_id(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#758: FILE: drivers/misc/gru/grutables.h:545:
+extern struct vm_area_struct *gru_find_vma(unsigned long vaddr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#759: FILE: drivers/misc/gru/grutables.h:546:
+extern void gru_flush_all_tlb(struct gru_state *gru);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#760: FILE: drivers/misc/gru/grutables.h:547:
+extern void gru_migrate_task(int pcpu, int cpu);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#761: FILE: drivers/misc/gru/grutables.h:548:
+extern int gru_proc_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#762: FILE: drivers/misc/gru/grutables.h:549:
+extern void gru_proc_exit(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#763: FILE: drivers/misc/gru/grutables.h:550:
+extern int quicktest2(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#765: FILE: drivers/misc/gru/grutables.h:552:
+extern unsigned long reserve_gru_cb_resources(struct gru_state *gru,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#766: FILE: drivers/misc/gru/grutables.h:553:
+extern unsigned long reserve_gru_cb_resources(struct gru_state *gru,
+		int cbr_au_count, char *cbmap);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#767: FILE: drivers/misc/gru/grutables.h:554:
+extern unsigned long reserve_gru_ds_resources(struct gru_state *gru,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#768: FILE: drivers/misc/gru/grutables.h:555:
+extern unsigned long reserve_gru_ds_resources(struct gru_state *gru,
+		int dsr_au_count, char *dsmap);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#769: FILE: drivers/misc/gru/grutables.h:556:
+extern int gru_fault(struct vm_area_struct *, struct vm_fault *vmf);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm_area_struct *' should also have an identifier name
#769: FILE: drivers/misc/gru/grutables.h:556:
+extern int gru_fault(struct vm_area_struct *, struct vm_fault *vmf);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#770: FILE: drivers/misc/gru/grutables.h:557:
+extern struct gru_mm_struct *gru_register_mmu_notifier(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#771: FILE: drivers/misc/gru/grutables.h:558:
+extern void gru_drop_mmu_notifier(struct gru_mm_struct *gms);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#773: FILE: drivers/misc/gru/grutables.h:560:
+extern void gru_flush_tlb_range(struct gru_mm_struct *gms, unsigned long start,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#774: FILE: drivers/misc/gru/grutables.h:561:
+extern void gru_flush_tlb_range(struct gru_mm_struct *gms, unsigned long start,
+					unsigned long len);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000269446.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 101 warnings, 53 checks, 729 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000269446.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
