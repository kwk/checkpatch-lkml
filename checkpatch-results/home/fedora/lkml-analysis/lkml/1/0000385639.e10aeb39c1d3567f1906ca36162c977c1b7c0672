WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#84: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#93: FILE: drivers/dca/Kconfig:5:
+config DCA
+	tristate "DCA support for clients and providers"
+	default m
+	help
+	  This is a server to help modules that want to use Direct Cache
+	  Access to find DCA providers that will supply correct CPU tags.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#114: FILE: drivers/dca/dca-core.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#128: FILE: drivers/dca/dca-core.c:15:
+ * this program; if not, write to the Free Software Foundation, Inc., 59$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#150: FILE: drivers/dca/dca-core.c:37:
+static struct dca_provider *global_dca = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:LINE_SPACING: Missing a blank line after declarations
#188: FILE: drivers/dca/dca-core.c:75:
+	int slot;
+	if (!global_dca)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#320: FILE: drivers/dca/dca-sysfs.c:1:
+#include <linux/kernel.h>

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#414: FILE: include/linux/dca.h:1:
+#ifndef DCA_H

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#427: FILE: include/linux/dca.h:14:
+^Istruct class_device ^I*cd;$

WARNING:SPACING: Unnecessary space before function pointer arguments
#432: FILE: include/linux/dca.h:19:
+	int	(*add_requester)    (struct dca_provider *, struct device *);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dca_provider *' should also have an identifier name
#432: FILE: include/linux/dca.h:19:
+	int	(*add_requester)    (struct dca_provider *, struct device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#432: FILE: include/linux/dca.h:19:
+	int	(*add_requester)    (struct dca_provider *, struct device *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#433: FILE: include/linux/dca.h:20:
+	int	(*remove_requester) (struct dca_provider *, struct device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dca_provider *' should also have an identifier name
#433: FILE: include/linux/dca.h:20:
+	int	(*remove_requester) (struct dca_provider *, struct device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#433: FILE: include/linux/dca.h:20:
+	int	(*remove_requester) (struct dca_provider *, struct device *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#434: FILE: include/linux/dca.h:21:
+	u8	(*get_tag)	    (struct dca_provider *, int cpu);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dca_provider *' should also have an identifier name
#434: FILE: include/linux/dca.h:21:
+	u8	(*get_tag)	    (struct dca_provider *, int cpu);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000385639.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 15 warnings, 0 checks, 363 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000385639.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
