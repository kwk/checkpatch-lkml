ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Jeffrey Vernon Merkey (jmerkey@wolfmountaingroup.com)'
#25: 
Signed-off-by: Jeffrey Vernon Merkey (jmerkey@wolfmountaingroup.com)

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#30: FILE: debug/mdb/mdb-os.h:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#32: FILE: debug/mdb/mdb-os.h:3:
+/***************************************************************************
+*

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#67: FILE: debug/mdb/mdb-os.h:38:
+#define MAX_SYMBOL_LEN  KSYM_NAME_LEN+1
                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#67: FILE: debug/mdb/mdb-os.h:38:
+#define MAX_SYMBOL_LEN  KSYM_NAME_LEN+1

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#70: FILE: debug/mdb/mdb-os.h:41:
+extern volatile int pause_mode;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#77: FILE: debug/mdb/mdb-os.h:48:
+extern int mdb_kallsyms(char *str, int (*print)(char *s, ...));

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#78: FILE: debug/mdb/mdb-os.h:49:
+extern int mdb_modules(char *str, int (*print)(char *s, ...));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#79: FILE: debug/mdb/mdb-os.h:50:
+extern int mdb_getkey(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#80: FILE: debug/mdb/mdb-os.h:51:
+extern int mdb_getlword(unsigned long *word, unsigned long addr, size_t size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#81: FILE: debug/mdb/mdb-os.h:52:
+extern int mdb_putword(unsigned long addr, unsigned long word, size_t size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#82: FILE: debug/mdb/mdb-os.h:53:
+extern unsigned long mdb_getword(unsigned long addr, size_t size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#83: FILE: debug/mdb/mdb-os.h:54:
+extern int mdb_verify_rw(void *addr, size_t size);

CHECK:CAMELCASE: Avoid CamelCase: <ValidateAddress>
#84: FILE: debug/mdb/mdb-os.h:55:
+extern unsigned long ValidateAddress(unsigned long addr, unsigned long length);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#84: FILE: debug/mdb/mdb-os.h:55:
+extern unsigned long ValidateAddress(unsigned long addr, unsigned long length);

CHECK:CAMELCASE: Avoid CamelCase: <DisplayClosestSymbol>
#85: FILE: debug/mdb/mdb-os.h:56:
+extern int DisplayClosestSymbol(unsigned long address);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#85: FILE: debug/mdb/mdb-os.h:56:
+extern int DisplayClosestSymbol(unsigned long address);

CHECK:CAMELCASE: Avoid CamelCase: <DumpOSSymbolTableMatch>
#86: FILE: debug/mdb/mdb-os.h:57:
+extern void DumpOSSymbolTableMatch(unsigned char *symbol);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#86: FILE: debug/mdb/mdb-os.h:57:
+extern void DumpOSSymbolTableMatch(unsigned char *symbol);

CHECK:CAMELCASE: Avoid CamelCase: <DumpOSSymbolTable>
#87: FILE: debug/mdb/mdb-os.h:58:
+extern void DumpOSSymbolTable(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#87: FILE: debug/mdb/mdb-os.h:58:
+extern void DumpOSSymbolTable(void);

CHECK:CAMELCASE: Avoid CamelCase: <GetValueFromSymbol>
#88: FILE: debug/mdb/mdb-os.h:59:
+extern unsigned long GetValueFromSymbol(unsigned char *symbol);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#88: FILE: debug/mdb/mdb-os.h:59:
+extern unsigned long GetValueFromSymbol(unsigned char *symbol);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#89: FILE: debug/mdb/mdb-os.h:60:
+extern unsigned char *GetModuleInfoFromSymbolValue(unsigned long value, unsigned char *buf, unsigned long len);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <GetModuleInfoFromSymbolValue>
#89: FILE: debug/mdb/mdb-os.h:60:
+extern unsigned char *GetModuleInfoFromSymbolValue(unsigned long value, unsigned char *buf, unsigned long len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#89: FILE: debug/mdb/mdb-os.h:60:
+extern unsigned char *GetModuleInfoFromSymbolValue(unsigned long value, unsigned char *buf, unsigned long len);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#90: FILE: debug/mdb/mdb-os.h:61:
+extern unsigned char *GetSymbolFromValue(unsigned long value, unsigned char *buf, unsigned long len);

CHECK:CAMELCASE: Avoid CamelCase: <GetSymbolFromValue>
#90: FILE: debug/mdb/mdb-os.h:61:
+extern unsigned char *GetSymbolFromValue(unsigned long value, unsigned char *buf, unsigned long len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#90: FILE: debug/mdb/mdb-os.h:61:
+extern unsigned char *GetSymbolFromValue(unsigned long value, unsigned char *buf, unsigned long len);

CHECK:CAMELCASE: Avoid CamelCase: <GetSymbolFromValueWithOffset>
#91: FILE: debug/mdb/mdb-os.h:62:
+extern unsigned char *GetSymbolFromValueWithOffset(unsigned long value, unsigned long *sym_offset,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#91: FILE: debug/mdb/mdb-os.h:62:
+extern unsigned char *GetSymbolFromValueWithOffset(unsigned long value, unsigned long *sym_offset,

ERROR:CODE_INDENT: code indent should use tabs where possible
#92: FILE: debug/mdb/mdb-os.h:63:
+                                          unsigned char *buf, unsigned long len);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#92: FILE: debug/mdb/mdb-os.h:63:
+extern unsigned char *GetSymbolFromValueWithOffset(unsigned long value, unsigned long *sym_offset,
+                                          unsigned char *buf, unsigned long len);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: debug/mdb/mdb-os.h:63:
+                                          unsigned char *buf, unsigned long len);$

CHECK:CAMELCASE: Avoid CamelCase: <GetSymbolFromValueOffsetModule>
#93: FILE: debug/mdb/mdb-os.h:64:
+extern unsigned char *GetSymbolFromValueOffsetModule(unsigned long value, unsigned long *sym_offset,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#93: FILE: debug/mdb/mdb-os.h:64:
+extern unsigned char *GetSymbolFromValueOffsetModule(unsigned long value, unsigned long *sym_offset,

ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: debug/mdb/mdb-os.h:65:
+                                     unsigned char **module, unsigned char *buf, unsigned long len);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#94: FILE: debug/mdb/mdb-os.h:65:
+extern unsigned char *GetSymbolFromValueOffsetModule(unsigned long value, unsigned long *sym_offset,
+                                     unsigned char **module, unsigned char *buf, unsigned long len);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: debug/mdb/mdb-os.h:65:
+                                     unsigned char **module, unsigned char *buf, unsigned long len);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#95: FILE: debug/mdb/mdb-os.h:66:
+extern unsigned long get_processor_id(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#96: FILE: debug/mdb/mdb-os.h:67:
+extern unsigned long get_physical_processor(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#97: FILE: debug/mdb/mdb-os.h:68:
+extern unsigned long fpu_present(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#98: FILE: debug/mdb/mdb-os.h:69:
+extern unsigned long cpu_mttr_on(void);

CHECK:CAMELCASE: Avoid CamelCase: <UpcaseString>
#99: FILE: debug/mdb/mdb-os.h:70:
+extern unsigned char *UpcaseString(unsigned char *s);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#99: FILE: debug/mdb/mdb-os.h:70:
+extern unsigned char *UpcaseString(unsigned char *s);

CHECK:CAMELCASE: Avoid CamelCase: <ClearScreen>
#100: FILE: debug/mdb/mdb-os.h:71:
+extern void ClearScreen(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#100: FILE: debug/mdb/mdb-os.h:71:
+extern void ClearScreen(void);

CHECK:CAMELCASE: Avoid CamelCase: <ReadFS>
#101: FILE: debug/mdb/mdb-os.h:72:
+extern unsigned short ReadFS(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#101: FILE: debug/mdb/mdb-os.h:72:
+extern unsigned short ReadFS(void);

CHECK:CAMELCASE: Avoid CamelCase: <ReadGS>
#102: FILE: debug/mdb/mdb-os.h:73:
+extern unsigned short ReadGS(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#102: FILE: debug/mdb/mdb-os.h:73:
+extern unsigned short ReadGS(void);

CHECK:CAMELCASE: Avoid CamelCase: <ReadDR>
#103: FILE: debug/mdb/mdb-os.h:74:
+extern unsigned long ReadDR(unsigned long regnum);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#103: FILE: debug/mdb/mdb-os.h:74:
+extern unsigned long ReadDR(unsigned long regnum);

CHECK:CAMELCASE: Avoid CamelCase: <WriteDR>
#104: FILE: debug/mdb/mdb-os.h:75:
+extern void WriteDR(int regnum, unsigned long contents);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#104: FILE: debug/mdb/mdb-os.h:75:
+extern void WriteDR(int regnum, unsigned long contents);

CHECK:CAMELCASE: Avoid CamelCase: <ReadCR>
#105: FILE: debug/mdb/mdb-os.h:76:
+extern unsigned long ReadCR(int regnum);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#105: FILE: debug/mdb/mdb-os.h:76:
+extern unsigned long ReadCR(int regnum);

CHECK:CAMELCASE: Avoid CamelCase: <WriteCR>
#106: FILE: debug/mdb/mdb-os.h:77:
+extern void WriteCR(int regnum, unsigned long contents);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#106: FILE: debug/mdb/mdb-os.h:77:
+extern void WriteCR(int regnum, unsigned long contents);

CHECK:CAMELCASE: Avoid CamelCase: <ReadTR>
#107: FILE: debug/mdb/mdb-os.h:78:
+extern unsigned long ReadTR(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#107: FILE: debug/mdb/mdb-os.h:78:
+extern unsigned long ReadTR(void);

CHECK:CAMELCASE: Avoid CamelCase: <ReadLDTR>
#108: FILE: debug/mdb/mdb-os.h:79:
+extern unsigned long ReadLDTR(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#108: FILE: debug/mdb/mdb-os.h:79:
+extern unsigned long ReadLDTR(void);

CHECK:CAMELCASE: Avoid CamelCase: <ReadGDTR>
#109: FILE: debug/mdb/mdb-os.h:80:
+extern void ReadGDTR(unsigned long *v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#109: FILE: debug/mdb/mdb-os.h:80:
+extern void ReadGDTR(unsigned long *v);

CHECK:CAMELCASE: Avoid CamelCase: <ReadIDTR>
#110: FILE: debug/mdb/mdb-os.h:81:
+extern void ReadIDTR(unsigned long *v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#110: FILE: debug/mdb/mdb-os.h:81:
+extern void ReadIDTR(unsigned long *v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#111: FILE: debug/mdb/mdb-os.h:82:
+extern void save_npx(NUMERIC_FRAME *v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#112: FILE: debug/mdb/mdb-os.h:83:
+extern void load_npx(NUMERIC_FRAME *v);

CHECK:CAMELCASE: Avoid CamelCase: <ReadDR0>
#113: FILE: debug/mdb/mdb-os.h:84:
+extern unsigned long ReadDR0(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#113: FILE: debug/mdb/mdb-os.h:84:
+extern unsigned long ReadDR0(void);

CHECK:CAMELCASE: Avoid CamelCase: <ReadDR1>
#114: FILE: debug/mdb/mdb-os.h:85:
+extern unsigned long ReadDR1(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#114: FILE: debug/mdb/mdb-os.h:85:
+extern unsigned long ReadDR1(void);

CHECK:CAMELCASE: Avoid CamelCase: <ReadDR2>
#115: FILE: debug/mdb/mdb-os.h:86:
+extern unsigned long ReadDR2(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#115: FILE: debug/mdb/mdb-os.h:86:
+extern unsigned long ReadDR2(void);

CHECK:CAMELCASE: Avoid CamelCase: <ReadDR3>
#116: FILE: debug/mdb/mdb-os.h:87:
+extern unsigned long ReadDR3(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#116: FILE: debug/mdb/mdb-os.h:87:
+extern unsigned long ReadDR3(void);

CHECK:CAMELCASE: Avoid CamelCase: <ReadDR6>
#117: FILE: debug/mdb/mdb-os.h:88:
+extern unsigned long ReadDR6(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#117: FILE: debug/mdb/mdb-os.h:88:
+extern unsigned long ReadDR6(void);

CHECK:CAMELCASE: Avoid CamelCase: <ReadDR7>
#118: FILE: debug/mdb/mdb-os.h:89:
+extern unsigned long ReadDR7(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#118: FILE: debug/mdb/mdb-os.h:89:
+extern unsigned long ReadDR7(void);

CHECK:CAMELCASE: Avoid CamelCase: <WriteDR0>
#119: FILE: debug/mdb/mdb-os.h:90:
+extern void WriteDR0(unsigned long v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#119: FILE: debug/mdb/mdb-os.h:90:
+extern void WriteDR0(unsigned long v);

CHECK:CAMELCASE: Avoid CamelCase: <WriteDR1>
#120: FILE: debug/mdb/mdb-os.h:91:
+extern void WriteDR1(unsigned long v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#120: FILE: debug/mdb/mdb-os.h:91:
+extern void WriteDR1(unsigned long v);

CHECK:CAMELCASE: Avoid CamelCase: <WriteDR2>
#121: FILE: debug/mdb/mdb-os.h:92:
+extern void WriteDR2(unsigned long v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#121: FILE: debug/mdb/mdb-os.h:92:
+extern void WriteDR2(unsigned long v);

CHECK:CAMELCASE: Avoid CamelCase: <WriteDR3>
#122: FILE: debug/mdb/mdb-os.h:93:
+extern void WriteDR3(unsigned long v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#122: FILE: debug/mdb/mdb-os.h:93:
+extern void WriteDR3(unsigned long v);

CHECK:CAMELCASE: Avoid CamelCase: <WriteDR6>
#123: FILE: debug/mdb/mdb-os.h:94:
+extern void WriteDR6(unsigned long v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#123: FILE: debug/mdb/mdb-os.h:94:
+extern void WriteDR6(unsigned long v);

CHECK:CAMELCASE: Avoid CamelCase: <WriteDR7>
#124: FILE: debug/mdb/mdb-os.h:95:
+extern void WriteDR7(unsigned long v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#124: FILE: debug/mdb/mdb-os.h:95:
+extern void WriteDR7(unsigned long v);

CHECK:CAMELCASE: Avoid CamelCase: <ReadCR0>
#125: FILE: debug/mdb/mdb-os.h:96:
+extern unsigned long ReadCR0(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#125: FILE: debug/mdb/mdb-os.h:96:
+extern unsigned long ReadCR0(void);

CHECK:CAMELCASE: Avoid CamelCase: <ReadCR2>
#126: FILE: debug/mdb/mdb-os.h:97:
+extern unsigned long ReadCR2(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#126: FILE: debug/mdb/mdb-os.h:97:
+extern unsigned long ReadCR2(void);

CHECK:CAMELCASE: Avoid CamelCase: <ReadCR3>
#127: FILE: debug/mdb/mdb-os.h:98:
+extern unsigned long ReadCR3(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#127: FILE: debug/mdb/mdb-os.h:98:
+extern unsigned long ReadCR3(void);

CHECK:CAMELCASE: Avoid CamelCase: <ReadCR4>
#128: FILE: debug/mdb/mdb-os.h:99:
+extern unsigned long ReadCR4(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#128: FILE: debug/mdb/mdb-os.h:99:
+extern unsigned long ReadCR4(void);

CHECK:CAMELCASE: Avoid CamelCase: <WriteCR0>
#129: FILE: debug/mdb/mdb-os.h:100:
+extern void WriteCR0(unsigned long v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#129: FILE: debug/mdb/mdb-os.h:100:
+extern void WriteCR0(unsigned long v);

CHECK:CAMELCASE: Avoid CamelCase: <WriteCR2>
#130: FILE: debug/mdb/mdb-os.h:101:
+extern void WriteCR2(unsigned long v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#130: FILE: debug/mdb/mdb-os.h:101:
+extern void WriteCR2(unsigned long v);

CHECK:CAMELCASE: Avoid CamelCase: <WriteCR3>
#131: FILE: debug/mdb/mdb-os.h:102:
+extern void WriteCR3(unsigned long v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#131: FILE: debug/mdb/mdb-os.h:102:
+extern void WriteCR3(unsigned long v);

CHECK:CAMELCASE: Avoid CamelCase: <WriteCR4>
#132: FILE: debug/mdb/mdb-os.h:103:
+extern void WriteCR4(unsigned long v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#132: FILE: debug/mdb/mdb-os.h:103:
+extern void WriteCR4(unsigned long v);

CHECK:CAMELCASE: Avoid CamelCase: <ReadMSR>
#133: FILE: debug/mdb/mdb-os.h:104:
+extern void ReadMSR(unsigned long r, unsigned long *v1, unsigned long *v2);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#133: FILE: debug/mdb/mdb-os.h:104:
+extern void ReadMSR(unsigned long r, unsigned long *v1, unsigned long *v2);

CHECK:CAMELCASE: Avoid CamelCase: <WriteMSR>
#134: FILE: debug/mdb/mdb-os.h:105:
+extern void WriteMSR(unsigned long r, unsigned long *v1, unsigned long *v2);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#134: FILE: debug/mdb/mdb-os.h:105:
+extern void WriteMSR(unsigned long r, unsigned long *v1, unsigned long *v2);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000237244.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 7 warnings, 102 checks, 106 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000237244.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
