WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
o AS is a single queue ioschduler, that means there is one AS queue per group.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#78: FILE: block/Kconfig.iosched:48:
+config IOSCHED_AS_HIER
+	bool "Anticipatory Hierarchical Scheduling support"
+	depends on IOSCHED_AS && CGROUPS
+	select ELV_FAIR_QUEUING
+	select GROUP_IOSCHED
+	default n
+	---help---
+	  Enable hierarhical scheduling in anticipatory. In this mode
+	  anticipatory keeps one IO queue per cgroup instead of a global
+	  queue. Elevator fair queuing logic ensures fairness among various
+	  queues.
+

Kconfig symbols should have a help text which fully describes
it.

CHECK:BRACES: braces {} should be used on all arms of this statement
#213: FILE: block/as-iosched.c:227:
+	if (as_batch_expired(ad, asq))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#215: FILE: block/as-iosched.c:229:
+	else {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#218: FILE: block/as-iosched.c:232:
+		BUG_ON((asq->current_batch_time_left) < 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPLIT_STRING: quoted string split across lines
#228: FILE: block/as-iosched.c:242:
+	as_log_asq(ad, asq, "save batch: dir=%c time_left=%d changed_batch=%d"
+			" new_batch=%d, antic_status=%d",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:RETURN_VOID: void function return statements are not generally useful
#233: FILE: block/as-iosched.c:247:
+	return;
+}

WARNING:SPLIT_STRING: quoted string split across lines
#250: FILE: block/as-iosched.c:264:
+	as_log_asq(ad, asq, "restore batch: dir=%c time=%d reads_q=%d"
+			" writes_q=%d ad->antic_status=%d",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#259: FILE: block/as-iosched.c:273:
+static void as_active_ioq_set(struct request_queue *q, void *sched_queue,
+				int coop)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#273: FILE: block/as-iosched.c:287:
+static int as_expire_ioq(struct request_queue *q, void *sched_queue,
+				int slice_expired, int force)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'as_expire_ioq', this function's name, in a string
#279: FILE: block/as-iosched.c:293:
+	as_log_asq(ad, asq, "as_expire_ioq slice_expired=%d, force=%d",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#280: FILE: block/as-iosched.c:294:
+	as_log_asq(ad, asq, "as_expire_ioq slice_expired=%d, force=%d",
+			slice_expired, force);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#316: FILE: block/as-iosched.c:330:
+	BUG_ON(status == ANTIC_WAIT_REQ);

CHECK:BRACES: Unbalanced braces around else statement
#348: FILE: block/as-iosched.c:639:
+		else {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'as_antic_stop', this function's name, in a string
#359: FILE: block/as-iosched.c:654:
+	as_log(ad, "as_antic_stop antic_status=%d", ad->antic_status);

WARNING:SPLIT_STRING: quoted string split across lines
#411: FILE: block/as-iosched.c:1038:
+	as_log_asq(ad, asq, "upd write: write_time=%d batch=%d"
+			" write_batch_idled=%d current_write_count=%d",

WARNING:SPLIT_STRING: quoted string split across lines
#440: FILE: block/as-iosched.c:1077:
+	as_log_asq(ad, asq, "complete: reads_q=%d writes_q=%d changed_batch=%d"
+		" new_batch=%d switch_queue=%d, dir=%c",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#486: FILE: block/as-iosched.c:1156:
+	BUG_ON(asq->nr_queued[data_dir] <= 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#497: FILE: block/as-iosched.c:1271:
+	as_log_asq(ad, asq, "dispatch req dir=%c nr_dispatched = %d",
+			data_dir ? 'R' : 'W', ad->nr_dispatched);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#514: FILE: block/as-iosched.c:1332:
 		|| ad->antic_status == ANTIC_WAIT_NEXT
+		|| ad->changed_batch) {

WARNING:SPLIT_STRING: quoted string split across lines
#516: FILE: block/as-iosched.c:1334:
+		as_log_asq(ad, asq, "no dispatch. read_q=%d, writes_q=%d"
+			" ad->antic_status=%d, changed_batch=%d,"

WARNING:SPLIT_STRING: quoted string split across lines
#517: FILE: block/as-iosched.c:1335:
+			" ad->antic_status=%d, changed_batch=%d,"
+			" switch_queue=%d new_batch=%d", asq->nr_queued[1],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#574: FILE: block/as-iosched.c:1477:
+	as_log_asq(ad, asq, "add a %c request read_q=%d write_q=%d",
+			data_dir ? 'R' : 'W', asq->nr_queued[1],

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#746: FILE: block/elevator-fq.c:2526:
+	if (efqd->fairness && !force && ioq && ioq->dispatched
+	    && strcmp(e->elevator_name, "anticipatory")) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078463.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 14 warnings, 10 checks, 693 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078463.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
