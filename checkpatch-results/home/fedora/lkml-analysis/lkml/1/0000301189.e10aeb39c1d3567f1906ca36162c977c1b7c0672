WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
only have to register a per-vcpu area, and start writing to it periodically.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!vcpu->time_page'
#108: FILE: arch/x86/kvm/x86.c:519:
+	if ((!vcpu->time_page))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: arch/x86/kvm/x86.c:525:
+	kvm_get_msr(v, MSR_IA32_TIME_STAMP_COUNTER,
+			  &vcpu->hv_clock.tsc_timestamp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#132: FILE: arch/x86/kvm/x86.c:543:
+	memcpy(shared_kaddr + vcpu->time_offset, &vcpu->hv_clock,
+		sizeof(vcpu->hv_clock));

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#259: FILE: include/asm-x86/kvm_para.h:23:
+	uint32_t version;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#260: FILE: include/asm-x86/kvm_para.h:24:
+	uint32_t pad0;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#261: FILE: include/asm-x86/kvm_para.h:25:
+	uint64_t tsc_timestamp;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#262: FILE: include/asm-x86/kvm_para.h:26:
+	uint64_t system_time;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#263: FILE: include/asm-x86/kvm_para.h:27:
+	uint32_t tsc_to_system_mul;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's8' over 'int8_t'
#264: FILE: include/asm-x86/kvm_para.h:28:
+	int8_t   tsc_shift;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's8' over 'int8_t'
#265: FILE: include/asm-x86/kvm_para.h:29:
+	int8_t	 pad[3];

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#266: FILE: include/asm-x86/kvm_para.h:30:
+} __attribute__((__packed__)); /* 32 bytes */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#269: FILE: include/asm-x86/kvm_para.h:33:
+	uint32_t wc_version;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#270: FILE: include/asm-x86/kvm_para.h:34:
+	uint32_t wc_sec;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#271: FILE: include/asm-x86/kvm_para.h:35:
+	uint32_t wc_nsec;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#272: FILE: include/asm-x86/kvm_para.h:36:
+} __attribute__((__packed__));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#274: FILE: include/asm-x86/kvm_para.h:38:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#275: FILE: include/asm-x86/kvm_para.h:39:
+extern void kvmclock_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#277: FILE: include/asm-x86/kvm_para.h:41:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000301189.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 16 checks, 216 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000301189.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
