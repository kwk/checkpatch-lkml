WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#59: FILE: drivers/usb/serial/io_edgeport.c:63:
+#include "io_fw_boot.h"		/* the bootloader firmware to download to
+				   a device, if it needs it */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#59: FILE: drivers/usb/serial/io_edgeport.c:63:
+				   a device, if it needs it */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#66: FILE: drivers/usb/serial/io_edgeport.c:69:
+#include "io_fw_boot2.h"	/* the bootloader firmware to download to
+				   a device, if it needs it */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#66: FILE: drivers/usb/serial/io_edgeport.c:69:
+				   a device, if it needs it */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#70: FILE: drivers/usb/serial/io_edgeport.c:72:
+/* Then finally the main run-time operational code - for first generation
+   edgeports */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#70: FILE: drivers/usb/serial/io_edgeport.c:72:
+   edgeports */

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#104: FILE: drivers/usb/serial/io_edgeport.c:156:
+	unsigned char		*interrupt_in_buffer;		/* the buffer we use for the interrupt endpoint */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#110: FILE: drivers/usb/serial/io_edgeport.c:160:
+	unsigned char		*bulk_in_buffer;		/* the buffer we use for the bulk in endpoint */

CHECK:CAMELCASE: Avoid CamelCase: <CmdUrbs>
#147: FILE: drivers/usb/serial/io_edgeport.c:219:
+static atomic_t CmdUrbs;	/* Number of outstanding Command Write Urbs */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#178: FILE: drivers/usb/serial/io_edgeport.c:232:
+					struct file *filp);
 					             ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#178: FILE: drivers/usb/serial/io_edgeport.c:232:
+static int edge_open(struct tty_struct *tty, struct usb_serial_port *port,
+					struct file *filp);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#180: FILE: drivers/usb/serial/io_edgeport.c:234:
+					struct file *filp);
 					             ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#180: FILE: drivers/usb/serial/io_edgeport.c:234:
+static void edge_close(struct tty_struct *tty, struct usb_serial_port *port,
+					struct file *filp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#182: FILE: drivers/usb/serial/io_edgeport.c:236:
+static int edge_write(struct tty_struct *tty, struct usb_serial_port *port,
+					const unsigned char *buf, int count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#188: FILE: drivers/usb/serial/io_edgeport.c:242:
+static void edge_set_termios(struct tty_struct *tty,
+					struct usb_serial_port *port,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#191: FILE: drivers/usb/serial/io_edgeport.c:245:
+static int  edge_ioctl(struct tty_struct *tty, struct file *file,
+					unsigned int cmd, unsigned long arg);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#195: FILE: drivers/usb/serial/io_edgeport.c:249:
+static int  edge_tiocmset(struct tty_struct *tty, struct file *file,
+					unsigned int set, unsigned int clear);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#232: FILE: drivers/usb/serial/io_edgeport.c:258:
+static void  process_rcvd_data(struct edgeport_serial *edge_serial,
+				unsigned char *buffer, __u16 bufferLength);

CHECK:CAMELCASE: Avoid CamelCase: <bufferLength>
#232: FILE: drivers/usb/serial/io_edgeport.c:258:
+				unsigned char *buffer, __u16 bufferLength);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#236: FILE: drivers/usb/serial/io_edgeport.c:262:
+static void edge_tty_recv(struct device *dev, struct tty_struct *tty,
+				unsigned char *data, int length);

CHECK:CAMELCASE: Avoid CamelCase: <newMsr>
#237: FILE: drivers/usb/serial/io_edgeport.c:263:
+static void handle_new_msr(struct edgeport_port *edge_port, __u8 newMsr);

CHECK:CAMELCASE: Avoid CamelCase: <lsrData>
#238: FILE: drivers/usb/serial/io_edgeport.c:264:
+static void handle_new_lsr(struct edgeport_port *edge_port, __u8 lsrData,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: drivers/usb/serial/io_edgeport.c:265:
+static void handle_new_lsr(struct edgeport_port *edge_port, __u8 lsrData,
+				__u8 lsr, __u8 data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#241: FILE: drivers/usb/serial/io_edgeport.c:267:
+static int  send_iosp_ext_cmd(struct edgeport_port *edge_port, __u8 command,
+				__u8 param);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#244: FILE: drivers/usb/serial/io_edgeport.c:270:
+static int  send_cmd_write_baud_rate(struct edgeport_port *edge_port,
+				int baudRate);

CHECK:CAMELCASE: Avoid CamelCase: <baudRate>
#244: FILE: drivers/usb/serial/io_edgeport.c:270:
+				int baudRate);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: drivers/usb/serial/io_edgeport.c:272:
+static void change_port_settings(struct tty_struct *tty,
+				struct edgeport_port *edge_port,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#249: FILE: drivers/usb/serial/io_edgeport.c:275:
+static int  send_cmd_write_uart_register(struct edgeport_port *edge_port,
+				__u8 regNum, __u8 regValue);

CHECK:CAMELCASE: Avoid CamelCase: <regNum>
#249: FILE: drivers/usb/serial/io_edgeport.c:275:
+				__u8 regNum, __u8 regValue);

CHECK:CAMELCASE: Avoid CamelCase: <regValue>
#249: FILE: drivers/usb/serial/io_edgeport.c:275:
+				__u8 regNum, __u8 regValue);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#251: FILE: drivers/usb/serial/io_edgeport.c:277:
+static int  write_cmd_usb(struct edgeport_port *edge_port,
+				unsigned char *buffer, int writeLength);

CHECK:CAMELCASE: Avoid CamelCase: <writeLength>
#251: FILE: drivers/usb/serial/io_edgeport.c:277:
+				unsigned char *buffer, int writeLength);

CHECK:CAMELCASE: Avoid CamelCase: <extAddr>
#255: FILE: drivers/usb/serial/io_edgeport.c:281:
+static int sram_write(struct usb_serial *serial, __u16 extAddr, __u16 addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#256: FILE: drivers/usb/serial/io_edgeport.c:282:
+static int sram_write(struct usb_serial *serial, __u16 extAddr, __u16 addr,
+						__u16 length, __u8 *data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#258: FILE: drivers/usb/serial/io_edgeport.c:284:
+static int rom_read(struct usb_serial *serial, __u16 extAddr, __u16 addr,
+						__u16 length, __u8 *data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#260: FILE: drivers/usb/serial/io_edgeport.c:286:
+static int rom_write(struct usb_serial *serial, __u16 extAddr, __u16 addr,
+						__u16 length, __u8 *data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#266: FILE: drivers/usb/serial/io_edgeport.c:292:
+static void unicode_to_ascii(char *string, int buflen,
+				__le16 *unicode, int unicode_size);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#268: FILE: drivers/usb/serial/io_edgeport.c:294:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <BootMajorVersion>
#287: FILE: drivers/usb/serial/io_edgeport.c:312:
+	__u8 BootMajorVersion;

CHECK:CAMELCASE: Avoid CamelCase: <BootMinorVersion>
#288: FILE: drivers/usb/serial/io_edgeport.c:313:
+	__u8 BootMinorVersion;

CHECK:CAMELCASE: Avoid CamelCase: <BootImage>
#291: FILE: drivers/usb/serial/io_edgeport.c:315:
+	__u8 *BootImage;

CHECK:CAMELCASE: Avoid CamelCase: <BootCodeImageVersion_GEN1>
#307: FILE: drivers/usb/serial/io_edgeport.c:323:
+		BootMajorVersion = BootCodeImageVersion_GEN1.MajorVersion;

CHECK:CAMELCASE: Avoid CamelCase: <MajorVersion>
#307: FILE: drivers/usb/serial/io_edgeport.c:323:
+		BootMajorVersion = BootCodeImageVersion_GEN1.MajorVersion;

CHECK:CAMELCASE: Avoid CamelCase: <MinorVersion>
#308: FILE: drivers/usb/serial/io_edgeport.c:324:
+		BootMinorVersion = BootCodeImageVersion_GEN1.MinorVersion;

CHECK:CAMELCASE: Avoid CamelCase: <BootBuildNumber>
#309: FILE: drivers/usb/serial/io_edgeport.c:325:
+		BootBuildNumber	=

CHECK:CAMELCASE: Avoid CamelCase: <BuildNumber>
#310: FILE: drivers/usb/serial/io_edgeport.c:326:
+			cpu_to_le16(BootCodeImageVersion_GEN1.BuildNumber);

CHECK:CAMELCASE: Avoid CamelCase: <BootCodeImage_GEN1>
#311: FILE: drivers/usb/serial/io_edgeport.c:327:
+		BootImage = &BootCodeImage_GEN1[0];

CHECK:CAMELCASE: Avoid CamelCase: <BootSize>
#312: FILE: drivers/usb/serial/io_edgeport.c:328:
+		BootSize = sizeof(BootCodeImage_GEN1);

CHECK:CAMELCASE: Avoid CamelCase: <BootCodeImageVersion_GEN2>
#323: FILE: drivers/usb/serial/io_edgeport.c:332:
+		BootMajorVersion = BootCodeImageVersion_GEN2.MajorVersion;

CHECK:CAMELCASE: Avoid CamelCase: <BootCodeImage_GEN2>
#327: FILE: drivers/usb/serial/io_edgeport.c:336:
+		BootImage = &BootCodeImage_GEN2[0];

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#348: FILE: drivers/usb/serial/io_edgeport.c:376:
+			response = rom_write(edge_serial->serial,
+						le16_to_cpu(record->ExtAddr),

CHECK:CAMELCASE: Avoid CamelCase: <ExtAddr>
#348: FILE: drivers/usb/serial/io_edgeport.c:376:
+						le16_to_cpu(record->ExtAddr),

CHECK:CAMELCASE: Avoid CamelCase: <Addr>
#349: FILE: drivers/usb/serial/io_edgeport.c:377:
+						le16_to_cpu(record->Addr),

CHECK:CAMELCASE: Avoid CamelCase: <Len>
#350: FILE: drivers/usb/serial/io_edgeport.c:378:
+						le16_to_cpu(record->Len),

CHECK:CAMELCASE: Avoid CamelCase: <Data>
#351: FILE: drivers/usb/serial/io_edgeport.c:379:
+						&record->Data[0]);

CHECK:BRACES: Unbalanced braces around else statement
#370: FILE: drivers/usb/serial/io_edgeport.c:393:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <Id>
#381: FILE: drivers/usb/serial/io_edgeport.c:403:
+static int get_string(struct usb_device *dev, int Id, char *string, int buflen)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#391: FILE: drivers/usb/serial/io_edgeport.c:411:
+	if (!usb_get_descriptor(dev, USB_DT_STRING, Id,
+					&StringDesc, sizeof(StringDesc)))

CHECK:CAMELCASE: Avoid CamelCase: <StringDesc>
#391: FILE: drivers/usb/serial/io_edgeport.c:411:
+					&StringDesc, sizeof(StringDesc)))

CHECK:CAMELCASE: Avoid CamelCase: <pStringDesc>
#398: FILE: drivers/usb/serial/io_edgeport.c:414:
+	pStringDesc = kmalloc(StringDesc.bLength, GFP_KERNEL);

CHECK:CAMELCASE: Avoid CamelCase: <bLength>
#398: FILE: drivers/usb/serial/io_edgeport.c:414:
+	pStringDesc = kmalloc(StringDesc.bLength, GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#405: FILE: drivers/usb/serial/io_edgeport.c:419:
+	if (!usb_get_descriptor(dev, USB_DT_STRING, Id,
+					pStringDesc, StringDesc.bLength)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#412: FILE: drivers/usb/serial/io_edgeport.c:425:
+	unicode_to_ascii(string, buflen,
+				pStringDesc->wData, pStringDesc->bLength/2);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#412: FILE: drivers/usb/serial/io_edgeport.c:425:
+				pStringDesc->wData, pStringDesc->bLength/2);
 				                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <wData>
#412: FILE: drivers/usb/serial/io_edgeport.c:425:
+				pStringDesc->wData, pStringDesc->bLength/2);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#422: FILE: drivers/usb/serial/io_edgeport.c:440:
+static int get_string_desc(struct usb_device *dev, int Id,
+				struct usb_string_descriptor **pRetDesc)

CHECK:CAMELCASE: Avoid CamelCase: <pRetDesc>
#422: FILE: drivers/usb/serial/io_edgeport.c:440:
+				struct usb_string_descriptor **pRetDesc)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#432: FILE: drivers/usb/serial/io_edgeport.c:448:
+	if (!usb_get_descriptor(dev, USB_DT_STRING, Id, &StringDesc,
+						sizeof(StringDesc)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#446: FILE: drivers/usb/serial/io_edgeport.c:456:
+	if (!usb_get_descriptor(dev, USB_DT_STRING, Id, pStringDesc,
+							StringDesc.bLength)) {

CHECK:CAMELCASE: Avoid CamelCase: <ProductId>
#460: FILE: drivers/usb/serial/io_edgeport.c:470:
+	dbg("  ProductId             %x", product_info->ProductId);

CHECK:CAMELCASE: Avoid CamelCase: <NumPorts>
#461: FILE: drivers/usb/serial/io_edgeport.c:471:
+	dbg("  NumPorts              %d", product_info->NumPorts);

CHECK:CAMELCASE: Avoid CamelCase: <ProdInfoVer>
#462: FILE: drivers/usb/serial/io_edgeport.c:472:
+	dbg("  ProdInfoVer           %d", product_info->ProdInfoVer);

CHECK:CAMELCASE: Avoid CamelCase: <IsRS232>
#470: FILE: drivers/usb/serial/io_edgeport.c:474:
+	dbg("  IsRS232               %d", product_info->IsRS232);

CHECK:CAMELCASE: Avoid CamelCase: <IsRS422>
#471: FILE: drivers/usb/serial/io_edgeport.c:475:
+	dbg("  IsRS422               %d", product_info->IsRS422);

CHECK:CAMELCASE: Avoid CamelCase: <IsRS485>
#472: FILE: drivers/usb/serial/io_edgeport.c:476:
+	dbg("  IsRS485               %d", product_info->IsRS485);

CHECK:CAMELCASE: Avoid CamelCase: <RomSize>
#473: FILE: drivers/usb/serial/io_edgeport.c:477:
+	dbg("  RomSize               %d", product_info->RomSize);

CHECK:CAMELCASE: Avoid CamelCase: <RamSize>
#474: FILE: drivers/usb/serial/io_edgeport.c:478:
+	dbg("  RamSize               %d", product_info->RamSize);

CHECK:CAMELCASE: Avoid CamelCase: <CpuRev>
#475: FILE: drivers/usb/serial/io_edgeport.c:479:
+	dbg("  CpuRev                %x", product_info->CpuRev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#487: FILE: drivers/usb/serial/io_edgeport.c:485:
+	dbg("  FirmwareMajorVersion  %d.%d.%d",
+			product_info->FirmwareMajorVersion,

CHECK:CAMELCASE: Avoid CamelCase: <FirmwareMajorVersion>
#487: FILE: drivers/usb/serial/io_edgeport.c:485:
+			product_info->FirmwareMajorVersion,

CHECK:CAMELCASE: Avoid CamelCase: <FirmwareMinorVersion>
#488: FILE: drivers/usb/serial/io_edgeport.c:486:
+			product_info->FirmwareMinorVersion,

CHECK:CAMELCASE: Avoid CamelCase: <FirmwareBuildNumber>
#489: FILE: drivers/usb/serial/io_edgeport.c:487:
+			le16_to_cpu(product_info->FirmwareBuildNumber));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#491: FILE: drivers/usb/serial/io_edgeport.c:489:
+	dbg("  ManufactureDescDate   %d/%d/%d",
+			product_info->ManufactureDescDate[0],

CHECK:CAMELCASE: Avoid CamelCase: <ManufactureDescDate>
#491: FILE: drivers/usb/serial/io_edgeport.c:489:
+			product_info->ManufactureDescDate[0],

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#493: FILE: drivers/usb/serial/io_edgeport.c:491:
+			product_info->ManufactureDescDate[2]+1900);
 			                                    ^

WARNING:LONG_LINE: line length of 134 exceeds 100 columns
#526: FILE: drivers/usb/serial/io_edgeport.c:502:
+	product_info->ProductId = (__u16)(le16_to_cpu(edge_serial->serial->dev->descriptor.idProduct) & ~ION_DEVICE_ID_80251_NETCHIP);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#526: FILE: drivers/usb/serial/io_edgeport.c:502:
+	product_info->ProductId = (__u16)(le16_to_cpu(edge_serial->serial->dev->descriptor.idProduct) & ~ION_DEVICE_ID_80251_NETCHIP);

CHECK:CAMELCASE: Avoid CamelCase: <BoardRev>
#533: FILE: drivers/usb/serial/io_edgeport.c:509:
+	product_info->BoardRev = edge_serial->manuf_descriptor.BoardRev;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#543: FILE: drivers/usb/serial/io_edgeport.c:519:
+	memcpy(product_info->ManufactureDescDate,
+			edge_serial->manuf_descriptor.DescDate,

CHECK:CAMELCASE: Avoid CamelCase: <DescDate>
#543: FILE: drivers/usb/serial/io_edgeport.c:519:
+			edge_serial->manuf_descriptor.DescDate,

CHECK:CAMELCASE: Avoid CamelCase: <OperationalCodeImageVersion_GEN2>
#550: FILE: drivers/usb/serial/io_edgeport.c:526:
+				OperationalCodeImageVersion_GEN2.MajorVersion;

CHECK:CAMELCASE: Avoid CamelCase: <iDownloadFile>
#555: FILE: drivers/usb/serial/io_edgeport.c:531:
+		product_info->iDownloadFile = EDGE_DOWNLOAD_FILE_80251;

CHECK:CAMELCASE: Avoid CamelCase: <OperationalCodeImageVersion_GEN1>
#562: FILE: drivers/usb/serial/io_edgeport.c:534:
+				OperationalCodeImageVersion_GEN1.MajorVersion;

CHECK:CAMELCASE: Avoid CamelCase: <EpicVer>
#639: FILE: drivers/usb/serial/io_edgeport.c:600:
+		product_info->EpicVer = epic->EpicVer;

CHECK:CAMELCASE: Avoid CamelCase: <Epic>
#640: FILE: drivers/usb/serial/io_edgeport.c:601:
+		product_info->Epic = epic->Supports;

CHECK:CAMELCASE: Avoid CamelCase: <Supports>
#640: FILE: drivers/usb/serial/io_edgeport.c:601:
+		product_info->Epic = epic->Supports;

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#659: FILE: drivers/usb/serial/io_edgeport.c:608:
+		dbg("  IOSPOpen         : %s", bits->IOSPOpen		? "TRUE": "FALSE");
 		                                             		        ^

CHECK:CAMELCASE: Avoid CamelCase: <IOSPOpen>
#659: FILE: drivers/usb/serial/io_edgeport.c:608:
+		dbg("  IOSPOpen         : %s", bits->IOSPOpen		? "TRUE": "FALSE");

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#660: FILE: drivers/usb/serial/io_edgeport.c:609:
+		dbg("  IOSPClose        : %s", bits->IOSPClose		? "TRUE": "FALSE");
 		                                              		        ^

CHECK:CAMELCASE: Avoid CamelCase: <IOSPClose>
#660: FILE: drivers/usb/serial/io_edgeport.c:609:
+		dbg("  IOSPClose        : %s", bits->IOSPClose		? "TRUE": "FALSE");

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#661: FILE: drivers/usb/serial/io_edgeport.c:610:
+		dbg("  IOSPChase        : %s", bits->IOSPChase		? "TRUE": "FALSE");
 		                                              		        ^

CHECK:CAMELCASE: Avoid CamelCase: <IOSPChase>
#661: FILE: drivers/usb/serial/io_edgeport.c:610:
+		dbg("  IOSPChase        : %s", bits->IOSPChase		? "TRUE": "FALSE");

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#662: FILE: drivers/usb/serial/io_edgeport.c:611:
+		dbg("  IOSPSetRxFlow    : %s", bits->IOSPSetRxFlow	? "TRUE": "FALSE");
 		                                                  	        ^

CHECK:CAMELCASE: Avoid CamelCase: <IOSPSetRxFlow>
#662: FILE: drivers/usb/serial/io_edgeport.c:611:
+		dbg("  IOSPSetRxFlow    : %s", bits->IOSPSetRxFlow	? "TRUE": "FALSE");

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#663: FILE: drivers/usb/serial/io_edgeport.c:612:
+		dbg("  IOSPSetTxFlow    : %s", bits->IOSPSetTxFlow	? "TRUE": "FALSE");
 		                                                  	        ^

CHECK:CAMELCASE: Avoid CamelCase: <IOSPSetTxFlow>
#663: FILE: drivers/usb/serial/io_edgeport.c:612:
+		dbg("  IOSPSetTxFlow    : %s", bits->IOSPSetTxFlow	? "TRUE": "FALSE");

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#664: FILE: drivers/usb/serial/io_edgeport.c:613:
+		dbg("  IOSPSetXChar     : %s", bits->IOSPSetXChar	? "TRUE": "FALSE");
 		                                                 	        ^

CHECK:CAMELCASE: Avoid CamelCase: <IOSPSetXChar>
#664: FILE: drivers/usb/serial/io_edgeport.c:613:
+		dbg("  IOSPSetXChar     : %s", bits->IOSPSetXChar	? "TRUE": "FALSE");

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#665: FILE: drivers/usb/serial/io_edgeport.c:614:
+		dbg("  IOSPRxCheck      : %s", bits->IOSPRxCheck	? "TRUE": "FALSE");
 		                                                	        ^

CHECK:CAMELCASE: Avoid CamelCase: <IOSPRxCheck>
#665: FILE: drivers/usb/serial/io_edgeport.c:614:
+		dbg("  IOSPRxCheck      : %s", bits->IOSPRxCheck	? "TRUE": "FALSE");

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#666: FILE: drivers/usb/serial/io_edgeport.c:615:
+		dbg("  IOSPSetClrBreak  : %s", bits->IOSPSetClrBreak	? "TRUE": "FALSE");
 		                                                    	        ^

CHECK:CAMELCASE: Avoid CamelCase: <IOSPSetClrBreak>
#666: FILE: drivers/usb/serial/io_edgeport.c:615:
+		dbg("  IOSPSetClrBreak  : %s", bits->IOSPSetClrBreak	? "TRUE": "FALSE");

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#667: FILE: drivers/usb/serial/io_edgeport.c:616:
+		dbg("  IOSPWriteMCR     : %s", bits->IOSPWriteMCR	? "TRUE": "FALSE");
 		                                                 	        ^

CHECK:CAMELCASE: Avoid CamelCase: <IOSPWriteMCR>
#667: FILE: drivers/usb/serial/io_edgeport.c:616:
+		dbg("  IOSPWriteMCR     : %s", bits->IOSPWriteMCR	? "TRUE": "FALSE");

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#668: FILE: drivers/usb/serial/io_edgeport.c:617:
+		dbg("  IOSPWriteLCR     : %s", bits->IOSPWriteLCR	? "TRUE": "FALSE");
 		                                                 	        ^

CHECK:CAMELCASE: Avoid CamelCase: <IOSPWriteLCR>
#668: FILE: drivers/usb/serial/io_edgeport.c:617:
+		dbg("  IOSPWriteLCR     : %s", bits->IOSPWriteLCR	? "TRUE": "FALSE");

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#669: FILE: drivers/usb/serial/io_edgeport.c:618:
+		dbg("  IOSPSetBaudRate  : %s", bits->IOSPSetBaudRate	? "TRUE": "FALSE");
 		                                                    	        ^

CHECK:CAMELCASE: Avoid CamelCase: <IOSPSetBaudRate>
#669: FILE: drivers/usb/serial/io_edgeport.c:618:
+		dbg("  IOSPSetBaudRate  : %s", bits->IOSPSetBaudRate	? "TRUE": "FALSE");

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#670: FILE: drivers/usb/serial/io_edgeport.c:619:
+		dbg("  TrueEdgeport     : %s", bits->TrueEdgeport	? "TRUE": "FALSE");
 		                                                 	        ^

CHECK:CAMELCASE: Avoid CamelCase: <TrueEdgeport>
#670: FILE: drivers/usb/serial/io_edgeport.c:619:
+		dbg("  TrueEdgeport     : %s", bits->TrueEdgeport	? "TRUE": "FALSE");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#706: FILE: drivers/usb/serial/io_edgeport.c:673:
+		usb_serial_debug_data(debug, &edge_serial->serial->dev->dev,
+						__func__, length, data);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#716: FILE: drivers/usb/serial/io_edgeport.c:688:
+					/* we have pending bytes on the
+					   bulk in pipe, send a request */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#716: FILE: drivers/usb/serial/io_edgeport.c:688:
+					   bulk in pipe, send a request */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#726: FILE: drivers/usb/serial/io_edgeport.c:703:
+		while ((position < length) &&
+				(portNumber < edge_serial->serial->num_ports)) {

CHECK:CAMELCASE: Avoid CamelCase: <portNumber>
#726: FILE: drivers/usb/serial/io_edgeport.c:703:
+				(portNumber < edge_serial->serial->num_ports)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#736: FILE: drivers/usb/serial/io_edgeport.c:713:
+					dbg("%s - txcredits for port%d = %d",
+							__func__, portNumber,

CHECK:CAMELCASE: Avoid CamelCase: <txCredits>
#737: FILE: drivers/usb/serial/io_edgeport.c:714:
+							edge_port->txCredits);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#741: FILE: drivers/usb/serial/io_edgeport.c:717:
+					/* tell the tty driver that something
+					   has changed */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#741: FILE: drivers/usb/serial/io_edgeport.c:717:
+					   has changed */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#748: FILE: drivers/usb/serial/io_edgeport.c:722:
+					/* Since we have more credit, check
+					   if more data can be sent */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#748: FILE: drivers/usb/serial/io_edgeport.c:722:
+					   if more data can be sent */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#750: FILE: drivers/usb/serial/io_edgeport.c:724:
+					send_more_port_data(edge_serial,
+								edge_port);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#787: FILE: drivers/usb/serial/io_edgeport.c:772:
+	usb_serial_debug_data(debug, &edge_serial->serial->dev->dev,
+					__func__, raw_data_length, data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#796: FILE: drivers/usb/serial/io_edgeport.c:780:
+	dbg("%s - Received = %d, rxBytesAvail %d", __func__,
+				raw_data_length, edge_serial->rxBytesAvail);

CHECK:CAMELCASE: Avoid CamelCase: <rxBytesAvail>
#796: FILE: drivers/usb/serial/io_edgeport.c:780:
+				raw_data_length, edge_serial->rxBytesAvail);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#823: FILE: drivers/usb/serial/io_edgeport.c:825:
+		/* let the tty driver wakeup if it has a special
+		   write_wakeup function */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#823: FILE: drivers/usb/serial/io_edgeport.c:825:
+		   write_wakeup function */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#857: FILE: drivers/usb/serial/io_edgeport.c:853:
+	dbg("%s - FREE URB %p (outstanding %d)", __func__,
+					urb, atomic_read(&CmdUrbs));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#870: FILE: drivers/usb/serial/io_edgeport.c:864:
+		dbg("%s - nonzero write bulk status received: %d",
+							__func__, status);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#879: FILE: drivers/usb/serial/io_edgeport.c:892:
+			struct usb_serial_port *port, struct file *filp)
 			                                           ^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#890: FILE: drivers/usb/serial/io_edgeport.c:908:
+	/* see if we've set up our endpoint info yet (can't set it up
+	   in edge_startup as the structures were not set up at that time.) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#890: FILE: drivers/usb/serial/io_edgeport.c:908:
+	   in edge_startup as the structures were not set up at that time.) */

CHECK:CAMELCASE: Avoid CamelCase: <interrupt_in_endpointAddress>
#905: FILE: drivers/usb/serial/io_edgeport.c:920:
+					port0->interrupt_in_endpointAddress;

CHECK:CAMELCASE: Avoid CamelCase: <bulk_in_endpointAddress>
#910: FILE: drivers/usb/serial/io_edgeport.c:924:
+					port0->bulk_in_endpointAddress;

CHECK:CAMELCASE: Avoid CamelCase: <bulk_out_endpointAddress>
#915: FILE: drivers/usb/serial/io_edgeport.c:927:
+					port0->bulk_out_endpointAddress;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#929: FILE: drivers/usb/serial/io_edgeport.c:933:
+		      usb_rcvintpipe(serial->dev,
+				port0->interrupt_in_endpointAddress),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#943: FILE: drivers/usb/serial/io_edgeport.c:942:
+			usb_rcvbulkpipe(serial->dev,
+				port0->bulk_in_endpointAddress),

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#953: FILE: drivers/usb/serial/io_edgeport.c:950:
+		 * as the edgeport is connected */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#955: FILE: drivers/usb/serial/io_edgeport.c:952:
+		response = usb_submit_urb(edge_serial->interrupt_read_urb,
+								GFP_KERNEL);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around edge_port->icount
#973: FILE: drivers/usb/serial/io_edgeport.c:967:
+	memset(&(edge_port->icount), 0x00, sizeof(edge_port->icount));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:CAMELCASE: Avoid CamelCase: <shadowMCR>
#980: FILE: drivers/usb/serial/io_edgeport.c:972:
+	edge_port->shadowMCR = MCR_MASTER_IE;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#992: FILE: drivers/usb/serial/io_edgeport.c:982:
+		dev_err(&port->dev, "%s - error sending open port command\n",
+								__func__);

CHECK:CAMELCASE: Avoid CamelCase: <openPending>
#999: FILE: drivers/usb/serial/io_edgeport.c:988:
+	wait_event_timeout(edge_port->wait_open, !edge_port->openPending,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1000: FILE: drivers/usb/serial/io_edgeport.c:989:
+	wait_event_timeout(edge_port->wait_open, !edge_port->openPending,
+								OPEN_TIMEOUT);

CHECK:CAMELCASE: Avoid CamelCase: <maxTxCredits>
#1009: FILE: drivers/usb/serial/io_edgeport.c:1003:
+	edge_port->txfifo.fifo	= kmalloc(edge_port->maxTxCredits, GFP_KERNEL);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1014: FILE: drivers/usb/serial/io_edgeport.c:1007:
+		edge_close(tty, port, filp);
 		                      ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1026: FILE: drivers/usb/serial/io_edgeport.c:1017:
+		edge_close(tty, port, filp);
 		                      ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1032: FILE: drivers/usb/serial/io_edgeport.c:1022:
+	dbg("%s(%d) - Initialize TX fifo to %d bytes",
+			__func__, port->number, edge_port->maxTxCredits);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1062: FILE: drivers/usb/serial/io_edgeport.c:1064:
+		prepare_to_wait(&edge_port->wait_chase, &wait,
+						TASK_UNINTERRUPTIBLE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1080: FILE: drivers/usb/serial/io_edgeport.c:1079:
+			dbg("%s - Last %d, Current %d", __func__,
+					lastCredits, edge_port->txCredits);

CHECK:CAMELCASE: Avoid CamelCase: <lastCredits>
#1080: FILE: drivers/usb/serial/io_edgeport.c:1079:
+					lastCredits, edge_port->txCredits);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1112: FILE: drivers/usb/serial/io_edgeport.c:1116:
+		prepare_to_wait(&edge_port->wait_chase, &wait,
+						TASK_UNINTERRUPTIBLE);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1137: FILE: drivers/usb/serial/io_edgeport.c:1142:
+			struct usb_serial_port *port, struct file *filp)
 			                                           ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!edge_serial"
#1149: FILE: drivers/usb/serial/io_edgeport.c:1152:
+	if (edge_serial == NULL || edge_port == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!edge_port"
#1149: FILE: drivers/usb/serial/io_edgeport.c:1152:
+	if (edge_serial == NULL || edge_port == NULL)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1195: FILE: drivers/usb/serial/io_edgeport.c:1192:
+		/* if this urb had a transfer buffer already
+				(old transfer) free it */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1195: FILE: drivers/usb/serial/io_edgeport.c:1192:
+				(old transfer) free it */

CHECK:CAMELCASE: Avoid CamelCase: <copySize>
#1232: FILE: drivers/usb/serial/io_edgeport.c:1232:
+	copySize = min((unsigned int)count,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1233: FILE: drivers/usb/serial/io_edgeport.c:1233:
+	copySize = min((unsigned int)count,
+				(edge_port->txCredits - fifo->count));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1238: FILE: drivers/usb/serial/io_edgeport.c:1236:
+	dbg("%s(%d) of %d byte(s) Fifo room  %d -- will copy %d bytes",
+			__func__, port->number, count,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1243: FILE: drivers/usb/serial/io_edgeport.c:1240:
+	/* catch writes of 0 bytes which the tty driver likes to give us,
+	   and when txCredits is empty */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1243: FILE: drivers/usb/serial/io_edgeport.c:1240:
+	   and when txCredits is empty */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1267: FILE: drivers/usb/serial/io_edgeport.c:1256:
+	dbg("%s - copy %d bytes of %d into fifo ", __func__,
+					firsthalf, bytesleft);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1273: FILE: drivers/usb/serial/io_edgeport.c:1261:
+	usb_serial_debug_data(debug, &port->dev, __func__,
+					firsthalf, &fifo->fifo[fifo->head]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1295: FILE: drivers/usb/serial/io_edgeport.c:1277:
+		usb_serial_debug_data(debug, &port->dev, __func__,
+					secondhalf, &fifo->fifo[fifo->head]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1314: FILE: drivers/usb/serial/io_edgeport.c:1293:
+	dbg("%s wrote %d byte(s) TxCredits %d, Fifo %d", __func__,
+				copySize, edge_port->txCredits, fifo->count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1327: FILE: drivers/usb/serial/io_edgeport.c:1313:
+static void send_more_port_data(struct edgeport_serial *edge_serial,
+					struct edgeport_port *edge_port)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1337: FILE: drivers/usb/serial/io_edgeport.c:1333:
+		dbg("%s(%d) EXIT - fifo %d, PendingWrite = %d",
+				__func__, edge_port->port->number,

WARNING:LONG_LINE: line length of 130 exceeds 100 columns
#1358: FILE: drivers/usb/serial/io_edgeport.c:1345:
+	if (edge_port->txCredits < EDGE_FW_GET_TX_CREDITS_SEND_THRESHOLD(edge_port->maxTxCredits, EDGE_FW_BULK_MAX_PACKET_SIZE)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1360: FILE: drivers/usb/serial/io_edgeport.c:1347:
+		dbg("%s(%d) Not enough credit - fifo %d TxCredit %d",
+			__func__, edge_port->port->number, fifo->count,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1379: FILE: drivers/usb/serial/io_edgeport.c:1363:
+	/* build the data header for the buffer and port that we are about
+	   to send out */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1379: FILE: drivers/usb/serial/io_edgeport.c:1363:
+	   to send out */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1382: FILE: drivers/usb/serial/io_edgeport.c:1365:
+	buffer = kmalloc(count+2, GFP_ATOMIC);
 	                      ^

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1385: FILE: drivers/usb/serial/io_edgeport.c:1367:
 	if (buffer == NULL) {
+		dev_err(&edge_port->port->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1386: FILE: drivers/usb/serial/io_edgeport.c:1368:
+		dev_err(&edge_port->port->dev,
+				"%s - no more kernel memory...\n", __func__);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1412: FILE: drivers/usb/serial/io_edgeport.c:1388:
+		memcpy(&buffer[2+firsthalf], &fifo->fifo[fifo->tail],
 		                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1413: FILE: drivers/usb/serial/io_edgeport.c:1389:
+		memcpy(&buffer[2+firsthalf], &fifo->fifo[fifo->tail],
+								secondhalf);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1421: FILE: drivers/usb/serial/io_edgeport.c:1396:
+		usb_serial_debug_data(debug, &edge_port->port->dev,
+						__func__, count, &buffer[2]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1428: FILE: drivers/usb/serial/io_edgeport.c:1400:
+	usb_fill_bulk_urb(urb, edge_serial->serial->dev,
+			usb_sndbulkpipe(edge_serial->serial->dev,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1430: FILE: drivers/usb/serial/io_edgeport.c:1402:
+			buffer, count+2,
 			             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1451: FILE: drivers/usb/serial/io_edgeport.c:1423:
+	dbg("%s wrote %d byte(s) TxCredit %d, Fifo %d",
+			__func__, count, edge_port->txCredits, fifo->count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1508: FILE: drivers/usb/serial/io_edgeport.c:1502:
+		dbg("%s(port %d) - returns %d", __func__,
+						port->number, num_chars);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1530: FILE: drivers/usb/serial/io_edgeport.c:1542:
+		status = send_cmd_write_uart_register(edge_port, MCR,
+							edge_port->shadowMCR);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1554: FILE: drivers/usb/serial/io_edgeport.c:1583:
+		send_cmd_write_uart_register(edge_port, MCR,
+						edge_port->shadowMCR);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1572: FILE: drivers/usb/serial/io_edgeport.c:1628:
+ * ^I    allows an RS485 driver to be written in user space.$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1576: FILE: drivers/usb/serial/io_edgeport.c:1631:
+static int get_lsr_info(struct edgeport_port *edge_port,
+						unsigned int __user *value)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1586: FILE: drivers/usb/serial/io_edgeport.c:1650:
+static int edge_tiocmset(struct tty_struct *tty, struct file *file,
+					unsigned int set, unsigned int clear)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1596: FILE: drivers/usb/serial/io_edgeport.c:1706:
+static int get_serial_info(struct edgeport_port *edge_port,
+				struct serial_struct __user *retinfo)

CHECK:SPACING: No space is necessary after a cast
#1635: FILE: drivers/usb/serial/io_edgeport.c:1751:
+		return get_lsr_info(edge_port, (unsigned int __user *) arg);

CHECK:SPACING: No space is necessary after a cast
#1639: FILE: drivers/usb/serial/io_edgeport.c:1755:
+		return get_serial_info(edge_port, (struct serial_struct __user *) arg);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1646: FILE: drivers/usb/serial/io_edgeport.c:1762:
+			prepare_to_wait(&edge_port->delta_msr_wait,
+						&wait, TASK_INTERRUPTIBLE);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cnow.rng != cprev.rng'
#1656: FILE: drivers/usb/serial/io_edgeport.c:1772:
+			if (((arg & TIOCM_RNG) && (cnow.rng != cprev.rng)) ||
+			    ((arg & TIOCM_DSR) && (cnow.dsr != cprev.dsr)) ||
+			    ((arg & TIOCM_CD)  && (cnow.dcd != cprev.dcd)) ||
+			    ((arg & TIOCM_CTS) && (cnow.cts != cprev.cts))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cnow.dsr != cprev.dsr'
#1656: FILE: drivers/usb/serial/io_edgeport.c:1772:
+			if (((arg & TIOCM_RNG) && (cnow.rng != cprev.rng)) ||
+			    ((arg & TIOCM_DSR) && (cnow.dsr != cprev.dsr)) ||
+			    ((arg & TIOCM_CD)  && (cnow.dcd != cprev.dcd)) ||
+			    ((arg & TIOCM_CTS) && (cnow.cts != cprev.cts))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cnow.dcd != cprev.dcd'
#1656: FILE: drivers/usb/serial/io_edgeport.c:1772:
+			if (((arg & TIOCM_RNG) && (cnow.rng != cprev.rng)) ||
+			    ((arg & TIOCM_DSR) && (cnow.dsr != cprev.dsr)) ||
+			    ((arg & TIOCM_CD)  && (cnow.dcd != cprev.dcd)) ||
+			    ((arg & TIOCM_CTS) && (cnow.cts != cprev.cts))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cnow.cts != cprev.cts'
#1656: FILE: drivers/usb/serial/io_edgeport.c:1772:
+			if (((arg & TIOCM_RNG) && (cnow.rng != cprev.rng)) ||
+			    ((arg & TIOCM_DSR) && (cnow.dsr != cprev.dsr)) ||
+			    ((arg & TIOCM_CD)  && (cnow.dcd != cprev.dcd)) ||
+			    ((arg & TIOCM_CTS) && (cnow.cts != cprev.cts))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1704: FILE: drivers/usb/serial/io_edgeport.c:1799:
+		dbg("%s (%d) TIOCGICOUNT RX=%d, TX=%d",
+				__func__,  port->number, icount.rx, icount.tx);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1740: FILE: drivers/usb/serial/io_edgeport.c:1841:
+			status = send_iosp_ext_cmd(edge_port,
+						IOSP_CMD_SET_BREAK, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1748: FILE: drivers/usb/serial/io_edgeport.c:1845:
+			status = send_iosp_ext_cmd(edge_port,
+						IOSP_CMD_CLEAR_BREAK, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1752: FILE: drivers/usb/serial/io_edgeport.c:1849:
+			dbg("%s - error sending break set/clear command.",
+				__func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1762: FILE: drivers/usb/serial/io_edgeport.c:1861:
+static void process_rcvd_data(struct edgeport_serial *edge_serial,
+				unsigned char *buffer, __u16 bufferLength)

CHECK:CAMELCASE: Avoid CamelCase: <rxHeader1>
#1775: FILE: drivers/usb/serial/io_edgeport.c:1883:
+			edge_serial->rxHeader1 = *buffer;

CHECK:CAMELCASE: Avoid CamelCase: <rxState>
#1782: FILE: drivers/usb/serial/io_edgeport.c:1888:
+				edge_serial->rxState = EXPECT_HDR2;

CHECK:CAMELCASE: Avoid CamelCase: <rxHeader2>
#1787: FILE: drivers/usb/serial/io_edgeport.c:1893:
+			edge_serial->rxHeader2 = *buffer;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1794: FILE: drivers/usb/serial/io_edgeport.c:1900:
+			 * data or status */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1800: FILE: drivers/usb/serial/io_edgeport.c:1906:
+				 * get the third byte. */

CHECK:CAMELCASE: Avoid CamelCase: <rxPort>
#1801: FILE: drivers/usb/serial/io_edgeport.c:1907:
+				edge_serial->rxPort =

CHECK:CAMELCASE: Avoid CamelCase: <rxStatusCode>
#1803: FILE: drivers/usb/serial/io_edgeport.c:1909:
+				edge_serial->rxStatusCode =

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1804: FILE: drivers/usb/serial/io_edgeport.c:1910:
+				    IOSP_GET_STATUS_CODE(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1807: FILE: drivers/usb/serial/io_edgeport.c:1913:
+				if (!IOSP_STATUS_IS_2BYTE(

CHECK:CAMELCASE: Avoid CamelCase: <rxStatusParam>
#1813: FILE: drivers/usb/serial/io_edgeport.c:1919:
+					edge_serial->rxStatusParam

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1814: FILE: drivers/usb/serial/io_edgeport.c:1920:
+					edge_serial->rxStatusParam
+						= edge_serial->rxHeader2;

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1847: FILE: drivers/usb/serial/io_edgeport.c:1925:
+				/* We have all the header bytes, process the
+				   status now */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1847: FILE: drivers/usb/serial/io_edgeport.c:1925:
+				   status now */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1849: FILE: drivers/usb/serial/io_edgeport.c:1927:
+				process_rcvd_status(edge_serial,
+						edge_serial->rxHeader2, 0);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1852: FILE: drivers/usb/serial/io_edgeport.c:1930:
+				break;
+			} else {

CHECK:CAMELCASE: Avoid CamelCase: <rxBytesRemaining>
#1855: FILE: drivers/usb/serial/io_edgeport.c:1933:
+				edge_serial->rxBytesRemaining =

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1856: FILE: drivers/usb/serial/io_edgeport.c:1934:
+				    IOSP_GET_HDR_DATA_LEN(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1860: FILE: drivers/usb/serial/io_edgeport.c:1938:
+				dbg("%s - Data for Port %u Len %u",
+						__func__,

CHECK:CAMELCASE: Avoid CamelCase: <rxLen>
#1894: FILE: drivers/usb/serial/io_edgeport.c:1955:
+				rxLen = bufferLength;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1932: FILE: drivers/usb/serial/io_edgeport.c:1969:
+			/* spit this data back into the tty driver if this
+			   port is open */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1932: FILE: drivers/usb/serial/io_edgeport.c:1969:
+			   port is open */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '['
#1934: FILE: drivers/usb/serial/io_edgeport.c:1971:
+				port = edge_serial->serial->port[

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1941: FILE: drivers/usb/serial/io_edgeport.c:1978:
+						dbg("%s - Sending %d bytes to TTY for port %d",
+							__func__, rxLen, edge_serial->rxPort);

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#1942: FILE: drivers/usb/serial/io_edgeport.c:1979:
+						edge_tty_recv(&edge_serial->serial->dev->dev, tty, buffer, rxLen);

CHECK:CAMELCASE: Avoid CamelCase: <rxHeader3>
#1964: FILE: drivers/usb/serial/io_edgeport.c:1988:
+			edge_serial->rxHeader3 = *buffer;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1969: FILE: drivers/usb/serial/io_edgeport.c:1993:
+			/* We have all the header bytes, process the
+			   status now */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1969: FILE: drivers/usb/serial/io_edgeport.c:1993:
+			   status now */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1971: FILE: drivers/usb/serial/io_edgeport.c:1995:
+			process_rcvd_status(edge_serial,
+				edge_serial->rxStatusParam,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1988: FILE: drivers/usb/serial/io_edgeport.c:2010:
+static void process_rcvd_status(struct edgeport_serial *edge_serial,
+						__u8 byte2, __u8 byte3)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2020: FILE: drivers/usb/serial/io_edgeport.c:2032:
+			 * open/closed */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2022: FILE: drivers/usb/serial/io_edgeport.c:2034:
+			dbg("%s - Port %u EXT CHASE_RSP Data = %02x",
+					__func__, edge_serial->rxPort, byte3);

CHECK:CAMELCASE: Avoid CamelCase: <chaseResponsePending>
#2032: FILE: drivers/usb/serial/io_edgeport.c:2044:
+			edge_port->chaseResponsePending = false;

WARNING:LONG_LINE: line length of 133 exceeds 100 columns
#2041: FILE: drivers/usb/serial/io_edgeport.c:2049:
+			dbg("%s ========== Port %u CHECK_RSP Sequence = %02x =============\n", __func__, edge_serial->rxPort, byte3);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2056: FILE: drivers/usb/serial/io_edgeport.c:2062:
+		/* send the current line settings to the port so we are
+		   in sync with any further termios calls */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2056: FILE: drivers/usb/serial/io_edgeport.c:2062:
+		   in sync with any further termios calls */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2061: FILE: drivers/usb/serial/io_edgeport.c:2066:
+			change_port_settings(edge_port->port->port.tty,
+				edge_port, edge_port->port->port.tty->termios);

CHECK:CAMELCASE: Avoid CamelCase: <closePending>
#2077: FILE: drivers/usb/serial/io_edgeport.c:2079:
+	if (!edge_port->open || edge_port->closePending)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2090: FILE: drivers/usb/serial/io_edgeport.c:2086:
+		dbg("%s - Port %u LSR Status = %02x",
+					__func__, edge_serial->rxPort, byte2);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2115: FILE: drivers/usb/serial/io_edgeport.c:2092:
+		dbg("%s - Port %u LSR Status = %02x, Data = %02x",
+				__func__, edge_serial->rxPort, byte2, byte3);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2128: FILE: drivers/usb/serial/io_edgeport.c:2105:
+		dbg("%s - Port %u MSR Status = %02x",
+					__func__, edge_serial->rxPort, byte2);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2154: FILE: drivers/usb/serial/io_edgeport.c:2127:
+static void edge_tty_recv(struct device *dev, struct tty_struct *tty,
+					unsigned char *data, int length)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2202: FILE: drivers/usb/serial/io_edgeport.c:2186:
+static void handle_new_lsr(struct edgeport_port *edge_port, __u8 lsrData,
+							__u8 lsr, __u8 data)

CHECK:SPACING: No space is necessary after a cast
#2206: FILE: drivers/usb/serial/io_edgeport.c:2188:
+	__u8 newLsr = (__u8) (lsr & (__u8)

CHECK:CAMELCASE: Avoid CamelCase: <newLsr>
#2206: FILE: drivers/usb/serial/io_edgeport.c:2188:
+	__u8 newLsr = (__u8) (lsr & (__u8)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2232: FILE: drivers/usb/serial/io_edgeport.c:2208:
+		edge_tty_recv(&edge_port->port->dev,
+					edge_port->port->port.tty, &data, 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2267: FILE: drivers/usb/serial/io_edgeport.c:2233:
+static int sram_write(struct usb_serial *serial, __u16 extAddr, __u16 addr,
+						__u16 length, __u8 *data)

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#2279: FILE: drivers/usb/serial/io_edgeport.c:2243:
 	if (!transfer_buffer) {
+		dev_err(&serial->dev->dev, "%s - kmalloc(%d) failed.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2280: FILE: drivers/usb/serial/io_edgeport.c:2244:
+		dev_err(&serial->dev->dev, "%s - kmalloc(%d) failed.\n",
+							__func__, 64);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2300: FILE: drivers/usb/serial/io_edgeport.c:2257:
+/*		dbg("%s - writing %x, %x, %d", __func__,
+					extAddr, addr, current_length); */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2300: FILE: drivers/usb/serial/io_edgeport.c:2257:
+					extAddr, addr, current_length); */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2303: FILE: drivers/usb/serial/io_edgeport.c:2260:
+		result = usb_control_msg(serial->dev,
+					usb_sndctrlpipe(serial->dev, 0),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2326: FILE: drivers/usb/serial/io_edgeport.c:2284:
+static int rom_write(struct usb_serial *serial, __u16 extAddr, __u16 addr,
+						__u16 length, __u8 *data)

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#2339: FILE: drivers/usb/serial/io_edgeport.c:2294:
 	if (!transfer_buffer) {
+		dev_err(&serial->dev->dev, "%s - kmalloc(%d) failed.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2340: FILE: drivers/usb/serial/io_edgeport.c:2295:
+		dev_err(&serial->dev->dev, "%s - kmalloc(%d) failed.\n",
+								__func__, 64);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2360: FILE: drivers/usb/serial/io_edgeport.c:2308:
+/*		dbg("%s - writing %x, %x, %d", __func__,
+					extAddr, addr, current_length); */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2360: FILE: drivers/usb/serial/io_edgeport.c:2308:
+					extAddr, addr, current_length); */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2363: FILE: drivers/usb/serial/io_edgeport.c:2311:
+		result = usb_control_msg(serial->dev,
+					usb_sndctrlpipe(serial->dev, 0),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2386: FILE: drivers/usb/serial/io_edgeport.c:2335:
+static int rom_read(struct usb_serial *serial, __u16 extAddr,
+					__u16 addr, __u16 length, __u8 *data)

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#2398: FILE: drivers/usb/serial/io_edgeport.c:2345:
 	if (!transfer_buffer) {
+		dev_err(&serial->dev->dev,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2417: FILE: drivers/usb/serial/io_edgeport.c:2358:
+/*		dbg("%s - %x, %x, %d", __func__,
+				extAddr, addr, current_length); */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2417: FILE: drivers/usb/serial/io_edgeport.c:2358:
+				extAddr, addr, current_length); */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2419: FILE: drivers/usb/serial/io_edgeport.c:2360:
+		result = usb_control_msg(serial->dev,
+					usb_rcvctrlpipe(serial->dev, 0),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2444: FILE: drivers/usb/serial/io_edgeport.c:2382:
+static int send_iosp_ext_cmd(struct edgeport_port *edge_port,
+						__u8 command, __u8 param)

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#2456: FILE: drivers/usb/serial/io_edgeport.c:2393:
 	if (!buffer) {
+		dev_err(&edge_port->port->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2457: FILE: drivers/usb/serial/io_edgeport.c:2394:
+		dev_err(&edge_port->port->dev,
+				"%s - kmalloc(%d) failed.\n", __func__, 10);

CHECK:CAMELCASE: Avoid CamelCase: <currentCommand>
#2466: FILE: drivers/usb/serial/io_edgeport.c:2400:
+	MAKE_CMD_EXT_CMD(&currentCommand, &length,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2467: FILE: drivers/usb/serial/io_edgeport.c:2401:
+	MAKE_CMD_EXT_CMD(&currentCommand, &length,
+		edge_port->port->number - edge_port->port->serial->minor,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2481: FILE: drivers/usb/serial/io_edgeport.c:2419:
+static int write_cmd_usb(struct edgeport_port *edge_port,
+					unsigned char *buffer, int length)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2492: FILE: drivers/usb/serial/io_edgeport.c:2428:
+	usb_serial_debug_data(debug, &edge_port->port->dev,
+						__func__, length, buffer);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2503: FILE: drivers/usb/serial/io_edgeport.c:2437:
+	dbg("%s - ALLOCATE URB %p (outstanding %d)",
+				__func__, urb, atomic_read(&CmdUrbs));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2509: FILE: drivers/usb/serial/io_edgeport.c:2440:
+	usb_fill_bulk_urb(urb, edge_serial->serial->dev,
+			usb_sndbulkpipe(edge_serial->serial->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2520: FILE: drivers/usb/serial/io_edgeport.c:2450:
+		dev_err(&edge_port->port->dev,
+		    "%s - usb_submit_urb(write command) failed, status = %d\n",

CHECK:CAMELCASE: Avoid CamelCase: <commandPending>
#2533: FILE: drivers/usb/serial/io_edgeport.c:2461:
+	wait_event(&edge_port->wait_command, !edge_port->commandPending);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2543: FILE: drivers/usb/serial/io_edgeport.c:2479:
+static int send_cmd_write_baud_rate(struct edgeport_port *edge_port,
+								int baudRate)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2565: FILE: drivers/usb/serial/io_edgeport.c:2499:
+	dbg("%s - port = %d, baud = %d", __func__,
+					edge_port->port->number, baudRate);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2572: FILE: drivers/usb/serial/io_edgeport.c:2504:
+		dev_err(&edge_port->port->dev, "%s - bad baud rate\n",
+								__func__);

CHECK:CAMELCASE: Avoid CamelCase: <cmdBuffer>
#2579: FILE: drivers/usb/serial/io_edgeport.c:2509:
+	cmdBuffer =  kmalloc(0x100, GFP_ATOMIC);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#2582: FILE: drivers/usb/serial/io_edgeport.c:2511:
 	if (!cmdBuffer) {
+		dev_err(&edge_port->port->dev,

CHECK:CAMELCASE: Avoid CamelCase: <currCmd>
#2591: FILE: drivers/usb/serial/io_edgeport.c:2518:
+	MAKE_CMD_WRITE_REG(&currCmd, &cmdLen, number, LCR, LCR_DL_ENABLE);

CHECK:CAMELCASE: Avoid CamelCase: <cmdLen>
#2591: FILE: drivers/usb/serial/io_edgeport.c:2518:
+	MAKE_CMD_WRITE_REG(&currCmd, &cmdLen, number, LCR, LCR_DL_ENABLE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2604: FILE: drivers/usb/serial/io_edgeport.c:2526:
+	MAKE_CMD_WRITE_REG(&currCmd, &cmdLen, number, LCR,
+						edge_port->shadowLCR);

CHECK:CAMELCASE: Avoid CamelCase: <shadowLCR>
#2604: FILE: drivers/usb/serial/io_edgeport.c:2526:
+						edge_port->shadowLCR);

CHECK:CAMELCASE: Avoid CamelCase: <BaudRate>
#2629: FILE: drivers/usb/serial/io_edgeport.c:2552:
+		if (divisor_table[i].BaudRate == baudrate) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2640: FILE: drivers/usb/serial/io_edgeport.c:2560:
+	 * Make sure the baud rate is reasonable */

WARNING:REPEATED_WORD: Possible repeated word: 'to'
#2652: FILE: drivers/usb/serial/io_edgeport.c:2577:
+ *  this function builds up a uart register message and sends to to the device.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2656: FILE: drivers/usb/serial/io_edgeport.c:2580:
+static int send_cmd_write_uart_register(struct edgeport_port *edge_port,
+						__u8 regNum, __u8 regValue)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2668: FILE: drivers/usb/serial/io_edgeport.c:2590:
+	dbg("%s - write to %s register 0x%02x",
+			(regNum == MCR) ? "MCR" : "LCR", __func__, regValue);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cmdBuffer"
#2686: FILE: drivers/usb/serial/io_edgeport.c:2608:
+	if (cmdBuffer == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2698: FILE: drivers/usb/serial/io_edgeport.c:2615:
+	MAKE_CMD_WRITE_REG(&currCmd, &cmdLen,
+		edge_port->port->number - edge_port->port->serial->minor,

CHECK:CAMELCASE: Avoid CamelCase: <lData>
#2738: FILE: drivers/usb/serial/io_edgeport.c:2661:
+		lData = LCR_BITS_5; mask = 0x1f;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2763: FILE: drivers/usb/serial/io_edgeport.c:2719:
+	/* if we are implementing XON/XOFF, set the start and stop character
+	   in the device */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2763: FILE: drivers/usb/serial/io_edgeport.c:2719:
+	   in the device */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2774: FILE: drivers/usb/serial/io_edgeport.c:2728:
+			send_iosp_ext_cmd(edge_port,
+					IOSP_CMD_SET_XON_CHAR, start_char);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2776: FILE: drivers/usb/serial/io_edgeport.c:2730:
+			send_iosp_ext_cmd(edge_port,
+					IOSP_CMD_SET_XOFF_CHAR, stop_char);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2784: FILE: drivers/usb/serial/io_edgeport.c:2737:
+			dbg("%s - INBOUND XON/XOFF is enabled, XON = %2x, XOFF = %2x",
+					__func__, start_char, stop_char);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2794: FILE: drivers/usb/serial/io_edgeport.c:2746:
+			dbg("%s - OUTBOUND XON/XOFF is enabled, XON = %2x, XOFF = %2x",
+					__func__, start_char, stop_char);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2805: FILE: drivers/usb/serial/io_edgeport.c:2770:
+	status = send_cmd_write_uart_register(edge_port, LCR,
+							edge_port->shadowLCR);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2820: FILE: drivers/usb/serial/io_edgeport.c:2780:
+	status = send_cmd_write_uart_register(edge_port, MCR,
+						edge_port->shadowMCR);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2842: FILE: drivers/usb/serial/io_edgeport.c:2810:
+static void unicode_to_ascii(char *string, int buflen,
+					__le16 *unicode, int unicode_size)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2865: FILE: drivers/usb/serial/io_edgeport.c:2839:
+	response = rom_read(edge_serial->serial,
+				(EDGE_MANUF_DESC_ADDR & 0xffff0000) >> 16,

CHECK:BRACES: Unbalanced braces around else statement
#2876: FILE: drivers/usb/serial/io_edgeport.c:2847:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2886: FILE: drivers/usb/serial/io_edgeport.c:2851:
+		dbg("  RomSize:        %dK",
+			edge_serial->manuf_descriptor.RomSize);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2888: FILE: drivers/usb/serial/io_edgeport.c:2853:
+		dbg("  RamSize:        %dK",
+			edge_serial->manuf_descriptor.RamSize);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2890: FILE: drivers/usb/serial/io_edgeport.c:2855:
+		dbg("  CpuRev:         %d",
+			edge_serial->manuf_descriptor.CpuRev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2892: FILE: drivers/usb/serial/io_edgeport.c:2857:
+		dbg("  BoardRev:       %d",
+			edge_serial->manuf_descriptor.BoardRev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2894: FILE: drivers/usb/serial/io_edgeport.c:2859:
+		dbg("  NumPorts:       %d",
+			edge_serial->manuf_descriptor.NumPorts);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2896: FILE: drivers/usb/serial/io_edgeport.c:2861:
+		dbg("  DescDate:       %d/%d/%d",
+			edge_serial->manuf_descriptor.DescDate[0],

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2898: FILE: drivers/usb/serial/io_edgeport.c:2863:
+			edge_serial->manuf_descriptor.DescDate[2]+1900);
 			                                         ^

CHECK:CAMELCASE: Avoid CamelCase: <SerialNumber>
#2902: FILE: drivers/usb/serial/io_edgeport.c:2865:
+			edge_serial->manuf_descriptor.SerialNumber,

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2903: FILE: drivers/usb/serial/io_edgeport.c:2866:
+			edge_serial->manuf_descriptor.SerNumLength/2);
 			                                          ^

CHECK:CAMELCASE: Avoid CamelCase: <SerNumLength>
#2903: FILE: drivers/usb/serial/io_edgeport.c:2866:
+			edge_serial->manuf_descriptor.SerNumLength/2);

CHECK:CAMELCASE: Avoid CamelCase: <AssemblyNumber>
#2908: FILE: drivers/usb/serial/io_edgeport.c:2869:
+			edge_serial->manuf_descriptor.AssemblyNumber,

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2909: FILE: drivers/usb/serial/io_edgeport.c:2870:
+			edge_serial->manuf_descriptor.AssemblyNumLength/2);
 			                                               ^

CHECK:CAMELCASE: Avoid CamelCase: <AssemblyNumLength>
#2909: FILE: drivers/usb/serial/io_edgeport.c:2870:
+			edge_serial->manuf_descriptor.AssemblyNumLength/2);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2919: FILE: drivers/usb/serial/io_edgeport.c:2877:
+		dbg("  UartType:       %d",
+			edge_serial->manuf_descriptor.UartType);

CHECK:CAMELCASE: Avoid CamelCase: <UartType>
#2919: FILE: drivers/usb/serial/io_edgeport.c:2877:
+			edge_serial->manuf_descriptor.UartType);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2921: FILE: drivers/usb/serial/io_edgeport.c:2879:
+		dbg("  IonPid:         %d",
+			edge_serial->manuf_descriptor.IonPid);

CHECK:CAMELCASE: Avoid CamelCase: <IonPid>
#2921: FILE: drivers/usb/serial/io_edgeport.c:2879:
+			edge_serial->manuf_descriptor.IonPid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2923: FILE: drivers/usb/serial/io_edgeport.c:2881:
+		dbg("  IonConfig:      %d",
+			edge_serial->manuf_descriptor.IonConfig);

CHECK:CAMELCASE: Avoid CamelCase: <IonConfig>
#2923: FILE: drivers/usb/serial/io_edgeport.c:2881:
+			edge_serial->manuf_descriptor.IonConfig);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2945: FILE: drivers/usb/serial/io_edgeport.c:2898:
+	response = rom_read(edge_serial->serial,
+				(EDGE_BOOT_DESC_ADDR & 0xffff0000) >> 16,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2955: FILE: drivers/usb/serial/io_edgeport.c:2905:
+		dev_err(&edge_serial->serial->dev->dev,
+				"error in getting boot descriptor\n");

CHECK:BRACES: Unbalanced braces around else statement
#2956: FILE: drivers/usb/serial/io_edgeport.c:2906:
+	else {

CHECK:CAMELCASE: Avoid CamelCase: <BootCodeLength>
#2966: FILE: drivers/usb/serial/io_edgeport.c:2909:
+		    le16_to_cpu(edge_serial->boot_descriptor.BootCodeLength));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2968: FILE: drivers/usb/serial/io_edgeport.c:2911:
+		dbg("  MajorVersion:   %d",
+			edge_serial->boot_descriptor.MajorVersion);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2970: FILE: drivers/usb/serial/io_edgeport.c:2913:
+		dbg("  MinorVersion:   %d",
+			edge_serial->boot_descriptor.MinorVersion);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2972: FILE: drivers/usb/serial/io_edgeport.c:2915:
+		dbg("  BuildNumber:    %d",
+			le16_to_cpu(edge_serial->boot_descriptor.BuildNumber));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2974: FILE: drivers/usb/serial/io_edgeport.c:2917:
+		dbg("  Capabilities:   0x%x",
+		      le16_to_cpu(edge_serial->boot_descriptor.Capabilities));

CHECK:CAMELCASE: Avoid CamelCase: <Capabilities>
#2974: FILE: drivers/usb/serial/io_edgeport.c:2917:
+		      le16_to_cpu(edge_serial->boot_descriptor.Capabilities));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2976: FILE: drivers/usb/serial/io_edgeport.c:2919:
+		dbg("  UConfig0:       %d",
+			edge_serial->boot_descriptor.UConfig0);

CHECK:CAMELCASE: Avoid CamelCase: <UConfig0>
#2976: FILE: drivers/usb/serial/io_edgeport.c:2919:
+			edge_serial->boot_descriptor.UConfig0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2978: FILE: drivers/usb/serial/io_edgeport.c:2921:
+		dbg("  UConfig1:       %d",
+			edge_serial->boot_descriptor.UConfig1);

CHECK:CAMELCASE: Avoid CamelCase: <UConfig1>
#2978: FILE: drivers/usb/serial/io_edgeport.c:2921:
+			edge_serial->boot_descriptor.UConfig1);

CHECK:CAMELCASE: Avoid CamelCase: <OperationalCodeImage_GEN1>
#3009: FILE: drivers/usb/serial/io_edgeport.c:2945:
+		firmware = &OperationalCodeImage_GEN1[0];

CHECK:CAMELCASE: Avoid CamelCase: <FirmwareImage>
#3010: FILE: drivers/usb/serial/io_edgeport.c:2946:
+		FirmwareImage = &OperationalCodeImage_GEN1[0];

CHECK:CAMELCASE: Avoid CamelCase: <ImageSize>
#3011: FILE: drivers/usb/serial/io_edgeport.c:2947:
+		ImageSize = sizeof(OperationalCodeImage_GEN1);

CHECK:CAMELCASE: Avoid CamelCase: <OperationalCodeImage_GEN2>
#3028: FILE: drivers/usb/serial/io_edgeport.c:2955:
+		firmware = &OperationalCodeImage_GEN2[0];

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3051: FILE: drivers/usb/serial/io_edgeport.c:2971:
+		response = sram_write(edge_serial->serial,
+						le16_to_cpu(record->ExtAddr),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3079: FILE: drivers/usb/serial/io_edgeport.c:2991:
+	response = usb_control_msg(edge_serial->serial->dev,
+			    usb_sndctrlpipe(edge_serial->serial->dev, 0),

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*edge_port)...) over kmalloc(sizeof(struct edgeport_port)...)
#3136: FILE: drivers/usb/serial/io_edgeport.c:3087:
+		edge_port = kmalloc(sizeof(struct edgeport_port), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#3139: FILE: drivers/usb/serial/io_edgeport.c:3089:
 		if (edge_port == NULL) {
+			dev_err(&serial->dev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3140: FILE: drivers/usb/serial/io_edgeport.c:3090:
+			dev_err(&serial->dev->dev,
+					"%s - Out of memory\n", __func__);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#3144: FILE: drivers/usb/serial/io_edgeport.c:3092:
+				kfree(usb_get_serial_port_data(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3147: FILE: drivers/usb/serial/io_edgeport.c:3095:
+				usb_set_serial_port_data(serial->port[j],
+									NULL);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3165: FILE: drivers/usb/serial/io_edgeport.c:3111:
+		 * urb, so that the device knows it really is connected. */

CHECK:CAMELCASE: Avoid CamelCase: <bNumEndpoints>
#3169: FILE: drivers/usb/serial/io_edgeport.c:3114:
+						.desc.bNumEndpoints; ++i) {

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'serial->interface->altsetting[0].endpoint[i].desc'
#3175: FILE: drivers/usb/serial/io_edgeport.c:3119:
+			endpoint = &serial->interface->altsetting[0].
+							endpoint[i].desc;

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

CHECK:CAMELCASE: Avoid CamelCase: <bEndpointAddress>
#3200: FILE: drivers/usb/serial/io_edgeport.c:3141:
+						endpoint->bEndpointAddress;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#3211: FILE: drivers/usb/serial/io_edgeport.c:3144:
+				usb_fill_int_urb(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3215: FILE: drivers/usb/serial/io_edgeport.c:3148:
+					usb_rcvintpipe(dev,
+						endpoint->bEndpointAddress),

CHECK:CAMELCASE: Avoid CamelCase: <bInterval>
#3220: FILE: drivers/usb/serial/io_edgeport.c:3153:
+					endpoint->bInterval);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3260: FILE: drivers/usb/serial/io_edgeport.c:3183:
+					usb_rcvbulkpipe(dev,
+						endpoint->bEndpointAddress),

CHECK:CAMELCASE: Avoid CamelCase: <wMaxPacketSize>
#3262: FILE: drivers/usb/serial/io_edgeport.c:3185:
+					le16_to_cpu(endpoint->wMaxPacketSize),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3289: FILE: drivers/usb/serial/io_edgeport.c:3209:
+		response = usb_submit_urb(edge_serial->interrupt_read_urb,
+								GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3293: FILE: drivers/usb/serial/io_edgeport.c:3212:
+			err("%s - Error %d submitting control urb",
+							__func__, response);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000265207.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 12 errors, 67 warnings, 286 checks, 3229 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000265207.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
