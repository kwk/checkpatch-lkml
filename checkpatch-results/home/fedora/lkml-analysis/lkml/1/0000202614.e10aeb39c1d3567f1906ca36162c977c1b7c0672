WARNING:LEADING_SPACE: please, no spaces at the start of a line
#57: FILE: include/linux/lockdep.h:139:
+       bounce_hungry,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: include/linux/lockdep.h:169:
+       int                             isspinlock;$

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#74: FILE: kernel/lockdep.c:2999:
unsigned long ip)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: kernel/lockdep.c:3003:
+       spinlock_t * lock_ptr;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#78: FILE: kernel/lockdep.c:3003:
+       spinlock_t * lock_ptr;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: kernel/lockdep.c:3004:
+       unsigned long hungry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: kernel/lockdep.c:3006:
+       if (lock->isspinlock){$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#81: FILE: kernel/lockdep.c:3006:
+       if (lock->isspinlock){
+               lock_ptr = container_of(lock,spinlock_t,dep_map);

ERROR:SPACING: space required before the open brace '{'
#81: FILE: kernel/lockdep.c:3006:
+       if (lock->isspinlock){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#82: FILE: kernel/lockdep.c:3007:
+               lock_ptr = container_of(lock,spinlock_t,dep_map);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: kernel/lockdep.c:3007:
+               lock_ptr = container_of(lock,spinlock_t,dep_map);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#82: FILE: kernel/lockdep.c:3007:
+               lock_ptr = container_of(lock,spinlock_t,dep_map);
                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#82: FILE: kernel/lockdep.c:3007:
+               lock_ptr = container_of(lock,spinlock_t,dep_map);
                                                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: kernel/lockdep.c:3010:
+               hungry=(unsigned$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: kernel/lockdep.c:3010:
+               hungry=(unsigned$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#85: FILE: kernel/lockdep.c:3010:
+               hungry=(unsigned
                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: kernel/lockdep.c:3013:
+               hungry=(unsigned$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: kernel/lockdep.c:3013:
+               hungry=(unsigned$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#89: FILE: kernel/lockdep.c:3013:
+               hungry=(unsigned
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: kernel/lockdep.c:3016:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: kernel/lockdep.c:3047:
+       if (lock->isspinlock){$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#101: FILE: kernel/lockdep.c:3047:
+       if (lock->isspinlock){
+               stats->bounces[bounce_hungry]+=hungry+1;

ERROR:SPACING: space required before the open brace '{'
#101: FILE: kernel/lockdep.c:3047:
+       if (lock->isspinlock){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#101: FILE: kernel/lockdep.c:3047:
+       if (lock->isspinlock){
+               stats->bounces[bounce_hungry]+=hungry+1;
+       }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: kernel/lockdep.c:3048:
+               stats->bounces[bounce_hungry]+=hungry+1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: kernel/lockdep.c:3048:
+               stats->bounces[bounce_hungry]+=hungry+1;$

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#102: FILE: kernel/lockdep.c:3048:
+               stats->bounces[bounce_hungry]+=hungry+1;
                                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#102: FILE: kernel/lockdep.c:3048:
+               stats->bounces[bounce_hungry]+=hungry+1;
                                                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: kernel/lockdep.c:3049:
+       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: kernel/lockdep_proc.c:537:
+               seq_printf(m, "%14lu ",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: kernel/lockdep_proc.c:537:
+               seq_printf(m, "%14lu ",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: kernel/lockdep_proc.c:538:
+               seq_printf(m, "%14lu ", stats->bounces[bounce_hungry]);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: kernel/lockdep_proc.c:538:
+               seq_printf(m, "%14lu ",
+               seq_printf(m, "%14lu ", stats->bounces[bounce_hungry]);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: kernel/lockdep_proc.c:538:
+               seq_printf(m, "%14lu ", stats->bounces[bounce_hungry]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: kernel/lockdep_proc.c:588:
+       seq_printf(m, "%40s %14s %14s %14s %14s %14s %14s %14s %14s %14s "$

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: kernel/lockdep_proc.c:592:
+                       "con-hungry",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: kernel/lockdep_proc.c:592:
+                       "con-hungry",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: kernel/lockdep_proc.c:602:
+       seq_line(m, '-', 0, 40 + 1 + 11 * (14 + 1));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: lib/spinlock_debug.c:30:
+       lock->dep_map.isspinlock = 0;$

ERROR:SPACING: spaces required around that '&&' (ctx:VxE)
#158: FILE: lib/spinlock_debug.c:31:
+#if ((defined(CONFIG_X86) || defined(CONFIG_X86_64))&&
                                                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: lib/spinlock_debug.c:32:
+       lock->dep_map.isspinlock = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: include/linux/lockdep.h:139:
+       bounce_hungry,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: include/linux/lockdep.h:169:
+       int                             isspinlock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: kernel/lockdep.c:3003:
+       spinlock_t * lock_ptr;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#195: FILE: kernel/lockdep.c:3003:
+       spinlock_t * lock_ptr;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: kernel/lockdep.c:3004:
+       unsigned long hungry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: kernel/lockdep.c:3006:
+       if (lock->isspinlock){$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#198: FILE: kernel/lockdep.c:3006:
+       if (lock->isspinlock){
+               lock_ptr = container_of(lock,spinlock_t,dep_map);

ERROR:SPACING: space required before the open brace '{'
#198: FILE: kernel/lockdep.c:3006:
+       if (lock->isspinlock){

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: kernel/lockdep.c:3007:
+               lock_ptr = container_of(lock,spinlock_t,dep_map);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: kernel/lockdep.c:3007:
+               lock_ptr = container_of(lock,spinlock_t,dep_map);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#199: FILE: kernel/lockdep.c:3007:
+               lock_ptr = container_of(lock,spinlock_t,dep_map);
                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#199: FILE: kernel/lockdep.c:3007:
+               lock_ptr = container_of(lock,spinlock_t,dep_map);
                                                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: kernel/lockdep.c:3010:
+               hungry=(unsigned$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: kernel/lockdep.c:3010:
+               hungry=(unsigned$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#202: FILE: kernel/lockdep.c:3010:
+               hungry=(unsigned
                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: kernel/lockdep.c:3013:
+               hungry=(unsigned$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: kernel/lockdep.c:3013:
+               hungry=(unsigned$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#206: FILE: kernel/lockdep.c:3013:
+               hungry=(unsigned
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: kernel/lockdep.c:3016:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: kernel/lockdep.c:3047:
+       if (lock->isspinlock){$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#218: FILE: kernel/lockdep.c:3047:
+       if (lock->isspinlock){
+               stats->bounces[bounce_hungry]+=hungry+1;

ERROR:SPACING: space required before the open brace '{'
#218: FILE: kernel/lockdep.c:3047:
+       if (lock->isspinlock){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#218: FILE: kernel/lockdep.c:3047:
+       if (lock->isspinlock){
+               stats->bounces[bounce_hungry]+=hungry+1;
+       }

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: kernel/lockdep.c:3048:
+               stats->bounces[bounce_hungry]+=hungry+1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: kernel/lockdep.c:3048:
+               stats->bounces[bounce_hungry]+=hungry+1;$

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#219: FILE: kernel/lockdep.c:3048:
+               stats->bounces[bounce_hungry]+=hungry+1;
                                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#219: FILE: kernel/lockdep.c:3048:
+               stats->bounces[bounce_hungry]+=hungry+1;
                                                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: kernel/lockdep.c:3049:
+       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: kernel/lockdep_proc.c:537:
+               seq_printf(m, "%14lu ",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: kernel/lockdep_proc.c:537:
+               seq_printf(m, "%14lu ",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#240: FILE: kernel/lockdep_proc.c:538:
+               seq_printf(m, "%14lu ", stats->bounces[bounce_hungry]);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#240: FILE: kernel/lockdep_proc.c:538:
+               seq_printf(m, "%14lu ",
+               seq_printf(m, "%14lu ", stats->bounces[bounce_hungry]);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: kernel/lockdep_proc.c:538:
+               seq_printf(m, "%14lu ", stats->bounces[bounce_hungry]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: kernel/lockdep_proc.c:588:
+       seq_printf(m, "%40s %14s %14s %14s %14s %14s %14s %14s %14s %14s "$

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: kernel/lockdep_proc.c:592:
+                       "con-hungry",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: kernel/lockdep_proc.c:592:
+                       "con-hungry",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: kernel/lockdep_proc.c:602:
+       seq_line(m, '-', 0, 40 + 1 + 11 * (14 + 1));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: lib/spinlock_debug.c:30:
+       lock->dep_map.isspinlock = 0;$

ERROR:SPACING: spaces required around that '&&' (ctx:VxE)
#275: FILE: lib/spinlock_debug.c:31:
+#if ((defined(CONFIG_X86) || defined(CONFIG_X86_64))&&
                                                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: lib/spinlock_debug.c:32:
+       lock->dep_map.isspinlock = 1;$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000202614.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 33 errors, 44 warnings, 4 checks, 184 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000202614.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
