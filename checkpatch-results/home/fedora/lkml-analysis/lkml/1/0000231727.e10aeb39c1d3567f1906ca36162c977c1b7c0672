WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#55: FILE: include/linux/pageout_clustering.h:1:
+#ifndef PAGEOUT_CLUSTERING_H_

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#59: FILE: include/linux/pageout_clustering.h:5:
+#define INITIAL_CLUSTER_SCAN_RANGE 4 $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#60: FILE: include/linux/pageout_clustering.h:6:
+#define HALF_PAGEOUT_CLUSTER_SIZE 8      /* default number of pages to be clustered $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#61: FILE: include/linux/pageout_clustering.h:7:
+					  * on either side of a given page */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#63: FILE: include/linux/pageout_clustering.h:9:
+int try_to_cluster(struct page *, struct list_head *, $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#63: FILE: include/linux/pageout_clustering.h:9:
+int try_to_cluster(struct page *, struct list_head *, 

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct list_head *' should also have an identifier name
#63: FILE: include/linux/pageout_clustering.h:9:
+int try_to_cluster(struct page *, struct list_head *, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct list_head *' should also have an identifier name
#63: FILE: include/linux/pageout_clustering.h:9:
+int try_to_cluster(struct page *, struct list_head *, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#63: FILE: include/linux/pageout_clustering.h:9:
+int try_to_cluster(struct page *, struct list_head *, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#63: FILE: include/linux/pageout_clustering.h:9:
+int try_to_cluster(struct page *, struct list_head *, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#66: FILE: include/linux/pageout_clustering.h:12:
+#endif $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#74: FILE: include/linux/rmap.h:105:
+ * Used by pageout clustering $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#76: FILE: include/linux/rmap.h:107:
+struct anon_vma *page_lock_anon_vma(struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct anon_vma *' should also have an identifier name
#77: FILE: include/linux/rmap.h:108:
+void page_unlock_anon_vma(struct anon_vma *);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#103: FILE: mm/pageout_clustering.c:1:
+#include<linux/pageout_clustering.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#114: FILE: mm/pageout_clustering.c:12:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#118: FILE: mm/pageout_clustering.c:16:
+struct clustering_info $

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#119: FILE: mm/pageout_clustering.c:17:
+struct clustering_info 
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#120: FILE: mm/pageout_clustering.c:18:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#121: FILE: mm/pageout_clustering.c:19:
+    struct page *page;                 /* page descriptor of a page used for sampling cluster pages */ $

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#121: FILE: mm/pageout_clustering.c:19:
+    struct page *page;                 /* page descriptor of a page used for sampling cluster pages */ 

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: mm/pageout_clustering.c:19:
+    struct page *page;                 /* page descriptor of a page used for sampling cluster pages */ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: mm/pageout_clustering.c:20:
+    struct vm_area_struct *vma;        /* VMA under consideration */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: mm/pageout_clustering.c:21:
+    struct list_head *src;             /* source page list used by shrink_list and friends */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#124: FILE: mm/pageout_clustering.c:22:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: mm/pageout_clustering.c:22:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: mm/pageout_clustering.c:23:
+    union {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#129: FILE: mm/pageout_clustering.c:27:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: mm/pageout_clustering.c:27:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: mm/pageout_clustering.c:28:
+    struct page **cluster;             /* our page cluster */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: mm/pageout_clustering.c:29:
+    unsigned int cluster_size;         /* cluster size */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: mm/pageout_clustering.c:30:
+    unsigned int page_index;           /* index of the sampling page within the cluster */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: mm/pageout_clustering.c:31:
+    unsigned int index;                /* slot in the cluster for the next page */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: mm/pageout_clustering.c:32:
+    unsigned int range;                /* maximum number of VMA's to scan */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: mm/pageout_clustering.c:33:
+    unsigned int nr_collected;         /* number of pages collected in the cluster */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: mm/pageout_clustering.c:34:
+    unsigned int nr_sc;                /* current number of VMA's scanned */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: mm/pageout_clustering.c:35:
+    int mode;                          /* page-isolation mode */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: mm/pageout_clustering.c:36:
+    int anonym;                        /* indicates whether we are to collect mapped pages (0)$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#139: FILE: mm/pageout_clustering.c:37:
+					* or anonymous pages (1) */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: mm/pageout_clustering.c:38:
+    int (*continue_search)$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct clustering_info *' should also have an identifier name
#140: FILE: mm/pageout_clustering.c:38:
+    int (*continue_search)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#144: FILE: mm/pageout_clustering.c:42:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: mm/pageout_clustering.c:45:
+    return (ci->nr_sc < ci->range) && (ci->nr_collected < ci->cluster_size);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: mm/pageout_clustering.c:48:
+    $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#150: FILE: mm/pageout_clustering.c:48:
+
+    

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: mm/pageout_clustering.c:48:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: mm/pageout_clustering.c:52:
+    int zone_id = page_zone_id(ci->page);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#156: FILE: mm/pageout_clustering.c:54:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: mm/pageout_clustering.c:56:
+    if (unlikely(page == ci->page))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: mm/pageout_clustering.c:60:
+    if (unlikely(page_zone_id(page) != zone_id))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: mm/pageout_clustering.c:64:
+    if (!PageLRU(page))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: mm/pageout_clustering.c:68:
+    if (page->flags & PG_active)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: mm/pageout_clustering.c:72:
+    if (!(page->flags & PG_dirty))$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#176: FILE: mm/pageout_clustering.c:74:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: mm/pageout_clustering.c:74:
+        $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: mm/pageout_clustering.c:74:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: mm/pageout_clustering.c:75:
+    return 1;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#180: FILE: mm/pageout_clustering.c:78:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#182: FILE: mm/pageout_clustering.c:80:
+/* embodies vma-selection-for-clustering policy */ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: mm/pageout_clustering.c:83:
+    if ( (vma->vm_flags & VM_RESERVED) ||$

ERROR:SPACING: space prohibited after that open parenthesis '('
#185: FILE: mm/pageout_clustering.c:83:
+    if ( (vma->vm_flags & VM_RESERVED) ||

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#186: FILE: mm/pageout_clustering.c:84:
+    if ( (vma->vm_flags & VM_RESERVED) ||
+	 (vma->vm_flags & VM_LOCKED) ||

ERROR:SPACING: space prohibited before that close parenthesis ')'
#188: FILE: mm/pageout_clustering.c:86:
+	 (vma->vm_flags & VM_NONLINEAR) )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: mm/pageout_clustering.c:91:
+    if ( ((ci->anonym) && (vma->vm_file != NULL)) ||$

ERROR:SPACING: space prohibited after that open parenthesis '('
#193: FILE: mm/pageout_clustering.c:91:
+    if ( ((ci->anonym) && (vma->vm_file != NULL)) ||

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ci->anonym'
#193: FILE: mm/pageout_clustering.c:91:
+    if ( ((ci->anonym) && (vma->vm_file != NULL)) ||
+	 (!(ci->anonym) && (vma->vm_file == NULL)) )

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vma->vm_file != NULL'
#193: FILE: mm/pageout_clustering.c:91:
+    if ( ((ci->anonym) && (vma->vm_file != NULL)) ||
+	 (!(ci->anonym) && (vma->vm_file == NULL)) )

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vma->vm_file == NULL'
#193: FILE: mm/pageout_clustering.c:91:
+    if ( ((ci->anonym) && (vma->vm_file != NULL)) ||
+	 (!(ci->anonym) && (vma->vm_file == NULL)) )

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "vma->vm_file"
#193: FILE: mm/pageout_clustering.c:91:
+    if ( ((ci->anonym) && (vma->vm_file != NULL)) ||

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#194: FILE: mm/pageout_clustering.c:92:
+    if ( ((ci->anonym) && (vma->vm_file != NULL)) ||
+	 (!(ci->anonym) && (vma->vm_file == NULL)) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#194: FILE: mm/pageout_clustering.c:92:
+	 (!(ci->anonym) && (vma->vm_file == NULL)) )

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vma->vm_file"
#194: FILE: mm/pageout_clustering.c:92:
+	 (!(ci->anonym) && (vma->vm_file == NULL)) )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#196: FILE: mm/pageout_clustering.c:94:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: mm/pageout_clustering.c:94:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: mm/pageout_clustering.c:95:
+    return 1;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#200: FILE: mm/pageout_clustering.c:98:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: mm/pageout_clustering.c:105:
+    struct vm_area_struct *cursor_vma = ci->vma;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: mm/pageout_clustering.c:106:
+    struct page *cursor_page;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: mm/pageout_clustering.c:107:
+    struct mm_struct *cursor_mm;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: mm/pageout_clustering.c:108:
+    unsigned long vm_address;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#212: FILE: mm/pageout_clustering.c:110:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: mm/pageout_clustering.c:111:
+    cursor_mm = cursor_vma->vm_mm;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: mm/pageout_clustering.c:112:
+    if (!down_read_trylock(&cursor_mm->mmap_sem))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: mm/pageout_clustering.c:115:
+    do$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#217: FILE: mm/pageout_clustering.c:115:
+    do
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: mm/pageout_clustering.c:116:
+    {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#219: FILE: mm/pageout_clustering.c:117:
+	if (!vma_allowed_in_cluster(cursor_vma, ci))
+	    goto next_vma;

WARNING:TABSTOP: Statements should start on a tabstop
#220: FILE: mm/pageout_clustering.c:118:
+	    goto next_vma;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#224: FILE: mm/pageout_clustering.c:122:
+^Ifor(vm_address = cursor_vma->vm_start; $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#224: FILE: mm/pageout_clustering.c:122:
+	for(vm_address = cursor_vma->vm_start; 
+	    vm_address < cursor_vma->vm_end && ci->nr_collected < ci->cluster_size; 
+	    vm_address += PAGE_SIZE)
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#224: FILE: mm/pageout_clustering.c:122:
+	for(vm_address = cursor_vma->vm_start; 
[...]
+	{

ERROR:SPACING: space required before the open parenthesis '('
#224: FILE: mm/pageout_clustering.c:122:
+	for(vm_address = cursor_vma->vm_start; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: mm/pageout_clustering.c:123:
+^I    vm_address < cursor_vma->vm_end && ci->nr_collected < ci->cluster_size; $

WARNING:TABSTOP: Statements should start on a tabstop
#229: FILE: mm/pageout_clustering.c:127:
+	    if (!page_allowed_in_cluster(cursor_page, ci))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#232: FILE: mm/pageout_clustering.c:130:
+^I    switch (__isolate_lru_page(cursor_page, ci->mode)) $

WARNING:TABSTOP: Statements should start on a tabstop
#232: FILE: mm/pageout_clustering.c:130:
+	    switch (__isolate_lru_page(cursor_page, ci->mode)) 

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#232: FILE: mm/pageout_clustering.c:130:
+	    switch (__isolate_lru_page(cursor_page, ci->mode)) 
+	    {

WARNING:TABSTOP: Statements should start on a tabstop
#233: FILE: mm/pageout_clustering.c:131:
+	    {

WARNING:TABSTOP: Statements should start on a tabstop
#234: FILE: mm/pageout_clustering.c:132:
+	    case 0:

WARNING:TABSTOP: Statements should start on a tabstop
#240: FILE: mm/pageout_clustering.c:138:
+	    case -EBUSY:

WARNING:TABSTOP: Statements should start on a tabstop
#245: FILE: mm/pageout_clustering.c:143:
+	    default:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#247: FILE: mm/pageout_clustering.c:145:
+^I    };   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#250: FILE: mm/pageout_clustering.c:148:
+next_vma: $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#253: FILE: mm/pageout_clustering.c:151:
+	if (cursor_vma == NULL)
+	    cursor_vma = cursor_mm->mmap;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cursor_vma"
#253: FILE: mm/pageout_clustering.c:151:
+	if (cursor_vma == NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: mm/pageout_clustering.c:154:
+    } while (cursor_vma != ci->vma && ci->continue_search(ci));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: mm/pageout_clustering.c:156:
+    up_read(&cursor_mm->mmap_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: mm/pageout_clustering.c:157:
+    return;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#262: FILE: mm/pageout_clustering.c:160:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: mm/pageout_clustering.c:167:
+    struct vm_area_struct *vma;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: mm/pageout_clustering.c:168:
+    struct prio_tree_iter pst_itr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: mm/pageout_clustering.c:169:
+    const pgoff_t pgoff = ci->page->index << (PAGE_CACHE_SHIFT - PAGE_SHIFT);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#273: FILE: mm/pageout_clustering.c:171:
+    $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#273: FILE: mm/pageout_clustering.c:171:
+
+    

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: mm/pageout_clustering.c:171:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: mm/pageout_clustering.c:172:
+    vma_prio_tree_foreach(vma, &pst_itr, &ci->mapping->i_mmap, pgoff, pgoff) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#275: FILE: mm/pageout_clustering.c:173:
+	if (!ci->continue_search(ci))
+	    break;

WARNING:TABSTOP: Statements should start on a tabstop
#276: FILE: mm/pageout_clustering.c:174:
+	    break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: mm/pageout_clustering.c:178:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: mm/pageout_clustering.c:179:
+    return;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#284: FILE: mm/pageout_clustering.c:182:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: mm/pageout_clustering.c:189:
+    struct list_head *list_item;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: mm/pageout_clustering.c:190:
+    struct vm_area_struct *vma;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#294: FILE: mm/pageout_clustering.c:192:
+    $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#294: FILE: mm/pageout_clustering.c:192:
+
+    

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: mm/pageout_clustering.c:192:
+    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#295: FILE: mm/pageout_clustering.c:193:
+    for (list_item = ci->anon_vma->head.next; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: mm/pageout_clustering.c:193:
+    for (list_item = ci->anon_vma->head.next; $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#295: FILE: mm/pageout_clustering.c:193:
+    for (list_item = ci->anon_vma->head.next; 
+	 (list_item != &ci->anon_vma->head) && ci->continue_search(ci); 
+	 list_item = list_item->next)
+    {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#296: FILE: mm/pageout_clustering.c:194:
+^I (list_item != &ci->anon_vma->head) && ci->continue_search(ci); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: mm/pageout_clustering.c:196:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: mm/pageout_clustering.c:200:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: mm/pageout_clustering.c:202:
+    return;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#307: FILE: mm/pageout_clustering.c:205:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#310: FILE: mm/pageout_clustering.c:208:
+ * Searches in the virtual address space of the process possessing the page $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#313: FILE: mm/pageout_clustering.c:211:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#325: FILE: mm/pageout_clustering.c:223:
+int try_to_cluster(struct page *page, struct list_head *src, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: mm/pageout_clustering.c:226:
+    struct clustering_info cluster_info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: mm/pageout_clustering.c:227:
+    struct address_space *mapping;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: mm/pageout_clustering.c:228:
+    struct anon_vma *anon_vma;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: mm/pageout_clustering.c:229:
+    unsigned int range = INITIAL_CLUSTER_SCAN_RANGE << order;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: mm/pageout_clustering.c:231:
+    struct page *cluster[def_cluster_size] = {NULL};$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: mm/pageout_clustering.c:232:
+    int i;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#336: FILE: mm/pageout_clustering.c:234:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: mm/pageout_clustering.c:235:
+    cluster[HALF_PAGEOUT_CLUSTER_SIZE] = page;$

WARNING:TYPO_SPELLING: 'commom' may be misspelled - perhaps 'common'?
#338: FILE: mm/pageout_clustering.c:236:
+    /* initialize commom fields only; other fields are
                   ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#339: FILE: mm/pageout_clustering.c:237:
+     * set as we go on */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: mm/pageout_clustering.c:238:
+    cluster_info.page = page;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: mm/pageout_clustering.c:239:
+    cluster_info.vma = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: mm/pageout_clustering.c:240:
+    cluster_info.src = src;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: mm/pageout_clustering.c:241:
+    cluster_info.cluster = cluster;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: mm/pageout_clustering.c:242:
+    cluster_info.cluster_size = def_cluster_size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: mm/pageout_clustering.c:243:
+    cluster_info.page_index = HALF_PAGEOUT_CLUSTER_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: mm/pageout_clustering.c:244:
+    cluster_info.index = HALF_PAGEOUT_CLUSTER_SIZE + 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: mm/pageout_clustering.c:245:
+    cluster_info.range = range;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: mm/pageout_clustering.c:246:
+    cluster_info.nr_collected = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: mm/pageout_clustering.c:247:
+    cluster_info.nr_sc = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: mm/pageout_clustering.c:248:
+    cluster_info.mode = mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: mm/pageout_clustering.c:249:
+    cluster_info.continue_search = check_conditions;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#352: FILE: mm/pageout_clustering.c:250:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: mm/pageout_clustering.c:250:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: mm/pageout_clustering.c:252:
+    anon_vma = page_lock_anon_vma(page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: mm/pageout_clustering.c:253:
+    if (anon_vma != NULL)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#355: FILE: mm/pageout_clustering.c:253:
+    if (anon_vma != NULL)
+    {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "anon_vma"
#355: FILE: mm/pageout_clustering.c:253:
+    if (anon_vma != NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: mm/pageout_clustering.c:254:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: mm/pageout_clustering.c:259:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: mm/pageout_clustering.c:262:
+    else if (page_mapped(page))$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#364: FILE: mm/pageout_clustering.c:262:
+    else if (page_mapped(page))
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: mm/pageout_clustering.c:263:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: mm/pageout_clustering.c:270:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: mm/pageout_clustering.c:273:
+    for (i = 0; i < def_cluster_size; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#376: FILE: mm/pageout_clustering.c:274:
+	if (cluster[i] != NULL)
+	    list_move(&cluster[i]->lru, dst);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cluster[i]"
#376: FILE: mm/pageout_clustering.c:274:
+	if (cluster[i] != NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: mm/pageout_clustering.c:277:
+    return cluster_info.nr_collected;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#431: FILE: mm/vmscan.c:713:
+^I^I        /* counted and added to dst in try_to_cluster() */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#484: FILE: mm/vmscan.c:725:
+^I^I/* $

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000231727.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 41 errors, 112 warnings, 24 checks, 415 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000231727.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
