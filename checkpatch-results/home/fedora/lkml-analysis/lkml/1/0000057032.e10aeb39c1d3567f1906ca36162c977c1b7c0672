CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'de->file_type != EXT2_FT_WHT'
#90: FILE: fs/ext2/dir.c:222:
+	if (!de->inode && ((de->file_type != EXT2_FT_WHT) &&
+			   (de->file_type != EXT2_FT_FALLTHRU)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'de->file_type != EXT2_FT_FALLTHRU'
#90: FILE: fs/ext2/dir.c:222:
+	if (!de->inode && ((de->file_type != EXT2_FT_WHT) &&
+			   (de->file_type != EXT2_FT_FALLTHRU)))

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#115: FILE: fs/ext2/dir.c:355:
+				 * look it up, either on fallthru

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#117: FILE: fs/ext2/dir.c:357:
+				 * filldir time. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#119: FILE: fs/ext2/dir.c:359:
+					       (n<<PAGE_CACHE_SHIFT) | offset,
 					         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#132: FILE: fs/ext2/dir.c:486:
+		} else if(!res && de->file_type == EXT2_FT_FALLTHRU) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'de->file_type == EXT2_FT_WHT'
#160: FILE: fs/ext2/dir.c:616:
+		if ((de->file_type == EXT2_FT_WHT) ||
+		    (de->file_type == EXT2_FT_FALLTHRU))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'de->file_type == EXT2_FT_FALLTHRU'
#160: FILE: fs/ext2/dir.c:616:
+		if ((de->file_type == EXT2_FT_WHT) ||
+		    (de->file_type == EXT2_FT_FALLTHRU))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'de->file_type == EXT2_FT_WHT'
#170: FILE: fs/ext2/dir.c:632:
+	if (de->inode || (((de->file_type == EXT2_FT_WHT) ||
+			   (de->file_type == EXT2_FT_FALLTHRU)) &&
 			  !ext2_match (namelen, name, de))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'de->file_type == EXT2_FT_FALLTHRU'
#170: FILE: fs/ext2/dir.c:632:
+	if (de->inode || (((de->file_type == EXT2_FT_WHT) ||
+			   (de->file_type == EXT2_FT_FALLTHRU)) &&
 			  !ext2_match (namelen, name, de))) {

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#179: FILE: fs/ext2/dir.c:658:
+ * Create a fallthru entry.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#181: FILE: fs/ext2/dir.c:660:
+int ext2_fallthru_entry (struct inode *dir, struct dentry *dentry)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#186: FILE: fs/ext2/dir.c:665:
+	ext2_dirent * de;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#196: FILE: fs/ext2/dir.c:675:
+	if (ext2_match (namelen, name, de))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#203: FILE: fs/ext2/dir.c:682:
+		(char*)de - (char*)page_address(page);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#203: FILE: fs/ext2/dir.c:682:
+		(char*)de - (char*)page_address(page);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: fs/ext2/dir.c:684:
+	err = __ext2_write_begin(NULL, page->mapping, pos, rec_len, 0,
+							&page, NULL);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'de->file_type == EXT2_FT_WHT'
#208: FILE: fs/ext2/dir.c:687:
+	if (de->inode || (de->file_type == EXT2_FT_WHT) ||
+	    (de->file_type == EXT2_FT_FALLTHRU)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'de->file_type == EXT2_FT_FALLTHRU'
#208: FILE: fs/ext2/dir.c:687:
+	if (de->inode || (de->file_type == EXT2_FT_WHT) ||
+	    (de->file_type == EXT2_FT_FALLTHRU)) {

CHECK:SPACING: No space is necessary after a cast
#210: FILE: fs/ext2/dir.c:689:
+		ext2_dirent *de1 = (ext2_dirent *) ((char *) de + name_len);

WARNING:LINE_SPACING: Missing a blank line after declarations
#211: FILE: fs/ext2/dir.c:690:
+		ext2_dirent *de1 = (ext2_dirent *) ((char *) de + name_len);
+		de1->rec_len = ext2_rec_len_to_disk(rec_len - name_len);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#220: FILE: fs/ext2/dir.c:699:
+	dir->i_mtime = dir->i_ctime = CURRENT_TIME_SEC;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'de->file_type == EXT2_FT_WHT'
#241: FILE: fs/ext2/dir.c:796:
+	if (de->inode || (((de->file_type == EXT2_FT_WHT) ||
+			   (de->file_type == EXT2_FT_FALLTHRU)) &&
+			  !ext2_match (namelen, name, de))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'de->file_type == EXT2_FT_FALLTHRU'
#241: FILE: fs/ext2/dir.c:796:
+	if (de->inode || (((de->file_type == EXT2_FT_WHT) ||
+			   (de->file_type == EXT2_FT_FALLTHRU)) &&
+			  !ext2_match (namelen, name, de))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#243: FILE: fs/ext2/dir.c:798:
+			  !ext2_match (namelen, name, de))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#255: FILE: fs/ext2/ext2.h:111:
+extern int ext2_fallthru_entry (struct inode *, struct dentry *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#255: FILE: fs/ext2/ext2.h:111:
+extern int ext2_fallthru_entry (struct inode *, struct dentry *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#255: FILE: fs/ext2/ext2.h:111:
+extern int ext2_fallthru_entry (struct inode *, struct dentry *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#255: FILE: fs/ext2/ext2.h:111:
+extern int ext2_fallthru_entry (struct inode *, struct dentry *);

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#276: FILE: fs/ext2/namei.c:356:
+ * Create a fallthru entry.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#278: FILE: fs/ext2/namei.c:358:
+static int ext2_fallthru (struct inode *dir, struct dentry *dentry)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000057032.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 12 warnings, 15 checks, 204 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000057032.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
