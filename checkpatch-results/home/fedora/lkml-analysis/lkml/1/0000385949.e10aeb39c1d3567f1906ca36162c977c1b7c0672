WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#88: FILE: Documentation/lguest/lguest.c:1338:
+	 * which was set in setup_9p(). */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#98: FILE: Documentation/lguest/lguest.c:1348:
+	 * it reads straight into the Guest's buffer. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#112: FILE: Documentation/lguest/lguest.c:1362:
+	 * interrupt. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#128: FILE: Documentation/lguest/lguest.c:1378:
+static u32 handle_9p_output(int fd, const struct iovec *iov,
+				 unsigned num, struct device*dev)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#128: FILE: Documentation/lguest/lguest.c:1378:
+				 unsigned num, struct device*dev)

ERROR:POINTER_LOCATION: "foo*bar" should be "foo *bar"
#128: FILE: Documentation/lguest/lguest.c:1378:
+				 unsigned num, struct device*dev)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#131: FILE: Documentation/lguest/lguest.c:1381:
+	 * number of bytes written. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#164: FILE: Documentation/lguest/lguest.c:1414:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#169: FILE: Documentation/lguest/lguest.c:1419:
+	if (connect(fd, (struct sockaddr *) &saddr, sizeof(saddr)) < 0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#184: FILE: Documentation/lguest/lguest.c:1434:
+	/* We allocate a page to store or channel info and
+	   give a unique offset for our dma key */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#184: FILE: Documentation/lguest/lguest.c:1434:
+	   give a unique offset for our dma key */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#191: FILE: Documentation/lguest/lguest.c:1441:
+}
+/* End 9p Additions */

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#255: FILE: net/9p/Kconfig:34:
+config NET_9P_LG
+	depends on NET_9P
+	tristate "9p Lguest Transport (Experimental)"
+	help
+	  This builds support for a transport between an Lguest
+	  guest partition and the host partition.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#285: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#290: FILE: net/9p/trans_lg.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#303: FILE: net/9p/trans_lg.c:14:
+/*
+ *  Copyright (C) 2007 Eric Van Hensbergen, IBM Corporation

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#320: FILE: net/9p/trans_lg.c:31:
+ *  51 Franklin Street, Fifth Floor$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:TYPO_SPELLING: 'boundries' may be misspelled - perhaps 'boundaries'?
#368: FILE: net/9p/trans_lg.c:79:
+/* this breaks up any dma requests along page size boundries */
                                                    ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#399: FILE: net/9p/trans_lg.c:110:
+		printk(KERN_ERR "9p: lg: buffer didn't fit in dma %d by %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#400: FILE: net/9p/trans_lg.c:111:
+		printk(KERN_ERR "9p: lg: buffer didn't fit in dma %d by %d\n",
+			index, len);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#401: FILE: net/9p/trans_lg.c:112:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:TYPO_SPELLING: 'boundries' may be misspelled - perhaps 'boundaries'?
#406: FILE: net/9p/trans_lg.c:117:
+ * page boundries, we need to split things up properly.
         ^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#439: FILE: net/9p/trans_lg.c:150:
+	 * again. */

CHECK:SPACING: No space is necessary after a cast
#474: FILE: net/9p/trans_lg.c:185:
+	wait_queue_head_t *w = (wait_queue_head_t *) arg;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#483: FILE: net/9p/trans_lg.c:194:
+ * for multiple channels */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#491: FILE: net/9p/trans_lg.c:202:
+		printk(KERN_ERR "9p: lg: Maximum channels exceeded\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#492: FILE: net/9p/trans_lg.c:203:
+		BUG();

CHECK:SPACING: No space is necessary after a cast
#495: FILE: net/9p/trans_lg.c:206:
+	lgdev->private = (void *) chan;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#499: FILE: net/9p/trans_lg.c:210:
+	chan->buf = (char *)__get_free_pages(GFP_KERNEL|__GFP_ZERO,
 	                                               ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#502: FILE: net/9p/trans_lg.c:213:
+		BUG();

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#504: FILE: net/9p/trans_lg.c:215:
+	p9_lg_setup_dma(&chan->input, chan->buf, PAGE_SIZE*P9_BUF_PAGES);
 	                                                  ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#509: FILE: net/9p/trans_lg.c:220:
+	 * to dev->mem, and we also give the interrupt we want. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#511: FILE: net/9p/trans_lg.c:222:
+	err = lguest_bind_dma(chan->key, &chan->input, P9_BUF_PAGES,
+							lgdev_irq(lgdev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#513: FILE: net/9p/trans_lg.c:224:
+		printk(KERN_ERR "9p: lg: failed to bind buffer.\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#514: FILE: net/9p/trans_lg.c:225:
+		BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#519: FILE: net/9p/trans_lg.c:230:
+	err = request_irq(lgdev_irq(lgdev), &p9_lg_intr, 0, "p9_lg",
+								&chan->wq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#521: FILE: net/9p/trans_lg.c:232:
+		printk(KERN_ERR "9p: lg: failed to obtain irq.\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#522: FILE: net/9p/trans_lg.c:233:
+		BUG();

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#540: FILE: net/9p/trans_lg.c:251:
+ * channel open at a time. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#547: FILE: net/9p/trans_lg.c:258:
+		printk(KERN_ERR "9p: not running on lguest, no lg possible\n");

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*trans)...) over kmalloc(sizeof(struct p9_trans)...)
#551: FILE: net/9p/trans_lg.c:262:
+	trans = kmalloc(sizeof(struct p9_trans), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#553: FILE: net/9p/trans_lg.c:264:
+		printk(KERN_ERR "9p: couldn't allocate transport\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#553: FILE: net/9p/trans_lg.c:264:
+	if (!trans) {
+		printk(KERN_ERR "9p: couldn't allocate transport\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#582: FILE: net/9p/trans_lg.c:293:
+	printk(KERN_ERR "Removal of 9p transports not implemented\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#583: FILE: net/9p/trans_lg.c:294:
+	BUG();

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000385949.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 31 warnings, 12 checks, 503 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000385949.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
