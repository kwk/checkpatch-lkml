CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#65: FILE: include/linux/sm501.h:116:
+#define SM501_USE_GPIO		(1<<9)
                       		  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#65: FILE: include/linux/sm501.h:116:
+#define SM501_USE_GPIO		(1<<9)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#73: FILE: include/linux/sm501.h:159:
+	unsigned			 gpio_base;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#104: FILE: drivers/mfd/sm501.c:46:
+	spinlock_t		lock;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#123: FILE: drivers/mfd/sm501.c:65:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#131: FILE: drivers/mfd/sm501.c:76:
 
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#210: FILE: drivers/mfd/sm501.c:891:
+static int sm501_gpio_get(struct gpio_chip *chip, unsigned offset)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#222: FILE: drivers/mfd/sm501.c:903:
+static void sm501_gpio_set(struct gpio_chip *chip, unsigned offset, int value)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#246: FILE: drivers/mfd/sm501.c:927:
+static int sm501_gpio_input(struct gpio_chip *chip, unsigned offset)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#270: FILE: drivers/mfd/sm501.c:951:
+			     unsigned offset, int value)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#312: FILE: drivers/mfd/sm501.c:993:
+static int __devinit sm501_gpio_register_chip(struct sm501_devdata *sm,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#318: FILE: drivers/mfd/sm501.c:999:
+	unsigned base = pdata->gpio_base;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!gpio->regs_res"
#350: FILE: drivers/mfd/sm501.c:1031:
+	if (gpio->regs_res == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!gpio->regs"
#356: FILE: drivers/mfd/sm501.c:1037:
+	if (gpio->regs == NULL) {

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#448: FILE: drivers/mfd/Kconfig:18:
+config MFD_SM501_GPIO
+	bool "Export GPIO via GPIO layer"
+	depends on MFD_SM501 && HAVE_GPIO_LIB
+	 ---help---
+	 This option uses the gpio library layer to export the 64 GPIO
+	 lines on the SM501. The platform data is used to supply the
+	 base number for the first GPIO line to register.
+

Kconfig symbols should have a help text which fully describes
it.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000264662.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 7 checks, 403 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000264662.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
