ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#149: FILE: arch/x86/kvm/mmu.c:2445:
+	if (!is_large_pte(*(u64*)new))

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sp->role.level == PT_DIRECTORY_LEVEL'
#153: FILE: arch/x86/kvm/mmu.c:2449:
+	if ((sp->role.level == PT_DIRECTORY_LEVEL) &&
+	    (psize >= KVM_PAGE_SIZE_2M)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'psize >= KVM_PAGE_SIZE_2M'
#153: FILE: arch/x86/kvm/mmu.c:2449:
+	if ((sp->role.level == PT_DIRECTORY_LEVEL) &&
+	    (psize >= KVM_PAGE_SIZE_2M)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#153: FILE: arch/x86/kvm/mmu.c:2449:
+	if ((sp->role.level == PT_DIRECTORY_LEVEL) &&
[...]
+	} else if ((sp->role.level == PT_MIDDLE_LEVEL) &&
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#156: FILE: arch/x86/kvm/mmu.c:2452:
+		vcpu->arch.update_pte.gfn &= ~(KVM_PAGES_PER_2M_PAGE-1);
 		                                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#157: FILE: arch/x86/kvm/mmu.c:2453:
+		vcpu->arch.update_pte.pfn &= ~(KVM_PAGES_PER_2M_PAGE-1);
 		                                                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#160: FILE: arch/x86/kvm/mmu.c:2456:
+		vcpu->arch.update_pte.gfn &= ~(KVM_PAGES_PER_1G_PAGE-1);
 		                                                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#161: FILE: arch/x86/kvm/mmu.c:2457:
+		vcpu->arch.update_pte.pfn &= ~(KVM_PAGES_PER_1G_PAGE-1);
 		                                                    ^

CHECK:BRACES: Unbalanced braces around else statement
#162: FILE: arch/x86/kvm/mmu.c:2458:
+	} else

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#208: FILE: arch/x86/kvm/paging_tmpl.h:310:
+			level == PT_DIRECTORY_LEVEL)
+		    || (psize == KVM_PAGE_SIZE_1G &&

WARNING:LINE_SPACING: Missing a blank line after declarations
#219: FILE: arch/x86/kvm/paging_tmpl.h:327:
+			enum kvm_page_size __psize = KVM_PAGE_SIZE_2M;
+			if (level == PT_MIDDLE_LEVEL)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#247: FILE: arch/x86/kvm/paging_tmpl.h:430:
+			walker.gfn &= ~(KVM_PAGES_PER_1G_PAGE-1);
 			                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#249: FILE: arch/x86/kvm/paging_tmpl.h:432:
+			walker.gfn &= ~(KVM_PAGES_PER_2M_PAGE-1);
 			                                     ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000148491.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 1 warnings, 11 checks, 209 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000148491.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
