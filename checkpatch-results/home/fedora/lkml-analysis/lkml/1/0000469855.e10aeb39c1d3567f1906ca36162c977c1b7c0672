WARNING:TYPO_SPELLING: 'approproate' may be misspelled - perhaps 'appropriate'?
#54: 
> approproate way of expressing that would be to run debugfs_kprobe_init()
  ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: kernel/kprobes.c:822:
+               const char *sym, int offset,char *modname)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#133: FILE: kernel/kprobes.c:822:
+static void __kprobes report_probe(struct seq_file *pi, struct kprobe *p,
+               const char *sym, int offset,char *modname)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: kernel/kprobes.c:822:
+               const char *sym, int offset,char *modname)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#133: FILE: kernel/kprobes.c:822:
+               const char *sym, int offset,char *modname)
                                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#145: FILE: kernel/kprobes.c:834:
+		seq_printf(pi, "%p  %s  %s+0x%x  %s\n", p->addr, kprobe_type,
+			sym, offset, (modname ? modname : " "));

CHECK:SPACING: No space is necessary after a cast
#174: FILE: kernel/kprobes.c:863:
+	unsigned int i = *(loff_t *) v;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#182: FILE: kernel/kprobes.c:871:
+		sym = kallsyms_lookup((unsigned long)p->addr, &size,
+					&offset, &modname, namebuf);

CHECK:BRACES: braces {} should be used on all arms of this statement
#183: FILE: kernel/kprobes.c:872:
+		if (p->pre_handler == aggr_pre_handler) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#186: FILE: kernel/kprobes.c:875:
+		} else

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#193: FILE: kernel/kprobes.c:882:
+struct seq_operations kprobes_seq_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#200: FILE: kernel/kprobes.c:889:
+static int __kprobes kprobes_open(struct inode *inode, struct file *filp)
                                                                     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#202: FILE: kernel/kprobes.c:891:
+	return seq_open(filp, &kprobes_seq_ops);
 	                ^^^^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#205: FILE: kernel/kprobes.c:894:
+static struct file_operations debugfs_kprobes_operations = {

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#220: FILE: kernel/kprobes.c:909:
+	file = debugfs_create_file("list", 0444, dir , 0 ,
 	                                             ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#220: FILE: kernel/kprobes.c:909:
+	file = debugfs_create_file("list", 0444, dir , 0 ,
 	                                                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#221: FILE: kernel/kprobes.c:910:
+	file = debugfs_create_file("list", 0444, dir , 0 ,
+				&debugfs_kprobes_operations);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000469855.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 6 warnings, 7 checks, 116 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000469855.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
