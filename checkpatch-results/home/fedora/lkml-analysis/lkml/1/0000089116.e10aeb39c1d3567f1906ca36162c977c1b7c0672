WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#76: FILE: drivers/net/Kconfig:3212:
+config VBUS_ENET
+	tristate "VBUS Ethernet Driver"
+	default n
+	select VBUS_PROXY
+	help
+	   A virtualized 802.x network device based on the VBUS
+	   "virtual-ethernet" interface.  It can be used with any
+	   hypervisor/kernel that supports the vbus+venet protocol.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#85: FILE: drivers/net/Kconfig:3221:
+config VBUS_ENET_DEBUG
+        bool "Enable Debugging"
+	depends on VBUS_ENET
+	default n
+

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#104: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#109: FILE: drivers/net/vbus-enet.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#164: FILE: drivers/net/vbus-enet.c:56:
+	spinlock_t                 lock;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#213: FILE: drivers/net/vbus-enet.c:105:
+/*
+ * ---------------

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#226: FILE: drivers/net/vbus-enet.c:118:
+	BUG_ON(!skb);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#244: FILE: drivers/net/vbus-enet.c:136:
+	/*
+	 * We want to iterate on the "valid" index.  By default the iterator

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#252: FILE: drivers/net/vbus-enet.c:144:
+	BUG_ON(ret < 0); /* will never fail unless seriously broken */

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#255: FILE: drivers/net/vbus-enet.c:147:
+	/*
+	 * Seek to the tail of the valid index (which should be our first

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#259: FILE: drivers/net/vbus-enet.c:151:
+	BUG_ON(ret < 0);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#262: FILE: drivers/net/vbus-enet.c:154:
+	/*
+	 * Now populate each descriptor with an empty SKB and mark it valid

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#268: FILE: drivers/net/vbus-enet.c:160:
+		/*
+		 * This push operation will simultaneously advance the

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#273: FILE: drivers/net/vbus-enet.c:165:
+		BUG_ON(ret < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#285: FILE: drivers/net/vbus-enet.c:177:
+	BUG_ON(ret < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#288: FILE: drivers/net/vbus-enet.c:180:
+	BUG_ON(ret < 0);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#291: FILE: drivers/net/vbus-enet.c:183:
+	/*
+	 * free each valid descriptor

WARNING:MEMORY_BARRIER: memory barrier without comment
#297: FILE: drivers/net/vbus-enet.c:189:
+		wmb();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#303: FILE: drivers/net/vbus-enet.c:195:
+		BUG_ON(ret < 0);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#319: FILE: drivers/net/vbus-enet.c:211:
+		/*
+		 * There is nothing to do for a ring that is not using

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#325: FILE: drivers/net/vbus-enet.c:217:
+	BUG_ON(ret < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#328: FILE: drivers/net/vbus-enet.c:220:
+	BUG_ON(ret < 0);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#331: FILE: drivers/net/vbus-enet.c:223:
+	/*
+	 * Now populate each descriptor with an empty SG descriptor

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#335: FILE: drivers/net/vbus-enet.c:227:
+		size_t iovlen = sizeof(struct venet_iov) * (MAX_SKB_FRAGS-1);
 		                                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#347: FILE: drivers/net/vbus-enet.c:239:
+		BUG_ON(ret < 0);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#365: FILE: drivers/net/vbus-enet.c:257:
+		/*
+		 * There is nothing else to do for a ring that is not using

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#371: FILE: drivers/net/vbus-enet.c:263:
+	BUG_ON(ret < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#375: FILE: drivers/net/vbus-enet.c:267:
+	BUG_ON(ret < 0);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#378: FILE: drivers/net/vbus-enet.c:270:
+	/*
+	 * free each valid descriptor

WARNING:MEMORY_BARRIER: memory barrier without comment
#384: FILE: drivers/net/vbus-enet.c:276:
+		wmb();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#390: FILE: drivers/net/vbus-enet.c:282:
+		BUG_ON(ret < 0);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#397: FILE: drivers/net/vbus-enet.c:289:
+/*
+ * Open and close

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#407: FILE: drivers/net/vbus-enet.c:299:
+	BUG_ON(ret < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#423: FILE: drivers/net/vbus-enet.c:315:
+	BUG_ON(ret < 0);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#429: FILE: drivers/net/vbus-enet.c:321:
+/*
+ * Configuration changes (passed on by ifconfig)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#472: FILE: drivers/net/vbus-enet.c:364:
+	/*
+	 * FLUSHRX will cause the device to flush any outstanding

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#478: FILE: drivers/net/vbus-enet.c:370:
+	BUG_ON(ret < 0);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#486: FILE: drivers/net/vbus-enet.c:378:
+/*
+ * The poll implementation.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#501: FILE: drivers/net/vbus-enet.c:393:
+	BUG_ON(ret < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#504: FILE: drivers/net/vbus-enet.c:396:
+	BUG_ON(ret < 0);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#507: FILE: drivers/net/vbus-enet.c:399:
+	/*
+	 * We stop if we have met the quota or there are no more packets.

WARNING:MEMORY_BARRIER: memory barrier without comment
#527: FILE: drivers/net/vbus-enet.c:419:
+			mb();

CHECK:BRACES: Unbalanced braces around else statement
#528: FILE: drivers/net/vbus-enet.c:420:
+		} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#530: FILE: drivers/net/vbus-enet.c:422:
+			/*
+			 * the device may send a zero-length packet when its

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#541: FILE: drivers/net/vbus-enet.c:433:
+		BUG_ON(ret < 0);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#547: FILE: drivers/net/vbus-enet.c:439:
+	/*
+	 * If we processed all packets, we're done; tell the kernel and

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#548: FILE: drivers/net/vbus-enet.c:440:
+	 * reenable ints
 	   ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: Unbalanced braces around else statement
#554: FILE: drivers/net/vbus-enet.c:446:
+	} else

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#562: FILE: drivers/net/vbus-enet.c:454:
+/*
+ * Transmit a packet (called by the kernel)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#578: FILE: drivers/net/vbus-enet.c:470:
+		/*
+		 * We must flow-control the kernel by disabling the

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#588: FILE: drivers/net/vbus-enet.c:480:
+	/*
+	 * We want to iterate on the tail of both the "inuse" and "valid" index

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#593: FILE: drivers/net/vbus-enet.c:485:
+	BUG_ON(ret < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#596: FILE: drivers/net/vbus-enet.c:488:
+	BUG_ON(ret < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#597: FILE: drivers/net/vbus-enet.c:489:
+	BUG_ON(iter.desc->sown);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#601: FILE: drivers/net/vbus-enet.c:493:
+		struct scatterlist sgl[MAX_SKB_FRAGS+1];
 		                                    ^

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#632: FILE: drivers/net/vbus-enet.c:524:
+				panic("Virtual-Ethernet: unknown GSO type " \

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#641: FILE: drivers/net/vbus-enet.c:533:
+		BUG_ON(count > maxcount);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#652: FILE: drivers/net/vbus-enet.c:544:
+		/*
+		 * non scatter-gather mode: simply put the skb right onto the

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#666: FILE: drivers/net/vbus-enet.c:558:
+	/*
+	 * This advances both indexes together implicitly, and then

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#670: FILE: drivers/net/vbus-enet.c:562:
+	BUG_ON(ret < 0);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#676: FILE: drivers/net/vbus-enet.c:568:
+		/*
+		 * If the queue is congested, we must flow-control the kernel

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#688: FILE: drivers/net/vbus-enet.c:580:
+/*
+ * reclaim any outstanding completed tx packets

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#699: FILE: drivers/net/vbus-enet.c:591:
+	/*
+	 * We want to iterate on the head of the valid index, but we

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#705: FILE: drivers/net/vbus-enet.c:597:
+	BUG_ON(ret < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#708: FILE: drivers/net/vbus-enet.c:600:
+	BUG_ON(ret < 0);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#711: FILE: drivers/net/vbus-enet.c:603:
+	/*
+	 * We are done once we find the first packet either invalid or still

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#736: FILE: drivers/net/vbus-enet.c:628:
+		BUG_ON(ret < 0);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#740: FILE: drivers/net/vbus-enet.c:632:
+	/*
+	 * If we were previously stopped due to flow control, restart the

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#744: FILE: drivers/net/vbus-enet.c:636:
+	if (netif_queue_stopped(priv->dev)
+	    && !ioq_full(priv->txq.queue, ioq_idxtype_valid)) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'deferred_tx_isr', this function's name, in a string
#782: FILE: drivers/net/vbus-enet.c:674:
+	PDEBUG(priv->dev, "deferred_tx_isr\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#794: FILE: drivers/net/vbus-enet.c:686:
+       struct vbus_enet_priv *priv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#796: FILE: drivers/net/vbus-enet.c:688:
+       priv = container_of(notifier, struct vbus_enet_priv, txq.notifier);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#798: FILE: drivers/net/vbus-enet.c:690:
+       PDEBUG(priv->dev, "tx_isr\n");$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tx_isr', this function's name, in a string
#798: FILE: drivers/net/vbus-enet.c:690:
+       PDEBUG(priv->dev, "tx_isr\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#800: FILE: drivers/net/vbus-enet.c:692:
+       ioq_notify_disable(priv->txq.queue, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#801: FILE: drivers/net/vbus-enet.c:693:
+       tasklet_schedule(&priv->txtask);$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#815: FILE: drivers/net/vbus-enet.c:707:
+		caps.bits |= (VENET_CAP_SG|VENET_CAP_TSO4|VENET_CAP_TSO6
 		                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#815: FILE: drivers/net/vbus-enet.c:707:
+		caps.bits |= (VENET_CAP_SG|VENET_CAP_TSO4|VENET_CAP_TSO6
 		                                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#816: FILE: drivers/net/vbus-enet.c:708:
+			      |VENET_CAP_ECN);
 			      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#827: FILE: drivers/net/vbus-enet.c:719:
+		dev->features |= NETIF_F_SG|NETIF_F_HW_CSUM|NETIF_F_FRAGLIST;
 		                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#827: FILE: drivers/net/vbus-enet.c:719:
+		dev->features |= NETIF_F_SG|NETIF_F_HW_CSUM|NETIF_F_FRAGLIST;
 		                                           ^

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#847: FILE: drivers/net/vbus-enet.c:739:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:CONST_STRUCT: struct ethtool_ops should normally be const
#852: FILE: drivers/net/vbus-enet.c:744:
+static struct ethtool_ops vbus_enet_ethtool_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#871: FILE: drivers/net/vbus-enet.c:763:
+/*
+ * This is called whenever a new vbus_device_proxy is added to the vbus

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#881: FILE: drivers/net/vbus-enet.c:773:
+	printk(KERN_INFO "VENET: Found new device at %lld\n", vdev->id);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#899: FILE: drivers/net/vbus-enet.c:791:
+		printk(KERN_INFO "VENET: Error negotiating capabilities for " \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#899: FILE: drivers/net/vbus-enet.c:791:
+		printk(KERN_INFO "VENET: Error negotiating capabilities for " \

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#925: FILE: drivers/net/vbus-enet.c:817:
+		printk(KERN_INFO "VENET: Error obtaining MAC address for " \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#925: FILE: drivers/net/vbus-enet.c:817:
+		printk(KERN_INFO "VENET: Error obtaining MAC address for " \

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#935: FILE: drivers/net/vbus-enet.c:827:
+		printk(KERN_INFO "VENET: error %i registering device \"%s\"\n",

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#973: FILE: drivers/net/vbus-enet.c:865:
+/*
+ * Finally, the module stuff

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#990: FILE: drivers/net/vbus-enet.c:882:
+	printk(KERN_INFO "Virtual Ethernet: Copyright (C) 2009 Novell, Gregory Haskins\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#991: FILE: drivers/net/vbus-enet.c:883:
+	printk(KERN_DEBUG "VENET: Using %d/%d queue depth\n",

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1022: FILE: include/linux/venet.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1040: FILE: include/linux/venet.h:19:
+ * along with this program; if not, write to the Free Software Foundation,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1041: FILE: include/linux/venet.h:20:
+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.$

CHECK:BIT_MACRO: Prefer using the BIT macro
#1064: FILE: include/linux/venet.h:43:
+#define VENET_CAP_SG     (1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#1065: FILE: include/linux/venet.h:44:
+#define VENET_CAP_TSO4   (1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1066: FILE: include/linux/venet.h:45:
+#define VENET_CAP_TSO6   (1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1067: FILE: include/linux/venet.h:46:
+#define VENET_CAP_ECN    (1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1068: FILE: include/linux/venet.h:47:
+#define VENET_CAP_UFO    (1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1075: FILE: include/linux/venet.h:54:
+#define VENET_SG_FLAG_NEEDS_CSUM (1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1076: FILE: include/linux/venet.h:55:
+#define VENET_SG_FLAG_GSO        (1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1077: FILE: include/linux/venet.h:56:
+#define VENET_SG_FLAG_ECN        (1 << 2)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000089116.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 83 warnings, 19 checks, 1011 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000089116.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
