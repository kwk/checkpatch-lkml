WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
> > > > > On Thu, Feb 11, 2010 at 01:56:54AM +0100, Rafael J. Wysocki wrote:

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#187: FILE: drivers/pci/pci.h:58:
+extern int __pci_pme_wakeup(struct pci_dev *dev, void *ign);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#188: FILE: drivers/pci/pci.h:59:
+extern void pci_pme_wakeup_bus(struct pci_bus *bus);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#207: FILE: drivers/pci/pci-acpi.c:26:
+struct pci_acpi_notify_object
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#238: FILE: drivers/pci/pci-acpi.c:57:
+		if (notify_obj->pci_bus) {
+			pci_pme_wakeup_bus(notify_obj->pci_bus);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: drivers/pci/pci-acpi.c:125:
+	status = acpi_install_notify_handler(handle, ACPI_SYSTEM_NOTIFY,
+						pci_acpi_event_fn, notify_obj);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#361: FILE: drivers/pci/pci-acpi.c:180:
+	status = acpi_remove_notify_handler(handle, ACPI_SYSTEM_NOTIFY,
+						pci_acpi_event_fn);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#420: FILE: drivers/pci/pci-acpi.c:239:
+	status = acpi_install_notify_handler(handle, ACPI_SYSTEM_NOTIFY,
+						pci_acpi_event_fn, notify_obj);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#469: FILE: drivers/pci/pci-acpi.c:288:
+	status = acpi_remove_notify_handler(dev->handle, ACPI_SYSTEM_NOTIFY,
+						pci_acpi_event_fn);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#519: FILE: drivers/pci/pci-acpi.c:444:
+			acpi_disable_gpe(dev->wakeup.gpe_device,
+					dev->wakeup.gpe_number,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#676: FILE: include/linux/pci-acpi.h:14:
+extern acpi_status pci_acpi_add_hp_notifier(acpi_handle handle,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#677: FILE: include/linux/pci-acpi.h:15:
+extern acpi_status pci_acpi_add_hp_notifier(acpi_handle handle,
+					     acpi_notify_handler handler,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#679: FILE: include/linux/pci-acpi.h:17:
+extern acpi_status pci_acpi_remove_hp_notifier(acpi_handle handle,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#681: FILE: include/linux/pci-acpi.h:19:
+extern acpi_status pci_acpi_add_pm_notifier(struct acpi_device *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#682: FILE: include/linux/pci-acpi.h:20:
+extern acpi_status pci_acpi_add_pm_notifier(struct acpi_device *dev,
+					     struct pci_dev *pci_dev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#684: FILE: include/linux/pci-acpi.h:22:
+extern acpi_status pci_acpi_remove_pm_notifier(struct acpi_device *dev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#740: FILE: drivers/pci/hotplug/acpiphp_glue.c:240:
+		status = pci_acpi_add_hp_notifier(handle,
 					     handle_hotplug_event_func,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#750: FILE: drivers/pci/hotplug/acpiphp_glue.c:291:
+			status = pci_acpi_remove_hp_notifier(bridge->func->handle,
 						handle_hotplug_event_func);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#757: FILE: drivers/pci/hotplug/acpiphp_glue.c:296:
+		status = pci_acpi_add_hp_notifier(bridge->handle,
 					     handle_hotplug_event_bridge,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#766: FILE: drivers/pci/hotplug/acpiphp_glue.c:506:
+	status = pci_acpi_remove_hp_notifier(handle,
 					    handle_hotplug_event_bridge);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#775: FILE: drivers/pci/hotplug/acpiphp_glue.c:513:
+		status = pci_acpi_add_hp_notifier(bridge->func->handle,
 						handle_hotplug_event_func,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#785: FILE: drivers/pci/hotplug/acpiphp_glue.c:529:
+				status = pci_acpi_remove_hp_notifier(func->handle,
 						handle_hotplug_event_func);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#794: FILE: drivers/pci/hotplug/acpiphp_glue.c:591:
+		pci_acpi_remove_hp_notifier(handle,
 					   handle_hotplug_event_bridge);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#804: FILE: drivers/pci/hotplug/acpiphp_glue.c:1277:
+		pci_acpi_add_hp_notifier(handle,
+					handle_hotplug_event_bridge, NULL);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000012840.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 2 warnings, 21 checks, 655 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000012840.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
