WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#150: FILE: drivers/video/Kconfig:1158:
+config FB_S3
+	tristate "S3 Trio/Virge support"
+	depends on FB && PCI
+	select FB_CFB_FILLRECT
+	select FB_CFB_COPYAREA
+	select FB_CFB_IMAGEBLIT
+	select FB_TILEBLITTING
+	select FB_SVGALIB
+	---help---
+	  Driver for graphics boards with S3 Trio / S3 Virge chip.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#187: FILE: drivers/video/s3fb.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#188: FILE: drivers/video/s3fb.c:2:
+ * linux/drivers/video/s3fb.c -- Frame buffer device driver for S3 Trio/Virge

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:LONG_LINE_COMMENT: line length of 107 exceeds 100 columns
#213: FILE: drivers/video/s3fb.c:27:
+#include <linux/console.h> /* Why should fb driver call console functions? because acquire_console_sem() */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:LINE_SPACING: Please don't use multiple blank lines
#230: FILE: drivers/video/s3fb.c:44:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#253: FILE: drivers/video/s3fb.c:67:
+
+

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#291: FILE: drivers/video/s3fb.c:105:
+static const struct vga_regset s3_h_total_regs[]        = {{0x00, 0, 7}, {0x5D, 0, 0}, VGA_REGSET_END};

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#292: FILE: drivers/video/s3fb.c:106:
+static const struct vga_regset s3_h_display_regs[]      = {{0x01, 0, 7}, {0x5D, 1, 1}, VGA_REGSET_END};

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#293: FILE: drivers/video/s3fb.c:107:
+static const struct vga_regset s3_h_blank_start_regs[]  = {{0x02, 0, 7}, {0x5D, 2, 2}, VGA_REGSET_END};

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#294: FILE: drivers/video/s3fb.c:108:
+static const struct vga_regset s3_h_blank_end_regs[]    = {{0x03, 0, 4}, {0x05, 7, 7}, VGA_REGSET_END};

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#295: FILE: drivers/video/s3fb.c:109:
+static const struct vga_regset s3_h_sync_start_regs[]   = {{0x04, 0, 7}, {0x5D, 4, 4}, VGA_REGSET_END};

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#298: FILE: drivers/video/s3fb.c:112:
+static const struct vga_regset s3_v_total_regs[]        = {{0x06, 0, 7}, {0x07, 0, 0}, {0x07, 5, 5}, {0x5E, 0, 0}, VGA_REGSET_END};

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#299: FILE: drivers/video/s3fb.c:113:
+static const struct vga_regset s3_v_display_regs[]      = {{0x12, 0, 7}, {0x07, 1, 1}, {0x07, 6, 6}, {0x5E, 1, 1}, VGA_REGSET_END};

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#300: FILE: drivers/video/s3fb.c:114:
+static const struct vga_regset s3_v_blank_start_regs[]  = {{0x15, 0, 7}, {0x07, 3, 3}, {0x09, 5, 5}, {0x5E, 2, 2}, VGA_REGSET_END};

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#302: FILE: drivers/video/s3fb.c:116:
+static const struct vga_regset s3_v_sync_start_regs[]   = {{0x10, 0, 7}, {0x07, 2, 2}, {0x07, 7, 7}, {0x5E, 4, 4}, VGA_REGSET_END};

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#305: FILE: drivers/video/s3fb.c:119:
+static const struct vga_regset s3_line_compare_regs[]   = {{0x18, 0, 7}, {0x07, 4, 4}, {0x09, 6, 6}, {0x5E, 6, 6}, VGA_REGSET_END};

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#306: FILE: drivers/video/s3fb.c:120:
+static const struct vga_regset s3_start_address_regs[]  = {{0x0d, 0, 7}, {0x0c, 0, 7}, {0x31, 4, 5}, {0x51, 0, 1}, VGA_REGSET_END};

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#307: FILE: drivers/video/s3fb.c:121:
+static const struct vga_regset s3_offset_regs[]         = {{0x13, 0, 7}, {0x51, 4, 5}, VGA_REGSET_END}; /* set 0x43 bit 2 to 0 */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#316: FILE: drivers/video/s3fb.c:130:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#321: FILE: drivers/video/s3fb.c:135:
+
+

CHECK:SPACING: No space is necessary after a cast
#356: FILE: drivers/video/s3fb.c:170:
+	u8* fb = (u8 *) info->screen_base;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#356: FILE: drivers/video/s3fb.c:170:
+	u8* fb = (u8 *) info->screen_base;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'map->width != 8'
#359: FILE: drivers/video/s3fb.c:173:
+	if ((map->width != 8) || (map->height != 16) ||
+	    (map->depth != 1) || (map->length != 256)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'map->height != 16'
#359: FILE: drivers/video/s3fb.c:173:
+	if ((map->width != 8) || (map->height != 16) ||
+	    (map->depth != 1) || (map->length != 256)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'map->depth != 1'
#359: FILE: drivers/video/s3fb.c:173:
+	if ((map->width != 8) || (map->height != 16) ||
+	    (map->depth != 1) || (map->length != 256)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'map->length != 256'
#359: FILE: drivers/video/s3fb.c:173:
+	if ((map->width != 8) || (map->height != 16) ||
+	    (map->depth != 1) || (map->length != 256)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#361: FILE: drivers/video/s3fb.c:175:
+^I    ^Iprintk(KERN_ERR "fb%d: unsupported font parameters: width %d, height %d, depth %d, length %d\n",$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#361: FILE: drivers/video/s3fb.c:175:
+^I    ^Iprintk(KERN_ERR "fb%d: unsupported font parameters: width %d, height %d, depth %d, length %d\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#361: FILE: drivers/video/s3fb.c:175:
+	    	printk(KERN_ERR "fb%d: unsupported font parameters: width %d, height %d, depth %d, length %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#362: FILE: drivers/video/s3fb.c:176:
+	    	printk(KERN_ERR "fb%d: unsupported font parameters: width %d, height %d, depth %d, length %d\n",
+			info->node, map->width, map->height, map->depth, map->length);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#368: FILE: drivers/video/s3fb.c:182:
+		for (c = 0; c < map->length; c++) {
+			fb[c * 4] = font[c * map->height + i];
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#375: FILE: drivers/video/s3fb.c:189:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#393: FILE: drivers/video/s3fb.c:207:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#412: FILE: drivers/video/s3fb.c:226:
+        dst1 = info->screen_base + (image->dy * info->fix.line_length)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: drivers/video/s3fb.c:226:
+        dst1 = info->screen_base + (image->dy * info->fix.line_length)$

CHECK:SPACING: No space is necessary after a cast
#417: FILE: drivers/video/s3fb.c:231:
+		dst = (u32 __iomem *) dst1;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#427: FILE: drivers/video/s3fb.c:241:
+
+}

ERROR:CODE_INDENT: code indent should use tabs where possible
#437: FILE: drivers/video/s3fb.c:251:
+        dst1 = info->screen_base + (rect->dy * info->fix.line_length)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#437: FILE: drivers/video/s3fb.c:251:
+        dst1 = info->screen_base + (rect->dy * info->fix.line_length)$

CHECK:SPACING: No space is necessary after a cast
#441: FILE: drivers/video/s3fb.c:255:
+		dst = (u32 __iomem *) dst1;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#442: FILE: drivers/video/s3fb.c:256:
+		for (x = 0; x < rect->width; x += 8) {
+			fb_writel(fg, dst++);
+		}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#448: FILE: drivers/video/s3fb.c:262:
+
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#450: FILE: drivers/video/s3fb.c:264:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#470: FILE: drivers/video/s3fb.c:284:
+        dst1 = info->screen_base + (image->dy * info->fix.line_length)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: drivers/video/s3fb.c:284:
+        dst1 = info->screen_base + (image->dy * info->fix.line_length)$

CHECK:SPACING: No space is necessary after a cast
#475: FILE: drivers/video/s3fb.c:289:
+		dst = (u32 __iomem *) dst1;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#485: FILE: drivers/video/s3fb.c:299:
+
+}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->var.bits_per_pixel == 4'
#489: FILE: drivers/video/s3fb.c:303:
+	if ((info->var.bits_per_pixel == 4) && (image->depth == 1)
+	    && ((image->width % 8) == 0) && ((image->dx % 8) == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'image->depth == 1'
#489: FILE: drivers/video/s3fb.c:303:
+	if ((info->var.bits_per_pixel == 4) && (image->depth == 1)
+	    && ((image->width % 8) == 0) && ((image->dx % 8) == 0)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#489: FILE: drivers/video/s3fb.c:303:
+	if ((info->var.bits_per_pixel == 4) && (image->depth == 1)
[...]
+	} else
[...]

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#490: FILE: drivers/video/s3fb.c:304:
+	if ((info->var.bits_per_pixel == 4) && (image->depth == 1)
+	    && ((image->width % 8) == 0) && ((image->dx % 8) == 0)) {

CHECK:BRACES: Unbalanced braces around else statement
#495: FILE: drivers/video/s3fb.c:309:
+	} else

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->var.bits_per_pixel == 4'
#501: FILE: drivers/video/s3fb.c:315:
+	if ((info->var.bits_per_pixel == 4)
+	    && ((rect->width % 8) == 0) && ((rect->dx % 8) == 0)
+	    && (info->fix.type == FB_TYPE_INTERLEAVED_PLANES))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->fix.type == FB_TYPE_INTERLEAVED_PLANES'
#501: FILE: drivers/video/s3fb.c:315:
+	if ((info->var.bits_per_pixel == 4)
+	    && ((rect->width % 8) == 0) && ((rect->dx % 8) == 0)
+	    && (info->fix.type == FB_TYPE_INTERLEAVED_PLANES))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#502: FILE: drivers/video/s3fb.c:316:
+	if ((info->var.bits_per_pixel == 4)
+	    && ((rect->width % 8) == 0) && ((rect->dx % 8) == 0)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#503: FILE: drivers/video/s3fb.c:317:
+	    && ((rect->width % 8) == 0) && ((rect->dx % 8) == 0)
+	    && (info->fix.type == FB_TYPE_INTERLEAVED_PLANES))

WARNING:TABSTOP: Statements should start on a tabstop
#505: FILE: drivers/video/s3fb.c:319:
+	 else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#509: FILE: drivers/video/s3fb.c:323:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#513: FILE: drivers/video/s3fb.c:327:
+
+

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#529: FILE: drivers/video/s3fb.c:343:
+	udelay(1000);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#532: FILE: drivers/video/s3fb.c:346:
+	regval = vga_rseq (NULL, 0x15); /* | 0x80; */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#533: FILE: drivers/video/s3fb.c:347:
+	vga_wseq(NULL, 0x15, regval & ~(1<<5));
 	                                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#534: FILE: drivers/video/s3fb.c:348:
+	vga_wseq(NULL, 0x15, regval |  (1<<5));
 	                                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#535: FILE: drivers/video/s3fb.c:349:
+	vga_wseq(NULL, 0x15, regval & ~(1<<5));
 	                                 ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#538: FILE: drivers/video/s3fb.c:352:
+
+

CHECK:SPACING: No space is necessary after a cast
#543: FILE: drivers/video/s3fb.c:357:
+	struct s3fb_info *par = (struct s3fb_info *) info;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around par->ref_count
#544: FILE: drivers/video/s3fb.c:358:
+	unsigned int count = atomic_read(&(par->ref_count));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around par->state
#547: FILE: drivers/video/s3fb.c:361:
+		memset(&(par->state), 0, sizeof(struct vgastate));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around par->state
#551: FILE: drivers/video/s3fb.c:365:
+		save_vga(&(par->state));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around par->ref_count
#554: FILE: drivers/video/s3fb.c:368:
+	atomic_inc(&(par->ref_count));

CHECK:SPACING: No space is necessary after a cast
#563: FILE: drivers/video/s3fb.c:377:
+	struct s3fb_info *par = (struct s3fb_info *) info;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around par->ref_count
#564: FILE: drivers/video/s3fb.c:378:
+	unsigned int count = atomic_read(&(par->ref_count));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around par->state
#570: FILE: drivers/video/s3fb.c:384:
+		restore_vga(&(par->state));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around par->ref_count
#572: FILE: drivers/video/s3fb.c:386:
+	atomic_dec(&(par->ref_count));

CHECK:SPACING: No space is necessary after a cast
#581: FILE: drivers/video/s3fb.c:395:
+	struct s3fb_info *par = (struct s3fb_info *) info;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#585: FILE: drivers/video/s3fb.c:399:
+	rv = svga_match_format (s3fb_formats, var, NULL);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#586: FILE: drivers/video/s3fb.c:400:
+	if ((rv < 0) || ((par->chip == CHIP_988_VIRGE_VX) ? (rv == 7) : (rv == 6)))
+	{		/* 24bpp on VIRGE VX, 32bpp on others */

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rv < 0'
#586: FILE: drivers/video/s3fb.c:400:
+	if ((rv < 0) || ((par->chip == CHIP_988_VIRGE_VX) ? (rv == 7) : (rv == 6)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'par->chip == CHIP_988_VIRGE_VX'
#586: FILE: drivers/video/s3fb.c:400:
+	if ((rv < 0) || ((par->chip == CHIP_988_VIRGE_VX) ? (rv == 7) : (rv == 6)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rv == 7'
#586: FILE: drivers/video/s3fb.c:400:
+	if ((rv < 0) || ((par->chip == CHIP_988_VIRGE_VX) ? (rv == 7) : (rv == 6)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rv == 6'
#586: FILE: drivers/video/s3fb.c:400:
+	if ((rv < 0) || ((par->chip == CHIP_988_VIRGE_VX) ? (rv == 7) : (rv == 6)))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#588: FILE: drivers/video/s3fb.c:402:
+		printk(KERN_ERR "fb%d: unsupported mode requested\n", info->node);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#601: FILE: drivers/video/s3fb.c:415:
+	var->xres_virtual = (var->xres_virtual+step) & ~step;
 	                                      ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#605: FILE: drivers/video/s3fb.c:419:
+	if (mem > info->screen_size)
+	{

WARNING:LONG_LINE: line length of 174 exceeds 100 columns
#607: FILE: drivers/video/s3fb.c:421:
+		printk(KERN_ERR "fb%d: not enough framebuffer memory (%d kB requested , %d kB available)\n", info->node, mem >> 10, (unsigned int) (info->screen_size >> 10));

CHECK:SPACING: No space is necessary after a cast
#607: FILE: drivers/video/s3fb.c:421:
+		printk(KERN_ERR "fb%d: not enough framebuffer memory (%d kB requested , %d kB available)\n", info->node, mem >> 10, (unsigned int) (info->screen_size >> 10));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#607: FILE: drivers/video/s3fb.c:421:
+		printk(KERN_ERR "fb%d: not enough framebuffer memory (%d kB requested , %d kB available)\n", info->node, mem >> 10, (unsigned int) (info->screen_size >> 10));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#611: FILE: drivers/video/s3fb.c:425:
+	rv = svga_check_timings (&s3_timing_regs, var, info->node);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#612: FILE: drivers/video/s3fb.c:426:
+	if (rv < 0)
+	{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#614: FILE: drivers/video/s3fb.c:428:
+		printk(KERN_ERR "fb%d: invalid timings requested\n", info->node);

CHECK:SPACING: No space is necessary after a cast
#625: FILE: drivers/video/s3fb.c:439:
+	struct s3fb_info *par = (struct s3fb_info *) info;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#687: FILE: drivers/video/s3fb.c:501:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#715: FILE: drivers/video/s3fb.c:529:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around info->var
#717: FILE: drivers/video/s3fb.c:531:
+	mode = svga_match_format(s3fb_formats, &(info->var), &(info->fix));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around info->fix
#717: FILE: drivers/video/s3fb.c:531:
+	mode = svga_match_format(s3fb_formats, &(info->var), &(info->fix));

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#739: FILE: drivers/video/s3fb.c:553:
+	switch (mode) {
+		case 0:
[...]
+		case 1:
[...]
+		case 2:
[...]
+		case 3:
[...]
+		case 4:
[...]
+		case 5:
[...]
+		case 6:
[...]
+		case 7:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#825: FILE: drivers/video/s3fb.c:639:
+			printk(KERN_ERR "fb%d: unsupported mode - bug\n", info->node);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around info->var
#835: FILE: drivers/video/s3fb.c:649:
+	svga_set_timings(&s3_timing_regs, &(info->var), hmul, 1,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#840: FILE: drivers/video/s3fb.c:654:
+
+

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#843: FILE: drivers/video/s3fb.c:657:
+	value = info->var.xres + info->var.left_margin + info->var.right_margin + info->var.hsync_len;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#847: FILE: drivers/video/s3fb.c:661:
+	memset((u8*)info->screen_base, 0x00, screen_size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#858: FILE: drivers/video/s3fb.c:672:
+static int s3fb_setcolreg(u_int regno, u_int red, u_int green, u_int blue,
+				u_int transp, struct fb_info *fb)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#860: FILE: drivers/video/s3fb.c:674:
+	switch (fb->var.bits_per_pixel) {
+		case 0:
+		case 4:
[...]
+		case 8:
[...]
+		case 16:
[...]
+		case 24:
+		case 32:
[...]
+		default:

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#863: FILE: drivers/video/s3fb.c:677:
+			if (regno >= 16) return -EINVAL;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'fb->var.bits_per_pixel == 4'
#865: FILE: drivers/video/s3fb.c:679:
+			if ((fb->var.bits_per_pixel == 4) &&
+			    (fb->var.nonstd == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'fb->var.nonstd == 0'
#865: FILE: drivers/video/s3fb.c:679:
+			if ((fb->var.bits_per_pixel == 4) &&
+			    (fb->var.nonstd == 0)) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#868: FILE: drivers/video/s3fb.c:682:
+				outb(regno*16, VGA_PEL_IW);
 				          ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#878: FILE: drivers/video/s3fb.c:692:
+			if (regno >= 256) return -EINVAL;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#886: FILE: drivers/video/s3fb.c:700:
+			if (regno >= 16) return -EINVAL;

WARNING:LONG_LINE: line length of 142 exceeds 100 columns
#888: FILE: drivers/video/s3fb.c:702:
+				((u32*)fb->pseudo_palette)[regno] = ((red & 0xF800) >> 1) | ((green & 0xF800) >> 6) | ((blue & 0xF800) >> 11);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#888: FILE: drivers/video/s3fb.c:702:
+				((u32*)fb->pseudo_palette)[regno] = ((red & 0xF800) >> 1) | ((green & 0xF800) >> 6) | ((blue & 0xF800) >> 11);

WARNING:LONG_LINE: line length of 135 exceeds 100 columns
#890: FILE: drivers/video/s3fb.c:704:
+				((u32*)fb->pseudo_palette)[regno] = (red & 0xF800) | ((green & 0xFC00) >> 5) | ((blue & 0xF800) >> 11);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#890: FILE: drivers/video/s3fb.c:704:
+				((u32*)fb->pseudo_palette)[regno] = (red & 0xF800) | ((green & 0xFC00) >> 5) | ((blue & 0xF800) >> 11);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#891: FILE: drivers/video/s3fb.c:705:
+			else return -EINVAL;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#896: FILE: drivers/video/s3fb.c:710:
+			if (regno >= 16) return -EINVAL;

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#897: FILE: drivers/video/s3fb.c:711:
+			((u32*)fb->pseudo_palette)[regno] = ((transp & 0xFF00) >> 16 ) | ((blue & 0xFF00) >> 8) |

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#897: FILE: drivers/video/s3fb.c:711:
+			((u32*)fb->pseudo_palette)[regno] = ((transp & 0xFF00) >> 16 ) | ((blue & 0xFF00) >> 8) |

ERROR:SPACING: space prohibited before that close parenthesis ')'
#897: FILE: drivers/video/s3fb.c:711:
+			((u32*)fb->pseudo_palette)[regno] = ((transp & 0xFF00) >> 16 ) | ((blue & 0xFF00) >> 8) |

CHECK:LINE_SPACING: Please don't use multiple blank lines
#907: FILE: drivers/video/s3fb.c:721:
+
+

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#912: FILE: drivers/video/s3fb.c:726:
+	switch (blank_mode) {
+		case FB_BLANK_UNBLANK:
[...]
+		case FB_BLANK_NORMAL:
[...]
+		case FB_BLANK_HSYNC_SUSPEND:
[...]
+		case FB_BLANK_VSYNC_SUSPEND:
[...]
+		case FB_BLANK_POWERDOWN:

CHECK:LINE_SPACING: Please don't use multiple blank lines
#943: FILE: drivers/video/s3fb.c:757:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#946: FILE: drivers/video/s3fb.c:760:
+static int s3fb_pan_display(struct fb_var_screeninfo *var, struct fb_info *info) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#947: FILE: drivers/video/s3fb.c:761:
+static int s3fb_pan_display(struct fb_var_screeninfo *var, struct fb_info *info) {
+

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#951: FILE: drivers/video/s3fb.c:765:
+	if ((var->xoffset + var->xres) > var->xres_virtual) return -EINVAL;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#952: FILE: drivers/video/s3fb.c:766:
+	if ((var->yoffset + var->yres) > var->yres_virtual) return -EINVAL;

WARNING:CONST_STRUCT: struct fb_ops should normally be const
#974: FILE: drivers/video/s3fb.c:788:
+static struct fb_ops s3fb_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#990: FILE: drivers/video/s3fb.c:804:
+static int __devinit s3_identification(int chip)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cr30 == 0xE0'
#997: FILE: drivers/video/s3fb.c:811:
+		if ((cr30 == 0xE0) || (cr30 == 0xE1)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cr30 == 0xE1'
#997: FILE: drivers/video/s3fb.c:811:
+		if ((cr30 == 0xE0) || (cr30 == 0xE1)) {

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#1001: FILE: drivers/video/s3fb.c:815:
+				if (! (cr2f & 0x40))
 				    ^

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#1012: FILE: drivers/video/s3fb.c:826:
+		if (! (cr6f & 0x01))
 		    ^

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#1021: FILE: drivers/video/s3fb.c:835:
+		if (! (cr6f & 0x01))
 		    ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1030: FILE: drivers/video/s3fb.c:844:
+
+

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1033: FILE: drivers/video/s3fb.c:847:
+static int __devinit s3_pci_probe(struct pci_dev *dev, const struct pci_device_id *id)

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#1041: FILE: drivers/video/s3fb.c:855:
+	if (! svga_primary_device(dev)) {
 	    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1042: FILE: drivers/video/s3fb.c:856:
+		printk(KERN_INFO "s3fb: ignoring secondary device %s\n",  pci_name(dev));

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1049: FILE: drivers/video/s3fb.c:863:
+	if (!info) return -ENOMEM;

CHECK:SPACING: No space is necessary after a cast
#1050: FILE: drivers/video/s3fb.c:864:
+	par = (struct s3fb_info*) info;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1050: FILE: drivers/video/s3fb.c:864:
+	par = (struct s3fb_info*) info;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1059: FILE: drivers/video/s3fb.c:873:
+		printk(KERN_ERR "s3fb: cannot enable PCI device\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1065: FILE: drivers/video/s3fb.c:879:
+		printk(KERN_ERR "s3fb: cannot reserve framebuffer region\n");

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#1075: FILE: drivers/video/s3fb.c:889:
+	if (! info->screen_base) {
 	    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1077: FILE: drivers/video/s3fb.c:891:
+		printk(KERN_ERR "s3fb: ioremap for framebuffer failed\n");

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1108: FILE: drivers/video/s3fb.c:922:
+	strcpy(info->fix.id, s3_names [par->chip]);

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

CHECK:SPACING: No space is necessary after a cast
#1115: FILE: drivers/video/s3fb.c:929:
+	info->pseudo_palette = (void*) (par->pseudo_palette);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1115: FILE: drivers/video/s3fb.c:929:
+	info->pseudo_palette = (void*) (par->pseudo_palette);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around info->var
#1119: FILE: drivers/video/s3fb.c:933:
+	rc = fb_find_mode(&(info->var), info, mode, NULL, 0, NULL, 8);

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#1120: FILE: drivers/video/s3fb.c:934:
+	if (! ((rc == 1) || (rc == 2))) {
 	    ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rc == 1'
#1120: FILE: drivers/video/s3fb.c:934:
+	if (! ((rc == 1) || (rc == 2))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rc == 2'
#1120: FILE: drivers/video/s3fb.c:934:
+	if (! ((rc == 1) || (rc == 2))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1122: FILE: drivers/video/s3fb.c:936:
+		printk(KERN_ERR "s3fb: mode %s not found\n", mode);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1127: FILE: drivers/video/s3fb.c:941:
+	if (rc < 0) goto err_alloc_cmap;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1130: FILE: drivers/video/s3fb.c:944:
+	if (rc < 0) goto err_reg_fb;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1132: FILE: drivers/video/s3fb.c:946:
+	printk(KERN_INFO "fb%d: %s on %s, %d MB RAM, %d MHz MCLK\n", info->node, info->fix.id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1133: FILE: drivers/video/s3fb.c:947:
+	printk(KERN_INFO "fb%d: %s on %s, %d MB RAM, %d MHz MCLK\n", info->node, info->fix.id,
+		 pci_name(dev), info->fix.smem_len >> 20, (par->mclk_freq + 500) / 1000);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1136: FILE: drivers/video/s3fb.c:950:
+		printk(KERN_INFO "fb%d: unknown chip, CR2D=%x, CR2E=%x, CRT2F=%x, CRT30=%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1137: FILE: drivers/video/s3fb.c:951:
+		printk(KERN_INFO "fb%d: unknown chip, CR2D=%x, CR2E=%x, CRT2F=%x, CRT30=%x\n",
+			info->node, vga_rcrt(NULL, 0x2d), vga_rcrt(NULL, 0x2e),

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1146: FILE: drivers/video/s3fb.c:960:
+		par->mtrr_reg = mtrr_add(info->fix.smem_start, info->fix.smem_len, MTRR_TYPE_WRCOMB, 1);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1167: FILE: drivers/video/s3fb.c:981:
+
+

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1170: FILE: drivers/video/s3fb.c:984:
+static void __devexit s3_pci_remove(struct pci_dev *dev)

CHECK:SPACING: No space is necessary after a cast
#1173: FILE: drivers/video/s3fb.c:987:
+	struct s3fb_info *par = (struct s3fb_info *) info;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1176: FILE: drivers/video/s3fb.c:990:
+	if (info) {
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1198: FILE: drivers/video/s3fb.c:1012:
+static int s3_pci_suspend(struct pci_dev* dev, pm_message_t state)

CHECK:SPACING: No space is necessary after a cast
#1201: FILE: drivers/video/s3fb.c:1015:
+	unsigned int count = atomic_read(&(((struct s3fb_info *) info)->ref_count));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1203: FILE: drivers/video/s3fb.c:1017:
+	printk(KERN_INFO "fb%d: suspend\n", info->node);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'state.event == PM_EVENT_FREEZE'
#1205: FILE: drivers/video/s3fb.c:1019:
+	if ((state.event == PM_EVENT_FREEZE) || (!count)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!count'
#1205: FILE: drivers/video/s3fb.c:1019:
+	if ((state.event == PM_EVENT_FREEZE) || (!count)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1205: FILE: drivers/video/s3fb.c:1019:
+	if ((state.event == PM_EVENT_FREEZE) || (!count)) {
+		return 0;
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1220: FILE: drivers/video/s3fb.c:1034:
+
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1223: FILE: drivers/video/s3fb.c:1037:
+static int s3_pci_resume(struct pci_dev* dev)

CHECK:SPACING: No space is necessary after a cast
#1226: FILE: drivers/video/s3fb.c:1040:
+	unsigned int count = atomic_read(&(((struct s3fb_info *) info)->ref_count));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1228: FILE: drivers/video/s3fb.c:1042:
+	printk(KERN_INFO "fb%d: resume\n", info->node);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1230: FILE: drivers/video/s3fb.c:1044:
+	if (!count) {
+		return 0;
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1247: FILE: drivers/video/s3fb.c:1061:
+
+

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1250: FILE: drivers/video/s3fb.c:1064:
+static struct pci_device_id s3_devices[] __devinitdata = {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1251: FILE: drivers/video/s3fb.c:1065:
+	{PCI_VENDOR_ID_S3,	0x8810,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_XXX_TRIO},
 	                  	       		          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1251: FILE: drivers/video/s3fb.c:1065:
+	{PCI_VENDOR_ID_S3,	0x8810,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_XXX_TRIO},
 	                  	       		                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1251: FILE: drivers/video/s3fb.c:1065:
+	{PCI_VENDOR_ID_S3,	0x8810,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_XXX_TRIO},
 	                  	       		                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1252: FILE: drivers/video/s3fb.c:1066:
+	{PCI_VENDOR_ID_S3,	0x8811,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_XXX_TRIO},
 	                  	       		          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1252: FILE: drivers/video/s3fb.c:1066:
+	{PCI_VENDOR_ID_S3,	0x8811,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_XXX_TRIO},
 	                  	       		                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1252: FILE: drivers/video/s3fb.c:1066:
+	{PCI_VENDOR_ID_S3,	0x8811,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_XXX_TRIO},
 	                  	       		                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1253: FILE: drivers/video/s3fb.c:1067:
+	{PCI_VENDOR_ID_S3,	0x8812,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_M65_AURORA64VP},
 	                  	       		          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1253: FILE: drivers/video/s3fb.c:1067:
+	{PCI_VENDOR_ID_S3,	0x8812,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_M65_AURORA64VP},
 	                  	       		                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1253: FILE: drivers/video/s3fb.c:1067:
+	{PCI_VENDOR_ID_S3,	0x8812,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_M65_AURORA64VP},
 	                  	       		                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1254: FILE: drivers/video/s3fb.c:1068:
+	{PCI_VENDOR_ID_S3,	0x8814,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_767_TRIO64UVP},
 	                  	       		          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1254: FILE: drivers/video/s3fb.c:1068:
+	{PCI_VENDOR_ID_S3,	0x8814,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_767_TRIO64UVP},
 	                  	       		                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1254: FILE: drivers/video/s3fb.c:1068:
+	{PCI_VENDOR_ID_S3,	0x8814,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_767_TRIO64UVP},
 	                  	       		                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1255: FILE: drivers/video/s3fb.c:1069:
+	{PCI_VENDOR_ID_S3,	0x8901,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_XXX_TRIO64V2_DXGX},
 	                  	       		          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1255: FILE: drivers/video/s3fb.c:1069:
+	{PCI_VENDOR_ID_S3,	0x8901,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_XXX_TRIO64V2_DXGX},
 	                  	       		                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1255: FILE: drivers/video/s3fb.c:1069:
+	{PCI_VENDOR_ID_S3,	0x8901,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_XXX_TRIO64V2_DXGX},
 	                  	       		                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1256: FILE: drivers/video/s3fb.c:1070:
+	{PCI_VENDOR_ID_S3,	0x8902,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_551_PLATO_PX},
 	                  	       		          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1256: FILE: drivers/video/s3fb.c:1070:
+	{PCI_VENDOR_ID_S3,	0x8902,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_551_PLATO_PX},
 	                  	       		                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1256: FILE: drivers/video/s3fb.c:1070:
+	{PCI_VENDOR_ID_S3,	0x8902,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_551_PLATO_PX},
 	                  	       		                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1258: FILE: drivers/video/s3fb.c:1072:
+	{PCI_VENDOR_ID_S3,	0x5631,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_325_VIRGE},
 	                  	       		          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1258: FILE: drivers/video/s3fb.c:1072:
+	{PCI_VENDOR_ID_S3,	0x5631,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_325_VIRGE},
 	                  	       		                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1258: FILE: drivers/video/s3fb.c:1072:
+	{PCI_VENDOR_ID_S3,	0x5631,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_325_VIRGE},
 	                  	       		                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1259: FILE: drivers/video/s3fb.c:1073:
+	{PCI_VENDOR_ID_S3,	0x883D,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_988_VIRGE_VX},
 	                  	       		          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1259: FILE: drivers/video/s3fb.c:1073:
+	{PCI_VENDOR_ID_S3,	0x883D,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_988_VIRGE_VX},
 	                  	       		                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1259: FILE: drivers/video/s3fb.c:1073:
+	{PCI_VENDOR_ID_S3,	0x883D,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_988_VIRGE_VX},
 	                  	       		                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1260: FILE: drivers/video/s3fb.c:1074:
+	{PCI_VENDOR_ID_S3,	0x8A01,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_XXX_VIRGE_DXGX},
 	                  	       		          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1260: FILE: drivers/video/s3fb.c:1074:
+	{PCI_VENDOR_ID_S3,	0x8A01,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_XXX_VIRGE_DXGX},
 	                  	       		                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1260: FILE: drivers/video/s3fb.c:1074:
+	{PCI_VENDOR_ID_S3,	0x8A01,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_XXX_VIRGE_DXGX},
 	                  	       		                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1261: FILE: drivers/video/s3fb.c:1075:
+	{PCI_VENDOR_ID_S3,	0x8A10,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_356_VIRGE_GX2},
 	                  	       		          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1261: FILE: drivers/video/s3fb.c:1075:
+	{PCI_VENDOR_ID_S3,	0x8A10,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_356_VIRGE_GX2},
 	                  	       		                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1261: FILE: drivers/video/s3fb.c:1075:
+	{PCI_VENDOR_ID_S3,	0x8A10,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_356_VIRGE_GX2},
 	                  	       		                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1262: FILE: drivers/video/s3fb.c:1076:
+	{PCI_VENDOR_ID_S3,	0x8A11,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_357_VIRGE_GX2P},
 	                  	       		          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1262: FILE: drivers/video/s3fb.c:1076:
+	{PCI_VENDOR_ID_S3,	0x8A11,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_357_VIRGE_GX2P},
 	                  	       		                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1262: FILE: drivers/video/s3fb.c:1076:
+	{PCI_VENDOR_ID_S3,	0x8A11,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_357_VIRGE_GX2P},
 	                  	       		                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1263: FILE: drivers/video/s3fb.c:1077:
+	{PCI_VENDOR_ID_S3,	0x8A12,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_359_VIRGE_GX2P},
 	                  	       		          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1263: FILE: drivers/video/s3fb.c:1077:
+	{PCI_VENDOR_ID_S3,	0x8A12,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_359_VIRGE_GX2P},
 	                  	       		                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1263: FILE: drivers/video/s3fb.c:1077:
+	{PCI_VENDOR_ID_S3,	0x8A12,		PCI_ANY_ID,PCI_ANY_ID,0,0, CHIP_359_VIRGE_GX2P},
 	                  	       		                       ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1268: FILE: drivers/video/s3fb.c:1082:
+
+

WARNING:TYPO_SPELLING: 'speficied' may be misspelled - perhaps 'specified'?
#1280: FILE: drivers/video/s3fb.c:1094:
+/* Parse user speficied options */
               ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1291: FILE: drivers/video/s3fb.c:1105:
+	while ((opt = strsep(&options, ",")) != NULL) {
+

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1296: FILE: drivers/video/s3fb.c:1110:
+			mtrr = simple_strtoul(opt + 5, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1299: FILE: drivers/video/s3fb.c:1113:
+			mtrr = simple_strtoul(opt + 9, NULL, 0);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1312: FILE: drivers/video/s3fb.c:1126:
+{
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1321: FILE: drivers/video/s3fb.c:1135:
+{
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1323: FILE: drivers/video/s3fb.c:1137:
+        char *option = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1323: FILE: drivers/video/s3fb.c:1137:
+        char *option = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1325: FILE: drivers/video/s3fb.c:1139:
+        if (fb_get_options("s3fb", &option))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1325: FILE: drivers/video/s3fb.c:1139:
+        if (fb_get_options("s3fb", &option))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1326: FILE: drivers/video/s3fb.c:1140:
+                return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1326: FILE: drivers/video/s3fb.c:1140:
+                return -ENODEV;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1327: FILE: drivers/video/s3fb.c:1141:
+        s3fb_setup(option);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1327: FILE: drivers/video/s3fb.c:1141:
+        s3fb_setup(option);$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1344: FILE: drivers/video/svgalib.c:1:
+/*

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#1363: FILE: drivers/video/svgalib.c:20:
+#include <asm/io.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1365: FILE: drivers/video/svgalib.c:22:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1367: FILE: drivers/video/svgalib.c:24:
+void svga_wcrt_multi(const struct vga_regset *regset, u32 value) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1368: FILE: drivers/video/svgalib.c:25:
+void svga_wcrt_multi(const struct vga_regset *regset, u32 value) {
+

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1377: FILE: drivers/video/svgalib.c:34:
+			if (value & 1) regval = regval | bitval;

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1378: FILE: drivers/video/svgalib.c:35:
+			bitnum ++;
 			       ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1382: FILE: drivers/video/svgalib.c:39:
+		regset ++;
 		       ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1387: FILE: drivers/video/svgalib.c:44:
+void svga_wseq_multi(const struct vga_regset *regset, u32 value) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1388: FILE: drivers/video/svgalib.c:45:
+void svga_wseq_multi(const struct vga_regset *regset, u32 value) {
+

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1397: FILE: drivers/video/svgalib.c:54:
+			if (value & 1) regval = regval | bitval;

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1398: FILE: drivers/video/svgalib.c:55:
+			bitnum ++;
 			       ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1402: FILE: drivers/video/svgalib.c:59:
+		regset ++;
 		       ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1412: FILE: drivers/video/svgalib.c:69:
+		regset ++;
 		       ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1417: FILE: drivers/video/svgalib.c:74:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1420: FILE: drivers/video/svgalib.c:77:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1447: FILE: drivers/video/svgalib.c:104:
+	u8 count;
+	for (count = 0; count <= 0xF; count ++)

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#1447: FILE: drivers/video/svgalib.c:104:
+	for (count = 0; count <= 0xF; count ++)
 	                                    ^

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#1468: FILE: drivers/video/svgalib.c:125:
+/*	vga_wseq(NULL, VGA_SEQ_MEMORY_MODE, VGA_SR04_EXT_MEM | VGA_SR04_SEQ_MODE | VGA_SR04_CHN_4M); */

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#1499: FILE: drivers/video/svgalib.c:156:
+	vga_wgfx(NULL, VGA_GFX_MISC,		0x0E); /* Misc graphics register - text mode enable */

WARNING:LONG_LINE_COMMENT: line length of 125 exceeds 100 columns
#1505: FILE: drivers/video/svgalib.c:162:
+	svga_wattr(0x10, 0x0C);			/* Attribute Mode Control Register - text mode, blinking and line graphics */

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1512: FILE: drivers/video/svgalib.c:169:
+#if 0

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1532: FILE: drivers/video/svgalib.c:189:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1535: FILE: drivers/video/svgalib.c:192:
+
+

CHECK:SPACING: No space is necessary after a cast
#1539: FILE: drivers/video/svgalib.c:196:
+	u8* fb = (u8 *) info->screen_base;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1539: FILE: drivers/video/svgalib.c:196:
+	u8* fb = (u8 *) info->screen_base;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'map->width != 8'
#1542: FILE: drivers/video/svgalib.c:199:
+	if ((map->width != 8) || (map->height != 16) ||
+	    (map->depth != 1) || (map->length != 256)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'map->height != 16'
#1542: FILE: drivers/video/svgalib.c:199:
+	if ((map->width != 8) || (map->height != 16) ||
+	    (map->depth != 1) || (map->length != 256)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'map->depth != 1'
#1542: FILE: drivers/video/svgalib.c:199:
+	if ((map->width != 8) || (map->height != 16) ||
+	    (map->depth != 1) || (map->length != 256)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'map->length != 256'
#1542: FILE: drivers/video/svgalib.c:199:
+	if ((map->width != 8) || (map->height != 16) ||
+	    (map->depth != 1) || (map->length != 256)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1544: FILE: drivers/video/svgalib.c:201:
+^I    ^Iprintk(KERN_ERR "fb%d: unsupported font parameters: width %d, height %d, depth %d, length %d\n",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1544: FILE: drivers/video/svgalib.c:201:
+^I    ^Iprintk(KERN_ERR "fb%d: unsupported font parameters: width %d, height %d, depth %d, length %d\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1544: FILE: drivers/video/svgalib.c:201:
+	    	printk(KERN_ERR "fb%d: unsupported font parameters: width %d, height %d, depth %d, length %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1545: FILE: drivers/video/svgalib.c:202:
+	    	printk(KERN_ERR "fb%d: unsupported font parameters: width %d, height %d, depth %d, length %d\n",
+			info->node, map->width, map->height, map->depth, map->length);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1551: FILE: drivers/video/svgalib.c:208:
+		for (i = 0; i < map->height; i++) {
+			fb[i * 4] = font[i];
+		}

CHECK:SPACING: No space is necessary after a cast
#1566: FILE: drivers/video/svgalib.c:223:
+	u16 *fb = (u16 *) info->screen_base;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'area->sy > area->dy'
#1569: FILE: drivers/video/svgalib.c:226:
+	if ((area->sy > area->dy) ||
+	    ((area->sy == area->dy) && (area->sx > area->dx))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'area->sy == area->dy'
#1569: FILE: drivers/video/svgalib.c:226:
+	if ((area->sy > area->dy) ||
+	    ((area->sy == area->dy) && (area->sx > area->dx))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'area->sx > area->dx'
#1569: FILE: drivers/video/svgalib.c:226:
+	if ((area->sy > area->dy) ||
+	    ((area->sy == area->dy) && (area->sx > area->dx))) {

WARNING:TABSTOP: Statements should start on a tabstop
#1573: FILE: drivers/video/svgalib.c:230:
+	    } else {

WARNING:TABSTOP: Statements should start on a tabstop
#1581: FILE: drivers/video/svgalib.c:238:
+	    }

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1584: FILE: drivers/video/svgalib.c:241:
+		u16* src2 = src;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1585: FILE: drivers/video/svgalib.c:242:
+		u16* dst2 = dst;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1586: FILE: drivers/video/svgalib.c:243:
+		u16* dst2 = dst;
+		for (dx = 0; dx < area->width; dx++) {

CHECK:SPACING: No space is necessary after a cast
#1603: FILE: drivers/video/svgalib.c:260:
+	u8  *fb = (u8 *) info->screen_base;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1604: FILE: drivers/video/svgalib.c:261:
+	u8  *fb = (u8 *) info->screen_base;
+	fb += rect->sx * colstride + rect->sy * rowstride;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1607: FILE: drivers/video/svgalib.c:264:
+		u8* fb2 = fb;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1608: FILE: drivers/video/svgalib.c:265:
+		u8* fb2 = fb;
+		for (dx = 0; dx < rect->width; dx++) {

CHECK:SPACING: No space is necessary after a cast
#1624: FILE: drivers/video/svgalib.c:281:
+	u8* fb = (u8 *) info->screen_base;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1624: FILE: drivers/video/svgalib.c:281:
+	u8* fb = (u8 *) info->screen_base;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1625: FILE: drivers/video/svgalib.c:282:
+	u8* fb = (u8 *) info->screen_base;
+	fb += blit->sx * colstride + blit->sy * rowstride;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1627: FILE: drivers/video/svgalib.c:284:
+	i=0;
 	 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1628: FILE: drivers/video/svgalib.c:285:
+	for (dy=0; dy < blit->height; dy ++) {
 	       ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#1628: FILE: drivers/video/svgalib.c:285:
+	for (dy=0; dy < blit->height; dy ++) {
 	                                 ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1629: FILE: drivers/video/svgalib.c:286:
+		u8* fb2 = fb;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1630: FILE: drivers/video/svgalib.c:287:
+		u8* fb2 = fb;
+		for (dx = 0; dx < blit->width; dx ++) {

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#1630: FILE: drivers/video/svgalib.c:287:
+		for (dx = 0; dx < blit->width; dx ++) {
 		                                  ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1634: FILE: drivers/video/svgalib.c:291:
+			i ++;
 			  ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1635: FILE: drivers/video/svgalib.c:292:
+			if (i == blit->length) return;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1640: FILE: drivers/video/svgalib.c:297:
+
+}

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#1651: FILE: drivers/video/svgalib.c:308:
+	if (! cursor -> mode)
 	    ^

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxW)
#1651: FILE: drivers/video/svgalib.c:308:
+	if (! cursor -> mode)
 	             ^

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxW)
#1656: FILE: drivers/video/svgalib.c:313:
+	if (cursor -> shape == FB_TILE_CURSOR_NONE)
 	           ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1659: FILE: drivers/video/svgalib.c:316:
+	switch (cursor -> shape)
+	{

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxW)
#1659: FILE: drivers/video/svgalib.c:316:
+	switch (cursor -> shape)
 	               ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1686: FILE: drivers/video/svgalib.c:343:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1689: FILE: drivers/video/svgalib.c:346:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1691: FILE: drivers/video/svgalib.c:348:
+/*
+   Compute PLL settings (M, N, R)

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1696: FILE: drivers/video/svgalib.c:353:
+static inline u32 abs_diff(u32 a, u32 b) {return (a > b) ? (a - b) : (b - a);}
                                                                             ^

CHECK:SPACING: No space is necessary after a cast
#1703: FILE: drivers/video/svgalib.c:360:
+	pr_debug("fb%d: ideal frequency: %d kHz\n", node, (unsigned int) f_wanted);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1713: FILE: drivers/video/svgalib.c:370:
+	/* It is usually better to have greater VCO clock
+	   because of better frequency stability.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1714: FILE: drivers/video/svgalib.c:371:
+	   So first try r_max, then r smaller. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'f_vco < pll->f_vco_min'
#1721: FILE: drivers/video/svgalib.c:378:
+	if ((f_vco < pll->f_vco_min) || (f_vco > pll->f_vco_max))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'f_vco > pll->f_vco_max'
#1721: FILE: drivers/video/svgalib.c:378:
+	if ((f_vco < pll->f_vco_min) || (f_vco > pll->f_vco_max))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1734: FILE: drivers/video/svgalib.c:391:
+		delta_current = abs_diff (f_current, f_vco);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1742: FILE: drivers/video/svgalib.c:399:
+		if (f_current <= f_vco) {
[...]
+		} else {
[...]

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1743: FILE: drivers/video/svgalib.c:400:
+			am ++;
 			   ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1745: FILE: drivers/video/svgalib.c:402:
+			an ++;
 			   ^

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#1750: FILE: drivers/video/svgalib.c:407:
+	pr_debug("fb%d: found frequency: %d kHz (VCO %d kHz)\n", node, (int) (f_current >> ar), (int) f_current);

CHECK:SPACING: No space is necessary after a cast
#1750: FILE: drivers/video/svgalib.c:407:
+	pr_debug("fb%d: found frequency: %d kHz (VCO %d kHz)\n", node, (int) (f_current >> ar), (int) f_current);

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#1751: FILE: drivers/video/svgalib.c:408:
+	pr_debug("fb%d: m = %d n = %d r = %d\n", node, (unsigned int) *m, (unsigned int) *n, (unsigned int) *r);

CHECK:SPACING: No space is necessary after a cast
#1751: FILE: drivers/video/svgalib.c:408:
+	pr_debug("fb%d: m = %d n = %d r = %d\n", node, (unsigned int) *m, (unsigned int) *n, (unsigned int) *r);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1755: FILE: drivers/video/svgalib.c:412:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1758: FILE: drivers/video/svgalib.c:415:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1764: FILE: drivers/video/svgalib.c:421:
+	var->xres         = (var->xres+7)&~7;
 	                              ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#1764: FILE: drivers/video/svgalib.c:421:
+	var->xres         = (var->xres+7)&~7;
 	                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1765: FILE: drivers/video/svgalib.c:422:
+	var->left_margin  = (var->left_margin+7)&~7;
 	                                     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#1765: FILE: drivers/video/svgalib.c:422:
+	var->left_margin  = (var->left_margin+7)&~7;
 	                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1766: FILE: drivers/video/svgalib.c:423:
+	var->right_margin = (var->right_margin+7)&~7;
 	                                      ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#1766: FILE: drivers/video/svgalib.c:423:
+	var->right_margin = (var->right_margin+7)&~7;
 	                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1767: FILE: drivers/video/svgalib.c:424:
+	var->hsync_len    = (var->hsync_len+7)&~7;
 	                                   ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#1767: FILE: drivers/video/svgalib.c:424:
+	var->hsync_len    = (var->hsync_len+7)&~7;
 	                                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1771: FILE: drivers/video/svgalib.c:428:
+	if (((value / 8) - 5) >= svga_regset_size (tm->h_total_regs)) return -EINVAL;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tm->h_total_regs'
#1771: FILE: drivers/video/svgalib.c:428:
+	if (((value / 8) - 5) >= svga_regset_size (tm->h_total_regs)) return -EINVAL;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1771: FILE: drivers/video/svgalib.c:428:
+	if (((value / 8) - 5) >= svga_regset_size (tm->h_total_regs)) return -EINVAL;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1775: FILE: drivers/video/svgalib.c:432:
+	if (((value / 8) - 1) >= svga_regset_size (tm->h_display_regs)) return -EINVAL;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tm->h_display_regs'
#1775: FILE: drivers/video/svgalib.c:432:
+	if (((value / 8) - 1) >= svga_regset_size (tm->h_display_regs)) return -EINVAL;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1775: FILE: drivers/video/svgalib.c:432:
+	if (((value / 8) - 1) >= svga_regset_size (tm->h_display_regs)) return -EINVAL;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1776: FILE: drivers/video/svgalib.c:433:
+	if (((value / 8) - 1) >= svga_regset_size (tm->h_blank_start_regs)) return -EINVAL;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tm->h_blank_start_regs'
#1776: FILE: drivers/video/svgalib.c:433:
+	if (((value / 8) - 1) >= svga_regset_size (tm->h_blank_start_regs)) return -EINVAL;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1776: FILE: drivers/video/svgalib.c:433:
+	if (((value / 8) - 1) >= svga_regset_size (tm->h_blank_start_regs)) return -EINVAL;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1780: FILE: drivers/video/svgalib.c:437:
+	if (((value / 8) - 1) >= svga_regset_size (tm->h_sync_start_regs)) return -EINVAL;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tm->h_sync_start_regs'
#1780: FILE: drivers/video/svgalib.c:437:
+	if (((value / 8) - 1) >= svga_regset_size (tm->h_sync_start_regs)) return -EINVAL;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1780: FILE: drivers/video/svgalib.c:437:
+	if (((value / 8) - 1) >= svga_regset_size (tm->h_sync_start_regs)) return -EINVAL;

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1784: FILE: drivers/video/svgalib.c:441:
+	if ((value == 0) || ((value / 8) >= svga_regset_size (tm->h_blank_end_regs))) return -EINVAL;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1784: FILE: drivers/video/svgalib.c:441:
+	if ((value == 0) || ((value / 8) >= svga_regset_size (tm->h_blank_end_regs))) return -EINVAL;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'value == 0'
#1784: FILE: drivers/video/svgalib.c:441:
+	if ((value == 0) || ((value / 8) >= svga_regset_size (tm->h_blank_end_regs))) return -EINVAL;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tm->h_blank_end_regs'
#1784: FILE: drivers/video/svgalib.c:441:
+	if ((value == 0) || ((value / 8) >= svga_regset_size (tm->h_blank_end_regs))) return -EINVAL;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1784: FILE: drivers/video/svgalib.c:441:
+	if ((value == 0) || ((value / 8) >= svga_regset_size (tm->h_blank_end_regs))) return -EINVAL;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1788: FILE: drivers/video/svgalib.c:445:
+	if ((value == 0) || ((value / 8) >= svga_regset_size (tm->h_sync_end_regs))) return -EINVAL;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'value == 0'
#1788: FILE: drivers/video/svgalib.c:445:
+	if ((value == 0) || ((value / 8) >= svga_regset_size (tm->h_sync_end_regs))) return -EINVAL;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tm->h_sync_end_regs'
#1788: FILE: drivers/video/svgalib.c:445:
+	if ((value == 0) || ((value / 8) >= svga_regset_size (tm->h_sync_end_regs))) return -EINVAL;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1788: FILE: drivers/video/svgalib.c:445:
+	if ((value == 0) || ((value / 8) >= svga_regset_size (tm->h_sync_end_regs))) return -EINVAL;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1792: FILE: drivers/video/svgalib.c:449:
+	if ((value - 1) >= svga_regset_size(tm->v_total_regs)) return -EINVAL;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1796: FILE: drivers/video/svgalib.c:453:
+	if ((value - 1) >= svga_regset_size(tm->v_display_regs)) return -EINVAL;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1797: FILE: drivers/video/svgalib.c:454:
+	if ((value - 1) >= svga_regset_size(tm->v_blank_start_regs)) return -EINVAL;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1801: FILE: drivers/video/svgalib.c:458:
+	if ((value - 1) >= svga_regset_size(tm->v_sync_start_regs)) return -EINVAL;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1805: FILE: drivers/video/svgalib.c:462:
+	if ((value == 0) || (value >= svga_regset_size (tm->v_blank_end_regs))) return -EINVAL;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'value == 0'
#1805: FILE: drivers/video/svgalib.c:462:
+	if ((value == 0) || (value >= svga_regset_size (tm->v_blank_end_regs))) return -EINVAL;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'value >= svga_regset_size (tm->v_blank_end_regs)'
#1805: FILE: drivers/video/svgalib.c:462:
+	if ((value == 0) || (value >= svga_regset_size (tm->v_blank_end_regs))) return -EINVAL;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1805: FILE: drivers/video/svgalib.c:462:
+	if ((value == 0) || (value >= svga_regset_size (tm->v_blank_end_regs))) return -EINVAL;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1809: FILE: drivers/video/svgalib.c:466:
+	if ((value == 0) || (value >= svga_regset_size (tm->v_sync_end_regs))) return -EINVAL;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'value == 0'
#1809: FILE: drivers/video/svgalib.c:466:
+	if ((value == 0) || (value >= svga_regset_size (tm->v_sync_end_regs))) return -EINVAL;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'value >= svga_regset_size (tm->v_sync_end_regs)'
#1809: FILE: drivers/video/svgalib.c:466:
+	if ((value == 0) || (value >= svga_regset_size (tm->v_sync_end_regs))) return -EINVAL;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1809: FILE: drivers/video/svgalib.c:466:
+	if ((value == 0) || (value >= svga_regset_size (tm->v_sync_end_regs))) return -EINVAL;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1816: FILE: drivers/video/svgalib.c:473:
+void svga_set_timings(const struct svga_timing_regs *tm, struct fb_var_screeninfo *var,
+			u32 hmul, u32 hdiv, u32 vmul, u32 vdiv, u32 hborder, int node)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1901: FILE: drivers/video/svgalib.c:558:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1904: FILE: drivers/video/svgalib.c:561:
+
+

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#1905: FILE: drivers/video/svgalib.c:562:
+int svga_match_format(const struct svga_fb_format *frm, struct fb_var_screeninfo *var, struct fb_fix_screeninfo *fix)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1909: FILE: drivers/video/svgalib.c:566:
+	while (frm->bits_per_pixel != SVGA_FORMAT_END_VAL)
+	{

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'var->bits_per_pixel == frm->bits_per_pixel'
#1911: FILE: drivers/video/svgalib.c:568:
+		if ((var->bits_per_pixel == frm->bits_per_pixel) &&
+		    (var->red.length     <= frm->red.length)     &&
+		    (var->green.length   <= frm->green.length)   &&
+		    (var->blue.length    <= frm->blue.length)    &&
+		    (var->transp.length  <= frm->transp.length)  &&
+		    (var->nonstd	 == frm->nonstd)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'var->red.length     <= frm->red.length'
#1911: FILE: drivers/video/svgalib.c:568:
+		if ((var->bits_per_pixel == frm->bits_per_pixel) &&
+		    (var->red.length     <= frm->red.length)     &&
+		    (var->green.length   <= frm->green.length)   &&
+		    (var->blue.length    <= frm->blue.length)    &&
+		    (var->transp.length  <= frm->transp.length)  &&
+		    (var->nonstd	 == frm->nonstd)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'var->green.length   <= frm->green.length'
#1911: FILE: drivers/video/svgalib.c:568:
+		if ((var->bits_per_pixel == frm->bits_per_pixel) &&
+		    (var->red.length     <= frm->red.length)     &&
+		    (var->green.length   <= frm->green.length)   &&
+		    (var->blue.length    <= frm->blue.length)    &&
+		    (var->transp.length  <= frm->transp.length)  &&
+		    (var->nonstd	 == frm->nonstd)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'var->blue.length    <= frm->blue.length'
#1911: FILE: drivers/video/svgalib.c:568:
+		if ((var->bits_per_pixel == frm->bits_per_pixel) &&
+		    (var->red.length     <= frm->red.length)     &&
+		    (var->green.length   <= frm->green.length)   &&
+		    (var->blue.length    <= frm->blue.length)    &&
+		    (var->transp.length  <= frm->transp.length)  &&
+		    (var->nonstd	 == frm->nonstd)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'var->transp.length  <= frm->transp.length'
#1911: FILE: drivers/video/svgalib.c:568:
+		if ((var->bits_per_pixel == frm->bits_per_pixel) &&
+		    (var->red.length     <= frm->red.length)     &&
+		    (var->green.length   <= frm->green.length)   &&
+		    (var->blue.length    <= frm->blue.length)    &&
+		    (var->transp.length  <= frm->transp.length)  &&
+		    (var->nonstd	 == frm->nonstd)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'var->nonstd	 == frm->nonstd'
#1911: FILE: drivers/video/svgalib.c:568:
+		if ((var->bits_per_pixel == frm->bits_per_pixel) &&
+		    (var->red.length     <= frm->red.length)     &&
+		    (var->green.length   <= frm->green.length)   &&
+		    (var->blue.length    <= frm->blue.length)    &&
+		    (var->transp.length  <= frm->transp.length)  &&
+		    (var->nonstd	 == frm->nonstd)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1917: FILE: drivers/video/svgalib.c:574:
+^I^I    ^Ivar->bits_per_pixel = frm->bits_per_pixel;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1917: FILE: drivers/video/svgalib.c:574:
+^I^I    ^Ivar->bits_per_pixel = frm->bits_per_pixel;$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "fix"
#1923: FILE: drivers/video/svgalib.c:580:
+			if (fix != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1937: FILE: drivers/video/svgalib.c:594:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1938: FILE: drivers/video/svgalib.c:595:
+EXPORT_SYMBOL(svga_wcrt_multi);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1939: FILE: drivers/video/svgalib.c:596:
+EXPORT_SYMBOL(svga_wseq_multi);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1941: FILE: drivers/video/svgalib.c:598:
+EXPORT_SYMBOL(svga_set_default_gfx_regs);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1942: FILE: drivers/video/svgalib.c:599:
+EXPORT_SYMBOL(svga_set_default_atc_regs);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1943: FILE: drivers/video/svgalib.c:600:
+EXPORT_SYMBOL(svga_set_default_seq_regs);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1944: FILE: drivers/video/svgalib.c:601:
+EXPORT_SYMBOL(svga_set_default_crt_regs);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1945: FILE: drivers/video/svgalib.c:602:
+EXPORT_SYMBOL(svga_set_textmode_vga_regs);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1947: FILE: drivers/video/svgalib.c:604:
+EXPORT_SYMBOL(svga_settile);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1948: FILE: drivers/video/svgalib.c:605:
+EXPORT_SYMBOL(svga_tilecopy);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1949: FILE: drivers/video/svgalib.c:606:
+EXPORT_SYMBOL(svga_tilefill);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1950: FILE: drivers/video/svgalib.c:607:
+EXPORT_SYMBOL(svga_tileblit);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1951: FILE: drivers/video/svgalib.c:608:
+EXPORT_SYMBOL(svga_tilecursor);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1953: FILE: drivers/video/svgalib.c:610:
+EXPORT_SYMBOL(svga_compute_pll);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1954: FILE: drivers/video/svgalib.c:611:
+EXPORT_SYMBOL(svga_check_timings);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1955: FILE: drivers/video/svgalib.c:612:
+EXPORT_SYMBOL(svga_set_timings);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1956: FILE: drivers/video/svgalib.c:613:
+EXPORT_SYMBOL(svga_match_format);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1982: FILE: include/linux/svga.h:1:
+#ifndef _LINUX_SVGA_H

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#2004: FILE: include/linux/svga.h:23:
+#define SVGA_FORMAT_END		{SVGA_FORMAT_END_VAL, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, 0, 0, 0, 0, 0, 0}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2050: FILE: include/linux/svga.h:69:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#2077: FILE: include/linux/svga.h:96:
+	u16 flags;
+	pci_read_config_word(dev, PCI_COMMAND, &flags);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2081: FILE: include/linux/svga.h:100:
+
+

WARNING:LONG_LINE: line length of 151 exceeds 100 columns
#2099: FILE: include/linux/svga.h:118:
+void svga_set_timings(const struct svga_timing_regs *tm, struct fb_var_screeninfo *var, u32 hmul, u32 hdiv, u32 vmul, u32 vdiv, u32 hborder, int node);

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#2101: FILE: include/linux/svga.h:120:
+int svga_match_format(const struct svga_fb_format *frm, struct fb_var_screeninfo *var, struct fb_fix_screeninfo *fix);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000470946.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 123 errors, 116 warnings, 150 checks, 2030 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000470946.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
