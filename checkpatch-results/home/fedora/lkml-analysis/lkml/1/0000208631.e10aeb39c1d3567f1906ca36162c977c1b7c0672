WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#58: 
   If group_A hits its limit, memory is reclaimed from group_A, App_1, App_2.

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#108: 
  Signed-off-by: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:LINE_SPACING: Please don't use multiple blank lines
#135: FILE: mm/memcontrol.c:167:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#146: FILE: mm/memcontrol.c:178:
+
+

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#183: FILE: mm/memcontrol.c:499:
+	if (!list_empty(&cg->children)) {
+	    list_for_each_entry(tmp, &cg->children, sibling)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 20)
#184: FILE: mm/memcontrol.c:500:
+	    list_for_each_entry(tmp, &cg->children, sibling)
+		    inc_dec_reclaim_counter(tmp, set);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#189: FILE: mm/memcontrol.c:505:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#191: FILE: mm/memcontrol.c:507:
+static void set_hierarchy_mask(struct mem_cgroup *mem,
+			      struct mem_cgroup *root, bool set)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#240: FILE: mm/memcontrol.c:583:
+			ret = res_counter_charge_hierarchy(&mem->memsw,
+						PAGE_SIZE, &hit);

CHECK:BRACES: Unbalanced braces around else statement
#250: FILE: mm/memcontrol.c:591:
+		} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#257: FILE: mm/memcontrol.c:597:
 
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#322: FILE: mm/memcontrol.c:979:
+			res_counter_uncharge_hierarchy(&memcg->memsw,
+							PAGE_SIZE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#380: FILE: mm/memcontrol.c:1227:
+		progress = __try_to_free_mem_cgroup_pages(mem,
+					gfp_mask, true, root);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#395: FILE: mm/memcontrol.c:1257:
+		progress = __try_to_free_mem_cgroup_pages(memcg,
+					  GFP_HIGHUSER_MOVABLE, false, memcg);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#405: FILE: mm/memcontrol.c:1299:
+		__try_to_free_mem_cgroup_pages(memcg,
+				       GFP_HIGHUSER_MOVABLE, true, memcg);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#464: FILE: mm/memcontrol.c:1426:
+		progress = __try_to_free_mem_cgroup_pages(mem,
+					  GFP_HIGHUSER_MOVABLE, false, NULL);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#484: FILE: mm/memcontrol.c:1466:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#486: FILE: mm/memcontrol.c:1468:
+                                     unsigned long long val)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#486: FILE: mm/memcontrol.c:1468:
+static int mem_cgroup_set_hierarchy(struct mem_cgroup *mem,
+                                     unsigned long long val)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: mm/memcontrol.c:1468:
+                                     unsigned long long val)$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000208631.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 5 warnings, 14 checks, 489 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000208631.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
