WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#79: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#84: FILE: drivers/mfd/pcf50633-core.c:1:
+/* NXP PCF50633 Power Management Unit (PMU) driver

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#88: FILE: drivers/mfd/pcf50633-core.c:5:
+ * ^I   Balaji Rao <balajirrao@openmoko.org>$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#115: FILE: drivers/mfd/pcf50633-core.c:32:
+#define PCF50633_MBCS1_USBPRES ^I^I0x01$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: drivers/mfd/pcf50633-core.c:40:
+	ret = i2c_smbus_read_i2c_block_data(pcf->i2c_client, reg,
+				num, data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#135: FILE: drivers/mfd/pcf50633-core.c:52:
+	ret = i2c_smbus_write_i2c_block_data(pcf->i2c_client, reg,
+				num, data);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#141: FILE: drivers/mfd/pcf50633-core.c:58:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#143: FILE: drivers/mfd/pcf50633-core.c:60:
+/* Read a block of upto 32 regs  */
                    ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#145: FILE: drivers/mfd/pcf50633-core.c:62:
+int pcf50633_read_block(struct pcf50633 *pcf, u8 reg,
+					int nr_regs, u8 *data)

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#157: FILE: drivers/mfd/pcf50633-core.c:74:
+/* Write a block of upto 32 regs  */
                     ^^^^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#158: FILE: drivers/mfd/pcf50633-core.c:75:
+int pcf50633_write_block(struct pcf50633 *pcf , u8 reg,
                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#159: FILE: drivers/mfd/pcf50633-core.c:76:
+int pcf50633_write_block(struct pcf50633 *pcf , u8 reg,
+					int nr_regs, u8 *data)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#240: FILE: drivers/mfd/pcf50633-core.c:157:
+static ssize_t show_dump_regs(struct device *dev, struct device_attribute *attr,
+			    char *buf)

CHECK:BRACES: braces {} should be used on all arms of this statement
#257: FILE: drivers/mfd/pcf50633-core.c:174:
+			if (n == address_no_read[idx]) {
[...]
+			} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#260: FILE: drivers/mfd/pcf50633-core.c:177:
+			} else

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions '0400' used
#270: FILE: drivers/mfd/pcf50633-core.c:187:
+}

The permissions used in DEVICE_ATTR are unusual.
Typically only three permissions are used - 0644 (RW), 0444 (RO)
and 0200 (WO).

See: https://www.kernel.org/doc/html/latest/filesystems/sysfs.html#attributes

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: drivers/mfd/pcf50633-core.c:191:
+static ssize_t show_resume_reason(struct device *dev,
+				struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#280: FILE: drivers/mfd/pcf50633-core.c:197:
+	n = sprintf(buf, "%02x%02x%02x%02x%02x\n",
+				pcf->resume_reason[0],

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions '0400' used
#287: FILE: drivers/mfd/pcf50633-core.c:204:
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#302: FILE: drivers/mfd/pcf50633-core.c:219:
+int pcf50633_register_irq(struct pcf50633 *pcf, int irq,
+			void (*handler) (int, void *), void *data)

WARNING:SPACING: Unnecessary space before function pointer arguments
#302: FILE: drivers/mfd/pcf50633-core.c:219:
+			void (*handler) (int, void *), void *data)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#421: FILE: drivers/mfd/pcf50633-core.c:338:
+	ret = pcf50633_read_block(pcf, PCF50633_REG_INT1,
+						ARRAY_SIZE(pcf_int), pcf_int);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#433: FILE: drivers/mfd/pcf50633-core.c:350:
+	 * only of USBINS/USBREM IRQ handlers are called */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPLIT_STRING: quoted string split across lines
#452: FILE: drivers/mfd/pcf50633-core.c:369:
+	dev_dbg(pcf->dev, "INT1=0x%02x INT2=0x%02x INT3=0x%02x "
+			"INT4=0x%02x INT5=0x%02x\n", pcf_int[0],

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#456: FILE: drivers/mfd/pcf50633-core.c:373:
+	 * ONKEY1S press. We try to manually do it in such cases. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#459: FILE: drivers/mfd/pcf50633-core.c:376:
+		dev_info(pcf->dev, "ONKEY1S held for %d secs\n",
+							pcf->onkey1s_held);

WARNING:SPACING: space prohibited before semicolon
#467: FILE: drivers/mfd/pcf50633-core.c:384:
+		pcf->onkey1s_held = 1 ;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#471: FILE: drivers/mfd/pcf50633-core.c:388:
+		pcf50633_reg_clear_bits(pcf, PCF50633_REG_INT1M,
+						PCF50633_INT1_SECOND);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#475: FILE: drivers/mfd/pcf50633-core.c:392:
+		pcf50633_reg_clear_bits(pcf, PCF50633_REG_INT2M,
+						PCF50633_INT2_ONKEYR);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#484: FILE: drivers/mfd/pcf50633-core.c:401:
+			pcf50633_reg_set_bit_mask(pcf,
+					PCF50633_REG_INT1M,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#490: FILE: drivers/mfd/pcf50633-core.c:407:
+			pcf50633_reg_set_bit_mask(pcf,
+					PCF50633_REG_INT2M,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#505: FILE: drivers/mfd/pcf50633-core.c:422:
+		 * userspace now */

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcf50633_irq', this function's name, in a string
#527: FILE: drivers/mfd/pcf50633-core.c:444:
+	dev_dbg(pcf->dev, "pcf50633_irq\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#538: FILE: drivers/mfd/pcf50633-core.c:455:
+pcf50633_client_dev_register(struct pcf50633 *pcf, const char *name,
+						struct platform_device **pdev)

WARNING:TYPO_SPELLING: 'Falied' may be misspelled - perhaps 'Failed'?
#545: FILE: drivers/mfd/pcf50633-core.c:462:
+		dev_err(pcf->dev, "Falied to allocate %s\n", name);
 		                   ^^^^^^

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#551: FILE: drivers/mfd/pcf50633-core.c:468:
+	if (!subdev_pdata) {
+		dev_err(pcf->dev, "Error allocating subdev pdata\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#578: FILE: drivers/mfd/pcf50633-core.c:495:
+	 * henceforth */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#586: FILE: drivers/mfd/pcf50633-core.c:503:
+	ret = pcf50633_read_block(pcf, PCF50633_REG_INT1M,
+				ARRAY_SIZE(pcf->suspend_irq_masks),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#598: FILE: drivers/mfd/pcf50633-core.c:515:
+	ret = pcf50633_write_block(pcf, PCF50633_REG_INT1M,
+					ARRAY_SIZE(res), &res[0]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#619: FILE: drivers/mfd/pcf50633-core.c:536:
+	ret = pcf50633_write_block(pcf, PCF50633_REG_INT1M,
+				ARRAY_SIZE(pcf->suspend_irq_masks),

CHECK:LINE_SPACING: Please don't use multiple blank lines
#626: FILE: drivers/mfd/pcf50633-core.c:543:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#642: FILE: drivers/mfd/pcf50633-core.c:559:
+static int __devinit pcf50633_probe(struct i2c_client *client,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#643: FILE: drivers/mfd/pcf50633-core.c:560:
+static int __devinit pcf50633_probe(struct i2c_client *client,
+				const struct i2c_device_id *ids)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#674: FILE: drivers/mfd/pcf50633-core.c:591:
+	dev_info(pcf->dev, "Probed device version %d variant %d\n",
+							version, variant);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#686: FILE: drivers/mfd/pcf50633-core.c:603:
+	pcf50633_client_dev_register(pcf, "pcf50633-input",
+						&pcf->input_pdev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#688: FILE: drivers/mfd/pcf50633-core.c:605:
+	pcf50633_client_dev_register(pcf, "pcf50633-rtc",
+						&pcf->rtc_pdev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#690: FILE: drivers/mfd/pcf50633-core.c:607:
+	pcf50633_client_dev_register(pcf, "pcf50633-mbc",
+						&pcf->mbc_pdev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#692: FILE: drivers/mfd/pcf50633-core.c:609:
+	pcf50633_client_dev_register(pcf, "pcf50633-adc",
+						&pcf->adc_pdev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#714: FILE: drivers/mfd/pcf50633-core.c:631:
+		ret = request_irq(client->irq, pcf50633_irq,
+				IRQF_TRIGGER_LOW, "pcf50633", pcf);

WARNING:SPLIT_STRING: quoted string split across lines
#727: FILE: drivers/mfd/pcf50633-core.c:644:
+		dev_err(pcf->dev, "IRQ %u cannot be enabled as wake-up source"
+			"in this hardware revision", client->irq);

WARNING:MISSING_SPACE: break quoted strings at a space character
#727: FILE: drivers/mfd/pcf50633-core.c:644:
+		dev_err(pcf->dev, "IRQ %u cannot be enabled as wake-up source"
+			"in this hardware revision", client->irq);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#743: FILE: drivers/mfd/pcf50633-core.c:660:
+static int __devexit pcf50633_remove(struct i2c_client *client)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#800: FILE: include/linux/mfd/pcf50633/core.h:1:
+/*

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pcf50633 *' should also have an identifier name
#832: FILE: include/linux/mfd/pcf50633/core.h:33:
+	void (*probe_done)(struct pcf50633 *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pcf50633 *' should also have an identifier name
#833: FILE: include/linux/mfd/pcf50633/core.h:34:
+	void (*mbc_event_callback)(struct pcf50633 *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#833: FILE: include/linux/mfd/pcf50633/core.h:34:
+	void (*mbc_event_callback)(struct pcf50633 *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pcf50633 *' should also have an identifier name
#834: FILE: include/linux/mfd/pcf50633/core.h:35:
+	void (*regulator_registered)(struct pcf50633 *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#834: FILE: include/linux/mfd/pcf50633/core.h:35:
+	void (*regulator_registered)(struct pcf50633 *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pcf50633 *' should also have an identifier name
#835: FILE: include/linux/mfd/pcf50633/core.h:36:
+	void (*force_shutdown)(struct pcf50633 *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#845: FILE: include/linux/mfd/pcf50633/core.h:46:
+	void (*handler) (int, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#845: FILE: include/linux/mfd/pcf50633/core.h:46:
+	void (*handler) (int, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#845: FILE: include/linux/mfd/pcf50633/core.h:46:
+	void (*handler) (int, void *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#850: FILE: include/linux/mfd/pcf50633/core.h:51:
+int pcf50633_register_irq(struct pcf50633 *pcf, int irq,
+			void (*handler) (int, void *), void *data);

WARNING:SPACING: Unnecessary space before function pointer arguments
#850: FILE: include/linux/mfd/pcf50633/core.h:51:
+			void (*handler) (int, void *), void *data);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pcf50633 *' should also have an identifier name
#857: FILE: include/linux/mfd/pcf50633/core.h:58:
+int pcf50633_read_block(struct pcf50633 *, u8 reg,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#858: FILE: include/linux/mfd/pcf50633/core.h:59:
+int pcf50633_read_block(struct pcf50633 *, u8 reg,
+					int nr_regs, u8 *data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#860: FILE: include/linux/mfd/pcf50633/core.h:61:
+int pcf50633_write_block(struct pcf50633 *pcf, u8 reg,
+					int nr_regs, u8 *data);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pcf50633 *' should also have an identifier name
#861: FILE: include/linux/mfd/pcf50633/core.h:62:
+u8 pcf50633_reg_read(struct pcf50633 *, u8 reg);

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#936: FILE: include/linux/mfd/pcf50633/core.h:137:
+	struct mutex lock;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000185922.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 35 warnings, 33 checks, 951 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000185922.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
