ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#51: FILE: arch/x86/include/asm/spinlock.h:171:
__ticket_spin_is_contended(raw_spinlock_t *lock)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#57: FILE: arch/x86/include/asm/spinlock.h:177:
+       int tmp = ACCESS_ONCE(lock->slock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: arch/x86/include/asm/spinlock.h:179:
+       return (((tmp >> TICKET_SHIFT) - tmp) & ((1 << TICKET_SHIFT) - 1)) + 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: include/linux/lockdep.h:139:
+       bounce_hungry,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: include/linux/lockdep.h:169:
+       unsigned int                    isspinlock:1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: kernel/lockdep.c:3003:
+       spinlock_t * lock_ptr;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#114: FILE: kernel/lockdep.c:3003:
+       spinlock_t * lock_ptr;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: kernel/lockdep.c:3004:
+       unsigned long hungry = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: kernel/lockdep.c:3006:
+       if (lock->isspinlock) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#117: FILE: kernel/lockdep.c:3006:
+       if (lock->isspinlock) {
+               lock_ptr = container_of(lock,spinlock_t,dep_map);

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: kernel/lockdep.c:3007:
+               lock_ptr = container_of(lock,spinlock_t,dep_map);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: kernel/lockdep.c:3007:
+               lock_ptr = container_of(lock,spinlock_t,dep_map);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#118: FILE: kernel/lockdep.c:3007:
+               lock_ptr = container_of(lock,spinlock_t,dep_map);
                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#118: FILE: kernel/lockdep.c:3007:
+               lock_ptr = container_of(lock,spinlock_t,dep_map);
                                                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: kernel/lockdep.c:3008:
+               hungry = spin_nm_contended(lock_ptr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: kernel/lockdep.c:3008:
+               hungry = spin_nm_contended(lock_ptr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: kernel/lockdep.c:3009:
+       }$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#128: FILE: kernel/lockdep.c:3038:
        if (lock->cpu != smp_processor_id())
+               stats->bounces[bounce_contended + !!hlock->read]++;

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: kernel/lockdep.c:3039:
+               stats->bounces[bounce_contended + !!hlock->read]++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: kernel/lockdep.c:3039:
+               stats->bounces[bounce_contended + !!hlock->read]++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: kernel/lockdep.c:3040:
+       stats->bounces[bounce_hungry]+=hungry;$

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#131: FILE: kernel/lockdep.c:3040:
+       stats->bounces[bounce_hungry]+=hungry;
                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: kernel/lockdep_proc.c:537:
+               seq_printf(m, "%14lu ",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: kernel/lockdep_proc.c:537:
+               seq_printf(m, "%14lu ",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: kernel/lockdep_proc.c:538:
+               seq_printf(m, "%14lu ", stats->bounces[bounce_hungry]);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#152: FILE: kernel/lockdep_proc.c:538:
+               seq_printf(m, "%14lu ",
+               seq_printf(m, "%14lu ", stats->bounces[bounce_hungry]);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: kernel/lockdep_proc.c:538:
+               seq_printf(m, "%14lu ", stats->bounces[bounce_hungry]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: kernel/lockdep_proc.c:588:
+       seq_printf(m, "%40s %14s %14s %14s %14s %14s %14s %14s %14s %14s "$

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: kernel/lockdep_proc.c:592:
+                       "con-hungry",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: kernel/lockdep_proc.c:592:
+                       "con-hungry",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: kernel/lockdep_proc.c:602:
+       seq_line(m, '-', 0, 40 + 1 + 11 * (14 + 1));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: lib/spinlock_debug.c:30:
+       lock->dep_map.isspinlock = 1;$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000202294.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 11 errors, 20 warnings, 1 checks, 109 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000202294.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
