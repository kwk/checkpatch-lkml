WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#147: FILE: drivers/isdn/capi/capiutil.c:709:
+static void printstructlen(struct stringbuf *sb, u8 *m, unsigned len)

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#211: FILE: drivers/isdn/capi/capiutil.c:759:
+			sb_printf(sb, GFP_ATOMIC, "%-*s = 0x%x\n", slen, NAME, *(u8 *) (cmsg->m + cmsg->l));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#211: FILE: drivers/isdn/capi/capiutil.c:759:
+			sb_printf(sb, GFP_ATOMIC, "%-*s = 0x%x\n", slen, NAME, *(u8 *) (cmsg->m + cmsg->l));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#216: FILE: drivers/isdn/capi/capiutil.c:763:
+			sb_printf(sb, GFP_ATOMIC, "%-*s = 0x%x\n", slen, NAME, *(u16 *) (cmsg->m + cmsg->l));

CHECK:SPACING: No space is necessary after a cast
#216: FILE: drivers/isdn/capi/capiutil.c:763:
+			sb_printf(sb, GFP_ATOMIC, "%-*s = 0x%x\n", slen, NAME, *(u16 *) (cmsg->m + cmsg->l));

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#221: FILE: drivers/isdn/capi/capiutil.c:767:
+			sb_printf(sb, GFP_ATOMIC, "%-*s = 0x%x\n", slen, NAME, *(u32 *) (cmsg->m + cmsg->l));

CHECK:SPACING: No space is necessary after a cast
#221: FILE: drivers/isdn/capi/capiutil.c:767:
+			sb_printf(sb, GFP_ATOMIC, "%-*s = 0x%x\n", slen, NAME, *(u32 *) (cmsg->m + cmsg->l));

WARNING:LINE_SPACING: Missing a blank line after declarations
#324: FILE: drivers/isdn/capi/capiutil.c:827:
+	_cmsg *cmsg = cmsg_alloc();
+	if (unlikely(!cmsg))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#372: FILE: drivers/isdn/capi/capiutil.c:850:
+	sb_printf(&sb, GFP_ATOMIC, "%s ID=%03d #0x%04x LEN=%04d\n",
 		 mnames[command_2_index(cmsg->Command, cmsg->Subcommand)],

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#425: FILE: drivers/isdn/capi/capiutil.c:875:
+char *capi_message2str(u8 * msg)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#432: FILE: drivers/isdn/capi/capiutil.c:880:
+char *capi_cmsg2str(_cmsg * cmsg)

WARNING:LINE_SPACING: Missing a blank line after declarations
#460: FILE: drivers/isdn/capi/kcapi.c:282:
+		char *s = capi_message2str(skb->data);
+		if (s) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#476: FILE: drivers/isdn/capi/kcapi.c:310:
+			char *s = capi_message2str(skb->data);
+			if (s) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#510: FILE: drivers/isdn/capi/kcapi.c:653:
+			char *s = capi_message2str(skb->data);
+			if (s) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000365835.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 8 warnings, 4 checks, 481 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000365835.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
