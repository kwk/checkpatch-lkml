WARNING:EMAIL_SUBJECT: A patch subject line should describe the change not the tool that found it
#14: 
Subject: [PATCH 28/43] drivers/net/skfp: fix sparse warning: Should it be

Naming the tool that found the issue is not very useful in the
subject line.  A good subject line summarizes the change that
the patch brings.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#64: FILE: drivers/net/skfp/h/smc.h:472:
+extern void all_selection_criteria(struct s_smc *smc);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#65: FILE: drivers/net/skfp/h/smc.h:473:
+extern void card_stop(struct s_smc *smc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#66: FILE: drivers/net/skfp/h/smc.h:474:
+extern void init_board(struct s_smc *smc, u_char *mac_addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#67: FILE: drivers/net/skfp/h/smc.h:475:
+extern int init_fplus(struct s_smc *smc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#68: FILE: drivers/net/skfp/h/smc.h:476:
+extern void init_plc(struct s_smc *smc);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#69: FILE: drivers/net/skfp/h/smc.h:477:
+extern int init_smt(struct s_smc *smc, u_char * mac_addr);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#69: FILE: drivers/net/skfp/h/smc.h:477:
+extern int init_smt(struct s_smc *smc, u_char * mac_addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#70: FILE: drivers/net/skfp/h/smc.h:478:
+extern void mac1_irq(struct s_smc *smc, u_short stu, u_short stl);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#71: FILE: drivers/net/skfp/h/smc.h:479:
+extern void mac2_irq(struct s_smc *smc, u_short code_s2u, u_short code_s2l);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#72: FILE: drivers/net/skfp/h/smc.h:480:
+extern void mac3_irq(struct s_smc *smc, u_short code_s3u, u_short code_s3l);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#73: FILE: drivers/net/skfp/h/smc.h:481:
+extern int pcm_status_twisted(struct s_smc *smc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#74: FILE: drivers/net/skfp/h/smc.h:482:
+extern void plc1_irq(struct s_smc *smc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#75: FILE: drivers/net/skfp/h/smc.h:483:
+extern void plc2_irq(struct s_smc *smc);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#76: FILE: drivers/net/skfp/h/smc.h:484:
+extern void read_address(struct s_smc *smc, u_char * mac_addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#76: FILE: drivers/net/skfp/h/smc.h:484:
+extern void read_address(struct s_smc *smc, u_char * mac_addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#77: FILE: drivers/net/skfp/h/smc.h:485:
+extern void timer_irq(struct s_smc *smc);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000167117.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 1 warnings, 14 checks, 91 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000167117.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
