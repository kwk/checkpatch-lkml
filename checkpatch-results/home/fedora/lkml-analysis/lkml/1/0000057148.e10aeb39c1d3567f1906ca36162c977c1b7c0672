WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
This adds the capability to DLPAR add and remove memory from the kernel.  The

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Nathan Fontenot <nfont at austin.ibm.com>'
#39: 
Signed-off-by: Nathan Fontenot <nfont at austin.ibm.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:SIZEOF_PARENTHESIS: sizeof *new_prop should be sizeof(*new_prop)
#67: FILE: arch/powerpc/platforms/pseries/dlpar.c:417:
+	new_prop = kzalloc((sizeof *new_prop), GFP_KERNEL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#115: FILE: arch/powerpc/platforms/pseries/dlpar.c:465:
+		u64 lmb_end_addr = drmem[i].base_addr + *lmb_size;
+		if (phys_addr >= drmem[i].base_addr

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#116: FILE: arch/powerpc/platforms/pseries/dlpar.c:466:
+		if (phys_addr >= drmem[i].base_addr
+		    && phys_addr < lmb_end_addr)

CHECK:CAMELCASE: Avoid CamelCase: <pSeries_reconfig_chain>
#147: FILE: arch/powerpc/platforms/pseries/dlpar.c:497:
+	rc = blocking_notifier_call_chain(&pSeries_reconfig_chain,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:BRACES: braces {} should be used on all arms of this statement
#150: FILE: arch/powerpc/platforms/pseries/dlpar.c:500:
+	if (rc == NOTIFY_BAD) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#154: FILE: arch/powerpc/platforms/pseries/dlpar.c:504:
+	} else

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#173: FILE: arch/powerpc/platforms/pseries/dlpar.c:523:
+	rc = strict_strtoul(buf, 0, &drc_index);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#226: FILE: arch/powerpc/platforms/pseries/dlpar.c:576:
+			__ATTR(release, S_IWUSR, NULL, memory_release_store);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#237: FILE: arch/powerpc/platforms/pseries/dlpar.c:587:
+		printk(KERN_INFO "DLPAR: Could not create sysfs memory "

WARNING:SPLIT_STRING: quoted string split across lines
#238: FILE: arch/powerpc/platforms/pseries/dlpar.c:588:
+		printk(KERN_INFO "DLPAR: Could not create sysfs memory "
+		       "release file\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#252: FILE: arch/powerpc/mm/mem.c:114:
+int __attribute ((weak)) platform_probe_memory(u64 start)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000057148.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 8 warnings, 4 checks, 215 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000057148.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
