WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
This patch is inspired by the discussion at http://lkml.org/lkml/2007/4/11/187

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dentry == mnt->mnt_root'
#133: FILE: kernel/container.c:737:
+			if (IS_ROOT(dentry) || (dentry == mnt->mnt_root))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#136: FILE: kernel/container.c:740:
+			if ((start -= len) < buf)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#183: FILE: kernel/container.c:863:
+int container_path(const struct container *cont, char *buf, int buflen,
+			bool absolute)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'root->mnt_name_len'
#208: FILE: kernel/container.c:897:
+	if ((start -= (root->mnt_name_len)) < buf)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#208: FILE: kernel/container.c:897:
+	if ((start -= (root->mnt_name_len)) < buf)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#219: FILE: kernel/container.c:1341:
+static inline char* compress_path(char *path)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#324: FILE: include/linux/container.h:25:
+extern int containerstats_build(struct containerstats *stats, char *path);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#334: FILE: include/linux/container.h:168:
+int container_path(const struct container *cont, char *buf, int buflen,
+			bool absolute);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#344: FILE: include/linux/container.h:227:
+int container_path(const struct container *cont, char *buf, int buflen,
+			bool absolute);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#353: FILE: include/linux/container.h:243:
+static inline int containerstats_build(struct containerstats *stats,
+					char *path) { return -EINVAL; }

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#362: FILE: include/linux/containerstats.h:1:
+/* containerstats.h - exporting per-container statistics

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#459: FILE: kernel/taskstats.c:57:
+containerstats_cmd_get_policy[CONTAINERSTATS_CMD_ATTR_MAX+1] __read_mostly = {
                                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#505: FILE: kernel/taskstats.c:415:
+	na = nla_reserve(rep_skb, CONTAINERSTATS_TYPE_CONTAINER_STATS,
+				sizeof(struct containerstats));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#544: FILE: kernel/taskstats.c:614:
+	printk("registered taskstats version %d\n", TASKSTATS_GENL_VERSION);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000431478.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 3 warnings, 9 checks, 547 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000431478.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
