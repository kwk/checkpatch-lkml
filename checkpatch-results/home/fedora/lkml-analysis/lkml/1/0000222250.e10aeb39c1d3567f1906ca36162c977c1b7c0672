CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#64: FILE: fs/udf/balloc.c:160:
+				   uint32_t offset,

CHECK:CAMELCASE: Avoid CamelCase: <partitionReferenceNum>
#80: FILE: fs/udf/balloc.c:174:
+	partmap = &sbi->s_partmaps[bloc->partitionReferenceNum];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <logicalBlockNum>
#81: FILE: fs/udf/balloc.c:175:
+	if (bloc->logicalBlockNum < 0 ||

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#104: FILE: fs/udf/balloc.c:431:
+				  uint32_t offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#184: FILE: fs/udf/balloc.c:715:
+			udf_write_aext(table, &epos, &eloc,
 					(etype << 30) | elen, 1);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#209: FILE: fs/udf/balloc.c:839:
+	uint16_t partition = bloc->partitionReferenceNum;

CHECK:CAMELCASE: Avoid CamelCase: <extLocation>
#315: FILE: fs/udf/inode.c:413:
+		udf_add_aext(inode, last_pos, &last_ext->extLocation,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#321: FILE: fs/udf/inode.c:418:
+		udf_write_aext(inode, last_pos, &last_ext->extLocation,
 				last_ext->extLength, 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#417: FILE: fs/udf/inode.c:1101:
+		ibh = udf_read_ptagged(inode->i_sb, &iinfo->i_location, 1,
 					&ident);

CHECK:CAMELCASE: Avoid CamelCase: <extPosition>
#502: FILE: fs/udf/inode.c:1790:
+		sad->extPosition = cpu_to_le32(eloc->logicalBlockNum);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#946: FILE: fs/udf/udfdecl.h:125:
+extern struct inode *udf_iget(struct super_block *, struct kernel_lb_addr *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#946: FILE: fs/udf/udfdecl.h:125:
+extern struct inode *udf_iget(struct super_block *, struct kernel_lb_addr *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kernel_lb_addr *' should also have an identifier name
#946: FILE: fs/udf/udfdecl.h:125:
+extern struct inode *udf_iget(struct super_block *, struct kernel_lb_addr *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000222250.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 11 checks, 822 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000222250.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
