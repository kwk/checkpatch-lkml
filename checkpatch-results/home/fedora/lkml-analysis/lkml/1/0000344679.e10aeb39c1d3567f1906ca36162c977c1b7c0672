WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#60: FILE: drivers/s390/char/sclp_cpi.c:2:
+ *  drivers/s390/char/sclp_cpi.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:TYPO_SPELLING: 'programm' may be misspelled - perhaps 'program'?
#61: FILE: drivers/s390/char/sclp_cpi.c:3:
+ *    SCLP control programm identification
                    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPLIT_STRING: quoted string split across lines
#117: FILE: drivers/s390/char/sclp_cpi.c:18:
+MODULE_DESCRIPTION("Identify this operating system instance "
+		   "to the System z hardware");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#119: FILE: drivers/s390/char/sclp_cpi.c:20:
+MODULE_AUTHOR("Martin Peschke <mpeschke@de.ibm.com>, "
+	      "Michael Ernst <mernst@de.ibm.com>");

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#315: FILE: drivers/s390/char/sclp_cpi.c:33:
+				 LINUX_VERSION_CODE);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#333: FILE: drivers/s390/char/sclp_cpi_sys.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#334: FILE: drivers/s390/char/sclp_cpi_sys.c:2:
+ *  drivers/s390/char/sclp_cpi_sys.c

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#374: FILE: drivers/s390/char/sclp_cpi_sys.c:42:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#379: FILE: drivers/s390/char/sclp_cpi_sys.c:47:
+} __attribute__((packed));

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*req)...) over kzalloc(sizeof(struct sclp_req)...)
#410: FILE: drivers/s390/char/sclp_cpi_sys.c:78:
+	req = kzalloc(sizeof(struct sclp_req), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: No space is necessary after a cast
#413: FILE: drivers/s390/char/sclp_cpi_sys.c:81:
+	sccb = (struct cpi_sccb *) get_zeroed_page(GFP_KERNEL | GFP_DMA);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'sytem' may be misspelled - perhaps 'system'?
#431: FILE: drivers/s390/char/sclp_cpi_sys.c:99:
+	/* set sytem level */
 	       ^^^^^

CHECK:SPACING: No space is necessary after a cast
#447: FILE: drivers/s390/char/sclp_cpi_sys.c:115:
+	free_page((unsigned long) req->sccb);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#460: FILE: drivers/s390/char/sclp_cpi_sys.c:128:
+		printk(KERN_WARNING "cpi: could not register "

WARNING:SPLIT_STRING: quoted string split across lines
#461: FILE: drivers/s390/char/sclp_cpi_sys.c:129:
+		printk(KERN_WARNING "cpi: could not register "
+			"to hardware console.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#465: FILE: drivers/s390/char/sclp_cpi_sys.c:133:
+		printk(KERN_WARNING "cpi: no control program "

WARNING:SPLIT_STRING: quoted string split across lines
#466: FILE: drivers/s390/char/sclp_cpi_sys.c:134:
+		printk(KERN_WARNING "cpi: no control program "
+			"identification support\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#473: FILE: drivers/s390/char/sclp_cpi_sys.c:141:
+		printk(KERN_WARNING "cpi: could not allocate request\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#484: FILE: drivers/s390/char/sclp_cpi_sys.c:152:
+		printk(KERN_WARNING "cpi: could not start request\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#491: FILE: drivers/s390/char/sclp_cpi_sys.c:159:
+		printk(KERN_WARNING "cpi: request failed (status=0x%02x)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#492: FILE: drivers/s390/char/sclp_cpi_sys.c:160:
+		printk(KERN_WARNING "cpi: request failed (status=0x%02x)\n",
+			req->status);

CHECK:SPACING: No space is necessary after a cast
#497: FILE: drivers/s390/char/sclp_cpi_sys.c:165:
+	response = ((struct cpi_sccb *) req->sccb)->header.response_code;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#499: FILE: drivers/s390/char/sclp_cpi_sys.c:167:
+		printk(KERN_WARNING "cpi: failed with "

WARNING:SPLIT_STRING: quoted string split across lines
#500: FILE: drivers/s390/char/sclp_cpi_sys.c:168:
+		printk(KERN_WARNING "cpi: failed with "
+			"response code 0x%x\n", response);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'len > 0'
#521: FILE: drivers/s390/char/sclp_cpi_sys.c:189:
+	if ((len > 0) && (str[len - 1] == '\n'))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'len > 0'
#544: FILE: drivers/s390/char/sclp_cpi_sys.c:212:
+	if ((len > 0) && (value[len - 1] == '\n'))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#561: FILE: drivers/s390/char/sclp_cpi_sys.c:229:
+static ssize_t system_name_store(struct kset *kset, const char *buf,
+	size_t len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#583: FILE: drivers/s390/char/sclp_cpi_sys.c:251:
+static ssize_t sysplex_name_store(struct kset *kset, const char *buf,
+	size_t len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#598: FILE: drivers/s390/char/sclp_cpi_sys.c:266:
+	__ATTR(sysplex_name, 0644, sysplex_name_show,
+	sysplex_name_store);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#606: FILE: drivers/s390/char/sclp_cpi_sys.c:274:
+static ssize_t system_type_store(struct kset *kset, const char *buf,
+	size_t len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#630: FILE: drivers/s390/char/sclp_cpi_sys.c:298:
+static ssize_t system_level_store(struct kset *kset, const char *buf,
+	size_t len)

WARNING:CONSIDER_KSTRTO: simple_strtoull is obsolete, use kstrtoull instead
#635: FILE: drivers/s390/char/sclp_cpi_sys.c:303:
+	level = simple_strtoull(buf, &endp, 16);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#651: FILE: drivers/s390/char/sclp_cpi_sys.c:319:
+	__ATTR(system_level, 0644, system_level_show,
+	system_level_store);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#654: FILE: drivers/s390/char/sclp_cpi_sys.c:322:
+static ssize_t set_store(struct kset *kset, const char *buf,
+	size_t len)

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#722: FILE: drivers/s390/char/sclp_cpi_sys.c:390:
+__initcall(cpi_init);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#728: FILE: drivers/s390/char/sclp_cpi_sys.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#729: FILE: drivers/s390/char/sclp_cpi_sys.h:2:
+ *  drivers/s390/char/sclp_cpi_sys.h

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000344679.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 23 warnings, 14 checks, 683 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000344679.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
