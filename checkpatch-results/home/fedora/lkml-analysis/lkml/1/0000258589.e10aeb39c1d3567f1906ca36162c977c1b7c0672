CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#110: FILE: fs/buffer.c:1695:
+		} else if ((!buffer_mapped(bh) || buffer_delay(bh))
+			    && buffer_dirty(bh)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#125: FILE: fs/buffer.c:1780:
+		if (buffer_mapped(bh) && buffer_dirty(bh)
+			&& !buffer_delay(bh)) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#159: FILE: fs/mpage.c:728:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#187: FILE: fs/mpage.c:756:
+	BUG_ON(mpd->next_page <= mpd->first_page);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#266: FILE: fs/mpage.c:835:
+			BUG_ON(!PageLocked(page));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#267: FILE: fs/mpage.c:836:
+			BUG_ON(PageWriteback(page));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#268: FILE: fs/mpage.c:837:
+			BUG_ON(!page_has_buffers(page));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#288: FILE: fs/mpage.c:857:
+					BUG_ON(bh->b_blocknr != pblock);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#299: FILE: fs/mpage.c:868:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#352: FILE: fs/mpage.c:921:
+		BUG_ON(new.b_size == 0);

CHECK:SPACING: No space is necessary after a cast
#465: FILE: fs/mpage.c:1034:
+	logical = (sector_t) page->index <<

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#486: FILE: fs/mpage.c:1055:
+			BUG_ON(buffer_locked(bh));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#558: FILE: include/linux/mpage.h:22:
+int mpage_da_writepages(struct address_space *mapping,
+		struct writeback_control *wbc, get_block_t get_block);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000258589.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 6 checks, 445 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000258589.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
