WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#54: FILE: drivers/regulator/Kconfig:113:
+config REGULATOR_LP3971
+	tristate "National Semiconductors LP3971 PMIC regulator driver"
+	depends on I2C
+	help
+	 Say Y here to support the voltage regulators and convertors
+	 on National Semiconductors LP3971 PMIC
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:TYPO_SPELLING: 'convertors' may be misspelled - perhaps 'converters'?
#58: FILE: drivers/regulator/Kconfig:117:
+	 Say Y here to support the voltage regulators and convertors
 	                                                  ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#75: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#80: FILE: drivers/regulator/lp3971.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#103: FILE: drivers/regulator/lp3971.c:24:
+	struct mutex io_lock;

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#111: FILE: drivers/regulator/lp3971.c:31:
val);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#116: FILE: drivers/regulator/lp3971.c:36:
+/* System control register 1 initial value,
+   bits 4 and 5 are EPROM programmable */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#116: FILE: drivers/regulator/lp3971.c:36:
+   bits 4 and 5 are EPROM programmable */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#124: FILE: drivers/regulator/lp3971.c:44:
+/*	Voltage control registers shift:
+	LP3971_BUCK1 -> 0

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#128: FILE: drivers/regulator/lp3971.c:48:
+#define BUCK_VOL_CHANGE_SHIFT(x) (((1 << x) & ~0x01) << 1)

WARNING:STATIC_CONST: Move const after static - use 'static const int '
#137: FILE: drivers/regulator/lp3971.c:57:
+const static int buck_base_addr[] = {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#144: FILE: drivers/regulator/lp3971.c:64:
+#define LP3971_BUCK_TARGET_VOL2_REG(x) (buck_base_addr[x]+1)
                                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:STATIC_CONST: Move const after static - use 'static const int '
#146: FILE: drivers/regulator/lp3971.c:66:
+const static int buck_voltage_map[] = {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#157: FILE: drivers/regulator/lp3971.c:77:
+#define LP3971_BUCK_RAMP_REG(x)	(buck_base_addr[x]+2)
                                	                  ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#163: FILE: drivers/regulator/lp3971.c:83:
+/*	Voltage control registers:
+	LP3971_LDO1 -> LP3971_LDO_VOL_CONTR_BASE + 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#169: FILE: drivers/regulator/lp3971.c:89:
+#define LP3971_LDO_VOL_CONTR_REG(x)	(LP3971_LDO_VOL_CONTR_BASE + (x >>

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#169: FILE: drivers/regulator/lp3971.c:89:
+#define LP3971_LDO_VOL_CONTR_REG(x)	(LP3971_LDO_VOL_CONTR_BASE + (x >>

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#173: FILE: drivers/regulator/lp3971.c:92:
+/*	Voltage control registers shift:
+	LP3971_LDO1 -> 0, LP3971_LDO2 -> 4

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#177: FILE: drivers/regulator/lp3971.c:96:
+#define LDO_VOL_CONTR_SHIFT(x) ((x & 1) << 2)

WARNING:STATIC_CONST: Move const after static - use 'static const int '
#180: FILE: drivers/regulator/lp3971.c:99:
+const static int ldo45_voltage_map[] = {

WARNING:STATIC_CONST: Move const after static - use 'static const int '
#185: FILE: drivers/regulator/lp3971.c:104:
+const static int ldo123_voltage_map[] = {

WARNING:STATIC_CONST: Move const after static - use 'static const int *'
#190: FILE: drivers/regulator/lp3971.c:109:
+const static int *ldo_voltage_map[] = {

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#198: FILE: drivers/regulator/lp3971.c:117:
+#define LDO_VOL_VALUE_MAP(x) (ldo_voltage_map[(x - LP3971_LDO1)])

WARNING:LINE_SPACING: Missing a blank line after declarations
#207: FILE: drivers/regulator/lp3971.c:125:
+	int ldo = rdev_get_id(dev) - LP3971_LDO1;
+	return 1000 * LDO_VOL_VALUE_MAP(ldo)[index];

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct regulator_ops should normally be const
#275: FILE: drivers/regulator/lp3971.c:193:
+static struct regulator_ops lp3971_ldo_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:BRACES: Unbalanced braces around else statement
#332: FILE: drivers/regulator/lp3971.c:248:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#492: FILE: drivers/regulator/lp3971.c:407:
+	dev_dbg(lp3971->dev, "reg read 0x%02x -> 0x%02x\n", (int)reg,
 	                                 ^

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxW)
#492: FILE: drivers/regulator/lp3971.c:407:
+	dev_dbg(lp3971->dev, "reg read 0x%02x -> 0x%02x\n", (int)reg,
 	                                      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#492: FILE: drivers/regulator/lp3971.c:407:
+	dev_dbg(lp3971->dev, "reg read 0x%02x -> 0x%02x\n", (int)reg,
 	                                           ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#512: FILE: drivers/regulator/lp3971.c:426:
+		dev_dbg(lp3971->dev, "reg write 0x%02x -> 0x%02x\n",
 		                                  ^

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxW)
#512: FILE: drivers/regulator/lp3971.c:426:
+		dev_dbg(lp3971->dev, "reg write 0x%02x -> 0x%02x\n",
 		                                       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#512: FILE: drivers/regulator/lp3971.c:426:
+		dev_dbg(lp3971->dev, "reg write 0x%02x -> 0x%02x\n",
 		                                            ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#539: FILE: drivers/regulator/lp3971.c:451:
+			dev_err(lp3971->dev, "regulator init failed: %d\n",
 			                                           ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#539: FILE: drivers/regulator/lp3971.c:451:
+			dev_err(lp3971->dev, "regulator init failed: %d\n",
 			                                             ^

CHECK:CAMELCASE: Avoid CamelCase: <No>
#590: FILE: drivers/regulator/lp3971.c:501:
+		dev_warn(lp3971->dev, "No platform init data supplied\n");

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#616: FILE: drivers/regulator/lp3971.c:527:
+       { "lp3971", 0 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#617: FILE: drivers/regulator/lp3971.c:528:
+       { }$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#637: FILE: drivers/regulator/lp3971.c:548:
+		pr_err("Failed to register I2C driver: %d\n", ret);
 		                                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#637: FILE: drivers/regulator/lp3971.c:548:
+		pr_err("Failed to register I2C driver: %d\n", ret);
 		                                       ^

CHECK:CAMELCASE: Avoid CamelCase: <Failed>
#637: FILE: drivers/regulator/lp3971.c:548:
+		pr_err("Failed to register I2C driver: %d\n", ret);

CHECK:CAMELCASE: Avoid CamelCase: <Marek>
#650: FILE: drivers/regulator/lp3971.c:561:
+MODULE_AUTHOR("Marek Szyprowski <m.szyprowski@samsung.com>");

CHECK:CAMELCASE: Avoid CamelCase: <Szyprowski>
#650: FILE: drivers/regulator/lp3971.c:561:
+MODULE_AUTHOR("Marek Szyprowski <m.szyprowski@samsung.com>");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#659: FILE: include/linux/regulator/lp3971.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#678: FILE: include/linux/regulator/lp3971.h:20:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#679: FILE: include/linux/regulator/lp3971.h:21:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000123307.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 19 warnings, 18 checks, 641 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000123307.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
