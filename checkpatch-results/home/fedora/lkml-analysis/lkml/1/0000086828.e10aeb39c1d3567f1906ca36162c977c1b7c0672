WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
This patch updates the iSCSI Transport parser in lio_tpg_parse_pr_out_transport_id()

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "out_tid_len"
#79: FILE: drivers/lio-core/iscsi_target_tpg.c:274:
+	if (out_tid_len != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#86: FILE: drivers/lio-core/iscsi_target_tpg.c:281:
+		if ((padding = ((-tid_len) & 3)) != 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#89: FILE: drivers/lio-core/iscsi_target_tpg.c:284:
+		if ((add_len + 4) != tid_len) {
[...]
+		} else 
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#90: FILE: drivers/lio-core/iscsi_target_tpg.c:285:
+			printk(KERN_INFO "LIO-Target Extracted add_len: %hu "

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#90: FILE: drivers/lio-core/iscsi_target_tpg.c:285:
+			printk(KERN_INFO "LIO-Target Extracted add_len: %hu "
+				"does not match calculated tid_len: %u,"
+				" using tid_len instead\n", add_len+4, tid_len);

WARNING:SPLIT_STRING: quoted string split across lines
#91: FILE: drivers/lio-core/iscsi_target_tpg.c:286:
+			printk(KERN_INFO "LIO-Target Extracted add_len: %hu "
+				"does not match calculated tid_len: %u,"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#92: FILE: drivers/lio-core/iscsi_target_tpg.c:287:
+				" using tid_len instead\n", add_len+4, tid_len);
 				                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#92: FILE: drivers/lio-core/iscsi_target_tpg.c:287:
+				"does not match calculated tid_len: %u,"
+				" using tid_len instead\n", add_len+4, tid_len);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: drivers/lio-core/iscsi_target_tpg.c:289:
+^I^I} else $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#94: FILE: drivers/lio-core/iscsi_target_tpg.c:289:
+		} else 

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#110: FILE: drivers/lio-core/iscsi_target_tpg.h:37:
+extern char *lio_tpg_parse_pr_out_transport_id(const char *, u32 *, char **);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#110: FILE: drivers/lio-core/iscsi_target_tpg.h:37:
+extern char *lio_tpg_parse_pr_out_transport_id(const char *, u32 *, char **);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32 *' should also have an identifier name
#110: FILE: drivers/lio-core/iscsi_target_tpg.h:37:
+extern char *lio_tpg_parse_pr_out_transport_id(const char *, u32 *, char **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char **' should also have an identifier name
#110: FILE: drivers/lio-core/iscsi_target_tpg.h:37:
+extern char *lio_tpg_parse_pr_out_transport_id(const char *, u32 *, char **);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000086828.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 8 warnings, 5 checks, 49 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000086828.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
