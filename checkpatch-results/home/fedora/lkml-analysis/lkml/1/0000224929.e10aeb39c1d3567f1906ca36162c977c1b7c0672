WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#83: 
>> +                                                ONENAND_CMD_UNLOCK_ALL);

WARNING:TYPO_SPELLING: 'dosent' may be misspelled - perhaps 'doesn't'?
#93: 
regions dosent have to be equal in size.
        ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'fuction' may be misspelled - perhaps 'function'?
#94: 
              Have removed the fuction  flexonenand_unlock_all and patched
                               ^^^^^^^

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#168: FILE: drivers/mtd/onenand/onenand_base.c:12:
<h.rohit@samsung.com>

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:STATIC_CONST: Move const after static - use 'static const int '
#179: FILE: drivers/mtd/onenand/onenand_base.c:34:
+const static int boundary[] = {

WARNING:STATIC_CONST: Move const after static - use 'static const int '
#184: FILE: drivers/mtd/onenand/onenand_base.c:39:
+const static int lock[] = {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#237: FILE: drivers/mtd/onenand/onenand_base.c:222:
+unsigned onenand_get_block(struct mtd_info *mtd, loff_t addr,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#238: FILE: drivers/mtd/onenand/onenand_base.c:223:
+			   unsigned *isblkslc)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#241: FILE: drivers/mtd/onenand/onenand_base.c:226:
+	unsigned boundary, blk, die = 0;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#280: FILE: drivers/mtd/onenand/onenand_base.c:283:
+	unsigned slc = 0;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#348: FILE: drivers/mtd/onenand/onenand_base.c:390:
+ * @param mtd ^I^IMTD device structure$

CHECK:BRACES: braces {} should be used on all arms of this statement
#361: FILE: drivers/mtd/onenand/onenand_base.c:403:
+		if (ecc[i] & FLEXONENAND_UNCORRECTABLE_ERROR) {
[...]
+		} else if (ecc[i])
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#411: FILE: drivers/mtd/onenand/onenand_base.c:947:
+	unsigned slc = 0;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#429: FILE: drivers/mtd/onenand/onenand_base.c:965:
+	printk(KERN_DEBUG "Attempting to recover from uncorrectable

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#663: FILE: drivers/mtd/onenand/onenand_base.c:1967:
+		printk(KERN_ERR "onenand_erase: Erase past end of

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#680: FILE: drivers/mtd/onenand/onenand_base.c:1982:
+			printk(KERN_ERR "onenand_erase: Unaligned
 			                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Unaligned>
#680: FILE: drivers/mtd/onenand/onenand_base.c:1982:
+			printk(KERN_ERR "onenand_erase: Unaligned

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:BRACES: Unbalanced braces around else statement
#684: FILE: drivers/mtd/onenand/onenand_base.c:1985:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#709: FILE: drivers/mtd/onenand/onenand_base.c:2028:
+			printk(KERN_ERR "onenand_erase: Failed erase, block

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mtd->numeraseregions > 1'
#719: FILE: drivers/mtd/onenand/onenand_base.c:2037:
+		if (FLEXONENAND(this) && (mtd->numeraseregions > 1)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr == mtd->eraseregions[i + 1].offset'
#720: FILE: drivers/mtd/onenand/onenand_base.c:2038:
+			if ((i < (mtd->numeraseregions - 1)) &&
+			    (addr == mtd->eraseregions[i + 1].offset))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 0)
#724: FILE: drivers/mtd/onenand/onenand_base.c:2042:
+			if (len & (block_size - 1)) {
[...]
partitioning

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#729: FILE: drivers/mtd/onenand/onenand_base.c:2046:
+				printk(KERN_ERR "onenand_erase: Unaligned

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#751: FILE: drivers/mtd/onenand/onenand_base.c:2135:
+^I * ^I   with MLC erasesize? For now, it is not advisable to$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#866: FILE: drivers/mtd/onenand/onenand_base.c:2482:
+	/*
+	* For Flex-OneNAND, we write lock mark to 1st word of sector 4 of

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#910: FILE: drivers/mtd/onenand/onenand_base.c:2695:
+	ret = onenand_otp_walk(mtd, from, len, &retlen, buf, do_otp_lock,
 

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#942: FILE: drivers/mtd/onenand/onenand_base.c:2773:
+	printk(KERN_INFO "%s%sOneNAND%s %dMB %sV 16-bit (0x%02x)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#943: FILE: drivers/mtd/onenand/onenand_base.c:2774:
+	printk(KERN_INFO "%s%sOneNAND%s %dMB %sV 16-bit (0x%02x)\n",
+		demuxed ? "" : "Muxed ",

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#958: FILE: drivers/mtd/onenand/onenand_base.c:2820:
+	unsigned die, bdry;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#981: FILE: drivers/mtd/onenand/onenand_base.c:2842:
+		printk(KERN_INFO "Die %d boundary: %d%s\n", die,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#983: FILE: drivers/mtd/onenand/onenand_base.c:2843:
+		printk(KERN_INFO "Die %d boundary: %d%s\n", die,
"(Unlocked)");

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#993: FILE: drivers/mtd/onenand/onenand_base.c:2853:
+ * ^I^I^I  boundary[], diesize[], chipsize,$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1014: FILE: drivers/mtd/onenand/onenand_base.c:2874:
+	die = ofs = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1017: FILE: drivers/mtd/onenand/onenand_base.c:2877:
+		if (!die || this->boundary[die-1] != maxbdry) {
 		                              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1023: FILE: drivers/mtd/onenand/onenand_base.c:2883:
+ 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1030: FILE: drivers/mtd/onenand/onenand_base.c:2890:
+ 1;$

CHECK:BRACES: braces {} should be used on all arms of this statement
#1034: FILE: drivers/mtd/onenand/onenand_base.c:2893:
+		if (this->boundary[die] != maxbdry) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1043: FILE: drivers/mtd/onenand/onenand_base.c:2901:
+		} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1051: FILE: drivers/mtd/onenand/onenand_base.c:2909:
+	printk(KERN_INFO "Device has %d eraseregions\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1053: FILE: drivers/mtd/onenand/onenand_base.c:2910:
+	printk(KERN_INFO "Device has %d eraseregions\n",
+	for (i = 0; i < mtd->numeraseregions; i++)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1054: FILE: drivers/mtd/onenand/onenand_base.c:2911:
+		printk(KERN_INFO "[offset: 0x%08x, erasesize: 0x%05x,"

WARNING:SPLIT_STRING: quoted string split across lines
#1055: FILE: drivers/mtd/onenand/onenand_base.c:2912:
+		printk(KERN_INFO "[offset: 0x%08x, erasesize: 0x%05x,"
+			 " numblocks: %04u]\n", mtd->eraseregions[i].offset,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1074: FILE: drivers/mtd/onenand/onenand_base.c:2931:
+static int flexonenand_set_boundary(struct mtd_info *mtd, unsigned die,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1075: FILE: drivers/mtd/onenand/onenand_base.c:2932:
+static int flexonenand_set_boundary(struct mtd_info *mtd, unsigned die,
+						int boundary, int lock)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1085: FILE: drivers/mtd/onenand/onenand_base.c:2942:
+	printk(KERN_INFO "Changing die %d boundary: %d%s\n", die, boundary,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1086: FILE: drivers/mtd/onenand/onenand_base.c:2943:
+	printk(KERN_INFO "Changing die %d boundary: %d%s\n", die, boundary,
+					 lock ? "(Locked)" : "(Unlocked)");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1088: FILE: drivers/mtd/onenand/onenand_base.c:2945:
+		printk(KERN_ERR "Invalid boundary value.\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#1088: FILE: drivers/mtd/onenand/onenand_base.c:2945:
+		printk(KERN_ERR "Invalid boundary value.\

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1094: FILE: drivers/mtd/onenand/onenand_base.c:2951:
+		printk(KERN_ERR "Die boundary is locked.\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#1094: FILE: drivers/mtd/onenand/onenand_base.c:2951:
+		printk(KERN_ERR "Die boundary is locked.\

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1114: FILE: drivers/mtd/onenand/onenand_base.c:2971:
+		printk(KERN_ERR "Failed PI write for Die %d\n", die);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1121: FILE: drivers/mtd/onenand/onenand_base.c:2978:
+		printk(KERN_ERR "Failed PI update for Die %d\n", die);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1123: FILE: drivers/mtd/onenand/onenand_base.c:2980:
+		printk(KERN_INFO "Done\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#1194: FILE: drivers/mtd/onenand/onenand_base.c:3079:
+	if (FLEXONENAND(this)) {
[...]
+	} else
[...]

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1195: FILE: drivers/mtd/onenand/onenand_base.c:3080:
+		unsigned die;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!this->boundary_locked[die]'
#1201: FILE: drivers/mtd/onenand/onenand_base.c:3086:
+			if ((!this->boundary_locked[die]) &&
+			   (boundary[die] >= 0) &&
+			   (boundary[die] != this->boundary[die]))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'boundary[die] >= 0'
#1201: FILE: drivers/mtd/onenand/onenand_base.c:3086:
+			if ((!this->boundary_locked[die]) &&
+			   (boundary[die] >= 0) &&
+			   (boundary[die] != this->boundary[die]))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'boundary[die] != this->boundary[die]'
#1201: FILE: drivers/mtd/onenand/onenand_base.c:3086:
+			if ((!this->boundary_locked[die]) &&
+			   (boundary[die] >= 0) &&
+			   (boundary[die] != this->boundary[die]))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1202: FILE: drivers/mtd/onenand/onenand_base.c:3087:
+			if ((!this->boundary_locked[die]) &&
+			   (boundary[die] >= 0) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1205: FILE: drivers/mtd/onenand/onenand_base.c:3090:
+				flexonenand_set_boundary(mtd, die,
+						 boundary[die], lock[die]);

CHECK:BRACES: Unbalanced braces around else statement
#1206: FILE: drivers/mtd/onenand/onenand_base.c:3091:
+	} else

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1258: FILE: drivers/mtd/onenand/onenand_bbt.c:63:
+	unsigned slc = 0;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1276: FILE: drivers/mtd/onenand/onenand_bbt.c:110:
+		if (FLEXONENAND(this)) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1281: FILE: drivers/mtd/onenand/onenand_bbt.c:115:
+		} else

CHECK:SPACING: No space is necessary after a cast
#1291: FILE: drivers/mtd/onenand/onenand_bbt.c:153:
+	block = (int) (onenand_get_block(mtd, offs, NULL) << 1);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mtd->numeraseregions > 1'
#1450: FILE: drivers/mtd/onenand/onenand_sim.c:345:
+		if (slc && (mtd->numeraseregions > 1))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mtd->numeraseregions > 1'
#1455: FILE: drivers/mtd/onenand/onenand_sim.c:350:
+		if (slc && (mtd->numeraseregions > 1))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!CONFIG_FLEXONENAND'
#1520: FILE: drivers/mtd/onenand/onenand_sim.c:500:
+	if (density < 2 && (!CONFIG_FLEXONENAND))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1559: FILE: include/linux/mtd/onenand.h:73:
+ * ^I^I^Iis locked and cannot be changed$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1568: FILE: include/linux/mtd/onenand.h:116:
+	unsigned		dies;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1569: FILE: include/linux/mtd/onenand.h:117:
+	unsigned		boundary[MAX_DIES];

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1570: FILE: include/linux/mtd/onenand.h:118:
+^Iunsigned int ^I^Iboundary_locked[MAX_DIES];$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'this' may be better as '(this)' to avoid precedence issues
#1583: FILE: include/linux/mtd/onenand.h:174:
+#define FLEXONENAND(this)						\
+	(this->device_id & DEVICE_IS_FLEXONENAND)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'this' may be better as '(this)' to avoid precedence issues
#1592: FILE: include/linux/mtd/onenand.h:184:
+#define ONENAND_IS_MLC(this)						\
+	(this->technology & ONENAND_TECHNOLOGY_IS_MLC)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1603: FILE: include/linux/mtd/onenand.h:223:
+unsigned onenand_get_block(struct mtd_info *mtd, loff_t addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1604: FILE: include/linux/mtd/onenand.h:224:
+unsigned onenand_get_block(struct mtd_info *mtd, loff_t addr,
+			 unsigned *isblkslc);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#1604: FILE: include/linux/mtd/onenand.h:224:
+			 unsigned *isblkslc);

CHECK:BIT_MACRO: Prefer using the BIT macro
#1615: FILE: include/linux/mtd/onenand_regs.h:70:
+#define DEVICE_IS_FLEXONENAND		(1 << 9)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#1627: FILE: include/linux/mtd/onenand_regs.h:92:
+#define ONENAND_TECHNOLOGY_IS_MLC	(1 << 0)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1684: FILE: include/mtd/mtd-abi.h:106:
+	uint32_t eccpos[128];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1696: FILE: include/mtd/mtd-abi.h:125:
+	uint32_t eccpos[128];

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000224929.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 44 warnings, 35 checks, 1437 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000224929.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
