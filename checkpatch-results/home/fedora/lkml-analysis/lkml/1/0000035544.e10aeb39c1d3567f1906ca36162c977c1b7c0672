WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
   git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip.git sched-fixes-for-linus

WARNING:SPACING: Unnecessary space before function pointer arguments
#118: FILE: include/linux/sched.h:1105:
+	void (*task_fork) (struct task_struct *p);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#127: FILE: include/linux/sched.h:1114:
+	unsigned int (*get_rr_interval) (struct rq *rq,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#160: FILE: include/linux/sched.h:1911:
+};
+extern enum sched_tunable_scaling sysctl_sched_tunable_scaling;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#171: FILE: include/linux/sched.h:1920:
+int sched_proc_update_handler(struct ctl_table *table, int write,
 		void __user *buffer, size_t *length,

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#222: FILE: kernel/cpu.c:396:
+	synchronize_sched();

Usage of a deprecated RCU API is detected.  It is recommended to replace
old flavourful RCU APIs by their new vanilla-RCU counterparts.

The full list of available RCU APIs can be viewed from the kernel docs.

See: https://www.kernel.org/doc/html/latest/RCU/whatisRCU.html#full-list-of-rcu-apis

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: kernel/cpuset.c:741:
+static int generate_sched_domains(cpumask_var_t **domains,
 			struct sched_domain_attr **attributes)

WARNING:TYPO_SPELLING: 'successfuly' may be misspelled - perhaps 'successfully'?
#355: FILE: kernel/sched.c:1827:
+	 * successfuly executed on another CPU. We must ensure that updates of
 	   ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#576: FILE: kernel/sched.c:5384:
+		runtime = min_t(u64, runtime, 2*sysctl_sched_migration_cost);
 		                               ^

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#848: FILE: kernel/sched_debug.c:312:
+static const char *sched_tunable_scaling_names[] = {

WARNING:TYPO_SPELLING: 'logaritmic' may be misspelled - perhaps 'logarithmic'?
#850: FILE: kernel/sched_debug.c:314:
+	"logaritmic",
 	 ^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#862: FILE: kernel/sched_debug.c:344:
+	SEQ_printf(m, "  .%-40s: %d (%s)\n", "sysctl_sched_tunable_scaling",
+		sysctl_sched_tunable_scaling,

WARNING:TYPO_SPELLING: 'logarithmical' may be misspelled - perhaps 'logarithmically'?
#916: FILE: kernel/sched_fair.c:47:
+ * SCHED_TUNABLESCALING_LOG - scaled logarithmical, *1+ilog(ncpus)
                                      ^^^^^^^^^^^^^

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#920: FILE: kernel/sched_fair.c:51:
+enum sched_tunable_scaling sysctl_sched_tunable_scaling
+	= SCHED_TUNABLESCALING_LOG;

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#945: FILE: kernel/sched_fair.c:403:
+int sched_proc_update_handler(struct ctl_table *table, int write,
 		void __user *buffer, size_t *lenp,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1042: FILE: kernel/sched_fair.c:1708:
+	if (sched_feat(WAKEUP_OVERLAP) &&
+			se->avg_overlap < sysctl_sched_migration_cost &&

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1251: FILE: kernel/sysctl.c:255:
+static int max_sched_tunable_scaling = SCHED_TUNABLESCALING_END-1;
                                                                ^

WARNING:DUPLICATED_SYSCTL_CONST: duplicated sysctl range checking value 'zero', consider using the shared one in include/linux/sysctl.h
#1321: FILE: kernel/sysctl.c:333:
+		.extra1		= &zero,

Commit d91bff3011cf ("proc/sysctl: add shared variables for range
check") added some shared const variables to be used instead of a local
copy in each source file.

Consider replacing the sysctl range checking value with the shared
one in include/linux/sysctl.h.  The following conversion scheme may
be used::

  &zero     ->  SYSCTL_ZERO
  &one      ->  SYSCTL_ONE
  &int_max  ->  SYSCTL_INT_MAX

See:

  1. https://lore.kernel.org/lkml/20190430180111.10688-1-mcroce@redhat.com/
  2. https://lore.kernel.org/lkml/20190531131422.14970-1-mcroce@redhat.com/

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000035544.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 9 checks, 1107 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000035544.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
