WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
And the empty cpuset should be removed (if it is flagged notify_on_release).

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#119: FILE: kernel/cpuset.c:2067:
+	int moved=0;
 	         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#159: FILE: kernel/cpuset.c:2106:
+static void remove_tasks_in_empty_cpusets_in_subtree(

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#165: FILE: kernel/cpuset.c:2112:
+	int npids, ple_used=0;
 	                   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#172: FILE: kernel/cpuset.c:2119:
+		remove_tasks_in_empty_cpusets_in_subtree(c, empty_list,
+					ple_array, ple_availp, ple_count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#182: FILE: kernel/cpuset.c:2129:
+		if (cpus_empty(c->cpus_allowed) ||
+		   nodes_empty(c->mems_allowed)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#206: FILE: kernel/cpuset.c:2153:
+			if (cpuset_path(c, path,
+				PAGE_SIZE-sizeof(struct path_list_element)) < 0)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#206: FILE: kernel/cpuset.c:2153:
+				PAGE_SIZE-sizeof(struct path_list_element)) < 0)
 				         ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "path"
#208: FILE: kernel/cpuset.c:2155:
+			if (path != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#256: FILE: kernel/cpuset.c:2196:
+		if (cpus_empty(c->cpus_allowed) ||
+		   nodes_empty(c->mems_allowed))

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#274: FILE: kernel/cpuset.c:2219:
+	int i, empty_count=0, ple_avail=0;
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#274: FILE: kernel/cpuset.c:2219:
+	int i, empty_count=0, ple_avail=0;
 	                               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#276: FILE: kernel/cpuset.c:2221:
+	struct path_list_element *ple, **ple_array=NULL;
 	                                          ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#295: FILE: kernel/cpuset.c:2237:
+		ple_array = kmalloc
+		   (empty_count*sizeof(struct empty_cpuset_list *), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#296: FILE: kernel/cpuset.c:2238:
+		   (empty_count*sizeof(struct empty_cpuset_list *), GFP_KERNEL);
 		               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#307: FILE: kernel/cpuset.c:2249:
+			ple_array[i]= ple;
 			            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#313: FILE: kernel/cpuset.c:2255:
+		remove_tasks_in_empty_cpusets_in_subtree(&top_cpuset,
+			&empty_cpuset_list, ple_array, &ple_avail, empty_count);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#329: FILE: kernel/cpuset.c:2271:
+		for (i = 0; i < empty_count; i++) {
+			kfree(ple_array[i]);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000453604.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 3 warnings, 9 checks, 276 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000453604.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
