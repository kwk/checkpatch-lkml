WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#60: 
      [S390] qdio: fix broken pointer in case of CONFIG_DEBUG_FS is disabled

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#302: FILE: arch/s390/kernel/smp.c:689:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#346: FILE: arch/s390/kernel/vdso.c:326:
+		BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#375: FILE: arch/s390/kvm/diag.c:51:
+	VCPU_EVENT(vcpu, 3, "requesting userspace resets %llx",
 	  vcpu->run->s390_reset_flags);

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#387: FILE: arch/s390/kvm/interrupt.c:163:
+		VCPU_EVENT(vcpu, 4, "interrupt: virtio parm:%x,parm64:%llx",
 		                                       ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#405: FILE: arch/s390/kvm/interrupt.c:494:
+		VM_EVENT(kvm, 5, "inject: virtio parm:%x,parm64:%llx",
 		                                 ^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#615: FILE: drivers/char/hvc_iucv.c:216:
+	 * HVC layer to hang up the tty device. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: No space is necessary after a cast
#633: FILE: drivers/char/hvc_iucv.c:267:
+		hvc_resize(priv->hvc, *((struct winsize *) rb->mbuf->data));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'communicaton' may be misspelled - perhaps 'communication'?
#672: FILE: drivers/char/hvc_iucv.c:336:
+ * If an existing IUCV communicaton path has been severed, -EPIPE is returned
                        ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'communicaton' may be misspelled - perhaps 'communication'?
#709: FILE: drivers/char/hvc_iucv.c:370:
+ * -EPIPE if an existing IUCV communicaton path has been severed.
                               ^^^^^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#741: FILE: drivers/char/hvc_iucv.c:393:
+	sb->mbuf->datalen = (u16) priv->sndbuf_len;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#750: FILE: drivers/char/hvc_iucv.c:402:
+		 * 0x03 (msg limit reached) by trying again... */

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#902: FILE: drivers/char/hvc_iucv.c:548:
+ * virtual or otherwise) has occured.
                              ^^^^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1036: FILE: drivers/char/hvc_iucv.c:724:
+		if (priv->is_console) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1039: FILE: drivers/char/hvc_iucv.c:727:
+		} else

CHECK:SPACING: No space is necessary after a cast
#1136: FILE: drivers/char/hvc_iucv.c:848:
+	priv->sndbuf = (void *) get_zeroed_page(GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#1153: FILE: drivers/char/hvc_iucv.c:862:
+		free_page((unsigned long) priv->sndbuf);

WARNING:SPLIT_STRING: quoted string split across lines
#1184: FILE: drivers/char/hvc_iucv.c:889:
+		pr_info("The z/VM IUCV HVC device driver cannot "
+			   "be used without z/VM\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1209: FILE: drivers/char/hvc_iucv.c:916:
+	 * (must be done before allocating hvc terminal devices) */

WARNING:SPLIT_STRING: quoted string split across lines
#1213: FILE: drivers/char/hvc_iucv.c:920:
+		pr_err("Registering HVC terminal device as "
+		       "Linux console failed\n");

WARNING:SPLIT_STRING: quoted string split across lines
#1225: FILE: drivers/char/hvc_iucv.c:929:
+			pr_err("Creating a new HVC terminal device "
+				"failed with error code=%d\n", rc);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1235: FILE: drivers/char/hvc_iucv.c:938:
+		pr_err("Registering IUCV handlers failed with error code=%d\n",
+			rc);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1363: FILE: drivers/s390/block/dasd_devmap.c:689:
+static ssize_t dasd_ff_store(struct device *dev, struct device_attribute *attr,
+	      const char *buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1373: FILE: drivers/s390/block/dasd_devmap.c:699:
+	val = simple_strtoul(buf, &endp, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val > 1'
#1374: FILE: drivers/s390/block/dasd_devmap.c:700:
+	if (((endp + 1) < (buf + count)) || (val > 1))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'dasd_ff_show' to 'failfast_show' 'dasd_ff_store' to 'failfast_store'
#1386: FILE: drivers/s390/block/dasd_devmap.c:712:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000183748.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 16 warnings, 10 checks, 1177 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000183748.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
