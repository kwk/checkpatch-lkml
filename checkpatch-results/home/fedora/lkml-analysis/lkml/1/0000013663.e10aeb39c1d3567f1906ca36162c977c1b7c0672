WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
> > first of all the patches are NOT for any kind of inclusion. It's not ready 

WARNING:TYPO_SPELLING: 'dependant' may be misspelled - perhaps 'dependent'?
#53: 
(dependant events). Not hard to implement but I didn't manage today.
 ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'analize' may be misspelled - perhaps 'analyze'?
#72: 
Hmm... I need to analize MSR matrix more close. Also it seems I forgot about
                 ^^^^^^^

WARNING:TYPO_SPELLING: 'wouldnt' may be misspelled - perhaps 'wouldn't'?
#76: 
> Core2 has, so it's not a big restriction at all), we wouldnt have to map all 
                                                       ^^^^^^^

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#233: FILE: arch/x86/kernel/cpu/perf_event.c:2469:
perf,x86: Introduce minimal Netburst PMU driver v2

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:BAD_SIGN_OFF: Duplicate signature
#248: 
Signed-off-by: Cyrill Gorcunov <gorcunov@openvz.org>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#259: FILE: arch/x86/include/asm/perf_p4.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'perfomance' may be misspelled - perhaps 'performance'?
#270: FILE: arch/x86/include/asm/perf_p4.h:12:
+ * NetBurst has perfomance MSRs shared between
                 ^^^^^^^^^^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#341: FILE: arch/x86/include/asm/perf_p4.h:83:
+#define P4_MAKE_EVENT_ATTR(class, name, bit)	class##_##name = (1 << bit)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'bit' may be better as '(bit)' to avoid precedence issues
#341: FILE: arch/x86/include/asm/perf_p4.h:83:
+#define P4_MAKE_EVENT_ATTR(class, name, bit)	class##_##name = (1 << bit)

CHECK:CAMELCASE: Avoid CamelCase: <RD_2ndL_HITS>
#779: FILE: arch/x86/include/asm/perf_p4.h:521:
+	P4_MAKE_EVENT_ATTR(P4_BSQ_CACHE_REFERENCE, RD_2ndL_HITS, 0),

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <RD_2ndL_HITE>
#780: FILE: arch/x86/include/asm/perf_p4.h:522:
+	P4_MAKE_EVENT_ATTR(P4_BSQ_CACHE_REFERENCE, RD_2ndL_HITE, 1),

CHECK:CAMELCASE: Avoid CamelCase: <RD_2ndL_HITM>
#781: FILE: arch/x86/include/asm/perf_p4.h:523:
+	P4_MAKE_EVENT_ATTR(P4_BSQ_CACHE_REFERENCE, RD_2ndL_HITM, 2),

CHECK:CAMELCASE: Avoid CamelCase: <RD_3rdL_HITS>
#782: FILE: arch/x86/include/asm/perf_p4.h:524:
+	P4_MAKE_EVENT_ATTR(P4_BSQ_CACHE_REFERENCE, RD_3rdL_HITS, 3),

CHECK:CAMELCASE: Avoid CamelCase: <RD_3rdL_HITE>
#783: FILE: arch/x86/include/asm/perf_p4.h:525:
+	P4_MAKE_EVENT_ATTR(P4_BSQ_CACHE_REFERENCE, RD_3rdL_HITE, 4),

CHECK:CAMELCASE: Avoid CamelCase: <RD_3rdL_HITM>
#784: FILE: arch/x86/include/asm/perf_p4.h:526:
+	P4_MAKE_EVENT_ATTR(P4_BSQ_CACHE_REFERENCE, RD_3rdL_HITM, 5),

CHECK:CAMELCASE: Avoid CamelCase: <RD_2ndL_MISS>
#785: FILE: arch/x86/include/asm/perf_p4.h:527:
+	P4_MAKE_EVENT_ATTR(P4_BSQ_CACHE_REFERENCE, RD_2ndL_MISS, 8),

CHECK:CAMELCASE: Avoid CamelCase: <RD_3rdL_MISS>
#786: FILE: arch/x86/include/asm/perf_p4.h:528:
+	P4_MAKE_EVENT_ATTR(P4_BSQ_CACHE_REFERENCE, RD_3rdL_MISS, 9),

CHECK:CAMELCASE: Avoid CamelCase: <WR_2ndL_MISS>
#787: FILE: arch/x86/include/asm/perf_p4.h:529:
+	P4_MAKE_EVENT_ATTR(P4_BSQ_CACHE_REFERENCE, WR_2ndL_MISS, 10),

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#986: FILE: arch/x86/kernel/cpu/perf_event.c:1263:
+struct p4_event_template p4_templates[] =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1056: FILE: arch/x86/kernel/cpu/perf_event.c:1333:
+static struct p4_event_template *p4_event_map[PERF_COUNT_HW_MAX] =
+{

WARNING:TYPO_SPELLING: 'Dependant' may be misspelled - perhaps 'Dependent'?
#1060: FILE: arch/x86/kernel/cpu/perf_event.c:1337:
+#if 0	/* Dependant events not yet supported */
      	   ^^^^^^^^^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1060: FILE: arch/x86/kernel/cpu/perf_event.c:1337:
+#if 0	/* Dependant events not yet supported */

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1088: FILE: arch/x86/kernel/cpu/perf_event.c:1365:
+	config |= p4_config_pack_cccr(P4_EVENT_UNPACK_SELECTOR(tpl->opcode) << P4_CCCR_ESCR_SELECT_SHIFT);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LINE_SPACING: Missing a blank line after declarations
#1164: FILE: arch/x86/kernel/cpu/perf_event.c:1441:
+		struct perf_event *event = cpuc->events[idx];
+		if (!test_bit(idx, cpuc->active_mask))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#1205: FILE: arch/x86/kernel/cpu/perf_event.c:1482:
+		struct perf_event *event = cpuc->events[idx];
+		if (!test_bit(idx, cpuc->active_mask))

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1307: FILE: arch/x86/kernel/cpu/perf_event.c:1584:
+static unsigned int p4_escr_map[ARCH_P4_TOTAL_ESCR] =
+{

WARNING:LINE_SPACING: Missing a blank line after declarations
#1396: FILE: arch/x86/kernel/cpu/perf_event.c:1673:
+		unsigned int escr_idx;
+		hwc = &cpuc->event_list[i]->hw;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1412: FILE: arch/x86/kernel/cpu/perf_event.c:1689:
+		if (test_bit(tpl->cntr[thread], used_mask) ||
+			test_bit(escr_idx, escr_mask))

WARNING:MISPLACED_INIT: __initconst should be placed after p4_pmu
#1441: FILE: arch/x86/kernel/cpu/perf_event.c:1718:
+static __initconst struct x86_pmu p4_pmu = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

ERROR:INIT_ATTRIBUTE: Use of __initconst requires a separate use of const
#1441: FILE: arch/x86/kernel/cpu/perf_event.c:1718:
+static __initconst struct x86_pmu p4_pmu = {

Const init definitions should use __initconst instead of
__initdata.

Similarly init definitions without const require a separate
use of const.

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#1549: FILE: arch/x86/kernel/cpu/perf_event.c:3015:
+		pr_cont("unsupported Netburst CPU model %d ",

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#1554: FILE: arch/x86/kernel/cpu/perf_event.c:3020:
+	pr_cont("Netburst events, ");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000013663.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 16 warnings, 11 checks, 1418 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000013663.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
