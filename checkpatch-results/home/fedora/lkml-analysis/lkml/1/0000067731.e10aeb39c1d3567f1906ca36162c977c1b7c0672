WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
           gedit-4941  [000]   457.735437: lock_kernel: depth: 0, fs/reiserfs/namei.c:334 reiserfs_lookup()

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#104: FILE: kernel/trace/trace.h:720:
+^Ifilter_pred_fn_t ^Ifn;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#105: FILE: kernel/trace/trace.h:721:
+^Iu64 ^I^I^Ival;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#107: FILE: kernel/trace/trace.h:723:
+^Ichar ^I^I^I*field_name;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#108: FILE: kernel/trace/trace.h:724:
+^Iint ^I^I^Ioffset;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#109: FILE: kernel/trace/trace.h:725:
+^Iint ^I^I^Inot;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#110: FILE: kernel/trace/trace.h:726:
+^Iint ^I^I^Iop;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#111: FILE: kernel/trace/trace.h:727:
+^Iint ^I^I^Ipop_n;$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ptr[r->len] == 0'
#185: FILE: kernel/trace/trace_events_filter.c:277:
+	if (ptr && (ptr[r->len] == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: braces {} should be used on all arms of this statement
#214: FILE: kernel/trace/trace_events_filter.c:306:
+	if (buff[0] == '!') {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#218: FILE: kernel/trace/trace_events_filter.c:310:
+	} else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#306: FILE: kernel/trace/trace_events_filter.c:788:
+		} else if (field->filter_type == FILTER_DYN_STRING)
+				fn = filter_pred_strloc;

WARNING:CONSIDER_KSTRTO: strict_strtoll is obsolete, use kstrtoll instead
#316: FILE: kernel/trace/trace_events_filter.c:796:
+			ret = strict_strtoll(pred->regex.pattern, 0, &val);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: strict_strtoull is obsolete, use kstrtoull instead
#319: FILE: kernel/trace/trace_events_filter.c:798:
+			ret = strict_strtoull(pred->regex.pattern, 0, &val);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000067731.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 11 warnings, 3 checks, 246 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000067731.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
