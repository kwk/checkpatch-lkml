CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#31: 
Ilpo Järvinen wrote:
      ^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
>> kernel BUG at /home/legoater/linux/2.6.24-rc4-mm1/include/net/tcp.h:1480!

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#81: 
Signed-off-by: Ilpo Järvinen <ilpo.jarvinen@helsinki.fi>
                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: include/net/tcp.h:1340:
+       unsigned int fc = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: include/net/tcp.h:1342:
+       if (prev == (struct sk_buff *)&sk->sk_write_queue)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#96: FILE: include/net/tcp.h:1342:
+       if (prev == (struct sk_buff *)&sk->sk_write_queue)
+               prev = NULL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: include/net/tcp.h:1343:
+               prev = NULL;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: include/net/tcp.h:1343:
+               prev = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: include/net/tcp.h:1344:
+       else if (!tcp_skb_adjacent(sk, prev, skb))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#98: FILE: include/net/tcp.h:1344:
+       else if (!tcp_skb_adjacent(sk, prev, skb))
+               prev = NULL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: include/net/tcp.h:1345:
+               prev = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: include/net/tcp.h:1345:
+               prev = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: include/net/tcp.h:1347:
+       if ((prev == NULL) && !__tcp_write_queue_empty(sk, TCP_WQ_SACKED))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#104: FILE: include/net/tcp.h:1347:
+       if ((prev == NULL) && !__tcp_write_queue_empty(sk, TCP_WQ_SACKED))
+               prev = __tcp_write_queue_tail(sk, TCP_WQ_SACKED);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'prev == NULL'
#104: FILE: include/net/tcp.h:1347:
+       if ((prev == NULL) && !__tcp_write_queue_empty(sk, TCP_WQ_SACKED))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!prev"
#104: FILE: include/net/tcp.h:1347:
+       if ((prev == NULL) && !__tcp_write_queue_empty(sk, TCP_WQ_SACKED))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: include/net/tcp.h:1348:
+               prev = __tcp_write_queue_tail(sk, TCP_WQ_SACKED);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: include/net/tcp.h:1348:
+               prev = __tcp_write_queue_tail(sk, TCP_WQ_SACKED);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: include/net/tcp.h:1350:
+       if (prev != NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#107: FILE: include/net/tcp.h:1350:
+       if (prev != NULL)
+               fc = TCP_SKB_CB(prev)->fack_count + tcp_skb_pcount(prev);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "prev"
#107: FILE: include/net/tcp.h:1350:
+       if (prev != NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: include/net/tcp.h:1351:
+               fc = TCP_SKB_CB(prev)->fack_count + tcp_skb_pcount(prev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: include/net/tcp.h:1351:
+               fc = TCP_SKB_CB(prev)->fack_count + tcp_skb_pcount(prev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: include/net/tcp.h:1353:
+       TCP_SKB_CB(skb)->fack_count = fc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: include/net/tcp.h:1477:
+       if (prev != NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#119: FILE: include/net/tcp.h:1477:
+       if (prev != NULL)
                fc = TCP_SKB_CB(*prev)->fack_count + tcp_skb_pcount(*prev);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "prev"
#119: FILE: include/net/tcp.h:1477:
+       if (prev != NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: include/net/tcp.h:1534:
+       do {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#128: FILE: include/net/tcp.h:1534:
+       do {
[...]
                if (skb[queue] == NULL) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: include/net/tcp.h:1548:
+       } while (skb[queue] != __tcp_write_queue_tail(sk, queue));$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000347239.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 20 warnings, 6 checks, 47 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000347239.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
