WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
Add support functions to allow the creation and destruction of virtual compound

WARNING:TYPO_SPELLING: 'unecessary' may be misspelled - perhaps 'unnecessary'?
#46: 
atomic context but those are unecessary at this early stage).
                             ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#71: FILE: include/linux/vmalloc.h:97:
+void free_vcompound(struct page *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#122: FILE: mm/vmalloc.c:1026:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <__ClearPageVcompound>
#135: FILE: mm/vmalloc.c:1039:
+	__ClearPageVcompound(pages[0]);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LINE_SPACING: Missing a blank line after declarations
#140: FILE: mm/vmalloc.c:1044:
+		struct page *page = pages[i];
+		BUG_ON(!PageTail(page) || !PageVcompound(page));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#140: FILE: mm/vmalloc.c:1044:
+		BUG_ON(!PageTail(page) || !PageVcompound(page));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#157: FILE: mm/vmalloc.c:1061:
+	BUG_ON((!PageVcompound(page) || !PageHead(page)));

CHECK:BRACES: braces {} should be used on all arms of this statement
#162: FILE: mm/vmalloc.c:1066:
+	if (!preemptible()) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#169: FILE: mm/vmalloc.c:1073:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#173: FILE: mm/vmalloc.c:1077:
+
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#178: FILE: mm/vmalloc.c:1082:
+	if (unlikely(is_vmalloc_addr(addr)))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#180: FILE: mm/vmalloc.c:1084:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#195: FILE: mm/vmalloc.c:1099:
+static struct vm_struct *____alloc_vcompound(gfp_t gfp_mask, unsigned long order,
+								void *caller)

CHECK:CAMELCASE: Avoid CamelCase: <__SetPageVcompound>
#214: FILE: mm/vmalloc.c:1118:
+		__SetPageVcompound(page);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#219: FILE: mm/vmalloc.c:1123:
+	vm = __get_vm_area_node(nr_pages << PAGE_SHIFT, VM_VCOMPOUND,
+		VMALLOC_START, VMALLOC_END, -1, gfp_mask, caller);

CHECK:CAMELCASE: Avoid CamelCase: <__SetPageTail>
#234: FILE: mm/vmalloc.c:1138:
+		__SetPageTail(page);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000305253.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 11 checks, 220 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000305253.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
