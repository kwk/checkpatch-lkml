CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#145: FILE: arch/x86/kernel/i386_ksyms_32.c:5:
+#include <asm/pgtable.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#250: FILE: arch/x86/kernel/pci-dma_64.c:15:
+int iommu_merge __read_mostly = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#262: FILE: arch/x86/kernel/traps_32.c:286:
+	printk("Pid: %d, comm: %.20s %s %s %.*s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#263: FILE: arch/x86/kernel/traps_32.c:287:
+	printk("Pid: %d, comm: %.20s %s %s %.*s\n",
+		current->pid, current->comm, print_tainted(),

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#296: FILE: arch/x86/kernel/traps_64.c:405:
+	printk("Pid: %d, comm: %.20s %s %s %.*s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#297: FILE: arch/x86/kernel/traps_64.c:406:
+	printk("Pid: %d, comm: %.20s %s %s %.*s\n",
+		current->pid, current->comm, print_tainted(),

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#369: FILE: include/asm-x86/acpi.h:1:
+#ifndef _ASM_X86_ACPI_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/processor.h> instead of <asm/processor.h>
#378: FILE: include/asm-x86/acpi.h:10:
+#include <asm/processor.h>

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#438: FILE: kernel/time/ntp.c:255:
+		if (txc->modes != ADJ_OFFSET_SINGLESHOT &&
+					txc->modes != ADJ_OFFSET_SS_READ)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'txc->modes == ADJ_OFFSET_SINGLESHOT'
#449: FILE: kernel/time/ntp.c:377:
+	if ((txc->modes == ADJ_OFFSET_SINGLESHOT) ||
+			(txc->modes == ADJ_OFFSET_SS_READ))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'txc->modes == ADJ_OFFSET_SS_READ'
#449: FILE: kernel/time/ntp.c:377:
+	if ((txc->modes == ADJ_OFFSET_SINGLESHOT) ||
+			(txc->modes == ADJ_OFFSET_SS_READ))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#450: FILE: kernel/time/ntp.c:378:
+	if ((txc->modes == ADJ_OFFSET_SINGLESHOT) ||
+			(txc->modes == ADJ_OFFSET_SS_READ))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000353942.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 4 warnings, 7 checks, 255 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000353942.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
