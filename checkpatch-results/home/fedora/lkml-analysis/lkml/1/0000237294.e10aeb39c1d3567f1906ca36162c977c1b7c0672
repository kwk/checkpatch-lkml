WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#80: FILE: arch/x86/mm/pageattr.c:202:
+	BUG_ON(irqs_disabled());

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: No space is necessary after a cast
#106: FILE: arch/x86/mm/pageattr.c:228:
+			clflush_cache_range((void *) *addr, PAGE_SIZE);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#186: FILE: arch/x86/mm/pageattr.c:729:
+	if (!(within(vaddr, PAGE_OFFSET,
 		    PAGE_OFFSET + (max_low_pfn_mapped << PAGE_SHIFT))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#189: FILE: arch/x86/mm/pageattr.c:731:
 #ifdef CONFIG_X86_64
+		|| within(vaddr, PAGE_OFFSET + (1UL<<32),

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#189: FILE: arch/x86/mm/pageattr.c:731:
+		|| within(vaddr, PAGE_OFFSET + (1UL<<32),
 		                                   ^

CHECK:SPACING: No space is necessary after a cast
#196: FILE: arch/x86/mm/pageattr.c:737:
+		temp_cpa_vaddr = (unsigned long) __va(cpa->pfn << PAGE_SHIFT);

CHECK:SPACING: No space is necessary after a cast
#208: FILE: arch/x86/mm/pageattr.c:752:
+	if (within(vaddr, (unsigned long) _text, (unsigned long) _end))

WARNING:LINE_SPACING: Missing a blank line after declarations
#279: FILE: arch/x86/mm/pageattr.c:848:
+		int i;
+		for (i = 0; i < numpages; i++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#319: FILE: arch/x86/mm/pageattr.c:893:
+	if (!ret && cpu_has_clflush) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#324: FILE: arch/x86/mm/pageattr.c:898:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#376: FILE: arch/x86/mm/pageattr.c:951:
+		if (reserve_memtype(addr[i], addr[i] + PAGE_SIZE,
+			    _PAGE_CACHE_UC_MINUS, NULL))

WARNING:LINE_SPACING: Missing a blank line after declarations
#416: FILE: arch/x86/mm/pageattr.c:1000:
+	int i;
+	for (i = 0; i < addrinarray; i++)

CHECK:SPACING: No space is necessary after a cast
#470: FILE: arch/x86/mm/pageattr.c:1091:
+	unsigned long tempaddr = (unsigned long) page_address(page);

CHECK:SPACING: No space is necessary after a cast
#484: FILE: arch/x86/mm/pageattr.c:1103:
+	unsigned long tempaddr = (unsigned long) page_address(page);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000237294.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 11 checks, 430 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000237294.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
