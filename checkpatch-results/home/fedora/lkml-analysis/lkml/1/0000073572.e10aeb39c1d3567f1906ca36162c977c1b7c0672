WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
master.kernel.org:/pub/scm/linux/kernel/git/jgarzik/libata-dev.git upstream-linus

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#194: FILE: drivers/ata/Kconfig:29:
+config ATA_VERBOSE_ERROR
+	bool "Verbose ATA error reporting"
+	default y
+	help
+	  This option adds parsing of ATA command descriptions and error bits
+	  in libata kernel output, making it easier to interpret.
+	  This option will enlarge the kernel by approx. 6KB. Disable it only

Kconfig symbols should have a help text which fully describes
it.

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'ahci_show_host_caps' to 'ahci_host_caps_show'
#252: FILE: drivers/ata/ahci.c:339:
+DEVICE_ATTR(ahci_host_caps, S_IRUGO, ahci_show_host_caps, NULL);

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#252: FILE: drivers/ata/ahci.c:339:
+DEVICE_ATTR(ahci_host_caps, S_IRUGO, ahci_show_host_caps, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'ahci_show_host_version' to 'ahci_host_version_show'
#253: FILE: drivers/ata/ahci.c:340:
+DEVICE_ATTR(ahci_host_version, S_IRUGO, ahci_show_host_version, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#253: FILE: drivers/ata/ahci.c:340:
+DEVICE_ATTR(ahci_host_version, S_IRUGO, ahci_show_host_version, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'ahci_show_port_cmd' to 'ahci_port_cmd_show'
#254: FILE: drivers/ata/ahci.c:341:
+DEVICE_ATTR(ahci_port_cmd, S_IRUGO, ahci_show_port_cmd, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#254: FILE: drivers/ata/ahci.c:341:
+DEVICE_ATTR(ahci_port_cmd, S_IRUGO, ahci_show_port_cmd, NULL);

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#286: FILE: drivers/ata/ahci.c:728:
+	struct Scsi_Host *shost = class_to_shost(dev);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#294: FILE: drivers/ata/ahci.c:736:
+static ssize_t ahci_show_host_version(struct device *dev,
+				   struct device_attribute *attr, char *buf)

WARNING:PREFER_DEV_LEVEL: Prefer dev_warn(... to dev_printk(KERN_WARNING, ...
#467: FILE: drivers/ata/ahci.c:2710:
+		dev_printk(KERN_WARNING, &pdev->dev, "%s: BIOS too old, "

WARNING:SPLIT_STRING: quoted string split across lines
#468: FILE: drivers/ata/ahci.c:2711:
+		dev_printk(KERN_WARNING, &pdev->dev, "%s: BIOS too old, "
+			   "forcing 32bit DMA, update BIOS\n", match->ident);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:BRACES: Unbalanced braces around else statement
#469: FILE: drivers/ata/ahci.c:2712:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_DEV_LEVEL: Prefer dev_warn(... to dev_printk(KERN_WARNING, ...
#470: FILE: drivers/ata/ahci.c:2713:
+		dev_printk(KERN_WARNING, &pdev->dev, "%s: this board can't "

WARNING:SPLIT_STRING: quoted string split across lines
#471: FILE: drivers/ata/ahci.c:2714:
+		dev_printk(KERN_WARNING, &pdev->dev, "%s: this board can't "
+			   "do 64bit DMA, forcing 32bit\n", match->ident);

WARNING:SPLIT_STRING: quoted string split across lines
#534: FILE: drivers/ata/libata-core.c:714:
+			ata_dev_printk(dev, KERN_WARNING, "device reported "
+				       "invalid CHS sector 0\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#548: FILE: drivers/ata/libata-core.c:2309:
+static int ata_dev_config_ncq(struct ata_device *dev,
 			       char *desc, size_t desc_sz)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#571: FILE: drivers/ata/libata-core.c:2330:
+	if (!(dev->horkage & ATA_HORKAGE_BROKEN_FPDMA_AA) &&
+		(ap->flags & ATA_FLAG_FPDMA_AA) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#574: FILE: drivers/ata/libata-core.c:2333:
+		err_mask = ata_dev_set_feature(dev, SETFEATURES_SATA_ENABLE,
+			SATA_FPDMA_AA);

CHECK:BRACES: braces {} should be used on all arms of this statement
#575: FILE: drivers/ata/libata-core.c:2334:
+		if (err_mask) {
[...]
+		} else
[...]

WARNING:SPLIT_STRING: quoted string split across lines
#577: FILE: drivers/ata/libata-core.c:2336:
+			ata_dev_printk(dev, KERN_ERR, "failed to enable AA"
+				"(error_mask=0x%x)\n", err_mask);

CHECK:BRACES: Unbalanced braces around else statement
#582: FILE: drivers/ata/libata-core.c:2341:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#592: FILE: drivers/ata/libata-core.c:2349:
+		snprintf(desc, desc_sz, "NCQ (depth %d/%d)%s", hdepth,
+			ddepth, aa_desc);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#672: FILE: drivers/ata/libata-eh.c:2134:
+^I^I{ ATA_CMD_CHK_POWER, ^I^I"CHECK POWER MODE" },$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#673: FILE: drivers/ata/libata-eh.c:2135:
+^I^I{ ATA_CMD_STANDBY, ^I^I"STANDBY" },$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#674: FILE: drivers/ata/libata-eh.c:2136:
+^I^I{ ATA_CMD_IDLE, ^I^I"IDLE" },$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#675: FILE: drivers/ata/libata-eh.c:2137:
+^I^I{ ATA_CMD_EDD, ^I^I^I"EXECUTE DEVICE DIAGNOSTIC" },$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#676: FILE: drivers/ata/libata-eh.c:2138:
+^I^I{ ATA_CMD_DOWNLOAD_MICRO,   ^I"DOWNLOAD MICROCODE" },$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#678: FILE: drivers/ata/libata-eh.c:2140:
+^I^I{ ATA_CMD_FLUSH, ^I^I"FLUSH CACHE" },$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#679: FILE: drivers/ata/libata-eh.c:2141:
+^I^I{ ATA_CMD_FLUSH_EXT, ^I^I"FLUSH CACHE EXT" },$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#680: FILE: drivers/ata/libata-eh.c:2142:
+^I^I{ ATA_CMD_ID_ATA,  ^I^I"IDENTIFY DEVICE" },$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#681: FILE: drivers/ata/libata-eh.c:2143:
+^I^I{ ATA_CMD_ID_ATAPI, ^I^I"IDENTIFY PACKET DEVICE" },$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#682: FILE: drivers/ata/libata-eh.c:2144:
+^I^I{ ATA_CMD_SERVICE, ^I^I"SERVICE" },$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#683: FILE: drivers/ata/libata-eh.c:2145:
+^I^I{ ATA_CMD_READ, ^I^I"READ DMA" },$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#684: FILE: drivers/ata/libata-eh.c:2146:
+^I^I{ ATA_CMD_READ_EXT, ^I^I"READ DMA EXT" },$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#685: FILE: drivers/ata/libata-eh.c:2147:
+^I^I{ ATA_CMD_READ_QUEUED, ^I^I"READ DMA QUEUED" },$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#686: FILE: drivers/ata/libata-eh.c:2148:
+^I^I{ ATA_CMD_READ_STREAM_EXT, ^I"READ STREAM EXT" },$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#688: FILE: drivers/ata/libata-eh.c:2150:
+^I^I{ ATA_CMD_WRITE, ^I^I"WRITE DMA" },$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#689: FILE: drivers/ata/libata-eh.c:2151:
+^I^I{ ATA_CMD_WRITE_EXT, ^I^I"WRITE DMA EXT" },$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#690: FILE: drivers/ata/libata-eh.c:2152:
+^I^I{ ATA_CMD_WRITE_QUEUED, ^I"WRITE DMA QUEUED EXT" },$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#691: FILE: drivers/ata/libata-eh.c:2153:
+^I^I{ ATA_CMD_WRITE_STREAM_EXT, ^I"WRITE STREAM EXT" },$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#705: FILE: drivers/ata/libata-eh.c:2167:
+^I^I{ ATA_CMD_WRITE_MULTI_FUA_EXT, ^I"WRITE MULTIPLE FUA EXT" },$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#722: FILE: drivers/ata/libata-eh.c:2184:
+^I^I{ ATA_CMD_WRITE_LOG_DMA_EXT, ^I"WRITE LOG DMA EXT" },$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#724: FILE: drivers/ata/libata-eh.c:2186:
+^I^I{ ATA_CMD_TRUSTED_RCV_DMA, ^I"TRUSTED RECEIVE DMA" },$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#726: FILE: drivers/ata/libata-eh.c:2188:
+^I^I{ ATA_CMD_TRUSTED_SND_DMA, ^I"TRUSTED SEND DMA" },$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#740: FILE: drivers/ata/libata-eh.c:2202:
+^I^I{ ATA_CMD_CHK_MED_CRD_TYP, ^I"CHECK MEDIA CARD TYPE" },$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#741: FILE: drivers/ata/libata-eh.c:2203:
+^I^I{ ATA_CMD_CFA_REQ_EXT_ERR, ^I"CFA REQUEST EXTENDED ERROR" },$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#745: FILE: drivers/ata/libata-eh.c:2207:
+^I^I{ ATA_CMD_CFA_WRITE_MULT_NE, ^I"CFA WRITE MULTIPLE WITHOUT ERASE" },$

WARNING:LINE_SPACING: Missing a blank line after declarations
#755: FILE: drivers/ata/libata-eh.c:2217:
+	unsigned int i;
+	for (i = 0; cmd_descr[i].text; i++)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#794: FILE: drivers/ata/libata-eh.c:2349:
+				snprintf(cdb_buf, sizeof(cdb_buf),
 				 "cdb %02x %02x %02x %02x %02x %02x %02x %02x  "

WARNING:LINE_SPACING: Missing a blank line after declarations
#802: FILE: drivers/ata/libata-eh.c:2357:
+			const char *descr = ata_get_cmd_descript(cmd->command);
+			if (descr)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#804: FILE: drivers/ata/libata-eh.c:2359:
+				ata_dev_printk(qc->dev, KERN_ERR,
+					"failed command: %s\n", descr);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#1180: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1185: FILE: drivers/ata/pata_rdc.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1205: FILE: drivers/ata/pata_rdc.c:21:
+ *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#1288: FILE: drivers/ata/pata_rdc.c:104:
+	unsigned int master_port= ap->port_no ? 0x42 : 0x40;
 	                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1342: FILE: drivers/ata/pata_rdc.c:158:
+	/* Ensure the UDMA bit is off - it will be turned back on if
+	   UDMA is selected */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1342: FILE: drivers/ata/pata_rdc.c:158:
+	   UDMA is selected */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1430: FILE: drivers/ata/pata_rdc.c:246:
+		/* If the drive MWDMA is faster than it can do PIO then
+		   we must force PIO into PIO0 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1430: FILE: drivers/ata/pata_rdc.c:246:
+		   we must force PIO into PIO0 */

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1442: FILE: drivers/ata/pata_rdc.c:258:
+			slave_data |= ((timings[pio][0] << 2) | timings[pio][1]) << (ap->port_no ? 4 : 0);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1444: FILE: drivers/ata/pata_rdc.c:260:
+^I^I} else { ^I/* Master */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1446: FILE: drivers/ata/pata_rdc.c:262:
+			master_data &= 0xCCF4;	/* Mask out IORDY|TIME1|DMAONLY
+						   and master timing bits */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1446: FILE: drivers/ata/pata_rdc.c:262:
+						   and master timing bits */

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1468: FILE: drivers/ata/pata_rdc.c:284:
+static struct ata_port_info rdc_port_info = {
+

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1495: FILE: drivers/ata/pata_rdc.c:311:
+static int __devinit rdc_init_one(struct pci_dev *pdev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1496: FILE: drivers/ata/pata_rdc.c:312:
+static int __devinit rdc_init_one(struct pci_dev *pdev,
+				   const struct pci_device_id *ent)

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#1508: FILE: drivers/ata/pata_rdc.c:324:
+		dev_printk(KERN_DEBUG, &pdev->dev,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1566: FILE: drivers/ata/pata_rdc.c:382:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg_once([subsystem]dev, ... then dev_dbg_once(dev, ... then pr_debug_once(...  to printk_once(KERN_DEBUG ...
#1603: FILE: drivers/ata/pata_rz1000.c:95:
+	printk_once(KERN_DEBUG DRV_NAME " version " DRV_VERSION "\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#1679: FILE: drivers/ata/sata_sil24.c:851:
+			u16 prot = 0;
+			ctrl = PRB_CTRL_PROTOCOL;

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1909: FILE: drivers/firmware/dmi_scan.c:611:
+	year = simple_strtoul(y, &e, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1919: FILE: drivers/firmware/dmi_scan.c:621:
+	month = simple_strtoul(s, &e, 10);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1927: FILE: drivers/firmware/dmi_scan.c:628:
+	day = simple_strtoul(s, &e, 10);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1962: FILE: drivers/pci/quirks.c:993:
 static void __devinit quirk_amd_ide_mode(struct pci_dev *pdev)

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1974: FILE: drivers/pci/quirks.c:1015:
+DECLARE_PCI_FIXUP_RESUME_EARLY(PCI_VENDOR_ID_AMD, PCI_DEVICE_ID_AMD_SB900_SATA_IDE, quirk_amd_ide_mode);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'id' - possible side-effects?
#2064: FILE: include/linux/ata.h:559:
+#define ata_id_has_fpdma_aa(id)	\
+	( (((id)[76] != 0x0000) && ((id)[76] != 0xffff)) && \
+	  ((id)[78] & (1 << 2)) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#2065: FILE: include/linux/ata.h:560:
+	( (((id)[76] != 0x0000) && ((id)[76] != 0xffff)) && \

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2066: FILE: include/linux/ata.h:561:
+	  ((id)[78] & (1 << 2)) )

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2079: FILE: include/linux/dmi.h:46:
+extern bool dmi_get_date(int field, int *yearp, int *monthp, int *dayp);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000073572.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 60 warnings, 16 checks, 1821 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000073572.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
