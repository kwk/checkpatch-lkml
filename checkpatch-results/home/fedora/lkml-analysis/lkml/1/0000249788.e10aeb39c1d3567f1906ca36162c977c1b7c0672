WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '7fa897b91a3ea0f16c2873b869d7a0eef05acff4', maybe rebased or not pulled?
#33: 
commit 7fa897b91a3ea0f16c2873b869d7a0eef05acff4

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#39: 
    Signed-off-by: Harvey Harrison <harvey.harrison@gmail.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#40: 
    Signed-off-by: Bartlomiej Zolnierkiewicz <bzolnier@gmail.com>

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#108: FILE: include/linux/byteorder/big_endian.h:97:
+#define __cpu_to_be64s(x) do { (void)(x); } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#109: FILE: include/linux/byteorder/big_endian.h:98:
+#define __be64_to_cpus(x) do { (void)(x); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#110: FILE: include/linux/byteorder/big_endian.h:99:
+#define __cpu_to_be32s(x) do { (void)(x); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#111: FILE: include/linux/byteorder/big_endian.h:100:
+#define __be32_to_cpus(x) do { (void)(x); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#112: FILE: include/linux/byteorder/big_endian.h:101:
+#define __cpu_to_be16s(x) do { (void)(x); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#113: FILE: include/linux/byteorder/big_endian.h:102:
+#define __be16_to_cpus(x) do { (void)(x); } while (0)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#131: FILE: include/linux/byteorder/little_endian.h:91:
 }
+#define __cpu_to_le64s(x) do { (void)(x); } while (0)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#131: FILE: include/linux/byteorder/little_endian.h:91:
+#define __cpu_to_le64s(x) do { (void)(x); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#132: FILE: include/linux/byteorder/little_endian.h:92:
+#define __le64_to_cpus(x) do { (void)(x); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#133: FILE: include/linux/byteorder/little_endian.h:93:
+#define __cpu_to_le32s(x) do { (void)(x); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#134: FILE: include/linux/byteorder/little_endian.h:94:
+#define __le32_to_cpus(x) do { (void)(x); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#135: FILE: include/linux/byteorder/little_endian.h:95:
+#define __cpu_to_le16s(x) do { (void)(x); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#136: FILE: include/linux/byteorder/little_endian.h:96:
+#define __le16_to_cpus(x) do { (void)(x); } while (0)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000249788.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 15 warnings, 1 checks, 48 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000249788.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
