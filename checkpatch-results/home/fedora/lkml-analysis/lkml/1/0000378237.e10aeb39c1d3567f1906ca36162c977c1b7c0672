WARNING:TYPO_SPELLING: 'fetaures' may be misspelled - perhaps 'features'?
#34: 
Changed fetaures:
        ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'extenions' may be misspelled - perhaps 'extension'?
#55: FILE: drivers/usb/serial/ch341.c:5:
+ * for changes/extenions regarding universal baud rate capability and modem
                ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#56: FILE: drivers/usb/serial/ch341.c:6:
+ * line control/status routines. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#69: FILE: drivers/usb/serial/ch341.c:32:
+#define CH341_BIT_RTS (1 << 6)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#70: FILE: drivers/usb/serial/ch341.c:33:
+#define CH341_BIT_DTR (1 << 5)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#84: FILE: drivers/usb/serial/ch341.c:47:
+/* status returned in third interrupt answer byte, inverted in data from irq $

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#85: FILE: drivers/usb/serial/ch341.c:47:
*/

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#86: FILE: drivers/usb/serial/ch341.c:48:
+/* status returned in third interrupt answer byte, inverted in data from irq 
+#define CH341_BIT_CTS 0x01

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: drivers/usb/serial/ch341.c:63:
+       { USB_DEVICE(0x4348, 0x5523) },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: drivers/usb/serial/ch341.c:64:
+       { },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: drivers/usb/serial/ch341.c:69:
+    spinlock_t lock; /* access lock */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#113: FILE: drivers/usb/serial/ch341.c:70:
+    wait_queue_head_t delta_msr_wait; /* wait queue for modem status */    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: drivers/usb/serial/ch341.c:70:
+    wait_queue_head_t delta_msr_wait; /* wait queue for modem status */    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: drivers/usb/serial/ch341.c:71:
+    unsigned baud_rate; /* set baud rate */$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#114: FILE: drivers/usb/serial/ch341.c:71:
+    unsigned baud_rate; /* set baud rate */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: drivers/usb/serial/ch341.c:72:
+    u8 line_control; /* set line control value RTS/DTR */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: drivers/usb/serial/ch341.c:73:
+    u8 line_status; /* active status of modem control inputs */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: drivers/usb/serial/ch341.c:74:
+    u8 multi_status_change; /* status changed multiple since last call */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: drivers/usb/serial/ch341.c:78:
+                            u16 value, u16 index)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: drivers/usb/serial/ch341.c:78:
+                            u16 value, u16 index)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: drivers/usb/serial/ch341.c:80:
+       int r;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#128: FILE: drivers/usb/serial/ch341.c:81:
+       int r;
+       dbg("ch341_control_out(%02x,%02x,%04x,%04x)", USB_DIR_OUT|0x40,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: drivers/usb/serial/ch341.c:81:
+       dbg("ch341_control_out(%02x,%02x,%04x,%04x)", USB_DIR_OUT|0x40,$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#128: FILE: drivers/usb/serial/ch341.c:81:
+       dbg("ch341_control_out(%02x,%02x,%04x,%04x)", USB_DIR_OUT|0x40,
                                                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#129: FILE: drivers/usb/serial/ch341.c:82:
+               (int)request, (int)value, (int)index);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#129: FILE: drivers/usb/serial/ch341.c:82:
+       dbg("ch341_control_out(%02x,%02x,%04x,%04x)", USB_DIR_OUT|0x40,
+               (int)request, (int)value, (int)index);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: drivers/usb/serial/ch341.c:82:
+               (int)request, (int)value, (int)index);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: drivers/usb/serial/ch341.c:84:
+       r = usb_control_msg(dev, usb_sndctrlpipe(dev, 0), request,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: drivers/usb/serial/ch341.c:85:
+                           USB_TYPE_VENDOR | USB_RECIP_DEVICE | USB_DIR_OUT,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: drivers/usb/serial/ch341.c:85:
+                           USB_TYPE_VENDOR | USB_RECIP_DEVICE | USB_DIR_OUT,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: drivers/usb/serial/ch341.c:86:
+                           value, index, NULL, 0, DEFAULT_TIMEOUT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: drivers/usb/serial/ch341.c:86:
+                           value, index, NULL, 0, DEFAULT_TIMEOUT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: drivers/usb/serial/ch341.c:88:
+       return r;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: drivers/usb/serial/ch341.c:92:
+                           u8 request, u16 value, u16 index,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: drivers/usb/serial/ch341.c:92:
+                           u8 request, u16 value, u16 index,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: drivers/usb/serial/ch341.c:93:
+                           char *buf, unsigned bufsize)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: drivers/usb/serial/ch341.c:93:
+                           char *buf, unsigned bufsize)$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#146: FILE: drivers/usb/serial/ch341.c:93:
+                           char *buf, unsigned bufsize)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: drivers/usb/serial/ch341.c:95:
+       int r;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#194: FILE: drivers/usb/serial/ch341.c:96:
+       int r;
+       dbg("ch341_control_in(%02x,%02x,%04x,%04x,%p,%u)", USB_DIR_IN|0x40,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: drivers/usb/serial/ch341.c:96:
+       dbg("ch341_control_in(%02x,%02x,%04x,%04x,%p,%u)", USB_DIR_IN|0x40,$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#194: FILE: drivers/usb/serial/ch341.c:96:
+       dbg("ch341_control_in(%02x,%02x,%04x,%04x,%p,%u)", USB_DIR_IN|0x40,
                                                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: drivers/usb/serial/ch341.c:97:
+               (int)request, (int)value, (int)index, buf, (int)bufsize);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#195: FILE: drivers/usb/serial/ch341.c:97:
+       dbg("ch341_control_in(%02x,%02x,%04x,%04x,%p,%u)", USB_DIR_IN|0x40,
+               (int)request, (int)value, (int)index, buf, (int)bufsize);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: drivers/usb/serial/ch341.c:97:
+               (int)request, (int)value, (int)index, buf, (int)bufsize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: drivers/usb/serial/ch341.c:99:
+       r = usb_control_msg(dev, usb_rcvctrlpipe(dev, 0), request,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: drivers/usb/serial/ch341.c:100:
+                           USB_TYPE_VENDOR | USB_RECIP_DEVICE | USB_DIR_IN,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: drivers/usb/serial/ch341.c:100:
+                           USB_TYPE_VENDOR | USB_RECIP_DEVICE | USB_DIR_IN,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: drivers/usb/serial/ch341.c:101:
+                           value, index, buf, bufsize, DEFAULT_TIMEOUT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: drivers/usb/serial/ch341.c:101:
+                           value, index, buf, bufsize, DEFAULT_TIMEOUT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: drivers/usb/serial/ch341.c:102:
+       return r;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: drivers/usb/serial/ch341.c:107:
+       short a, b;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: drivers/usb/serial/ch341.c:108:
+       int r;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: drivers/usb/serial/ch341.c:109:
+       unsigned long factor;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: drivers/usb/serial/ch341.c:110:
+       short divisor;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: drivers/usb/serial/ch341.c:112:
+       dbg("ch341_set_baudrate(%d)", priv->baud_rate);$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ch341_set_baudrate', this function's name, in a string
#210: FILE: drivers/usb/serial/ch341.c:112:
+       dbg("ch341_set_baudrate(%d)", priv->baud_rate);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: drivers/usb/serial/ch341.c:114:
+       if (!priv->baud_rate)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#215: FILE: drivers/usb/serial/ch341.c:114:
+       if (!priv->baud_rate)
+	   return -EINVAL;

WARNING:TABSTOP: Statements should start on a tabstop
#216: FILE: drivers/usb/serial/ch341.c:115:
+	   return -EINVAL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#217: FILE: drivers/usb/serial/ch341.c:116:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: drivers/usb/serial/ch341.c:116:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: drivers/usb/serial/ch341.c:117:
+       factor = (CH341_BAUDBASE_FACTOR / priv->baud_rate);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: drivers/usb/serial/ch341.c:118:
+       divisor = CH341_BAUDBASE_DIVMAX;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: drivers/usb/serial/ch341.c:120:
+       while ((factor > 0xfff0) && divisor) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#222: FILE: drivers/usb/serial/ch341.c:120:
+       while ((factor > 0xfff0) && divisor) {
+	   factor >>= 3;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: drivers/usb/serial/ch341.c:123:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: drivers/usb/serial/ch341.c:125:
+       if (factor > 0xfff0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#227: FILE: drivers/usb/serial/ch341.c:125:
+       if (factor > 0xfff0)
+	   return -EINVAL;

WARNING:TABSTOP: Statements should start on a tabstop
#228: FILE: drivers/usb/serial/ch341.c:126:
+	   return -EINVAL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: drivers/usb/serial/ch341.c:128:
+       factor = 0x10000 - factor;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: drivers/usb/serial/ch341.c:129:
+       a = (factor & 0xff00) | divisor;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: drivers/usb/serial/ch341.c:130:
+       b = factor & 0xff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: drivers/usb/serial/ch341.c:132:
+       r = ch341_control_out(dev, 0x9a, 0x1312, a);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: drivers/usb/serial/ch341.c:133:
+       if (!r)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#235: FILE: drivers/usb/serial/ch341.c:133:
+       if (!r)
+               r = ch341_control_out(dev, 0x9a, 0x0f2c, b);

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: drivers/usb/serial/ch341.c:134:
+               r = ch341_control_out(dev, 0x9a, 0x0f2c, b);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: drivers/usb/serial/ch341.c:134:
+               r = ch341_control_out(dev, 0x9a, 0x0f2c, b);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: drivers/usb/serial/ch341.c:136:
+       return r;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: drivers/usb/serial/ch341.c:141:
+       dbg("ch341_set_handshake(0x%02x)", control);$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ch341_set_handshake', this function's name, in a string
#248: FILE: drivers/usb/serial/ch341.c:141:
+       dbg("ch341_set_handshake(0x%02x)", control);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: drivers/usb/serial/ch341.c:142:
+       return ch341_control_out(dev, 0xa4, ~control, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: drivers/usb/serial/ch341.c:147:
+       char *buffer;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: drivers/usb/serial/ch341.c:148:
+       int r;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: drivers/usb/serial/ch341.c:149:
+       const unsigned size = 8;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#260: FILE: drivers/usb/serial/ch341.c:149:
+       const unsigned size = 8;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: drivers/usb/serial/ch341.c:150:
+       unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: drivers/usb/serial/ch341.c:152:
+       dbg("ch341_get_status()");$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ch341_get_status', this function's name, in a string
#264: FILE: drivers/usb/serial/ch341.c:152:
+       dbg("ch341_get_status()");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: drivers/usb/serial/ch341.c:154:
+       buffer = kmalloc(size, GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: drivers/usb/serial/ch341.c:155:
+       if (!buffer)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#270: FILE: drivers/usb/serial/ch341.c:155:
+       if (!buffer)
+               return -ENOMEM;

ERROR:CODE_INDENT: code indent should use tabs where possible
#271: FILE: drivers/usb/serial/ch341.c:156:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: drivers/usb/serial/ch341.c:156:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: drivers/usb/serial/ch341.c:158:
+       r = ch341_control_in(dev, 0x95, 0x0706, 0, buffer, size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: drivers/usb/serial/ch341.c:159:
+       if ( r < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#277: FILE: drivers/usb/serial/ch341.c:159:
+       if ( r < 0)
+               goto out;

ERROR:SPACING: space prohibited after that open parenthesis '('
#277: FILE: drivers/usb/serial/ch341.c:159:
+       if ( r < 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: drivers/usb/serial/ch341.c:160:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: drivers/usb/serial/ch341.c:160:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: drivers/usb/serial/ch341.c:163:
+       if (r == 2) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#285: FILE: drivers/usb/serial/ch341.c:163:
+       if (r == 2) {
+	   r = 0;

CHECK:BRACES: braces {} should be used on all arms of this statement
#285: FILE: drivers/usb/serial/ch341.c:163:
+       if (r == 2) {
[...]
+       } else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: drivers/usb/serial/ch341.c:169:
+       } else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#291: FILE: drivers/usb/serial/ch341.c:169:
+       } else
+	   r = -EPROTO;	     

CHECK:BRACES: Unbalanced braces around else statement
#291: FILE: drivers/usb/serial/ch341.c:169:
+       } else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#292: FILE: drivers/usb/serial/ch341.c:170:
+^I   r = -EPROTO;^I     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: drivers/usb/serial/ch341.c:173:
+       return r;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#363: FILE: drivers/usb/serial/ch341.c:188:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: drivers/usb/serial/ch341.c:191:
+       r = ch341_control_in(dev, 0x5f, 0, 0, buffer, size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: drivers/usb/serial/ch341.c:192:
+       if (r < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#367: FILE: drivers/usb/serial/ch341.c:192:
+       if (r < 0)
+               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#368: FILE: drivers/usb/serial/ch341.c:193:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: drivers/usb/serial/ch341.c:193:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: drivers/usb/serial/ch341.c:195:
+       r = ch341_control_out(dev, 0xa1, 0, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: drivers/usb/serial/ch341.c:196:
+       if (r < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#371: FILE: drivers/usb/serial/ch341.c:196:
+       if (r < 0)
+               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#372: FILE: drivers/usb/serial/ch341.c:197:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: drivers/usb/serial/ch341.c:197:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: drivers/usb/serial/ch341.c:199:
+       r = ch341_set_baudrate(dev, priv);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: drivers/usb/serial/ch341.c:200:
+       if (r < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#375: FILE: drivers/usb/serial/ch341.c:200:
+       if (r < 0)
+               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#376: FILE: drivers/usb/serial/ch341.c:201:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: drivers/usb/serial/ch341.c:201:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: drivers/usb/serial/ch341.c:204:
+       r = ch341_control_in(dev, 0x95, 0x2518, 0, buffer, size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: drivers/usb/serial/ch341.c:205:
+       if (r < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#380: FILE: drivers/usb/serial/ch341.c:205:
+       if (r < 0)
+               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#381: FILE: drivers/usb/serial/ch341.c:206:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: drivers/usb/serial/ch341.c:206:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: drivers/usb/serial/ch341.c:208:
+       r = ch341_control_out(dev, 0x9a, 0x2518, 0x0050);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: drivers/usb/serial/ch341.c:209:
+       if (r < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#384: FILE: drivers/usb/serial/ch341.c:209:
+       if (r < 0)
+               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#385: FILE: drivers/usb/serial/ch341.c:210:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: drivers/usb/serial/ch341.c:210:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: drivers/usb/serial/ch341.c:213:
+       r = ch341_get_status(dev, priv);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: drivers/usb/serial/ch341.c:214:
+       if (r < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#389: FILE: drivers/usb/serial/ch341.c:214:
+       if (r < 0)
+               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#390: FILE: drivers/usb/serial/ch341.c:215:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: drivers/usb/serial/ch341.c:215:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: drivers/usb/serial/ch341.c:217:
+       r = ch341_control_out(dev, 0xa1, 0x501f, 0xd90a);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: drivers/usb/serial/ch341.c:218:
+       if (r < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#393: FILE: drivers/usb/serial/ch341.c:218:
+       if (r < 0)
+               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#394: FILE: drivers/usb/serial/ch341.c:219:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: drivers/usb/serial/ch341.c:219:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: drivers/usb/serial/ch341.c:221:
+       r = ch341_set_baudrate(dev, priv);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: drivers/usb/serial/ch341.c:222:
+       if (r < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#397: FILE: drivers/usb/serial/ch341.c:222:
+       if (r < 0)
+               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#398: FILE: drivers/usb/serial/ch341.c:223:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: drivers/usb/serial/ch341.c:223:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: drivers/usb/serial/ch341.c:225:
+       r = ch341_set_handshake(dev, priv->line_control);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: drivers/usb/serial/ch341.c:226:
+       if (r < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#401: FILE: drivers/usb/serial/ch341.c:226:
+       if (r < 0)
+               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#402: FILE: drivers/usb/serial/ch341.c:227:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: drivers/usb/serial/ch341.c:227:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: drivers/usb/serial/ch341.c:230:
+       r = ch341_get_status(dev, priv);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: drivers/usb/serial/ch341.c:233:
+       return r;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#420: FILE: drivers/usb/serial/ch341.c:239:
+       struct ch341_private *priv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: drivers/usb/serial/ch341.c:240:
+       int r;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: drivers/usb/serial/ch341.c:242:
+       dbg("ch341_attach()");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#431: FILE: drivers/usb/serial/ch341.c:245:
+       priv = kzalloc(sizeof(struct ch341_private), GFP_KERNEL);$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*priv)...) over kzalloc(sizeof(struct ch341_private)...)
#431: FILE: drivers/usb/serial/ch341.c:245:
+       priv = kzalloc(sizeof(struct ch341_private), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#432: FILE: drivers/usb/serial/ch341.c:246:
+       if (!priv)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#432: FILE: drivers/usb/serial/ch341.c:246:
+       if (!priv)
+               return -ENOMEM;

ERROR:CODE_INDENT: code indent should use tabs where possible
#433: FILE: drivers/usb/serial/ch341.c:247:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: drivers/usb/serial/ch341.c:247:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: drivers/usb/serial/ch341.c:249:
+       spin_lock_init(&priv->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#439: FILE: drivers/usb/serial/ch341.c:250:
+       init_waitqueue_head(&priv->delta_msr_wait);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#440: FILE: drivers/usb/serial/ch341.c:251:
+       priv->baud_rate = DEFAULT_BAUD_RATE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: drivers/usb/serial/ch341.c:252:
+       priv->line_control = CH341_BIT_RTS | CH341_BIT_DTR;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#446: FILE: drivers/usb/serial/ch341.c:254:
+       r = ch341_configure(serial->dev, priv);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#447: FILE: drivers/usb/serial/ch341.c:255:
+       if (r < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#447: FILE: drivers/usb/serial/ch341.c:255:
+       if (r < 0)
+               goto error;

ERROR:CODE_INDENT: code indent should use tabs where possible
#448: FILE: drivers/usb/serial/ch341.c:256:
+               goto error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#448: FILE: drivers/usb/serial/ch341.c:256:
+               goto error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: drivers/usb/serial/ch341.c:258:
+       usb_set_serial_port_data(serial->port[0], priv);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#453: FILE: drivers/usb/serial/ch341.c:259:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#458: FILE: drivers/usb/serial/ch341.c:262:
+       return r;$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#463: FILE: drivers/usb/serial/ch341.c:265:
+static void ch341_close(struct usb_serial_port *port, struct file *filp)
                                                                    ^^^^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#481: FILE: drivers/usb/serial/ch341.c:271:
+	dbg("%s - port %d", __FUNCTION__, port->number);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#487: FILE: drivers/usb/serial/ch341.c:274:
+	dbg("%s - shutting down urbs", __FUNCTION__);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#509: FILE: drivers/usb/serial/ch341.c:293:
+static int ch341_open(struct usb_serial_port *port, struct file *filp)
                                                                  ^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#511: FILE: drivers/usb/serial/ch341.c:295:
+       struct usb_serial *serial = port->serial;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#512: FILE: drivers/usb/serial/ch341.c:296:
+       struct ch341_private *priv = $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#512: FILE: drivers/usb/serial/ch341.c:296:
+       struct ch341_private *priv = $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#514: FILE: drivers/usb/serial/ch341.c:297:
+       int r;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#516: FILE: drivers/usb/serial/ch341.c:299:
+       dbg("ch341_open()");$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ch341_open', this function's name, in a string
#516: FILE: drivers/usb/serial/ch341.c:299:
+       dbg("ch341_open()");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#518: FILE: drivers/usb/serial/ch341.c:301:
+       priv->baud_rate = DEFAULT_BAUD_RATE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#519: FILE: drivers/usb/serial/ch341.c:302:
+       priv->line_control = CH341_BIT_RTS | CH341_BIT_DTR;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#521: FILE: drivers/usb/serial/ch341.c:304:
+       r = ch341_configure(serial->dev, priv);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: drivers/usb/serial/ch341.c:305:
+       if (r)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#522: FILE: drivers/usb/serial/ch341.c:305:
+       if (r)
+               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#523: FILE: drivers/usb/serial/ch341.c:306:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#523: FILE: drivers/usb/serial/ch341.c:306:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: drivers/usb/serial/ch341.c:308:
+       r = ch341_set_handshake(serial->dev, priv->line_control);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: drivers/usb/serial/ch341.c:309:
+       if (r)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#526: FILE: drivers/usb/serial/ch341.c:309:
+       if (r)
+               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#527: FILE: drivers/usb/serial/ch341.c:310:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#527: FILE: drivers/usb/serial/ch341.c:310:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#529: FILE: drivers/usb/serial/ch341.c:312:
+       r = ch341_set_baudrate(serial->dev, priv);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#530: FILE: drivers/usb/serial/ch341.c:313:
+       if (r)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#530: FILE: drivers/usb/serial/ch341.c:313:
+       if (r)
+               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#531: FILE: drivers/usb/serial/ch341.c:314:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: drivers/usb/serial/ch341.c:314:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: drivers/usb/serial/ch341.c:316:
+       dbg("%s - submitting interrupt urb", __FUNCTION__);$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#533: FILE: drivers/usb/serial/ch341.c:316:
+       dbg("%s - submitting interrupt urb", __FUNCTION__);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#534: FILE: drivers/usb/serial/ch341.c:317:
+       port->interrupt_in_urb->dev = serial->dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#535: FILE: drivers/usb/serial/ch341.c:318:
+       r = usb_submit_urb(port->interrupt_in_urb, GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#536: FILE: drivers/usb/serial/ch341.c:319:
+       if (r) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#536: FILE: drivers/usb/serial/ch341.c:319:
+       if (r) {
+	   dev_err(&port->dev, "%s - failed submitting interrupt urb,"

WARNING:SPLIT_STRING: quoted string split across lines
#538: FILE: drivers/usb/serial/ch341.c:321:
+	   dev_err(&port->dev, "%s - failed submitting interrupt urb,"
+		   " error %d\n", __FUNCTION__, r);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#538: FILE: drivers/usb/serial/ch341.c:321:
+		   " error %d\n", __FUNCTION__, r);

WARNING:TABSTOP: Statements should start on a tabstop
#540: FILE: drivers/usb/serial/ch341.c:323:
+	   return -EPROTO;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#541: FILE: drivers/usb/serial/ch341.c:324:
+       }$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#544: FILE: drivers/usb/serial/ch341.c:326:
+       r = usb_serial_generic_open(port, filp);
                                          ^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#544: FILE: drivers/usb/serial/ch341.c:326:
+       r = usb_serial_generic_open(port, filp);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#555: FILE: drivers/usb/serial/ch341.c:335:
+                             struct ktermios *old_termios)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: drivers/usb/serial/ch341.c:335:
+                             struct ktermios *old_termios)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#560: FILE: drivers/usb/serial/ch341.c:337:
+       struct ch341_private *priv = usb_get_serial_port_data(port);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#561: FILE: drivers/usb/serial/ch341.c:338:
+       struct tty_struct *tty = port->tty;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#562: FILE: drivers/usb/serial/ch341.c:339:
+       unsigned baud_rate;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#562: FILE: drivers/usb/serial/ch341.c:339:
+       unsigned baud_rate;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#563: FILE: drivers/usb/serial/ch341.c:340:
+       unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: drivers/usb/serial/ch341.c:342:
+       dbg("ch341_set_termios()");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#567: FILE: drivers/usb/serial/ch341.c:344:
+       if (!tty || !tty->termios)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#567: FILE: drivers/usb/serial/ch341.c:344:
+       if (!tty || !tty->termios)
+               return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#568: FILE: drivers/usb/serial/ch341.c:345:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#568: FILE: drivers/usb/serial/ch341.c:345:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#570: FILE: drivers/usb/serial/ch341.c:347:
+       baud_rate = tty_get_baud_rate(tty);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#571: FILE: drivers/usb/serial/ch341.c:348:
+       priv->baud_rate = baud_rate;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#573: FILE: drivers/usb/serial/ch341.c:350:
+       if (baud_rate) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#573: FILE: drivers/usb/serial/ch341.c:350:
+       if (baud_rate) {
+	   spin_lock_irqsave(&priv->lock, flags);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#575: FILE: drivers/usb/serial/ch341.c:352:
+^I   priv->line_control |= (CH341_BIT_DTR | CH341_BIT_RTS);^I   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#576: FILE: drivers/usb/serial/ch341.c:353:
+^I   spin_unlock_irqrestore(&priv->lock, flags);^I   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#578: FILE: drivers/usb/serial/ch341.c:355:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#578: FILE: drivers/usb/serial/ch341.c:355:
+       } else {
+	   spin_lock_irqsave(&priv->lock, flags);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#580: FILE: drivers/usb/serial/ch341.c:357:
+^I   priv->line_control &= ~(CH341_BIT_DTR | CH341_BIT_RTS);^I   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#581: FILE: drivers/usb/serial/ch341.c:358:
+^I   spin_unlock_irqrestore(&priv->lock, flags);^I   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#582: FILE: drivers/usb/serial/ch341.c:359:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#583: FILE: drivers/usb/serial/ch341.c:360:
+       ch341_set_handshake(port->serial->dev, priv->line_control);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#586: FILE: drivers/usb/serial/ch341.c:363:
+        * (cflag & CSIZE) : data bits [5, 8]$

ERROR:CODE_INDENT: code indent should use tabs where possible
#587: FILE: drivers/usb/serial/ch341.c:364:
+        * (cflag & PARENB) : parity {NONE, EVEN, ODD}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#588: FILE: drivers/usb/serial/ch341.c:365:
+        * (cflag & CSTOPB) : stop bits [1, 2]$

ERROR:CODE_INDENT: code indent should use tabs where possible
#589: FILE: drivers/usb/serial/ch341.c:366:
+        */$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#613: FILE: drivers/usb/serial/ch341.c:388:
+	return(ch341_set_handshake(port->serial->dev, control));

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:SPACING: No space is necessary after a cast
#618: FILE: drivers/usb/serial/ch341.c:393:
+	struct usb_serial_port *port = (struct usb_serial_port *) urb->context;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#623: FILE: drivers/usb/serial/ch341.c:398:
+	dbg("%s (%d)", __FUNCTION__, port->number);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#633: FILE: drivers/usb/serial/ch341.c:408:
+		dbg("%s - urb shutting down with status: %d", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#637: FILE: drivers/usb/serial/ch341.c:412:
+		dbg("%s - nonzero urb status received: %d", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#643: FILE: drivers/usb/serial/ch341.c:417:
+	usb_serial_debug_data(debug, &port->dev, __FUNCTION__,

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#659: FILE: drivers/usb/serial/ch341.c:420:
+	if (actual_length >= 4) {
+	    struct ch341_private *priv = usb_get_serial_port_data(port);

WARNING:TABSTOP: Statements should start on a tabstop
#660: FILE: drivers/usb/serial/ch341.c:421:
+	    struct ch341_private *priv = usb_get_serial_port_data(port);

WARNING:TABSTOP: Statements should start on a tabstop
#661: FILE: drivers/usb/serial/ch341.c:422:
+	    unsigned long flags;

WARNING:TABSTOP: Statements should start on a tabstop
#665: FILE: drivers/usb/serial/ch341.c:426:
+	    if ((data[1] & CH341_MULT_STAT))

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#676: FILE: drivers/usb/serial/ch341.c:437:
+			__FUNCTION__, status);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#704: FILE: drivers/usb/serial/ch341.c:465:
+		changed=prevstatus^status;
 		       ^

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#704: FILE: drivers/usb/serial/ch341.c:465:
+		changed=prevstatus^status;
 		                  ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#709: FILE: drivers/usb/serial/ch341.c:470:
+		    ((arg & TIOCM_CTS) && (changed & CH341_BIT_CTS)) ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#719: FILE: drivers/usb/serial/ch341.c:480:
+static int ch341_ioctl(struct usb_serial_port *port, struct file *file,
+			unsigned int cmd, unsigned long arg)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#721: FILE: drivers/usb/serial/ch341.c:482:
+	dbg("%s (%d) cmd = 0x%04x", __FUNCTION__, port->number, cmd);

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#723: FILE: drivers/usb/serial/ch341.c:484:
+	switch (cmd) {
+		case TIOCMIWAIT:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#725: FILE: drivers/usb/serial/ch341.c:486:
+			dbg("%s (%d) TIOCMIWAIT", __FUNCTION__,  port->number);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#729: FILE: drivers/usb/serial/ch341.c:490:
+			dbg("%s not supported = 0x%04x", __FUNCTION__, cmd);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#745: FILE: drivers/usb/serial/ch341.c:505:
+	dbg("%s (%d)", __FUNCTION__, port->number);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#759: FILE: drivers/usb/serial/ch341.c:519:
+	dbg("%s - result = %x", __FUNCTION__, result);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#775: FILE: drivers/usb/serial/ch341.c:525:
+       .name           = "ch341",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#776: FILE: drivers/usb/serial/ch341.c:526:
+       .probe          = usb_serial_probe,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#777: FILE: drivers/usb/serial/ch341.c:527:
+       .disconnect     = usb_serial_disconnect,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#778: FILE: drivers/usb/serial/ch341.c:528:
+       .id_table       = id_table,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#779: FILE: drivers/usb/serial/ch341.c:529:
+       .no_dynamic_id  = 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#796: FILE: drivers/usb/serial/ch341.c:533:
+       .driver = {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#797: FILE: drivers/usb/serial/ch341.c:534:
+               .owner  = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#797: FILE: drivers/usb/serial/ch341.c:534:
+               .owner  = THIS_MODULE,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#798: FILE: drivers/usb/serial/ch341.c:535:
+               .name   = "ch341-uart",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#798: FILE: drivers/usb/serial/ch341.c:535:
+               .name   = "ch341-uart",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#799: FILE: drivers/usb/serial/ch341.c:536:
+       },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#800: FILE: drivers/usb/serial/ch341.c:537:
+       .id_table         = id_table,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#801: FILE: drivers/usb/serial/ch341.c:538:
+       .usb_driver       = &ch341_driver,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#802: FILE: drivers/usb/serial/ch341.c:539:
+       .num_interrupt_in = 1, //NUM_DONT_CARE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#803: FILE: drivers/usb/serial/ch341.c:540:
+       .num_bulk_in      = 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#804: FILE: drivers/usb/serial/ch341.c:541:
+       .num_bulk_out     = 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#805: FILE: drivers/usb/serial/ch341.c:542:
+       .num_ports        = 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#806: FILE: drivers/usb/serial/ch341.c:543:
+       .open             = ch341_open,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#807: FILE: drivers/usb/serial/ch341.c:544:
+       .close            = ch341_close,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#808: FILE: drivers/usb/serial/ch341.c:545:
+       .ioctl            = ch341_ioctl,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#809: FILE: drivers/usb/serial/ch341.c:546:
+       .set_termios      = ch341_set_termios,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#810: FILE: drivers/usb/serial/ch341.c:547:
+       .tiocmget         = ch341_tiocmget,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#811: FILE: drivers/usb/serial/ch341.c:548:
+       .tiocmset         = ch341_tiocmset,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#812: FILE: drivers/usb/serial/ch341.c:549:
+       .read_int_callback= ch341_read_int_callback,$

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#812: FILE: drivers/usb/serial/ch341.c:549:
+       .read_int_callback= ch341_read_int_callback,
                          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#813: FILE: drivers/usb/serial/ch341.c:550:
+       .attach           = ch341_attach,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#819: FILE: drivers/usb/serial/ch341.c:555:
+       int retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#828: FILE: drivers/usb/serial/ch341.c:557:
+       retval = usb_serial_register(&ch341_device);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#829: FILE: drivers/usb/serial/ch341.c:558:
+       if (retval)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#829: FILE: drivers/usb/serial/ch341.c:558:
+       if (retval)
+               return retval;

ERROR:CODE_INDENT: code indent should use tabs where possible
#830: FILE: drivers/usb/serial/ch341.c:559:
+               return retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#830: FILE: drivers/usb/serial/ch341.c:559:
+               return retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#831: FILE: drivers/usb/serial/ch341.c:560:
+       retval = usb_register(&ch341_driver);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#832: FILE: drivers/usb/serial/ch341.c:561:
+       if (retval)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#832: FILE: drivers/usb/serial/ch341.c:561:
+       if (retval)
+               usb_serial_deregister(&ch341_device);

ERROR:CODE_INDENT: code indent should use tabs where possible
#833: FILE: drivers/usb/serial/ch341.c:562:
+               usb_serial_deregister(&ch341_device);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#833: FILE: drivers/usb/serial/ch341.c:562:
+               usb_serial_deregister(&ch341_device);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#834: FILE: drivers/usb/serial/ch341.c:563:
+       return retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#841: FILE: drivers/usb/serial/ch341.c:568:
+       usb_deregister(&ch341_driver);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#842: FILE: drivers/usb/serial/ch341.c:569:
+       usb_serial_deregister(&ch341_device);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000378237.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 54 errors, 239 warnings, 12 checks, 803 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000378237.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
