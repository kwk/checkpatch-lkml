WARNING:TYPO_SPELLING: 'suceed' may be misspelled - perhaps 'succeed'?
#45: 
silently suceed. With these changes we get an appropriate "No such device" 
         ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#64: FILE: include/net/ip_vs.h:893:
+extern void ip_vs_sync_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: No space is necessary after a cast
#184: FILE: net/ipv4/ipvs/ip_vs_sync.c:579:
+			(struct sockaddr *) &mcast_addr,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#221: FILE: net/ipv4/ipvs/ip_vs_sync.c:613:
+			(struct sockaddr *) &mcast_addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#233: FILE: net/ipv4/ipvs/ip_vs_sync.c:622:
+	result = join_mcast_group(sock->sk,
+			(struct in_addr *) &mcast_addr.sin_addr,

CHECK:SPACING: No space is necessary after a cast
#233: FILE: net/ipv4/ipvs/ip_vs_sync.c:622:
+			(struct in_addr *) &mcast_addr.sin_addr,

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#261: FILE: net/ipv4/ipvs/ip_vs_sync.c:691:
+static int sync_master_loop(struct ip_vs_sync_thread_data *tinfo)
  {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#287: FILE: net/ipv4/ipvs/ip_vs_sync.c:713:
+		wait_event_interruptible_timeout(sync_master_wait,
+				!list_empty(&ip_vs_sync_queue)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#288: FILE: net/ipv4/ipvs/ip_vs_sync.c:714:
+				!list_empty(&ip_vs_sync_queue)
+				|| kthread_should_stop(), HZ);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#323: FILE: net/ipv4/ipvs/ip_vs_sync.c:744:
+static int sync_backup_loop(struct ip_vs_sync_thread_data *tinfo)
  {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#357: FILE: net/ipv4/ipvs/ip_vs_sync.c:774:
+		wait_event_interruptible(*sock->sk->sk_sleep,
+				!skb_queue_empty(&(sock->sk->sk_receive_queue))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around sock->sk->sk_receive_queue
#357: FILE: net/ipv4/ipvs/ip_vs_sync.c:774:
+				!skb_queue_empty(&(sock->sk->sk_receive_queue))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#358: FILE: net/ipv4/ipvs/ip_vs_sync.c:775:
+				!skb_queue_empty(&(sock->sk->sk_receive_queue))
+				|| kthread_should_stop());

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#404: FILE: net/ipv4/ipvs/ip_vs_sync.c:803:
+static int sync_thread(void *data)
  {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#579: FILE: net/ipv4/ipvs/ip_vs_sync.c:885:
+	/*
+	 * Note that tinfo will be freed in sync_thread on exit

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*tinfo)...) over kmalloc(sizeof(struct ip_vs_sync_thread_data)...)
#581: FILE: net/ipv4/ipvs/ip_vs_sync.c:887:
+	tinfo = kmalloc(sizeof(struct ip_vs_sync_thread_data), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000323973.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 2 warnings, 11 checks, 591 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000323973.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
