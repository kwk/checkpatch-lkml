WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

CHECK:CAMELCASE: Avoid CamelCase: <Command>
#181: FILE: drivers/block/DAC960.c:348:
+	sg_init_table(Command->cmd_sglist, DAC960_V1_ScatterGatherLimit);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_V1_ScatterGatherLimit>
#181: FILE: drivers/block/DAC960.c:348:
+	sg_init_table(Command->cmd_sglist, DAC960_V1_ScatterGatherLimit);

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_V2_ScatterGatherLimit>
#189: FILE: drivers/block/DAC960.c:357:
+	sg_init_table(Command->cmd_sglist, DAC960_V2_ScatterGatherLimit);

CHECK:SPACING: No space is necessary after a cast
#211: FILE: drivers/block/cciss.c:2624:
+		temp64.val = (__u64) pci_map_page(h->pdev, sg_page(&tmp_sg[i]),

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#322: FILE: drivers/block/ub.c:1315:
+	usb_fill_bulk_urb(&sc->work_urb, sc->dev, pipe, sg_virt(sg),
+	    sg->length, ub_urb_complete, sc);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#391: FILE: drivers/ide/ide-probe.c:1320:
+	hwif->sg_table = kmalloc(sizeof(struct scatterlist)*hwif->sg_max_nents,
 	                                                   ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*hwif->sg_table)...) over kmalloc(sizeof(struct scatterlist)...)
#391: FILE: drivers/ide/ide-probe.c:1320:
+	hwif->sg_table = kmalloc(sizeof(struct scatterlist)*hwif->sg_max_nents,

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#391: FILE: drivers/ide/ide-probe.c:1320:
+	hwif->sg_table = kmalloc(sizeof(struct scatterlist)*hwif->sg_max_nents,
 				 GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:SPACING: No space is necessary after a cast
#425: FILE: drivers/ide/mips/au1xxx-ide.c:279:
+						     (void*) sg_virt(sg),

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#425: FILE: drivers/ide/mips/au1xxx-ide.c:279:
+						     (void*) sg_virt(sg),

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#435: FILE: drivers/ide/mips/au1xxx-ide.c:287:
+						   (void*) sg_virt(sg),

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#435: FILE: drivers/ide/mips/au1xxx-ide.c:287:
+						   (void*) sg_virt(sg),

CHECK:SPACING: No space is necessary after a cast
#515: FILE: drivers/infiniband/hw/ipath/ipath_dma.c:111:
+		addr = (u64) page_address(sg_page(sg));

CHECK:SPACING: No space is necessary after a cast
#524: FILE: drivers/infiniband/hw/ipath/ipath_dma.c:130:
+	u64 addr = (u64) page_address(sg_page(sg));

CHECK:CAMELCASE: Avoid CamelCase: <SGlist>
#742: FILE: drivers/media/video/ivtv/ivtv-udma.c:66:
+			sg_set_page(&dma->SGlist[map_offset], dma->bouncemap[map_offset]);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*mq->sg)...) over kmalloc(sizeof(struct scatterlist)...)
#811: FILE: drivers/mmc/card/queue.c:157:
+			mq->sg = kmalloc(sizeof(struct scatterlist),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#812: FILE: drivers/mmc/card/queue.c:158:
+			mq->sg = kmalloc(sizeof(struct scatterlist),
 				GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*mq->bounce_sg)...) over kmalloc(sizeof(struct scatterlist)...)
#820: FILE: drivers/mmc/card/queue.c:165:
+			mq->bounce_sg = kmalloc(sizeof(struct scatterlist) *

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#874: FILE: drivers/mmc/host/at91_mci.c:229:
+		sg->dma_address = dma_map_page(NULL, sg_page(sg), sg->offset, sg->length, DMA_FROM_DEVICE);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#925: FILE: drivers/mmc/host/au1xmmc.c:616:
+					(void *) sg_virt(sg), len, flags);

CHECK:SPACING: No space is necessary after a cast
#931: FILE: drivers/mmc/host/au1xmmc.c:620:
+					(void *) sg_virt(sg),

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#944: FILE: drivers/mmc/host/imxmmc.c:265:
+		host->data_ptr = (u16*)sg_virt(sg);

CHECK:CAMELCASE: Avoid CamelCase: <SCp>
#1209: FILE: drivers/scsi/NCR5380.c:301:
+		cmd->SCp.ptr = sg_virt(cmd->SCp.buffer);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1233: FILE: drivers/scsi/NCR53c406a.c:878:
+                                NCR53c406a_pio_write(sg_virt(sg), sg->length);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1233: FILE: drivers/scsi/NCR53c406a.c:878:
+                                NCR53c406a_pio_write(sg_virt(sg), sg->length);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1243: FILE: drivers/scsi/NCR53c406a.c:899:
+                                NCR53c406a_pio_read(sg_virt(sg), sg->length);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1243: FILE: drivers/scsi/NCR53c406a.c:899:
+                                NCR53c406a_pio_read(sg_virt(sg), sg->length);$

CHECK:SPACING: No space is necessary after a cast
#1269: FILE: drivers/scsi/aha152x.c:616:
+#define SG_ADDRESS(buffer)	((char *) sg_virt((buffer)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'sgent' - possible side-effects?
#1282: FILE: drivers/scsi/aha1542.c:52:
+#define SCSI_SG_PA(sgent)	(isa_page_to_bus(sg_page((sgent))) + (sgent)->offset)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1400: FILE: drivers/scsi/gdth.c:2377:
+            if (!sg_page(sl)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1400: FILE: drivers/scsi/gdth.c:2377:
+            if (!sg_page(sl)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1407: FILE: drivers/scsi/gdth.c:2383:
+            address = kmap_atomic(sg_page(sl), KM_BIO_SRC_IRQ) + sl->offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1407: FILE: drivers/scsi/gdth.c:2383:
+            address = kmap_atomic(sg_page(sl), KM_BIO_SRC_IRQ) + sl->offset;$

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#1420: FILE: drivers/scsi/ibmmca.c:1831:
+			ld(shpnt)[ldn].sge[i].address = (void *) (isa_page_to_bus(sg_page(sg)) + sg->offset);

CHECK:SPACING: No space is necessary after a cast
#1420: FILE: drivers/scsi/ibmmca.c:1831:
+			ld(shpnt)[ldn].sge[i].address = (void *) (isa_page_to_bus(sg_page(sg)) + sg->offset);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1593: FILE: drivers/scsi/ips.c:1518:
+                buffer = kmap_atomic(sg_page(sg), KM_IRQ0) + sg->offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1593: FILE: drivers/scsi/ips.c:1518:
+                buffer = kmap_atomic(sg_page(sg), KM_IRQ0) + sg->offset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1602: FILE: drivers/scsi/ips.c:3526:
+                buffer = kmap_atomic(sg_page(&sg[i]), KM_IRQ0) + sg[i].offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1602: FILE: drivers/scsi/ips.c:3526:
+                buffer = kmap_atomic(sg_page(&sg[i]), KM_IRQ0) + sg[i].offset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1611: FILE: drivers/scsi/ips.c:3559:
+                buffer = kmap_atomic(sg_page(&sg[i]), KM_IRQ0) + sg[i].offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1611: FILE: drivers/scsi/ips.c:3559:
+                buffer = kmap_atomic(sg_page(&sg[i]), KM_IRQ0) + sg[i].offset;$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1689: FILE: drivers/scsi/megaraid.c:1545:
+			if( sg_page(sgl) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1689: FILE: drivers/scsi/megaraid.c:1545:
+			if( sg_page(sgl) ) {

ERROR:SPACING: space required before the open parenthesis '('
#1689: FILE: drivers/scsi/megaraid.c:1545:
+			if( sg_page(sgl) ) {

CHECK:SPACING: No space is necessary after a cast
#1690: FILE: drivers/scsi/megaraid.c:1546:
+				c = *(unsigned char *) sg_virt(&sgl[0]);

CHECK:SPACING: No space is necessary after a cast
#1707: FILE: drivers/scsi/megaraid/megaraid_mbox.c:1588:
+				vaddr = (caddr_t) sg_virt(&sgl[0]);

CHECK:SPACING: No space is necessary after a cast
#1720: FILE: drivers/scsi/megaraid/megaraid_mbox.c:2330:
+				c = *(unsigned char *) sg_virt(&sgl[0]);

CHECK:CAMELCASE: Avoid CamelCase: <STp>
#1733: FILE: drivers/scsi/osst.c:545:
+				memset(page_address(sg_page(&STp->buffer->sg[i])),

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#1742: FILE: drivers/scsi/osst.c:4440:
+		STp->buffer->aux = (os_aux_t *) (page_address(sg_page(&STp->buffer->sg[i])) + OS_DATA_SIZE - b_size);

CHECK:SPACING: No space is necessary after a cast
#1742: FILE: drivers/scsi/osst.c:4440:
+		STp->buffer->aux = (os_aux_t *) (page_address(sg_page(&STp->buffer->sg[i])) + OS_DATA_SIZE - b_size);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1755: FILE: drivers/scsi/osst.c:5258:
+		if (page != NULL) {
+		    sg_set_page(&STbuffer->sg[0], page);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "page"
#1755: FILE: drivers/scsi/osst.c:5258:
+		if (page != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:CAMELCASE: Avoid CamelCase: <STbuffer>
#1756: FILE: drivers/scsi/osst.c:5259:
+		    sg_set_page(&STbuffer->sg[0], page);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sg_page"
#1764: FILE: drivers/scsi/osst.c:5265:
+	if (sg_page(&STbuffer->sg[0]) == NULL) {

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1773: FILE: drivers/scsi/osst.c:5272:
+		struct page *page = alloc_pages(priority, (OS_FRAME_SIZE - got <= PAGE_SIZE) ? 0 : order);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!page"
#1776: FILE: drivers/scsi/osst.c:5274:
+		if (page == NULL) {

CHECK:CAMELCASE: Avoid CamelCase: <SCpnt>
#1851: FILE: drivers/scsi/pcmcia/nsp_cs.h:396:
+#  define BUFFER_ADDR ((char *)((sg_virt(SCpnt->SCp.buffer))))

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#2164: FILE: drivers/scsi/st.c:4455:
+			sg_set_page(&sgl[i], pages[i]);;

CHECK:SPACING: No space is necessary after a cast
#2188: FILE: drivers/scsi/sym53c416.c:199:
+#define SG_ADDRESS(buffer)     ((char *) sg_virt((buffer)))

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#2250: FILE: drivers/usb/core/message.c:444:
+			io->urbs [i]->transfer_buffer = sg_virt(&sg[i]);

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2289: FILE: drivers/usb/misc/usbtest.c:365:
+		kfree (sg_virt(&sg[i]));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000367100.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 14 errors, 16 warnings, 32 checks, 1733 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000367100.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
