WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 0)
#59: FILE: linux-aio.c:62:
     if (ret != -ECANCELED) {
+if (ret != laiocb->nbytes)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 0)
#60: FILE: linux-aio.c:63:
+if (ret != laiocb->nbytes)
+fprintf(stderr, "io_getevents: exp %d got %d %s\n", laiocb->nbytes, ret,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#62: FILE: linux-aio.c:65:
+fprintf(stderr, "io_getevents: exp %d got %d %s\n", laiocb->nbytes, ret,
+strerror(ret));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#70: FILE: linux-aio.c:229:
+{ struct iovec *v = (struct iovec*)iocbs->u.c.buf;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#71: FILE: linux-aio.c:230:
+printf("io_submit: lio_opcode=%d reqprio=%d iov=%p{%p,%d}, niov=%lu, offset=%Ld\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#72: FILE: linux-aio.c:231:
+printf("io_submit: lio_opcode=%d reqprio=%d iov=%p{%p,%d}, niov=%lu, offset=%Ld\n",
+iocbs->aio_lio_opcode, iocbs->aio_reqprio, iocbs->u.c.buf,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000002823.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 3 warnings, 2 checks, 21 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000002823.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
