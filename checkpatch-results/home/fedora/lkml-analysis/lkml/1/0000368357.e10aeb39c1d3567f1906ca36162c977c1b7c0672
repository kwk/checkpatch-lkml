WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
and path_lookup_shdw(), which performs name lookup in an associated shadow directory.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#64: FILE: fs/namei.c:519:
+static inline int use_shadow(struct fs_struct *fs, struct nameidata *nd)
                                                                      ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#70: FILE: fs/namei.c:525:
+static inline struct dentry *fs_root(struct fs_struct *fs, struct nameidata *nd)
                                                                              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#73: FILE: fs/namei.c:528:
+	return (use_shadow(fs, nd)) ? fs->shdwroot : fs->root;
 	                       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#77: FILE: fs/namei.c:532:
+			struct nameidata *nd)
 			                  ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#77: FILE: fs/namei.c:532:
+static inline struct vfsmount *fs_rootmnt(struct fs_struct *fs,
+			struct nameidata *nd)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#80: FILE: fs/namei.c:535:
+	return (use_shadow(fs, nd)) ? fs->shdwrootmnt : fs->rootmnt;
 	                       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#92: FILE: fs/namei.c:555:
+	nd->mnt = mntget(fs_rootmnt(fs, nd));
 	                                ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#93: FILE: fs/namei.c:556:
+	nd->dentry = dget(fs_root(fs, nd));
 	                              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#105: FILE: fs/namei.c:754:
+		if (nd->dentry == fs_root(fs, nd) &&
 		                              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#106: FILE: fs/namei.c:755:
+		    nd->mnt == fs_rootmnt(fs, nd)) {
 		                              ^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c == nd->find_char'
#114: FILE: fs/namei.c:865:
+			if (unlikely((nd->flags & LOOKUP_FINDCHAR) &&
+					(c == nd->find_char))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#115: FILE: fs/namei.c:866:
+			if (unlikely((nd->flags & LOOKUP_FINDCHAR) &&
+					(c == nd->find_char))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#130: FILE: fs/namei.c:1130:
+static int fastcall path_lookup_norm(int dfd, const char *name,
 				unsigned int flags, struct nameidata *nd)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#142: FILE: fs/namei.c:1201:
+static void set_fileshdw(struct file *filp, struct vfsmount *mnt,
                                       ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#143: FILE: fs/namei.c:1202:
+static void set_fileshdw(struct file *filp, struct vfsmount *mnt,
+			struct dentry *dentry)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#148: FILE: fs/namei.c:1207:
+	BUG_ON(dentry != NULL && mnt == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dentry"
#148: FILE: fs/namei.c:1207:
+	BUG_ON(dentry != NULL && mnt == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mnt"
#148: FILE: fs/namei.c:1207:
+	BUG_ON(dentry != NULL && mnt == NULL);

WARNING:TYPO_SPELLING: 'permisson' may be misspelled - perhaps 'permission'?
#169: FILE: fs/namei.c:1228:
+ * Also check whether it's a directory and we have permisson.
                                                    ^^^^^^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#172: FILE: fs/namei.c:1231:
+static int validate_shdwfile(struct file *filp)
                                           ^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#174: FILE: fs/namei.c:1233:
+	struct nameidata nd;
 	                 ^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#188: FILE: fs/namei.c:1247:
+	BUG_ON(*name != '/');

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#190: FILE: fs/namei.c:1249:
+				LOOKUP_FOLLOW|LOOKUP_DIRECTORY, &nd);
 				                                 ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#190: FILE: fs/namei.c:1249:
+	res = path_lookup_shdw(AT_FDCWD, name,
+				LOOKUP_FOLLOW|LOOKUP_DIRECTORY, &nd);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#190: FILE: fs/namei.c:1249:
+				LOOKUP_FOLLOW|LOOKUP_DIRECTORY, &nd);
 				             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#194: FILE: fs/namei.c:1253:
+	res = permission(nd.dentry->d_inode, MAY_EXEC, NULL);
 	                 ^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#199: FILE: fs/namei.c:1258:
+	set_fileshdw(filp, nd.mnt, nd.dentry);
 	             ^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#199: FILE: fs/namei.c:1258:
+	set_fileshdw(filp, nd.mnt, nd.dentry);
 	                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#199: FILE: fs/namei.c:1258:
+	set_fileshdw(filp, nd.mnt, nd.dentry);
 	                           ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#200: FILE: fs/namei.c:1259:
+	path_release(&nd);
 	              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#207: FILE: fs/namei.c:1266:
+	path_release(&nd);
 	              ^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#212: FILE: fs/namei.c:1271:
+	set_fileshdw(filp, ERR_PTR(-EINVAL), NULL);
 	             ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#221: FILE: fs/namei.c:1280:
+int get_file_shdwdir(struct file *file, struct dentry **dentry,
+		    struct vfsmount **mnt)

CHECK:BRACES: Unbalanced braces around else statement
#234: FILE: fs/namei.c:1293:
+		} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'permisson' may be misspelled - perhaps 'permission'?
#251: FILE: fs/namei.c:1310:
+ * Also check whether it's a directory and we have permisson.
                                                    ^^^^^^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#258: FILE: fs/namei.c:1317:
+	struct nameidata nd;
 	                 ^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#272: FILE: fs/namei.c:1331:
+	BUG_ON(*name != '/');

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#275: FILE: fs/namei.c:1334:
+				LOOKUP_FOLLOW|LOOKUP_DIRECTORY, &nd);
 				                                 ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: fs/namei.c:1334:
+	res = path_lookup_shdw(AT_FDCWD, name,
+				LOOKUP_FOLLOW|LOOKUP_DIRECTORY, &nd);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#275: FILE: fs/namei.c:1334:
+				LOOKUP_FOLLOW|LOOKUP_DIRECTORY, &nd);
 				             ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#279: FILE: fs/namei.c:1338:
+	res = permission(nd.dentry->d_inode, MAY_EXEC, NULL);
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#284: FILE: fs/namei.c:1343:
+	set_fs_shdwpwd(current->fs, nd.mnt, nd.dentry);
 	                            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#284: FILE: fs/namei.c:1343:
+	set_fs_shdwpwd(current->fs, nd.mnt, nd.dentry);
 	                                    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#285: FILE: fs/namei.c:1344:
+	path_release(&nd);
 	              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#294: FILE: fs/namei.c:1353:
+	path_release(&nd);
 	              ^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#319: FILE: fs/namei.c:1378:
+			 * in validate_shdwpwd()) */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#341: FILE: fs/namei.c:1400:
+			unsigned int flags, struct nameidata *nd)
 			                                      ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#341: FILE: fs/namei.c:1400:
+int fastcall path_lookup_shdw(int dfd, const char *name,
+			unsigned int flags, struct nameidata *nd)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#385: FILE: fs/namei.c:1444:
+	retval = link_path_walk(name, nd);
 	                              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#388: FILE: fs/namei.c:1447:
+		if (unlikely(!audit_dummy_context() && nd && nd->dentry &&
 		                                       ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#389: FILE: fs/namei.c:1448:
+		if (unlikely(!audit_dummy_context() && nd && nd->dentry &&
+				nd->dentry->d_inode))

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#405: FILE: fs/namei.c:1464:
+ * Returns 0 and nd will be valid on success; Retuns error, otherwise.
                  ^^

WARNING:TYPO_SPELLING: 'Retuns' may be misspelled - perhaps 'Returns'?
#405: FILE: fs/namei.c:1464:
+ * Returns 0 and nd will be valid on success; Retuns error, otherwise.
                                               ^^^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#408: FILE: fs/namei.c:1467:
+				unsigned int flags, struct nameidata *nd)
 				                                      ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#408: FILE: fs/namei.c:1467:
+static int fastcall do_path_lookup(int dfd, const char *name,
+				unsigned int flags, struct nameidata *nd)

CHECK:BRACES: Unbalanced braces around else statement
#421: FILE: fs/namei.c:1480:
+		} else

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#427: FILE: fs/namei.c:1486:
+	retval = path_lookup_norm(dfd, name, flags, nd);
 	                                            ^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#436: FILE: fs/namei.c:1495:
+	if (unlikely(retval && !(nd->flags & (LOOKUP_NOSHDW|LOOKUP_INSHDW))
 	                                                   ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#437: FILE: fs/namei.c:1496:
+	if (unlikely(retval && !(nd->flags & (LOOKUP_NOSHDW|LOOKUP_INSHDW))
+	    && !((nd->flags & LOOKUP_FINDCHAR)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#438: FILE: fs/namei.c:1497:
+	    && !((nd->flags & LOOKUP_FINDCHAR)
+	    && !(nd->flags & LOOKUP_CHARFOUND))))

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#439: FILE: fs/namei.c:1498:
+		retval = path_lookup_shdw(dfd, name, flags, nd);
 		                                            ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#452: FILE: fs/namei.c:1561:
+	else if (!(nd->flags & LOOKUP_NOSHDW) &&
+			S_ISDIR(nd->dentry->d_inode->i_mode)) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#468: FILE: fs/namei.c:3137:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#483: FILE: fs/namei.c:3152:
+		if (!tsk)
[...]
+		else if (!ptrace_may_attach(tsk)) {
[...]

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#539: FILE: fs/namei.c:3208:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#541: FILE: fs/namei.c:3210:
+			LOOKUP_FOLLOW|LOOKUP_DIRECTORY|LOOKUP_NOSHDW, &nd);
 			                                               ^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#541: FILE: fs/namei.c:3210:
+			LOOKUP_FOLLOW|LOOKUP_DIRECTORY|LOOKUP_NOSHDW, &nd);
 			             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#541: FILE: fs/namei.c:3210:
+			LOOKUP_FOLLOW|LOOKUP_DIRECTORY|LOOKUP_NOSHDW, &nd);
 			                              ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#545: FILE: fs/namei.c:3214:
+	error = vfs_permission(&nd, MAY_EXEC);
 	                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#549: FILE: fs/namei.c:3218:
+	set_fs_shdwpwd(fs, nd.mnt, nd.dentry);
 	                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#549: FILE: fs/namei.c:3218:
+	set_fs_shdwpwd(fs, nd.mnt, nd.dentry);
 	                           ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#552: FILE: fs/namei.c:3221:
+	path_release(&nd);
 	              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#566: FILE: fs/namei.c:3235:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#571: FILE: fs/namei.c:3240:
+			LOOKUP_FOLLOW|LOOKUP_DIRECTORY|LOOKUP_NOSHDW, &nd);
 			                                               ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#571: FILE: fs/namei.c:3240:
+		error = __user_walk(pathname,
+			LOOKUP_FOLLOW|LOOKUP_DIRECTORY|LOOKUP_NOSHDW, &nd);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#571: FILE: fs/namei.c:3240:
+			LOOKUP_FOLLOW|LOOKUP_DIRECTORY|LOOKUP_NOSHDW, &nd);
 			             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#571: FILE: fs/namei.c:3240:
+			LOOKUP_FOLLOW|LOOKUP_DIRECTORY|LOOKUP_NOSHDW, &nd);
 			                              ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#575: FILE: fs/namei.c:3244:
+		error = vfs_permission(&nd, MAY_EXEC);
 		                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#580: FILE: fs/namei.c:3249:
+		nd.dentry = NULL;
 		^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#581: FILE: fs/namei.c:3250:
+		nd.mnt = NULL;
 		^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#587: FILE: fs/namei.c:3256:
+	fs->shdwroot = dget(nd.dentry);
 	                    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#588: FILE: fs/namei.c:3257:
+	fs->shdwrootmnt = mntget(nd.mnt);
 	                         ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#589: FILE: fs/namei.c:3258:
+	if (!nd.dentry)
 	     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#598: FILE: fs/namei.c:3267:
+	path_release(&nd);
 	              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#611: FILE: fs/namei.c:3280:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#612: FILE: fs/namei.c:3281:
+	struct file *filp = __fget(tsk->files, fd);
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#615: FILE: fs/namei.c:3284:
+	if (!filp)
 	     ^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#620: FILE: fs/namei.c:3289:
+			LOOKUP_FOLLOW|LOOKUP_DIRECTORY|LOOKUP_NOSHDW, &nd);
 			                                               ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#620: FILE: fs/namei.c:3289:
+		error = __user_walk(pathname,
+			LOOKUP_FOLLOW|LOOKUP_DIRECTORY|LOOKUP_NOSHDW, &nd);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#620: FILE: fs/namei.c:3289:
+			LOOKUP_FOLLOW|LOOKUP_DIRECTORY|LOOKUP_NOSHDW, &nd);
 			             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#620: FILE: fs/namei.c:3289:
+			LOOKUP_FOLLOW|LOOKUP_DIRECTORY|LOOKUP_NOSHDW, &nd);
 			                              ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#624: FILE: fs/namei.c:3293:
+		error = vfs_permission(&nd, MAY_EXEC);
 		                        ^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#626: FILE: fs/namei.c:3295:
+			set_fileshdw(filp, nd.mnt, nd.dentry);
 			             ^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#626: FILE: fs/namei.c:3295:
+			set_fileshdw(filp, nd.mnt, nd.dentry);
 			                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#626: FILE: fs/namei.c:3295:
+			set_fileshdw(filp, nd.mnt, nd.dentry);
 			                           ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#627: FILE: fs/namei.c:3296:
+			path_release(&nd);
 			              ^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#631: FILE: fs/namei.c:3300:
+		set_fileshdw(filp, NULL, NULL);
 		             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#634: FILE: fs/namei.c:3303:
+	fput(filp);
 	     ^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#656: FILE: fs/namei.c:3325:
+		if (path)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#658: FILE: fs/namei.c:3327:
+		else {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000368357.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 68 warnings, 33 checks, 834 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000368357.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
