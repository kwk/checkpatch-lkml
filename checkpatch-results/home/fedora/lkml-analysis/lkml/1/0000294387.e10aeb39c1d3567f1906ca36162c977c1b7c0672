WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#39: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#44: FILE: arch/ia64/kvm/kvm_fw.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#61: FILE: arch/ia64/kvm/kvm_fw.c:18:
+ * this program; if not, write to the Free Software Foundation, Inc., 59 Temple$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#79: FILE: arch/ia64/kvm/kvm_fw.c:36:
+#define INIT_PAL_STATUS_UNIMPLEMENTED(x)		\
+	{						\
+		x.status = PAL_STATUS_UNIMPLEMENTED;	\
+		x.v0 = 0;				\
+		x.v1 = 0;				\
+		x.v2 = 0;				\
+	}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#87: FILE: arch/ia64/kvm/kvm_fw.c:44:
+#define INIT_PAL_STATUS_SUCCESS(x)			\
+	{						\
+		x.status = PAL_STATUS_SUCCESS;		\
+		x.v0 = 0;				\
+		x.v1 = 0;				\
+		x.v2 = 0;				\
+    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: arch/ia64/kvm/kvm_fw.c:50:
+    }$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#95: FILE: arch/ia64/kvm/kvm_fw.c:52:
+static void kvm_get_pal_call_data(struct kvm_vcpu *vcpu,
+		u64 *gr28, u64 *gr29, u64 *gr30, u64 *gr31) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#96: FILE: arch/ia64/kvm/kvm_fw.c:53:
+static void kvm_get_pal_call_data(struct kvm_vcpu *vcpu,
+		u64 *gr28, u64 *gr29, u64 *gr30, u64 *gr31) {

WARNING:SPACING: space prohibited before semicolon
#106: FILE: arch/ia64/kvm/kvm_fw.c:63:
+			return ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#109: FILE: arch/ia64/kvm/kvm_fw.c:66:
+	printk(KERN_DEBUG"Failed to get vcpu pal data!!!\n");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#109: FILE: arch/ia64/kvm/kvm_fw.c:66:
+	printk(KERN_DEBUG"Failed to get vcpu pal data!!!\n");

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#112: FILE: arch/ia64/kvm/kvm_fw.c:69:
+static void set_pal_result(struct kvm_vcpu *vcpu,
+		struct ia64_pal_retval result) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#113: FILE: arch/ia64/kvm/kvm_fw.c:70:
+static void set_pal_result(struct kvm_vcpu *vcpu,
+		struct ia64_pal_retval result) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#114: FILE: arch/ia64/kvm/kvm_fw.c:71:
+		struct ia64_pal_retval result) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited before semicolon
#120: FILE: arch/ia64/kvm/kvm_fw.c:77:
+		return ;

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#125: FILE: arch/ia64/kvm/kvm_fw.c:82:
+static void set_sal_result(struct kvm_vcpu *vcpu,
+		struct sal_ret_values result) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#126: FILE: arch/ia64/kvm/kvm_fw.c:83:
+static void set_sal_result(struct kvm_vcpu *vcpu,
+		struct sal_ret_values result) {

WARNING:SPACING: space prohibited before semicolon
#132: FILE: arch/ia64/kvm/kvm_fw.c:89:
+		return ;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#134: FILE: arch/ia64/kvm/kvm_fw.c:91:
+	printk(KERN_WARNING"Failed to set sal result!!\n");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#134: FILE: arch/ia64/kvm/kvm_fw.c:91:
+	printk(KERN_WARNING"Failed to set sal result!!\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: arch/ia64/kvm/kvm_fw.c:110:
+	status = ia64_pal_cache_flush(args->cache_type, args->operation,
+					&progress, NULL);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#154: FILE: arch/ia64/kvm/kvm_fw.c:111:
+	if (status != 0)
+	args->status = status;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#165: FILE: arch/ia64/kvm/kvm_fw.c:122:
+	gr28 = gr29 = gr30 = gr31 = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#169: FILE: arch/ia64/kvm/kvm_fw.c:126:
+		printk(KERN_ERR"vcpu:%p called cache_flush error!\n", vcpu);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#169: FILE: arch/ia64/kvm/kvm_fw.c:126:
+		printk(KERN_ERR"vcpu:%p called cache_flush error!\n", vcpu);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#176: FILE: arch/ia64/kvm/kvm_fw.c:133:
+	smp_call_function(remote_pal_cache_flush,
+				(void *)&args, 1, 1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#178: FILE: arch/ia64/kvm/kvm_fw.c:135:
+		printk(KERN_ERR"pal_cache_flush error!,"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pal_cache_flush', this function's name, in a string
#178: FILE: arch/ia64/kvm/kvm_fw.c:135:
+		printk(KERN_ERR"pal_cache_flush error!,"

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#178: FILE: arch/ia64/kvm/kvm_fw.c:135:
+		printk(KERN_ERR"pal_cache_flush error!,"

WARNING:SPLIT_STRING: quoted string split across lines
#179: FILE: arch/ia64/kvm/kvm_fw.c:136:
+		printk(KERN_ERR"pal_cache_flush error!,"
+				"status:0x%lx\n", args.status);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#186: FILE: arch/ia64/kvm/kvm_fw.c:143:
+	result.status = ia64_pal_cache_flush(gr29, gr30, &result.v1,
+						&result.v0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#189: FILE: arch/ia64/kvm/kvm_fw.c:146:
+		printk(KERN_ERR"vcpu:%p crashed due to cache_flush err:%ld"

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#189: FILE: arch/ia64/kvm/kvm_fw.c:146:
+		printk(KERN_ERR"vcpu:%p crashed due to cache_flush err:%ld"

WARNING:SPLIT_STRING: quoted string split across lines
#190: FILE: arch/ia64/kvm/kvm_fw.c:147:
+		printk(KERN_ERR"vcpu:%p crashed due to cache_flush err:%ld"
+				"in1:%lx,in2:%lx\n",

WARNING:MISSING_SPACE: break quoted strings at a space character
#190: FILE: arch/ia64/kvm/kvm_fw.c:147:
+		printk(KERN_ERR"vcpu:%p crashed due to cache_flush err:%ld"
+				"in1:%lx,in2:%lx\n",

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#193: FILE: arch/ia64/kvm/kvm_fw.c:150:
+#if 0

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#206: FILE: arch/ia64/kvm/kvm_fw.c:163:
+{
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#215: FILE: arch/ia64/kvm/kvm_fw.c:172:
+{
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#226: FILE: arch/ia64/kvm/kvm_fw.c:183:
+		result.status = ia64_sal_freq_base(SAL_FREQ_BASE_PLATFORM,
+							&result.v0,

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#236: FILE: arch/ia64/kvm/kvm_fw.c:193:
+{
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#253: FILE: arch/ia64/kvm/kvm_fw.c:210:
+{
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#262: FILE: arch/ia64/kvm/kvm_fw.c:219:
+{
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#268: FILE: arch/ia64/kvm/kvm_fw.c:225:
+	result.status = ia64_pal_proc_get_features(&result.v0, &result.v1,
+			&result.v2, in2);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#275: FILE: arch/ia64/kvm/kvm_fw.c:232:
+{
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#292: FILE: arch/ia64/kvm/kvm_fw.c:249:
+{
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->exit_reason == EXIT_REASON_PAL_CALL'
#326: FILE: arch/ia64/kvm/kvm_fw.c:283:
+	if (p && (p->exit_reason == EXIT_REASON_PAL_CALL))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#334: FILE: arch/ia64/kvm/kvm_fw.c:291:
+{
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#355: FILE: arch/ia64/kvm/kvm_fw.c:312:
+
+	}

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#366: FILE: arch/ia64/kvm/kvm_fw.c:323:
+	case PAL_LOGICAL_TO_PHYSICAL :
 	                             ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#370: FILE: arch/ia64/kvm/kvm_fw.c:327:
+	case PAL_VM_SUMMARY :
 	                    ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#374: FILE: arch/ia64/kvm/kvm_fw.c:331:
+	case PAL_VM_INFO :
 	                 ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#377: FILE: arch/ia64/kvm/kvm_fw.c:334:
+	case PAL_PLATFORM_ADDR :
 	                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#389: FILE: arch/ia64/kvm/kvm_fw.c:346:
+		result.status = ia64_pal_vm_page_size(&result.v0,
+							&result.v1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#393: FILE: arch/ia64/kvm/kvm_fw.c:350:
+		result.status = ia64_pal_rse_info(&result.v0,
+					(pal_hints_u_t *)&result.v1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#400: FILE: arch/ia64/kvm/kvm_fw.c:357:
+		result.status = ia64_pal_debug_info(&result.v0,
+							&result.v1);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#403: FILE: arch/ia64/kvm/kvm_fw.c:360:
+		result.status = ia64_pal_version(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#414: FILE: arch/ia64/kvm/kvm_fw.c:371:
+		printk(KERN_WARNING"kvm: Unsupported pal call,"

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#414: FILE: arch/ia64/kvm/kvm_fw.c:371:
+		printk(KERN_WARNING"kvm: Unsupported pal call,"

WARNING:SPLIT_STRING: quoted string split across lines
#415: FILE: arch/ia64/kvm/kvm_fw.c:372:
+		printk(KERN_WARNING"kvm: Unsupported pal call,"
+					" index:0x%lx\n", gr28);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#422: FILE: arch/ia64/kvm/kvm_fw.c:379:
+static struct sal_ret_values sal_emulator(struct kvm *kvm,
+				long index, unsigned long in1,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#438: FILE: arch/ia64/kvm/kvm_fw.c:395:
+		printk(KERN_WARNING"kvm: Not allowed to call here!"

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#438: FILE: arch/ia64/kvm/kvm_fw.c:395:
+		printk(KERN_WARNING"kvm: Not allowed to call here!"

WARNING:SPLIT_STRING: quoted string split across lines
#439: FILE: arch/ia64/kvm/kvm_fw.c:396:
+		printk(KERN_WARNING"kvm: Not allowed to call here!"
+			" SAL_PCI_CONFIG_READ\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#442: FILE: arch/ia64/kvm/kvm_fw.c:399:
+		printk(KERN_WARNING"kvm: Not allowed to call here!"

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#442: FILE: arch/ia64/kvm/kvm_fw.c:399:
+		printk(KERN_WARNING"kvm: Not allowed to call here!"

WARNING:SPLIT_STRING: quoted string split across lines
#443: FILE: arch/ia64/kvm/kvm_fw.c:400:
+		printk(KERN_WARNING"kvm: Not allowed to call here!"
+			" SAL_PCI_CONFIG_WRITE\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#453: FILE: arch/ia64/kvm/kvm_fw.c:410:
+			printk("Rendvous called! iip:%lx\n\n", in2);

CHECK:BRACES: Unbalanced braces around else statement
#454: FILE: arch/ia64/kvm/kvm_fw.c:411:
+		} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#455: FILE: arch/ia64/kvm/kvm_fw.c:412:
+			printk(KERN_WARNING"kvm: CALLED SAL_SET_VECTORS %lu."

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#455: FILE: arch/ia64/kvm/kvm_fw.c:412:
+			printk(KERN_WARNING"kvm: CALLED SAL_SET_VECTORS %lu."

WARNING:SPLIT_STRING: quoted string split across lines
#456: FILE: arch/ia64/kvm/kvm_fw.c:413:
+			printk(KERN_WARNING"kvm: CALLED SAL_SET_VECTORS %lu."
+							"ignored...\n", in1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#472: FILE: arch/ia64/kvm/kvm_fw.c:429:
+		printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#476: FILE: arch/ia64/kvm/kvm_fw.c:433:
+		printk(KERN_WARNING

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#482: FILE: arch/ia64/kvm/kvm_fw.c:439:
+			/*Flush using SAL.
+			This method is faster but has a side

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#484: FILE: arch/ia64/kvm/kvm_fw.c:441:
+			this cpu.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#488: FILE: arch/ia64/kvm/kvm_fw.c:445:
+			/*Maybe need to implement the method
+			without side effect!*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#488: FILE: arch/ia64/kvm/kvm_fw.c:445:
+			without side effect!*/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#493: FILE: arch/ia64/kvm/kvm_fw.c:450:
+		printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#497: FILE: arch/ia64/kvm/kvm_fw.c:454:
+		printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#501: FILE: arch/ia64/kvm/kvm_fw.c:458:
+		printk(KERN_WARNING"kvm: called SAL_CALL with unknown index."

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#501: FILE: arch/ia64/kvm/kvm_fw.c:458:
+		printk(KERN_WARNING"kvm: called SAL_CALL with unknown index."

WARNING:SPLIT_STRING: quoted string split across lines
#502: FILE: arch/ia64/kvm/kvm_fw.c:459:
+		printk(KERN_WARNING"kvm: called SAL_CALL with unknown index."
+						" index:%ld\n", index);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#509: FILE: arch/ia64/kvm/kvm_fw.c:466:
+static void kvm_get_sal_call_data(struct kvm_vcpu *vcpu, u64 *in0, u64 *in1,
+		u64 *in2, u64 *in3, u64 *in4, u64 *in5, u64 *in6, u64 *in7){

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#510: FILE: arch/ia64/kvm/kvm_fw.c:467:
+static void kvm_get_sal_call_data(struct kvm_vcpu *vcpu, u64 *in0, u64 *in1,
+		u64 *in2, u64 *in3, u64 *in4, u64 *in5, u64 *in6, u64 *in7){

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#511: FILE: arch/ia64/kvm/kvm_fw.c:468:
+		u64 *in2, u64 *in3, u64 *in4, u64 *in5, u64 *in6, u64 *in7){
+

WARNING:SPACING: space prohibited before semicolon
#526: FILE: arch/ia64/kvm/kvm_fw.c:483:
+			return ;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#534: FILE: arch/ia64/kvm/kvm_fw.c:491:
+{
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#539: FILE: arch/ia64/kvm/kvm_fw.c:496:
+	kvm_get_sal_call_data(vcpu, &index, &in1, &in2,
+			&in3, &in4, &in5, &in6, &in7);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#541: FILE: arch/ia64/kvm/kvm_fw.c:498:
+	result = sal_emulator(vcpu->kvm, index, in1, in2, in3,
+					in4, in5, in6, in7);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000294387.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 37 warnings, 43 checks, 500 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000294387.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
