WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
Gitweb:     http://git.kernel.org/tip/956ffd027bedc4106b901eb6a50f0a6c6de4113d

WARNING:REPEATED_WORD: Possible repeated word: 'option'
#55: 
The -s option option is used to specify the script to be run.

WARNING:TYPO_SPELLING: 'implemention' may be misspelled - perhaps 'implementation'?
#117: 
implemention in subsequent patches for one possible way to
^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#129: 
language-specific setup function associates the the scripting

WARNING:STATIC_CONST: Move const after static - use 'static const char'
#184: FILE: tools/perf/builtin-trace.c:9:
+static char const		*script_name;

WARNING:STATIC_CONST: Move const after static - use 'static const char'
#185: FILE: tools/perf/builtin-trace.c:10:
+static char const		*generate_script_lang;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#197: FILE: tools/perf/builtin-trace.c:22:
+static int default_generate_script(const char *outfile __attribute ((unused)))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:STATIC_CONST: Move const after static - use 'static const char'
#234: FILE: tools/perf/builtin-trace.c:58:
+static char const		*input_name = "perf.data";

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "s"
#270: FILE: tools/perf/builtin-trace.c:163:
+	if (s != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#339: FILE: tools/perf/builtin-trace.c:232:
+	struct script_spec *s = script_spec__find(spec);
+	if (!s)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#351: FILE: tools/perf/builtin-trace.c:244:
+	fprintf(stderr, "Scripting language extensions (used in "
+		"perf trace -s [spec:]script.[spec]):\n\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LINE_SPACING: Missing a blank line after declarations
#441: FILE: tools/perf/builtin-trace.c:343:
+		int input = open(input_name, O_RDONLY);
+		if (input < 0) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!header"
#464: FILE: tools/perf/builtin-trace.c:366:
+		if (header == NULL)

WARNING:SPACING: Unnecessary space before function pointer arguments
#494: FILE: tools/perf/util/trace-event.h:264:
+	int (*start_script) (const char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#494: FILE: tools/perf/util/trace-event.h:264:
+	int (*start_script) (const char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: Unnecessary space before function pointer arguments
#495: FILE: tools/perf/util/trace-event.h:265:
+	int (*stop_script) (void);

WARNING:SPACING: Unnecessary space before function pointer arguments
#496: FILE: tools/perf/util/trace-event.h:266:
+	void (*process_event) (int cpu, void *data, int size,

WARNING:SPACING: Unnecessary space before function pointer arguments
#498: FILE: tools/perf/util/trace-event.h:268:
+	int (*generate_script) (const char *outfile);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000041557.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 16 warnings, 2 checks, 313 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000041557.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
