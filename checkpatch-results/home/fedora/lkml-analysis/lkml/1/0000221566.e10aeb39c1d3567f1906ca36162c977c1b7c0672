WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#47: FILE: drivers/block/iss_blk.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#65: FILE: drivers/block/iss_blk.c:19:
+#include <asm/io.h>

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iss_blk_setup', this function's name, in a string
#127: FILE: drivers/block/iss_blk.c:81:
+	pr_debug("iss_blk_setup %d\n", ib->devno);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__iss_blk_read', this function's name, in a string
#168: FILE: drivers/block/iss_blk.c:122:
+	pr_debug("__iss_blk_read 0x%ld sectors @ 0x%lx\n", count, sector);

ERROR:PRINTF_0XDECIMAL: Prefixing 0x with decimal output is defective
#168: FILE: drivers/block/iss_blk.c:122:
+	pr_debug("__iss_blk_read 0x%ld sectors @ 0x%lx\n", count, sector);

Prefixing 0x with decimal output is defective and should be corrected.

ERROR:SPACING: space required before the open parenthesis '('
#170: FILE: drivers/block/iss_blk.c:124:
+	while(count) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__iss_blk_write', this function's name, in a string
#197: FILE: drivers/block/iss_blk.c:151:
+	pr_debug("__iss_blk_write 0x%ld sectors @ 0x%lx\n", count, sector);

ERROR:PRINTF_0XDECIMAL: Prefixing 0x with decimal output is defective
#197: FILE: drivers/block/iss_blk.c:151:
+	pr_debug("__iss_blk_write 0x%ld sectors @ 0x%lx\n", count, sector);

ERROR:SPACING: space required before the open parenthesis '('
#199: FILE: drivers/block/iss_blk.c:153:
+	while(count) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#218: FILE: drivers/block/iss_blk.c:172:
+static void iss_blk_do_request(struct request_queue * q)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#277: FILE: drivers/block/iss_blk.c:231:
+		ib->present = ib->changed = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#310: FILE: drivers/block/iss_blk.c:264:
+static struct block_device_operations iss_blk_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: drivers/block/iss_blk.c:265:
+      .owner^I^I= THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: drivers/block/iss_blk.c:266:
+      .open^I^I= iss_blk_open,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: drivers/block/iss_blk.c:267:
+      .release^I^I= iss_blk_release,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: drivers/block/iss_blk.c:268:
+      .media_changed^I= iss_blk_media_changed,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: drivers/block/iss_blk.c:269:
+      .revalidate_disk^I= iss_blk_revalidate,$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!np"
#333: FILE: drivers/block/iss_blk.c:287:
+	if (np == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!iss_blk_regs"
#336: FILE: drivers/block/iss_blk.c:290:
+	if (iss_blk_regs == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#347: FILE: drivers/block/iss_blk.c:301:
+	printk(KERN_INFO "ISS Block driver initializing for %d minors\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!q"
#361: FILE: drivers/block/iss_blk.c:315:
+		if (q == NULL) {

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#420: FILE: drivers/block/Kconfig:360:
+config BLK_DEV_ISS
+       bool "Support ISS Simulator Block Device"
+       default n
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:UNDOCUMENTED_DT_STRING: DT compatible string "ibm,iss-sim-block-device" appears un-documented -- check /home/fedora/lkml-analysis/linux/Documentation/devicetree/bindings/
#447: FILE: arch/powerpc/boot/dts/iss4xx.dts:105:
+		compatible = "ibm,iss-sim-block-device";

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000221566.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 14 warnings, 4 checks, 392 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000221566.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
