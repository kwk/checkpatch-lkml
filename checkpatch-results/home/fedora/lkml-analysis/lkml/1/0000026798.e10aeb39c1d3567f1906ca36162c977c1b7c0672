WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#84: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#89: FILE: drivers/mtd/sm_common.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#103: FILE: drivers/mtd/sm_common.c:15:
+#if 0

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#108: FILE: drivers/mtd/sm_common.c:20:
+		{.offset = 0 , .length = 4}, /* reserved */
 		             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#109: FILE: drivers/mtd/sm_common.c:21:
+		{.offset = 4 , .length = 2}, /* data & block status */
 		             ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#110: FILE: drivers/mtd/sm_common.c:22:
+		{.offset = 6 , .length = 2}, /* LBA1 */
 		             ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#119: FILE: drivers/mtd/sm_common.c:31:
+		{.offset = 0 , .length = 16}, /* reserved */
 		             ^

WARNING:TYPO_SPELLING: 'endianess' may be misspelled - perhaps 'endianness'?
#129: FILE: drivers/mtd/sm_common.c:41:
+	/* check parity - endianess doesn't matter */
 	                  ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#130: FILE: drivers/mtd/sm_common.c:42:
+	if (hweight16(*(u16*)lba) & 1)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#136: FILE: drivers/mtd/sm_common.c:48:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'asscociated' may be misspelled - perhaps 'associated'?
#138: FILE: drivers/mtd/sm_common.c:50:
+ * Read LBA asscociated with block
             ^^^^^^^^^^^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#145: FILE: drivers/mtd/sm_common.c:57:
+	static const u32 erased_pattern[4] =
+		{ 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF };

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#156: FILE: drivers/mtd/sm_common.c:68:
+	lba_test = *(u16*)oob->lba_copy1 ^ *(u16*)oob->lba_copy2;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#156: FILE: drivers/mtd/sm_common.c:68:
+	lba_test = *(u16*)oob->lba_copy1 ^ *(u16*)oob->lba_copy2;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#160: FILE: drivers/mtd/sm_common.c:72:
+
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#162: FILE: drivers/mtd/sm_common.c:74:
+	if ((lba = sm_get_lba(oob->lba_copy1)) == -2)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#178: FILE: drivers/mtd/sm_common.c:90:
+	if(hweight16(*(u16*)tmp) & 0x01)

ERROR:SPACING: space required before the open parenthesis '('
#178: FILE: drivers/mtd/sm_common.c:90:
+	if(hweight16(*(u16*)tmp) & 0x01)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#181: FILE: drivers/mtd/sm_common.c:93:
+	oob->lba_copy1[0] = oob->lba_copy2[0] = tmp[0];

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#182: FILE: drivers/mtd/sm_common.c:94:
+	oob->lba_copy1[1] = oob->lba_copy2[1] = tmp[1];

CHECK:LINE_SPACING: Please don't use multiple blank lines
#197: FILE: drivers/mtd/sm_common.c:109:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#208: FILE: drivers/mtd/sm_common.c:120:
+
+

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#221: FILE: drivers/mtd/sm_common.c:133:
+	ops.oobbuf = (void*)&oob;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#225: FILE: drivers/mtd/sm_common.c:137:
+	/* TODO: This doesn't take controller lock,
+		but we know that all xD cards are single chip. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#225: FILE: drivers/mtd/sm_common.c:137:
+		but we know that all xD cards are single chip. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#239: FILE: drivers/mtd/sm_common.c:151:
+		printk(KERN_NOTICE "sm_common: bad sector at %i\n", (int)ofs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#249: FILE: drivers/mtd/sm_common.c:161:
+	memset (&oob, -1, sizeof(oob));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#255: FILE: drivers/mtd/sm_common.c:167:
+	ops.oobbuf = (void*)&oob;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#260: FILE: drivers/mtd/sm_common.c:172:
+		printk(KERN_NOTICE "sm_common: can't mark sector at %i as bad\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#261: FILE: drivers/mtd/sm_common.c:173:
+		printk(KERN_NOTICE "sm_common: can't mark sector at %i as bad\n",
+					(int)ofs);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#285: FILE: drivers/mtd/sm_common.c:197:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#292: FILE: drivers/mtd/sm_common.c:204:
+EXPORT_SYMBOL_GPL(sm_register_device);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:MISSING_EOF_NEWLINE: adding a line without newline at end of file
#296: FILE: drivers/mtd/sm_common.c:208:
+MODULE_DESCRIPTION("Common SmartMedia/xD functions");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#304: FILE: drivers/mtd/sm_common.h:1:
+/*

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#323: FILE: drivers/mtd/sm_common.h:20:
+} __attribute__((packed));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#325: FILE: drivers/mtd/sm_common.h:22:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#330: FILE: drivers/mtd/sm_common.h:27:
+extern int sm_register_device(struct mtd_info *mtd);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#331: FILE: drivers/mtd/sm_common.h:28:
+extern int sm_read_lba(struct sm_oob *oob);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#332: FILE: drivers/mtd/sm_common.h:29:
+extern void sm_write_lba(struct sm_oob *oob, u16 lba);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#333: FILE: drivers/mtd/sm_common.h:30:
+extern int sm_block_valid(struct sm_oob *oob);

WARNING:MISSING_EOF_NEWLINE: adding a line without newline at end of file
#334: FILE: drivers/mtd/sm_common.h:31:
+extern int sm_sector_valid(struct sm_oob *oob);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#334: FILE: drivers/mtd/sm_common.h:31:
+extern int sm_sector_valid(struct sm_oob *oob);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000026798.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 13 errors, 15 warnings, 14 checks, 261 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000026798.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
