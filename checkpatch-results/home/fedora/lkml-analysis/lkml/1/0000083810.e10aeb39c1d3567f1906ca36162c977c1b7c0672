WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#52: 
> arch/x86/kernel/cpu/amd.c:417: error: implicit declaration of function ‘wrmsr_amd_safe’

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#105: FILE: arch/x86/include/asm/msr.h:115:
+							   unsigned low,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#106: FILE: arch/x86/include/asm/msr.h:116:
+							   unsigned high)

WARNING:LINE_SPACING: Missing a blank line after declarations
#109: FILE: arch/x86/include/asm/msr.h:119:
+	int err;
+	asm volatile("2: wrmsr ; xor %[err],%[err]\n"

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#121: FILE: arch/x86/include/asm/msr.h:131:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#130: FILE: arch/x86/include/asm/msr.h:186:
+static inline int wrmsr_amd_safe(unsigned msr, unsigned low, unsigned high)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#130: FILE: arch/x86/include/asm/msr.h:186:
+static inline int wrmsr_amd_safe(unsigned msr, unsigned low, unsigned high)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#130: FILE: arch/x86/include/asm/msr.h:186:
+static inline int wrmsr_amd_safe(unsigned msr, unsigned low, unsigned high)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#146: FILE: arch/x86/include/asm/paravirt.h:172:
+	u64 (*write_msr_amd)(unsigned int msr, unsigned low, unsigned high);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#146: FILE: arch/x86/include/asm/paravirt.h:172:
+	u64 (*write_msr_amd)(unsigned int msr, unsigned low, unsigned high);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#154: FILE: arch/x86/include/asm/paravirt.h:833:
+static inline int paravirt_write_msr_amd(unsigned msr, unsigned low, unsigned high)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#154: FILE: arch/x86/include/asm/paravirt.h:833:
+static inline int paravirt_write_msr_amd(unsigned msr, unsigned low, unsigned high)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#154: FILE: arch/x86/include/asm/paravirt.h:833:
+static inline int paravirt_write_msr_amd(unsigned msr, unsigned low, unsigned high)

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#168: FILE: arch/x86/include/asm/paravirt.h:858:
+#define wrmsrl(msr, val)		wrmsr(msr, (u32)((u64)(val)), ((u64)(val))>>32)
                         		                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#168: FILE: arch/x86/include/asm/paravirt.h:858:
+#define wrmsrl(msr, val)		wrmsr(msr, (u32)((u64)(val)), ((u64)(val))>>32)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000083810.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 12 warnings, 3 checks, 90 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000083810.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
