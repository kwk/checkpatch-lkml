CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#59: FILE: arch/um/include/os.h:343:
+extern int os_arch_prctl(int pid, int code, unsigned long *addr);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#80: FILE: arch/um/os-Linux/sys-x86_64/prctl.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: arch/um/os-Linux/sys-x86_64/prctl.c:11:
+        return ptrace(PTRACE_ARCH_PRCTL, pid, (unsigned long) addr, code);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: No space is necessary after a cast
#90: FILE: arch/um/os-Linux/sys-x86_64/prctl.c:11:
+        return ptrace(PTRACE_ARCH_PRCTL, pid, (unsigned long) addr, code);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: arch/um/os-Linux/sys-x86_64/prctl.c:11:
+        return ptrace(PTRACE_ARCH_PRCTL, pid, (unsigned long) addr, code);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: arch/um/sys-x86_64/syscalls.c:64:
+        unsigned long *ptr = addr, tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: arch/um/sys-x86_64/syscalls.c:64:
+        unsigned long *ptr = addr, tmp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: arch/um/sys-x86_64/syscalls.c:66:
+        int pid = current->mm->context.skas.id.u.pid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: arch/um/sys-x86_64/syscalls.c:66:
+        int pid = current->mm->context.skas.id.u.pid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: arch/um/sys-x86_64/syscalls.c:83:
+                restore_registers(pid, &current->thread.regs.regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: arch/um/sys-x86_64/syscalls.c:83:
+                restore_registers(pid, &current->thread.regs.regs);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: arch/um/sys-x86_64/syscalls.c:84:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: arch/um/sys-x86_64/syscalls.c:84:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: arch/um/sys-x86_64/syscalls.c:85:
+        case ARCH_GET_FS:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: arch/um/sys-x86_64/syscalls.c:85:
+        case ARCH_GET_FS:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: arch/um/sys-x86_64/syscalls.c:86:
+        case ARCH_GET_GS:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: arch/um/sys-x86_64/syscalls.c:86:
+        case ARCH_GET_GS:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: arch/um/sys-x86_64/syscalls.c:87:
+                /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: arch/um/sys-x86_64/syscalls.c:88:
+                 * With these two, we read to a local pointer and$

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: arch/um/sys-x86_64/syscalls.c:89:
+                 * put_user it to the userspace pointer that we were$

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: arch/um/sys-x86_64/syscalls.c:90:
+                 * given.  If addr isn't valid (because it hasn't been$

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: arch/um/sys-x86_64/syscalls.c:91:
+                 * faulted in or is just bogus), we want put_user to$

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: arch/um/sys-x86_64/syscalls.c:92:
+                 * fault it in (or return -EFAULT) instead of having$

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: arch/um/sys-x86_64/syscalls.c:93:
+                 * the host return -EFAULT.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: arch/um/sys-x86_64/syscalls.c:94:
+                 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: arch/um/sys-x86_64/syscalls.c:95:
+                ptr = &tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: arch/um/sys-x86_64/syscalls.c:95:
+                ptr = &tmp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: arch/um/sys-x86_64/syscalls.c:96:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: arch/um/sys-x86_64/syscalls.c:96:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: arch/um/sys-x86_64/syscalls.c:98:
+        ret = os_arch_prctl(pid, code, ptr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: arch/um/sys-x86_64/syscalls.c:98:
+        ret = os_arch_prctl(pid, code, ptr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: arch/um/sys-x86_64/syscalls.c:99:
+        if(ret)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: arch/um/sys-x86_64/syscalls.c:99:
+        if(ret)$

ERROR:SPACING: space required before the open parenthesis '('
#151: FILE: arch/um/sys-x86_64/syscalls.c:99:
+        if(ret)

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: arch/um/sys-x86_64/syscalls.c:100:
+                return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: arch/um/sys-x86_64/syscalls.c:100:
+                return ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: arch/um/sys-x86_64/syscalls.c:102:
+        switch(code){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: arch/um/sys-x86_64/syscalls.c:102:
+        switch(code){$

ERROR:SPACING: space required before the open brace '{'
#154: FILE: arch/um/sys-x86_64/syscalls.c:102:
+        switch(code){

ERROR:SPACING: space required before the open parenthesis '('
#154: FILE: arch/um/sys-x86_64/syscalls.c:102:
+        switch(code){

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: arch/um/sys-x86_64/syscalls.c:105:
+                save_registers(pid, &current->thread.regs.regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: arch/um/sys-x86_64/syscalls.c:105:
+                save_registers(pid, &current->thread.regs.regs);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: arch/um/sys-x86_64/syscalls.c:122:
+                                (unsigned long __user *) addr);$

CHECK:SPACING: No space is necessary after a cast
#185: FILE: arch/um/sys-x86_64/syscalls.c:122:
+                                (unsigned long __user *) addr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: arch/um/sys-x86_64/syscalls.c:122:
+                                (unsigned long __user *) addr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: arch/um/sys-x86_64/syscalls.c:141:
+        if(to->thread.arch.fs == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: arch/um/sys-x86_64/syscalls.c:141:
+        if(to->thread.arch.fs == 0)$

ERROR:SPACING: space required before the open parenthesis '('
#199: FILE: arch/um/sys-x86_64/syscalls.c:141:
+        if(to->thread.arch.fs == 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: arch/um/sys-x86_64/syscalls.c:142:
+                return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: arch/um/sys-x86_64/syscalls.c:142:
+                return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: arch/um/sys-x86_64/syscalls.c:144:
+        arch_prctl_skas(ARCH_SET_FS, (void __user *) to->thread.arch.fs);$

CHECK:SPACING: No space is necessary after a cast
#202: FILE: arch/um/sys-x86_64/syscalls.c:144:
+        arch_prctl_skas(ARCH_SET_FS, (void __user *) to->thread.arch.fs);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: arch/um/sys-x86_64/syscalls.c:144:
+        arch_prctl_skas(ARCH_SET_FS, (void __user *) to->thread.arch.fs);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: include/asm-um/processor-x86_64.h:16:
+        unsigned long fs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: include/asm-um/processor-x86_64.h:16:
+        unsigned long fs;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: include/asm-um/processor-x86_64.h:29:
+                           .debugregs_seq^I= 0,^I^I^I       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: include/asm-um/processor-x86_64.h:29:
+                           .debugregs_seq^I= 0,^I^I^I       \$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#241: FILE: include/asm-um/ptrace-x86_64.h:84:
+extern void arch_switch_to_skas(struct task_struct *from,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000469687.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 32 errors, 21 warnings, 5 checks, 182 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000469687.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
