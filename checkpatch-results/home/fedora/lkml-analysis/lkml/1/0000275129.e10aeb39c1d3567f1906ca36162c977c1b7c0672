WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
http://www.lsi.com/storage_home/products_home/internal_raid/megaraid_sas/megaraid_sas_8204elp/index.html?locale=EN&remote=1

WARNING:TYPO_SPELLING: 'BA' may be misspelled - perhaps 'BY'?
#117: 
BA NV: IT & Security
^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: osl/lin/linux_osl.c:69:
+ module_param(dbglvl_g, uint, 0);$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#146: FILE: osl/lin/linux_osl.c:96:
 static int __devinit lsraid_probe_one(struct pci_dev*, 

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#156: FILE: osl/lin/linux_osl.c:562:
+	linux_adp_t				*linux_adp = container_of(work, linux_adp_t, work_build_io_in);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#168: FILE: osl/lin/linux_osl.c:640:
+	linux_adp_t				*linux_adp = container_of(work, linux_adp_t, work_build_io_out);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#178: FILE: osl/lin/linux_osl.c:965:
+static LSI_RAID_IRQRETURN_T lsraid_isr(int irq, void* os_cxt)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#202: FILE: osl/lin/linux_osl.h:115:
+#define LSI_RAID_HOST_SET_LOCK(host, lock) host->host_lock = lock;

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'host' may be better as '(host)' to avoid precedence issues
#202: FILE: osl/lin/linux_osl.h:115:
+#define LSI_RAID_HOST_SET_LOCK(host, lock) host->host_lock = lock;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#202: FILE: osl/lin/linux_osl.h:115:
+#define LSI_RAID_HOST_SET_LOCK(host, lock) host->host_lock = lock;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000275129.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 7 warnings, 1 checks, 68 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000275129.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
