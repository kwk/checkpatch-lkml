WARNING:TYPO_SPELLING: 'cancelation' may be misspelled - perhaps 'cancellation'?
#31: 
echo cancelation, tone generation, and Blowfish encryption and
     ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'cancelation' may be misspelled - perhaps 'cancellation'?
#84: FILE: drivers/isdn/mISDN/Kconfig:19:
+	  echo cancelation, tone generation, and Blowfish encryption and
 	       ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#88: FILE: drivers/isdn/mISDN/Kconfig:23:
+	  and get more informations about this module and it's usage.
 	               ^^^^^^^^^^^^

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#108: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#113: FILE: drivers/isdn/mISDN/dsp.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'accelleration' may be misspelled - perhaps 'acceleration'?
#135: FILE: drivers/isdn/mISDN/dsp.h:23:
+ * bit 1 = enable hfc hardware accelleration for all channels
                                ^^^^^^^^^^^^^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#138: FILE: drivers/isdn/mISDN/dsp.h:26:
+#define DSP_OPT_ULAW		(1<<0)
                     		  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#138: FILE: drivers/isdn/mISDN/dsp.h:26:
+#define DSP_OPT_ULAW		(1<<0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#139: FILE: drivers/isdn/mISDN/dsp.h:27:
+#define DSP_OPT_NOHARDWARE	(1<<1)
                           	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#139: FILE: drivers/isdn/mISDN/dsp.h:27:
+#define DSP_OPT_NOHARDWARE	(1<<1)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#166: FILE: drivers/isdn/mISDN/dsp.h:54:
+extern void dsp_audio_generate_law_tables(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#167: FILE: drivers/isdn/mISDN/dsp.h:55:
+extern void dsp_audio_generate_s2law_table(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#168: FILE: drivers/isdn/mISDN/dsp.h:56:
+extern void dsp_audio_generate_seven(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#169: FILE: drivers/isdn/mISDN/dsp.h:57:
+extern void dsp_audio_generate_mix_table(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#170: FILE: drivers/isdn/mISDN/dsp.h:58:
+extern void dsp_audio_generate_ulaw_samples(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#171: FILE: drivers/isdn/mISDN/dsp.h:59:
+extern void dsp_audio_generate_volume_changes(void);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#174: FILE: drivers/isdn/mISDN/dsp.h:62:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#186: FILE: drivers/isdn/mISDN/dsp.h:74:
+/* how many seconds will we check the lowest delay until the jitter buffer
+   is reduced by that delay */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#186: FILE: drivers/isdn/mISDN/dsp.h:74:
+   is reduced by that delay */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#212: FILE: drivers/isdn/mISDN/dsp.h:100:
+				/* all cmx stacks with the same ID are
+				 connected */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#212: FILE: drivers/isdn/mISDN/dsp.h:100:
+				 connected */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#219: FILE: drivers/isdn/mISDN/dsp.h:107:
+
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#226: FILE: drivers/isdn/mISDN/dsp.h:114:
+#define ECHOCAN_BUFLEN (4*128)
                          ^

WARNING:TYPO_SPELLING: 'treshold' may be misspelled - perhaps 'threshold'?
#229: FILE: drivers/isdn/mISDN/dsp.h:117:
+	int		treshold; /* above this is dtmf (square of) */
 	   		^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#240: FILE: drivers/isdn/mISDN/dsp.h:128:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <mISDNchannel>
#270: FILE: drivers/isdn/mISDN/dsp.h:158:
+	struct mISDNchannel	ch;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#306: FILE: drivers/isdn/mISDN/dsp.h:194:
+	int		cmx_delay; /* initial delay of buffers,
+				or 0 for dynamic jitter buffer */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#306: FILE: drivers/isdn/mISDN/dsp.h:194:
+				or 0 for dynamic jitter buffer */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#338: FILE: drivers/isdn/mISDN/dsp.h:226:
+extern void dsp_change_volume(struct sk_buff *skb, int volume);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#342: FILE: drivers/isdn/mISDN/dsp.h:230:
+extern void dsp_cmx_debug(struct dsp *dsp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#343: FILE: drivers/isdn/mISDN/dsp.h:231:
+extern void dsp_cmx_hardware(struct dsp_conf *conf, struct dsp *dsp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#344: FILE: drivers/isdn/mISDN/dsp.h:232:
+extern int dsp_cmx_conf(struct dsp *dsp, u32 conf_id);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#345: FILE: drivers/isdn/mISDN/dsp.h:233:
+extern void dsp_cmx_receive(struct dsp *dsp, struct sk_buff *skb);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#346: FILE: drivers/isdn/mISDN/dsp.h:234:
+extern void dsp_cmx_hdlc(struct dsp *dsp, struct sk_buff *skb);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#347: FILE: drivers/isdn/mISDN/dsp.h:235:
+extern void dsp_cmx_send(void *arg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#348: FILE: drivers/isdn/mISDN/dsp.h:236:
+extern void dsp_cmx_transmit(struct dsp *dsp, struct sk_buff *skb);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#349: FILE: drivers/isdn/mISDN/dsp.h:237:
+extern int dsp_cmx_del_conf_member(struct dsp *dsp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#350: FILE: drivers/isdn/mISDN/dsp.h:238:
+extern int dsp_cmx_del_conf(struct dsp_conf *conf);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#352: FILE: drivers/isdn/mISDN/dsp.h:240:
+extern void dsp_dtmf_goertzel_init(struct dsp *dsp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#353: FILE: drivers/isdn/mISDN/dsp.h:241:
+extern void dsp_dtmf_hardware(struct dsp *dsp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#354: FILE: drivers/isdn/mISDN/dsp.h:242:
+extern u8 *dsp_dtmf_goertzel_decode(struct dsp *dsp, u8 *data, int len,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#355: FILE: drivers/isdn/mISDN/dsp.h:243:
+extern u8 *dsp_dtmf_goertzel_decode(struct dsp *dsp, u8 *data, int len,
+		int fmt);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#357: FILE: drivers/isdn/mISDN/dsp.h:245:
+extern int dsp_tone(struct dsp *dsp, int tone);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#358: FILE: drivers/isdn/mISDN/dsp.h:246:
+extern void dsp_tone_copy(struct dsp *dsp, u8 *data, int len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#359: FILE: drivers/isdn/mISDN/dsp.h:247:
+extern void dsp_tone_timeout(void *arg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#361: FILE: drivers/isdn/mISDN/dsp.h:249:
+extern void dsp_bf_encrypt(struct dsp *dsp, u8 *data, int len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#362: FILE: drivers/isdn/mISDN/dsp.h:250:
+extern void dsp_bf_decrypt(struct dsp *dsp, u8 *data, int len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#363: FILE: drivers/isdn/mISDN/dsp.h:251:
+extern int dsp_bf_init(struct dsp *dsp, const u8 *key, unsigned int keylen);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#364: FILE: drivers/isdn/mISDN/dsp.h:252:
+extern void dsp_bf_cleanup(struct dsp *dsp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#366: FILE: drivers/isdn/mISDN/dsp.h:254:
+extern int  dsp_pipeline_module_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#367: FILE: drivers/isdn/mISDN/dsp.h:255:
+extern void dsp_pipeline_module_exit(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#368: FILE: drivers/isdn/mISDN/dsp.h:256:
+extern int  dsp_pipeline_init(struct dsp_pipeline *pipeline);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#369: FILE: drivers/isdn/mISDN/dsp.h:257:
+extern void dsp_pipeline_destroy(struct dsp_pipeline *pipeline);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#370: FILE: drivers/isdn/mISDN/dsp.h:258:
+extern int  dsp_pipeline_build(struct dsp_pipeline *pipeline, const char *cfg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#371: FILE: drivers/isdn/mISDN/dsp.h:259:
+extern void dsp_pipeline_process_tx(struct dsp_pipeline *pipeline, u8 *data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#372: FILE: drivers/isdn/mISDN/dsp.h:260:
+extern void dsp_pipeline_process_tx(struct dsp_pipeline *pipeline, u8 *data,
+		int len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#373: FILE: drivers/isdn/mISDN/dsp.h:261:
+extern void dsp_pipeline_process_rx(struct dsp_pipeline *pipeline, u8 *data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#374: FILE: drivers/isdn/mISDN/dsp.h:262:
+extern void dsp_pipeline_process_rx(struct dsp_pipeline *pipeline, u8 *data,
+		int len);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#382: FILE: drivers/isdn/mISDN/dsp_audio.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#417: FILE: drivers/isdn/mISDN/dsp_audio.c:36:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#453: FILE: drivers/isdn/mISDN/dsp_audio.c:72:
+
+

CHECK:SPACING: No space is necessary after a cast
#461: FILE: drivers/isdn/mISDN/dsp_audio.c:80:
+	seg = (((int) alaw & 0x70) >> 4);

CHECK:SPACING: No space is necessary after a cast
#464: FILE: drivers/isdn/mISDN/dsp_audio.c:83:
+	return (short int) ((alaw & 0x80)  ?  i  :  -i);

CHECK:CAMELCASE: Avoid CamelCase: <xFF>
#513: FILE: drivers/isdn/mISDN/dsp_audio.c:132:
+	exponent = exp_lut[(sample >> 7) & 0xFF];

WARNING:LINE_SPACING: Missing a blank line after declarations
#523: FILE: drivers/isdn/mISDN/dsp_audio.c:142:
+	int z, j;
+	z = 0;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#532: FILE: drivers/isdn/mISDN/dsp_audio.c:151:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#536: FILE: drivers/isdn/mISDN/dsp_audio.c:155:
+	int i;
+	for (i = 0; i < 256; i++)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#570: FILE: drivers/isdn/mISDN/dsp_audio.c:189:
+
+

WARNING:TYPO_SPELLING: 'aplitude' may be misspelled - perhaps 'amplitude'?
#573: FILE: drivers/isdn/mISDN/dsp_audio.c:192:
+ * aplitude. 0x00 is negative, 0x7f is positive amplitude.
    ^^^^^^^^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#593: FILE: drivers/isdn/mISDN/dsp_audio.c:212:
+			if (dsp_audio_alaw_to_s32[k]
[...]
+			j++;

WARNING:TYPO_SPELLING: 'tabels' may be misspelled - perhaps 'tables'?
#601: FILE: drivers/isdn/mISDN/dsp_audio.c:220:
+	/* generate tabels */
 	            ^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#623: FILE: drivers/isdn/mISDN/dsp_audio.c:242:
+
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#647: FILE: drivers/isdn/mISDN/dsp_audio.c:266:
+			dsp_audio_mix_law[(i<<8)|j] =
 			                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#647: FILE: drivers/isdn/mISDN/dsp_audio.c:266:
+			dsp_audio_mix_law[(i<<8)|j] =
 			                        ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#655: FILE: drivers/isdn/mISDN/dsp_audio.c:274:
+
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '['
#706: FILE: drivers/isdn/mISDN/dsp_audio.c:325:
+		dsp_audio_reduce8[i] = dsp_audio_s16_to_law[

CHECK:OPEN_ENDED_LINE: Lines should not end with a '['
#708: FILE: drivers/isdn/mISDN/dsp_audio.c:327:
+		dsp_audio_reduce7[i] = dsp_audio_s16_to_law[

CHECK:OPEN_ENDED_LINE: Lines should not end with a '['
#710: FILE: drivers/isdn/mISDN/dsp_audio.c:329:
+		dsp_audio_reduce6[i] = dsp_audio_s16_to_law[

CHECK:OPEN_ENDED_LINE: Lines should not end with a '['
#712: FILE: drivers/isdn/mISDN/dsp_audio.c:331:
+		dsp_audio_reduce5[i] = dsp_audio_s16_to_law[

CHECK:OPEN_ENDED_LINE: Lines should not end with a '['
#714: FILE: drivers/isdn/mISDN/dsp_audio.c:333:
+		dsp_audio_reduce4[i] = dsp_audio_s16_to_law[

CHECK:OPEN_ENDED_LINE: Lines should not end with a '['
#716: FILE: drivers/isdn/mISDN/dsp_audio.c:335:
+		dsp_audio_reduce3[i] = dsp_audio_s16_to_law[

CHECK:OPEN_ENDED_LINE: Lines should not end with a '['
#718: FILE: drivers/isdn/mISDN/dsp_audio.c:337:
+		dsp_audio_reduce2[i] = dsp_audio_s16_to_law[

CHECK:OPEN_ENDED_LINE: Lines should not end with a '['
#720: FILE: drivers/isdn/mISDN/dsp_audio.c:339:
+		dsp_audio_reduce1[i] = dsp_audio_s16_to_law[

CHECK:LINE_SPACING: Please don't use multiple blank lines
#775: FILE: drivers/isdn/mISDN/dsp_audio.c:394:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#822: FILE: drivers/isdn/mISDN/dsp_biquad.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#845: FILE: drivers/isdn/mISDN/dsp_biquad.h:24:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#846: FILE: drivers/isdn/mISDN/dsp_biquad.h:25:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#851: FILE: drivers/isdn/mISDN/dsp_biquad.h:30:
+	int32_t gain;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#852: FILE: drivers/isdn/mISDN/dsp_biquad.h:31:
+	int32_t a1;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#853: FILE: drivers/isdn/mISDN/dsp_biquad.h:32:
+	int32_t a2;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#854: FILE: drivers/isdn/mISDN/dsp_biquad.h:33:
+	int32_t b1;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#855: FILE: drivers/isdn/mISDN/dsp_biquad.h:34:
+	int32_t b2;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#857: FILE: drivers/isdn/mISDN/dsp_biquad.h:36:
+	int32_t z1;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#858: FILE: drivers/isdn/mISDN/dsp_biquad.h:37:
+	int32_t z2;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#862: FILE: drivers/isdn/mISDN/dsp_biquad.h:41:
+static inline void biquad2_init(struct biquad2_state *bq,
+    int32_t gain, int32_t a1, int32_t a2, int32_t b1, int32_t b2)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#862: FILE: drivers/isdn/mISDN/dsp_biquad.h:41:
+    int32_t gain, int32_t a1, int32_t a2, int32_t b1, int32_t b2)$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#862: FILE: drivers/isdn/mISDN/dsp_biquad.h:41:
+    int32_t gain, int32_t a1, int32_t a2, int32_t b1, int32_t b2)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#876: FILE: drivers/isdn/mISDN/dsp_biquad.h:55:
+	int32_t y;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#877: FILE: drivers/isdn/mISDN/dsp_biquad.h:56:
+	int32_t z0;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#879: FILE: drivers/isdn/mISDN/dsp_biquad.h:58:
+	z0 = sample*bq->gain + bq->z1*bq->a1 + bq->z2*bq->a2;
 	           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#879: FILE: drivers/isdn/mISDN/dsp_biquad.h:58:
+	z0 = sample*bq->gain + bq->z1*bq->a1 + bq->z2*bq->a2;
 	                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#879: FILE: drivers/isdn/mISDN/dsp_biquad.h:58:
+	z0 = sample*bq->gain + bq->z1*bq->a1 + bq->z2*bq->a2;
 	                                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#880: FILE: drivers/isdn/mISDN/dsp_biquad.h:59:
+	y = z0 + bq->z1*bq->b1 + bq->z2*bq->b2;
 	               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#880: FILE: drivers/isdn/mISDN/dsp_biquad.h:59:
+	y = z0 + bq->z1*bq->b1 + bq->z2*bq->b2;
 	                               ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#893: FILE: drivers/isdn/mISDN/dsp_blowfish.c:1:
+/*

WARNING:TYPO_SPELLING: 'crypted' may be misspelled - perhaps 'encrypted'?
#938: FILE: drivers/isdn/mISDN/dsp_blowfish.c:46:
+ * (5(6) means: crypted byte 5, bit 6)
                 ^^^^^^^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#1249: FILE: drivers/isdn/mISDN/dsp_blowfish.c:357:
+#define bf_F(x) (((S[GET32_0(x)] + S[256 + GET32_1(x)]) ^ \
+    S[512 + GET32_2(x)]) + S[768 + GET32_3(x)])

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1250: FILE: drivers/isdn/mISDN/dsp_blowfish.c:358:
+    S[512 + GET32_2(x)]) + S[768 + GET32_3(x)])$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#1252: FILE: drivers/isdn/mISDN/dsp_blowfish.c:360:
+#define EROUND(a, b, n)  do { b ^= P[n]; a ^= bf_F(b); } while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#1252: FILE: drivers/isdn/mISDN/dsp_blowfish.c:360:
+#define EROUND(a, b, n)  do { b ^= P[n]; a ^= bf_F(b); } while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'b' may be better as '(b)' to avoid precedence issues
#1252: FILE: drivers/isdn/mISDN/dsp_blowfish.c:360:
+#define EROUND(a, b, n)  do { b ^= P[n]; a ^= bf_F(b); } while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#1253: FILE: drivers/isdn/mISDN/dsp_blowfish.c:361:
+#define DROUND(a, b, n)  do { a ^= bf_F(b); b ^= P[n]; } while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#1253: FILE: drivers/isdn/mISDN/dsp_blowfish.c:361:
+#define DROUND(a, b, n)  do { a ^= bf_F(b); b ^= P[n]; } while (0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1255: FILE: drivers/isdn/mISDN/dsp_blowfish.c:363:
+
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1283: FILE: drivers/isdn/mISDN/dsp_blowfish.c:391:
+		yl = (yl<<7) | dsp_audio_law2seven[bf_data_in[1]];
 		        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1284: FILE: drivers/isdn/mISDN/dsp_blowfish.c:392:
+		yl = (yl<<7) | dsp_audio_law2seven[bf_data_in[2]];
 		        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1285: FILE: drivers/isdn/mISDN/dsp_blowfish.c:393:
+		yl = (yl<<7) | dsp_audio_law2seven[bf_data_in[3]];
 		        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1288: FILE: drivers/isdn/mISDN/dsp_blowfish.c:396:
+		yl = (yl<<4) | (nibble>>3);
 		        ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1288: FILE: drivers/isdn/mISDN/dsp_blowfish.c:396:
+		yl = (yl<<4) | (nibble>>3);
 		                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1289: FILE: drivers/isdn/mISDN/dsp_blowfish.c:397:
+		yr = (yr<<7) | dsp_audio_law2seven[bf_data_in[5]];
 		        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1290: FILE: drivers/isdn/mISDN/dsp_blowfish.c:398:
+		yr = (yr<<7) | dsp_audio_law2seven[bf_data_in[6]];
 		        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1291: FILE: drivers/isdn/mISDN/dsp_blowfish.c:399:
+		yr = (yr<<7) | dsp_audio_law2seven[bf_data_in[7]];
 		        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1292: FILE: drivers/isdn/mISDN/dsp_blowfish.c:400:
+		yr = (yr<<7) | dsp_audio_law2seven[bf_data_in[8]];
 		        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1293: FILE: drivers/isdn/mISDN/dsp_blowfish.c:401:
+		yr = (yr<<1) | (bf_data_in[0] & 1);
 		        ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1318: FILE: drivers/isdn/mISDN/dsp_blowfish.c:426:
+		cs = yl ^ (yl>>3) ^ (yl>>6) ^ (yl>>9) ^ (yl>>12) ^ (yl>>15)
 		             ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1318: FILE: drivers/isdn/mISDN/dsp_blowfish.c:426:
+		cs = yl ^ (yl>>3) ^ (yl>>6) ^ (yl>>9) ^ (yl>>12) ^ (yl>>15)
 		                       ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1318: FILE: drivers/isdn/mISDN/dsp_blowfish.c:426:
+		cs = yl ^ (yl>>3) ^ (yl>>6) ^ (yl>>9) ^ (yl>>12) ^ (yl>>15)
 		                                 ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1318: FILE: drivers/isdn/mISDN/dsp_blowfish.c:426:
+		cs = yl ^ (yl>>3) ^ (yl>>6) ^ (yl>>9) ^ (yl>>12) ^ (yl>>15)
 		                                           ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1318: FILE: drivers/isdn/mISDN/dsp_blowfish.c:426:
+		cs = yl ^ (yl>>3) ^ (yl>>6) ^ (yl>>9) ^ (yl>>12) ^ (yl>>15)
 		                                                      ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1319: FILE: drivers/isdn/mISDN/dsp_blowfish.c:427:
+			^ (yl>>18) ^ (yl>>21) ^ (yl>>24) ^ (yl>>27) ^ (yl>>30)
 			     ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1319: FILE: drivers/isdn/mISDN/dsp_blowfish.c:427:
+			^ (yl>>18) ^ (yl>>21) ^ (yl>>24) ^ (yl>>27) ^ (yl>>30)
 			                ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1319: FILE: drivers/isdn/mISDN/dsp_blowfish.c:427:
+			^ (yl>>18) ^ (yl>>21) ^ (yl>>24) ^ (yl>>27) ^ (yl>>30)
 			                           ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1319: FILE: drivers/isdn/mISDN/dsp_blowfish.c:427:
+			^ (yl>>18) ^ (yl>>21) ^ (yl>>24) ^ (yl>>27) ^ (yl>>30)
 			                                      ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1319: FILE: drivers/isdn/mISDN/dsp_blowfish.c:427:
+			^ (yl>>18) ^ (yl>>21) ^ (yl>>24) ^ (yl>>27) ^ (yl>>30)
 			                                                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1320: FILE: drivers/isdn/mISDN/dsp_blowfish.c:428:
+			^ (yr<<2) ^ (yr>>1) ^ (yr>>4) ^ (yr>>7) ^ (yr>>10)
 			     ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1320: FILE: drivers/isdn/mISDN/dsp_blowfish.c:428:
+			^ (yr<<2) ^ (yr>>1) ^ (yr>>4) ^ (yr>>7) ^ (yr>>10)
 			               ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1320: FILE: drivers/isdn/mISDN/dsp_blowfish.c:428:
+			^ (yr<<2) ^ (yr>>1) ^ (yr>>4) ^ (yr>>7) ^ (yr>>10)
 			                         ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1320: FILE: drivers/isdn/mISDN/dsp_blowfish.c:428:
+			^ (yr<<2) ^ (yr>>1) ^ (yr>>4) ^ (yr>>7) ^ (yr>>10)
 			                                   ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1320: FILE: drivers/isdn/mISDN/dsp_blowfish.c:428:
+			^ (yr<<2) ^ (yr>>1) ^ (yr>>4) ^ (yr>>7) ^ (yr>>10)
 			                                             ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1321: FILE: drivers/isdn/mISDN/dsp_blowfish.c:429:
+			^ (yr>>13) ^ (yr>>16) ^ (yr>>19) ^ (yr>>22) ^ (yr>>25)
 			     ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1321: FILE: drivers/isdn/mISDN/dsp_blowfish.c:429:
+			^ (yr>>13) ^ (yr>>16) ^ (yr>>19) ^ (yr>>22) ^ (yr>>25)
 			                ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1321: FILE: drivers/isdn/mISDN/dsp_blowfish.c:429:
+			^ (yr>>13) ^ (yr>>16) ^ (yr>>19) ^ (yr>>22) ^ (yr>>25)
 			                           ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1321: FILE: drivers/isdn/mISDN/dsp_blowfish.c:429:
+			^ (yr>>13) ^ (yr>>16) ^ (yr>>19) ^ (yr>>22) ^ (yr>>25)
 			                                      ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1321: FILE: drivers/isdn/mISDN/dsp_blowfish.c:429:
+			^ (yr>>13) ^ (yr>>16) ^ (yr>>19) ^ (yr>>22) ^ (yr>>25)
 			                                                 ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1322: FILE: drivers/isdn/mISDN/dsp_blowfish.c:430:
+			^ (yr>>28) ^ (yr>>31);
 			     ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1322: FILE: drivers/isdn/mISDN/dsp_blowfish.c:430:
+			^ (yr>>28) ^ (yr>>31);
 			                ^

WARNING:TYPO_SPELLING: 'crypted' may be misspelled - perhaps 'encrypted'?
#1325: FILE: drivers/isdn/mISDN/dsp_blowfish.c:433:
+		 * transcode 8 crypted bytes to 9 data bytes with sync
 		               ^^^^^^^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1328: FILE: drivers/isdn/mISDN/dsp_blowfish.c:436:
+		bf_crypt_out[0] = (yl>>25) | 0x80;
 		                     ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1329: FILE: drivers/isdn/mISDN/dsp_blowfish.c:437:
+		bf_crypt_out[1] = (yl>>18) & 0x7f;
 		                     ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1330: FILE: drivers/isdn/mISDN/dsp_blowfish.c:438:
+		bf_crypt_out[2] = (yl>>11) & 0x7f;
 		                     ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1331: FILE: drivers/isdn/mISDN/dsp_blowfish.c:439:
+		bf_crypt_out[3] = (yl>>4) & 0x7f;
 		                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1332: FILE: drivers/isdn/mISDN/dsp_blowfish.c:440:
+		bf_crypt_out[4] = ((yl<<3) & 0x78) | ((yr>>29) & 0x07);
 		                      ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1332: FILE: drivers/isdn/mISDN/dsp_blowfish.c:440:
+		bf_crypt_out[4] = ((yl<<3) & 0x78) | ((yr>>29) & 0x07);
 		                                         ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1333: FILE: drivers/isdn/mISDN/dsp_blowfish.c:441:
+		bf_crypt_out[5] = ((yr>>22) & 0x7f) | ((cs<<5) & 0x80);
 		                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1333: FILE: drivers/isdn/mISDN/dsp_blowfish.c:441:
+		bf_crypt_out[5] = ((yr>>22) & 0x7f) | ((cs<<5) & 0x80);
 		                                          ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1334: FILE: drivers/isdn/mISDN/dsp_blowfish.c:442:
+		bf_crypt_out[6] = ((yr>>15) & 0x7f) | ((cs<<6) & 0x80);
 		                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1334: FILE: drivers/isdn/mISDN/dsp_blowfish.c:442:
+		bf_crypt_out[6] = ((yr>>15) & 0x7f) | ((cs<<6) & 0x80);
 		                                          ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1335: FILE: drivers/isdn/mISDN/dsp_blowfish.c:443:
+		bf_crypt_out[7] = ((yr>>8) & 0x7f) | (cs<<7);
 		                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1335: FILE: drivers/isdn/mISDN/dsp_blowfish.c:443:
+		bf_crypt_out[7] = ((yr>>8) & 0x7f) | (cs<<7);
 		                                        ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1342: FILE: drivers/isdn/mISDN/dsp_blowfish.c:450:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1344: FILE: drivers/isdn/mISDN/dsp_blowfish.c:452:
+
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1369: FILE: drivers/isdn/mISDN/dsp_blowfish.c:477:
+		sync = (sync<<1) | ((*data)>>7);
 		            ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1369: FILE: drivers/isdn/mISDN/dsp_blowfish.c:477:
+		sync = (sync<<1) | ((*data)>>7);
 		                           ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1376: FILE: drivers/isdn/mISDN/dsp_blowfish.c:484:
+		if ((sync&0x1f0) != 0x100)
 		         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1381: FILE: drivers/isdn/mISDN/dsp_blowfish.c:489:
+		yl = (yl<<7) | bf_crypt_inring[j++ & 15]; /* bit7 = 0 */
 		        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1382: FILE: drivers/isdn/mISDN/dsp_blowfish.c:490:
+		yl = (yl<<7) | bf_crypt_inring[j++ & 15]; /* bit7 = 0 */
 		        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1383: FILE: drivers/isdn/mISDN/dsp_blowfish.c:491:
+		yl = (yl<<7) | bf_crypt_inring[j++ & 15]; /* bit7 = 0 */
 		        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1386: FILE: drivers/isdn/mISDN/dsp_blowfish.c:494:
+		yl = (yl<<4) | (nibble>>3);
 		        ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1386: FILE: drivers/isdn/mISDN/dsp_blowfish.c:494:
+		yl = (yl<<4) | (nibble>>3);
 		                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1388: FILE: drivers/isdn/mISDN/dsp_blowfish.c:496:
+		yr = (yr<<7) | (cs2 & 0x7f);
 		        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1390: FILE: drivers/isdn/mISDN/dsp_blowfish.c:498:
+		yr = (yr<<7) | (cs1 & 0x7f);
 		        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1392: FILE: drivers/isdn/mISDN/dsp_blowfish.c:500:
+		yr = (yr<<7) | (cs0 & 0x7f);
 		        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1393: FILE: drivers/isdn/mISDN/dsp_blowfish.c:501:
+		yr = (yr<<8) | bf_crypt_inring[j++ & 15];
 		        ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1396: FILE: drivers/isdn/mISDN/dsp_blowfish.c:504:
+		cs = yl ^ (yl>>3) ^ (yl>>6) ^ (yl>>9) ^ (yl>>12) ^ (yl>>15)
 		             ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1396: FILE: drivers/isdn/mISDN/dsp_blowfish.c:504:
+		cs = yl ^ (yl>>3) ^ (yl>>6) ^ (yl>>9) ^ (yl>>12) ^ (yl>>15)
 		                       ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1396: FILE: drivers/isdn/mISDN/dsp_blowfish.c:504:
+		cs = yl ^ (yl>>3) ^ (yl>>6) ^ (yl>>9) ^ (yl>>12) ^ (yl>>15)
 		                                 ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1396: FILE: drivers/isdn/mISDN/dsp_blowfish.c:504:
+		cs = yl ^ (yl>>3) ^ (yl>>6) ^ (yl>>9) ^ (yl>>12) ^ (yl>>15)
 		                                           ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1396: FILE: drivers/isdn/mISDN/dsp_blowfish.c:504:
+		cs = yl ^ (yl>>3) ^ (yl>>6) ^ (yl>>9) ^ (yl>>12) ^ (yl>>15)
 		                                                      ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1397: FILE: drivers/isdn/mISDN/dsp_blowfish.c:505:
+			^ (yl>>18) ^ (yl>>21) ^ (yl>>24) ^ (yl>>27) ^ (yl>>30)
 			     ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1397: FILE: drivers/isdn/mISDN/dsp_blowfish.c:505:
+			^ (yl>>18) ^ (yl>>21) ^ (yl>>24) ^ (yl>>27) ^ (yl>>30)
 			                ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1397: FILE: drivers/isdn/mISDN/dsp_blowfish.c:505:
+			^ (yl>>18) ^ (yl>>21) ^ (yl>>24) ^ (yl>>27) ^ (yl>>30)
 			                           ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1397: FILE: drivers/isdn/mISDN/dsp_blowfish.c:505:
+			^ (yl>>18) ^ (yl>>21) ^ (yl>>24) ^ (yl>>27) ^ (yl>>30)
 			                                      ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1397: FILE: drivers/isdn/mISDN/dsp_blowfish.c:505:
+			^ (yl>>18) ^ (yl>>21) ^ (yl>>24) ^ (yl>>27) ^ (yl>>30)
 			                                                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1398: FILE: drivers/isdn/mISDN/dsp_blowfish.c:506:
+			^ (yr<<2) ^ (yr>>1) ^ (yr>>4) ^ (yr>>7) ^ (yr>>10)
 			     ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1398: FILE: drivers/isdn/mISDN/dsp_blowfish.c:506:
+			^ (yr<<2) ^ (yr>>1) ^ (yr>>4) ^ (yr>>7) ^ (yr>>10)
 			               ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1398: FILE: drivers/isdn/mISDN/dsp_blowfish.c:506:
+			^ (yr<<2) ^ (yr>>1) ^ (yr>>4) ^ (yr>>7) ^ (yr>>10)
 			                         ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1398: FILE: drivers/isdn/mISDN/dsp_blowfish.c:506:
+			^ (yr<<2) ^ (yr>>1) ^ (yr>>4) ^ (yr>>7) ^ (yr>>10)
 			                                   ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1398: FILE: drivers/isdn/mISDN/dsp_blowfish.c:506:
+			^ (yr<<2) ^ (yr>>1) ^ (yr>>4) ^ (yr>>7) ^ (yr>>10)
 			                                             ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1399: FILE: drivers/isdn/mISDN/dsp_blowfish.c:507:
+			^ (yr>>13) ^ (yr>>16) ^ (yr>>19) ^ (yr>>22) ^ (yr>>25)
 			     ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1399: FILE: drivers/isdn/mISDN/dsp_blowfish.c:507:
+			^ (yr>>13) ^ (yr>>16) ^ (yr>>19) ^ (yr>>22) ^ (yr>>25)
 			                ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1399: FILE: drivers/isdn/mISDN/dsp_blowfish.c:507:
+			^ (yr>>13) ^ (yr>>16) ^ (yr>>19) ^ (yr>>22) ^ (yr>>25)
 			                           ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1399: FILE: drivers/isdn/mISDN/dsp_blowfish.c:507:
+			^ (yr>>13) ^ (yr>>16) ^ (yr>>19) ^ (yr>>22) ^ (yr>>25)
 			                                      ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1399: FILE: drivers/isdn/mISDN/dsp_blowfish.c:507:
+			^ (yr>>13) ^ (yr>>16) ^ (yr>>19) ^ (yr>>22) ^ (yr>>25)
 			                                                 ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1400: FILE: drivers/isdn/mISDN/dsp_blowfish.c:508:
+			^ (yr>>28) ^ (yr>>31);
 			     ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1400: FILE: drivers/isdn/mISDN/dsp_blowfish.c:508:
+			^ (yr>>28) ^ (yr>>31);
 			                ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1403: FILE: drivers/isdn/mISDN/dsp_blowfish.c:511:
+		if ((cs&0x7) != (((cs2>>5)&4) | ((cs1>>6)&2) | (cs0 >> 7))) {
 		       ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1403: FILE: drivers/isdn/mISDN/dsp_blowfish.c:511:
+		if ((cs&0x7) != (((cs2>>5)&4) | ((cs1>>6)&2) | (cs0 >> 7))) {
 		                      ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1403: FILE: drivers/isdn/mISDN/dsp_blowfish.c:511:
+		if ((cs&0x7) != (((cs2>>5)&4) | ((cs1>>6)&2) | (cs0 >> 7))) {
 		                          ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1403: FILE: drivers/isdn/mISDN/dsp_blowfish.c:511:
+		if ((cs&0x7) != (((cs2>>5)&4) | ((cs1>>6)&2) | (cs0 >> 7))) {
 		                                     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1403: FILE: drivers/isdn/mISDN/dsp_blowfish.c:511:
+		if ((cs&0x7) != (((cs2>>5)&4) | ((cs1>>6)&2) | (cs0 >> 7))) {
 		                                         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1405: FILE: drivers/isdn/mISDN/dsp_blowfish.c:513:
+				printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#1407: FILE: drivers/isdn/mISDN/dsp_blowfish.c:515:
+				    "DSP BLOWFISH: received corrupt frame, "
+				    "checksumme is not correct\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'crypted' may be misspelled - perhaps 'encrypted'?
#1431: FILE: drivers/isdn/mISDN/dsp_blowfish.c:539:
+		/* transcode 8 crypted bytes to 9 sample bytes */
 		               ^^^^^^^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1432: FILE: drivers/isdn/mISDN/dsp_blowfish.c:540:
+		bf_data_out[0] = dsp_audio_seven2law[(yl>>25) & 0x7f];
 		                                        ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1433: FILE: drivers/isdn/mISDN/dsp_blowfish.c:541:
+		bf_data_out[1] = dsp_audio_seven2law[(yl>>18) & 0x7f];
 		                                        ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1434: FILE: drivers/isdn/mISDN/dsp_blowfish.c:542:
+		bf_data_out[2] = dsp_audio_seven2law[(yl>>11) & 0x7f];
 		                                        ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1435: FILE: drivers/isdn/mISDN/dsp_blowfish.c:543:
+		bf_data_out[3] = dsp_audio_seven2law[(yl>>4) & 0x7f];
 		                                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1436: FILE: drivers/isdn/mISDN/dsp_blowfish.c:544:
+		bf_data_out[4] = dsp_audio_seven2law[((yl<<3) & 0x78) |
 		                                         ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1437: FILE: drivers/isdn/mISDN/dsp_blowfish.c:545:
+		    ((yr>>29) & 0x07)];
 		        ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1439: FILE: drivers/isdn/mISDN/dsp_blowfish.c:547:
+		bf_data_out[5] = dsp_audio_seven2law[(yr>>22) & 0x7f];
 		                                        ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1440: FILE: drivers/isdn/mISDN/dsp_blowfish.c:548:
+		bf_data_out[6] = dsp_audio_seven2law[(yr>>15) & 0x7f];
 		                                        ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1441: FILE: drivers/isdn/mISDN/dsp_blowfish.c:549:
+		bf_data_out[7] = dsp_audio_seven2law[(yr>>8) & 0x7f];
 		                                        ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1442: FILE: drivers/isdn/mISDN/dsp_blowfish.c:550:
+		bf_data_out[8] = dsp_audio_seven2law[(yr>>1) & 0x7f];
 		                                        ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1452: FILE: drivers/isdn/mISDN/dsp_blowfish.c:560:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1556: FILE: drivers/isdn/mISDN/dsp_blowfish.c:664:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1571: FILE: drivers/isdn/mISDN/dsp_cmx.c:1:
+/*

WARNING:TYPO_SPELLING: 'conferrencing' may be misspelled - perhaps 'conferencing'?
#1572: FILE: drivers/isdn/mISDN/dsp_cmx.c:2:
+ * Audio crossconnecting/conferrencing (hardware level).
                          ^^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'diabled' may be misspelled - perhaps 'disabled'?
#1685: FILE: drivers/isdn/mISDN/dsp_cmx.c:115:
+ * will not be diabled but blocked to the upper layer.
                ^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1733: FILE: drivers/isdn/mISDN/dsp_cmx.c:163:
+	printk(KERN_DEBUG "-----Current DSP\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1735: FILE: drivers/isdn/mISDN/dsp_cmx.c:165:
+		printk(KERN_DEBUG "* %s echo=%d txmix=%d",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1736: FILE: drivers/isdn/mISDN/dsp_cmx.c:166:
+		printk(KERN_DEBUG "* %s echo=%d txmix=%d",
+		    odsp->name, odsp->echo, odsp->tx_mix);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1738: FILE: drivers/isdn/mISDN/dsp_cmx.c:168:
+			printk(" (Conf %d)", odsp->conf->id);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1740: FILE: drivers/isdn/mISDN/dsp_cmx.c:170:
+			printk(" *this*");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1741: FILE: drivers/isdn/mISDN/dsp_cmx.c:171:
+		printk("\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1743: FILE: drivers/isdn/mISDN/dsp_cmx.c:173:
+	printk(KERN_DEBUG "-----Current Conf:\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1745: FILE: drivers/isdn/mISDN/dsp_cmx.c:175:
+		printk(KERN_DEBUG "* Conf %d (%p)\n", conf->id, conf);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1747: FILE: drivers/isdn/mISDN/dsp_cmx.c:177:
+			printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#1749: FILE: drivers/isdn/mISDN/dsp_cmx.c:179:
+			    "  - member = %s (slot_tx %d, bank_tx %d, "
+			    "slot_rx %d, bank_rx %d hfc_conf %d)%s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1756: FILE: drivers/isdn/mISDN/dsp_cmx.c:186:
+	printk(KERN_DEBUG "-----end\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1768: FILE: drivers/isdn/mISDN/dsp_cmx.c:198:
+		printk(KERN_WARNING "%s: conference ID is 0.\n", __func__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1780: FILE: drivers/isdn/mISDN/dsp_cmx.c:210:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1790: FILE: drivers/isdn/mISDN/dsp_cmx.c:220:
+		printk(KERN_WARNING "%s: conf or dsp is 0.\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1794: FILE: drivers/isdn/mISDN/dsp_cmx.c:224:
+		printk(KERN_WARNING "%s: dsp is already member in a conf.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1795: FILE: drivers/isdn/mISDN/dsp_cmx.c:225:
+		printk(KERN_WARNING "%s: dsp is already member in a conf.\n",
+			__func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1800: FILE: drivers/isdn/mISDN/dsp_cmx.c:230:
+		printk(KERN_WARNING "%s: dsp is already in a conf.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1801: FILE: drivers/isdn/mISDN/dsp_cmx.c:231:
+		printk(KERN_WARNING "%s: dsp is already in a conf.\n",
+			__func__);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*member)...) over kzalloc(sizeof(struct dsp_conf_member)...)
#1805: FILE: drivers/isdn/mISDN/dsp_cmx.c:235:
+	member = kzalloc(sizeof(struct dsp_conf_member), GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1807: FILE: drivers/isdn/mISDN/dsp_cmx.c:237:
+		printk(KERN_ERR "kmalloc struct dsp_conf_member failed\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1807: FILE: drivers/isdn/mISDN/dsp_cmx.c:237:
+	if (!member) {
+		printk(KERN_ERR "kmalloc struct dsp_conf_member failed\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1825: FILE: drivers/isdn/mISDN/dsp_cmx.c:255:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1835: FILE: drivers/isdn/mISDN/dsp_cmx.c:265:
+		printk(KERN_WARNING "%s: dsp is 0.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1836: FILE: drivers/isdn/mISDN/dsp_cmx.c:266:
+		printk(KERN_WARNING "%s: dsp is 0.\n",
+			__func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1841: FILE: drivers/isdn/mISDN/dsp_cmx.c:271:
+		printk(KERN_WARNING "%s: dsp is not in a conf.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1842: FILE: drivers/isdn/mISDN/dsp_cmx.c:272:
+		printk(KERN_WARNING "%s: dsp is not in a conf.\n",
+			__func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1847: FILE: drivers/isdn/mISDN/dsp_cmx.c:277:
+		printk(KERN_WARNING "%s: dsp has linked an empty conf.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1848: FILE: drivers/isdn/mISDN/dsp_cmx.c:278:
+		printk(KERN_WARNING "%s: dsp has linked an empty conf.\n",
+			__func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1862: FILE: drivers/isdn/mISDN/dsp_cmx.c:292:
+	printk(KERN_WARNING

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1869: FILE: drivers/isdn/mISDN/dsp_cmx.c:299:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1879: FILE: drivers/isdn/mISDN/dsp_cmx.c:309:
+		printk(KERN_WARNING "%s: id is 0.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1880: FILE: drivers/isdn/mISDN/dsp_cmx.c:310:
+		printk(KERN_WARNING "%s: id is 0.\n",
+		    __func__);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*conf)...) over kzalloc(sizeof(struct dsp_conf)...)
#1884: FILE: drivers/isdn/mISDN/dsp_cmx.c:314:
+	conf = kzalloc(sizeof(struct dsp_conf), GFP_ATOMIC);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1886: FILE: drivers/isdn/mISDN/dsp_cmx.c:316:
+		printk(KERN_ERR "kmalloc struct dsp_conf failed\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1886: FILE: drivers/isdn/mISDN/dsp_cmx.c:316:
+	if (!conf) {
+		printk(KERN_ERR "kmalloc struct dsp_conf failed\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1897: FILE: drivers/isdn/mISDN/dsp_cmx.c:327:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1905: FILE: drivers/isdn/mISDN/dsp_cmx.c:335:
+		printk(KERN_WARNING "%s: conf is null.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1906: FILE: drivers/isdn/mISDN/dsp_cmx.c:336:
+		printk(KERN_WARNING "%s: conf is null.\n",
+		    __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1911: FILE: drivers/isdn/mISDN/dsp_cmx.c:341:
+		printk(KERN_WARNING "%s: conf not empty.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1912: FILE: drivers/isdn/mISDN/dsp_cmx.c:342:
+		printk(KERN_WARNING "%s: conf not empty.\n",
+		    __func__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1921: FILE: drivers/isdn/mISDN/dsp_cmx.c:351:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1927: FILE: drivers/isdn/mISDN/dsp_cmx.c:357:
+dsp_cmx_hw_message(struct dsp *dsp, u32 message, u32 param1, u32 param2,
+    u32 param3, u32 param4)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1927: FILE: drivers/isdn/mISDN/dsp_cmx.c:357:
+    u32 param3, u32 param4)$

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_ctrl_req>
#1929: FILE: drivers/isdn/mISDN/dsp_cmx.c:359:
+	struct mISDN_ctrl_req cq;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1939: FILE: drivers/isdn/mISDN/dsp_cmx.c:369:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1964: FILE: drivers/isdn/mISDN/dsp_cmx.c:394:
+			printk(KERN_DEBUG "%s checking dsp %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1965: FILE: drivers/isdn/mISDN/dsp_cmx.c:395:
+			printk(KERN_DEBUG "%s checking dsp %s\n",
+			    __func__, dsp->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1970: FILE: drivers/isdn/mISDN/dsp_cmx.c:400:
+				printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#1972: FILE: drivers/isdn/mISDN/dsp_cmx.c:402:
+				    "%s removing %s from HFC conf %d "
+				    "because dsp is split\n", __func__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1975: FILE: drivers/isdn/mISDN/dsp_cmx.c:405:
+			dsp_cmx_hw_message(dsp, MISDN_CTRL_HFC_CONF_SPLIT,
+			    0, 0, 0, 0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1985: FILE: drivers/isdn/mISDN/dsp_cmx.c:415:
+					printk(KERN_DEBUG "%s removing %s from"

WARNING:SPLIT_STRING: quoted string split across lines
#1986: FILE: drivers/isdn/mISDN/dsp_cmx.c:416:
+					printk(KERN_DEBUG "%s removing %s from"
+					    " PCM slot %d (TX) %d (RX) because"

WARNING:SPLIT_STRING: quoted string split across lines
#1987: FILE: drivers/isdn/mISDN/dsp_cmx.c:417:
+					    " PCM slot %d (TX) %d (RX) because"
+					    " dsp is split (no echo)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1991: FILE: drivers/isdn/mISDN/dsp_cmx.c:421:
+				dsp_cmx_hw_message(dsp, MISDN_CTRL_HFC_PCM_DISC,
+				    0, 0, 0, 0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2009: FILE: drivers/isdn/mISDN/dsp_cmx.c:439:
+				printk(KERN_DEBUG

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2014: FILE: drivers/isdn/mISDN/dsp_cmx.c:444:
+			dsp_cmx_hw_message(dsp, MISDN_CTRL_HFC_PCM_CONN,
+			    dsp->pcm_slot_tx, 2, dsp->pcm_slot_rx, 2);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2040: FILE: drivers/isdn/mISDN/dsp_cmx.c:470:
+				printk(KERN_DEBUG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2052: FILE: drivers/isdn/mISDN/dsp_cmx.c:482:
+			printk(KERN_DEBUG

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2056: FILE: drivers/isdn/mISDN/dsp_cmx.c:486:
+		dsp_cmx_hw_message(dsp, MISDN_CTRL_HFC_PCM_CONN,
+		    dsp->pcm_slot_tx, 2, dsp->pcm_slot_rx, 2);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2062: FILE: drivers/isdn/mISDN/dsp_cmx.c:492:
+		printk(KERN_DEBUG "%s checking conference %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2063: FILE: drivers/isdn/mISDN/dsp_cmx.c:493:
+		printk(KERN_DEBUG "%s checking conference %d\n",
+		    __func__, conf->id);

WARNING:TYPO_SPELLING: 'whithout' may be misspelled - perhaps 'without'?
#2066: FILE: drivers/isdn/mISDN/dsp_cmx.c:496:
+		printk(KERN_ERR "%s: conference whithout members\n",
 		                                ^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2066: FILE: drivers/isdn/mISDN/dsp_cmx.c:496:
+		printk(KERN_ERR "%s: conference whithout members\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2067: FILE: drivers/isdn/mISDN/dsp_cmx.c:497:
+		printk(KERN_ERR "%s: conference whithout members\n",
+		    __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2078: FILE: drivers/isdn/mISDN/dsp_cmx.c:508:
+				printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#2080: FILE: drivers/isdn/mISDN/dsp_cmx.c:510:
+				    "%s dsp %s cannot form a conf, because "
+				    "tx_mix is turned on\n", __func__,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2088: FILE: drivers/isdn/mISDN/dsp_cmx.c:518:
+						printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#2090: FILE: drivers/isdn/mISDN/dsp_cmx.c:520:
+						    "%s removing %s from HFC "
+						    "conf %d because not "

WARNING:SPLIT_STRING: quoted string split across lines
#2091: FILE: drivers/isdn/mISDN/dsp_cmx.c:521:
+						    "conf %d because not "
+						    "possible with hardware\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2096: FILE: drivers/isdn/mISDN/dsp_cmx.c:526:
+					dsp_cmx_hw_message(dsp,
+					    MISDN_CTRL_HFC_CONF_SPLIT,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2104: FILE: drivers/isdn/mISDN/dsp_cmx.c:534:
+						printk(KERN_DEBUG "%s removing "

WARNING:SPLIT_STRING: quoted string split across lines
#2105: FILE: drivers/isdn/mISDN/dsp_cmx.c:535:
+						printk(KERN_DEBUG "%s removing "
+						    "%s from PCM slot %d (TX)"

WARNING:SPLIT_STRING: quoted string split across lines
#2106: FILE: drivers/isdn/mISDN/dsp_cmx.c:536:
+						    "%s from PCM slot %d (TX)"
+						    " slot %d (RX) because not"

WARNING:SPLIT_STRING: quoted string split across lines
#2107: FILE: drivers/isdn/mISDN/dsp_cmx.c:537:
+						    " slot %d (RX) because not"
+						    " possible with hardware\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2113: FILE: drivers/isdn/mISDN/dsp_cmx.c:543:
+					dsp_cmx_hw_message(dsp,
+					    MISDN_CTRL_HFC_PCM_DISC,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2128: FILE: drivers/isdn/mISDN/dsp_cmx.c:558:
+				printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#2130: FILE: drivers/isdn/mISDN/dsp_cmx.c:560:
+				    "%s dsp %s cannot form a conf, because "
+				    "echo is turned on\n", __func__,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2137: FILE: drivers/isdn/mISDN/dsp_cmx.c:567:
+				printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#2139: FILE: drivers/isdn/mISDN/dsp_cmx.c:569:
+				    "%s dsp %s cannot form a conf, because "
+				    "tx_mix is turned on\n",

WARNING:TYPO_SPELLING: 'suppoted' may be misspelled - perhaps 'supported'?
#2143: FILE: drivers/isdn/mISDN/dsp_cmx.c:573:
+		/* check if member changes volume at an not suppoted level */
 		                                            ^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2146: FILE: drivers/isdn/mISDN/dsp_cmx.c:576:
+				printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#2148: FILE: drivers/isdn/mISDN/dsp_cmx.c:578:
+				    "%s dsp %s cannot form a conf, because "
+				    "tx_volume is changed\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2154: FILE: drivers/isdn/mISDN/dsp_cmx.c:584:
+				printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#2156: FILE: drivers/isdn/mISDN/dsp_cmx.c:586:
+				    "%s dsp %s cannot form a conf, because "
+				    "rx_volume is changed\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2163: FILE: drivers/isdn/mISDN/dsp_cmx.c:593:
+				printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#2165: FILE: drivers/isdn/mISDN/dsp_cmx.c:595:
+				    "%s dsp %s cannot form a conf, because "
+				    "tx_data is turned on\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2172: FILE: drivers/isdn/mISDN/dsp_cmx.c:602:
+				printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#2174: FILE: drivers/isdn/mISDN/dsp_cmx.c:604:
+				    "%s dsp %s cannot form a conf, because "
+				    "pipeline exists\n", __func__,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2181: FILE: drivers/isdn/mISDN/dsp_cmx.c:611:
+				printk(KERN_DEBUG "%s dsp %s cannot form a "

WARNING:SPLIT_STRING: quoted string split across lines
#2182: FILE: drivers/isdn/mISDN/dsp_cmx.c:612:
+				printk(KERN_DEBUG "%s dsp %s cannot form a "
+				    "conf, because encryption is enabled\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2189: FILE: drivers/isdn/mISDN/dsp_cmx.c:619:
+				printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#2191: FILE: drivers/isdn/mISDN/dsp_cmx.c:621:
+				    "%s dsp %s cannot form a conf, because "
+				    "dsp has no PCM bus\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2198: FILE: drivers/isdn/mISDN/dsp_cmx.c:628:
+				printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#2200: FILE: drivers/isdn/mISDN/dsp_cmx.c:630:
+				    "%s dsp %s cannot form a conf, because "
+				    "dsp is on a different PCM bus than the "

WARNING:SPLIT_STRING: quoted string split across lines
#2201: FILE: drivers/isdn/mISDN/dsp_cmx.c:631:
+				    "dsp is on a different PCM bus than the "
+				    "first dsp\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2225: FILE: drivers/isdn/mISDN/dsp_cmx.c:655:
+			printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#2227: FILE: drivers/isdn/mISDN/dsp_cmx.c:657:
+			    "%s conf %d cannot form a HW conference, "
+			    "because dsp is alone\n", __func__, conf->id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2231: FILE: drivers/isdn/mISDN/dsp_cmx.c:661:
+		member = list_entry(conf->mlist.next, struct dsp_conf_member,
+			list);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2245: FILE: drivers/isdn/mISDN/dsp_cmx.c:675:
+		member = list_entry(conf->mlist.next, struct dsp_conf_member,
+			list);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2247: FILE: drivers/isdn/mISDN/dsp_cmx.c:677:
+		nextm = list_entry(member->list.next, struct dsp_conf_member,
+			list);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2251: FILE: drivers/isdn/mISDN/dsp_cmx.c:681:
+				printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#2253: FILE: drivers/isdn/mISDN/dsp_cmx.c:683:
+				    "%s removing %s from HFC conf %d because "
+				    "two parties require only a PCM slot\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2257: FILE: drivers/isdn/mISDN/dsp_cmx.c:687:
+			dsp_cmx_hw_message(member->dsp,
+			    MISDN_CTRL_HFC_CONF_SPLIT, 0, 0, 0, 0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2262: FILE: drivers/isdn/mISDN/dsp_cmx.c:692:
+				printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#2264: FILE: drivers/isdn/mISDN/dsp_cmx.c:694:
+				    "%s removing %s from HFC conf %d because "
+				    "two parties require only a PCM slot\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2268: FILE: drivers/isdn/mISDN/dsp_cmx.c:698:
+			dsp_cmx_hw_message(nextm->dsp,
+			    MISDN_CTRL_HFC_CONF_SPLIT, 0, 0, 0, 0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2293: FILE: drivers/isdn/mISDN/dsp_cmx.c:723:
+					printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#2295: FILE: drivers/isdn/mISDN/dsp_cmx.c:725:
+					    "%s dsp %s & %s stay joined on "
+					    "PCM slot %d bank %d (TX) bank %d "

WARNING:SPLIT_STRING: quoted string split across lines
#2296: FILE: drivers/isdn/mISDN/dsp_cmx.c:726:
+					    "PCM slot %d bank %d (TX) bank %d "
+					    "(RX) (on different chips)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2333: FILE: drivers/isdn/mISDN/dsp_cmx.c:763:
+					printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#2335: FILE: drivers/isdn/mISDN/dsp_cmx.c:765:
+					    "%s no slot available for "
+					    "%s & %s\n", __func__,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2351: FILE: drivers/isdn/mISDN/dsp_cmx.c:781:
+				printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#2353: FILE: drivers/isdn/mISDN/dsp_cmx.c:783:
+				    "%s adding %s & %s to new PCM slot %d "
+				    "(TX and RX on different chips) because "

WARNING:SPLIT_STRING: quoted string split across lines
#2354: FILE: drivers/isdn/mISDN/dsp_cmx.c:784:
+				    "(TX and RX on different chips) because "
+				    "both members have not same slots\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2360: FILE: drivers/isdn/mISDN/dsp_cmx.c:790:
+			dsp_cmx_hw_message(member->dsp, MISDN_CTRL_HFC_PCM_CONN,
+			    member->dsp->pcm_slot_tx, member->dsp->pcm_bank_tx,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2363: FILE: drivers/isdn/mISDN/dsp_cmx.c:793:
+			dsp_cmx_hw_message(nextm->dsp, MISDN_CTRL_HFC_PCM_CONN,
+			    nextm->dsp->pcm_slot_tx, nextm->dsp->pcm_bank_tx,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2387: FILE: drivers/isdn/mISDN/dsp_cmx.c:817:
+					printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#2389: FILE: drivers/isdn/mISDN/dsp_cmx.c:819:
+					    "%s dsp %s & %s stay joined on PCM "
+					    "slot %d (TX) %d (RX) on same chip "

WARNING:SPLIT_STRING: quoted string split across lines
#2390: FILE: drivers/isdn/mISDN/dsp_cmx.c:820:
+					    "slot %d (TX) %d (RX) on same chip "
+					    "or one bank PCM)\n", __func__,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2425: FILE: drivers/isdn/mISDN/dsp_cmx.c:855:
+					printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#2427: FILE: drivers/isdn/mISDN/dsp_cmx.c:857:
+					    "%s no slot available "
+					    "for %s & %s\n", __func__,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2433: FILE: drivers/isdn/mISDN/dsp_cmx.c:863:
+			i2 = i1+1;
 			       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2441: FILE: drivers/isdn/mISDN/dsp_cmx.c:871:
+					printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#2443: FILE: drivers/isdn/mISDN/dsp_cmx.c:873:
+					    "%s no slot available "
+					    "for %s & %s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2460: FILE: drivers/isdn/mISDN/dsp_cmx.c:890:
+				printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#2462: FILE: drivers/isdn/mISDN/dsp_cmx.c:892:
+				    "%s adding %s & %s to new PCM slot %d "
+				    "(TX) %d (RX) on same chip or one bank "

WARNING:SPLIT_STRING: quoted string split across lines
#2463: FILE: drivers/isdn/mISDN/dsp_cmx.c:893:
+				    "(TX) %d (RX) on same chip or one bank "
+				    "PCM, because both members have not "

WARNING:SPLIT_STRING: quoted string split across lines
#2464: FILE: drivers/isdn/mISDN/dsp_cmx.c:894:
+				    "PCM, because both members have not "
+				    "crossed slots\n", __func__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2470: FILE: drivers/isdn/mISDN/dsp_cmx.c:900:
+			dsp_cmx_hw_message(member->dsp, MISDN_CTRL_HFC_PCM_CONN,
+			    member->dsp->pcm_slot_tx, member->dsp->pcm_bank_tx,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2473: FILE: drivers/isdn/mISDN/dsp_cmx.c:903:
+			dsp_cmx_hw_message(nextm->dsp, MISDN_CTRL_HFC_PCM_CONN,
+			    nextm->dsp->pcm_slot_tx, nextm->dsp->pcm_bank_tx,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2489: FILE: drivers/isdn/mISDN/dsp_cmx.c:919:
+			printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#2491: FILE: drivers/isdn/mISDN/dsp_cmx.c:921:
+			    "%s conference %d cannot be formed, because "
+			    "members are on different chips or not "

WARNING:SPLIT_STRING: quoted string split across lines
#2492: FILE: drivers/isdn/mISDN/dsp_cmx.c:922:
+			    "members are on different chips or not "
+			    "on HFC chip\n",

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2523: FILE: drivers/isdn/mISDN/dsp_cmx.c:953:
+				if (

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2549: FILE: drivers/isdn/mISDN/dsp_cmx.c:979:
+					printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#2551: FILE: drivers/isdn/mISDN/dsp_cmx.c:981:
+					    "%s conference %d cannot be formed,"
+					    " because no slot free\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2556: FILE: drivers/isdn/mISDN/dsp_cmx.c:986:
+				printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#2558: FILE: drivers/isdn/mISDN/dsp_cmx.c:988:
+				    "%s changing dsp %s to HW conference "
+				    "%d slot %d\n", __func__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2567: FILE: drivers/isdn/mISDN/dsp_cmx.c:997:
+			dsp_cmx_hw_message(member->dsp, MISDN_CTRL_HFC_PCM_CONN,
+			    i, 2, i, 2);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2569: FILE: drivers/isdn/mISDN/dsp_cmx.c:999:
+			dsp_cmx_hw_message(member->dsp,
+			    MISDN_CTRL_HFC_CONF_JOIN, current_conf, 0, 0, 0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2597: FILE: drivers/isdn/mISDN/dsp_cmx.c:1027:
+			printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#2599: FILE: drivers/isdn/mISDN/dsp_cmx.c:1029:
+			    "%s conference %d cannot be formed, because "
+			    "no conference number free\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2608: FILE: drivers/isdn/mISDN/dsp_cmx.c:1038:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2627: FILE: drivers/isdn/mISDN/dsp_cmx.c:1057:
+			printk(KERN_DEBUG "removing us from conference %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2628: FILE: drivers/isdn/mISDN/dsp_cmx.c:1058:
+			printk(KERN_DEBUG "removing us from conference %d\n",
+				dsp->conf->id);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2642: FILE: drivers/isdn/mISDN/dsp_cmx.c:1072:
+				printk(KERN_DEBUG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2659: FILE: drivers/isdn/mISDN/dsp_cmx.c:1089:
+		printk(KERN_DEBUG "searching conference %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2660: FILE: drivers/isdn/mISDN/dsp_cmx.c:1090:
+		printk(KERN_DEBUG "searching conference %d\n",
+			conf_id);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2664: FILE: drivers/isdn/mISDN/dsp_cmx.c:1094:
+			printk(KERN_DEBUG

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2672: FILE: drivers/isdn/mISDN/dsp_cmx.c:1102:
+		member = list_entry(conf->mlist.next, struct dsp_conf_member,
+			list);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2675: FILE: drivers/isdn/mISDN/dsp_cmx.c:1105:
+				printk(KERN_DEBUG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2681: FILE: drivers/isdn/mISDN/dsp_cmx.c:1111:
+				printk(KERN_DEBUG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2695: FILE: drivers/isdn/mISDN/dsp_cmx.c:1125:
+			printk(KERN_DEBUG

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2708: FILE: drivers/isdn/mISDN/dsp_cmx.c:1138:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <mISDNhead>
#2717: FILE: drivers/isdn/mISDN/dsp_cmx.c:1147:
+	struct mISDNhead *hh = mISDN_HEAD_P(skb);

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_HEAD_P>
#2717: FILE: drivers/isdn/mISDN/dsp_cmx.c:1147:
+	struct mISDNhead *hh = mISDN_HEAD_P(skb);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2726: FILE: drivers/isdn/mISDN/dsp_cmx.c:1156:
+		printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#2728: FILE: drivers/isdn/mISDN/dsp_cmx.c:1158:
+		    "%s line %d: packet from card is too large (%d bytes). "
+		    "please make card send smaller packets OR increase "

WARNING:SPLIT_STRING: quoted string split across lines
#2729: FILE: drivers/isdn/mISDN/dsp_cmx.c:1159:
+		    "please make card send smaller packets OR increase "
+		    "CMX_BUFF_SIZE\n", __FILE__, __LINE__, len);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2757: FILE: drivers/isdn/mISDN/dsp_cmx.c:1187:
+	if (((dsp->rx_W-dsp->rx_R) & CMX_BUFF_MASK) >= CMX_BUFF_HALF) {
 	               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2759: FILE: drivers/isdn/mISDN/dsp_cmx.c:1189:
+			printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#2761: FILE: drivers/isdn/mISDN/dsp_cmx.c:1191:
+			    "cmx_receive(dsp=%lx): UNDERRUN (or overrun the "
+			    "maximum delay), adjusting read pointer! "

WARNING:SPLIT_STRING: quoted string split across lines
#2762: FILE: drivers/isdn/mISDN/dsp_cmx.c:1192:
+			    "maximum delay), adjusting read pointer! "
+			    "(inst %s)\n", (u_long)dsp, dsp->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2779: FILE: drivers/isdn/mISDN/dsp_cmx.c:1209:
+				printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#2781: FILE: drivers/isdn/mISDN/dsp_cmx.c:1211:
+				    "cmx_receive(dsp=%lx): OVERRUN (because "
+				    "twice the delay is reached), adjusting "

WARNING:SPLIT_STRING: quoted string split across lines
#2782: FILE: drivers/isdn/mISDN/dsp_cmx.c:1212:
+				    "twice the delay is reached), adjusting "
+				    "read pointer! (inst %s)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2798: FILE: drivers/isdn/mISDN/dsp_cmx.c:1228:
+	printk(KERN_DEBUG

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2815: FILE: drivers/isdn/mISDN/dsp_cmx.c:1245:
+	dsp->rx_W = ((dsp->rx_W+len) & CMX_BUFF_MASK);
 	                       ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2818: FILE: drivers/isdn/mISDN/dsp_cmx.c:1248:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2847: FILE: drivers/isdn/mISDN/dsp_cmx.c:1277:
+	printk(KERN_DEBUG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2862: FILE: drivers/isdn/mISDN/dsp_cmx.c:1292:
+		printk(KERN_ERR

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#2862: FILE: drivers/isdn/mISDN/dsp_cmx.c:1292:
+	if (!nskb) {
+		printk(KERN_ERR

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#2897: FILE: drivers/isdn/mISDN/dsp_cmx.c:1327:
+	if (!dsp->tx_mix && t != tt) {
[...]
+	sprintf(debugbuf, "TX sending (%04x-%04x)%p: ", t, tt, p);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#2904: FILE: drivers/isdn/mISDN/dsp_cmx.c:1334:
+			if (strlen(debugbuf) < 48)
+			    sprintf(debugbuf+strlen(debugbuf), " %02x", p[t]);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2905: FILE: drivers/isdn/mISDN/dsp_cmx.c:1335:
+			    sprintf(debugbuf+strlen(debugbuf), " %02x", p[t]);
 			                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2908: FILE: drivers/isdn/mISDN/dsp_cmx.c:1338:
+			t = (t+1) & CMX_BUFF_MASK;
 			      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2909: FILE: drivers/isdn/mISDN/dsp_cmx.c:1339:
+			r = (r+1) & CMX_BUFF_MASK;
 			      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2914: FILE: drivers/isdn/mISDN/dsp_cmx.c:1344:
+	printk(KERN_DEBUG "%s\n", debugbuf);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2920: FILE: drivers/isdn/mISDN/dsp_cmx.c:1350:
+	printk(KERN_DEBUG "%s\n", debugbuf);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2930: FILE: drivers/isdn/mISDN/dsp_cmx.c:1360:
+				t = (t+1) & CMX_BUFF_MASK;
 				      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2931: FILE: drivers/isdn/mISDN/dsp_cmx.c:1361:
+				r = (r+1) & CMX_BUFF_MASK;
 				      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2934: FILE: drivers/isdn/mISDN/dsp_cmx.c:1364:
+				memset(d, dsp_silence, (rr-r)&CMX_BUFF_MASK);
 				                          ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#2934: FILE: drivers/isdn/mISDN/dsp_cmx.c:1364:
+				memset(d, dsp_silence, (rr-r)&CMX_BUFF_MASK);
 				                             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2942: FILE: drivers/isdn/mISDN/dsp_cmx.c:1372:
+				*d++ = dsp_audio_mix_law[(p[t]<<8)|q[r]];
 				                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2942: FILE: drivers/isdn/mISDN/dsp_cmx.c:1372:
+				*d++ = dsp_audio_mix_law[(p[t]<<8)|q[r]];
 				                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2943: FILE: drivers/isdn/mISDN/dsp_cmx.c:1373:
+				t = (t+1) & CMX_BUFF_MASK;
 				      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2944: FILE: drivers/isdn/mISDN/dsp_cmx.c:1374:
+				r = (r+1) & CMX_BUFF_MASK;
 				      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2948: FILE: drivers/isdn/mISDN/dsp_cmx.c:1378:
+				r = (r+1) & CMX_BUFF_MASK;
 				      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2978: FILE: drivers/isdn/mISDN/dsp_cmx.c:1408:
+				*d++ = dsp_audio_mix_law[(p[t]<<8)|o_q[o_r]];
 				                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2978: FILE: drivers/isdn/mISDN/dsp_cmx.c:1408:
+				*d++ = dsp_audio_mix_law[(p[t]<<8)|o_q[o_r]];
 				                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2979: FILE: drivers/isdn/mISDN/dsp_cmx.c:1409:
+				t = (t+1) & CMX_BUFF_MASK;
 				      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2980: FILE: drivers/isdn/mISDN/dsp_cmx.c:1410:
+				o_r = (o_r+1) & CMX_BUFF_MASK;
 				          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2984: FILE: drivers/isdn/mISDN/dsp_cmx.c:1414:
+				o_r = (o_r+1) & CMX_BUFF_MASK;
 				          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3002: FILE: drivers/isdn/mISDN/dsp_cmx.c:1432:
+				t = (t+1) & CMX_BUFF_MASK;
 				      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3003: FILE: drivers/isdn/mISDN/dsp_cmx.c:1433:
+				r = (r+1) & CMX_BUFF_MASK;
 				      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3004: FILE: drivers/isdn/mISDN/dsp_cmx.c:1434:
+				o_r = (o_r+1) & CMX_BUFF_MASK;
 				          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3007: FILE: drivers/isdn/mISDN/dsp_cmx.c:1437:
+				*d++ = dsp_audio_mix_law[(q[r]<<8)|o_q[o_r]];
 				                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3007: FILE: drivers/isdn/mISDN/dsp_cmx.c:1437:
+				*d++ = dsp_audio_mix_law[(q[r]<<8)|o_q[o_r]];
 				                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3008: FILE: drivers/isdn/mISDN/dsp_cmx.c:1438:
+				r = (r+1) & CMX_BUFF_MASK;
 				      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3009: FILE: drivers/isdn/mISDN/dsp_cmx.c:1439:
+				o_r = (o_r+1) & CMX_BUFF_MASK;
 				          ^

WARNING:TYPO_SPELLING: 'substract' may be misspelled - perhaps 'subtract'?
#3022: FILE: drivers/isdn/mISDN/dsp_cmx.c:1452:
+		 * -> substract rx-data from conf-data,
 		      ^^^^^^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3034: FILE: drivers/isdn/mISDN/dsp_cmx.c:1464:
+			r = (r+1) & CMX_BUFF_MASK;
 			      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3035: FILE: drivers/isdn/mISDN/dsp_cmx.c:1465:
+			t = (t+1) & CMX_BUFF_MASK;
 			      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3045: FILE: drivers/isdn/mISDN/dsp_cmx.c:1475:
+			r = (r+1) & CMX_BUFF_MASK;
 			      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3061: FILE: drivers/isdn/mISDN/dsp_cmx.c:1491:
+			t = (t+1) & CMX_BUFF_MASK;
 			      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3062: FILE: drivers/isdn/mISDN/dsp_cmx.c:1492:
+			r = (r+1) & CMX_BUFF_MASK;
 			      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3072: FILE: drivers/isdn/mISDN/dsp_cmx.c:1502:
+			r = (r+1) & CMX_BUFF_MASK;
 			      ^

WARNING:TYPO_SPELLING: 'becuase' may be misspelled - perhaps 'because'?
#3081: FILE: drivers/isdn/mISDN/dsp_cmx.c:1511:
+	 * becuase we want what we send, not what we filtered
 	   ^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3087: FILE: drivers/isdn/mISDN/dsp_cmx.c:1517:
+			printk(KERN_ERR

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#3087: FILE: drivers/isdn/mISDN/dsp_cmx.c:1517:
+		if (!txskb) {
+			printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#3089: FILE: drivers/isdn/mISDN/dsp_cmx.c:1519:
+			    "FATAL ERROR in mISDN_dsp.o: "
+			    "cannot alloc %d bytes\n", len);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3094: FILE: drivers/isdn/mISDN/dsp_cmx.c:1524:
+			memcpy(skb_put(txskb, len), nskb->data+preload, len);
 			                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3126: FILE: drivers/isdn/mISDN/dsp_cmx.c:1556:
+	s32 mixbuffer[MAX_POLL+100], *c;
 	                      ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3152: FILE: drivers/isdn/mISDN/dsp_cmx.c:1582:
+/* printk(KERN_DEBUG "len=%d dsp_count=0x%x.%04x dsp_poll_diff=0x%x.%04x\n",
+ length, dsp_count >> 16, dsp_count & 0xffff, dsp_poll_diff >> 16,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3203: FILE: drivers/isdn/mISDN/dsp_cmx.c:1633:
+			member = list_entry(conf->mlist.next,
+				struct dsp_conf_member, list);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3207: FILE: drivers/isdn/mISDN/dsp_cmx.c:1637:
+			memset(mixbuffer, 0, length*sizeof(s32));
 			                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3218: FILE: drivers/isdn/mISDN/dsp_cmx.c:1648:
+					r = (r+1) & CMX_BUFF_MASK;
 					      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3226: FILE: drivers/isdn/mISDN/dsp_cmx.c:1656:
+				dsp_cmx_send_member(member->dsp, length,
+				    mixbuffer, members);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3244: FILE: drivers/isdn/mISDN/dsp_cmx.c:1674:
+				r = (r+1) & CMX_BUFF_MASK;
 				      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3251: FILE: drivers/isdn/mISDN/dsp_cmx.c:1681:
+		delay = (dsp->rx_W-dsp->rx_R) & CMX_BUFF_MASK;
 		                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3258: FILE: drivers/isdn/mISDN/dsp_cmx.c:1688:
+		delay = (dsp->tx_W-dsp->tx_R) & CMX_BUFF_MASK;
 		                  ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3279: FILE: drivers/isdn/mISDN/dsp_cmx.c:1709:
+					printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#3281: FILE: drivers/isdn/mISDN/dsp_cmx.c:1711:
+					    "%s lowest rx_delay of %d bytes for"
+					    " dsp %s are now removed.\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3289: FILE: drivers/isdn/mISDN/dsp_cmx.c:1719:
+					r = (r+1) & CMX_BUFF_MASK;
 					      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3309: FILE: drivers/isdn/mISDN/dsp_cmx.c:1739:
+					printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#3311: FILE: drivers/isdn/mISDN/dsp_cmx.c:1741:
+					    "%s lowest tx_delay of %d bytes for"
+					    " dsp %s are now removed.\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3319: FILE: drivers/isdn/mISDN/dsp_cmx.c:1749:
+					r = (r+1) & CMX_BUFF_MASK;
 					      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3328: FILE: drivers/isdn/mISDN/dsp_cmx.c:1758:
+				dsp->rx_delay[i] = dsp->rx_delay[i-1];
 				                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3329: FILE: drivers/isdn/mISDN/dsp_cmx.c:1759:
+				dsp->tx_delay[i] = dsp->tx_delay[i-1];
 				                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3338: FILE: drivers/isdn/mISDN/dsp_cmx.c:1768:
+	if ((s32)(dsp_spl_jiffies+dsp_tics-jiffies) <= 0)
 	                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3338: FILE: drivers/isdn/mISDN/dsp_cmx.c:1768:
+	if ((s32)(dsp_spl_jiffies+dsp_tics-jiffies) <= 0)
 	                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3368: FILE: drivers/isdn/mISDN/dsp_cmx.c:1798:
+	space = ww-w;
 	          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3372: FILE: drivers/isdn/mISDN/dsp_cmx.c:1802:
+	if (space-1 < skb->len)
 	         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3382: FILE: drivers/isdn/mISDN/dsp_cmx.c:1812:
+	printk(KERN_DEBUG

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3384: FILE: drivers/isdn/mISDN/dsp_cmx.c:1814:
+	    (u_long)dsp, (ww-w)&CMX_BUFF_MASK, w, ww, dsp->name);
 	                    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#3384: FILE: drivers/isdn/mISDN/dsp_cmx.c:1814:
+	    (u_long)dsp, (ww-w)&CMX_BUFF_MASK, w, ww, dsp->name);
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3394: FILE: drivers/isdn/mISDN/dsp_cmx.c:1824:
+			sprintf(debugbuf+strlen(debugbuf), " %02x", *d);
 			                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3397: FILE: drivers/isdn/mISDN/dsp_cmx.c:1827:
+		w = (w+1) & CMX_BUFF_MASK;
 		      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3400: FILE: drivers/isdn/mISDN/dsp_cmx.c:1830:
+	printk(KERN_DEBUG "%s\n", debugbuf);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#3403: FILE: drivers/isdn/mISDN/dsp_cmx.c:1833:
+
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3456: FILE: drivers/isdn/mISDN/dsp_cmx.c:1886:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3463: FILE: drivers/isdn/mISDN/dsp_core.c:1:
+/*

WARNING:TYPO_SPELLING: 'performane' may be misspelled - perhaps 'performance'?
#3575: FILE: drivers/isdn/mISDN/dsp_core.c:113:
+ * Echo: Is generated by CMX and is used to check performane of hard and
                                                   ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'swithed' may be misspelled - perhaps 'switched'?
#3580: FILE: drivers/isdn/mISDN/dsp_core.c:118:
+ * data to/form upper layer may be swithed on/off individually without loosing
                                    ^^^^^^^

WARNING:TYPO_SPELLING: 'loosing' may be misspelled - perhaps 'losing'?
#3580: FILE: drivers/isdn/mISDN/dsp_core.c:118:
+ * data to/form upper layer may be swithed on/off individually without loosing
                                                                        ^^^^^^^

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#3591: FILE: drivers/isdn/mISDN/dsp_core.c:129:
+ * receive data ist disabled, the card may not send/receive any data at all.
                 ^^^

WARNING:TYPO_SPELLING: 'usefull' may be misspelled - perhaps 'useful'?
#3592: FILE: drivers/isdn/mISDN/dsp_core.c:130:
+ * Not receiving is usefull if only announcements are played. Not sending is
                     ^^^^^^^

WARNING:TYPO_SPELLING: 'usefull' may be misspelled - perhaps 'useful'?
#3593: FILE: drivers/isdn/mISDN/dsp_core.c:131:
+ * usefull if an answering machine records audio. Not sending and receiving is
    ^^^^^^^

WARNING:TYPO_SPELLING: 'usefull' may be misspelled - perhaps 'useful'?
#3594: FILE: drivers/isdn/mISDN/dsp_core.c:132:
+ * usefull during most states of the call. If supported by hardware, tones
    ^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_dsp_revision>
#3626: FILE: drivers/isdn/mISDN/dsp_core.c:164:
+const char *mISDN_dsp_revision = "2.0";

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#3634: FILE: drivers/isdn/mISDN/dsp_core.c:172:
+module_param(debug, uint, S_IRUGO | S_IWUSR);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#3635: FILE: drivers/isdn/mISDN/dsp_core.c:173:
+module_param(options, uint, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#3636: FILE: drivers/isdn/mISDN/dsp_core.c:174:
+module_param(poll, uint, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#3637: FILE: drivers/isdn/mISDN/dsp_core.c:175:
+module_param(dtmfthreshold, uint, S_IRUGO | S_IWUSR);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3679: FILE: drivers/isdn/mISDN/dsp_core.c:217:
+			printk(KERN_DEBUG "%s: no peer, no rx_off\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3680: FILE: drivers/isdn/mISDN/dsp_core.c:218:
+			printk(KERN_DEBUG "%s: no peer, no rx_off\n",
+				__func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3686: FILE: drivers/isdn/mISDN/dsp_core.c:224:
+		printk(KERN_DEBUG "%s: 2nd CONTROL_CHANNEL failed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3687: FILE: drivers/isdn/mISDN/dsp_core.c:225:
+		printk(KERN_DEBUG "%s: 2nd CONTROL_CHANNEL failed\n",
+			__func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3692: FILE: drivers/isdn/mISDN/dsp_core.c:230:
+		printk(KERN_DEBUG "%s: %s set rx_off = %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3693: FILE: drivers/isdn/mISDN/dsp_core.c:231:
+		printk(KERN_DEBUG "%s: %s set rx_off = %d\n",
+			__func__, dsp->name, rx_off);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#3695: FILE: drivers/isdn/mISDN/dsp_core.c:233:
+}
+static void

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3724: FILE: drivers/isdn/mISDN/dsp_core.c:262:
+		printk(KERN_ERR "%s: PH_CONTROL message too short\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3736: FILE: drivers/isdn/mISDN/dsp_core.c:274:
+			printk(KERN_DEBUG "%s: start dtmf\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#3738: FILE: drivers/isdn/mISDN/dsp_core.c:276:
+			printk(KERN_NOTICE "changing DTMF Threshold "

WARNING:SPLIT_STRING: quoted string split across lines
#3739: FILE: drivers/isdn/mISDN/dsp_core.c:277:
+			printk(KERN_NOTICE "changing DTMF Threshold "
+				"to %d\n", *((int *)data));

WARNING:TYPO_SPELLING: 'treshold' may be misspelled - perhaps 'threshold'?
#3740: FILE: drivers/isdn/mISDN/dsp_core.c:278:
+			dsp->dtmf.treshold = (*(int *)data) * 10000;
 			          ^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3750: FILE: drivers/isdn/mISDN/dsp_core.c:288:
+			printk(KERN_DEBUG "%s: stop dtmf\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3762: FILE: drivers/isdn/mISDN/dsp_core.c:300:
+			printk(KERN_DEBUG "%s: join conference %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3763: FILE: drivers/isdn/mISDN/dsp_core.c:301:
+			printk(KERN_DEBUG "%s: join conference %d\n",
+				__func__, *((u32 *)data));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3773: FILE: drivers/isdn/mISDN/dsp_core.c:311:
+			printk(KERN_DEBUG "%s: release conference\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3790: FILE: drivers/isdn/mISDN/dsp_core.c:328:
+			printk(KERN_DEBUG "%s: turn tone 0x%x on\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3791: FILE: drivers/isdn/mISDN/dsp_core.c:329:
+			printk(KERN_DEBUG "%s: turn tone 0x%x on\n",
+				__func__, *((int *)skb->data));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3806: FILE: drivers/isdn/mISDN/dsp_core.c:344:
+			printk(KERN_DEBUG "%s: turn tone off\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3826: FILE: drivers/isdn/mISDN/dsp_core.c:364:
+			printk(KERN_DEBUG "%s: change tx vol to %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3827: FILE: drivers/isdn/mISDN/dsp_core.c:365:
+			printk(KERN_DEBUG "%s: change tx vol to %d\n",
+				__func__, dsp->tx_volume);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3843: FILE: drivers/isdn/mISDN/dsp_core.c:381:
+			printk(KERN_DEBUG "%s: change rx vol to %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3844: FILE: drivers/isdn/mISDN/dsp_core.c:382:
+			printk(KERN_DEBUG "%s: change rx vol to %d\n",
+				__func__, dsp->tx_volume);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3852: FILE: drivers/isdn/mISDN/dsp_core.c:390:
+			printk(KERN_DEBUG "%s: enable cmx-echo\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3861: FILE: drivers/isdn/mISDN/dsp_core.c:399:
+			printk(KERN_DEBUG "%s: disable cmx-echo\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3869: FILE: drivers/isdn/mISDN/dsp_core.c:407:
+			printk(KERN_DEBUG "%s: enable receive to user "

WARNING:SPLIT_STRING: quoted string split across lines
#3870: FILE: drivers/isdn/mISDN/dsp_core.c:408:
+			printk(KERN_DEBUG "%s: enable receive to user "
+				"space\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3876: FILE: drivers/isdn/mISDN/dsp_core.c:414:
+			printk(KERN_DEBUG "%s: disable receive to "

WARNING:SPLIT_STRING: quoted string split across lines
#3877: FILE: drivers/isdn/mISDN/dsp_core.c:415:
+			printk(KERN_DEBUG "%s: disable receive to "
+				"user space\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3887: FILE: drivers/isdn/mISDN/dsp_core.c:425:
+			printk(KERN_DEBUG "%s: enable mixing of "

WARNING:SPLIT_STRING: quoted string split across lines
#3888: FILE: drivers/isdn/mISDN/dsp_core.c:426:
+			printk(KERN_DEBUG "%s: enable mixing of "
+				"tx-data with conf mebers\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3901: FILE: drivers/isdn/mISDN/dsp_core.c:439:
+			printk(KERN_DEBUG "%s: disable mixing of "

WARNING:SPLIT_STRING: quoted string split across lines
#3902: FILE: drivers/isdn/mISDN/dsp_core.c:440:
+			printk(KERN_DEBUG "%s: disable mixing of "
+				"tx-data with conf mebers\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3912: FILE: drivers/isdn/mISDN/dsp_core.c:450:
+			printk(KERN_DEBUG "%s: enable tx-data\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3921: FILE: drivers/isdn/mISDN/dsp_core.c:459:
+			printk(KERN_DEBUG "%s: disable tx-data\n", __func__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3928: FILE: drivers/isdn/mISDN/dsp_core.c:466:
+	case DSP_DELAY: /* use delay algorithm instead of dynamic
+			   jitter algorithm */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3928: FILE: drivers/isdn/mISDN/dsp_core.c:466:
+			   jitter algorithm */

WARNING:TYPO_SPELLING: 'miliseconds' may be misspelled - perhaps 'milliseconds'?
#3938: FILE: drivers/isdn/mISDN/dsp_core.c:476:
+			/* miliseconds to samples */
 			   ^^^^^^^^^^^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#3939: FILE: drivers/isdn/mISDN/dsp_core.c:477:
+		if (dsp->cmx_delay >= (CMX_BUFF_HALF>>1))
 		                                    ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3941: FILE: drivers/isdn/mISDN/dsp_core.c:479:
+			/* clip to half of maximum usable buffer
+			(half of half buffer) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3941: FILE: drivers/isdn/mISDN/dsp_core.c:479:
+			(half of half buffer) */

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#3942: FILE: drivers/isdn/mISDN/dsp_core.c:480:
+			dsp->cmx_delay = (CMX_BUFF_HALF>>1) - 1;
 			                               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3944: FILE: drivers/isdn/mISDN/dsp_core.c:482:
+			printk(KERN_DEBUG "%s: use delay algorithm to "

WARNING:SPLIT_STRING: quoted string split across lines
#3945: FILE: drivers/isdn/mISDN/dsp_core.c:483:
+			printk(KERN_DEBUG "%s: use delay algorithm to "
+				"compensate jitter (%d samples)\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3949: FILE: drivers/isdn/mISDN/dsp_core.c:487:
+	case DSP_JITTER: /* use dynamic jitter algorithm instead of
+		    delay algorithm */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3949: FILE: drivers/isdn/mISDN/dsp_core.c:487:
+		    delay algorithm */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3956: FILE: drivers/isdn/mISDN/dsp_core.c:494:
+			printk(KERN_DEBUG "%s: use jitter algorithm to "

WARNING:SPLIT_STRING: quoted string split across lines
#3957: FILE: drivers/isdn/mISDN/dsp_core.c:495:
+			printk(KERN_DEBUG "%s: use jitter algorithm to "
+				"compensate jitter\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3966: FILE: drivers/isdn/mISDN/dsp_core.c:504:
+			printk(KERN_DEBUG "%s: use dejitter on TX "

WARNING:SPLIT_STRING: quoted string split across lines
#3967: FILE: drivers/isdn/mISDN/dsp_core.c:505:
+			printk(KERN_DEBUG "%s: use dejitter on TX "
+				"buffer\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3976: FILE: drivers/isdn/mISDN/dsp_core.c:514:
+			printk(KERN_DEBUG "%s: use TX buffer without "

WARNING:SPLIT_STRING: quoted string split across lines
#3977: FILE: drivers/isdn/mISDN/dsp_core.c:515:
+			printk(KERN_DEBUG "%s: use TX buffer without "
+				"dejittering\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3985: FILE: drivers/isdn/mISDN/dsp_core.c:523:
+			printk(KERN_DEBUG "%s: pipeline config string "

WARNING:SPLIT_STRING: quoted string split across lines
#3986: FILE: drivers/isdn/mISDN/dsp_core.c:524:
+			printk(KERN_DEBUG "%s: pipeline config string "
+				"is not NULL terminated!\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3992: FILE: drivers/isdn/mISDN/dsp_core.c:530:
+			ret = dsp_pipeline_build(&dsp->pipeline,
+				len > 0 ? (char *)data : NULL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4007: FILE: drivers/isdn/mISDN/dsp_core.c:545:
+			printk(KERN_DEBUG "%s: turn blowfish on (key "

WARNING:SPLIT_STRING: quoted string split across lines
#4008: FILE: drivers/isdn/mISDN/dsp_core.c:546:
+			printk(KERN_DEBUG "%s: turn blowfish on (key "
+				"not shown)\n", __func__);

CHECK:CAMELCASE: Avoid CamelCase: <_alloc_mISDN_skb>
#4016: FILE: drivers/isdn/mISDN/dsp_core.c:554:
+		nskb = _alloc_mISDN_skb(PH_CONTROL_IND, MISDN_ID_ANY,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4017: FILE: drivers/isdn/mISDN/dsp_core.c:555:
+		nskb = _alloc_mISDN_skb(PH_CONTROL_IND, MISDN_ID_ANY,
+			sizeof(int), &cont, GFP_ATOMIC);

CHECK:BRACES: braces {} should be used on all arms of this statement
#4019: FILE: drivers/isdn/mISDN/dsp_core.c:557:
+			if (dsp->up) {
[...]
+			} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#4022: FILE: drivers/isdn/mISDN/dsp_core.c:560:
+			} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4037: FILE: drivers/isdn/mISDN/dsp_core.c:575:
+			printk(KERN_DEBUG "%s: turn blowfish off\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4045: FILE: drivers/isdn/mISDN/dsp_core.c:583:
+			printk(KERN_DEBUG "%s: ctrl req %x unhandled\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4046: FILE: drivers/isdn/mISDN/dsp_core.c:584:
+			printk(KERN_DEBUG "%s: ctrl req %x unhandled\n",
+				__func__, cont);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4062: FILE: drivers/isdn/mISDN/dsp_core.c:600:
+			printk(KERN_DEBUG "%s: no peer, no features\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4063: FILE: drivers/isdn/mISDN/dsp_core.c:601:
+			printk(KERN_DEBUG "%s: no peer, no features\n",
+				__func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4069: FILE: drivers/isdn/mISDN/dsp_core.c:607:
+		printk(KERN_DEBUG "%s: CONTROL_CHANNEL failed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4070: FILE: drivers/isdn/mISDN/dsp_core.c:608:
+		printk(KERN_DEBUG "%s: CONTROL_CHANNEL failed\n",
+			__func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4079: FILE: drivers/isdn/mISDN/dsp_core.c:617:
+			printk(KERN_DEBUG "%s: 2nd CONTROL_CHANNEL failed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4080: FILE: drivers/isdn/mISDN/dsp_core.c:618:
+			printk(KERN_DEBUG "%s: 2nd CONTROL_CHANNEL failed\n",
+				__func__);

CHECK:BRACES: Unbalanced braces around else statement
#4082: FILE: drivers/isdn/mISDN/dsp_core.c:620:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4084: FILE: drivers/isdn/mISDN/dsp_core.c:622:
+			printk(KERN_DEBUG "%s: features not supported for %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4085: FILE: drivers/isdn/mISDN/dsp_core.c:623:
+			printk(KERN_DEBUG "%s: features not supported for %s\n",
+				__func__, dsp->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4120: FILE: drivers/isdn/mISDN/dsp_core.c:658:
+				printk(KERN_DEBUG "%s: rx-data during rx_off"

WARNING:SPLIT_STRING: quoted string split across lines
#4121: FILE: drivers/isdn/mISDN/dsp_core.c:659:
+				printk(KERN_DEBUG "%s: rx-data during rx_off"
+					" for %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4145: FILE: drivers/isdn/mISDN/dsp_core.c:683:
+			dsp_pipeline_process_rx(&dsp->pipeline, skb->data,
+				skb->len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4153: FILE: drivers/isdn/mISDN/dsp_core.c:691:
+			digits = dsp_dtmf_goertzel_decode(dsp, skb->data,
+				skb->len, (dsp_options&DSP_OPT_ULAW)?1:0);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#4153: FILE: drivers/isdn/mISDN/dsp_core.c:691:
+				skb->len, (dsp_options&DSP_OPT_ULAW)?1:0);
 				                      ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#4153: FILE: drivers/isdn/mISDN/dsp_core.c:691:
+				skb->len, (dsp_options&DSP_OPT_ULAW)?1:0);
 				                                    ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#4153: FILE: drivers/isdn/mISDN/dsp_core.c:691:
+				skb->len, (dsp_options&DSP_OPT_ULAW)?1:0);
 				                                      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4156: FILE: drivers/isdn/mISDN/dsp_core.c:694:
+					printk(KERN_DEBUG "%s: digit"

WARNING:SPLIT_STRING: quoted string split across lines
#4157: FILE: drivers/isdn/mISDN/dsp_core.c:695:
+					printk(KERN_DEBUG "%s: digit"
+					    "(%c) to layer %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4161: FILE: drivers/isdn/mISDN/dsp_core.c:699:
+				nskb = _alloc_mISDN_skb(PH_CONTROL_IND,
+				    MISDN_ID_ANY, sizeof(int), &cont,

CHECK:BRACES: braces {} should be used on all arms of this statement
#4164: FILE: drivers/isdn/mISDN/dsp_core.c:702:
+					if (dsp->up) {
[...]
+					} else
[...]

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#4165: FILE: drivers/isdn/mISDN/dsp_core.c:703:
+						if (dsp->up->send(

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#4165: FILE: drivers/isdn/mISDN/dsp_core.c:703:
+						if (dsp->up->send(

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (48, 48)
#4165: FILE: drivers/isdn/mISDN/dsp_core.c:703:
+						if (dsp->up->send(
[...]
+						dev_kfree_skb(nskb);

CHECK:BRACES: Unbalanced braces around else statement
#4168: FILE: drivers/isdn/mISDN/dsp_core.c:706:
+					} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4192: FILE: drivers/isdn/mISDN/dsp_core.c:730:
+			printk(KERN_DEBUG "%s: PH_CONTROL INDICATION "

WARNING:SPLIT_STRING: quoted string split across lines
#4193: FILE: drivers/isdn/mISDN/dsp_core.c:731:
+			printk(KERN_DEBUG "%s: PH_CONTROL INDICATION "
+				"received: %x (len %d) %s\n", __func__,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4199: FILE: drivers/isdn/mISDN/dsp_core.c:737:
+					printk(KERN_DEBUG "%s: ignoring DTMF "

WARNING:SPLIT_STRING: quoted string split across lines
#4200: FILE: drivers/isdn/mISDN/dsp_core.c:738:
+					printk(KERN_DEBUG "%s: ignoring DTMF "
+						"coefficients from HFC\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4205: FILE: drivers/isdn/mISDN/dsp_core.c:743:
+			digits = dsp_dtmf_goertzel_decode(dsp, skb->data,
+				skb->len, 2);

WARNING:LINE_SPACING: Missing a blank line after declarations
#4209: FILE: drivers/isdn/mISDN/dsp_core.c:747:
+				struct sk_buff *nskb;
+				if (dsp_debug & DEBUG_DSP_DTMF)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4210: FILE: drivers/isdn/mISDN/dsp_core.c:748:
+					printk(KERN_DEBUG "%s: digit"

WARNING:SPLIT_STRING: quoted string split across lines
#4211: FILE: drivers/isdn/mISDN/dsp_core.c:749:
+					printk(KERN_DEBUG "%s: digit"
+					    "(%c) to layer %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4215: FILE: drivers/isdn/mISDN/dsp_core.c:753:
+				nskb = _alloc_mISDN_skb(PH_CONTROL_IND,
+					MISDN_ID_ANY, sizeof(int), &k,

CHECK:BRACES: braces {} should be used on all arms of this statement
#4218: FILE: drivers/isdn/mISDN/dsp_core.c:756:
+					if (dsp->up) {
[...]
+					} else
[...]

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#4219: FILE: drivers/isdn/mISDN/dsp_core.c:757:
+						if (dsp->up->send(

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#4219: FILE: drivers/isdn/mISDN/dsp_core.c:757:
+						if (dsp->up->send(

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (48, 48)
#4219: FILE: drivers/isdn/mISDN/dsp_core.c:757:
+						if (dsp->up->send(
[...]
+						dev_kfree_skb(nskb);

CHECK:BRACES: Unbalanced braces around else statement
#4222: FILE: drivers/isdn/mISDN/dsp_core.c:760:
+					} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4236: FILE: drivers/isdn/mISDN/dsp_core.c:774:
+				printk(KERN_DEBUG "%s: change tx volume to "

WARNING:SPLIT_STRING: quoted string split across lines
#4237: FILE: drivers/isdn/mISDN/dsp_core.c:775:
+				printk(KERN_DEBUG "%s: change tx volume to "
+					"%d\n", __func__, dsp->tx_volume);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4245: FILE: drivers/isdn/mISDN/dsp_core.c:783:
+				printk(KERN_DEBUG "%s: ctrl ind %x unhandled "

WARNING:SPLIT_STRING: quoted string split across lines
#4246: FILE: drivers/isdn/mISDN/dsp_core.c:784:
+				printk(KERN_DEBUG "%s: ctrl ind %x unhandled "
+					"%s\n", __func__, hh->id, dsp->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4253: FILE: drivers/isdn/mISDN/dsp_core.c:791:
+			printk(KERN_DEBUG "%s: b_channel is now active %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4254: FILE: drivers/isdn/mISDN/dsp_core.c:792:
+			printk(KERN_DEBUG "%s: b_channel is now active %s\n",
+				__func__, dsp->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4269: FILE: drivers/isdn/mISDN/dsp_core.c:807:
+			printk(KERN_DEBUG "%s: done with activation, sending "

WARNING:SPLIT_STRING: quoted string split across lines
#4270: FILE: drivers/isdn/mISDN/dsp_core.c:808:
+			printk(KERN_DEBUG "%s: done with activation, sending "
+				"confirm to user space. %s\n", __func__,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4280: FILE: drivers/isdn/mISDN/dsp_core.c:818:
+			printk(KERN_DEBUG "%s: b_channel is now inactive %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4281: FILE: drivers/isdn/mISDN/dsp_core.c:819:
+			printk(KERN_DEBUG "%s: b_channel is now inactive %s\n",
+				__func__, dsp->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4325: FILE: drivers/isdn/mISDN/dsp_core.c:863:
+			printk(KERN_DEBUG "%s: activating b_channel %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4326: FILE: drivers/isdn/mISDN/dsp_core.c:864:
+			printk(KERN_DEBUG "%s: activating b_channel %s\n",
+				__func__, dsp->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4338: FILE: drivers/isdn/mISDN/dsp_core.c:876:
+			printk(KERN_DEBUG "%s: releasing b_channel %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4339: FILE: drivers/isdn/mISDN/dsp_core.c:877:
+			printk(KERN_DEBUG "%s: releasing b_channel %s\n",
+				__func__, dsp->name);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#4348: FILE: drivers/isdn/mISDN/dsp_core.c:886:
+			dsp_cmx_conf(dsp, 0); /* dsp_cmx_hardware will also be
+						 called here */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4348: FILE: drivers/isdn/mISDN/dsp_core.c:886:
+						 called here */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4357: FILE: drivers/isdn/mISDN/dsp_core.c:895:
+			printk(KERN_DEBUG "%s: msg %x unhandled %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4358: FILE: drivers/isdn/mISDN/dsp_core.c:896:
+			printk(KERN_DEBUG "%s: msg %x unhandled %s\n",
+				__func__, hh->prim, dsp->name);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#4373: FILE: drivers/isdn/mISDN/dsp_core.c:911:
+	if (debug & DEBUG_DSP_CTRL)
+	printk(KERN_DEBUG "%s:(%x)\n", __func__, cmd);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4374: FILE: drivers/isdn/mISDN/dsp_core.c:912:
+	printk(KERN_DEBUG "%s:(%x)\n", __func__, cmd);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4385: FILE: drivers/isdn/mISDN/dsp_core.c:923:
+		 * queueing. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4396: FILE: drivers/isdn/mISDN/dsp_core.c:934:
+			printk(KERN_DEBUG "%s: releasing member %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4397: FILE: drivers/isdn/mISDN/dsp_core.c:935:
+			printk(KERN_DEBUG "%s: releasing member %s\n",
+				__func__, dsp->name);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#4400: FILE: drivers/isdn/mISDN/dsp_core.c:938:
+		dsp_cmx_conf(dsp, 0); /* dsp_cmx_hardware will also be called
+					 here */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4400: FILE: drivers/isdn/mISDN/dsp_core.c:938:
+					 here */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4404: FILE: drivers/isdn/mISDN/dsp_core.c:942:
+			printk(KERN_DEBUG "%s: remove & destroy object %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4405: FILE: drivers/isdn/mISDN/dsp_core.c:943:
+			printk(KERN_DEBUG "%s: remove & destroy object %s\n",
+				__func__, dsp->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4410: FILE: drivers/isdn/mISDN/dsp_core.c:948:
+			printk(KERN_DEBUG "%s: dsp instance released\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4411: FILE: drivers/isdn/mISDN/dsp_core.c:949:
+			printk(KERN_DEBUG "%s: dsp instance released\n",
+				__func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4434: FILE: drivers/isdn/mISDN/dsp_core.c:972:
+				printk(KERN_DEBUG "%s: fifo full %s, this is "

WARNING:SPLIT_STRING: quoted string split across lines
#4435: FILE: drivers/isdn/mISDN/dsp_core.c:973:
+				printk(KERN_DEBUG "%s: fifo full %s, this is "
+					"no bug!\n", __func__, dsp->name);

CHECK:BRACES: braces {} should be used on all arms of this statement
#4443: FILE: drivers/isdn/mISDN/dsp_core.c:981:
+			if (dsp->up) {
[...]
+			} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#4446: FILE: drivers/isdn/mISDN/dsp_core.c:984:
+			} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#4450: FILE: drivers/isdn/mISDN/dsp_core.c:988:
+			if (dsp->ch.peer) {
[...]
+			} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#4456: FILE: drivers/isdn/mISDN/dsp_core.c:994:
+			} else

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#4469: FILE: drivers/isdn/mISDN/dsp_core.c:1007:
+	if (crq->protocol != ISDN_P_B_L2DSP
+	 && crq->protocol != ISDN_P_B_L2DSPHDLC)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer vmalloc(sizeof(*ndsp)...) over vmalloc(sizeof(struct dsp)...)
#4471: FILE: drivers/isdn/mISDN/dsp_core.c:1009:
+	ndsp = vmalloc(sizeof(struct dsp));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4473: FILE: drivers/isdn/mISDN/dsp_core.c:1011:
+		printk(KERN_ERR "%s: vmalloc struct dsp failed\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4478: FILE: drivers/isdn/mISDN/dsp_core.c:1016:
+		printk(KERN_DEBUG "%s: creating new dsp instance\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#4495: FILE: drivers/isdn/mISDN/dsp_core.c:1033:
+		printk(KERN_WARNING "%s:cannot get module\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4496: FILE: drivers/isdn/mISDN/dsp_core.c:1034:
+		printk(KERN_WARNING "%s:cannot get module\n",
+			__func__);

CHECK:SPACING: No space is necessary after a cast
#4510: FILE: drivers/isdn/mISDN/dsp_core.c:1048:
+	ndsp->tone.tl.data = (long) ndsp;

WARNING:TYPO_SPELLING: 'treshold' may be misspelled - perhaps 'threshold'?
#4515: FILE: drivers/isdn/mISDN/dsp_core.c:1053:
+	ndsp->dtmf.treshold = dtmfthreshold*10000;
 	           ^^^^^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4515: FILE: drivers/isdn/mISDN/dsp_core.c:1053:
+	ndsp->dtmf.treshold = dtmfthreshold*10000;
 	                                   ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4526: FILE: drivers/isdn/mISDN/dsp_core.c:1064:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <Bprotocol>
#4527: FILE: drivers/isdn/mISDN/dsp_core.c:1065:
+static struct Bprotocol DSP = {

CHECK:CAMELCASE: Avoid CamelCase: <Bprotocols>
#4528: FILE: drivers/isdn/mISDN/dsp_core.c:1066:
+	.Bprotocols = (1 << (ISDN_P_B_L2DSP & ISDN_P_B_MASK))

WARNING:TYPO_SPELLING: 'modul' may be misspelled - perhaps 'module'?
#4539: FILE: drivers/isdn/mISDN/dsp_core.c:1077:
+	printk(KERN_INFO "DSP modul %s\n", mISDN_dsp_revision);
 	                      ^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#4539: FILE: drivers/isdn/mISDN/dsp_core.c:1077:
+	printk(KERN_INFO "DSP modul %s\n", mISDN_dsp_revision);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4548: FILE: drivers/isdn/mISDN/dsp_core.c:1086:
+			printk(KERN_ERR "%s: Wrong poll value (%d), use %d "

WARNING:SPLIT_STRING: quoted string split across lines
#4549: FILE: drivers/isdn/mISDN/dsp_core.c:1087:
+			printk(KERN_ERR "%s: Wrong poll value (%d), use %d "
+				"maximum.\n", __func__, poll, MAX_POLL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4554: FILE: drivers/isdn/mISDN/dsp_core.c:1092:
+			printk(KERN_ERR "%s: Wrong poll value (%d), use 8 "

WARNING:SPLIT_STRING: quoted string split across lines
#4555: FILE: drivers/isdn/mISDN/dsp_core.c:1093:
+			printk(KERN_ERR "%s: Wrong poll value (%d), use 8 "
+				"minimum.\n", __func__, dsp_poll);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#4561: FILE: drivers/isdn/mISDN/dsp_core.c:1099:
+			printk(KERN_INFO "mISDN_dsp: Cannot clock every %d "

WARNING:SPLIT_STRING: quoted string split across lines
#4562: FILE: drivers/isdn/mISDN/dsp_core.c:1100:
+			printk(KERN_INFO "mISDN_dsp: Cannot clock every %d "
+				"samples (0,125 ms). It is not a multiple of "

WARNING:SPLIT_STRING: quoted string split across lines
#4563: FILE: drivers/isdn/mISDN/dsp_core.c:1101:
+				"samples (0,125 ms). It is not a multiple of "
+				"%d HZ.\n", poll, HZ);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#4581: FILE: drivers/isdn/mISDN/dsp_core.c:1119:
+		printk(KERN_INFO "mISDN_dsp: There is no multiple of kernel "

WARNING:SPLIT_STRING: quoted string split across lines
#4582: FILE: drivers/isdn/mISDN/dsp_core.c:1120:
+		printk(KERN_INFO "mISDN_dsp: There is no multiple of kernel "
+			"clock that equals exactly the duration of 8-256 "

WARNING:SPLIT_STRING: quoted string split across lines
#4583: FILE: drivers/isdn/mISDN/dsp_core.c:1121:
+			"clock that equals exactly the duration of 8-256 "
+			"samples. (Choose kernel clock speed like 100, 250, "

WARNING:SPLIT_STRING: quoted string split across lines
#4584: FILE: drivers/isdn/mISDN/dsp_core.c:1122:
+			"samples. (Choose kernel clock speed like 100, 250, "
+			"300, 1000)\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#4588: FILE: drivers/isdn/mISDN/dsp_core.c:1126:
+	printk(KERN_INFO "mISDN_dsp: DSP clocks every %d samples. This equals "

WARNING:SPLIT_STRING: quoted string split across lines
#4589: FILE: drivers/isdn/mISDN/dsp_core.c:1127:
+	printk(KERN_INFO "mISDN_dsp: DSP clocks every %d samples. This equals "
+		"%d jiffies.\n", dsp_poll, dsp_tics);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#4597: FILE: drivers/isdn/mISDN/dsp_core.c:1135:
+	dsp_silence = (dsp_options&DSP_OPT_ULAW)?0xff:0x2a;
 	                          ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#4597: FILE: drivers/isdn/mISDN/dsp_core.c:1135:
+	dsp_silence = (dsp_options&DSP_OPT_ULAW)?0xff:0x2a;
 	                                        ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#4597: FILE: drivers/isdn/mISDN/dsp_core.c:1135:
+	dsp_silence = (dsp_options&DSP_OPT_ULAW)?0xff:0x2a;
 	                                             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#4598: FILE: drivers/isdn/mISDN/dsp_core.c:1136:
+	dsp_audio_law_to_s32 = (dsp_options&DSP_OPT_ULAW)?dsp_audio_ulaw_to_s32:
 	                                   ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#4598: FILE: drivers/isdn/mISDN/dsp_core.c:1136:
+	dsp_audio_law_to_s32 = (dsp_options&DSP_OPT_ULAW)?dsp_audio_ulaw_to_s32:
 	                                                 ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#4598: FILE: drivers/isdn/mISDN/dsp_core.c:1136:
+	dsp_audio_law_to_s32 = (dsp_options&DSP_OPT_ULAW)?dsp_audio_ulaw_to_s32:
 	                                                                       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4609: FILE: drivers/isdn/mISDN/dsp_core.c:1147:
+		printk(KERN_ERR "mISDN_dsp: Can't initialize pipeline, "

WARNING:SPLIT_STRING: quoted string split across lines
#4610: FILE: drivers/isdn/mISDN/dsp_core.c:1148:
+		printk(KERN_ERR "mISDN_dsp: Can't initialize pipeline, "
+			"error(%d)\n", err);

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_register_Bprotocol>
#4614: FILE: drivers/isdn/mISDN/dsp_core.c:1152:
+	err = mISDN_register_Bprotocol(&DSP);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4616: FILE: drivers/isdn/mISDN/dsp_core.c:1154:
+		printk(KERN_ERR "Can't register %s error(%d)\n", DSP.name, err);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4631: FILE: drivers/isdn/mISDN/dsp_core.c:1169:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_unregister_Bprotocol>
#4634: FILE: drivers/isdn/mISDN/dsp_core.c:1172:
+	mISDN_unregister_Bprotocol(&DSP);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4640: FILE: drivers/isdn/mISDN/dsp_core.c:1178:
+		printk(KERN_ERR "mISDN_dsp: Audio DSP object inst list not "

WARNING:SPLIT_STRING: quoted string split across lines
#4641: FILE: drivers/isdn/mISDN/dsp_core.c:1179:
+		printk(KERN_ERR "mISDN_dsp: Audio DSP object inst list not "
+			"empty.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4644: FILE: drivers/isdn/mISDN/dsp_core.c:1182:
+		printk(KERN_ERR "mISDN_dsp: Conference list not empty. Not "

WARNING:SPLIT_STRING: quoted string split across lines
#4645: FILE: drivers/isdn/mISDN/dsp_core.c:1183:
+		printk(KERN_ERR "mISDN_dsp: Conference list not empty. Not "
+			"all memory freed.\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4660: FILE: drivers/isdn/mISDN/dsp_dtmf.c:1:
+/*

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#4682: FILE: drivers/isdn/mISDN/dsp_dtmf.c:23:
+static u64 cos2pik[NCOEFF] =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#4689: FILE: drivers/isdn/mISDN/dsp_dtmf.c:30:
+static char dtmf_matrix[4][4] =
+{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4719: FILE: drivers/isdn/mISDN/dsp_dtmf.c:60:
+			printk(KERN_DEBUG "%s dsp %s cannot do hardware DTMF, "

WARNING:SPLIT_STRING: quoted string split across lines
#4720: FILE: drivers/isdn/mISDN/dsp_dtmf.c:61:
+			printk(KERN_DEBUG "%s dsp %s cannot do hardware DTMF, "
+				"because tx_volume is changed\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4726: FILE: drivers/isdn/mISDN/dsp_dtmf.c:67:
+			printk(KERN_DEBUG "%s dsp %s cannot do hardware DTMF, "

WARNING:SPLIT_STRING: quoted string split across lines
#4727: FILE: drivers/isdn/mISDN/dsp_dtmf.c:68:
+			printk(KERN_DEBUG "%s dsp %s cannot do hardware DTMF, "
+				"because rx_volume is changed\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4734: FILE: drivers/isdn/mISDN/dsp_dtmf.c:75:
+			printk(KERN_DEBUG "%s dsp %s cannot do hardware DTMF, "

WARNING:SPLIT_STRING: quoted string split across lines
#4735: FILE: drivers/isdn/mISDN/dsp_dtmf.c:76:
+			printk(KERN_DEBUG "%s dsp %s cannot do hardware DTMF, "
+				"because encryption is enabled\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4742: FILE: drivers/isdn/mISDN/dsp_dtmf.c:83:
+			printk(KERN_DEBUG "%s dsp %s cannot do hardware DTMF, "

WARNING:SPLIT_STRING: quoted string split across lines
#4743: FILE: drivers/isdn/mISDN/dsp_dtmf.c:84:
+			printk(KERN_DEBUG "%s dsp %s cannot do hardware DTMF, "
+				"because pipeline exists.\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4752: FILE: drivers/isdn/mISDN/dsp_dtmf.c:93:
+
+

WARNING:TYPO_SPELLING: 'accoustically' may be misspelled - perhaps 'acoustically'?
#4764: FILE: drivers/isdn/mISDN/dsp_dtmf.c:105:
+ * tones. this will happen, if accoustically coupled dialers are used.
                                ^^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'speach' may be misspelled - perhaps 'speech'?
#4765: FILE: drivers/isdn/mISDN/dsp_dtmf.c:106:
+ * it sometimes detects tones during speach, which is normal for decoders.
                                      ^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4808: FILE: drivers/isdn/mISDN/dsp_dtmf.c:149:
+				printk(KERN_ERR "%s: coefficients have invalid "

WARNING:SPLIT_STRING: quoted string split across lines
#4809: FILE: drivers/isdn/mISDN/dsp_dtmf.c:150:
+				printk(KERN_ERR "%s: coefficients have invalid "
+					"size. (is=%d < must=%d)\n",

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#4815: FILE: drivers/isdn/mISDN/dsp_dtmf.c:156:
+			sk2 = (*hfccoeff++)>>4;
 			                   ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#4816: FILE: drivers/isdn/mISDN/dsp_dtmf.c:157:
+			sk = (*hfccoeff++)>>4;
 			                  ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#4818: FILE: drivers/isdn/mISDN/dsp_dtmf.c:159:
+			if (sk > 32767 || sk < -32767 || sk2 > 32767
+			    || sk2 < -32767)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#4819: FILE: drivers/isdn/mISDN/dsp_dtmf.c:160:
+				printk(KERN_WARNING

WARNING:UNNECESSARY_BREAK: break is not useful after a goto
#4830: FILE: drivers/isdn/mISDN/dsp_dtmf.c:171:
+		goto coefficients;
+		break;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4847: FILE: drivers/isdn/mISDN/dsp_dtmf.c:188:
+			sk = ((cos2pik_*sk1)>>15) - sk2 + (*buf++);
 			               ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#4847: FILE: drivers/isdn/mISDN/dsp_dtmf.c:188:
+			sk = ((cos2pik_*sk1)>>15) - sk2 + (*buf++);
 			                    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#4854: FILE: drivers/isdn/mISDN/dsp_dtmf.c:195:
+			printk(KERN_WARNING "DTMF-Detection overflow\n");

WARNING:TYPO_SPELLING: 'treshold' may be misspelled - perhaps 'threshold'?
#4870: FILE: drivers/isdn/mISDN/dsp_dtmf.c:211:
+		if (result[i] > dsp->dtmf.treshold) {
 		                          ^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4882: FILE: drivers/isdn/mISDN/dsp_dtmf.c:223:
+		printk(KERN_DEBUG "a %3d %3d %3d %3d %3d %3d %3d %3d"

WARNING:SPLIT_STRING: quoted string split across lines
#4883: FILE: drivers/isdn/mISDN/dsp_dtmf.c:224:
+		printk(KERN_DEBUG "a %3d %3d %3d %3d %3d %3d %3d %3d"
+			" tr:%3d r %3d %3d %3d %3d %3d %3d %3d %3d\n",

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4884: FILE: drivers/isdn/mISDN/dsp_dtmf.c:225:
+			result[0]/10000, result[1]/10000, result[2]/10000,
 			         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4884: FILE: drivers/isdn/mISDN/dsp_dtmf.c:225:
+			result[0]/10000, result[1]/10000, result[2]/10000,
 			                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4884: FILE: drivers/isdn/mISDN/dsp_dtmf.c:225:
+			result[0]/10000, result[1]/10000, result[2]/10000,
 			                                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4885: FILE: drivers/isdn/mISDN/dsp_dtmf.c:226:
+			result[3]/10000, result[4]/10000, result[5]/10000,
 			         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4885: FILE: drivers/isdn/mISDN/dsp_dtmf.c:226:
+			result[3]/10000, result[4]/10000, result[5]/10000,
 			                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4885: FILE: drivers/isdn/mISDN/dsp_dtmf.c:226:
+			result[3]/10000, result[4]/10000, result[5]/10000,
 			                                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4886: FILE: drivers/isdn/mISDN/dsp_dtmf.c:227:
+			result[6]/10000, result[7]/10000, tresh/10000,
 			         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4886: FILE: drivers/isdn/mISDN/dsp_dtmf.c:227:
+			result[6]/10000, result[7]/10000, tresh/10000,
 			                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4886: FILE: drivers/isdn/mISDN/dsp_dtmf.c:227:
+			result[6]/10000, result[7]/10000, tresh/10000,
 			                                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4887: FILE: drivers/isdn/mISDN/dsp_dtmf.c:228:
+			result[0]/(tresh/100), result[1]/(tresh/100),
 			         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4887: FILE: drivers/isdn/mISDN/dsp_dtmf.c:228:
+			result[0]/(tresh/100), result[1]/(tresh/100),
 			                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4887: FILE: drivers/isdn/mISDN/dsp_dtmf.c:228:
+			result[0]/(tresh/100), result[1]/(tresh/100),
 			                                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4887: FILE: drivers/isdn/mISDN/dsp_dtmf.c:228:
+			result[0]/(tresh/100), result[1]/(tresh/100),
 			                                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4888: FILE: drivers/isdn/mISDN/dsp_dtmf.c:229:
+			result[2]/(tresh/100), result[3]/(tresh/100),
 			         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4888: FILE: drivers/isdn/mISDN/dsp_dtmf.c:229:
+			result[2]/(tresh/100), result[3]/(tresh/100),
 			                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4888: FILE: drivers/isdn/mISDN/dsp_dtmf.c:229:
+			result[2]/(tresh/100), result[3]/(tresh/100),
 			                                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4888: FILE: drivers/isdn/mISDN/dsp_dtmf.c:229:
+			result[2]/(tresh/100), result[3]/(tresh/100),
 			                                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4889: FILE: drivers/isdn/mISDN/dsp_dtmf.c:230:
+			result[4]/(tresh/100), result[5]/(tresh/100),
 			         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4889: FILE: drivers/isdn/mISDN/dsp_dtmf.c:230:
+			result[4]/(tresh/100), result[5]/(tresh/100),
 			                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4889: FILE: drivers/isdn/mISDN/dsp_dtmf.c:230:
+			result[4]/(tresh/100), result[5]/(tresh/100),
 			                                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4889: FILE: drivers/isdn/mISDN/dsp_dtmf.c:230:
+			result[4]/(tresh/100), result[5]/(tresh/100),
 			                                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4890: FILE: drivers/isdn/mISDN/dsp_dtmf.c:231:
+			result[6]/(tresh/100), result[7]/(tresh/100));
 			         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4890: FILE: drivers/isdn/mISDN/dsp_dtmf.c:231:
+			result[6]/(tresh/100), result[7]/(tresh/100));
 			                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4890: FILE: drivers/isdn/mISDN/dsp_dtmf.c:231:
+			result[6]/(tresh/100), result[7]/(tresh/100));
 			                                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4890: FILE: drivers/isdn/mISDN/dsp_dtmf.c:231:
+			result[6]/(tresh/100), result[7]/(tresh/100));
 			                                       ^

WARNING:TYPO_SPELLING: 'inbetween' may be misspelled - perhaps 'between'?
#4903: FILE: drivers/isdn/mISDN/dsp_dtmf.c:244:
+			break;  /* noise inbetween */
 			                 ^^^^^^^^^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4906: FILE: drivers/isdn/mISDN/dsp_dtmf.c:247:
+		if (i < NCOEFF/2) {
 		              ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#4908: FILE: drivers/isdn/mISDN/dsp_dtmf.c:249:
+			if (lowgroup >= 0) {
[...]
+			} else
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#4912: FILE: drivers/isdn/mISDN/dsp_dtmf.c:253:
+				break;
+			} else

CHECK:BRACES: Unbalanced braces around else statement
#4912: FILE: drivers/isdn/mISDN/dsp_dtmf.c:253:
+			} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#4916: FILE: drivers/isdn/mISDN/dsp_dtmf.c:257:
+			if (highgroup >= 0) {
[...]
+			} else
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#4920: FILE: drivers/isdn/mISDN/dsp_dtmf.c:261:
+				break;
+			} else

CHECK:BRACES: Unbalanced braces around else statement
#4920: FILE: drivers/isdn/mISDN/dsp_dtmf.c:261:
+			} else

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#4921: FILE: drivers/isdn/mISDN/dsp_dtmf.c:262:
+				highgroup = i-(NCOEFF/2);
 				             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4921: FILE: drivers/isdn/mISDN/dsp_dtmf.c:262:
+				highgroup = i-(NCOEFF/2);
 				                     ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4932: FILE: drivers/isdn/mISDN/dsp_dtmf.c:273:
+		printk(KERN_DEBUG "DTMF what: %c\n", what);

CHECK:BRACES: braces {} should be used on all arms of this statement
#4938: FILE: drivers/isdn/mISDN/dsp_dtmf.c:279:
+	if (dsp->dtmf.count == 2) {
[...]
+	} else
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4943: FILE: drivers/isdn/mISDN/dsp_dtmf.c:284:
+					printk(KERN_DEBUG "DTMF digit: %c\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4944: FILE: drivers/isdn/mISDN/dsp_dtmf.c:285:
+					printk(KERN_DEBUG "DTMF digit: %c\n",
+						what);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#4945: FILE: drivers/isdn/mISDN/dsp_dtmf.c:286:
+				if ((strlen(dsp->dtmf.digits)+1)
 				                             ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#4947: FILE: drivers/isdn/mISDN/dsp_dtmf.c:288:
+					dsp->dtmf.digits[strlen(

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#4948: FILE: drivers/isdn/mISDN/dsp_dtmf.c:289:
+						dsp->dtmf.digits)+1] = '\0';
 						                 ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#4949: FILE: drivers/isdn/mISDN/dsp_dtmf.c:290:
+					dsp->dtmf.digits[strlen(

CHECK:BRACES: Unbalanced braces around else statement
#4954: FILE: drivers/isdn/mISDN/dsp_dtmf.c:295:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4962: FILE: drivers/isdn/mISDN/dsp_dtmf.c:303:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4969: FILE: drivers/isdn/mISDN/dsp_ecdis.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#4993: FILE: drivers/isdn/mISDN/dsp_ecdis.h:25:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#4994: FILE: drivers/isdn/mISDN/dsp_ecdis.h:26:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5010: FILE: drivers/isdn/mISDN/dsp_ecdis.h:42:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#5019: FILE: drivers/isdn/mISDN/dsp_ecdis.h:51:
+    /* This is actually centred at 2095Hz, but gets the balance we want, due
+       to the asymmetric walls of the notch */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5019: FILE: drivers/isdn/mISDN/dsp_ecdis.h:51:
+       to the asymmetric walls of the notch */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5021: FILE: drivers/isdn/mISDN/dsp_ecdis.h:53:
+	biquad2_init(&det->notch,
+		(int32_t) (-0.7600000*32768.0),

CHECK:SPACING: No space is necessary after a cast
#5021: FILE: drivers/isdn/mISDN/dsp_ecdis.h:53:
+		(int32_t) (-0.7600000*32768.0),

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#5021: FILE: drivers/isdn/mISDN/dsp_ecdis.h:53:
+		(int32_t) (-0.7600000*32768.0),
 		                     ^

CHECK:SPACING: No space is necessary after a cast
#5022: FILE: drivers/isdn/mISDN/dsp_ecdis.h:54:
+		(int32_t) (-0.1183852*32768.0),

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#5022: FILE: drivers/isdn/mISDN/dsp_ecdis.h:54:
+		(int32_t) (-0.1183852*32768.0),
 		                     ^

CHECK:SPACING: No space is necessary after a cast
#5023: FILE: drivers/isdn/mISDN/dsp_ecdis.h:55:
+		(int32_t) (-0.5104039*32768.0),

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#5023: FILE: drivers/isdn/mISDN/dsp_ecdis.h:55:
+		(int32_t) (-0.5104039*32768.0),
 		                     ^

CHECK:SPACING: No space is necessary after a cast
#5024: FILE: drivers/isdn/mISDN/dsp_ecdis.h:56:
+		(int32_t) (0.1567596*32768.0),

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#5024: FILE: drivers/isdn/mISDN/dsp_ecdis.h:56:
+		(int32_t) (0.1567596*32768.0),
 		                    ^

CHECK:SPACING: No space is necessary after a cast
#5025: FILE: drivers/isdn/mISDN/dsp_ecdis.h:57:
+		(int32_t) (1.0000000*32768.0));

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#5025: FILE: drivers/isdn/mISDN/dsp_ecdis.h:57:
+		(int32_t) (1.0000000*32768.0));
 		                    ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#5034: FILE: drivers/isdn/mISDN/dsp_ecdis.h:66:
+}
+/*- End of function --------------------------------------------------------*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5038: FILE: drivers/isdn/mISDN/dsp_ecdis.h:70:
+echo_can_disable_detector_update(struct ec_disable_detector_state *det,
+int16_t amp)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's16' over 'int16_t'
#5040: FILE: drivers/isdn/mISDN/dsp_ecdis.h:72:
+	int16_t notched;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#5044: FILE: drivers/isdn/mISDN/dsp_ecdis.h:76:
+	/* Estimate the overall energy in the channel, and the energy in
+	   the notch (i.e. overall channel energy - tone energy => noise).

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5048: FILE: drivers/isdn/mISDN/dsp_ecdis.h:80:
+	   blip every time the phase reverses */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#5053: FILE: drivers/isdn/mISDN/dsp_ecdis.h:85:
+		/* There is adequate energy in the channel.
+		 Is it mostly at 2100Hz? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5053: FILE: drivers/isdn/mISDN/dsp_ecdis.h:85:
+		 Is it mostly at 2100Hz? */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#5054: FILE: drivers/isdn/mISDN/dsp_ecdis.h:86:
+		if (det->notch_level*6 < det->channel_level) {
 		                    ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#5054: FILE: drivers/isdn/mISDN/dsp_ecdis.h:86:
+		if (det->notch_level*6 < det->channel_level) {
[...]
+		} else
[...]

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#5058: FILE: drivers/isdn/mISDN/dsp_ecdis.h:90:
+				if (det->tone_cycle_duration >= 425*8
 				                                   ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5059: FILE: drivers/isdn/mISDN/dsp_ecdis.h:91:
+				if (det->tone_cycle_duration >= 425*8
+					&& det->tone_cycle_duration <= 475*8) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#5059: FILE: drivers/isdn/mISDN/dsp_ecdis.h:91:
+					&& det->tone_cycle_duration <= 475*8) {
 					                                  ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (40, 40)
#5061: FILE: drivers/isdn/mISDN/dsp_ecdis.h:93:
+					if (det->good_cycles > 2)
+					det->hit = TRUE;

CHECK:BRACES: Unbalanced braces around else statement
#5067: FILE: drivers/isdn/mISDN/dsp_ecdis.h:99:
+		} else

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#5077: FILE: drivers/isdn/mISDN/dsp_ecdis.h:109:
+}
+/*- End of function --------------------------------------------------------*/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#5085: FILE: drivers/isdn/mISDN/dsp_hwec.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#5104: FILE: drivers/isdn/mISDN/dsp_hwec.c:20:
+ * this program; if not, write to the Free Software Foundation, Inc., 59$

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_dsp_element_arg>
#5120: FILE: drivers/isdn/mISDN/dsp_hwec.c:36:
+static struct mISDN_dsp_element_arg args[] = {

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_dsp_element>
#5124: FILE: drivers/isdn/mISDN/dsp_hwec.c:40:
+static struct mISDN_dsp_element dsp_hwec_p = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#5133: FILE: drivers/isdn/mISDN/dsp_hwec.c:49:
+};
+struct mISDN_dsp_element *dsp_hwec = &dsp_hwec_p;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5142: FILE: drivers/isdn/mISDN/dsp_hwec.c:58:
+		printk(KERN_ERR "%s: failed to enable hwec: dsp is NULL\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5143: FILE: drivers/isdn/mISDN/dsp_hwec.c:59:
+		printk(KERN_ERR "%s: failed to enable hwec: dsp is NULL\n",
+			__func__);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#5172: FILE: drivers/isdn/mISDN/dsp_hwec.c:88:
+				if (sscanf(val, "%d", &tmp) == 1)
+					deftaps = tmp;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5179: FILE: drivers/isdn/mISDN/dsp_hwec.c:95:
+	printk(KERN_DEBUG "%s: enabling hwec with deftaps=%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5180: FILE: drivers/isdn/mISDN/dsp_hwec.c:96:
+	printk(KERN_DEBUG "%s: enabling hwec with deftaps=%d\n",
+		__func__, deftaps);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5185: FILE: drivers/isdn/mISDN/dsp_hwec.c:101:
+		printk(KERN_DEBUG "%s: CONTROL_CHANNEL failed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5186: FILE: drivers/isdn/mISDN/dsp_hwec.c:102:
+		printk(KERN_DEBUG "%s: CONTROL_CHANNEL failed\n",
+			__func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5196: FILE: drivers/isdn/mISDN/dsp_hwec.c:112:
+		printk(KERN_ERR "%s: failed to disable hwec: dsp is NULL\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5197: FILE: drivers/isdn/mISDN/dsp_hwec.c:113:
+		printk(KERN_ERR "%s: failed to disable hwec: dsp is NULL\n",
+			__func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5201: FILE: drivers/isdn/mISDN/dsp_hwec.c:117:
+	printk(KERN_DEBUG "%s: disabling hwec\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5205: FILE: drivers/isdn/mISDN/dsp_hwec.c:121:
+		printk(KERN_DEBUG "%s: CONTROL_CHANNEL failed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5206: FILE: drivers/isdn/mISDN/dsp_hwec.c:122:
+		printk(KERN_DEBUG "%s: CONTROL_CHANNEL failed\n",
+			__func__);

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_dsp_element_register>
#5213: FILE: drivers/isdn/mISDN/dsp_hwec.c:129:
+	mISDN_dsp_element_register(dsp_hwec);

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_dsp_element_unregister>
#5220: FILE: drivers/isdn/mISDN/dsp_hwec.c:136:
+	mISDN_dsp_element_unregister(dsp_hwec);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#5229: FILE: drivers/isdn/mISDN/dsp_hwec.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5234: FILE: drivers/isdn/mISDN/dsp_hwec.h:6:
+extern void dsp_hwec_enable(struct dsp *dsp, const char *arg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5235: FILE: drivers/isdn/mISDN/dsp_hwec.h:7:
+extern void dsp_hwec_disable(struct dsp *dsp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5236: FILE: drivers/isdn/mISDN/dsp_hwec.h:8:
+extern int  dsp_hwec_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5237: FILE: drivers/isdn/mISDN/dsp_hwec.h:9:
+extern void dsp_hwec_exit(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#5245: FILE: drivers/isdn/mISDN/dsp_pipeline.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#5263: FILE: drivers/isdn/mISDN/dsp_pipeline.c:19:
+ * this program; if not, write to the Free Software Foundation, Inc., 59$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#5287: FILE: drivers/isdn/mISDN/dsp_pipeline.c:43:
+};
+struct dsp_element_entry {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*entry)...) over kzalloc(sizeof(struct dsp_element_entry)...)
#5330: FILE: drivers/isdn/mISDN/dsp_pipeline.c:86:
+	entry = kzalloc(sizeof(struct dsp_element_entry), GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5341: FILE: drivers/isdn/mISDN/dsp_pipeline.c:97:
+		printk(KERN_ERR "%s: failed to register %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5342: FILE: drivers/isdn/mISDN/dsp_pipeline.c:98:
+		printk(KERN_ERR "%s: failed to register %s\n",
+			__func__, elem->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5349: FILE: drivers/isdn/mISDN/dsp_pipeline.c:105:
+		ret = device_create_file(&entry->dev,
+				&element_attributes[i]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5351: FILE: drivers/isdn/mISDN/dsp_pipeline.c:107:
+			printk(KERN_ERR "%s: failed to create device file\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5352: FILE: drivers/isdn/mISDN/dsp_pipeline.c:108:
+			printk(KERN_ERR "%s: failed to create device file\n",
+				__func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5358: FILE: drivers/isdn/mISDN/dsp_pipeline.c:114:
+	printk(KERN_DEBUG "%s: %s registered\n", __func__, elem->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5382: FILE: drivers/isdn/mISDN/dsp_pipeline.c:138:
+			printk(KERN_DEBUG "%s: %s unregistered\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5383: FILE: drivers/isdn/mISDN/dsp_pipeline.c:139:
+			printk(KERN_DEBUG "%s: %s unregistered\n",
+				__func__, elem->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5386: FILE: drivers/isdn/mISDN/dsp_pipeline.c:142:
+	printk(KERN_ERR "%s: element %s not in list.\n", __func__, elem->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5397: FILE: drivers/isdn/mISDN/dsp_pipeline.c:153:
+	printk(KERN_DEBUG "%s: dsp pipeline module initialized\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5415: FILE: drivers/isdn/mISDN/dsp_pipeline.c:171:
+		printk(KERN_WARNING "%s: element was still registered: %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5416: FILE: drivers/isdn/mISDN/dsp_pipeline.c:172:
+		printk(KERN_WARNING "%s: element was still registered: %s\n",
+			__func__, entry->elem->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5420: FILE: drivers/isdn/mISDN/dsp_pipeline.c:176:
+	printk(KERN_DEBUG "%s: dsp pipeline module exited\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5431: FILE: drivers/isdn/mISDN/dsp_pipeline.c:187:
+	printk(KERN_DEBUG "%s: dsp pipeline ready\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5445: FILE: drivers/isdn/mISDN/dsp_pipeline.c:201:
+			dsp_hwec_disable(container_of(pipeline, struct dsp,
+				pipeline));

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#5454: FILE: drivers/isdn/mISDN/dsp_pipeline.c:210:
+{
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5461: FILE: drivers/isdn/mISDN/dsp_pipeline.c:217:
+	printk(KERN_DEBUG "%s: dsp pipeline destroyed\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5505: FILE: drivers/isdn/mISDN/dsp_pipeline.c:261:
+					printk(KERN_DEBUG "%s: failed to add "

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#5505: FILE: drivers/isdn/mISDN/dsp_pipeline.c:261:
+				if (!pipeline_entry) {
+					printk(KERN_DEBUG "%s: failed to add "

WARNING:SPLIT_STRING: quoted string split across lines
#5506: FILE: drivers/isdn/mISDN/dsp_pipeline.c:262:
+					printk(KERN_DEBUG "%s: failed to add "
+					    "entry to pipeline: %s (out of "

WARNING:SPLIT_STRING: quoted string split across lines
#5507: FILE: drivers/isdn/mISDN/dsp_pipeline.c:263:
+					    "entry to pipeline: %s (out of "
+					    "memory)\n", __func__, elem->name);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#5515: FILE: drivers/isdn/mISDN/dsp_pipeline.c:271:
+					/* This is a hack to make the hwec
+					   available as a pipeline module */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5515: FILE: drivers/isdn/mISDN/dsp_pipeline.c:271:
+					   available as a pipeline module */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5517: FILE: drivers/isdn/mISDN/dsp_pipeline.c:273:
+					dsp_hwec_enable(container_of(pipeline,
+						struct dsp, pipeline), args);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5519: FILE: drivers/isdn/mISDN/dsp_pipeline.c:275:
+					list_add_tail(&pipeline_entry->list,
+						&pipeline->list);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'pipeline_entry->list'
#5524: FILE: drivers/isdn/mISDN/dsp_pipeline.c:280:
+						list_add_tail(&pipeline_entry->
+							list, &pipeline->list);

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5526: FILE: drivers/isdn/mISDN/dsp_pipeline.c:282:
+						printk(KERN_DEBUG "%s: created "

WARNING:SPLIT_STRING: quoted string split across lines
#5527: FILE: drivers/isdn/mISDN/dsp_pipeline.c:283:
+						printk(KERN_DEBUG "%s: created "
+						    "instance of %s%s%s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5533: FILE: drivers/isdn/mISDN/dsp_pipeline.c:289:
+						printk(KERN_DEBUG "%s: failed "

WARNING:SPLIT_STRING: quoted string split across lines
#5534: FILE: drivers/isdn/mISDN/dsp_pipeline.c:290:
+						printk(KERN_DEBUG "%s: failed "
+						  "to add entry to pipeline: "

WARNING:SPLIT_STRING: quoted string split across lines
#5535: FILE: drivers/isdn/mISDN/dsp_pipeline.c:291:
+						  "to add entry to pipeline: "
+						  "%s (new() returned NULL)\n",

CHECK:BRACES: braces {} should be used on all arms of this statement
#5545: FILE: drivers/isdn/mISDN/dsp_pipeline.c:301:
+		if (found)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#5547: FILE: drivers/isdn/mISDN/dsp_pipeline.c:303:
+		else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5548: FILE: drivers/isdn/mISDN/dsp_pipeline.c:304:
+			printk(KERN_DEBUG "%s: element not found, skipping: "

WARNING:SPLIT_STRING: quoted string split across lines
#5549: FILE: drivers/isdn/mISDN/dsp_pipeline.c:305:
+			printk(KERN_DEBUG "%s: element not found, skipping: "
+				"%s\n", __func__, name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5561: FILE: drivers/isdn/mISDN/dsp_pipeline.c:317:
+	printk(KERN_DEBUG "%s: dsp pipeline built%s: %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5562: FILE: drivers/isdn/mISDN/dsp_pipeline.c:318:
+	printk(KERN_DEBUG "%s: dsp pipeline built%s: %s\n",
+		__func__, incomplete ? " incomplete" : "", cfg);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5592: FILE: drivers/isdn/mISDN/dsp_pipeline.c:348:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#5599: FILE: drivers/isdn/mISDN/dsp_tones.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5614: FILE: drivers/isdn/mISDN/dsp_tones.c:16:
+
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#5655: FILE: drivers/isdn/mISDN/dsp_tones.c:57:
+};
+static u32 sizeof_german_all = sizeof(sample_german_all);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#5671: FILE: drivers/isdn/mISDN/dsp_tones.c:73:
+};
+static u32 sizeof_german_old = sizeof(sample_german_old);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#5687: FILE: drivers/isdn/mISDN/dsp_tones.c:89:
+};
+static u32 sizeof_american_dialtone = sizeof(sample_american_dialtone);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#5712: FILE: drivers/isdn/mISDN/dsp_tones.c:114:
+};
+static u32 sizeof_american_ringing = sizeof(sample_american_ringing);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#5731: FILE: drivers/isdn/mISDN/dsp_tones.c:133:
+};
+static u32 sizeof_american_busy = sizeof(sample_american_busy);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#5743: FILE: drivers/isdn/mISDN/dsp_tones.c:145:
+};
+static u32 sizeof_special1 = sizeof(sample_special1);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#5757: FILE: drivers/isdn/mISDN/dsp_tones.c:159:
+};
+static u32 sizeof_special2 = sizeof(sample_special2);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#5771: FILE: drivers/isdn/mISDN/dsp_tones.c:173:
+};
+static u32 sizeof_special3 = sizeof(sample_special3);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#5787: FILE: drivers/isdn/mISDN/dsp_tones.c:189:
+};
+static u32 sizeof_silence = sizeof(sample_silence);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#5793: FILE: drivers/isdn/mISDN/dsp_tones.c:195:
+};
+static struct

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5827: FILE: drivers/isdn/mISDN/dsp_tones.c:229:
+
+

WARNING:TYPO_SPELLING: 'arround' may be misspelled - perhaps 'around'?
#5988: FILE: drivers/isdn/mISDN/dsp_tones.c:390:
+			/* warp arround */
 			        ^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5997: FILE: drivers/isdn/mISDN/dsp_tones.c:399:
+				printk(KERN_DEBUG "%s: reaching next sequence "

WARNING:SPLIT_STRING: quoted string split across lines
#5998: FILE: drivers/isdn/mISDN/dsp_tones.c:400:
+				printk(KERN_DEBUG "%s: reaching next sequence "
+					"(index=%d)\n", __func__, index);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pat->siz[index]
#6003: FILE: drivers/isdn/mISDN/dsp_tones.c:405:
+		start = count % (*(pat->siz[index]));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#6005: FILE: drivers/isdn/mISDN/dsp_tones.c:407:
+		if (num+count > pat->seq[index])
 		       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#6007: FILE: drivers/isdn/mISDN/dsp_tones.c:409:
+		if (num+start > (*(pat->siz[index])))
 		       ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pat->siz[index]
#6007: FILE: drivers/isdn/mISDN/dsp_tones.c:409:
+		if (num+start > (*(pat->siz[index])))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pat->siz[index]'
#6007: FILE: drivers/isdn/mISDN/dsp_tones.c:409:
+		if (num+start > (*(pat->siz[index])))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pat->siz[index]
#6008: FILE: drivers/isdn/mISDN/dsp_tones.c:410:
+			num = (*(pat->siz[index])) - start;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#6010: FILE: drivers/isdn/mISDN/dsp_tones.c:412:
+		memcpy(data, pat->data[index]+start, num);
 		                             ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#6021: FILE: drivers/isdn/mISDN/dsp_tones.c:423:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6023: FILE: drivers/isdn/mISDN/dsp_tones.c:425:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6035: FILE: drivers/isdn/mISDN/dsp_tones.c:437:
+	nskb = _alloc_mISDN_skb(PH_CONTROL_REQ,
+		(len)?HFC_SPL_LOOP_ON:HFC_SPL_LOOP_OFF, len, sample,

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#6035: FILE: drivers/isdn/mISDN/dsp_tones.c:437:
+		(len)?HFC_SPL_LOOP_ON:HFC_SPL_LOOP_OFF, len, sample,
 		     ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#6035: FILE: drivers/isdn/mISDN/dsp_tones.c:437:
+		(len)?HFC_SPL_LOOP_ON:HFC_SPL_LOOP_OFF, len, sample,
 		                     ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#6038: FILE: drivers/isdn/mISDN/dsp_tones.c:440:
+		if (dsp->ch.peer) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#6041: FILE: drivers/isdn/mISDN/dsp_tones.c:443:
+		} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6046: FILE: drivers/isdn/mISDN/dsp_tones.c:448:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pat->siz[index]
#6070: FILE: drivers/isdn/mISDN/dsp_tones.c:472:
+		dsp_tone_hw_message(dsp, pat->data[index], *(pat->siz[index]));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6077: FILE: drivers/isdn/mISDN/dsp_tones.c:479:
+
+

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#6099: FILE: drivers/isdn/mISDN/dsp_tones.c:501:
+		if (dsp->features.hfc_loops)
+		if (timer_pending(&tonet->tl))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#6118: FILE: drivers/isdn/mISDN/dsp_tones.c:520:
+		printk(KERN_WARNING "dsp: given tone 0x%x is invalid\n", tone);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#6122: FILE: drivers/isdn/mISDN/dsp_tones.c:524:
+		printk(KERN_DEBUG "%s: now starting tone %d (index=%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6123: FILE: drivers/isdn/mISDN/dsp_tones.c:525:
+		printk(KERN_DEBUG "%s: now starting tone %d (index=%d)\n",
+			__func__, tone, 0);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pat->siz[0]
#6132: FILE: drivers/isdn/mISDN/dsp_tones.c:534:
+		dsp_tone_hw_message(dsp, pat->data[0], *(pat->siz[0]));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6146: FILE: drivers/isdn/mISDN/dsp_tones.c:548:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6148: FILE: drivers/isdn/mISDN/dsp_tones.c:550:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6156: FILE: include/linux/mISDNdsp.h:1:
+#ifndef __mISDNdsp_H__

CHECK:CAMELCASE: Avoid CamelCase: <__mISDNdsp_H__>
#6156: FILE: include/linux/mISDNdsp.h:1:
+#ifndef __mISDNdsp_H__

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6176: FILE: include/linux/mISDNdsp.h:21:
+extern int  mISDN_dsp_element_register(struct mISDN_dsp_element *elem);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6177: FILE: include/linux/mISDNdsp.h:22:
+extern void mISDN_dsp_element_unregister(struct mISDN_dsp_element *elem);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000249182.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 372 warnings, 485 checks, 6038 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000249182.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
