WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
Move generic skbuff stuff from XFRM code to generic code so that AF_RXRPC can

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#32: 
Signed-Off-By: David Howells <dhowells@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#50: FILE: include/linux/skbuff.h:1485:
+extern int skb_to_sgvec(struct sk_buff *skb, struct scatterlist *sg, int offset, int len);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#51: FILE: include/linux/skbuff.h:1486:
+extern int skb_cow_data(struct sk_buff *skb, int tailbits, struct sk_buff **trailer);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#85: FILE: net/core/skbuff.c:2064:
+/*
+ * fill a scatter-gather list with pointers into a part of a socket buffer

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#102: FILE: net/core/skbuff.c:2081:
+		if ((len -= copy) == 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#113: FILE: net/core/skbuff.c:2092:
+		if ((copy = end - offset) > 0) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#119: FILE: net/core/skbuff.c:2098:
+			sg[elt].offset = frag->page_offset+offset-start;
 			                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#119: FILE: net/core/skbuff.c:2098:
+			sg[elt].offset = frag->page_offset+offset-start;
 			                                         ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#122: FILE: net/core/skbuff.c:2101:
+			if (!(len -= copy))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#138: FILE: net/core/skbuff.c:2117:
+			if ((copy = end - offset) > 0) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#141: FILE: net/core/skbuff.c:2120:
+				elt += skb_to_sgvec(list, sg+elt, offset - start, copy);
 				                            ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#142: FILE: net/core/skbuff.c:2121:
+				if ((len -= copy) == 0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#149: FILE: net/core/skbuff.c:2128:
+	BUG_ON(len);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#154: FILE: net/core/skbuff.c:2133:
+/*
+ * Check that skb data bits are writable. If they are not, copy data

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#172: FILE: net/core/skbuff.c:2151:
+	    __pskb_pull_tail(skb, skb_pagelen(skb)-skb_headlen(skb)) == NULL)
 	                                          ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!__pskb_pull_tail"
#172: FILE: net/core/skbuff.c:2151:
+	    __pskb_pull_tail(skb, skb_pagelen(skb)-skb_headlen(skb)) == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#180: FILE: net/core/skbuff.c:2159:
+		 * space, 128 bytes is fair. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#183: FILE: net/core/skbuff.c:2162:
+		    pskb_expand_head(skb, 0, tailbits-skb_tailroom(skb)+128, GFP_ATOMIC))
 		                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#183: FILE: net/core/skbuff.c:2162:
+		    pskb_expand_head(skb, 0, tailbits-skb_tailroom(skb)+128, GFP_ATOMIC))
 		                                                       ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#202: FILE: net/core/skbuff.c:2181:
+		 * after it. */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb1->next"
#209: FILE: net/core/skbuff.c:2188:
+		if (skb1->next == NULL && tailbits) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb2"
#231: FILE: net/core/skbuff.c:2210:
+			if (unlikely(skb2 == NULL))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#238: FILE: net/core/skbuff.c:2217:
+			 * OK, link new skb, drop old one */

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#261: FILE: net/core/skbuff.c:2267:
+EXPORT_SYMBOL_GPL(skb_to_sgvec);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#262: FILE: net/core/skbuff.c:2268:
+EXPORT_SYMBOL_GPL(skb_cow_data);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000458472.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 10 warnings, 11 checks, 380 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000458472.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
