WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#111: 
---------------------------------------------------------------------------------

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: arch/i386/mach-es7000/es7000plat.c:284:
+       es7000_sw_apic();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: arch/i386/mach-es7000/es7000plat.c:285:
+       return;$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#179: FILE: arch/i386/mach-generic/es7000.c:29:
+extern void enable_apic_mode(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#192: FILE: include/asm-i386/mach-es7000/mach_apic.h:202:
+extern void enable_apic_mode(void);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:36:
+       unsigned long oem_addr;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#210: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:37:
+       unsigned long oem_addr;
+       if (!find_unisys_acpi_oem_table(&oem_addr)) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:37:
+       if (!find_unisys_acpi_oem_table(&oem_addr)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#210: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:37:
+       if (!find_unisys_acpi_oem_table(&oem_addr)) {
+               if (es7000_check_dsdt())

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:38:
+               if (es7000_check_dsdt())$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:38:
+               if (es7000_check_dsdt())$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#211: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:38:
+               if (es7000_check_dsdt())
+                       return parse_unisys_oem((char *)oem_addr);

CHECK:BRACES: braces {} should be used on all arms of this statement
#211: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:38:
+               if (es7000_check_dsdt())
[...]
+               else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:39:
+                       return parse_unisys_oem((char *)oem_addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:39:
+                       return parse_unisys_oem((char *)oem_addr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:40:
+               else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:40:
+               else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#213: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:40:
+               else {
+                       setup_unisys();

CHECK:BRACES: Unbalanced braces around else statement
#213: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:40:
+               else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:41:
+                       setup_unisys();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:41:
+                       setup_unisys();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:42:
+                       return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:42:
+                       return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:43:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:43:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:44:
+       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:48:
+               char *productid)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#221: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:48:
+static __init int mps_oem_check(struct mp_config_table *mpc, char *oem,
+               char *productid)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:48:
+               char *productid)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:50:
+       if (mpc->mpc_oemptr) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#223: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:50:
+       if (mpc->mpc_oemptr) {
+               struct mp_config_oemtable *oem_table =

ERROR:CODE_INDENT: code indent should use tabs where possible
#224: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:51:
+               struct mp_config_oemtable *oem_table =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:51:
+               struct mp_config_oemtable *oem_table =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:52:
+                       (struct mp_config_oemtable *)mpc->mpc_oemptr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:52:
+                       (struct mp_config_oemtable *)mpc->mpc_oemptr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:53:
+               if (!strncmp(oem, "UNISYS", 6))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:53:
+               if (!strncmp(oem, "UNISYS", 6))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#226: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:53:
+               if (!strncmp(oem, "UNISYS", 6))
+                       return parse_unisys_oem((char *)oem_table);

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:54:
+                       return parse_unisys_oem((char *)oem_table);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:54:
+                       return parse_unisys_oem((char *)oem_table);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:55:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:56:
+       return 0;$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000417040.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 11 errors, 27 warnings, 4 checks, 93 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000417040.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
