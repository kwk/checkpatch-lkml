WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#56: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#61: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:1:
+/* Industrialio test ring buffer for lis3l02dq

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#95: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:35:
+ * library */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:CAMELCASE: Avoid CamelCase: <nameFile>
#101: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:41:
+	FILE *nameFile;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Stat>
#107: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:47:
+	struct stat Stat;

WARNING:LINE_SPACING: Missing a blank line after declarations
#108: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:48:
+	struct stat Stat;
+	pos = sprintf(temp, "%s", iio_dir);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dp"
#111: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:51:
+	if (dp == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ent"
#115: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:55:
+	while (ent = readdir(dp), ent != NULL) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#123: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:63:
+				pos2 = pos + sprintf(temp+pos, "%s/",
 				                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#125: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:65:
+				sprintf(temp+pos2, "name");
 				            ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#146: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:86:
+
+			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <RingLength>
#151: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:91:
+int RingLength = 100;

CHECK:CAMELCASE: Avoid CamelCase: <NumVals>
#152: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:92:
+int NumVals = 3;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#157: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:97:
+	uint16_t tempx, tempy, tempz;

CHECK:CAMELCASE: Avoid CamelCase: <BaseDirectoryName>
#176: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:116:
+	char *BaseDirectoryName;

CHECK:BRACES: braces {} should be used on all arms of this statement
#192: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:132:
+	if (scants && (scanx || scany || scanz))
[...]
+	else if (scants)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#196: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:136:
+	else {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#204: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:144:
+	data = malloc(datum_size*RingLength);
 	                        ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!BaseDirectoryName"
#207: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:147:
+	if (BaseDirectoryName == NULL) {

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#208: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:148:
+		printf("Failed to find the %s \n", device_name);

WARNING:TYPO_SPELLING: 'intializing' may be misspelled - perhaps 'initializing'?
#213: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:153:
+	 * appropriate values before intializing the ring.
 	                             ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sysfsfp"
#218: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:158:
+	if (sysfsfp == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sysfsfp"
#227: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:167:
+	if (sysfsfp == NULL) {

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#228: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:168:
+		printf("failed to open minor stuff %s \n", temp);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sysfsfp"
#238: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:178:
+	if (sysfsfp == NULL) {

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#239: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:179:
+		printf("failed to open minor stuff \n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sysfsfp"
#251: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:191:
+		if (sysfsfp == NULL) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#259: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:199:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sysfsfp"
#265: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:205:
+		if (sysfsfp == NULL) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#273: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:213:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sysfsfp"
#279: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:219:
+		if (sysfsfp == NULL) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#287: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:227:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sysfsfp"
#293: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:233:
+		if (sysfsfp == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ringcont"
#307: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:247:
+		if (ringcont == NULL) {

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#308: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:248:
+			printf("Failed to open the rb control file \n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fp_ev"
#329: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:269:
+	if (fp_ev == NULL) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#330: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:270:
+	if (fp_ev == NULL) {
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#344: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:284:
+			toread = RingLength*3/4;
 			                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#344: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:284:
+			toread = RingLength*3/4;
 			                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#347: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:287:
+			toread = RingLength/2;
 			                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#352: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:292:
+		read_size = read(fp, (char *)(data), toread*(datum_size));
 		                                           ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#354: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:294:
+			printf("nothing available \n");

WARNING:TYPO_SPELLING: 'recieved' may be misspelled - perhaps 'received'?
#355: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:295:
+		/* Print out the first 10% of the values recieved from the rb*/
 		                                         ^^^^^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#356: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:296:
+		for (i = 0; i < (read_size  / datum_size)*0.1; i++) {
 		                                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#361: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:301:
+				       *((__s16 *)(data + i*(datum_size))
 				                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#365: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:305:
+				       *((__s16 *)(data + i*(datum_size))
 				                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#369: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:309:
+				       *((__s16 *)(data + i*(datum_size))
 				                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#373: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:313:
+				       *((__s64 *)(data + i*(datum_size))
 				                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#374: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:314:
+					 + ((k+3)/4)));
 					      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#374: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:314:
+					 + ((k+3)/4)));
 					         ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#377: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:317:
+
+		}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#379: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:319:
+
+	}

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#384: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:324:
+	{
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ringcont"
#387: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:327:
+		if (ringcont == NULL) {

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#388: FILE: Documentation/industrialio/TestRingLIS3L02DQ.c:328:
+			printf("Failed to open the rb control file \n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000197638.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 12 warnings, 43 checks, 340 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000197638.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
