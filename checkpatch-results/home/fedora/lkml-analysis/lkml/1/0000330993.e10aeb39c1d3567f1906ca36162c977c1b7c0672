ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#73: FILE: include/linux/kgdb.h:12:
ny

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#98: FILE: include/linux/kgdb.h:46:
+	KGDB_UNINITIALIZED =3D 0,
 	                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#111: FILE: include/linux/kgdb.h:54:
+	BP_BREAKPOINT =3D 0,
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#123: FILE: include/linux/kgdb.h:61:
+	BP_UNDEFINED =3D 0,
 	             ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#162: FILE: include/linux/kgdb.h:102:
+void pt_regs_to_gdb_regs(unsigned long *gdb_regs, struct pt_regs *regs);=
                                                                        ^

ERROR:SPACING: spaces required around that '=' (ctx:OxE)
#162: FILE: include/linux/kgdb.h:102:
+void pt_regs_to_gdb_regs(unsigned long *gdb_regs, struct pt_regs *regs);=
                                                                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#179: FILE: include/linux/kgdb.h:118:
+void sleeping_thread_to_gdb_regs(unsigned long *gdb_regs,
=20

ERROR:SPACING: space required after that ';' (ctx:VxO)
#191: FILE: include/linux/kgdb.h:127:
+void gdb_regs_to_pt_regs(unsigned long *gdb_regs, struct pt_regs *regs);=
                                                                        ^

ERROR:SPACING: spaces required around that '=' (ctx:OxE)
#191: FILE: include/linux/kgdb.h:127:
+void gdb_regs_to_pt_regs(unsigned long *gdb_regs, struct pt_regs *regs);=
                                                                         ^

WARNING:CONST_STRUCT: struct kgdb_io should normally be const
#259: FILE: include/linux/kgdb.h:268:
+int kgdb_register_io_module(struct kgdb_io *local_kgdb_io_ops);

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct kgdb_io should normally be const
#260: FILE: include/linux/kgdb.h:269:
+void kgdb_unregister_io_module(struct kgdb_io *local_kgdb_io_ops);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#266: FILE: include/linux/kgdb.h:272:
+void __init kgdb8250_add_platform_port(int i,
 	struct plat_serial8250_port *serial_req);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#267: FILE: include/linux/kgdb.h:272:
+void __init kgdb8250_add_platform_port(int i,
=20

WARNING:CONST_STRUCT: struct kgdb_io should normally be const
#351: FILE: kernel/kgdb.c:100:
+static struct kgdb_io kgdb_io_ops_prev[KGDB_MAX_IO_HANDLERS];

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#402: FILE: kernel/kgdb.c:653:
+	cpu =3D raw_smp_processor_id();
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#403: FILE: kernel/kgdb.c:654:
+	kgdb_info[cpu].debuggerinfo =3D regs;
 	                            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#404: FILE: kernel/kgdb.c:655:
+	kgdb_info[cpu].task =3D current;
 	                    ^

WARNING:TYPO_SPELLING: 'gaurd' may be misspelled - perhaps 'guard'?
#410: FILE: kernel/kgdb.c:658:
+	 * gaurd in case the master CPU had not been selected if
 	   ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#421: FILE: kernel/kgdb.c:665:
+	while (!atomic_read(&cpu_in_debugger[atomic_read(&debugger_active) - 1]=
 	                                                                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#436: FILE: kernel/kgdb.c:672:
+	kgdb_info[cpu].debuggerinfo =3D NULL;
 	                            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#437: FILE: kernel/kgdb.c:673:
+	kgdb_info[cpu].task =3D NULL;
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#450: FILE: kernel/kgdb.c:681:
+	kgdb_softlock_skip[cpu] =3D 1;
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#460: FILE: kernel/kgdb.c:734:
+	for (i =3D 0; i < KGDB_MAX_BREAKPOINTS; i++) {
 	       ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#461: FILE: kernel/kgdb.c:735:
+		if (kgdb_break[i].state !=3D BP_SET)
 		                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#470: FILE: kernel/kgdb.c:751:
+		kgdb_break[i].state =3D BP_ACTIVE;
 		                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#480: FILE: kernel/kgdb.c:764:
+	for (i =3D 0; i < KGDB_MAX_BREAKPOINTS; i++) {
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#481: FILE: kernel/kgdb.c:765:
+		if ((kgdb_break[i].state =3D=3D BP_SET) &&
 		                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#481: FILE: kernel/kgdb.c:765:
+		if ((kgdb_break[i].state =3D=3D BP_SET) &&
 		                            ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#481: FILE: kernel/kgdb.c:765:
+		if ((kgdb_break[i].state =3D=3D BP_SET) &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#482: FILE: kernel/kgdb.c:766:
+		if ((kgdb_break[i].state =3D=3D BP_SET) &&
 			(kgdb_break[i].bpt_addr =3D=3D addr))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#487: FILE: kernel/kgdb.c:769:
+	for (i =3D 0; i < KGDB_MAX_BREAKPOINTS; i++) {
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#488: FILE: kernel/kgdb.c:770:
+		if (kgdb_break[i].state =3D=3D BP_REMOVED &&
 		                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#488: FILE: kernel/kgdb.c:770:
+		if (kgdb_break[i].state =3D=3D BP_REMOVED &&
 		                           ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#488: FILE: kernel/kgdb.c:770:
+		if (kgdb_break[i].state =3D=3D BP_REMOVED &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#489: FILE: kernel/kgdb.c:771:
+		if (kgdb_break[i].state =3D=3D BP_REMOVED &&
 				kgdb_break[i].bpt_addr =3D=3D addr) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#498: FILE: kernel/kgdb.c:777:
+		for (i =3D 0; i < KGDB_MAX_BREAKPOINTS; i++) {
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#499: FILE: kernel/kgdb.c:778:
+			if (kgdb_break[i].state =3D=3D BP_UNDEFINED) {
 			                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#499: FILE: kernel/kgdb.c:778:
+			if (kgdb_break[i].state =3D=3D BP_UNDEFINED) {
 			                           ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#499: FILE: kernel/kgdb.c:778:
+			if (kgdb_break[i].state =3D=3D BP_UNDEFINED) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#509: FILE: kernel/kgdb.c:787:
+	kgdb_break[breakno].state =3D BP_SET;
 	                          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#510: FILE: kernel/kgdb.c:788:
+	kgdb_break[breakno].type =3D BP_BREAKPOINT;
 	                         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#520: FILE: kernel/kgdb.c:800:
+	for (i =3D 0; i < KGDB_MAX_BREAKPOINTS; i++) {
 	       ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#521: FILE: kernel/kgdb.c:801:
+		if (kgdb_break[i].state !=3D BP_ACTIVE)
 		                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#530: FILE: kernel/kgdb.c:816:
+		kgdb_break[i].state =3D BP_SET;
 		                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#540: FILE: kernel/kgdb.c:824:
+	for (i =3D 0; i < KGDB_MAX_BREAKPOINTS; i++) {
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#541: FILE: kernel/kgdb.c:825:
+		if ((kgdb_break[i].state =3D=3D BP_SET) &&
 		                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#541: FILE: kernel/kgdb.c:825:
+		if ((kgdb_break[i].state =3D=3D BP_SET) &&
 		                            ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#541: FILE: kernel/kgdb.c:825:
+		if ((kgdb_break[i].state =3D=3D BP_SET) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#542: FILE: kernel/kgdb.c:826:
+		if ((kgdb_break[i].state =3D=3D BP_SET) &&
 			(kgdb_break[i].bpt_addr =3D=3D addr)) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#544: FILE: kernel/kgdb.c:827:
+			kgdb_break[i].state =3D BP_REMOVED;
 			                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#554: FILE: kernel/kgdb.c:838:
+	for (i =3D 0; i < KGDB_MAX_BREAKPOINTS; i++) {
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#555: FILE: kernel/kgdb.c:839:
+		if ((kgdb_break[i].state =3D=3D BP_REMOVED) &&
 		                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#555: FILE: kernel/kgdb.c:839:
+		if ((kgdb_break[i].state =3D=3D BP_REMOVED) &&
 		                            ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#555: FILE: kernel/kgdb.c:839:
+		if ((kgdb_break[i].state =3D=3D BP_REMOVED) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#556: FILE: kernel/kgdb.c:840:
+		if ((kgdb_break[i].state =3D=3D BP_REMOVED) &&
 			(kgdb_break[i].bpt_addr =3D=3D addr))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#565: FILE: kernel/kgdb.c:852:
+	for (i =3D 0; i < KGDB_MAX_BREAKPOINTS; i++) {
 	       ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#566: FILE: kernel/kgdb.c:853:
+		if (kgdb_break[i].state !=3D BP_SET)
 		                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#574: FILE: kernel/kgdb.c:860:
+		kgdb_break[i].state =3D BP_REMOVED;
 		                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#583: FILE: kernel/kgdb.c:968:
+		thread =3D kgdb_info[ks->cpu].task;
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#618: FILE: kernel/kgdb.c:1378:
+	kgdb_usethread =3D kgdb_info[ks->cpu].task;
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#619: FILE: kernel/kgdb.c:1379:
+	ks->kgdb_usethreadid =3D shadow_pid(kgdb_info[ks->cpu].task->pid);
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#634: FILE: kernel/kgdb.c:1537:
+	ks->cpu =3D raw_smp_processor_id();
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#643: FILE: kernel/kgdb.c:1557:
+	cpu =3D raw_smp_processor_id();
 	    ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#661: FILE: kernel/kgdb.c:1576:
+				atomic_read(&cpu_doing_single_step) !=3D cpu)
 				                                    ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#670: FILE: kernel/kgdb.c:1587:
+	    atomic_read(&cpu_doing_single_step) !=3D cpu) {
 	                                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#675: FILE: kernel/kgdb.c:1591:
+		kgdb_softlock_skip[cpu] =3D 1;
 		                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#685: FILE: kernel/kgdb.c:1610:
+	kgdb_info[ks->cpu].debuggerinfo =3D ks->linux_regs;
 	                                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#686: FILE: kernel/kgdb.c:1611:
+	kgdb_info[ks->cpu].task =3D current;
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#717: FILE: kernel/kgdb.c:1637:
+		for (n =3D 0; n < NR_CPUS; n++) {
 		       ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#717: FILE: kernel/kgdb.c:1637:
+		for (n =3D 0; n < NR_CPUS; n++) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#729: FILE: kernel/kgdb.c:1662:
+	kgdb_info[ks->cpu].debuggerinfo =3D NULL;
 	                                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#730: FILE: kernel/kgdb.c:1663:
+	kgdb_info[ks->cpu].task =3D NULL;
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#771: FILE: kernel/kgdb.c:1700:
+	kgdb_softlock_skip[ks->cpu] =3D 1;
 	                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#781: FILE: kernel/kgdb.c:1725:
+	if (!atomic_read(&cpu_in_debugger[cpu]) &&
 		atomic_read(&debugger_active) !=3D (cpu + 1)) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#793: FILE: kernel/kgdb.c:1787:
+	for (i =3D 0; i < KGDB_MAX_BREAKPOINTS; i++)
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#794: FILE: kernel/kgdb.c:1788:
+		kgdb_break[i].state =3D BP_UNDEFINED;
 		                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#803: FILE: kernel/kgdb.c:1801:
+	kgdb_state =3D KGDB_FULLY_INITIALIZED;
 	           ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#812: FILE: kernel/kgdb.c:1842:
+	if (kgdb_io_handler_cnt >=3D KGDB_MAX_IO_HANDLERS) {
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#856: FILE: kernel/kgdb.c:1943:
+		kgdb_state =3D KGDB_SEMI_INITIALIZED;
 		           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#865: FILE: kernel/kgdb.c:1953:
+		kgdb_state =3D KGDB_SEMI_INITIALIZED;
 		           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#878: FILE: kernel/kgdb.c:1977:
+	int need_break =3D (kgdb_state =3D=3D KGDB_SEMI_INITIALIZED);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#878: FILE: kernel/kgdb.c:1977:
+	int need_break =3D (kgdb_state =3D=3D KGDB_SEMI_INITIALIZED);
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#878: FILE: kernel/kgdb.c:1977:
+	int need_break =3D (kgdb_state =3D=3D KGDB_SEMI_INITIALIZED);
 	                               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#878: FILE: kernel/kgdb.c:1977:
+	int need_break =3D (kgdb_state =3D=3D KGDB_SEMI_INITIALIZED);
 	                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#885: FILE: kernel/kgdb.c:1982:
+	if (kgdb_state =3D=3D KGDB_UNINITIALIZED)
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#885: FILE: kernel/kgdb.c:1982:
+	if (kgdb_state =3D=3D KGDB_UNINITIALIZED)
 	                  ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#885: FILE: kernel/kgdb.c:1982:
+	if (kgdb_state =3D=3D KGDB_UNINITIALIZED)

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#889: FILE: kernel/kgdb.c:1984:
+	if (kgdb_state !=3D KGDB_FULLY_INITIALIZED) {
 	               ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#907: FILE: kernel/kgdb.c:2099:
+	if (kgdb_state !=3D KGDB_UNINITIALIZED)
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#913: FILE: kernel/kgdb.c:2103:
+	if (kgdb_state =3D=3D KGDB_FULLY_INITIALIZED)
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#913: FILE: kernel/kgdb.c:2103:
+	if (kgdb_state =3D=3D KGDB_FULLY_INITIALIZED)
 	                  ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#913: FILE: kernel/kgdb.c:2103:
+	if (kgdb_state =3D=3D KGDB_FULLY_INITIALIZED)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#937: FILE: arch/x86/kernel/kgdb.c:124:
 }
+void gdb_regs_to_pt_regs(unsigned long *gdb_regs, struct pt_regs *regs)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000330993.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 78 errors, 6 warnings, 9 checks, 833 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000330993.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
