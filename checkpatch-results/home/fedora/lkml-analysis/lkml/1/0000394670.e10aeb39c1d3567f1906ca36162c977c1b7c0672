WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#106: FILE: arch/x86_64/kernel/tsc.c:25:
+	unsigned eax, edx;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#124: FILE: arch/x86_64/kernel/tsc.c:43:
+	alternative_io("cpuid", ASM_NOP2, X86_FEATURE_SYNC_RDTSC,
+			  "=a" (eax), "0" (1) : "ebx","ecx","edx","memory");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#124: FILE: arch/x86_64/kernel/tsc.c:43:
+			  "=a" (eax), "0" (1) : "ebx","ecx","edx","memory");
 			                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#124: FILE: arch/x86_64/kernel/tsc.c:43:
+			  "=a" (eax), "0" (1) : "ebx","ecx","edx","memory");
 			                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#124: FILE: arch/x86_64/kernel/tsc.c:43:
+			  "=a" (eax), "0" (1) : "ebx","ecx","edx","memory");
 			                                         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#200: FILE: include/asm-x86_64/msr.h:16:
+	unsigned long a, d;
+	asm volatile("rdmsr" : "=a" (a), "=d" (d) : "c" (msr));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#211: FILE: include/asm-x86_64/msr.h:23:
+	unsigned long a, d;
+	asm volatile (  "1: rdmsr; xorl %0, %0\n"

ERROR:SPACING: space prohibited after that open parenthesis '('
#211: FILE: include/asm-x86_64/msr.h:23:
+	asm volatile (  "1: rdmsr; xorl %0, %0\n"

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#220: FILE: include/asm-x86_64/msr.h:32:
+			".previous":"=&bDS" (*err), "=a"((a)), "=d"((d))
 			           ^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#221: FILE: include/asm-x86_64/msr.h:33:
+			:"c"(msr), "i"(-EIO), "0"(0));
 			^

ERROR:SPACING: space prohibited after that open parenthesis '('
#228: FILE: include/asm-x86_64/msr.h:40:
+	asm volatile(	"wrmsr"

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#230: FILE: include/asm-x86_64/msr.h:42:
+			: "c" (msr), "a" ((u32)val), "d" ((u32)(val>>32)));
 			                                           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#244: FILE: include/asm-x86_64/msr.h:50:
+	unsigned long ret;
+	asm volatile("2: wrmsr ; xorq %0,%0\n"

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#251: FILE: include/asm-x86_64/msr.h:57:
+^I^I     "   .quad ^I2b,3b\n\t"$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#254: FILE: include/asm-x86_64/msr.h:60:
+		     : "c" (msr), "a" ((u32)val), "d" ((u32)(val>>32)),
 		                                                ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#266: FILE: include/asm-x86_64/msr.h:68:
+	unsigned long low, high;
+	asm volatile("rdtsc" : "=a" (low), "=d" (high));

WARNING:LINE_SPACING: Missing a blank line after declarations
#274: FILE: include/asm-x86_64/msr.h:75:
+	unsigned long low, high;
+	asm volatile ("rdpmc"

WARNING:LINE_SPACING: Missing a blank line after declarations
#346: FILE: include/asm-x86_64/msr.h:96:
+	unsigned long low, high;
+	asm volatile (".byte 0x0f,0x01,0xf9"

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#356: FILE: include/asm-x86_64/msr.h:106:
+#define write_msr(msr, val) ^I^Inative_write_msr(msr, val)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#364: FILE: include/asm-x86_64/msr.h:114:
+#define rdmsr(msr, low, high) ^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#366: FILE: include/asm-x86_64/msr.h:116:
+^Iunsigned long __val = read_msr(msr); ^I\$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#372: FILE: include/asm-x86_64/msr.h:121:
+#define rdmsrl(msr, val)		(val) = read_msr(msr)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#374: FILE: include/asm-x86_64/msr.h:123:
+#define rdmsr_safe(msr, a, d)					\
+({								\
+	int __ret;						\
+	unsigned long __val = read_msr_safe(msr, &__ret);	\
+	(*a) = (u32)(__val);					\
+	(*d) = (u32)(__val >> 32);				\
+	__ret;							\
+})

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'd' may be better as '(d)' to avoid precedence issues
#374: FILE: include/asm-x86_64/msr.h:123:
+#define rdmsr_safe(msr, a, d)					\
+({								\
+	int __ret;						\
+	unsigned long __val = read_msr_safe(msr, &__ret);	\
+	(*a) = (u32)(__val);					\
+	(*d) = (u32)(__val >> 32);				\
+	__ret;							\
+})

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val2' may be better as '(val2)' to avoid precedence issues
#383: FILE: include/asm-x86_64/msr.h:132:
+#define wrmsr(msr, val1, val2)				\
+do {							\
+	unsigned long __val;				\
+	__val = (unsigned long)val2 << 32;		\
+	__val |= val1;					\
+	write_msr(msr, __val);				\
+} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#393: FILE: include/asm-x86_64/msr.h:142:
+#define wrmsr_safe(msr, a, d) \
+	write_msr_safe(msr, a | ( ((u64)d) << 32))

ERROR:SPACING: space prohibited after that open parenthesis '('
#394: FILE: include/asm-x86_64/msr.h:143:
+	write_msr_safe(msr, a | ( ((u64)d) << 32))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#396: FILE: include/asm-x86_64/msr.h:145:
+#define checking_wrmsrl(msr, val) wrmsr_safe(msr, (u32)(val),(u32)((val)>>32))
                                                             ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#396: FILE: include/asm-x86_64/msr.h:145:
+#define checking_wrmsrl(msr, val) wrmsr_safe(msr, (u32)(val),(u32)((val)>>32))
                                                                         ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#396: FILE: include/asm-x86_64/msr.h:145:
+#define checking_wrmsrl(msr, val) wrmsr_safe(msr, (u32)(val),(u32)((val)>>32))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#413: FILE: include/asm-x86_64/msr.h:158:
+#define rdtscl(low) ^I(low) = (u32)read_tsc_reg()$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#413: FILE: include/asm-x86_64/msr.h:158:
+#define rdtscl(low) 	(low) = (u32)read_tsc_reg()

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#415: FILE: include/asm-x86_64/msr.h:160:
+#define rdtscll(val)	(val) = read_tsc_reg()

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#428: FILE: include/asm-x86_64/msr.h:173:
+^Iunsigned long __aux; ^I^I^I^I\$

WARNING:LINE_SPACING: Missing a blank line after declarations
#481: FILE: include/asm-x86_64/msr.h:208:
+	unsigned int eax, ebx, ecx, edx;
+	cpuid(op, &eax, &ebx, &ecx, &edx);

WARNING:LINE_SPACING: Missing a blank line after declarations
#494: FILE: include/asm-x86_64/msr.h:215:
+	unsigned int eax, ebx, ecx, edx;
+	cpuid(op, &eax, &ebx, &ecx, &edx);

WARNING:LINE_SPACING: Missing a blank line after declarations
#507: FILE: include/asm-x86_64/msr.h:222:
+	unsigned int eax, ebx, ecx, edx;
+	cpuid(op, &eax, &ebx, &ecx, &edx);

WARNING:LINE_SPACING: Missing a blank line after declarations
#520: FILE: include/asm-x86_64/msr.h:229:
+	unsigned int eax, ebx, ecx, edx;
+	cpuid(op, &eax, &ebx, &ecx, &edx);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000394670.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 11 errors, 17 warnings, 10 checks, 439 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000394670.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
