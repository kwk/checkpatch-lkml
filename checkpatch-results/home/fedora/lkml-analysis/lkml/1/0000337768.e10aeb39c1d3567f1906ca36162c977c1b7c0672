WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
Do we have a developing standard on how a driver may report to user tools via sysfs what features are supported or not by the driver? In the following I am proposing a 'flags' entry that will reside in the host controllers tree, with a newline separated list of arbitrary ascii named features that indicate whether the combination of driver and controller has support for said feature. Breaking from the one-line output typical of sysfs entries, newline was added to tailor for grep, or simple gets line by line string match within an application. I added one for a compiler time check for existence of debug print output, one for an optional manifest defined enhanced status reporting in the logs, and one for runtime reporting whether the controller and driver supports arrays larger than 2TB to my example below.

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#58: 
--- a/drivers/scsi/aacraid/linit.c      2008-01-11 11:19:11.378159940 -0500

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: drivers/scsi/aacraid/linit.c:793:
+       int len = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: drivers/scsi/aacraid/linit.c:794:
+       struct aac_dev *dev = (struct aac_dev*)class_to_shost(class_dev)->hostdata;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#67: FILE: drivers/scsi/aacraid/linit.c:794:
+       struct aac_dev *dev = (struct aac_dev*)class_to_shost(class_dev)->hostdata;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: drivers/scsi/aacraid/linit.c:796:
+       if (nblank(dprintk(x)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#69: FILE: drivers/scsi/aacraid/linit.c:796:
+       if (nblank(dprintk(x)))
+               len = snprintf(buf, PAGE_SIZE, "dprintk\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#70: FILE: drivers/scsi/aacraid/linit.c:797:
+               len = snprintf(buf, PAGE_SIZE, "dprintk\n");$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: drivers/scsi/aacraid/linit.c:797:
+               len = snprintf(buf, PAGE_SIZE, "dprintk\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#72: FILE: drivers/scsi/aacraid/linit.c:799:
+               len += snprintf(buf + len, PAGE_SIZE - len,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: drivers/scsi/aacraid/linit.c:799:
+               len += snprintf(buf + len, PAGE_SIZE - len,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#73: FILE: drivers/scsi/aacraid/linit.c:800:
+                 "AAC_DETAILED_STATUS_INFO\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: drivers/scsi/aacraid/linit.c:800:
+                 "AAC_DETAILED_STATUS_INFO\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: drivers/scsi/aacraid/linit.c:802:
+       if (dev->raw_io_interface && dev->raw_io_64)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#75: FILE: drivers/scsi/aacraid/linit.c:802:
+       if (dev->raw_io_interface && dev->raw_io_64)
+               len += snprintf(buf + len, PAGE_SIZE - len,

ERROR:CODE_INDENT: code indent should use tabs where possible
#76: FILE: drivers/scsi/aacraid/linit.c:803:
+               len += snprintf(buf + len, PAGE_SIZE - len,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: drivers/scsi/aacraid/linit.c:803:
+               len += snprintf(buf + len, PAGE_SIZE - len,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#77: FILE: drivers/scsi/aacraid/linit.c:804:
+                 "SAI_READ_CAPACITY_16\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: drivers/scsi/aacraid/linit.c:804:
+                 "SAI_READ_CAPACITY_16\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: drivers/scsi/aacraid/linit.c:805:
+       return len;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#88: FILE: drivers/scsi/aacraid/linit.c:917:
 };
+static struct class_device_attribute aac_flags = {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: drivers/scsi/aacraid/linit.c:918:
+       .attr = {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: drivers/scsi/aacraid/linit.c:919:
+               .name = "flags",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: drivers/scsi/aacraid/linit.c:919:
+               .name = "flags",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#91: FILE: drivers/scsi/aacraid/linit.c:920:
+               .mode = S_IRUGO,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: drivers/scsi/aacraid/linit.c:920:
+               .mode = S_IRUGO,$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#91: FILE: drivers/scsi/aacraid/linit.c:920:
+               .mode = S_IRUGO,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: drivers/scsi/aacraid/linit.c:921:
+       },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: drivers/scsi/aacraid/linit.c:922:
+       .show = aac_show_flags,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: drivers/scsi/aacraid/linit.c:978:
+       &aac_flags,$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000337768.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 20 warnings, 1 checks, 43 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000337768.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
