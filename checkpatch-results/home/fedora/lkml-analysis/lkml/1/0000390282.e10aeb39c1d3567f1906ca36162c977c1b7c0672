WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#35: FILE: Makefile:4:
+EXTRAVERSION = .16
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#92: FILE: arch/i386/oprofile/nmi_int.c:213:
+	for_each_possible_cpu (cpu) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'fpr' may be misspelled - perhaps 'for'?
#109: FILE: arch/powerpc/kernel/signal_64.c:182:
+	 * This has to be done before copying stuff into current->thread.fpr/vr
 	                                                                 ^^^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 24)
#134: FILE: arch/x86_64/mm/init.c:74:
                for (i = 0; i < pgdat->node_spanned_pages; ++i) {
+			if (!pfn_valid(pgdat->node_start_pfn + i))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#148: FILE: arch/x86_64/mm/init.c:775:
+			SMP_CACHE_BYTES, (4UL*1024*1024*1024), 0);
 			                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#148: FILE: arch/x86_64/mm/init.c:775:
+			SMP_CACHE_BYTES, (4UL*1024*1024*1024), 0);
 			                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#148: FILE: arch/x86_64/mm/init.c:775:
+			SMP_CACHE_BYTES, (4UL*1024*1024*1024), 0);
 			                               ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#180: FILE: drivers/md/bitmap.c:266:
 		if (test_bit(In_sync, &rdev->flags)
+		    && !test_bit(Faulty, &rdev->flags)) {

CHECK:CAMELCASE: Avoid CamelCase: <Faulty>
#180: FILE: drivers/md/bitmap.c:266:
+		    && !test_bit(Faulty, &rdev->flags)) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LINE_SPACING: Missing a blank line after declarations
#182: FILE: drivers/md/bitmap.c:268:
+			int size = PAGE_SIZE;
+			if (page->index == bitmap->file_pages-1)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#182: FILE: drivers/md/bitmap.c:268:
+			if (page->index == bitmap->file_pages-1)
 			                                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#187: FILE: drivers/md/bitmap.c:272:
+				       (rdev->sb_offset<<1) + bitmap->offset
 				                       ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#323: FILE: drivers/md/dm-crypt.c:631:
+		 * before we kick off the request */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#330: FILE: drivers/md/dm-crypt.c:638:
+		 * may be gone already. */

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#335: FILE: drivers/md/dm-crypt.c:642:
+			congestion_wait(WRITE, HZ/100);
 			                         ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#395: FILE: drivers/md/raid1.c:1244:
+				if (test_bit(BIO_UPTODATE, &sbio->bi_flags)) {
[...]
+				} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#398: FILE: drivers/md/raid1.c:1247:
+						struct page *p, *s;
+						p = pbio->bi_io_vec[j].bv_page;

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#400: FILE: drivers/md/raid1.c:1249:
+						if (memcmp(page_address(p),

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

CHECK:BRACES: Unbalanced braces around else statement
#405: FILE: drivers/md/raid1.c:1254:
+				} else

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#467: FILE: drivers/net/e1000/e1000_main.c:1168:
+	if ((err = register_netdev(netdev)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#521: FILE: include/linux/bootmem.h:62:
+extern void *alloc_bootmem_high_node(pg_data_t *pgdat, unsigned long size);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->euid != p->euid'
#661: FILE: kernel/futex.c:394:
+	if (!p || ((current->euid != p->euid) && (current->euid != p->uid)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->euid != p->uid'
#661: FILE: kernel/futex.c:394:
+	if (!p || ((current->euid != p->euid) && (current->euid != p->uid)))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#901: FILE: kernel/futex.c:1364:
+				printk(KERN_ERR "futex_lock_pi: ret = %d "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'futex_lock_pi', this function's name, in a string
#901: FILE: kernel/futex.c:1364:
+				printk(KERN_ERR "futex_lock_pi: ret = %d "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#902: FILE: kernel/futex.c:1365:
+				printk(KERN_ERR "futex_lock_pi: ret = %d "
+				       "pi-mutex: %p pi-state %p\n", ret,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#1120: FILE: mm/sparse.c:212:
+__attribute__((weak))

ERROR:CODE_INDENT: code indent should use tabs where possible
#1133: FILE: mm/sparse.c:228:
+  ^Imap = alloc_bootmem_high_node(NODE_DATA(nid),$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1133: FILE: mm/sparse.c:228:
+  ^Imap = alloc_bootmem_high_node(NODE_DATA(nid),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1133: FILE: mm/sparse.c:228:
+  ^Imap = alloc_bootmem_high_node(NODE_DATA(nid),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1134: FILE: mm/sparse.c:229:
+                       sizeof(struct page) * PAGES_PER_SECTION);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1134: FILE: mm/sparse.c:229:
+  	map = alloc_bootmem_high_node(NODE_DATA(nid),
+                       sizeof(struct page) * PAGES_PER_SECTION);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1134: FILE: mm/sparse.c:229:
+                       sizeof(struct page) * PAGES_PER_SECTION);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000390282.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 17 warnings, 14 checks, 945 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000390282.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
