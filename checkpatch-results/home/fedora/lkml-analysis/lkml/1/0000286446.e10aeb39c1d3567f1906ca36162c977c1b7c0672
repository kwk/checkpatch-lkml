WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#41: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#46: FILE: include/linux/regulator/driver.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#75: FILE: include/linux/regulator/driver.h:30:
+struct regulator_ops {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#77: FILE: include/linux/regulator/driver.h:32:
+	int (*set_voltage) (struct regulator_dev *, int min_uV, int max_uV);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct regulator_dev *' should also have an identifier name
#77: FILE: include/linux/regulator/driver.h:32:
+	int (*set_voltage) (struct regulator_dev *, int min_uV, int max_uV);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: Unnecessary space before function pointer arguments
#78: FILE: include/linux/regulator/driver.h:33:
+	int (*get_voltage) (struct regulator_dev *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct regulator_dev *' should also have an identifier name
#78: FILE: include/linux/regulator/driver.h:33:
+	int (*get_voltage) (struct regulator_dev *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#81: FILE: include/linux/regulator/driver.h:36:
+	int (*set_current_limit) (struct regulator_dev *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct regulator_dev *' should also have an identifier name
#81: FILE: include/linux/regulator/driver.h:36:
+	int (*set_current_limit) (struct regulator_dev *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#82: FILE: include/linux/regulator/driver.h:37:
+	int (*set_current_limit) (struct regulator_dev *,
+				 int min_uA, int max_uA);

WARNING:SPACING: Unnecessary space before function pointer arguments
#83: FILE: include/linux/regulator/driver.h:38:
+	int (*get_current_limit) (struct regulator_dev *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct regulator_dev *' should also have an identifier name
#83: FILE: include/linux/regulator/driver.h:38:
+	int (*get_current_limit) (struct regulator_dev *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#86: FILE: include/linux/regulator/driver.h:41:
+	int (*enable) (struct regulator_dev *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct regulator_dev *' should also have an identifier name
#86: FILE: include/linux/regulator/driver.h:41:
+	int (*enable) (struct regulator_dev *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#87: FILE: include/linux/regulator/driver.h:42:
+	int (*disable) (struct regulator_dev *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct regulator_dev *' should also have an identifier name
#87: FILE: include/linux/regulator/driver.h:42:
+	int (*disable) (struct regulator_dev *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#88: FILE: include/linux/regulator/driver.h:43:
+	int (*is_enabled) (struct regulator_dev *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct regulator_dev *' should also have an identifier name
#88: FILE: include/linux/regulator/driver.h:43:
+	int (*is_enabled) (struct regulator_dev *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#91: FILE: include/linux/regulator/driver.h:46:
+	int (*set_mode) (struct regulator_dev *, unsigned int mode);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct regulator_dev *' should also have an identifier name
#91: FILE: include/linux/regulator/driver.h:46:
+	int (*set_mode) (struct regulator_dev *, unsigned int mode);

WARNING:SPACING: Unnecessary space before function pointer arguments
#92: FILE: include/linux/regulator/driver.h:47:
+	unsigned int (*get_mode) (struct regulator_dev *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct regulator_dev *' should also have an identifier name
#92: FILE: include/linux/regulator/driver.h:47:
+	unsigned int (*get_mode) (struct regulator_dev *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#95: FILE: include/linux/regulator/driver.h:50:
+	unsigned int (*get_optimum_mode) (struct regulator_dev *, int input_uV,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct regulator_dev *' should also have an identifier name
#95: FILE: include/linux/regulator/driver.h:50:
+	unsigned int (*get_optimum_mode) (struct regulator_dev *, int input_uV,

WARNING:CONST_STRUCT: struct regulator_ops should normally be const
#114: FILE: include/linux/regulator/driver.h:69:
+	struct regulator_ops *ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#120: FILE: include/linux/regulator/driver.h:75:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: include/linux/regulator/driver.h:77:
+struct regulator_dev *regulator_register(struct regulator_desc *regulator_desc,
+					  void *reg_data);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000286446.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 23 warnings, 4 checks, 86 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000286446.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
