WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#52: FILE: fs/dazukofs/dazukofs_fs.h:1:
+/* dazukofs: access control stackable filesystem

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#53: FILE: fs/dazukofs/dazukofs_fs.h:2:
+/* dazukofs: access control stackable filesystem
+

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#71: FILE: fs/dazukofs/dazukofs_fs.h:20:
+   along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#72: FILE: fs/dazukofs/dazukofs_fs.h:21:
+   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.$

WARNING:CONST_STRUCT: struct file_operations should normally be const
#80: FILE: fs/dazukofs/dazukofs_fs.h:29:
+extern struct file_operations dazukofs_main_fops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct dentry_operations should normally be const
#82: FILE: fs/dazukofs/dazukofs_fs.h:31:
+extern struct dentry_operations dazukofs_dops;

WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#83: FILE: fs/dazukofs/dazukofs_fs.h:32:
+extern struct address_space_operations dazukofs_aops;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#85: FILE: fs/dazukofs/dazukofs_fs.h:34:
+extern int dazukofs_interpose(struct dentry *lower_dentry,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: fs/dazukofs/dazukofs_fs.h:80:
+       ((struct dazukofs_sb_info *)upper_sb->s_fs_info)->lower_sb = lower_sb;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#220: FILE: fs/dazukofs/dentry.c:1:
+/* dazukofs: access control stackable filesystem

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#221: FILE: fs/dazukofs/dentry.c:2:
+/* dazukofs: access control stackable filesystem
+

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#239: FILE: fs/dazukofs/dentry.c:20:
+   along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#240: FILE: fs/dazukofs/dentry.c:21:
+   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#254: FILE: fs/dazukofs/dentry.c:35:
+ * @nd: nameidata associated with dentry
     ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#270: FILE: fs/dazukofs/dentry.c:51:
+static int dazukofs_d_revalidate(struct dentry *dentry, struct nameidata *nd)
                                                                           ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#293: FILE: fs/dazukofs/dentry.c:74:
+	valid = lower_dentry->d_op->d_revalidate(lower_dentry, nd);
 	                                                       ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#372: FILE: fs/dazukofs/dentry.c:153:
+static int dazukofs_d_compare(struct dentry *dentry, struct qstr *a,
+			    struct qstr *b)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#378: FILE: fs/dazukofs/dentry.c:159:
+	    lower_dentry->d_op->d_compare) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#389: FILE: fs/dazukofs/dentry.c:170:
+
+}

WARNING:CONST_STRUCT: struct dentry_operations should normally be const
#397: FILE: fs/dazukofs/dentry.c:178:
+struct dentry_operations dazukofs_dops = {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#408: FILE: fs/dazukofs/super.c:1:
+/* dazukofs: access control stackable filesystem

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#409: FILE: fs/dazukofs/super.c:2:
+/* dazukofs: access control stackable filesystem
+

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#427: FILE: fs/dazukofs/super.c:20:
+   along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#428: FILE: fs/dazukofs/super.c:21:
+   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around inodei->vfs_inode
#455: FILE: fs/dazukofs/super.c:48:
+	return &(inodei->vfs_inode);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#474: FILE: fs/dazukofs/super.c:67:
+	iput(GET_LOWER_INODE(inode));
 	^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#557: FILE: fs/dazukofs/super.c:150:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#562: FILE: fs/dazukofs/super.c:155:
+	memset(&nd, 0, sizeof(struct nameidata));
 	        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#563: FILE: fs/dazukofs/super.c:156:
+	err = path_lookup(dev_name, LOOKUP_FOLLOW | LOOKUP_DIRECTORY, &nd);
 	                                                               ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#567: FILE: fs/dazukofs/super.c:160:
+	lower_root = dget(nd.path.dentry);
 	                  ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#568: FILE: fs/dazukofs/super.c:161:
+	lower_mnt = mntget(nd.path.mnt);
 	                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#593: FILE: fs/dazukofs/super.c:186:
+	path_put(&nd.path);
 	          ^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around inode_info->vfs_inode
#633: FILE: fs/dazukofs/super.c:226:
+	inode_init_once(&(inode_info->vfs_inode));

WARNING:NEEDLESS_IF: kmem_cache_destroy(NULL) is safe and this check is probably not required
#639: FILE: fs/dazukofs/super.c:232:
+	if (dazukofs_inode_info_cachep) {
+		kmem_cache_destroy(dazukofs_inode_info_cachep);

WARNING:NEEDLESS_IF: kmem_cache_destroy(NULL) is safe and this check is probably not required
#644: FILE: fs/dazukofs/super.c:237:
+	if (dazukofs_sb_info_cachep) {
+		kmem_cache_destroy(dazukofs_sb_info_cachep);

WARNING:NEEDLESS_IF: kmem_cache_destroy(NULL) is safe and this check is probably not required
#649: FILE: fs/dazukofs/super.c:242:
+	if (dazukofs_dentry_info_cachep) {
+		kmem_cache_destroy(dazukofs_dentry_info_cachep);

WARNING:NEEDLESS_IF: kmem_cache_destroy(NULL) is safe and this check is probably not required
#654: FILE: fs/dazukofs/super.c:247:
+	if (dazukofs_file_info_cachep) {
+		kmem_cache_destroy(dazukofs_file_info_cachep);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#724: FILE: fs/dazukofs/super.c:317:
+	printk(KERN_INFO "dazukofs: loaded\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#737: FILE: fs/dazukofs/super.c:330:
+	printk(KERN_INFO "dazukofs: unloaded\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#750: FILE: fs/dazukofs/file.c:1:
+/* dazukofs: access control stackable filesystem

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#751: FILE: fs/dazukofs/file.c:2:
+/* dazukofs: access control stackable filesystem
+

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#769: FILE: fs/dazukofs/file.c:20:
+   along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#770: FILE: fs/dazukofs/file.c:21:
+   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around lower_file->f_ra
#791: FILE: fs/dazukofs/file.c:42:
+	memcpy(&(lower_file->f_ra), &(file->f_ra),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around file->f_ra
#791: FILE: fs/dazukofs/file.c:42:
+	memcpy(&(lower_file->f_ra), &(file->f_ra),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#811: FILE: fs/dazukofs/file.c:62:
+static ssize_t dazukofs_read(struct file *file, char *buf, size_t count,
+			   loff_t *ppos)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around file->f_ra
#830: FILE: fs/dazukofs/file.c:81:
+	memcpy(&(file->f_ra), &(lower_file->f_ra),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around lower_file->f_ra
#830: FILE: fs/dazukofs/file.c:81:
+	memcpy(&(file->f_ra), &(lower_file->f_ra),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around file->f_ra
#859: FILE: fs/dazukofs/file.c:110:
+	memcpy(&(file->f_ra), &(lower_file->f_ra),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around lower_file->f_ra
#859: FILE: fs/dazukofs/file.c:110:
+	memcpy(&(file->f_ra), &(lower_file->f_ra),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#929: FILE: fs/dazukofs/file.c:180:
+	SET_FILE_INFO(file, kmem_cache_zalloc(dazukofs_file_info_cachep,
+		      GFP_KERNEL));

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1039: FILE: fs/dazukofs/file.c:290:
+struct file_operations dazukofs_main_fops = {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1095: FILE: fs/dazukofs/inode.c:1:
+/* dazukofs: access control stackable filesystem

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1096: FILE: fs/dazukofs/inode.c:2:
+/* dazukofs: access control stackable filesystem
+

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1114: FILE: fs/dazukofs/inode.c:20:
+   along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1115: FILE: fs/dazukofs/inode.c:21:
+   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.$

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#1127: FILE: fs/dazukofs/inode.c:33:
+static struct inode_operations dazukofs_symlink_iops;

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#1128: FILE: fs/dazukofs/inode.c:34:
+static struct inode_operations dazukofs_dir_iops;

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#1129: FILE: fs/dazukofs/inode.c:35:
+static struct inode_operations dazukofs_main_iops;

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1183: FILE: fs/dazukofs/inode.c:89:
+		iput(lower_inode);
 		^^^^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1193: FILE: fs/dazukofs/inode.c:99:
+		iput(lower_inode);
 		^^^^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1202: FILE: fs/dazukofs/inode.c:108:
+		 * and do not call iput().
 		                   ^^^^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1208: FILE: fs/dazukofs/inode.c:114:
+		iput(lower_inode);
 		^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1252: FILE: fs/dazukofs/inode.c:158:
+				      struct nameidata *nd)
 				                        ^^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1260: FILE: fs/dazukofs/inode.c:166:
+	if ((dentry->d_name.len == 1 && !strcmp(dentry->d_name.name, "."))
+	    || (dentry->d_name.len == 2 &&

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1278: FILE: fs/dazukofs/inode.c:184:
+	BUG_ON(!atomic_read(&lower_dentry->d_count));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1281: FILE: fs/dazukofs/inode.c:187:
+	SET_DENTRY_INFO(dentry, kmem_cache_zalloc(dazukofs_dentry_info_cachep,
+			GFP_KERNEL));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around lower_dentry_parent_inode->i_mutex
#1329: FILE: fs/dazukofs/inode.c:235:
+	mutex_lock_nested(&(lower_dentry_parent_inode->i_mutex),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around lower_dentry_parent_inode->i_mutex
#1343: FILE: fs/dazukofs/inode.c:249:
+	mutex_unlock(&(lower_dentry_parent_inode->i_mutex));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around lower_dentry_parent_inode->i_mutex
#1361: FILE: fs/dazukofs/inode.c:267:
+	mutex_lock_nested(&(lower_dentry_parent_inode->i_mutex),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around lower_dentry_parent_inode->i_mutex
#1376: FILE: fs/dazukofs/inode.c:282:
+	mutex_unlock(&(lower_dentry_parent_inode->i_mutex));

WARNING:TYPO_SPELLING: 'creat' may be misspelled - perhaps 'create'?
#1383: FILE: fs/dazukofs/inode.c:289:
+ * Description: Called by the open(2) and creat(2) system calls. Only
                                           ^^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1390: FILE: fs/dazukofs/inode.c:296:
+			   struct nameidata *nd)
 			                     ^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around lower_dentry_parent_inode->i_mutex
#1400: FILE: fs/dazukofs/inode.c:306:
+	mutex_lock_nested(&(lower_dentry_parent_inode->i_mutex),

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1409: FILE: fs/dazukofs/inode.c:315:
+	err = vfs_create(lower_dentry_parent_inode, lower_dentry, mode, nd);
 	                                                                ^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around lower_dentry_parent_inode->i_mutex
#1427: FILE: fs/dazukofs/inode.c:333:
+	mutex_unlock(&(lower_dentry_parent_inode->i_mutex));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around lower_dentry_parent_inode->i_mutex
#1446: FILE: fs/dazukofs/inode.c:352:
+	mutex_lock_nested(&(lower_dentry_parent_inode->i_mutex),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around lower_dentry_parent_inode->i_mutex
#1460: FILE: fs/dazukofs/inode.c:366:
+	mutex_unlock(&(lower_dentry_parent_inode->i_mutex));

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1503: FILE: fs/dazukofs/inode.c:409:
+static void *dazukofs_follow_link(struct dentry *dentry, struct nameidata *nd)
                                                                            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1531: FILE: fs/dazukofs/inode.c:437:
+	nd_set_link(nd, buf);
 	            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1548: FILE: fs/dazukofs/inode.c:454:
+static void dazukofs_put_link(struct dentry *dentry, struct nameidata *nd,
                                                                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1554: FILE: fs/dazukofs/inode.c:460:
+	kfree(nd_get_link(nd));
 	                  ^^

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1605: FILE: fs/dazukofs/inode.c:511:
+		err = -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1637: FILE: fs/dazukofs/inode.c:543:
+		err = -ENOSYS;

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1666: FILE: fs/dazukofs/inode.c:572:
+		err = -ENOSYS;

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1693: FILE: fs/dazukofs/inode.c:599:
+		err = -ENOSYS;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around lower_dentry_parent_inode->i_mutex
#1716: FILE: fs/dazukofs/inode.c:622:
+	mutex_lock_nested(&(lower_dentry_parent_inode->i_mutex),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around lower_dentry_parent_inode->i_mutex
#1731: FILE: fs/dazukofs/inode.c:637:
+	mutex_unlock(&(lower_dentry_parent_inode->i_mutex));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around lower_dentry_parent_inode->i_mutex
#1748: FILE: fs/dazukofs/inode.c:654:
+	mutex_lock_nested(&(lower_dentry_parent_inode->i_mutex),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around lower_dentry_parent_inode->i_mutex
#1760: FILE: fs/dazukofs/inode.c:666:
+	mutex_unlock(&(lower_dentry_parent_inode->i_mutex));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around lower_dentry_parent_inode->i_mutex
#1777: FILE: fs/dazukofs/inode.c:683:
+	mutex_lock_nested(&(lower_dentry_parent_inode->i_mutex),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around lower_dentry_parent_inode->i_mutex
#1787: FILE: fs/dazukofs/inode.c:693:
+	mutex_unlock(&(lower_dentry_parent_inode->i_mutex));

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#1860: FILE: fs/dazukofs/inode.c:766:
+static struct inode_operations dazukofs_symlink_iops = {

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#1882: FILE: fs/dazukofs/inode.c:788:
+static struct inode_operations dazukofs_dir_iops = {

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#1919: FILE: fs/dazukofs/inode.c:825:
+static struct inode_operations dazukofs_main_iops = {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1932: FILE: fs/dazukofs/mmap.c:1:
+/* dazukofs: access control stackable filesystem

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1933: FILE: fs/dazukofs/mmap.c:2:
+/* dazukofs: access control stackable filesystem
+

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1951: FILE: fs/dazukofs/mmap.c:20:
+   along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1952: FILE: fs/dazukofs/mmap.c:21:
+   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.$

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1964: FILE: fs/dazukofs/mmap.c:33:
+ * uptodate once the read completes. If ->readpage discovers that it needs
    ^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1989: FILE: fs/dazukofs/mmap.c:58:
+		printk(KERN_ERR "dazukofs: Error reading from page cache.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1998: FILE: fs/dazukofs/mmap.c:67:
+		printk(KERN_ERR "dazukofs: Error mapping page.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2005: FILE: fs/dazukofs/mmap.c:74:
+		printk(KERN_ERR "dazukofs: Error mapping lower page.\n");

WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#2046: FILE: fs/dazukofs/mmap.c:115:
+struct address_space_operations dazukofs_aops = {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000191013.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 12 errors, 62 warnings, 30 checks, 2084 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000191013.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
