WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: usr/gen_init_cpio.c:375:
+       char expanded[PATH_MAX + 1];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: usr/gen_init_cpio.c:376:
+       char env_var[PATH_MAX + 1];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: usr/gen_init_cpio.c:377:
+       char *start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: usr/gen_init_cpio.c:378:
+       char *end;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: usr/gen_init_cpio.c:380:
+       for (start = NULL; (start = strstr(new_location, "${")); ) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#73: FILE: usr/gen_init_cpio.c:380:
+       for (start = NULL; (start = strstr(new_location, "${")); ) {
+               end = strchr(start, '}');

ERROR:CODE_INDENT: code indent should use tabs where possible
#74: FILE: usr/gen_init_cpio.c:381:
+               end = strchr(start, '}');$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: usr/gen_init_cpio.c:381:
+               end = strchr(start, '}');$

ERROR:CODE_INDENT: code indent should use tabs where possible
#75: FILE: usr/gen_init_cpio.c:382:
+               if (start < end) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: usr/gen_init_cpio.c:382:
+               if (start < end) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#75: FILE: usr/gen_init_cpio.c:382:
+               if (start < end) {
+                       *env_var = *expanded = '\0';

CHECK:BRACES: braces {} should be used on all arms of this statement
#75: FILE: usr/gen_init_cpio.c:382:
+               if (start < end) {
[...]
+               } else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#76: FILE: usr/gen_init_cpio.c:383:
+                       *env_var = *expanded = '\0';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: usr/gen_init_cpio.c:383:
+                       *env_var = *expanded = '\0';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#77: FILE: usr/gen_init_cpio.c:384:
+                       strncat(env_var, start + 2, end - start - 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: usr/gen_init_cpio.c:384:
+                       strncat(env_var, start + 2, end - start - 2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: usr/gen_init_cpio.c:385:
+                       strncat(expanded, new_location, start - new_location);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: usr/gen_init_cpio.c:385:
+                       strncat(expanded, new_location, start - new_location);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: usr/gen_init_cpio.c:386:
+                       strncat(expanded, getenv(env_var), PATH_MAX);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: usr/gen_init_cpio.c:386:
+                       strncat(expanded, getenv(env_var), PATH_MAX);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#80: FILE: usr/gen_init_cpio.c:387:
+                       strncat(expanded, end + 1, PATH_MAX);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: usr/gen_init_cpio.c:387:
+                       strncat(expanded, end + 1, PATH_MAX);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: usr/gen_init_cpio.c:388:
+                       strncpy(new_location, expanded, PATH_MAX);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: usr/gen_init_cpio.c:388:
+                       strncpy(new_location, expanded, PATH_MAX);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#82: FILE: usr/gen_init_cpio.c:389:
+               } else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: usr/gen_init_cpio.c:389:
+               } else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#82: FILE: usr/gen_init_cpio.c:389:
+               } else
+                       break;

CHECK:BRACES: Unbalanced braces around else statement
#82: FILE: usr/gen_init_cpio.c:389:
+               } else

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: usr/gen_init_cpio.c:390:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: usr/gen_init_cpio.c:390:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: usr/gen_init_cpio.c:391:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: usr/gen_init_cpio.c:393:
+       return new_location;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#89: FILE: usr/gen_init_cpio.c:396:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: usr/gen_init_cpio.c:443:
+^I                 mode, uid, gid, nlinks);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000200046.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 11 errors, 20 warnings, 3 checks, 46 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000200046.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
