WARNING:TYPO_SPELLING: 'inital' may be misspelled - perhaps 'initial'?
#53: 
by de-coupling the creation of the inital environment, to reliably run
                                   ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BAD_SIGN_OFF: 'Tested-by:' is the preferred signature form
#59: 
Tested-By: Harald Hoyer <harald@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: 'Tested-by:' is the preferred signature form
#60: 
Tested-By: Scott James Remnant <scott@ubuntu.com>

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#102: FILE: drivers/base/Kconfig:28:
+config DEVTMPFS_MOUNT
+	bool "Automount devtmpfs at /dev"
+	depends on DEVTMPFS
+	help
+	  This will mount devtmpfs at /dev if the kernel mounts the root
+	  filesystem. It will not affect initramfs based mounting.
+	  If unsure, say N here.
+

Kconfig symbols should have a help text which fully describes
it.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#135: FILE: drivers/base/base.h:144:
+extern int devtmpfs_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#161: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#166: FILE: drivers/base/devtmpfs.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#174: FILE: drivers/base/devtmpfs.c:9:
+ * filesystem. The node is named after the the name of the device,

WARNING:TYPO_SPELLING: 'susbsytem' may be misspelled - perhaps 'subsystem'?
#175: FILE: drivers/base/devtmpfs.c:10:
+ * or the susbsytem can provide a custom name. All devices are
           ^^^^^^^^^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#200: FILE: drivers/base/devtmpfs.c:35:
+	dev_mount = simple_strtoul(str, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#203: FILE: drivers/base/devtmpfs.c:38:
+__setup("devtmpfs.mount=", mount_param);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#228: FILE: drivers/base/devtmpfs.c:63:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#233: FILE: drivers/base/devtmpfs.c:68:
+			      name, LOOKUP_PARENT, &nd);
 			                            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#237: FILE: drivers/base/devtmpfs.c:72:
+	dentry = lookup_create(&nd, 1);
 	                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#239: FILE: drivers/base/devtmpfs.c:74:
+		err = vfs_mkdir(nd.path.dentry->d_inode, dentry, mode);
 		                ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#244: FILE: drivers/base/devtmpfs.c:79:
+	mutex_unlock(&nd.path.dentry->d_inode->i_mutex);
 	              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#246: FILE: drivers/base/devtmpfs.c:81:
+	path_put(&nd.path);
 	          ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#253: FILE: drivers/base/devtmpfs.c:88:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#261: FILE: drivers/base/devtmpfs.c:96:
+			      path, LOOKUP_PARENT, &nd);
 			                            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#266: FILE: drivers/base/devtmpfs.c:101:
+		dentry = lookup_create(&nd, 1);
 		                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#268: FILE: drivers/base/devtmpfs.c:103:
+			err = vfs_mkdir(nd.path.dentry->d_inode,
 			                ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#272: FILE: drivers/base/devtmpfs.c:107:
+		mutex_unlock(&nd.path.dentry->d_inode->i_mutex);
 		              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#274: FILE: drivers/base/devtmpfs.c:109:
+		path_put(&nd.path);
 		          ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#303: FILE: drivers/base/devtmpfs.c:138:
+	struct nameidata nd;
 	                 ^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#315: FILE: drivers/base/devtmpfs.c:150:
+		mode = S_IFBLK|0600;
 		              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#317: FILE: drivers/base/devtmpfs.c:152:
+		mode = S_IFCHR|0600;
 		              ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#321: FILE: drivers/base/devtmpfs.c:156:
+			      nodename, LOOKUP_PARENT, &nd);
 			                                ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#326: FILE: drivers/base/devtmpfs.c:161:
+				      nodename, LOOKUP_PARENT, &nd);
 				                                ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#331: FILE: drivers/base/devtmpfs.c:166:
+	dentry = lookup_create(&nd, 0);
 	                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#333: FILE: drivers/base/devtmpfs.c:168:
+		err = vfs_mknod(nd.path.dentry->d_inode,
 		                ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#342: FILE: drivers/base/devtmpfs.c:177:
+	mutex_unlock(&nd.path.dentry->d_inode->i_mutex);
 	              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#344: FILE: drivers/base/devtmpfs.c:179:
+	path_put(&nd.path);
 	          ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#353: FILE: drivers/base/devtmpfs.c:188:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#358: FILE: drivers/base/devtmpfs.c:193:
+			      name, LOOKUP_PARENT, &nd);
 			                            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#362: FILE: drivers/base/devtmpfs.c:197:
+	mutex_lock_nested(&nd.path.dentry->d_inode->i_mutex, I_MUTEX_PARENT);
 	                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#363: FILE: drivers/base/devtmpfs.c:198:
+	dentry = lookup_one_len(nd.last.name, nd.path.dentry, nd.last.len);
 	                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#363: FILE: drivers/base/devtmpfs.c:198:
+	dentry = lookup_one_len(nd.last.name, nd.path.dentry, nd.last.len);
 	                                      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#363: FILE: drivers/base/devtmpfs.c:198:
+	dentry = lookup_one_len(nd.last.name, nd.path.dentry, nd.last.len);
 	                                                      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#366: FILE: drivers/base/devtmpfs.c:201:
+			err = vfs_rmdir(nd.path.dentry->d_inode, dentry);
 			                ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#373: FILE: drivers/base/devtmpfs.c:208:
+	mutex_unlock(&nd.path.dentry->d_inode->i_mutex);
 	              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#375: FILE: drivers/base/devtmpfs.c:210:
+	path_put(&nd.path);
 	          ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#430: FILE: drivers/base/devtmpfs.c:265:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#445: FILE: drivers/base/devtmpfs.c:280:
+			      nodename, LOOKUP_PARENT, &nd);
 			                                ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#449: FILE: drivers/base/devtmpfs.c:284:
+	mutex_lock_nested(&nd.path.dentry->d_inode->i_mutex, I_MUTEX_PARENT);
 	                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#450: FILE: drivers/base/devtmpfs.c:285:
+	dentry = lookup_one_len(nd.last.name, nd.path.dentry, nd.last.len);
 	                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#450: FILE: drivers/base/devtmpfs.c:285:
+	dentry = lookup_one_len(nd.last.name, nd.path.dentry, nd.last.len);
 	                                      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#450: FILE: drivers/base/devtmpfs.c:285:
+	dentry = lookup_one_len(nd.last.name, nd.path.dentry, nd.last.len);
 	                                                      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#453: FILE: drivers/base/devtmpfs.c:288:
+			err = vfs_getattr(nd.path.mnt, dentry, &stat);
 			                  ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#455: FILE: drivers/base/devtmpfs.c:290:
+				err = vfs_unlink(nd.path.dentry->d_inode,
 				                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#467: FILE: drivers/base/devtmpfs.c:302:
+	mutex_unlock(&nd.path.dentry->d_inode->i_mutex);
 	              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#469: FILE: drivers/base/devtmpfs.c:304:
+	path_put(&nd.path);
 	          ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#498: FILE: drivers/base/devtmpfs.c:333:
+		printk(KERN_INFO "devtmpfs: error mounting %i\n", err);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#500: FILE: drivers/base/devtmpfs.c:335:
+		printk(KERN_INFO "devtmpfs: mounted\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#516: FILE: drivers/base/devtmpfs.c:351:
+		printk(KERN_ERR "devtmpfs: unable to register devtmpfs "

WARNING:SPLIT_STRING: quoted string split across lines
#517: FILE: drivers/base/devtmpfs.c:352:
+		printk(KERN_ERR "devtmpfs: unable to register devtmpfs "
+		       "type %i\n", err);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#524: FILE: drivers/base/devtmpfs.c:359:
+		printk(KERN_ERR "devtmpfs: unable to create devtmpfs %i\n", err);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#530: FILE: drivers/base/devtmpfs.c:365:
+	printk(KERN_INFO "devtmpfs: initialized\n");

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#554: FILE: include/linux/device.h:556:
+extern int devtmpfs_create_node(struct device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#555: FILE: include/linux/device.h:557:
+extern int devtmpfs_delete_node(struct device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#556: FILE: include/linux/device.h:558:
+extern int devtmpfs_mount(const char *mountpoint);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#574: FILE: include/linux/shmem_fs.h:41:
+extern int init_tmpfs(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#575: FILE: include/linux/shmem_fs.h:42:
+extern int shmem_fill_super(struct super_block *sb, void *data, int silent);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000072089.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 53 warnings, 9 checks, 510 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000072089.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
