WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct p9_fcall *' should also have an identifier name
#52: FILE: include/net/9p/9p.h:411:
+int p9_create_rversion(struct p9_fcall *, u32 msize, char *version);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct p9_fcall *' should also have an identifier name
#53: FILE: include/net/9p/9p.h:412:
+int p9_create_rattach(struct p9_fcall *, struct p9_qid *qid);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct p9_fcall *' should also have an identifier name
#54: FILE: include/net/9p/9p.h:413:
+int p9_create_rerror(struct p9_fcall *, char *ename, u32 ecode, int dotu);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct p9_fcall *' should also have an identifier name
#55: FILE: include/net/9p/9p.h:414:
+int p9_create_rauth(struct p9_fcall *, struct p9_qid *qid);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct p9_fcall *' should also have an identifier name
#56: FILE: include/net/9p/9p.h:415:
+int p9_create_rflush(struct p9_fcall *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct p9_fcall *' should also have an identifier name
#57: FILE: include/net/9p/9p.h:416:
+int p9_create_rwalk(struct p9_fcall *, int nwqid, struct p9_qid *wqids);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct p9_fcall *' should also have an identifier name
#58: FILE: include/net/9p/9p.h:417:
+int p9_create_ropen(struct p9_fcall *, struct p9_qid *qid, u32 iounit);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct p9_fcall *' should also have an identifier name
#59: FILE: include/net/9p/9p.h:418:
+int p9_create_rcreate(struct p9_fcall *, struct p9_qid *qid, u32 iounit);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct p9_fcall *' should also have an identifier name
#62: FILE: include/net/9p/9p.h:421:
+int p9_create_rwrite(struct p9_fcall *, u32 count);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct p9_fcall *' should also have an identifier name
#63: FILE: include/net/9p/9p.h:422:
+int p9_create_rclunk(struct p9_fcall *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct p9_fcall *' should also have an identifier name
#64: FILE: include/net/9p/9p.h:423:
+int p9_create_rremove(struct p9_fcall *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct p9_fcall *' should also have an identifier name
#65: FILE: include/net/9p/9p.h:424:
+int p9_create_rstat(struct p9_fcall *, struct p9_wstat *st, int dotu);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct p9_fcall *' should also have an identifier name
#66: FILE: include/net/9p/9p.h:425:
+int p9_create_rwstat(struct p9_fcall *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#95: FILE: net/9p/conv.c:146:
+static inline void buf_put_wstat(struct cbuf *bufp, struct p9_wstat *wstat,
+								int dotu)

CHECK:BRACES: Unbalanced braces around else statement
#134: FILE: net/9p/conv.c:226:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#194: FILE: net/9p/conv.c:444:
+			P9_EPRINTK(KERN_ERR,
+				"Rwalk with more than %d qids: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: net/9p/conv.c:492:
+		buf_get_data(bufp, rcall->params.rread.count,
+			&rcall->params.rread.data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: net/9p/conv.c:499:
+		buf_get_data(bufp, rcall->params.twrite.count,
+			&rcall->params.twrite.data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#281: FILE: net/9p/conv.c:587:
+static void p9_put_qid(struct cbuf *buf, struct p9_qid *qid,
+	struct p9_qid *pqid)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#322: FILE: net/9p/conv.c:671:
+static int p9_fcall_init(struct cbuf *bufp, struct p9_fcall *fc,
+	u32 size, u8 id)

ERROR:SPACING: spaces required around that '?' (ctx:VxO)
#347: FILE: net/9p/conv.c:689:
+	ret = buf_check_overflow(bufp)?-ENOMEM:0;
 	                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before that '-' (ctx:OxV)
#347: FILE: net/9p/conv.c:689:
+	ret = buf_check_overflow(bufp)?-ENOMEM:0;
 	                               ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#347: FILE: net/9p/conv.c:689:
+	ret = buf_check_overflow(bufp)?-ENOMEM:0;
 	                                      ^

CHECK:SPACING: No space is necessary after a cast
#546: FILE: net/9p/conv.c:1296:
+	*(__le32 *) p = cpu_to_le32(n);

CHECK:SPACING: No space is necessary after a cast
#547: FILE: net/9p/conv.c:1297:
+	*(__le32 *) (p + 7) = cpu_to_le32(count);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000361777.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 13 warnings, 10 checks, 580 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000361777.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
