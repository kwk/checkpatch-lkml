WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
The ref count is used to ensure a page is added or removed from page_container

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#74: FILE: include/linux/rss_container.h:25:
+int container_page_prepare(struct page *page, struct mm_struct *mm,
+		struct page_container **ppc, unsigned int flags);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page_container *' should also have an identifier name
#76: FILE: include/linux/rss_container.h:27:
+void container_page_add(struct page_container *, unsigned int flags);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page_container *' should also have an identifier name
#77: FILE: include/linux/rss_container.h:28:
+void container_page_del(struct page_container *, unsigned int flags);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page_container *' should also have an identifier name
#78: FILE: include/linux/rss_container.h:29:
+void container_page_release(struct page_container *, unsigned int flags);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#100: FILE: mm/rss_container.c:35:
+#define PAGE_IN_PAGECACHE ^I0x0001$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#101: FILE: mm/rss_container.c:36:
+#define PAGE_IN_RSS ^I^I0x0002$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#102: FILE: mm/rss_container.c:37:
+#define PAGE_IN_SWAPCACHE ^I0x0004$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: mm/rss_container.c:60:
+int container_page_prepare(struct page *page, struct mm_struct *mm,
+		struct page_container **ppc, unsigned int flags)

WARNING:TYPO_SPELLING: 'agin' may be misspelled - perhaps 'again'?
#143: FILE: mm/rss_container.c:83:
+			continue; /* Try agin to charge container */
 			                 ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: mm/rss_container.c:91:
+ ^I/* Page may have been added to container earlier */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#154: FILE: mm/rss_container.c:91:
+ ^I/* Page may have been added to container earlier */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: mm/rss_container.c:91:
+ ^I/* Page may have been added to container earlier */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: mm/rss_container.c:92:
+ ^Ipc = page_container(page);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#155: FILE: mm/rss_container.c:92:
+ ^Ipc = page_container(page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: mm/rss_container.c:92:
+ ^Ipc = page_container(page);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: mm/rss_container.c:93:
+ ^Iif (!pc) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#156: FILE: mm/rss_container.c:93:
+ ^Iif (!pc) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: mm/rss_container.c:93:
+ ^Iif (!pc) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: mm/rss_container.c:94:
+ ^I^Ipc = kzalloc(sizeof(struct page_container), GFP_KERNEL);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#157: FILE: mm/rss_container.c:94:
+ ^I^Ipc = kzalloc(sizeof(struct page_container), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: mm/rss_container.c:94:
+ ^I^Ipc = kzalloc(sizeof(struct page_container), GFP_KERNEL);$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*pc)...) over kzalloc(sizeof(struct page_container)...)
#157: FILE: mm/rss_container.c:94:
+ 		pc = kzalloc(sizeof(struct page_container), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: mm/rss_container.c:95:
+ ^I^Iif (pc == NULL)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#158: FILE: mm/rss_container.c:95:
+ ^I^Iif (pc == NULL)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: mm/rss_container.c:95:
+ ^I^Iif (pc == NULL)$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pc"
#158: FILE: mm/rss_container.c:95:
+ 		if (pc == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: mm/rss_container.c:96:
+ ^I^I^Igoto out_nomem;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#159: FILE: mm/rss_container.c:96:
+ ^I^I^Igoto out_nomem;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: mm/rss_container.c:96:
+ ^I^I^Igoto out_nomem;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: mm/rss_container.c:100:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#163: FILE: mm/rss_container.c:100:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: mm/rss_container.c:100:
+ ^I}$

WARNING:TYPO_SPELLING: 'flage' may be misspelled - perhaps 'flags'?
#208: FILE: mm/rss_container.c:143:
+	/* Update flage in page container */
 	          ^^^^^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#209: FILE: mm/rss_container.c:144:
+	if (flags & PAGE_TYPE_RSS) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#236: FILE: mm/rss_container.c:170:
+	BUG_ON(pc->flags & ~3);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#247: FILE: mm/rss_container.c:181:
+		BUG_ON(pc->flags);

ERROR:SPACING: space required before the open parenthesis '('
#249: FILE: mm/rss_container.c:183:
+	if(!(pc->flags)) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#258: FILE: mm/rss_container.c:192:
+ ^I^I^Ipage_container(page) = 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#258: FILE: mm/rss_container.c:192:
+ ^I^I^Ipage_container(page) = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: mm/rss_container.c:192:
+ ^I^I^Ipage_container(page) = 0;$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000427658.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 28 warnings, 4 checks, 242 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000427658.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
