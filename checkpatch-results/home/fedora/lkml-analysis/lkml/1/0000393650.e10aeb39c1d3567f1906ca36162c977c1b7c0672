WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#37: FILE: Makefile:4:
+EXTRAVERSION = .2
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: No space is necessary after a cast
#78: FILE: arch/i386/kernel/cpu/cpufreq/acpi-cpufreq.c:421:
+		cmd.val = (u32) perf->states[next_perf_state].control;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#116: FILE: arch/i386/kernel/hpet.c:293:
+		printk(KERN_WARNING

ERROR:SPACING: space required before the open parenthesis '('
#192: FILE: arch/um/drivers/ubd_kern.c:715:
+	if(ubd_dev->cow.file != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ubd_dev->cow.file"
#192: FILE: arch/um/drivers/ubd_kern.c:715:
+	if(ubd_dev->cow.file != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#224: FILE: arch/um/os-Linux/user_syms.c:74:
+EXPORT_SYMBOL_PROTO(futimes);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#450: FILE: drivers/base/cpu.c:58:
 static void __devinit register_cpu_control(struct cpu *cpu)

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#472: FILE: drivers/char/drm/i915_dma.c:523:
+				OUT_RING(MI_BATCH_BUFFER_START | (2 << 6) | MI_BATCH_NON_SECURE_I965);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#499: FILE: drivers/char/drm/i915_drv.h:285:
+#define MI_BATCH_NON_SECURE_I965 (1<<8)
                                    ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#499: FILE: drivers/char/drm/i915_drv.h:285:
+#define MI_BATCH_NON_SECURE_I965 (1<<8)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#540: FILE: drivers/firewire/fw-sbp2.c:988:
+	unsigned max_payload;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#592: FILE: drivers/firewire/fw-transaction.h:235:
+	unsigned max_receive;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#750: FILE: drivers/md/dm-raid1.c:1292:
+		DMEMIT("%llu/%llu 0 ",
 			(unsigned long long)ms->rh.log->type->

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#755: FILE: drivers/md/dm-raid1.c:1296:
+		sz += ms->rh.log->type->status(ms->rh.log, type, result+sz, maxlen-sz);
 		                                                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#755: FILE: drivers/md/dm-raid1.c:1296:
+		sz += ms->rh.log->type->status(ms->rh.log, type, result+sz, maxlen-sz);
 		                                                                  ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#927: FILE: drivers/media/video/ivtv/ivtv-streams.c:450:
+	/* Big serialization lock to ensure no two streams are started
+	   simultaneously: that can give all sorts of weird results. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#927: FILE: drivers/media/video/ivtv/ivtv-streams.c:450:
+	   simultaneously: that can give all sorts of weird results. */

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#996: FILE: drivers/media/video/ivtv/ivtv-streams.c:856:
+		ivtv_vapi(itv, CX2341X_ENC_SET_EVENT_NOTIFICATION, 4, 0, 0, IVTV_IRQ_ENC_VIM_RST, -1);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ctrl_classes"
#1084: FILE: drivers/media/video/v4l2-common.c:953:
+		if (*ctrl_classes == NULL)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1088: FILE: drivers/media/video/v4l2-common.c:957:
+		while (*pctrl && *pctrl != id) pctrl++;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1178: FILE: drivers/misc/sony-laptop.c:2014:
+	dprintk("event ([%.2x] [%.2x]) at port 0x%.4x(+0x%.2x)\n",
+			ev, data_mask, dev->cur_ioport->io.minimum, dev->evport_offset);

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1187: FILE: drivers/misc/sony-laptop.c:2106:
+	switch(spic_dev.model) {
+		case SONYPI_DEVICE_TYPE1:
[...]
+		case SONYPI_DEVICE_TYPE3:
[...]
+		case SONYPI_DEVICE_TYPE2:
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#1187: FILE: drivers/misc/sony-laptop.c:2106:
+	switch(spic_dev.model) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1265: FILE: drivers/net/forcedeth.c:1127:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1269: FILE: drivers/net/forcedeth.c:1131:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1273: FILE: drivers/net/forcedeth.c:1135:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1277: FILE: drivers/net/forcedeth.c:1139:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1281: FILE: drivers/net/forcedeth.c:1143:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1319: FILE: drivers/net/forcedeth.c:1215:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1323: FILE: drivers/net/forcedeth.c:1219:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1328: FILE: drivers/net/forcedeth.c:1224:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1335: FILE: drivers/net/forcedeth.c:1231:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1339: FILE: drivers/net/forcedeth.c:1235:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1343: FILE: drivers/net/forcedeth.c:1239:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1350: FILE: drivers/net/forcedeth.c:1246:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1355: FILE: drivers/net/forcedeth.c:1251:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1359: FILE: drivers/net/forcedeth.c:1255:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1363: FILE: drivers/net/forcedeth.c:1259:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1368: FILE: drivers/net/forcedeth.c:1264:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1375: FILE: drivers/net/forcedeth.c:1271:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1379: FILE: drivers/net/forcedeth.c:1275:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1383: FILE: drivers/net/forcedeth.c:1279:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1390: FILE: drivers/net/forcedeth.c:1286:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1394: FILE: drivers/net/forcedeth.c:1290:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1398: FILE: drivers/net/forcedeth.c:1294:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1402: FILE: drivers/net/forcedeth.c:1298:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1406: FILE: drivers/net/forcedeth.c:1302:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

CHECK:BRACES: Unbalanced braces around else statement
#1465: FILE: drivers/serial/sunhv.c:450:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1492: FILE: drivers/serial/sunhv.c:505:
+	if (port->sysrq) {
[...]
+	} else if (oops_in_progress) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1496: FILE: drivers/serial/sunhv.c:509:
+	} else

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1538: FILE: drivers/serial/sunsab.c:875:
+	if (up->port.sysrq) {
[...]
+	} else if (oops_in_progress) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1542: FILE: drivers/serial/sunsab.c:879:
+	} else

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1567: FILE: drivers/serial/sunsu.c:1296:
+	if (up->port.sysrq) {
[...]
+	} else if (oops_in_progress) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1571: FILE: drivers/serial/sunsu.c:1300:
+	} else

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1607: FILE: drivers/serial/sunzilog.c:1157:
+	if (up->port.sysrq) {
[...]
+	} else if (oops_in_progress) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1611: FILE: drivers/serial/sunzilog.c:1161:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1647: FILE: drivers/usb/class/cdc-acm.c:1115:
+		device_remove_file(&acm->control->dev,
+				&dev_attr_wCountryCodes);

CHECK:CAMELCASE: Avoid CamelCase: <dev_attr_wCountryCodes>
#1647: FILE: drivers/usb/class/cdc-acm.c:1115:
+				&dev_attr_wCountryCodes);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1649: FILE: drivers/usb/class/cdc-acm.c:1117:
+		device_remove_file(&acm->control->dev,
+				&dev_attr_iCountryCodeRelDate);

CHECK:CAMELCASE: Avoid CamelCase: <dev_attr_iCountryCodeRelDate>
#1649: FILE: drivers/usb/class/cdc-acm.c:1117:
+				&dev_attr_iCountryCodeRelDate);

CHECK:CAMELCASE: Avoid CamelCase: <dev_attr_bmCapabilities>
#1652: FILE: drivers/usb/class/cdc-acm.c:1119:
+	device_remove_file(&acm->control->dev, &dev_attr_bmCapabilities);

WARNING:LONG_LINE_COMMENT: line length of 122 exceeds 100 columns
#1699: FILE: drivers/usb/serial/ftdi_sio.c:278:
+	int custom_divisor;	/* custom_divisor kludge, this is for baud_base (different from what goes to the chip!) */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited before semicolon
#1700: FILE: drivers/usb/serial/ftdi_sio.c:279:
+	__u16 last_set_data_urb_value ;

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#1702: FILE: drivers/usb/serial/ftdi_sio.c:281:
+        int write_offset;       /* This is the offset in the usb data block to write the serial data -

ERROR:CODE_INDENT: code indent should use tabs where possible
#1702: FILE: drivers/usb/serial/ftdi_sio.c:281:
+        int write_offset;       /* This is the offset in the usb data block to write the serial data -$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1702: FILE: drivers/usb/serial/ftdi_sio.c:281:
+        int write_offset;       /* This is the offset in the usb data block to write the serial data -$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1707: FILE: drivers/usb/serial/ftdi_sio.c:286:
+        wait_queue_head_t delta_msr_wait; /* Used for TIOCMIWAIT */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1707: FILE: drivers/usb/serial/ftdi_sio.c:286:
+        wait_queue_head_t delta_msr_wait; /* Used for TIOCMIWAIT */$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ftdi_private *' should also have an identifier name
#1731: FILE: drivers/usb/serial/ftdi_sio.c:309:
+	void (*port_probe)(struct ftdi_private *); /* Special settings for probed ports. */

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1737: FILE: drivers/usb/serial/ftdi_sio.c:313:
+static void  ftdi_USB_UIRT_setup	(struct ftdi_private *priv);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1738: FILE: drivers/usb/serial/ftdi_sio.c:314:
+static void  ftdi_HE_TIRA1_setup	(struct ftdi_private *priv);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1850: FILE: drivers/usb/serial/ftdi_sio.c:1253:
+static void ftdi_USB_UIRT_setup (struct ftdi_private *priv)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1865: FILE: drivers/usb/serial/ftdi_sio.c:1264:
+static void ftdi_HE_TIRA1_setup (struct ftdi_private *priv)

CHECK:CAMELCASE: Avoid CamelCase: <Supports>
#1887: FILE: drivers/usb/serial/io_edgeport.c:2370:
+	    !edge_serial->epic_descriptor.Supports.IOSPSetBaudRate) {

CHECK:CAMELCASE: Avoid CamelCase: <IOSPSetBaudRate>
#1887: FILE: drivers/usb/serial/io_edgeport.c:2370:
+	    !edge_serial->epic_descriptor.Supports.IOSPSetBaudRate) {

CHECK:CAMELCASE: Avoid CamelCase: <IOSPWriteMCR>
#1900: FILE: drivers/usb/serial/io_edgeport.c:2464:
+	    !edge_serial->epic_descriptor.Supports.IOSPWriteMCR &&

CHECK:CAMELCASE: Avoid CamelCase: <regNum>
#1901: FILE: drivers/usb/serial/io_edgeport.c:2465:
+	    regNum == MCR) {

CHECK:CAMELCASE: Avoid CamelCase: <IOSPWriteLCR>
#1911: FILE: drivers/usb/serial/io_edgeport.c:2471:
+	    !edge_serial->epic_descriptor.Supports.IOSPWriteLCR &&

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1957: FILE: drivers/video/macmodes.h:58:
+extern int mac_find_mode(struct fb_var_screeninfo *var,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1987: FILE: fs/ecryptfs/inode.c:906:
+	else if (S_ISREG(dentry->d_inode->i_mode)
+		 && (!(crypt_stat->flags & ECRYPTFS_POLICY_APPLIED)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1988: FILE: fs/ecryptfs/inode.c:907:
+		 && (!(crypt_stat->flags & ECRYPTFS_POLICY_APPLIED)
+		     || !(crypt_stat->flags & ECRYPTFS_KEY_VALID))) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!commit_transaction->t_checkpoint_list"
#2014: FILE: fs/jbd/commit.c:890:
+	if (commit_transaction->t_checkpoint_list == NULL &&

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!commit_transaction->t_checkpoint_io_list"
#2015: FILE: fs/jbd/commit.c:891:
+	    commit_transaction->t_checkpoint_io_list == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!commit_transaction->t_checkpoint_list"
#2028: FILE: fs/jbd2/commit.c:899:
+	if (commit_transaction->t_checkpoint_list == NULL &&

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!commit_transaction->t_checkpoint_io_list"
#2029: FILE: fs/jbd2/commit.c:900:
+	    commit_transaction->t_checkpoint_io_list == NULL) {

CHECK:SPACING: No space is necessary after a cast
#2109: FILE: fs/timerfd.c:143:
+		res = put_user(ticks, (u64 __user *) buf) ? -EFAULT: sizeof(ticks);

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2109: FILE: fs/timerfd.c:143:
+		res = put_user(ticks, (u64 __user *) buf) ? -EFAULT: sizeof(ticks);
 		                                                   ^

ERROR:SPACING: space required before the open brace '{'
#2188: FILE: ipc/shm.c:719:
+				if (!err && !(shp->shm_perm.mode & SHM_LOCKED)){

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2299: FILE: mm/hugetlb.c:116:
+	page = alloc_pages_node(nid, GFP_HIGHUSER|__GFP_COMP|__GFP_NOWARN,
 	                                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2299: FILE: mm/hugetlb.c:116:
+	page = alloc_pages_node(nid, GFP_HIGHUSER|__GFP_COMP|__GFP_NOWARN,
 	                                                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2300: FILE: mm/hugetlb.c:117:
+	page = alloc_pages_node(nid, GFP_HIGHUSER|__GFP_COMP|__GFP_NOWARN,
+					HUGETLB_PAGE_ORDER);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2335: FILE: mm/readahead.c:29:
+#define MAX_RA_PAGES	(VM_MAX_READAHEAD*1024 / PAGE_CACHE_SIZE)
                     	                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2336: FILE: mm/readahead.c:30:
+#define MIN_RA_PAGES	DIV_ROUND_UP(VM_MIN_READAHEAD*1024, PAGE_CACHE_SIZE)
                     	                             ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!e->bstats"
#2533: FILE: net/core/gen_estimator.c:118:
+		if (e->bstats == NULL)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2551: FILE: net/core/gen_estimator.c:138:
+		mod_timer(&elist[idx].timer, jiffies + ((HZ<<idx)/4));
 		                                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2551: FILE: net/core/gen_estimator.c:138:
+		mod_timer(&elist[idx].timer, jiffies + ((HZ<<idx)/4));
 		                                                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2604: FILE: net/core/gen_estimator.c:194:
+		mod_timer(&elist[idx].timer, jiffies + ((HZ<<idx)/4));
 		                                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2604: FILE: net/core/gen_estimator.c:194:
+		mod_timer(&elist[idx].timer, jiffies + ((HZ<<idx)/4));
 		                                                 ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2640: FILE: net/core/gen_estimator.c:224:
 	for (idx=0; idx <= EST_MAX_INTERVAL; idx++) {
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'icmp_error_message', this function's name, in a string
#2744: FILE: net/ipv4/netfilter/nf_conntrack_proto_icmp.c:192:
+		DEBUGP("icmp_error_message: no match\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2803: FILE: net/ipv6/icmp.c:608:
+		while ((sk = __raw_v6_lookup(sk, nexthdr, saddr, daddr,
 					    IP6CB(skb)->iif))) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000393650.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 50 warnings, 44 checks, 2314 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000393650.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
