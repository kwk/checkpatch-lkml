CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#93: FILE: include/asm-x86/desc_64.h:21:
+	asm volatile("ltr %w0"::"r" (GDT_ENTRY_TSS*8));
 	                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: include/asm-x86/desc_64.h:49:
+       asm volatile ("sgdt %w0":"=m" (*ptr));$

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#124: FILE: include/asm-x86/desc_64.h:49:
+       asm volatile ("sgdt %w0":"=m" (*ptr));
                                ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#151: FILE: include/asm-x86/desc_64.h:55:
+	 * it is only done once at setup time */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: include/asm-x86/desc_64.h:60:
+static inline void native_write_gdt_entry(void *ptr, void *entry,
+						unsigned type, unsigned size)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#161: FILE: include/asm-x86/desc_64.h:60:
+						unsigned type, unsigned size)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#161: FILE: include/asm-x86/desc_64.h:60:
+						unsigned type, unsigned size)

WARNING:TYPO_SPELLING: 'an user' may be misspelled - perhaps 'a user'?
#173: FILE: include/asm-x86/desc_64.h:67:
+ * an user anxious for its definition: set_tssldt_descriptor
    ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#222: FILE: include/asm-x86/desc_64.h:163:
 } 
+static inline void native_set_ldt(const void *addr,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#225: FILE: include/asm-x86/desc_64.h:166:
+	if (likely(entries == 0))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#227: FILE: include/asm-x86/desc_64.h:168:
+	else {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#228: FILE: include/asm-x86/desc_64.h:169:
+		unsigned cpu = smp_processor_id();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#231: FILE: include/asm-x86/desc_64.h:172:
+		set_tssldt_descriptor(&cpu_gdt(cpu)[GDT_ENTRY_LDT],
+					(unsigned long)addr, DESC_LDT,

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#233: FILE: include/asm-x86/desc_64.h:174:
+		__asm__ __volatile__ ("lldt %w0"::"r" (GDT_ENTRY_LDT*8));
 		                                                    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#245: FILE: include/asm-x86/desc_64.h:186:
+#define store_tr(tr) (tr) = native_store_tr()

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#254: FILE: include/asm-x86/desc_64.h:195:
+static inline void _set_gate(void *adr, unsigned type, unsigned long func,

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#255: FILE: include/asm-x86/desc_64.h:196:
+			     unsigned dpl, unsigned ist)
 			                            ^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#255: FILE: include/asm-x86/desc_64.h:196:
+			     unsigned dpl, unsigned ist)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#255: FILE: include/asm-x86/desc_64.h:196:
+			     unsigned dpl, unsigned ist)

WARNING:LINE_SPACING: Missing a blank line after declarations
#258: FILE: include/asm-x86/desc_64.h:199:
+	struct gate_struct s;
+	s.offset_low = PTR_LOW(func);

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#260: FILE: include/asm-x86/desc_64.h:201:
+	s.ist = ist;
 	  ^^^

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#260: FILE: include/asm-x86/desc_64.h:201:
+	s.ist = ist;
 	        ^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#273: FILE: include/asm-x86/desc_64.h:214:
+	BUG_ON((unsigned)nr > 0xFF);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#273: FILE: include/asm-x86/desc_64.h:214:
+	BUG_ON((unsigned)nr > 0xFF);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: No space is necessary after a cast
#274: FILE: include/asm-x86/desc_64.h:215:
+	_set_gate(&idt_table[nr], GATE_INTERRUPT, (unsigned long) func, 0, 0);

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#277: FILE: include/asm-x86/desc_64.h:218:
+static inline void set_intr_gate_ist(int nr, void *func, unsigned ist)
                                                                   ^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#277: FILE: include/asm-x86/desc_64.h:218:
+static inline void set_intr_gate_ist(int nr, void *func, unsigned ist)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#279: FILE: include/asm-x86/desc_64.h:220:
+	BUG_ON((unsigned)nr > 0xFF);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#279: FILE: include/asm-x86/desc_64.h:220:
+	BUG_ON((unsigned)nr > 0xFF);

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#280: FILE: include/asm-x86/desc_64.h:221:
+	_set_gate(&idt_table[nr], GATE_INTERRUPT, (unsigned long) func, 0, ist);
 	                                                                   ^^^

CHECK:SPACING: No space is necessary after a cast
#280: FILE: include/asm-x86/desc_64.h:221:
+	_set_gate(&idt_table[nr], GATE_INTERRUPT, (unsigned long) func, 0, ist);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#285: FILE: include/asm-x86/desc_64.h:226:
+	BUG_ON((unsigned)nr > 0xFF);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#285: FILE: include/asm-x86/desc_64.h:226:
+	BUG_ON((unsigned)nr > 0xFF);

CHECK:SPACING: No space is necessary after a cast
#286: FILE: include/asm-x86/desc_64.h:227:
+	_set_gate(&idt_table[nr], GATE_INTERRUPT, (unsigned long) func, 3, 0);

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#289: FILE: include/asm-x86/desc_64.h:230:
+static inline void set_system_gate_ist(int nr, void *func, unsigned ist)
                                                                     ^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#289: FILE: include/asm-x86/desc_64.h:230:
+static inline void set_system_gate_ist(int nr, void *func, unsigned ist)

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#291: FILE: include/asm-x86/desc_64.h:232:
+	_set_gate(&idt_table[nr], GATE_INTERRUPT, (unsigned long) func, 3, ist);
 	                                                                   ^^^

CHECK:SPACING: No space is necessary after a cast
#291: FILE: include/asm-x86/desc_64.h:232:
+	_set_gate(&idt_table[nr], GATE_INTERRUPT, (unsigned long) func, 3, ist);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#380: FILE: include/asm-x86/mmu_context_64.h:79:
+#define activate_mm(prev, next) ^I^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'prev' - possible side-effects?
#380: FILE: include/asm-x86/mmu_context_64.h:79:
+#define activate_mm(prev, next) 		\
+do {						\
+	paravirt_activate_mm(prev, next);	\
+	switch_mm((prev), (next), NULL);	\
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'next' - possible side-effects?
#380: FILE: include/asm-x86/mmu_context_64.h:79:
+#define activate_mm(prev, next) 		\
+do {						\
+	paravirt_activate_mm(prev, next);	\
+	switch_mm((prev), (next), NULL);	\
+} while (0)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000362431.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 26 warnings, 14 checks, 314 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000362431.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
