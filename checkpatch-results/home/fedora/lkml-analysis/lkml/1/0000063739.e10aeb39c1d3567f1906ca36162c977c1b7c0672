WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#52: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#57: FILE: fs/ceph/mon_client.c:1:
+#include "ceph_debug.h"

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:STATIC_CONST: Move const after static - use 'static const struct ceph_connection_operations '
#85: FILE: fs/ceph/mon_client.c:29:
+const static struct ceph_connection_operations mon_con_ops;

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#98: FILE: fs/ceph/mon_client.c:42:
+	dout("monmap_decode %p %p len %d\n", p, end, (int)(end-p));
 	^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#98: FILE: fs/ceph/mon_client.c:42:
+	dout("monmap_decode %p %p len %d\n", p, end, (int)(end-p));
 	                                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#102: FILE: fs/ceph/mon_client.c:46:
+	ceph_decode_need(&p, end, sizeof(fsid) + 2*sizeof(u32), bad);
 	                                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#107: FILE: fs/ceph/mon_client.c:51:
+	ceph_decode_need(&p, end, num_mon*sizeof(m->mon_inst[0]), bad);
 	                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#111: FILE: fs/ceph/mon_client.c:55:
+	m = kmalloc(sizeof(*m) + sizeof(m->mon_inst[0])*num_mon, GFP_NOFS);
 	                                               ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!m"
#112: FILE: fs/ceph/mon_client.c:56:
+	if (m == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#117: FILE: fs/ceph/mon_client.c:61:
+	ceph_decode_copy(&p, m->mon_inst, num_mon*sizeof(m->mon_inst[0]));
 	                                         ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#122: FILE: fs/ceph/mon_client.c:66:
+	dout("monmap_decode epoch %d, num_mon %d\n", m->epoch,
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#125: FILE: fs/ceph/mon_client.c:69:
+		dout("monmap_decode  mon%d is %s\n", i,
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#130: FILE: fs/ceph/mon_client.c:74:
+	dout("monmap_decode failed with %d\n", err);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#154: FILE: fs/ceph/mon_client.c:98:
+		dout("__close_session closing mon%d\n", monc->cur_mon);
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__close_session', this function's name, in a string
#154: FILE: fs/ceph/mon_client.c:98:
+		dout("__close_session closing mon%d\n", monc->cur_mon);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#170: FILE: fs/ceph/mon_client.c:114:
+		dout("open_session num=%d r=%d -> mon%d\n",
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#176: FILE: fs/ceph/mon_client.c:120:
+		dout("open_session mon%d opening\n", monc->cur_mon);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#182: FILE: fs/ceph/mon_client.c:126:
+		dout("open_session mon%d already open\n", monc->cur_mon);
 		^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#197: FILE: fs/ceph/mon_client.c:141:
+	unsigned delay;

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#203: FILE: fs/ceph/mon_client.c:147:
+	dout("__schedule_delayed after %u\n", delay);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__schedule_delayed', this function's name, in a string
#203: FILE: fs/ceph/mon_client.c:147:
+	dout("__schedule_delayed after %u\n", delay);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#212: FILE: fs/ceph/mon_client.c:156:
+	dout("__send_subscribe sub_sent=%u exp=%u want_osd=%d\n",
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__send_subscribe', this function's name, in a string
#212: FILE: fs/ceph/mon_client.c:156:
+	dout("__send_subscribe sub_sent=%u exp=%u want_osd=%d\n",

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#213: FILE: fs/ceph/mon_client.c:157:
+	     (unsigned)monc->sub_sent, __sub_expired(monc),

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#228: FILE: fs/ceph/mon_client.c:172:
+		dout("__send_subscribe to 'mdsmap' %u+\n",
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__send_subscribe', this function's name, in a string
#228: FILE: fs/ceph/mon_client.c:172:
+		dout("__send_subscribe to 'mdsmap' %u+\n",

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#229: FILE: fs/ceph/mon_client.c:173:
+		     (unsigned)monc->have_mdsmap);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#231: FILE: fs/ceph/mon_client.c:175:
+			dout("__send_subscribe to 'osdmap' %u\n",
 			^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__send_subscribe', this function's name, in a string
#231: FILE: fs/ceph/mon_client.c:175:
+			dout("__send_subscribe to 'osdmap' %u\n",

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#232: FILE: fs/ceph/mon_client.c:176:
+			     (unsigned)monc->have_osdmap);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#260: FILE: fs/ceph/mon_client.c:204:
+	unsigned seconds;

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#271: FILE: fs/ceph/mon_client.c:215:
+	dout("handle_subscribe_ack after %d seconds\n", seconds);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'handle_subscribe_ack', this function's name, in a string
#271: FILE: fs/ceph/mon_client.c:215:
+	dout("handle_subscribe_ack after %d seconds\n", seconds);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#272: FILE: fs/ceph/mon_client.c:216:
+	monc->sub_renew_after = monc->sub_sent + seconds*HZ - 1;
 	                                                ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#305: FILE: fs/ceph/mon_client.c:249:
+	dout("request_next_osdmap have %u\n", monc->have_osdmap);
 	^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#314: FILE: fs/ceph/mon_client.c:258:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#324: FILE: fs/ceph/mon_client.c:268:
+	dout("__request_mount\n");
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__request_mount', this function's name, in a string
#324: FILE: fs/ceph/mon_client.c:268:
+	dout("__request_mount\n");

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#369: FILE: fs/ceph/mon_client.c:313:
+		dout("handle_mount_ack - already mounted\n");
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'handle_mount_ack', this function's name, in a string
#369: FILE: fs/ceph/mon_client.c:313:
+		dout("handle_mount_ack - already mounted\n");

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#375: FILE: fs/ceph/mon_client.c:319:
+	dout("handle_mount_ack\n");
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'handle_mount_ack', this function's name, in a string
#375: FILE: fs/ceph/mon_client.c:319:
+	dout("handle_mount_ack\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#429: FILE: fs/ceph/mon_client.c:373:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#431: FILE: fs/ceph/mon_client.c:375:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#445: FILE: fs/ceph/mon_client.c:389:
+	dout("handle_statfs_reply %p tid %llu\n", msg, tid);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'handle_statfs_reply', this function's name, in a string
#445: FILE: fs/ceph/mon_client.c:389:
+	dout("handle_statfs_reply %p tid %llu\n", msg, tid);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#472: FILE: fs/ceph/mon_client.c:416:
+	dout("send_statfs tid %llu\n", req->tid);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'send_statfs', this function's name, in a string
#472: FILE: fs/ceph/mon_client.c:416:
+	dout("send_statfs tid %llu\n", req->tid);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#566: FILE: fs/ceph/mon_client.c:510:
+	dout("monc delayed_work\n");
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'delayed_work', this function's name, in a string
#566: FILE: fs/ceph/mon_client.c:510:
+	dout("monc delayed_work\n");

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#587: FILE: fs/ceph/mon_client.c:531:
+	dout("init\n");
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#627: FILE: fs/ceph/mon_client.c:571:
+	dout("stop\n");
 	^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#646: FILE: fs/ceph/mon_client.c:590:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#717: FILE: fs/ceph/mon_client.c:661:
+	dout("mon_fault\n");
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mon_fault', this function's name, in a string
#717: FILE: fs/ceph/mon_client.c:661:
+	dout("mon_fault\n");

WARNING:SPLIT_STRING: quoted string split across lines
#724: FILE: fs/ceph/mon_client.c:668:
+		pr_info("mon%d %s session lost, "
+			"hunting for new mon\n", monc->cur_mon,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:STATIC_CONST: Move const after static - use 'static const struct ceph_connection_operations '
#743: FILE: fs/ceph/mon_client.c:687:
+const static struct ceph_connection_operations mon_con_ops = {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#757: FILE: fs/ceph/mon_client.h:1:
+#ifndef _FS_CEPH_MON_CLIENT_H

CHECK:LINE_SPACING: Please don't use multiple blank lines
#782: FILE: fs/ceph/mon_client.h:26:
+
+

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#814: FILE: fs/ceph/mon_client.h:58:
+	struct mutex mutex;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#840: FILE: fs/ceph/mon_client.h:84:
+extern struct ceph_monmap *ceph_monmap_decode(void *p, void *end);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#841: FILE: fs/ceph/mon_client.h:85:
+extern int ceph_monmap_contains(struct ceph_monmap *m,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#844: FILE: fs/ceph/mon_client.h:88:
+extern int ceph_monc_init(struct ceph_mon_client *monc, struct ceph_client *cl);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#845: FILE: fs/ceph/mon_client.h:89:
+extern void ceph_monc_stop(struct ceph_mon_client *monc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#853: FILE: fs/ceph/mon_client.h:97:
+extern int ceph_monc_got_mdsmap(struct ceph_mon_client *monc, u32 have);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#854: FILE: fs/ceph/mon_client.h:98:
+extern int ceph_monc_got_osdmap(struct ceph_mon_client *monc, u32 have);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#856: FILE: fs/ceph/mon_client.h:100:
+extern void ceph_monc_request_next_osdmap(struct ceph_mon_client *monc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#858: FILE: fs/ceph/mon_client.h:102:
+extern int ceph_monc_request_mount(struct ceph_mon_client *monc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#860: FILE: fs/ceph/mon_client.h:104:
+extern int ceph_monc_do_statfs(struct ceph_mon_client *monc,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#863: FILE: fs/ceph/mon_client.h:107:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000063739.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 47 warnings, 23 checks, 803 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000063739.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
