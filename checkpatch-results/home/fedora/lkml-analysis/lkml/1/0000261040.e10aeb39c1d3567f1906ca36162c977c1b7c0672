WARNING:MISPLACED_INIT: __initdata should be placed after mci0_data
#129: FILE: arch/avr32/boards/atngw100/setup.c:46:
+static struct mci_platform_data __initdata mci0_data = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: arch/avr32/mach-at32ap/at32ap700x.c:1227:
+	if (platform_device_add_data(pdev, data,
+				sizeof(struct mci_platform_data)))

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#263: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#268: FILE: drivers/mmc/host/atmel-mci-regs.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:SPACING: space prohibited after that open parenthesis '('
#282: FILE: drivers/mmc/host/atmel-mci-regs.h:15:
+# define MCI_CR_MCIEN		(  1 <<  0)	/* MCI Enable */

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#282: FILE: drivers/mmc/host/atmel-mci-regs.h:15:
+# define MCI_CR_MCIEN		(  1 <<  0)	/* MCI Enable */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

ERROR:SPACING: space prohibited after that open parenthesis '('
#283: FILE: drivers/mmc/host/atmel-mci-regs.h:16:
+# define MCI_CR_MCIDIS		(  1 <<  1)	/* MCI Disable */

CHECK:BIT_MACRO: Prefer using the BIT macro
#283: FILE: drivers/mmc/host/atmel-mci-regs.h:16:
+# define MCI_CR_MCIDIS		(  1 <<  1)	/* MCI Disable */

ERROR:SPACING: space prohibited after that open parenthesis '('
#284: FILE: drivers/mmc/host/atmel-mci-regs.h:17:
+# define MCI_CR_SWRST		(  1 <<  7)	/* Software Reset */

CHECK:BIT_MACRO: Prefer using the BIT macro
#284: FILE: drivers/mmc/host/atmel-mci-regs.h:17:
+# define MCI_CR_SWRST		(  1 <<  7)	/* Software Reset */

ERROR:SPACING: space prohibited after that open parenthesis '('
#287: FILE: drivers/mmc/host/atmel-mci-regs.h:20:
+# define MCI_MR_RDPROOF		(  1 << 11)	/* Read Proof */

CHECK:BIT_MACRO: Prefer using the BIT macro
#287: FILE: drivers/mmc/host/atmel-mci-regs.h:20:
+# define MCI_MR_RDPROOF		(  1 << 11)	/* Read Proof */

ERROR:SPACING: space prohibited after that open parenthesis '('
#288: FILE: drivers/mmc/host/atmel-mci-regs.h:21:
+# define MCI_MR_WRPROOF		(  1 << 12)	/* Write Proof */

CHECK:BIT_MACRO: Prefer using the BIT macro
#288: FILE: drivers/mmc/host/atmel-mci-regs.h:21:
+# define MCI_MR_WRPROOF		(  1 << 12)	/* Write Proof */

ERROR:SPACING: space prohibited after that open parenthesis '('
#293: FILE: drivers/mmc/host/atmel-mci-regs.h:26:
+# define MCI_SDCSEL_SLOT_A	(  0 <<  0)	/* Select SD slot A */

ERROR:SPACING: space prohibited after that open parenthesis '('
#294: FILE: drivers/mmc/host/atmel-mci-regs.h:27:
+# define MCI_SDCSEL_SLOT_B	(  1 <<  0)	/* Select SD slot A */

CHECK:BIT_MACRO: Prefer using the BIT macro
#294: FILE: drivers/mmc/host/atmel-mci-regs.h:27:
+# define MCI_SDCSEL_SLOT_B	(  1 <<  0)	/* Select SD slot A */

ERROR:SPACING: space prohibited after that open parenthesis '('
#295: FILE: drivers/mmc/host/atmel-mci-regs.h:28:
+# define MCI_SDCBUS_1BIT	(  0 <<  7)	/* 1-bit data bus */

ERROR:SPACING: space prohibited after that open parenthesis '('
#296: FILE: drivers/mmc/host/atmel-mci-regs.h:29:
+# define MCI_SDCBUS_4BIT	(  1 <<  7)	/* 4-bit data bus */

CHECK:BIT_MACRO: Prefer using the BIT macro
#296: FILE: drivers/mmc/host/atmel-mci-regs.h:29:
+# define MCI_SDCBUS_4BIT	(  1 <<  7)	/* 4-bit data bus */

ERROR:SPACING: space prohibited after that open parenthesis '('
#300: FILE: drivers/mmc/host/atmel-mci-regs.h:33:
+# define MCI_CMDR_RSPTYP_NONE	(  0 <<  6)	/* No response */

ERROR:SPACING: space prohibited after that open parenthesis '('
#301: FILE: drivers/mmc/host/atmel-mci-regs.h:34:
+# define MCI_CMDR_RSPTYP_48BIT	(  1 <<  6)	/* 48-bit response */

CHECK:BIT_MACRO: Prefer using the BIT macro
#301: FILE: drivers/mmc/host/atmel-mci-regs.h:34:
+# define MCI_CMDR_RSPTYP_48BIT	(  1 <<  6)	/* 48-bit response */

ERROR:SPACING: space prohibited after that open parenthesis '('
#302: FILE: drivers/mmc/host/atmel-mci-regs.h:35:
+# define MCI_CMDR_RSPTYP_136BIT	(  2 <<  6)	/* 136-bit response */

ERROR:SPACING: space prohibited after that open parenthesis '('
#303: FILE: drivers/mmc/host/atmel-mci-regs.h:36:
+# define MCI_CMDR_SPCMD_INIT	(  1 <<  8)	/* Initialization command */

CHECK:BIT_MACRO: Prefer using the BIT macro
#303: FILE: drivers/mmc/host/atmel-mci-regs.h:36:
+# define MCI_CMDR_SPCMD_INIT	(  1 <<  8)	/* Initialization command */

ERROR:SPACING: space prohibited after that open parenthesis '('
#304: FILE: drivers/mmc/host/atmel-mci-regs.h:37:
+# define MCI_CMDR_SPCMD_SYNC	(  2 <<  8)	/* Synchronized command */

ERROR:SPACING: space prohibited after that open parenthesis '('
#305: FILE: drivers/mmc/host/atmel-mci-regs.h:38:
+# define MCI_CMDR_SPCMD_INT	(  4 <<  8)	/* Interrupt command */

ERROR:SPACING: space prohibited after that open parenthesis '('
#306: FILE: drivers/mmc/host/atmel-mci-regs.h:39:
+# define MCI_CMDR_SPCMD_INTRESP	(  5 <<  8)	/* Interrupt response */

ERROR:SPACING: space prohibited after that open parenthesis '('
#307: FILE: drivers/mmc/host/atmel-mci-regs.h:40:
+# define MCI_CMDR_OPDCMD	(  1 << 11)	/* Open Drain */

CHECK:BIT_MACRO: Prefer using the BIT macro
#307: FILE: drivers/mmc/host/atmel-mci-regs.h:40:
+# define MCI_CMDR_OPDCMD	(  1 << 11)	/* Open Drain */

ERROR:SPACING: space prohibited after that open parenthesis '('
#308: FILE: drivers/mmc/host/atmel-mci-regs.h:41:
+# define MCI_CMDR_MAXLAT_5CYC	(  0 << 12)	/* Max latency 5 cycles */

ERROR:SPACING: space prohibited after that open parenthesis '('
#309: FILE: drivers/mmc/host/atmel-mci-regs.h:42:
+# define MCI_CMDR_MAXLAT_64CYC	(  1 << 12)	/* Max latency 64 cycles */

CHECK:BIT_MACRO: Prefer using the BIT macro
#309: FILE: drivers/mmc/host/atmel-mci-regs.h:42:
+# define MCI_CMDR_MAXLAT_64CYC	(  1 << 12)	/* Max latency 64 cycles */

ERROR:SPACING: space prohibited after that open parenthesis '('
#310: FILE: drivers/mmc/host/atmel-mci-regs.h:43:
+# define MCI_CMDR_START_XFER	(  1 << 16)	/* Start data transfer */

CHECK:BIT_MACRO: Prefer using the BIT macro
#310: FILE: drivers/mmc/host/atmel-mci-regs.h:43:
+# define MCI_CMDR_START_XFER	(  1 << 16)	/* Start data transfer */

ERROR:SPACING: space prohibited after that open parenthesis '('
#311: FILE: drivers/mmc/host/atmel-mci-regs.h:44:
+# define MCI_CMDR_STOP_XFER	(  2 << 16)	/* Stop data transfer */

ERROR:SPACING: space prohibited after that open parenthesis '('
#312: FILE: drivers/mmc/host/atmel-mci-regs.h:45:
+# define MCI_CMDR_TRDIR_WRITE	(  0 << 18)	/* Write data */

ERROR:SPACING: space prohibited after that open parenthesis '('
#313: FILE: drivers/mmc/host/atmel-mci-regs.h:46:
+# define MCI_CMDR_TRDIR_READ	(  1 << 18)	/* Read data */

CHECK:BIT_MACRO: Prefer using the BIT macro
#313: FILE: drivers/mmc/host/atmel-mci-regs.h:46:
+# define MCI_CMDR_TRDIR_READ	(  1 << 18)	/* Read data */

ERROR:SPACING: space prohibited after that open parenthesis '('
#314: FILE: drivers/mmc/host/atmel-mci-regs.h:47:
+# define MCI_CMDR_BLOCK		(  0 << 19)	/* Single-block transfer */

ERROR:SPACING: space prohibited after that open parenthesis '('
#315: FILE: drivers/mmc/host/atmel-mci-regs.h:48:
+# define MCI_CMDR_MULTI_BLOCK	(  1 << 19)	/* Multi-block transfer */

CHECK:BIT_MACRO: Prefer using the BIT macro
#315: FILE: drivers/mmc/host/atmel-mci-regs.h:48:
+# define MCI_CMDR_MULTI_BLOCK	(  1 << 19)	/* Multi-block transfer */

ERROR:SPACING: space prohibited after that open parenthesis '('
#316: FILE: drivers/mmc/host/atmel-mci-regs.h:49:
+# define MCI_CMDR_STREAM	(  2 << 19)	/* MMC Stream transfer */

ERROR:SPACING: space prohibited after that open parenthesis '('
#317: FILE: drivers/mmc/host/atmel-mci-regs.h:50:
+# define MCI_CMDR_SDIO_BYTE	(  4 << 19)	/* SDIO Byte transfer */

ERROR:SPACING: space prohibited after that open parenthesis '('
#318: FILE: drivers/mmc/host/atmel-mci-regs.h:51:
+# define MCI_CMDR_SDIO_BLOCK	(  5 << 19)	/* SDIO Block transfer */

ERROR:SPACING: space prohibited after that open parenthesis '('
#319: FILE: drivers/mmc/host/atmel-mci-regs.h:52:
+# define MCI_CMDR_SDIO_SUSPEND	(  1 << 24)	/* SDIO Suspend Command */

CHECK:BIT_MACRO: Prefer using the BIT macro
#319: FILE: drivers/mmc/host/atmel-mci-regs.h:52:
+# define MCI_CMDR_SDIO_SUSPEND	(  1 << 24)	/* SDIO Suspend Command */

ERROR:SPACING: space prohibited after that open parenthesis '('
#320: FILE: drivers/mmc/host/atmel-mci-regs.h:53:
+# define MCI_CMDR_SDIO_RESUME	(  2 << 24)	/* SDIO Resume Command */

ERROR:SPACING: space prohibited after that open parenthesis '('
#334: FILE: drivers/mmc/host/atmel-mci-regs.h:67:
+# define MCI_CMDRDY		(  1 <<   0)	/* Command Ready */

CHECK:BIT_MACRO: Prefer using the BIT macro
#334: FILE: drivers/mmc/host/atmel-mci-regs.h:67:
+# define MCI_CMDRDY		(  1 <<   0)	/* Command Ready */

ERROR:SPACING: space prohibited after that open parenthesis '('
#335: FILE: drivers/mmc/host/atmel-mci-regs.h:68:
+# define MCI_RXRDY		(  1 <<   1)	/* Receiver Ready */

CHECK:BIT_MACRO: Prefer using the BIT macro
#335: FILE: drivers/mmc/host/atmel-mci-regs.h:68:
+# define MCI_RXRDY		(  1 <<   1)	/* Receiver Ready */

ERROR:SPACING: space prohibited after that open parenthesis '('
#336: FILE: drivers/mmc/host/atmel-mci-regs.h:69:
+# define MCI_TXRDY		(  1 <<   2)	/* Transmitter Ready */

CHECK:BIT_MACRO: Prefer using the BIT macro
#336: FILE: drivers/mmc/host/atmel-mci-regs.h:69:
+# define MCI_TXRDY		(  1 <<   2)	/* Transmitter Ready */

ERROR:SPACING: space prohibited after that open parenthesis '('
#337: FILE: drivers/mmc/host/atmel-mci-regs.h:70:
+# define MCI_BLKE		(  1 <<   3)	/* Data Block Ended */

CHECK:BIT_MACRO: Prefer using the BIT macro
#337: FILE: drivers/mmc/host/atmel-mci-regs.h:70:
+# define MCI_BLKE		(  1 <<   3)	/* Data Block Ended */

ERROR:SPACING: space prohibited after that open parenthesis '('
#338: FILE: drivers/mmc/host/atmel-mci-regs.h:71:
+# define MCI_DTIP		(  1 <<   4)	/* Data Transfer In Progress */

CHECK:BIT_MACRO: Prefer using the BIT macro
#338: FILE: drivers/mmc/host/atmel-mci-regs.h:71:
+# define MCI_DTIP		(  1 <<   4)	/* Data Transfer In Progress */

ERROR:SPACING: space prohibited after that open parenthesis '('
#339: FILE: drivers/mmc/host/atmel-mci-regs.h:72:
+# define MCI_NOTBUSY		(  1 <<   5)	/* Data Not Busy */

CHECK:BIT_MACRO: Prefer using the BIT macro
#339: FILE: drivers/mmc/host/atmel-mci-regs.h:72:
+# define MCI_NOTBUSY		(  1 <<   5)	/* Data Not Busy */

ERROR:SPACING: space prohibited after that open parenthesis '('
#340: FILE: drivers/mmc/host/atmel-mci-regs.h:73:
+# define MCI_SDIOIRQA		(  1 <<   8)	/* SDIO IRQ in slot A */

CHECK:BIT_MACRO: Prefer using the BIT macro
#340: FILE: drivers/mmc/host/atmel-mci-regs.h:73:
+# define MCI_SDIOIRQA		(  1 <<   8)	/* SDIO IRQ in slot A */

ERROR:SPACING: space prohibited after that open parenthesis '('
#341: FILE: drivers/mmc/host/atmel-mci-regs.h:74:
+# define MCI_SDIOIRQB		(  1 <<   9)	/* SDIO IRQ in slot B */

CHECK:BIT_MACRO: Prefer using the BIT macro
#341: FILE: drivers/mmc/host/atmel-mci-regs.h:74:
+# define MCI_SDIOIRQB		(  1 <<   9)	/* SDIO IRQ in slot B */

ERROR:SPACING: space prohibited after that open parenthesis '('
#342: FILE: drivers/mmc/host/atmel-mci-regs.h:75:
+# define MCI_RINDE		(  1 <<  16)	/* Response Index Error */

CHECK:BIT_MACRO: Prefer using the BIT macro
#342: FILE: drivers/mmc/host/atmel-mci-regs.h:75:
+# define MCI_RINDE		(  1 <<  16)	/* Response Index Error */

ERROR:SPACING: space prohibited after that open parenthesis '('
#343: FILE: drivers/mmc/host/atmel-mci-regs.h:76:
+# define MCI_RDIRE		(  1 <<  17)	/* Response Direction Error */

CHECK:BIT_MACRO: Prefer using the BIT macro
#343: FILE: drivers/mmc/host/atmel-mci-regs.h:76:
+# define MCI_RDIRE		(  1 <<  17)	/* Response Direction Error */

ERROR:SPACING: space prohibited after that open parenthesis '('
#344: FILE: drivers/mmc/host/atmel-mci-regs.h:77:
+# define MCI_RCRCE		(  1 <<  18)	/* Response CRC Error */

CHECK:BIT_MACRO: Prefer using the BIT macro
#344: FILE: drivers/mmc/host/atmel-mci-regs.h:77:
+# define MCI_RCRCE		(  1 <<  18)	/* Response CRC Error */

ERROR:SPACING: space prohibited after that open parenthesis '('
#345: FILE: drivers/mmc/host/atmel-mci-regs.h:78:
+# define MCI_RENDE		(  1 <<  19)	/* Response End Bit Error */

CHECK:BIT_MACRO: Prefer using the BIT macro
#345: FILE: drivers/mmc/host/atmel-mci-regs.h:78:
+# define MCI_RENDE		(  1 <<  19)	/* Response End Bit Error */

ERROR:SPACING: space prohibited after that open parenthesis '('
#346: FILE: drivers/mmc/host/atmel-mci-regs.h:79:
+# define MCI_RTOE		(  1 <<  20)	/* Response Time-Out Error */

CHECK:BIT_MACRO: Prefer using the BIT macro
#346: FILE: drivers/mmc/host/atmel-mci-regs.h:79:
+# define MCI_RTOE		(  1 <<  20)	/* Response Time-Out Error */

ERROR:SPACING: space prohibited after that open parenthesis '('
#347: FILE: drivers/mmc/host/atmel-mci-regs.h:80:
+# define MCI_DCRCE		(  1 <<  21)	/* Data CRC Error */

CHECK:BIT_MACRO: Prefer using the BIT macro
#347: FILE: drivers/mmc/host/atmel-mci-regs.h:80:
+# define MCI_DCRCE		(  1 <<  21)	/* Data CRC Error */

ERROR:SPACING: space prohibited after that open parenthesis '('
#348: FILE: drivers/mmc/host/atmel-mci-regs.h:81:
+# define MCI_DTOE		(  1 <<  22)	/* Data Time-Out Error */

CHECK:BIT_MACRO: Prefer using the BIT macro
#348: FILE: drivers/mmc/host/atmel-mci-regs.h:81:
+# define MCI_DTOE		(  1 <<  22)	/* Data Time-Out Error */

ERROR:SPACING: space prohibited after that open parenthesis '('
#349: FILE: drivers/mmc/host/atmel-mci-regs.h:82:
+# define MCI_OVRE		(  1 <<  30)	/* RX Overrun Error */

CHECK:BIT_MACRO: Prefer using the BIT macro
#349: FILE: drivers/mmc/host/atmel-mci-regs.h:82:
+# define MCI_OVRE		(  1 <<  30)	/* RX Overrun Error */

ERROR:SPACING: space prohibited after that open parenthesis '('
#350: FILE: drivers/mmc/host/atmel-mci-regs.h:83:
+# define MCI_UNRE		(  1 <<  31)	/* TX Underrun Error */

CHECK:BIT_MACRO: Prefer using the BIT macro
#350: FILE: drivers/mmc/host/atmel-mci-regs.h:83:
+# define MCI_UNRE		(  1 <<  31)	/* TX Underrun Error */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#353: FILE: drivers/mmc/host/atmel-mci-regs.h:86:
+#define mci_readl(port,reg)				\
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#355: FILE: drivers/mmc/host/atmel-mci-regs.h:88:
+#define mci_writel(port,reg,value)			\
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#355: FILE: drivers/mmc/host/atmel-mci-regs.h:88:
+#define mci_writel(port,reg,value)			\
                            ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#365: FILE: drivers/mmc/host/atmel-mci.c:1:
+/*

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#387: FILE: drivers/mmc/host/atmel-mci.c:23:
+#include <asm/io.h>

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'host' may be better as '(host)' to avoid precedence issues
#442: FILE: drivers/mmc/host/atmel-mci.c:78:
+#define atmci_is_completed(host, event)				\
+	test_bit(event, &host->completed_events)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'host' may be better as '(host)' to avoid precedence issues
#444: FILE: drivers/mmc/host/atmel-mci.c:80:
+#define atmci_test_and_clear_pending(host, event)		\
+	test_and_clear_bit(event, &host->pending_events)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'host' may be better as '(host)' to avoid precedence issues
#446: FILE: drivers/mmc/host/atmel-mci.c:82:
+#define atmci_test_and_set_completed(host, event)		\
+	test_and_set_bit(event, &host->completed_events)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'host' may be better as '(host)' to avoid precedence issues
#448: FILE: drivers/mmc/host/atmel-mci.c:84:
+#define atmci_set_completed(host, event)			\
+	set_bit(event, &host->completed_events)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'host' may be better as '(host)' to avoid precedence issues
#450: FILE: drivers/mmc/host/atmel-mci.c:86:
+#define atmci_set_pending(host, event)				\
+	set_bit(event, &host->pending_events)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'host' may be better as '(host)' to avoid precedence issues
#452: FILE: drivers/mmc/host/atmel-mci.c:88:
+#define atmci_clear_pending(host, event)			\
+	clear_bit(event, &host->pending_events)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#455: FILE: drivers/mmc/host/atmel-mci.c:91:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#482: FILE: drivers/mmc/host/atmel-mci.c:118:
+	static unsigned	dtomul_to_shift[] = {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#485: FILE: drivers/mmc/host/atmel-mci.c:121:
+	unsigned	timeout;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#486: FILE: drivers/mmc/host/atmel-mci.c:122:
+	unsigned	dtocyc;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#487: FILE: drivers/mmc/host/atmel-mci.c:123:
+	unsigned	dtomul;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#492: FILE: drivers/mmc/host/atmel-mci.c:128:
+		unsigned shift = dtomul_to_shift[dtomul];

WARNING:LINE_SPACING: Missing a blank line after declarations
#493: FILE: drivers/mmc/host/atmel-mci.c:129:
+		unsigned shift = dtomul_to_shift[dtomul];
+		dtocyc = (timeout + (1 << shift) - 1) >> shift;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#504: FILE: drivers/mmc/host/atmel-mci.c:140:
+	dev_vdbg(&host->mmc->class_dev, "setting timeout to %u cycles\n",
+			dtocyc << dtomul_to_shift[dtomul]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#565: FILE: drivers/mmc/host/atmel-mci.c:201:
+	dev_vdbg(&host->mmc->class_dev,
+			"start command: ARGR=0x%08x CMDR=0x%08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#610: FILE: drivers/mmc/host/atmel-mci.c:246:
+	dev_vdbg(&mmc->class_dev, "BLKR=0x%08x\n",
+			MCI_BCNT(data->blocks) | MCI_BLKLEN(data->blksz));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#634: FILE: drivers/mmc/host/atmel-mci.c:270:
+		dev_warn(&mmc->class_dev, "WARNING: IMR=0x%08x\n",
+				mci_readl(host, IMR));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "host->mrq"
#636: FILE: drivers/mmc/host/atmel-mci.c:272:
+	WARN_ON(host->mrq != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#713: FILE: drivers/mmc/host/atmel-mci.c:349:
+			dev_warn(&mmc->class_dev,
+				"clock %u too slow; using %lu\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#758: FILE: drivers/mmc/host/atmel-mci.c:394:
+		dev_dbg(&mmc->class_dev, "card is %s\n",
+				read_only ? "read-only" : "read-write");

WARNING:SPLIT_STRING: quoted string split across lines
#762: FILE: drivers/mmc/host/atmel-mci.c:398:
+			"no pin for checking read-only switch."
+			" Assuming write-enable.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#775: FILE: drivers/mmc/host/atmel-mci.c:411:
+static void atmci_command_complete(struct atmel_mci *host,
+			struct mmc_command *cmd, u32 status)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#824: FILE: drivers/mmc/host/atmel-mci.c:460:
+	dev_vdbg(&host->pdev->dev, "detect change: %d (was %d)\n",
+			present, host->present);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#850: FILE: drivers/mmc/host/atmel-mci.c:486:
+			if (mrq->data && !atmci_is_completed(host,
+						EVENT_DATA_COMPLETE)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#855: FILE: drivers/mmc/host/atmel-mci.c:491:
+			if (mrq->stop && !atmci_is_completed(host,
+						EVENT_STOP_COMPLETE))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#874: FILE: drivers/mmc/host/atmel-mci.c:510:
+	dev_vdbg(&mmc->class_dev,
+		"tasklet: pending/completed/mask %lx/%lx/%x\n",

WARNING:MEMORY_BARRIER: memory barrier without comment
#884: FILE: drivers/mmc/host/atmel-mci.c:520:
+		smp_wmb();

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#889: FILE: drivers/mmc/host/atmel-mci.c:525:
+		if (!mrq->cmd->error && mrq->stop
+				&& atmci_is_completed(host, EVENT_XFER_COMPLETE)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#890: FILE: drivers/mmc/host/atmel-mci.c:526:
+				&& atmci_is_completed(host, EVENT_XFER_COMPLETE)
+				&& !atmci_test_and_set_completed(host,

WARNING:MEMORY_BARRIER: memory barrier without comment
#900: FILE: drivers/mmc/host/atmel-mci.c:536:
+		smp_wmb();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#914: FILE: drivers/mmc/host/atmel-mci.c:550:
+			dev_dbg(&mmc->class_dev,
+					"data timeout error\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#921: FILE: drivers/mmc/host/atmel-mci.c:557:
+			dev_dbg(&mmc->class_dev,
+					"data FIFO error (status=%08x)\n",

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#927: FILE: drivers/mmc/host/atmel-mci.c:563:
+		if (host->present && data->stop
+				&& atmci_is_completed(host, EVENT_CMD_COMPLETE)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#928: FILE: drivers/mmc/host/atmel-mci.c:564:
+				&& atmci_is_completed(host, EVENT_CMD_COMPLETE)
+				&& !atmci_test_and_set_completed(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#928: FILE: drivers/mmc/host/atmel-mci.c:564:
+				&& !atmci_test_and_set_completed(

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#968: FILE: drivers/mmc/host/atmel-mci.c:604:
+				host->sg = sg = sg_next(sg);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LINE_SPACING: Missing a blank line after declarations
#977: FILE: drivers/mmc/host/atmel-mci.c:613:
+			unsigned int remaining = sg->length - offset;
+			memcpy(buf + offset, &value, remaining);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#981: FILE: drivers/mmc/host/atmel-mci.c:617:
+			host->sg = sg = sg_next(sg);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1013: FILE: drivers/mmc/host/atmel-mci.c:649:
+	if (data->stop && atmci_is_completed(host, EVENT_CMD_COMPLETE)
+			&& !atmci_test_and_set_completed(host, EVENT_STOP_SENT))

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1035: FILE: drivers/mmc/host/atmel-mci.c:671:
+				host->sg = sg = sg_next(sg);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1049: FILE: drivers/mmc/host/atmel-mci.c:685:
+			host->sg = sg = sg_next(sg);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1084: FILE: drivers/mmc/host/atmel-mci.c:720:
+	if (data->stop && atmci_is_completed(host, EVENT_CMD_COMPLETE)
+			&& !atmci_test_and_set_completed(host, EVENT_STOP_SENT))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1253: FILE: drivers/mmc/host/atmel-mci.c:889:
+		setup_timer(&host->detect_timer, atmci_detect_change,
+				(unsigned long)host);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1256: FILE: drivers/mmc/host/atmel-mci.c:892:
+		ret = request_irq(gpio_to_irq(host->detect_pin),
+				atmci_detect_interrupt,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1269: FILE: drivers/mmc/host/atmel-mci.c:905:
+	dev_info(&mmc->class_dev,
+			"Atmel MCI controller at 0x%08lx irq %d\n",

WARNING:MEMORY_BARRIER: memory barrier without comment
#1295: FILE: drivers/mmc/host/atmel-mci.c:931:
+			smp_wmb();

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1369: FILE: include/asm-avr32/atmel-mci.h:1:
+#ifndef __ASM_AVR32_ATMEL_MCI_H

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000261040.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 50 errors, 17 warnings, 68 checks, 1213 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000261040.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
