WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#106: FILE: drivers/misc/sgi-xp/xp.h:46:
+#define DBUG_ON(condition)	BUG_ON(condition)

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:CAMELCASE: Avoid CamelCase: <xpNeedMoreInfo>
#119: FILE: drivers/misc/sgi-xp/xp.h:208:
+	xpNeedMoreInfo,		/* 57: more info is needed by SAL */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <xpUnknownReason>
#121: FILE: drivers/misc/sgi-xp/xp.h:210:
+	xpUnknownReason		/* 58: unknown reason - must be last in enum */

WARNING:SPACING: Unnecessary space before function pointer arguments
#133: FILE: drivers/misc/sgi-xp/xp.h:353:
+extern int (*xp_cpu_to_nasid) (int);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#133: FILE: drivers/misc/sgi-xp/xp.h:353:
+extern int (*xp_cpu_to_nasid) (int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: Unnecessary space before function pointer arguments
#167: FILE: drivers/misc/sgi-xp/xpc_main.c:172:
+enum xp_retval (*xpc_get_partition_rsvd_page_pa) (u64 buf, u64 *cookie,

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#235: FILE: drivers/misc/sgi-xp/xpc_main.c:976:
+		udelay(200);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:CAMELCASE: Avoid CamelCase: <local_GPs>
#328: FILE: drivers/misc/sgi-xp/xpc.h:503:
+	struct xpc_gp_sn2 *local_GPs;	/* local Get/Put values */

CHECK:CAMELCASE: Avoid CamelCase: <remote_GPs>
#331: FILE: drivers/misc/sgi-xp/xpc.h:505:
+	struct xpc_gp_sn2 *remote_GPs;	/* copy of remote partition's local */

WARNING:SPACING: Unnecessary space before function pointer arguments
#339: FILE: drivers/misc/sgi-xp/xpc.h:626:
+extern enum xp_retval (*xpc_get_partition_rsvd_page_pa) (u64, u64 *, u64 *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#339: FILE: drivers/misc/sgi-xp/xpc.h:626:
+extern enum xp_retval (*xpc_get_partition_rsvd_page_pa) (u64, u64 *, u64 *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64 *' should also have an identifier name
#339: FILE: drivers/misc/sgi-xp/xpc.h:626:
+extern enum xp_retval (*xpc_get_partition_rsvd_page_pa) (u64, u64 *, u64 *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64 *' should also have an identifier name
#339: FILE: drivers/misc/sgi-xp/xpc.h:626:
+extern enum xp_retval (*xpc_get_partition_rsvd_page_pa) (u64, u64 *, u64 *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#339: FILE: drivers/misc/sgi-xp/xpc.h:626:
+extern enum xp_retval (*xpc_get_partition_rsvd_page_pa) (u64, u64 *, u64 *,

CHECK:CAMELCASE: Avoid CamelCase: <xpSuccess>
#364: FILE: drivers/misc/sgi-xp/xpc_sn2.c:179:
+	return (ret == 0) ? xpSuccess : xpPioReadError;

CHECK:CAMELCASE: Avoid CamelCase: <xpPioReadError>
#364: FILE: drivers/misc/sgi-xp/xpc_sn2.c:179:
+	return (ret == 0) ? xpSuccess : xpPioReadError;

CHECK:CAMELCASE: Avoid CamelCase: <xpSalError>
#393: FILE: drivers/misc/sgi-xp/xpc_sn2.c:592:
+		ret = xpSalError;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#398: FILE: drivers/misc/sgi-xp/xpc_sn2.c:597:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#454: FILE: drivers/misc/sgi-xp/xp_main.c:47:
+int (*xp_cpu_to_nasid) (int cpuid);

WARNING:SPLIT_STRING: quoted string split across lines
#556: FILE: drivers/misc/sgi-xp/xpc_partition.c:80:
+		dev_dbg(xpc_part, "SAL returned with ret=%d, cookie=0x%016lx, "
+			"address=0x%016lx, len=0x%016lx\n", ret,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#570: FILE: drivers/misc/sgi-xp/xpc_partition.c:95:
 				dev_err(xpc_part, "unable to kmalloc "
+					"len=0x%016lx\n",

CHECK:CAMELCASE: Avoid CamelCase: <xpNoMemory>
#572: FILE: drivers/misc/sgi-xp/xpc_partition.c:97:
+				ret = xpNoMemory;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#611: FILE: drivers/misc/sgi-xp/xpc_partition.c:146:
+	BUG_ON(rp->SAL_partid != xp_partition_id);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000257909.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 13 warnings, 10 checks, 641 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000257909.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
