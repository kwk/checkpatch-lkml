WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
1) Introduces a new method in 'struct dentry_operations'. This method called 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#82: FILE: include/linux/dcache.h:136:
+	char *(*d_dname)(struct dentry *, char *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#82: FILE: include/linux/dcache.h:136:
+	char *(*d_dname)(struct dentry *, char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#82: FILE: include/linux/dcache.h:136:
+	char *(*d_dname)(struct dentry *, char *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#93: FILE: include/linux/dcache.h:300:
+extern char *dynamic_dname(struct dentry *, char *, int, const char *, ...);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#93: FILE: include/linux/dcache.h:300:
+extern char *dynamic_dname(struct dentry *, char *, int, const char *, ...);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#93: FILE: include/linux/dcache.h:300:
+extern char *dynamic_dname(struct dentry *, char *, int, const char *, ...);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#93: FILE: include/linux/dcache.h:300:
+extern char *dynamic_dname(struct dentry *, char *, int, const char *, ...);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#93: FILE: include/linux/dcache.h:300:
+extern char *dynamic_dname(struct dentry *, char *, int, const char *, ...);

WARNING:TYPO_SPELLING: 'Usefull' may be misspelled - perhaps 'Useful'?
#122: FILE: Documentation/filesystems/vfs.txt:864:
+	Usefull for some pseudo filesystems (sockfs, pipefs, ...) to delay
 	^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#188: FILE: fs/dcache.c:1852:
+char *dynamic_dname(struct dentry *dentry, char *buffer, int buflen,
+			const char *fmt, ...)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#261: FILE: net/socket.c:319:
+/*
+ * sockfs_dname() is called from d_path().

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000457865.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 10 warnings, 2 checks, 190 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000457865.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
