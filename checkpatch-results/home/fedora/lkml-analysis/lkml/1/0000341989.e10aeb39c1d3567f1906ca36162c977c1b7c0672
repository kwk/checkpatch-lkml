CHECK:ALLOC_SIZEOF_STRUCT: Prefer vmalloc(sizeof(*cpuid_entries)...) over vmalloc(sizeof(struct kvm_cpuid_entry)...)
#127: FILE: drivers/kvm/x86.c:751:
+	cpuid_entries = vmalloc(sizeof(struct kvm_cpuid_entry) * cpuid->nent);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#157: FILE: drivers/kvm/x86.c:781:
+static int kvm_vcpu_ioctl_set_cpuid2(struct kvm_vcpu *vcpu,
+				    struct kvm_cpuid2 *cpuid,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#179: FILE: drivers/kvm/x86.c:801:
+static int kvm_vcpu_ioctl_get_cpuid2(struct kvm_vcpu *vcpu,
+				    struct kvm_cpuid2 *cpuid,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#189: FILE: drivers/kvm/x86.c:811:
+	if (copy_to_user(entries, &vcpu->cpuid_entries,
+			   vcpu->cpuid_nent * sizeof(struct kvm_cpuid_entry2)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#204: FILE: drivers/kvm/x86.c:826:
+static void do_cpuid_1_ent(struct kvm_cpuid_entry2 *entry, u32 function,
+			  u32 index)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#209: FILE: drivers/kvm/x86.c:831:
+	cpuid_count(entry->function, entry->index,
+		&entry->eax, &entry->ebx, &entry->ecx, &entry->edx);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#263: FILE: drivers/kvm/x86.c:885:
+	 * in kvm_emulate_cpuid() using KVM_CPUID_FLAG_STATE_READ_NEXT */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#320: FILE: drivers/kvm/x86.c:942:
+static int kvm_vm_ioctl_get_supported_cpuid(struct kvm *kvm,
+				    struct kvm_cpuid2 *cpuid,

CHECK:ALLOC_SIZEOF_STRUCT: Prefer vmalloc(sizeof(*cpuid_entries)...) over vmalloc(sizeof(struct kvm_cpuid_entry2)...)
#330: FILE: drivers/kvm/x86.c:952:
+	cpuid_entries = vmalloc(sizeof(struct kvm_cpuid_entry2) * cpuid->nent);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#338: FILE: drivers/kvm/x86.c:960:
+		do_cpuid_ent(&cpuid_entries[nent], func, 0,
+				&nent, cpuid->nent);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#347: FILE: drivers/kvm/x86.c:969:
+		do_cpuid_ent(&cpuid_entries[nent], func, 0,
+			       &nent, cpuid->nent);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#350: FILE: drivers/kvm/x86.c:972:
+	if (copy_to_user(entries, cpuid_entries,
+			nent * sizeof(struct kvm_cpuid_entry2)))

WARNING:SIZEOF_PARENTHESIS: sizeof cpuid should be sizeof(cpuid)
#373: FILE: drivers/kvm/x86.c:1054:
+		if (copy_from_user(&cpuid, cpuid_arg, sizeof cpuid))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#376: FILE: drivers/kvm/x86.c:1057:
+		r = kvm_vcpu_ioctl_set_cpuid2(vcpu, &cpuid,
+				cpuid_arg->entries);

WARNING:SIZEOF_PARENTHESIS: sizeof cpuid should be sizeof(cpuid)
#386: FILE: drivers/kvm/x86.c:1067:
+		if (copy_from_user(&cpuid, cpuid_arg, sizeof cpuid))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#389: FILE: drivers/kvm/x86.c:1070:
+		r = kvm_vcpu_ioctl_get_cpuid2(vcpu, &cpuid,
+				cpuid_arg->entries);

WARNING:SIZEOF_PARENTHESIS: sizeof cpuid should be sizeof(cpuid)
#393: FILE: drivers/kvm/x86.c:1074:
+		if (copy_to_user(cpuid_arg, &cpuid, sizeof cpuid))

WARNING:SIZEOF_PARENTHESIS: sizeof cpuid should be sizeof(cpuid)
#410: FILE: drivers/kvm/x86.c:1379:
+		if (copy_from_user(&cpuid, cpuid_arg, sizeof cpuid))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#413: FILE: drivers/kvm/x86.c:1382:
+		r = kvm_vm_ioctl_get_supported_cpuid(kvm, &cpuid,
+			cpuid_arg->entries);

WARNING:SIZEOF_PARENTHESIS: sizeof cpuid should be sizeof(cpuid)
#418: FILE: drivers/kvm/x86.c:1387:
+		if (copy_to_user(cpuid_arg, &cpuid, sizeof cpuid))

WARNING:LINE_SPACING: Missing a blank line after declarations
#439: FILE: drivers/kvm/x86.c:2198:
+		struct kvm_cpuid_entry2 *ej = &vcpu->cpuid_entries[j];
+		if (ej->function == e->function) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#448: FILE: drivers/kvm/x86.c:2207:
+ * should be read next (if it's stateful) */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#450: FILE: drivers/kvm/x86.c:2209:
+static int is_matching_cpuid_entry(struct kvm_cpuid_entry2 *e,
+	u32 function, u32 index)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#457: FILE: drivers/kvm/x86.c:2216:
+	if ((e->flags & KVM_CPUID_FLAG_STATEFUL_FUNC) &&
+		!(e->flags & KVM_CPUID_FLAG_STATE_READ_NEXT))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000341989.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 16 checks, 461 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000341989.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
