WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#43: FILE: drivers/video/via/accel.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#59: FILE: drivers/video/via/accel.c:17:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#61: FILE: drivers/video/via/accel.c:19:
+ * 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:CAMELCASE: Avoid CamelCase: <dwVQStartAddr>
#80: FILE: drivers/video/via/accel.c:38:
+	u32 dwVQStartAddr, dwVQEndAddr;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <dwVQEndAddr>
#80: FILE: drivers/video/via/accel.c:38:
+	u32 dwVQStartAddr, dwVQEndAddr;

CHECK:CAMELCASE: Avoid CamelCase: <dwVQLen>
#81: FILE: drivers/video/via/accel.c:39:
+	u32 dwVQLen, dwVQStartL, dwVQEndL, dwVQStartEndH;

CHECK:CAMELCASE: Avoid CamelCase: <dwVQStartL>
#81: FILE: drivers/video/via/accel.c:39:
+	u32 dwVQLen, dwVQStartL, dwVQEndL, dwVQStartEndH;

CHECK:CAMELCASE: Avoid CamelCase: <dwVQEndL>
#81: FILE: drivers/video/via/accel.c:39:
+	u32 dwVQLen, dwVQStartL, dwVQEndL, dwVQStartEndH;

CHECK:CAMELCASE: Avoid CamelCase: <dwVQStartEndH>
#81: FILE: drivers/video/via/accel.c:39:
+	u32 dwVQLen, dwVQStartL, dwVQEndL, dwVQStartEndH;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viaparinfo->bpp'
#212: FILE: drivers/video/via/accel.c:170:
+						   viaparinfo->
+						   bpp >> 3) >> 3) << 16)));

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

CHECK:CAMELCASE: Avoid CamelCase: <dwGEMode>
#217: FILE: drivers/video/via/accel.c:175:
+	u32 dwGEMode;

CHECK:CAMELCASE: Avoid CamelCase: <Status>
#247: FILE: drivers/video/via/accel.c:205:
+void viafb_show_hw_cursor(struct fb_info *info, int Status)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 15)
#276: FILE: drivers/video/via/accel.c:234:
+	while (!(MMIO_IN32(VIA_REG_STATUS) & VIA_VR_QUEUE_BUSY)
[...]
+	       cpu_relax();

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#277: FILE: drivers/video/via/accel.c:235:
+	while (!(MMIO_IN32(VIA_REG_STATUS) & VIA_VR_QUEUE_BUSY)
+	       && (loop++ < MAXLOOP))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 15)
#280: FILE: drivers/video/via/accel.c:238:
+	while ((MMIO_IN32(VIA_REG_STATUS) &
[...]
+	       cpu_relax();

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#291: FILE: drivers/video/via/accel.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#307: FILE: drivers/video/via/accel.h:17:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#309: FILE: drivers/video/via/accel.h:19:
+ * 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#327: FILE: drivers/video/via/accel.h:37:
+#define MMIO_OUT32(reg, val) writel(val, viaparinfo->io_virt + reg)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#328: FILE: drivers/video/via/accel.h:38:
+#define MMIO_IN32(reg)      readl(viaparinfo->io_virt + reg)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#465: FILE: drivers/video/via/accel.h:175:
+void set_2d_color_depth(int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000261290.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 6 warnings, 11 checks, 425 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000261290.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
