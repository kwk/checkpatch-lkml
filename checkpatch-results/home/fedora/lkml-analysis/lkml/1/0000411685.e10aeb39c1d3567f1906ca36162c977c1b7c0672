WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#107: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#112: FILE: drivers/video/uvesafb.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#144: FILE: drivers/video/uvesafb.c:33:
+};
+static char v86d_path[PATH_MAX] = "/sbin/v86d";

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#147: FILE: drivers/video/uvesafb.c:36:
+static struct fb_fix_screeninfo uvesafb_fix __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#153: FILE: drivers/video/uvesafb.c:42:
+static int mtrr		__devinitdata = 3; /* enable mtrr by default */

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#154: FILE: drivers/video/uvesafb.c:43:
+static int blank	__devinitdata = 1; /* enable blanking by default */

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#155: FILE: drivers/video/uvesafb.c:44:
+static int ypan		__devinitdata = 1; /* 0: scroll, 1: ypan, 2: ywrap */

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#156: FILE: drivers/video/uvesafb.c:45:
+static int pmi_setpal	__devinitdata = 1; /* use PMI for palette changes */

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#157: FILE: drivers/video/uvesafb.c:46:
+static int nocrtc	__devinitdata; /* ignore CRTC settings */

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#158: FILE: drivers/video/uvesafb.c:47:
+static int noedid	__devinitdata; /* don't try DDC transfers */

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#159: FILE: drivers/video/uvesafb.c:48:
+static int vram_remap	__devinitdata; /* set amt. of memory to be used */

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#160: FILE: drivers/video/uvesafb.c:49:
+static int vram_total	__devinitdata; /* set total amount of memory */

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#161: FILE: drivers/video/uvesafb.c:50:
+static u16 maxclk	__devinitdata; /* maximum pixel clock */

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#162: FILE: drivers/video/uvesafb.c:51:
+static u16 maxvf	__devinitdata; /* maximum vertical frequency */

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#163: FILE: drivers/video/uvesafb.c:52:
+static u16 maxhf	__devinitdata; /* maximum horizontal frequency */

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#164: FILE: drivers/video/uvesafb.c:53:
+static u16 vbemode	__devinitdata; /* force use of a specific VBE mode */

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#165: FILE: drivers/video/uvesafb.c:54:
+static char *mode_option __devinitdata;

WARNING:RETURN_VOID: void function return statements are not generally useful
#213: FILE: drivers/video/uvesafb.c:102:
+	return;
+}

WARNING:STATIC_CONST_CHAR_ARRAY: char * array declaration might be better as static const
#217: FILE: drivers/video/uvesafb.c:106:
+	char *envp[] = {

WARNING:STATIC_CONST_CHAR_ARRAY: char * array declaration might be better as static const
#223: FILE: drivers/video/uvesafb.c:112:
+	char *argv[] = {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#259: FILE: drivers/video/uvesafb.c:148:
+		printk(KERN_WARNING "uvesafb: message too long (%d), "

WARNING:SPLIT_STRING: quoted string split across lines
#260: FILE: drivers/video/uvesafb.c:149:
+		printk(KERN_WARNING "uvesafb: message too long (%d), "
+			"can't execute task\n", (int)(sizeof(*m) + len));

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#307: FILE: drivers/video/uvesafb.c:196:
+			printk(KERN_ERR "uvesafb: failed to execute %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#308: FILE: drivers/video/uvesafb.c:197:
+			printk(KERN_ERR "uvesafb: failed to execute %s\n",
+					v86d_path);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#309: FILE: drivers/video/uvesafb.c:198:
+			printk(KERN_ERR "uvesafb: make sure that the v86d "

WARNING:SPLIT_STRING: quoted string split across lines
#310: FILE: drivers/video/uvesafb.c:199:
+			printk(KERN_ERR "uvesafb: make sure that the v86d "
+					"helper is installed and executable\n");

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#336: FILE: drivers/video/uvesafb.c:225:
+		if (task->done)
+			kfree(task->done);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#371: FILE: drivers/video/uvesafb.c:260:
+static void uvesafb_setup_var(struct fb_var_screeninfo *var,
+		struct fb_info *info, struct vbe_mode_ib *mode)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#426: FILE: drivers/video/uvesafb.c:315:
+static int uvesafb_vbe_find_mode(struct uvesafb_par *par,
+		int xres, int yres, int depth, unsigned char flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#450: FILE: drivers/video/uvesafb.c:339:
+	if (flags & UVESAFB_EXACT_DEPTH &&
+			par->vbe_modes[match].depth != depth)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#490: FILE: drivers/video/uvesafb.c:379:
+		printk(KERN_WARNING "uvesafb: VBE get state call "

WARNING:SPLIT_STRING: quoted string split across lines
#491: FILE: drivers/video/uvesafb.c:380:
+		printk(KERN_WARNING "uvesafb: VBE get state call "
+				"failed (eax=0x%x, err=%d)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#522: FILE: drivers/video/uvesafb.c:411:
+		printk(KERN_WARNING "vesafb: VBE state restore call "

WARNING:SPLIT_STRING: quoted string split across lines
#523: FILE: drivers/video/uvesafb.c:412:
+		printk(KERN_WARNING "vesafb: VBE state restore call "
+				"failed (eax=0x%x, err=%d)\n",

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#529: FILE: drivers/video/uvesafb.c:418:
+static int __devinit uvesafb_vbe_getinfo(struct uvesafb_ktask *task,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#530: FILE: drivers/video/uvesafb.c:419:
+static int __devinit uvesafb_vbe_getinfo(struct uvesafb_ktask *task,
+		struct uvesafb_par *par)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#542: FILE: drivers/video/uvesafb.c:431:
+		printk(KERN_ERR "uvesafb: Getting VBE info block failed "

WARNING:SPLIT_STRING: quoted string split across lines
#543: FILE: drivers/video/uvesafb.c:432:
+		printk(KERN_ERR "uvesafb: Getting VBE info block failed "
+				"(eax=0x%x, err=%d)\n", (u32)task->t.regs.eax,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#549: FILE: drivers/video/uvesafb.c:438:
+		printk(KERN_ERR "uvesafb: Sorry, pre-VBE 2.0 cards are "

WARNING:SPLIT_STRING: quoted string split across lines
#550: FILE: drivers/video/uvesafb.c:439:
+		printk(KERN_ERR "uvesafb: Sorry, pre-VBE 2.0 cards are "
+				"not supported.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#555: FILE: drivers/video/uvesafb.c:444:
+		printk(KERN_ERR "uvesafb: Missing mode list!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#559: FILE: drivers/video/uvesafb.c:448:
+	printk(KERN_INFO "uvesafb: ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#567: FILE: drivers/video/uvesafb.c:456:
+		printk("%s, ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#568: FILE: drivers/video/uvesafb.c:457:
+		printk("%s, ",
+			((char *)task->buf) + par->vbe_ib.oem_vendor_name_ptr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#571: FILE: drivers/video/uvesafb.c:460:
+		printk("%s, ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#572: FILE: drivers/video/uvesafb.c:461:
+		printk("%s, ",
+			((char *)task->buf) + par->vbe_ib.oem_product_name_ptr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#575: FILE: drivers/video/uvesafb.c:464:
+		printk("%s, ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#576: FILE: drivers/video/uvesafb.c:465:
+		printk("%s, ",
+			((char *)task->buf) + par->vbe_ib.oem_product_rev_ptr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#579: FILE: drivers/video/uvesafb.c:468:
+		printk("OEM: %s, ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#580: FILE: drivers/video/uvesafb.c:469:
+		printk("OEM: %s, ",
+			((char *)task->buf) + par->vbe_ib.oem_string_ptr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#582: FILE: drivers/video/uvesafb.c:471:
+	printk("VBE v%d.%d\n", ((par->vbe_ib.vbe_version & 0xff00) >> 8),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#583: FILE: drivers/video/uvesafb.c:472:
+	printk("VBE v%d.%d\n", ((par->vbe_ib.vbe_version & 0xff00) >> 8),
+			par->vbe_ib.vbe_version & 0xff);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#588: FILE: drivers/video/uvesafb.c:477:
+static int __devinit uvesafb_vbe_getmodes(struct uvesafb_ktask *task,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#589: FILE: drivers/video/uvesafb.c:478:
+static int __devinit uvesafb_vbe_getmodes(struct uvesafb_ktask *task,
+		struct uvesafb_par *par)

CHECK:SPACING: No space is necessary after a cast
#597: FILE: drivers/video/uvesafb.c:486:
+	mode = (u16 *) (((u8 *)&par->vbe_ib) + par->vbe_ib.mode_list_ptr);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*par->vbe_modes)...) over kzalloc(sizeof(struct vbe_mode_ib)...)
#603: FILE: drivers/video/uvesafb.c:492:
+	par->vbe_modes = kzalloc(sizeof(struct vbe_mode_ib) *

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: No space is necessary after a cast
#609: FILE: drivers/video/uvesafb.c:498:
+	mode = (u16 *) (((u8 *)&par->vbe_ib) + par->vbe_ib.mode_list_ptr);

CHECK:SPACING: No space is necessary after a cast
#615: FILE: drivers/video/uvesafb.c:504:
+		task->t.regs.ecx = (u32) *mode;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#622: FILE: drivers/video/uvesafb.c:511:
+			printk(KERN_ERR "uvesafb: Getting mode info block "

WARNING:SPLIT_STRING: quoted string split across lines
#623: FILE: drivers/video/uvesafb.c:512:
+			printk(KERN_ERR "uvesafb: Getting mode info block "
+				"for mode 0x%x failed (eax=0x%x, err=%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#637: FILE: drivers/video/uvesafb.c:526:
+		if ((mib->mode_attr & VBE_MODE_MASK) == VBE_MODE_MASK &&
+				 mib->bits_per_pixel >= 8)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#662: FILE: drivers/video/uvesafb.c:551:
+static int __devinit uvesafb_vbe_getpmi(struct uvesafb_ktask *task,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#663: FILE: drivers/video/uvesafb.c:552:
+static int __devinit uvesafb_vbe_getpmi(struct uvesafb_ktask *task,
+		struct uvesafb_par *par)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#673: FILE: drivers/video/uvesafb.c:562:
+		par->pmi_setpal = par->ypan = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#679: FILE: drivers/video/uvesafb.c:568:
+		printk(KERN_INFO "uvesafb: protected mode interface info at "

WARNING:SPLIT_STRING: quoted string split across lines
#680: FILE: drivers/video/uvesafb.c:569:
+		printk(KERN_INFO "uvesafb: protected mode interface info at "
+				 "%04x:%04x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#682: FILE: drivers/video/uvesafb.c:571:
+		printk(KERN_INFO "uvesafb: pmi: set display start = %p, "

WARNING:SPLIT_STRING: quoted string split across lines
#683: FILE: drivers/video/uvesafb.c:572:
+		printk(KERN_INFO "uvesafb: pmi: set display start = %p, "
+				 "set palette = %p\n", par->pmi_start,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#687: FILE: drivers/video/uvesafb.c:576:
+			printk(KERN_INFO "uvesafb: pmi: ports = ");

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#688: FILE: drivers/video/uvesafb.c:577:
+			for (i = par->pmi_base[3]/2;
 			                         ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#690: FILE: drivers/video/uvesafb.c:579:
+				printk("%x ", par->pmi_base[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#691: FILE: drivers/video/uvesafb.c:580:
+			printk("\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#694: FILE: drivers/video/uvesafb.c:583:
+				printk(KERN_INFO "uvesafb: can't handle memory"

WARNING:SPLIT_STRING: quoted string split across lines
#695: FILE: drivers/video/uvesafb.c:584:
+				printk(KERN_INFO "uvesafb: can't handle memory"
+						 " requests, pmi disabled\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#696: FILE: drivers/video/uvesafb.c:585:
+				par->ypan = par->pmi_setpal = 0;

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#708: FILE: drivers/video/uvesafb.c:597:
+static int __devinit uvesafb_is_valid_mode(struct fb_videomode *mode,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#709: FILE: drivers/video/uvesafb.c:598:
+static int __devinit uvesafb_is_valid_mode(struct fb_videomode *mode,
+		struct fb_info *info)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#718: FILE: drivers/video/uvesafb.c:607:
+	if (uvesafb_vbe_find_mode(info->par, mode->xres, mode->yres, 8,
+				UVESAFB_EXACT_RES) == -1)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#724: FILE: drivers/video/uvesafb.c:613:
+static int __devinit uvesafb_vbe_getedid(struct uvesafb_ktask *task,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#725: FILE: drivers/video/uvesafb.c:614:
+static int __devinit uvesafb_vbe_getedid(struct uvesafb_ktask *task,
+		struct fb_info *info)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#745: FILE: drivers/video/uvesafb.c:634:
+		printk(KERN_INFO "uvesafb: VBIOS/hardware supports both "

WARNING:SPLIT_STRING: quoted string split across lines
#746: FILE: drivers/video/uvesafb.c:635:
+		printk(KERN_INFO "uvesafb: VBIOS/hardware supports both "
+				 "DDC1 and DDC2 transfers\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#748: FILE: drivers/video/uvesafb.c:637:
+		printk(KERN_INFO "uvesafb: VBIOS/hardware supports DDC2 "

WARNING:SPLIT_STRING: quoted string split across lines
#749: FILE: drivers/video/uvesafb.c:638:
+		printk(KERN_INFO "uvesafb: VBIOS/hardware supports DDC2 "
+				 "transfers\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#751: FILE: drivers/video/uvesafb.c:640:
+		printk(KERN_INFO "uvesafb: VBIOS/hardware supports DDC1 "

WARNING:SPLIT_STRING: quoted string split across lines
#752: FILE: drivers/video/uvesafb.c:641:
+		printk(KERN_INFO "uvesafb: VBIOS/hardware supports DDC1 "
+				 "transfers\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#754: FILE: drivers/video/uvesafb.c:643:
+		printk(KERN_INFO "uvesafb: VBIOS/hardware doesn't support "

WARNING:SPLIT_STRING: quoted string split across lines
#755: FILE: drivers/video/uvesafb.c:644:
+		printk(KERN_INFO "uvesafb: VBIOS/hardware doesn't support "
+				 "DDC transfers\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#761: FILE: drivers/video/uvesafb.c:650:
+	task->t.regs.ecx = task->t.regs.edx = 0;

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#788: FILE: drivers/video/uvesafb.c:677:
+static void __devinit uvesafb_vbe_getmonspecs(struct uvesafb_ktask *task,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#789: FILE: drivers/video/uvesafb.c:678:
+static void __devinit uvesafb_vbe_getmonspecs(struct uvesafb_ktask *task,
+		struct fb_info *info)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#823: FILE: drivers/video/uvesafb.c:712:
+		printk(KERN_INFO

WARNING:SPLIT_STRING: quoted string split across lines
#825: FILE: drivers/video/uvesafb.c:714:
+			"uvesafb: monitor limits: vf = %d Hz, hf = %d kHz, "
+			"clk = %d MHz\n", info->monspecs.vfmax,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#829: FILE: drivers/video/uvesafb.c:718:
+		printk(KERN_INFO "uvesafb: no monitor limits have been set\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#858: FILE: drivers/video/uvesafb.c:747:
+			fb_add_videomode(&info->monspecs.modedb[i],
+					&info->modelist);

WARNING:RETURN_VOID: void function return statements are not generally useful
#862: FILE: drivers/video/uvesafb.c:751:
+	return;
+}

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#864: FILE: drivers/video/uvesafb.c:753:
+static void __devinit uvesafb_vbe_getstatesize(struct uvesafb_ktask *task,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#865: FILE: drivers/video/uvesafb.c:754:
+static void __devinit uvesafb_vbe_getstatesize(struct uvesafb_ktask *task,
+		struct uvesafb_par *par)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#883: FILE: drivers/video/uvesafb.c:772:
+		printk(KERN_WARNING "uvesafb: VBE state buffer size "

WARNING:SPLIT_STRING: quoted string split across lines
#884: FILE: drivers/video/uvesafb.c:773:
+		printk(KERN_WARNING "uvesafb: VBE state buffer size "
+			"cannot be determined (eax=0x%x, err=%d)\n",

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#893: FILE: drivers/video/uvesafb.c:782:
+static int __devinit uvesafb_vbe_init(struct fb_info *info)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#920: FILE: drivers/video/uvesafb.c:809:
+	par->pmi_setpal = par->ypan = 0;

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#931: FILE: drivers/video/uvesafb.c:820:
+static int __devinit uvesafb_vbe_init_mode(struct fb_info *info)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#944: FILE: drivers/video/uvesafb.c:833:
+				fb_get_mode(FB_VSYNCTIMINGS | FB_IGNOREMON, 60,
+							&info->var, info);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#954: FILE: drivers/video/uvesafb.c:843:
+		printk(KERN_INFO "uvesafb: requested VBE mode 0x%x is "

WARNING:SPLIT_STRING: quoted string split across lines
#955: FILE: drivers/video/uvesafb.c:844:
+		printk(KERN_INFO "uvesafb: requested VBE mode 0x%x is "
+				 "unavailable\n", vbemode);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#968: FILE: drivers/video/uvesafb.c:857:
+	mode = kzalloc(i * sizeof(*mode), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#981: FILE: drivers/video/uvesafb.c:870:
+		i = fb_find_mode(&info->var, info, mode_option, mode, i,
+			NULL, 8);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1005: FILE: drivers/video/uvesafb.c:894:
+	modeid = uvesafb_vbe_find_mode(par, info->var.xres, info->var.yres,
+			info->var.bits_per_pixel, UVESAFB_EXACT_RES);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1019: FILE: drivers/video/uvesafb.c:908:
+		fb_get_mode(FB_VSYNCTIMINGS | FB_IGNOREMON, 60,
+					&info->var, info);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1025: FILE: drivers/video/uvesafb.c:914:
+static int uvesafb_setpalette(struct uvesafb_pal_entry *entries, int count,
+		int start, struct fb_info *info)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1051: FILE: drivers/video/uvesafb.c:940:
+		__asm__ __volatile__(

CHECK:BRACES: Unbalanced braces around else statement
#1062: FILE: drivers/video/uvesafb.c:951:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1084: FILE: drivers/video/uvesafb.c:973:
+static int uvesafb_setcolreg(unsigned regno, unsigned red, unsigned green,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1084: FILE: drivers/video/uvesafb.c:973:
+static int uvesafb_setcolreg(unsigned regno, unsigned red, unsigned green,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1084: FILE: drivers/video/uvesafb.c:973:
+static int uvesafb_setcolreg(unsigned regno, unsigned red, unsigned green,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1085: FILE: drivers/video/uvesafb.c:974:
+static int uvesafb_setcolreg(unsigned regno, unsigned red, unsigned green,
+		unsigned blue, unsigned transp,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1085: FILE: drivers/video/uvesafb.c:974:
+		unsigned blue, unsigned transp,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1085: FILE: drivers/video/uvesafb.c:974:
+		unsigned blue, unsigned transp,

CHECK:SPACING: No space is necessary after a cast
#1107: FILE: drivers/video/uvesafb.c:996:
+				((u32 *) (info->pseudo_palette))[regno] =

CHECK:SPACING: No space is necessary after a cast
#1113: FILE: drivers/video/uvesafb.c:1002:
+				((u32 *) (info->pseudo_palette))[regno] =

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1114: FILE: drivers/video/uvesafb.c:1003:
+						((red   & 0xf800)      ) |

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#1146: FILE: drivers/video/uvesafb.c:1035:
+		entries = kmalloc(sizeof(*entries) * cmap->len, GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1174: FILE: drivers/video/uvesafb.c:1063:
+static int uvesafb_pan_display(struct fb_var_screeninfo *var,
+		struct fb_info *info)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1187: FILE: drivers/video/uvesafb.c:1076:
+		__asm__ __volatile__(

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1225: FILE: drivers/video/uvesafb.c:1114:
+		while (loop--);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1313: FILE: drivers/video/uvesafb.c:1202:
+	i = uvesafb_vbe_find_mode(par, info->var.xres, info->var.yres, depth,
+				 UVESAFB_EXACT_RES | UVESAFB_EXACT_DEPTH);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*crtc)...) over kzalloc(sizeof(struct vbe_crtc_ib)...)
#1329: FILE: drivers/video/uvesafb.c:1218:
+		crtc = kzalloc(sizeof(struct vbe_crtc_ib), GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1364: FILE: drivers/video/uvesafb.c:1253:
+		printk(KERN_ERR "uvesafb: mode switch failed (eax=0x%x, "

WARNING:SPLIT_STRING: quoted string split across lines
#1365: FILE: drivers/video/uvesafb.c:1254:
+		printk(KERN_ERR "uvesafb: mode switch failed (eax=0x%x, "
+				"err=%d)\n", task->t.regs.eax, err);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 16)
#1395: FILE: drivers/video/uvesafb.c:1284:
+out:	if (crtc != NULL)
+		kfree(crtc);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "crtc"
#1395: FILE: drivers/video/uvesafb.c:1284:
+out:	if (crtc != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1403: FILE: drivers/video/uvesafb.c:1292:
+static void uvesafb_check_limits(struct fb_var_screeninfo *var,
+		struct fb_info *info)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1439: FILE: drivers/video/uvesafb.c:1328:
+static int uvesafb_check_var(struct fb_var_screeninfo *var,
+		struct fb_info *info)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1455: FILE: drivers/video/uvesafb.c:1344:
+	match = uvesafb_vbe_find_mode(par, var->xres, var->yres, depth,
+						UVESAFB_EXACT_RES);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1468: FILE: drivers/video/uvesafb.c:1357:
+	if (var->yres * mode->bytes_per_scan_line > info->fix.smem_len
+						&& info->fix.smem_len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1472: FILE: drivers/video/uvesafb.c:1361:
+	if ((var->vmode & FB_VMODE_DOUBLE) &&
+				!(par->vbe_modes[match].mode_attr & 0x100))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1476: FILE: drivers/video/uvesafb.c:1365:
+	if ((var->vmode & FB_VMODE_INTERLACED) &&
+				!(par->vbe_modes[match].mode_attr & 0x200))

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1493: FILE: drivers/video/uvesafb.c:1382:
+	if (par->vbe_state_saved)
+		kfree(par->vbe_state_saved);

WARNING:CONST_STRUCT: struct fb_ops should normally be const
#1505: FILE: drivers/video/uvesafb.c:1394:
+static struct fb_ops uvesafb_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1522: FILE: drivers/video/uvesafb.c:1411:
+static void __devinit uvesafb_init_info(struct fb_info *info,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1523: FILE: drivers/video/uvesafb.c:1412:
+static void __devinit uvesafb_init_info(struct fb_info *info,
+		struct vbe_mode_ib *mode)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "mode"
#1567: FILE: drivers/video/uvesafb.c:1456:
+	if (mode != NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1609: FILE: drivers/video/uvesafb.c:1498:
+		printk(KERN_INFO "uvesafb: scrolling: %s "

WARNING:SPLIT_STRING: quoted string split across lines
#1610: FILE: drivers/video/uvesafb.c:1499:
+		printk(KERN_INFO "uvesafb: scrolling: %s "
+			"using protected mode interface, "

WARNING:SPLIT_STRING: quoted string split across lines
#1611: FILE: drivers/video/uvesafb.c:1500:
+			"using protected mode interface, "
+			"yres_virtual=%d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1615: FILE: drivers/video/uvesafb.c:1504:
+		printk(KERN_INFO "uvesafb: scrolling: redraw\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1670: FILE: drivers/video/uvesafb.c:1559:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1672: FILE: drivers/video/uvesafb.c:1561:
+static ssize_t uvesafb_show_vbe_ver(struct device *dev,
+		struct device_attribute *attr, char *buf)

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'uvesafb_show_vbe_ver' to 'vbe_version_show'
#1678: FILE: drivers/video/uvesafb.c:1567:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1680: FILE: drivers/video/uvesafb.c:1569:
+static DEVICE_ATTR(vbe_version, S_IRUGO, uvesafb_show_vbe_ver, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1683: FILE: drivers/video/uvesafb.c:1572:
+static ssize_t uvesafb_show_vbe_modes(struct device *dev,
+		struct device_attribute *attr, char *buf)

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'uvesafb_show_vbe_modes' to 'vbe_modes_show'
#1697: FILE: drivers/video/uvesafb.c:1586:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1699: FILE: drivers/video/uvesafb.c:1588:
+static DEVICE_ATTR(vbe_modes, S_IRUGO, uvesafb_show_vbe_modes, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1702: FILE: drivers/video/uvesafb.c:1591:
+static ssize_t uvesafb_show_vendor(struct device *dev,
+		struct device_attribute *attr, char *buf)

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'uvesafb_show_vendor' to 'oem_vendor_show'
#1712: FILE: drivers/video/uvesafb.c:1601:
+}

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'uvesafb_show_vendor' to 'oem_vendor_show'
#1714: FILE: drivers/video/uvesafb.c:1603:
+static DEVICE_ATTR(oem_vendor, S_IRUGO, uvesafb_show_vendor, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1714: FILE: drivers/video/uvesafb.c:1603:
+static DEVICE_ATTR(oem_vendor, S_IRUGO, uvesafb_show_vendor, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1717: FILE: drivers/video/uvesafb.c:1606:
+static ssize_t uvesafb_show_product_name(struct device *dev,
+		struct device_attribute *attr, char *buf)

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'uvesafb_show_product_name' to 'oem_product_name_show'
#1727: FILE: drivers/video/uvesafb.c:1616:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1729: FILE: drivers/video/uvesafb.c:1618:
+static DEVICE_ATTR(oem_product_name, S_IRUGO, uvesafb_show_product_name, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1732: FILE: drivers/video/uvesafb.c:1621:
+static ssize_t uvesafb_show_product_rev(struct device *dev,
+		struct device_attribute *attr, char *buf)

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'uvesafb_show_product_rev' to 'oem_product_rev_show'
#1742: FILE: drivers/video/uvesafb.c:1631:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1744: FILE: drivers/video/uvesafb.c:1633:
+static DEVICE_ATTR(oem_product_rev, S_IRUGO, uvesafb_show_product_rev, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1747: FILE: drivers/video/uvesafb.c:1636:
+static ssize_t uvesafb_show_oem_string(struct device *dev,
+		struct device_attribute *attr, char *buf)

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'uvesafb_show_oem_string' to 'oem_string_show'
#1757: FILE: drivers/video/uvesafb.c:1646:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1759: FILE: drivers/video/uvesafb.c:1648:
+static DEVICE_ATTR(oem_string, S_IRUGO, uvesafb_show_oem_string, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1762: FILE: drivers/video/uvesafb.c:1651:
+static ssize_t uvesafb_show_nocrtc(struct device *dev,
+		struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1771: FILE: drivers/video/uvesafb.c:1660:
+static ssize_t uvesafb_store_nocrtc(struct device *dev,
+		struct device_attribute *attr, const char *buf, size_t count)

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'uvesafb_show_nocrtc' to 'nocrtc_show' 'uvesafb_store_nocrtc' to 'nocrtc_store'
#1783: FILE: drivers/video/uvesafb.c:1672:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1785: FILE: drivers/video/uvesafb.c:1674:
+static DEVICE_ATTR(nocrtc, S_IRUGO | S_IWUSR, uvesafb_show_nocrtc,

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1804: FILE: drivers/video/uvesafb.c:1693:
+static int __devinit uvesafb_probe(struct platform_device *dev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1819: FILE: drivers/video/uvesafb.c:1708:
+		printk(KERN_ERR "uvesafb: vbe_init() failed with %d\n", err);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1842: FILE: drivers/video/uvesafb.c:1731:
+		printk(KERN_ERR "uvesafb: cannot reserve video memory at "

WARNING:SPLIT_STRING: quoted string split across lines
#1843: FILE: drivers/video/uvesafb.c:1732:
+		printk(KERN_ERR "uvesafb: cannot reserve video memory at "
+				"0x%lx\n", info->fix.smem_start);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1851: FILE: drivers/video/uvesafb.c:1740:
+		printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#1853: FILE: drivers/video/uvesafb.c:1742:
+			"uvesafb: abort, cannot ioremap 0x%x bytes of video "
+			"memory at 0x%lx\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1860: FILE: drivers/video/uvesafb.c:1749:
+		printk(KERN_ERR "uvesafb: request region 0x3c0-0x3e0 failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1869: FILE: drivers/video/uvesafb.c:1758:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1875: FILE: drivers/video/uvesafb.c:1764:
+	printk(KERN_INFO "uvesafb: framebuffer at 0x%lx, mapped to 0x%p, "

WARNING:SPLIT_STRING: quoted string split across lines
#1876: FILE: drivers/video/uvesafb.c:1765:
+	printk(KERN_INFO "uvesafb: framebuffer at 0x%lx, mapped to 0x%p, "
+			"using %dk, total %dk\n", info->fix.smem_start,

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1877: FILE: drivers/video/uvesafb.c:1766:
+			info->screen_base, info->fix.smem_len/1024,
 			                                     ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1879: FILE: drivers/video/uvesafb.c:1768:
+	printk(KERN_INFO "fb%d: %s frame buffer device\n", info->node,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1880: FILE: drivers/video/uvesafb.c:1769:
+	printk(KERN_INFO "fb%d: %s frame buffer device\n", info->node,
+			info->fix.id);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1884: FILE: drivers/video/uvesafb.c:1773:
+		printk(KERN_WARNING "fb%d: failed to register attributes\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1885: FILE: drivers/video/uvesafb.c:1774:
+		printk(KERN_WARNING "fb%d: failed to register attributes\n",
+			info->node);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1902: FILE: drivers/video/uvesafb.c:1791:
+	if (par->vbe_modes)
+		kfree(par->vbe_modes);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1925: FILE: drivers/video/uvesafb.c:1814:
+			if (par->vbe_modes)
+				kfree(par->vbe_modes);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1927: FILE: drivers/video/uvesafb.c:1816:
+			if (par->vbe_state_orig)
+				kfree(par->vbe_state_orig);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1929: FILE: drivers/video/uvesafb.c:1818:
+			if (par->vbe_state_saved)
+				kfree(par->vbe_state_saved);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1948: FILE: drivers/video/uvesafb.c:1837:
+static int __devinit uvesafb_setup(char *options)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1956: FILE: drivers/video/uvesafb.c:1845:
+		if (!*this_opt) continue;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1958: FILE: drivers/video/uvesafb.c:1847:
+		if (!strcmp(this_opt, "redraw"))
[...]
+		else if (!strcmp(this_opt, "ypan"))
[...]
+		else if (!strcmp(this_opt, "ywrap"))
[...]
+		else if (!strcmp(this_opt, "vgapal"))
[...]
+		else if (!strcmp(this_opt, "pmipal"))
[...]
+		else if (!strncmp(this_opt, "mtrr:", 5))
[...]
+		else if (!strcmp(this_opt, "nomtrr"))
[...]
+		else if (!strcmp(this_opt, "nocrtc"))
[...]
+		else if (!strcmp(this_opt, "noedid"))
[...]
+		else if (!strcmp(this_opt, "noblank"))
[...]
+		else if (!strncmp(this_opt, "vtotal:", 7))
[...]
+		else if (!strncmp(this_opt, "vremap:", 7))
[...]
+		else if (!strncmp(this_opt, "maxhf:", 6))
[...]
+		else if (!strncmp(this_opt, "maxvf:", 6))
[...]
+		else if (!strncmp(this_opt, "maxclk:", 7))
[...]
+		else if (!strncmp(this_opt, "vbemode:", 8))
[...]
+		else if (this_opt[0] >= '0' && this_opt[0] <= '9') {
[...]
+		} else {
[...]

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1969: FILE: drivers/video/uvesafb.c:1858:
+			mtrr = simple_strtoul(this_opt+5, NULL, 0);
 			                              ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1969: FILE: drivers/video/uvesafb.c:1858:
+			mtrr = simple_strtoul(this_opt+5, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1979: FILE: drivers/video/uvesafb.c:1868:
+			vram_total = simple_strtoul(this_opt + 7, NULL, 0);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1981: FILE: drivers/video/uvesafb.c:1870:
+			vram_remap = simple_strtoul(this_opt + 7, NULL, 0);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1983: FILE: drivers/video/uvesafb.c:1872:
+			maxhf = simple_strtoul(this_opt + 6, NULL, 0);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1985: FILE: drivers/video/uvesafb.c:1874:
+			maxvf = simple_strtoul(this_opt + 6, NULL, 0);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1987: FILE: drivers/video/uvesafb.c:1876:
+			maxclk = simple_strtoul(this_opt + 7, NULL, 0);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1989: FILE: drivers/video/uvesafb.c:1878:
+			vbemode = simple_strtoul(this_opt + 8, NULL, 0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1993: FILE: drivers/video/uvesafb.c:1882:
+			printk(KERN_WARNING

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2008: FILE: drivers/video/uvesafb.c:1897:
+static ssize_t store_v86d(struct device_driver *dev, const char *buf,
+		size_t count)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#2014: FILE: drivers/video/uvesafb.c:1903:
+static DRIVER_ATTR(v86d, S_IRUGO | S_IWUSR, show_v86d, store_v86d);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2016: FILE: drivers/video/uvesafb.c:1905:
+static int __devinit uvesafb_init(void)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2048: FILE: drivers/video/uvesafb.c:1937:
+		err = driver_create_file(&uvesafb_driver.driver,
+				&driver_attr_v86d);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2050: FILE: drivers/video/uvesafb.c:1939:
+			printk(KERN_WARNING "uvesafb: failed to register "

WARNING:SPLIT_STRING: quoted string split across lines
#2051: FILE: drivers/video/uvesafb.c:1940:
+			printk(KERN_WARNING "uvesafb: failed to register "
+					"attributes\n");

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#2060: FILE: drivers/video/uvesafb.c:1949:
+static void __devexit uvesafb_exit(void)

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2100: FILE: drivers/video/uvesafb.c:1989:
+#define param_check_scroll(name, p) __param_check(name, p, void);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2104: FILE: drivers/video/uvesafb.c:1993:
+MODULE_PARM_DESC(scroll,
+	"Scrolling mode, set to 'redraw', ''ypan' or 'ywrap'");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2111: FILE: drivers/video/uvesafb.c:2000:
+MODULE_PARM_DESC(mtrr,
+	"Memory Type Range Registers setting. Use 0 to disable.");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2118: FILE: drivers/video/uvesafb.c:2007:
+MODULE_PARM_DESC(noedid,
+	"Ignore EDID-provided monitor limits when setting modes");

WARNING:TYPO_SPELLING: 'memoery' may be misspelled - perhaps 'memory'?
#2122: FILE: drivers/video/uvesafb.c:2011:
+MODULE_PARM_DESC(vram_total, "Set total amount of video memoery [MiB]");
                                                         ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2127: FILE: drivers/video/uvesafb.c:2016:
+MODULE_PARM_DESC(maxhf,
+	"Maximum horizontal frequency [kHz], overrides EDID data");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2130: FILE: drivers/video/uvesafb.c:2019:
+MODULE_PARM_DESC(maxvf,
+	"Maximum vertical frequency [Hz], overrides EDID data");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2133: FILE: drivers/video/uvesafb.c:2022:
+MODULE_PARM_DESC(mode,
+	"Specify initial video mode as \"<xres>x<yres>[-<bpp>][@<refresh>]\"");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2136: FILE: drivers/video/uvesafb.c:2025:
+MODULE_PARM_DESC(vbemode,
+	"VBE mode number to set, overrides the 'mode' option");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2157: FILE: include/video/uvesafb.h:1:
+#ifndef _UVESAFB_H

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2193: FILE: include/video/uvesafb.h:37:
+ * in vbe_ib */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2212: FILE: include/video/uvesafb.h:56:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2228: FILE: include/video/uvesafb.h:72:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2296: FILE: include/video/uvesafb.h:140:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2311: FILE: include/video/uvesafb.h:155:
+} __attribute__ ((packed));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000411685.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 146 warnings, 75 checks, 2258 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000411685.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
