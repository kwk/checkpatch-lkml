WARNING:EMAIL_SUBJECT: A patch subject line should describe the change not the tool that found it
#18: 
Subject: Re: [PATCH] CRED: fix sparse warnings

Naming the tool that found the issue is not very useful in the
subject line.  A good subject line summarizes the change that
the patch brings.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#205: 
--- a/arch/alpha/include/asm/io.h 2008-11-17 12:16:39.000000000 +0100

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#222: FILE: arch/alpha/kernel/err_titan.c:726:
 	if (vector != SCB_Q_SYSEVENT) 
+		{ titan_machine_check(vector, la_ptr);

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#260: FILE: arch/arm/plat-omap/sram.c:286:
+	 _omap2_sram_ddr_init(slow_dll_ctrl, fast_dll_ctrl,
 				    base_cs, force_unlock);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#290: FILE: arch/cris/mm/ioremap.c:86:
 	if (addr > high_memory)
+		{ vfree((void *) (PAGE_MASK & (unsigned long) addr));

CHECK:SPACING: No space is necessary after a cast
#292: FILE: arch/cris/mm/ioremap.c:87:
+		{ vfree((void *) (PAGE_MASK & (unsigned long) addr));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#302: FILE: arch/ia64/hp/common/hwsw_iommu.c:108:
 	if (use_swiotlb(dev))
+		{ swiotlb_unmap_single_attrs(dev, iova, size, dir, attrs);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#309: FILE: arch/ia64/hp/common/hwsw_iommu.c:112:
+	else
+		{ hwiommu_unmap_single_attrs(dev, iova, size, dir, attrs);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#309: FILE: arch/ia64/hp/common/hwsw_iommu.c:112:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#319: FILE: arch/ia64/hp/common/hwsw_iommu.c:134:
 	if (use_swiotlb(dev))
+		{ swiotlb_unmap_sg_attrs(dev, sglist, nents, dir, attrs);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#326: FILE: arch/ia64/hp/common/hwsw_iommu.c:138:
+	else
+		{ hwiommu_unmap_sg_attrs(dev, sglist, nents, dir, attrs);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#326: FILE: arch/ia64/hp/common/hwsw_iommu.c:138:
+	}
+	else

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#379: FILE: arch/ia64/kernel/machvec.c:53:
 	if (! (start = strstr(cmdline, "machvec=")) )
+		{ machvec_init(NULL);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#400: FILE: arch/ia64/kernel/msi_ia64.c:161:
 	if (platform_teardown_msi_irq)
+		{ platform_teardown_msi_irq(irq);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#417: FILE: arch/mips/mm/page.c:645:
 	if ((long)KSEGX((unsigned long)page) != (long)CKSEG0)
+		{ clear_page_cpu(page);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#427: FILE: arch/mips/mm/page.c:672:
 	if ((long)KSEGX((unsigned long)to) != (long)CKSEG0
 	    || (long)KSEGX((unsigned long)from) != (long)CKSEG0)
+		{ copy_page_cpu(to, from);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#442: FILE: arch/parisc/include/asm/floppy.h:182:
 	if((unsigned int) addr >= (unsigned int) high_memory)
+		{ vfree((void *)addr);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#468: FILE: arch/parisc/mm/ioremap.c:96:
 	if (addr > high_memory)
+		{ vfree((void *) (PAGE_MASK & (unsigned long __force) addr));

CHECK:SPACING: No space is necessary after a cast
#470: FILE: arch/parisc/mm/ioremap.c:97:
+		{ vfree((void *) (PAGE_MASK & (unsigned long __force) addr));

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#481: FILE: arch/powerpc/platforms/powermac/udbg_adb.c:148:
 	if (udbg_adb_old_putc)
+		{ udbg_adb_old_putc(c);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#544: FILE: arch/sparc/kernel/prom.c:245:
 		if (!strcmp(parent->type, "pci") ||
 		    !strcmp(parent->type, "pciex"))
+			{ pci_path_component(dp, tmp_buf);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#550: FILE: arch/sparc/kernel/prom.c:250:
 		if (!strcmp(parent->type, "sbus"))
+			{ sbus_path_component(dp, tmp_buf);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#555: FILE: arch/sparc/kernel/prom.c:254:
 		if (!strcmp(parent->type, "ebus"))
+			{ ebus_path_component(dp, tmp_buf);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#576: FILE: drivers/ata/pata_icside.c:318:
 	if (classes[0] != ATA_DEV_NONE || classes[1] != ATA_DEV_NONE)
+		{ ata_sff_postreset(link, classes);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#614: FILE: drivers/ide/falconide.c:51:
 	if (drive->media == ide_disk && rq && rq->cmd_type == REQ_TYPE_FS)
+		{ insw(data_addr, buf, (len + 1) / 2);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#625: FILE: drivers/ide/falconide.c:64:
 	if (drive->media == ide_disk && rq && rq->cmd_type == REQ_TYPE_FS)
+		{ outsw(data_addr, buf, (len + 1) / 2);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#639: FILE: drivers/ide/q40ide.c:80:
 	if (drive->media == ide_disk && rq && rq->cmd_type == REQ_TYPE_FS)
+		{ insw(data_addr, buf, (len + 1) / 2);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#650: FILE: drivers/ide/q40ide.c:93:
 	if (drive->media == ide_disk && rq && rq->cmd_type == REQ_TYPE_FS)
+		{ outsw(data_addr, buf, (len + 1) / 2);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#664: FILE: drivers/isdn/i4l/isdn_net.c:1980:
 	if (lp->p_encap == ISDN_NET_ENCAP_ETHER)
+		{ eth_header_cache_update(hh, dev, haddr);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#750: FILE: drivers/parisc/gsc.c:207:
 		if (padev->id.hw_type == HPHW_FAULTY)
+			{ gsc_fixup_irqs(padev, ctrl, choose_irq);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#847: FILE: drivers/video/i810/i810_accel.c:303:
 	if (!info->var.accel_flags || par->dev_flags & LOCKUP ||
 	    par->depth == 4) 
+		{ cfb_fillrect(info, rect);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#858: FILE: drivers/video/i810/i810_accel.c:331:
 	if (!info->var.accel_flags || par->dev_flags & LOCKUP ||
 	    par->depth == 4)
+		{ cfb_copyarea(info, region);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#869: FILE: drivers/video/i810/i810_accel.c:372:
 	if (!info->var.accel_flags || par->dev_flags & LOCKUP ||
 	    par->depth == 4 || image->depth != 1) 
+		{ cfb_imageblit(info, image);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#884: FILE: drivers/video/intelfb/intelfbdrv.c:1496:
 	if (!ACCEL(dinfo, info) || dinfo->depth == 4)
+		{ cfb_fillrect(info, rect);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#895: FILE: drivers/video/intelfb/intelfbdrv.c:1526:
 	if (!ACCEL(dinfo, info) || dinfo->depth == 4)
+		{ cfb_copyarea(info, region);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#905: FILE: drivers/video/intelfb/intelfbdrv.c:1546:
 	if (!ACCEL(dinfo, info) || dinfo->depth == 4
 	    || image->depth != 1)
+		{ cfb_imageblit(info, image);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#939: FILE: drivers/video/neofb.c:1462:
 	} else {
[...]
+		 cfb_imageblit(info, image);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#954: FILE: drivers/video/nvidia/nv_accel.c:303:
 	if (par->lockup)
+		{ cfb_copyarea(info, region);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#965: FILE: drivers/video/nvidia/nv_accel.c:324:
 	if (par->lockup)
+		{ cfb_fillrect(info, rect);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#979: FILE: drivers/video/pm3fb.c:542:
 	if (image->depth != 1)
+		{ cfb_imageblit(info, image);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#993: FILE: drivers/video/via/viafbdev.c:870:
 	if (!viafb_accel)
+		{ cfb_fillrect(info, rect);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1004: FILE: drivers/video/via/viafbdev.c:939:
 	if (!viafb_accel)
+		{ cfb_copyarea(info, area);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1015: FILE: drivers/video/via/viafbdev.c:998:
 	if (!viafb_accel)
+		{ cfb_imageblit(info, image);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#1029: FILE: fs/udf/balloc.c:839:
 	if (map->s_partition_flags & UDF_PART_FLAG_UNALLOC_BITMAP) {
+		 udf_bitmap_free_blocks(sb, inode,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1032: FILE: fs/udf/balloc.c:841:
+		 udf_bitmap_free_blocks(sb, inode,
 					      map->s_uspace.s_bitmap,

WARNING:TABSTOP: Statements should start on a tabstop
#1034: FILE: fs/udf/balloc.c:843:
+					      return;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#1035: FILE: fs/udf/balloc.c:844:
 	} else if (map->s_partition_flags & UDF_PART_FLAG_UNALLOC_TABLE) {
+		 udf_table_free_blocks(sb, inode,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1038: FILE: fs/udf/balloc.c:846:
+		 udf_table_free_blocks(sb, inode,
 					     map->s_uspace.s_table,

WARNING:TABSTOP: Statements should start on a tabstop
#1040: FILE: fs/udf/balloc.c:848:
+					     return;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#1041: FILE: fs/udf/balloc.c:849:
 	} else if (map->s_partition_flags & UDF_PART_FLAG_FREED_BITMAP) {
+		 udf_bitmap_free_blocks(sb, inode,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1044: FILE: fs/udf/balloc.c:851:
+		 udf_bitmap_free_blocks(sb, inode,
 					      map->s_fspace.s_bitmap,

WARNING:TABSTOP: Statements should start on a tabstop
#1046: FILE: fs/udf/balloc.c:853:
+					      return;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#1047: FILE: fs/udf/balloc.c:854:
 	} else if (map->s_partition_flags & UDF_PART_FLAG_FREED_TABLE) {
+		 udf_table_free_blocks(sb, inode,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1050: FILE: fs/udf/balloc.c:856:
+		 udf_table_free_blocks(sb, inode,
 					     map->s_fspace.s_table,

WARNING:TABSTOP: Statements should start on a tabstop
#1052: FILE: fs/udf/balloc.c:858:
+					     return;

CHECK:SPACING: No space is necessary after a cast
#1076: FILE: include/asm-mn10300/io.h:80:
+	 writeb(b, (volatile void __iomem *) addr);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1076: FILE: include/asm-mn10300/io.h:80:
+	 writeb(b, (volatile void __iomem *) addr);

CHECK:SPACING: No space is necessary after a cast
#1085: FILE: include/asm-mn10300/io.h:100:
+	 writeb(b, (volatile void __iomem *) addr);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1085: FILE: include/asm-mn10300/io.h:100:
+	 writeb(b, (volatile void __iomem *) addr);

CHECK:SPACING: No space is necessary after a cast
#1091: FILE: include/asm-mn10300/io.h:105:
+	 writew(b, (volatile void __iomem *) addr);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1091: FILE: include/asm-mn10300/io.h:105:
+	 writew(b, (volatile void __iomem *) addr);

CHECK:SPACING: No space is necessary after a cast
#1097: FILE: include/asm-mn10300/io.h:110:
+	 writel(b, (volatile void __iomem *) addr);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1097: FILE: include/asm-mn10300/io.h:110:
+	 writel(b, (volatile void __iomem *) addr);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1104: FILE: include/asm-mn10300/io.h:176:
 	if ((unsigned long) buffer & 0x3)
+		{ __outsl(addr, buffer, count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1121: FILE: include/rdma/ib_verbs.h:1644:
+	 dma_unmap_single_attrs(dev->dma_device, addr, size,
 				      direction, attrs);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1151: FILE: mm/hugetlb.c:374:
 	if (unlikely(sz > MAX_ORDER_NR_PAGES))
+		{ clear_gigantic_page(page, addr, sz);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1162: FILE: mm/hugetlb.c:409:
 	if (unlikely(pages_per_huge_page(h) > MAX_ORDER_NR_PAGES))
+		{ copy_gigantic_page(dst, src, addr, vma);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000199903.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 41 errors, 14 warnings, 12 checks, 777 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000199903.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
