WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#59: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#64: FILE: arch/arm/plat-omap/include/mach/omap-serial.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#65: FILE: arch/arm/plat-omap/include/mach/omap-serial.h:2:
+ * arch/arm/plat-omap/include/mach/omap-serial.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#103: FILE: arch/arm/plat-omap/include/mach/omap-serial.h:40:
+#define OMAP_MDR1_DISABLE ^I0x07$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#104: FILE: arch/arm/plat-omap/include/mach/omap-serial.h:41:
+#define OMAP_MDR1_MODE13X ^I0x03$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#105: FILE: arch/arm/plat-omap/include/mach/omap-serial.h:42:
+#define OMAP_MDR1_MODE16X ^I0x00$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#126: FILE: arch/arm/plat-omap/include/mach/omap-serial.h:63:
+#define UART_BASE(uart_no)		(uart_no == UART1) ? OMAP_UART1_BASE :\
+					(uart_no == UART2) ? OMAP_UART2_BASE :\
+					 OMAP_UART3_BASE

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'uart_no' - possible side-effects?
#126: FILE: arch/arm/plat-omap/include/mach/omap-serial.h:63:
+#define UART_BASE(uart_no)		(uart_no == UART1) ? OMAP_UART1_BASE :\
+					(uart_no == UART2) ? OMAP_UART2_BASE :\
+					 OMAP_UART3_BASE

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'uart_no' may be better as '(uart_no)' to avoid precedence issues
#126: FILE: arch/arm/plat-omap/include/mach/omap-serial.h:63:
+#define UART_BASE(uart_no)		(uart_no == UART1) ? OMAP_UART1_BASE :\
+					(uart_no == UART2) ? OMAP_UART2_BASE :\
+					 OMAP_UART3_BASE

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#130: FILE: arch/arm/plat-omap/include/mach/omap-serial.h:67:
+#define UART_MODULE_BASE(uart_no)	(UART1 == uart_no ? \

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'uart_no' - possible side-effects?
#130: FILE: arch/arm/plat-omap/include/mach/omap-serial.h:67:
+#define UART_MODULE_BASE(uart_no)	(UART1 == uart_no ? \
+						IO_ADDRESS(OMAP_UART1_BASE) :\
+					(UART2 == uart_no ? \
+						IO_ADDRESS(OMAP_UART2_BASE) :\
+						IO_ADDRESS(OMAP_UART3_BASE)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'uart_no' may be better as '(uart_no)' to avoid precedence issues
#130: FILE: arch/arm/plat-omap/include/mach/omap-serial.h:67:
+#define UART_MODULE_BASE(uart_no)	(UART1 == uart_no ? \
+						IO_ADDRESS(OMAP_UART1_BASE) :\
+					(UART2 == uart_no ? \
+						IO_ADDRESS(OMAP_UART2_BASE) :\
+						IO_ADDRESS(OMAP_UART3_BASE)))

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#132: FILE: arch/arm/plat-omap/include/mach/omap-serial.h:69:
+					(UART2 == uart_no ? \

WARNING:TABSTOP: Statements should start on a tabstop
#140: FILE: arch/arm/plat-omap/include/mach/omap-serial.h:77:
+	 resource_size_t mapbase;       /* resource base */

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#156: FILE: drivers/serial/Kconfig:1362:
+config SERIAL_OMAP
+	bool "OMAP serial port support"
+	depends on ARM && ARCH_OMAP
+	select SERIAL_CORE
+	help
+	If you have a machine based on an Texas Instruments OMAP CPU you
+	can enable its onboard serial ports by enabling this option.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#179: FILE: drivers/serial/Kconfig:1385:
+config SERIAL_OMAP_DMA_UART1
+	bool "UART1 DMA support"
+	depends on SERIAL_OMAP
+	help
+	If you have enabled the serial port on the Texas Instruments OMAP
+	CPU you can enable the DMA transfer on UART 1 by answering
+	 to this option.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#202: FILE: drivers/serial/Kconfig:1408:
+config SERIAL_OMAP_DMA_UART2
+	bool "UART2 DMA support"
+	depends on SERIAL_OMAP
+	help
+	  If you have enabled the serial port on the Texas Instruments OMAP
+	  CPU you can enable the DMA transfer on UART 2 by answering
+	  to this option.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#225: FILE: drivers/serial/Kconfig:1431:
+config SERIAL_OMAP_DMA_UART3
+	bool "UART3 DMA support"
+	depends on SERIAL_OMAP
+	help
+	  If you have enabled the serial port on the Texas Instruments OMAP
+	  CPU you can enable the DMA transfer on UART 3 by answering
+	  to this option.
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#266: FILE: drivers/serial/omap-serial.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#267: FILE: drivers/serial/omap-serial.c:2:
+ * drivers/serial/omap-serial.c

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#304: FILE: drivers/serial/omap-serial.c:39:
+static u8 uart_dma_tx[MAX_UARTS + 1] =
+	{OMAP24XX_DMA_UART1_TX, OMAP24XX_DMA_UART2_TX, OMAP24XX_DMA_UART3_TX};

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#306: FILE: drivers/serial/omap-serial.c:41:
+static u8 uart_dma_rx[MAX_UARTS + 1] =
+	{OMAP24XX_DMA_UART1_RX, OMAP24XX_DMA_UART2_RX, OMAP24XX_DMA_UART3_RX};

WARNING:TYPO_SPELLING: 'adress' may be misspelled - perhaps 'address'?
#311: FILE: drivers/serial/omap-serial.c:46:
+	dma_addr_t rx_buf_dma_phys;	/* Physical adress of RX DMA buffer */
 	                           	            ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'adress' may be misspelled - perhaps 'address'?
#312: FILE: drivers/serial/omap-serial.c:47:
+	dma_addr_t tx_buf_dma_phys;	/* Physical adress of TX DMA buffer */
 	                           	            ^^^^^^

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#322: FILE: drivers/serial/omap-serial.c:57:
+	spinlock_t tx_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#323: FILE: drivers/serial/omap-serial.c:58:
+	spinlock_t rx_lock;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#324: FILE: drivers/serial/omap-serial.c:59:
+^Istruct timer_list ^Irx_timer;/* timer to poll activity on rx dma */$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#348: FILE: drivers/serial/omap-serial.c:83:
+	spinlock_t		uart_lock;

CHECK:BRACES: braces {} should be used on all arms of this statement
#372: FILE: drivers/serial/omap-serial.c:107:
+		if (!strncmp(next, CONSOLE_NAME, i)) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#375: FILE: drivers/serial/omap-serial.c:110:
+			break;
+		} else

CHECK:BRACES: Unbalanced braces around else statement
#375: FILE: drivers/serial/omap-serial.c:110:
+		} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#385: FILE: drivers/serial/omap-serial.c:120:
+			printk(KERN_INFO "Invalid Console Name\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#428: FILE: drivers/serial/omap-serial.c:163:
+	unsigned int divisor;
+	if (baud > OMAP_MODE13X_SPEED && baud != 3000000)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#432: FILE: drivers/serial/omap-serial.c:167:
+	return port->uartclk/(baud * divisor);
 	                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_enable_ms', this function's name, in a string
#450: FILE: drivers/serial/omap-serial.c:185:
+	DPRINTK("serial_omap_enable_ms+%d\n", up->pdev->id);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:LINE_SPACING: Missing a blank line after declarations
#458: FILE: drivers/serial/omap-serial.c:193:
+	struct uart_omap_port *up = (struct uart_omap_port *)port;
+	if (up->use_dma) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#481: FILE: drivers/serial/omap-serial.c:216:
+		unsigned int tmp;
+		tmp = (serial_in(up, UART_OMAP_SYSC) & 0x7) | (2 << 3);

WARNING:LINE_SPACING: Missing a blank line after declarations
#490: FILE: drivers/serial/omap-serial.c:225:
+	struct uart_omap_port *up = (struct uart_omap_port *)port;
+	serial_omap_stop_rxdma(up);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#495: FILE: drivers/serial/omap-serial.c:230:
+
+}

CHECK:BRACES: braces {} should be used on all arms of this statement
#513: FILE: drivers/serial/omap-serial.c:248:
+			if (*status & UART_LSR_BI) {
[...]
+			} else if (*status & UART_LSR_PE)
[...]
+			else if (*status & UART_LSR_FE)
[...]

CHECK:LINE_SPACING: Please don't use multiple blank lines
#561: FILE: drivers/serial/omap-serial.c:296:
+
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#562: FILE: drivers/serial/omap-serial.c:297:
+
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#605: FILE: drivers/serial/omap-serial.c:340:
+		unsigned int tmp;
+		tmp = (serial_in(up, UART_OMAP_SYSC) & 0x7) | (1 << 3);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#610: FILE: drivers/serial/omap-serial.c:345:
+	if (up->use_dma && !(up->port.x_char)) {
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around up->uart_dma.tx_lock
#616: FILE: drivers/serial/omap-serial.c:351:
+		spin_lock(&(up->uart_dma.tx_lock));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around up->uart_dma.tx_lock
#618: FILE: drivers/serial/omap-serial.c:353:
+		spin_unlock(&(up->uart_dma.tx_lock));

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#623: FILE: drivers/serial/omap-serial.c:358:
+		 * transfers */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#631: FILE: drivers/serial/omap-serial.c:366:
+			omap_request_dma(uart_dma_tx[up->pdev->id-1],
 			                                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#632: FILE: drivers/serial/omap-serial.c:367:
+			omap_request_dma(uart_dma_tx[up->pdev->id-1],
+					"UART Tx DMA",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around up->uart_dma.tx_dma_channel
#634: FILE: drivers/serial/omap-serial.c:369:
+					&(up->uart_dma.tx_dma_channel));

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#645: FILE: drivers/serial/omap-serial.c:380:
+					     uart_dma_tx[(up->pdev->id)-1], 0);
 					                               ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#658: FILE: drivers/serial/omap-serial.c:393:
+	int status;
+	status = serial_in(up, UART_MSR);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "up->port.info"
#666: FILE: drivers/serial/omap-serial.c:401:
+	    up->port.info != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: braces {} should be used on all arms of this statement
#695: FILE: drivers/serial/omap-serial.c:430:
+	if ((iir & 0x4) && up->use_dma) {
[...]
+	} else if (lsr & UART_LSR_DR)
[...]

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_tx_empty', this function's name, in a string
#715: FILE: drivers/serial/omap-serial.c:450:
+	DPRINTK("serial_omap_tx_empty+%d\n", up->pdev->id);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_get_mctrl', this function's name, in a string
#730: FILE: drivers/serial/omap-serial.c:465:
+	DPRINTK("serial_omap_get_mctrl+%d\n", up->pdev->id);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_set_mctrl', this function's name, in a string
#749: FILE: drivers/serial/omap-serial.c:484:
+	DPRINTK("serial_omap_set_mctrl+%d\n", up->pdev->id);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_break_ctl', this function's name, in a string
#770: FILE: drivers/serial/omap-serial.c:505:
+	DPRINTK("serial_omap_break_ctl+%d\n", up->pdev->id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#800: FILE: drivers/serial/omap-serial.c:535:
+	retval = request_irq(up->port.irq, serial_omap_irq, irq_flags,
+				up->name, up);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_startup', this function's name, in a string
#803: FILE: drivers/serial/omap-serial.c:538:
+	DPRINTK("serial_omap_startup+%d\n", up->pdev->id);

WARNING:TYPO_SPELLING: 'reenabled' may be misspelled - perhaps 're-enabled'?
#816: FILE: drivers/serial/omap-serial.c:551:
+	 * (they will be reenabled in set_termios())
 	                 ^^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#826: FILE: drivers/serial/omap-serial.c:561:
+	(void) serial_in(up, UART_LSR);

CHECK:SPACING: No space is necessary after a cast
#827: FILE: drivers/serial/omap-serial.c:562:
+	(void) serial_in(up, UART_RX);

CHECK:SPACING: No space is necessary after a cast
#828: FILE: drivers/serial/omap-serial.c:563:
+	(void) serial_in(up, UART_IIR);

CHECK:SPACING: No space is necessary after a cast
#829: FILE: drivers/serial/omap-serial.c:564:
+	(void) serial_in(up, UART_MSR);

CHECK:SPACING: No space is necessary after a cast
#857: FILE: drivers/serial/omap-serial.c:592:
+		(void) inb_p(icp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#864: FILE: drivers/serial/omap-serial.c:599:
+			up->port.info->xmit.buf = dma_alloc_coherent(NULL,
+				UART_XMIT_SIZE,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around up->uart_dma.tx_buf_dma_phys
#865: FILE: drivers/serial/omap-serial.c:600:
+				(dma_addr_t *)&(up->uart_dma.tx_buf_dma_phys),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around up->uart_dma.rx_timer
#869: FILE: drivers/serial/omap-serial.c:604:
+		init_timer(&(up->uart_dma.rx_timer));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#874: FILE: drivers/serial/omap-serial.c:609:
+		up->uart_dma.rx_buf = dma_alloc_coherent(NULL,
+			up->uart_dma.rx_buf_size,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around up->uart_dma.rx_buf_dma_phys
#875: FILE: drivers/serial/omap-serial.c:610:
+			(dma_addr_t *)&(up->uart_dma.rx_buf_dma_phys), 0);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#878: FILE: drivers/serial/omap-serial.c:613:
+		/*
+		* Finally, enable interrupts.  Note: Modem status interrupts

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_shutdown', this function's name, in a string
#894: FILE: drivers/serial/omap-serial.c:629:
+	DPRINTK("serial_omap_shutdown+%d\n", up->pdev->id);

CHECK:BRACES: braces {} should be used on all arms of this statement
#902: FILE: drivers/serial/omap-serial.c:637:
+	if (up->port.flags & UPF_FOURPORT) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#906: FILE: drivers/serial/omap-serial.c:641:
+	} else

CHECK:SPACING: No space is necessary after a cast
#920: FILE: drivers/serial/omap-serial.c:655:
+	(void) serial_in(up, UART_RX);

WARNING:LINE_SPACING: Missing a blank line after declarations
#923: FILE: drivers/serial/omap-serial.c:658:
+		int tmp;
+		if (up->is_buf_dma_alloced) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#925: FILE: drivers/serial/omap-serial.c:660:
+			dma_free_coherent(up->port.dev,
+				  UART_XMIT_SIZE,

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#986: FILE: drivers/serial/omap-serial.c:721:
+	baud = uart_get_baud_rate(port, termios, old, 0, port->uartclk/13);
 	                                                              ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1054: FILE: drivers/serial/omap-serial.c:789:
+		serial_out(up, UART_OMAP_SCR  , ((1 << 6) | (1 << 7)));
 		                              ^

CHECK:SPACING: No space is necessary after a cast
#1069: FILE: drivers/serial/omap-serial.c:804:
+	(void) serial_in(up, UART_LSR);

CHECK:SPACING: No space is necessary after a cast
#1070: FILE: drivers/serial/omap-serial.c:805:
+	(void) serial_in(up, UART_RX);

CHECK:SPACING: No space is necessary after a cast
#1071: FILE: drivers/serial/omap-serial.c:806:
+	(void) serial_in(up, UART_IIR);

CHECK:SPACING: No space is necessary after a cast
#1072: FILE: drivers/serial/omap-serial.c:807:
+	(void) serial_in(up, UART_MSR);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_set_termios', this function's name, in a string
#1082: FILE: drivers/serial/omap-serial.c:817:
+	DPRINTK("serial_omap_set_termios+%d\n", up->pdev->id);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1094: FILE: drivers/serial/omap-serial.c:829:
+	unsigned char efr;
+	DPRINTK("serial_omap_pm+%d\n", up->pdev->id);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_pm', this function's name, in a string
#1094: FILE: drivers/serial/omap-serial.c:829:
+	DPRINTK("serial_omap_pm+%d\n", up->pdev->id);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_release_port', this function's name, in a string
#1108: FILE: drivers/serial/omap-serial.c:843:
+	DPRINTK("serial_omap_release_port+\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_request_port', this function's name, in a string
#1113: FILE: drivers/serial/omap-serial.c:848:
+	DPRINTK("serial_omap_request_port+\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_config_port', this function's name, in a string
#1121: FILE: drivers/serial/omap-serial.c:856:
+	DPRINTK("serial_omap_config_port+%d\n", up->pdev->id);

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#1126: FILE: drivers/serial/omap-serial.c:861:
+serial_omap_verify_port(struct uart_port *port, struct serial_struct *ser)
                                                                       ^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_verify_port', this function's name, in a string
#1129: FILE: drivers/serial/omap-serial.c:864:
+	DPRINTK("serial_omap_verify_port+\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_type', this function's name, in a string
#1138: FILE: drivers/serial/omap-serial.c:873:
+	DPRINTK("serial_omap_type+%d\n", up->pdev->id);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1174: FILE: drivers/serial/omap-serial.c:909:
+			unsigned int msr = serial_in(up, UART_MSR);
+			up->msr_saved_flags |= msr & MSR_SAVE_FLAGS;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1198: FILE: drivers/serial/omap-serial.c:933:
+serial_omap_console_write(struct console *co, const char *s,
+		unsigned int count)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!serial_omap_console_ports[co->index]"
#1238: FILE: drivers/serial/omap-serial.c:973:
+	if (serial_omap_console_ports[co->index] == NULL)

WARNING:CONST_STRUCT: struct uart_ops should normally be const
#1275: FILE: drivers/serial/omap-serial.c:1010:
+struct uart_ops serial_omap_pops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:LINE_SPACING: Missing a blank line after declarations
#1331: FILE: drivers/serial/omap-serial.c:1066:
+	struct uart_omap_port *up = platform_get_drvdata(dev);
+	if (up)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1341: FILE: drivers/serial/omap-serial.c:1076:
+	unsigned int curr_dma_pos;
+	curr_dma_pos = omap_readl(OMAP34XX_DMA4_BASE +

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'curr_dma_pos == up->uart_dma.prev_rx_dma_pos'
#1343: FILE: drivers/serial/omap-serial.c:1078:
+	if ((curr_dma_pos == up->uart_dma.prev_rx_dma_pos) ||
+			     (curr_dma_pos == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'curr_dma_pos == 0'
#1343: FILE: drivers/serial/omap-serial.c:1078:
+	if ((curr_dma_pos == up->uart_dma.prev_rx_dma_pos) ||
+			     (curr_dma_pos == 0)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1344: FILE: drivers/serial/omap-serial.c:1079:
+	if ((curr_dma_pos == up->uart_dma.prev_rx_dma_pos) ||
+			     (curr_dma_pos == 0)) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1355: FILE: drivers/serial/omap-serial.c:1090:
+		return;
+	} else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1360: FILE: drivers/serial/omap-serial.c:1095:
+		tty_insert_flip_string(up->port.info->port.tty,
+				up->uart_dma.rx_buf +

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1374: FILE: drivers/serial/omap-serial.c:1109:
+
+	}

WARNING:RETURN_VOID: void function return statements are not generally useful
#1380: FILE: drivers/serial/omap-serial.c:1115:
+	return;
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#1390: FILE: drivers/serial/omap-serial.c:1125:
+	unsigned int tmp;
+	tmp = (serial_in(up, UART_OMAP_SYSC) & 0x7) | (1 << 3);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1394: FILE: drivers/serial/omap-serial.c:1129:
+		omap_request_dma(uart_dma_rx[up->pdev->id-1], "UART Rx DMA",
 		                                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1395: FILE: drivers/serial/omap-serial.c:1130:
+		omap_request_dma(uart_dma_rx[up->pdev->id-1], "UART Rx DMA",
+			(void *)uart_rx_dma_callback, up,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around up->uart_dma.rx_dma_channel
#1396: FILE: drivers/serial/omap-serial.c:1131:
+				&(up->uart_dma.rx_dma_channel));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1402: FILE: drivers/serial/omap-serial.c:1137:
+		omap_set_dma_dest_params(up->uart_dma.rx_dma_channel, 0,
+					OMAP_DMA_AMODE_POST_INC,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1405: FILE: drivers/serial/omap-serial.c:1140:
+		omap_set_dma_transfer_params(up->uart_dma.rx_dma_channel,
+					OMAP_DMA_DATA_TYPE_S8,

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1408: FILE: drivers/serial/omap-serial.c:1143:
+					uart_dma_rx[up->pdev->id-1], 0);
 					                        ^

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1429: FILE: drivers/serial/omap-serial.c:1164:
+	/* It is a circular buffer. See if the buffer has wounded back.
+	* If yes it will have to be transferred in two separate dma

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1440: FILE: drivers/serial/omap-serial.c:1175:
+	omap_set_dma_src_params(up->uart_dma.tx_dma_channel, 0,
+		OMAP_DMA_AMODE_POST_INC, start, 0, 0);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1446: FILE: drivers/serial/omap-serial.c:1181:
+				     uart_dma_tx[(up->pdev->id)-1], 0);
 				                               ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1455: FILE: drivers/serial/omap-serial.c:1190:
+	struct circ_buf *xmit = &up->port.info->xmit;
+	xmit->tail = (xmit->tail + up->uart_dma.tx_buf_size) & \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#1455: FILE: drivers/serial/omap-serial.c:1190:
+	xmit->tail = (xmit->tail + up->uart_dma.tx_buf_size) & \

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1463: FILE: drivers/serial/omap-serial.c:1198:
+	if (uart_circ_empty(xmit)) {
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around up->uart_dma.tx_lock
#1464: FILE: drivers/serial/omap-serial.c:1199:
+		spin_lock(&(up->uart_dma.tx_lock));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around up->uart_dma.tx_lock
#1467: FILE: drivers/serial/omap-serial.c:1202:
+		spin_unlock(&(up->uart_dma.tx_lock));

WARNING:RETURN_VOID: void function return statements are not generally useful
#1474: FILE: drivers/serial/omap-serial.c:1209:
+	return;
+}

CHECK:SPACING: No space is necessary after a cast
#1494: FILE: drivers/serial/omap-serial.c:1229:
+	ret = (int) request_mem_region(mem->start, (mem->end - mem->start) + 1,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!up"
#1501: FILE: drivers/serial/omap-serial.c:1236:
+	if (up == NULL) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1516: FILE: drivers/serial/omap-serial.c:1251:
+	if ((pdev->id-1) == QUART) {
 	             ^

CHECK:SPACING: No space is necessary after a cast
#1522: FILE: drivers/serial/omap-serial.c:1257:
+		up->port.membase = (void *) IO_ADDRESS(mem->start);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1530: FILE: drivers/serial/omap-serial.c:1265:
+	if ((pdev->id-1) == UART1) {
 	             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1538: FILE: drivers/serial/omap-serial.c:1273:
+	} else if ((pdev->id-1) == UART2) {
 	                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1546: FILE: drivers/serial/omap-serial.c:1281:
+	} else if ((pdev->id-1) == UART3) {
 	                    ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around up->uart_dma.tx_lock
#1556: FILE: drivers/serial/omap-serial.c:1291:
+		spin_lock_init(&(up->uart_dma.tx_lock));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around up->uart_dma.rx_lock
#1557: FILE: drivers/serial/omap-serial.c:1292:
+		spin_lock_init(&(up->uart_dma.rx_lock));

WARNING:TYPO_SPELLING: 'paramter' may be misspelled - perhaps 'parameter'?
#1562: FILE: drivers/serial/omap-serial.c:1297:
+		pr_err("\n %s: Invalid console paramter...\n", __func__);
 		                               ^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1584: FILE: drivers/serial/omap-serial.c:1319:
+	struct uart_omap_port *up = platform_get_drvdata(dev);
+	platform_set_drvdata(dev, NULL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1628: FILE: drivers/serial/omap-serial.c:1363:
+	unsigned int tcr, tlr, uasr;
+	DPRINTK("Register dump for UART%d\n", up->pdev->id);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1673: FILE: drivers/serial/omap-serial.c:1408:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1683: FILE: drivers/serial/omap-serial.c:1418:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078628.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 60 warnings, 72 checks, 1617 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078628.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
