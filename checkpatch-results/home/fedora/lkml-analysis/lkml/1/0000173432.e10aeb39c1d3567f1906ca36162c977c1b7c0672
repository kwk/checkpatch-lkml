WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#106: FILE: drivers/net/ppp_generic.c:192:
+	/*
+	 * all_ppp_mutex protects the units_idr mapping.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#118: FILE: drivers/net/ppp_generic.c:204:
+	/*
+	 * all_channels_lock protects all_channels and

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#135: FILE: drivers/net/ppp_generic.c:235:
+static int ppp_unattached_ioctl(struct net *net, struct ppp_file *pf,
+			struct file *file, unsigned int cmd, unsigned long arg);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#162: FILE: drivers/net/ppp_generic.c:277:
+	BUG_ON(!net);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#187: FILE: drivers/net/ppp_generic.c:791:
+static int ppp_unattached_ioctl(struct net *net, struct ppp_file *pf,
+			struct file *file, unsigned int cmd, unsigned long arg)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#280: FILE: drivers/net/ppp_generic.c:897:
+	/*
+	 * if someone has cached our net then

WARNING:MISPLACED_INIT: __net_initdata should be placed after ppp_net_ops
#287: FILE: drivers/net/ppp_generic.c:904:
+static __net_initdata struct pernet_operations ppp_net_ops = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#311: FILE: drivers/net/ppp_generic.c:921:
+		printk(KERN_ERR "failed to register PPP pernet device (%d)\n", err);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#457: FILE: drivers/net/ppp_generic.c:2527:
+	/*
+	 * drum roll: don't forget to set

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#620: FILE: drivers/net/ppp_generic.c:2866:
+EXPORT_SYMBOL(ppp_register_net_channel);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#641: FILE: include/linux/ppp_channel.h:61:
+extern int ppp_register_net_channel(struct net *, struct ppp_channel *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct net *' should also have an identifier name
#641: FILE: include/linux/ppp_channel.h:61:
+extern int ppp_register_net_channel(struct net *, struct ppp_channel *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ppp_channel *' should also have an identifier name
#641: FILE: include/linux/ppp_channel.h:61:
+extern int ppp_register_net_channel(struct net *, struct ppp_channel *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000173432.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 10 warnings, 3 checks, 561 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000173432.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
