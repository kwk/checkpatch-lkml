WARNING:TYPO_SPELLING: 'susbsystem' may be misspelled - perhaps 'subsystem'?
#49: 
bus susbsystem.
    ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#63: FILE: drivers/mtd/maps/vmu_flash.c:1:
+/* vmu-flash.c

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'removeable' may be misspelled - perhaps 'removable'?
#112: FILE: drivers/mtd/maps/vmu_flash.c:50:
+	u32 removeable;
 	    ^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#126: FILE: drivers/mtd/maps/vmu_flash.c:64:
+static struct vmu_block *ofs_to_block(unsigned long src_ofs,
+	struct mtd_info *mtd, int partition)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'card->parts'
#138: FILE: drivers/mtd/maps/vmu_flash.c:76:
+	if (src_ofs >= ((card->parts)[partition]).numblocks * card->blocklen)

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'card->parts'
#142: FILE: drivers/mtd/maps/vmu_flash.c:80:
+	if (num > ((card->parts)[partition]).numblocks)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*vblock)...) over kmalloc(sizeof(struct vmu_block)...)
#145: FILE: drivers/mtd/maps/vmu_flash.c:83:
+	vblock = kmalloc(sizeof(struct vmu_block), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:LINE_SPACING: Please don't use multiple blank lines
#157: FILE: drivers/mtd/maps/vmu_flash.c:95:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#193: FILE: drivers/mtd/maps/vmu_flash.c:131:
+static int maple_vmu_read_block(unsigned int num, unsigned char *buf,
+	struct mtd_info *mtd)

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#207: FILE: drivers/mtd/maps/vmu_flash.c:145:
+	/***
+	* Maple devices include a mutex to ensure packets injected into

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#212: FILE: drivers/mtd/maps/vmu_flash.c:150:
+		printk(KERN_INFO "Maple: VMU at (%d, %d) is locked -"

WARNING:SPLIT_STRING: quoted string split across lines
#213: FILE: drivers/mtd/maps/vmu_flash.c:151:
+		printk(KERN_INFO "Maple: VMU at (%d, %d) is locked -"
+			" aborting read\n", mdev->unit, mdev->port);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#241: FILE: drivers/mtd/maps/vmu_flash.c:179:
+		printk(KERN_INFO "Maple: VMU read failed on block 0x%X\n", num);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#264: FILE: drivers/mtd/maps/vmu_flash.c:202:
+static int maple_vmu_write_block(unsigned int num, const unsigned char *buf,
+	struct mtd_info *mtd)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#277: FILE: drivers/mtd/maps/vmu_flash.c:215:
+	phaselen = card->blocklen/card->writecnt;
 	                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#303: FILE: drivers/mtd/maps/vmu_flash.c:241:
+	/***
+	* The Maple bus driver will unlock the mutex once the command

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#304: FILE: drivers/mtd/maps/vmu_flash.c:242:
+	* has been processed, so we'll just sleep waiting for the unlock */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#317: FILE: drivers/mtd/maps/vmu_flash.c:255:
+	printk(KERN_INFO "Maple: VMU at (%d, %d) is locked -"

WARNING:SPLIT_STRING: quoted string split across lines
#318: FILE: drivers/mtd/maps/vmu_flash.c:256:
+	printk(KERN_INFO "Maple: VMU at (%d, %d) is locked -"
+		" aborting write\n", mdev->unit, mdev->port);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#321: FILE: drivers/mtd/maps/vmu_flash.c:259:
+	printk("Maple: VMU (%d, %d): write failed\n", mdev->port, mdev->unit);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#329: FILE: drivers/mtd/maps/vmu_flash.c:267:
+static unsigned char vmu_flash_read_char(unsigned long ofs, int *retval,
+	struct mtd_info *mtd)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#377: FILE: drivers/mtd/maps/vmu_flash.c:315:
+static int vmu_flash_read(struct mtd_info *mtd, loff_t from, size_t len,
+	size_t *retlen,  u_char *buf)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pcache->block == vblock->num'
#407: FILE: drivers/mtd/maps/vmu_flash.c:345:
+		if (pcache->valid &&
+			time_before(jiffies, pcache->jiffies_atc + HZ) &&
+			(pcache->block == vblock->num)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#408: FILE: drivers/mtd/maps/vmu_flash.c:346:
+		if (pcache->valid &&
+			time_before(jiffies, pcache->jiffies_atc + HZ) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#415: FILE: drivers/mtd/maps/vmu_flash.c:353:
+				memcpy(buf + index,
+					pcache->buffer + vblock->ofs,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#444: FILE: drivers/mtd/maps/vmu_flash.c:382:
+static int vmu_flash_write(struct mtd_info *mtd, loff_t to, size_t len,
+	size_t *retlen, const u_char *buf)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#485: FILE: drivers/mtd/maps/vmu_flash.c:423:
+	do {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#524: FILE: drivers/mtd/maps/vmu_flash.c:462:
+	printk(KERN_INFO "Maple: VMU write failing with error %d\n", error);

WARNING:LINE_SPACING: Missing a blank line after declarations
#531: FILE: drivers/mtd/maps/vmu_flash.c:469:
+	int z;
+	erase->state = MTD_ERASING;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (erase->callback)
#535: FILE: drivers/mtd/maps/vmu_flash.c:473:
+		(erase->callback) (erase);

CHECK:CAMELCASE: Avoid CamelCase: <tempA>
#560: FILE: drivers/mtd/maps/vmu_flash.c:498:
+	card->tempA = res[12];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <tempB>
#561: FILE: drivers/mtd/maps/vmu_flash.c:499:
+	card->tempB = res[6];

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#563: FILE: drivers/mtd/maps/vmu_flash.c:501:
+	printk(KERN_INFO "Maple: VMU device at partition %d has %d user "

WARNING:SPLIT_STRING: quoted string split across lines
#564: FILE: drivers/mtd/maps/vmu_flash.c:502:
+	printk(KERN_INFO "Maple: VMU device at partition %d has %d user "
+		"blocks with a root block at %d\n", card->partition,

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*mpart)...) over kmalloc(sizeof(struct mdev_part)...)
#589: FILE: drivers/mtd/maps/vmu_flash.c:527:
+	mpart = kmalloc(sizeof(struct mdev_part), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*pcache)...) over kmalloc(sizeof(struct vmu_cache)...)
#598: FILE: drivers/mtd/maps/vmu_flash.c:536:
+	pcache = kmalloc(sizeof(struct vmu_cache), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#611: FILE: drivers/mtd/maps/vmu_flash.c:549:
+	maple_getcond_callback(mdev, NULL, 0,
+		MAPLE_FUNC_MEMCARD);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'card->partition'
#613: FILE: drivers/mtd/maps/vmu_flash.c:551:
+	if (++(card->partition) < card->partitions) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#625: FILE: drivers/mtd/maps/vmu_flash.c:563:
+		maple_getcond_callback(mdev, vmu_queryblocks, 0,
+			MAPLE_FUNC_MEMCARD);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around mdev->mq->mutex
#627: FILE: drivers/mtd/maps/vmu_flash.c:565:
+		locking = mutex_lock_interruptible(&(mdev->mq->mutex));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#635: FILE: drivers/mtd/maps/vmu_flash.c:573:
+	printk("mtd: Could not register maple device at (%d, %d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#636: FILE: drivers/mtd/maps/vmu_flash.c:574:
+	printk("mtd: Could not register maple device at (%d, %d)\n",
+		mdev->port, mdev->unit);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#650: FILE: drivers/mtd/maps/vmu_flash.c:588:
+	maple_getcond_callback(mdev, NULL, 0,
+		MAPLE_FUNC_MEMCARD);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#665: FILE: drivers/mtd/maps/vmu_flash.c:603:
+	/* Need to count how many bits are set - to find out which
+	* function_data element has details of the memory card:

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#666: FILE: drivers/mtd/maps/vmu_flash.c:604:
+	* using Brian Kernighan's/Peter Wegner's method */

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*card)...) over kmalloc(sizeof(struct memcard)...)
#672: FILE: drivers/mtd/maps/vmu_flash.c:610:
+	card = kmalloc(sizeof(struct memcard), GFP_KERNEL);

WARNING:TYPO_SPELLING: 'removeable' may be misspelled - perhaps 'removable'?
#682: FILE: drivers/mtd/maps/vmu_flash.c:620:
+	card->removeable = (basic_flash_data >> 7) & 1;
 	      ^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#686: FILE: drivers/mtd/maps/vmu_flash.c:624:
+	* real world, but the hardware supports them, so, so will we */

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#686: FILE: drivers/mtd/maps/vmu_flash.c:624:
+	/* Not sure there are actually any multi-partition devices in the
+	* real world, but the hardware supports them, so, so will we */

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*card->parts)...) over kmalloc(sizeof(struct vmupart)...)
#687: FILE: drivers/mtd/maps/vmu_flash.c:625:
+	card->parts = kmalloc(sizeof(struct vmupart) * card->partitions,

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#687: FILE: drivers/mtd/maps/vmu_flash.c:625:
+	card->parts = kmalloc(sizeof(struct vmupart) * card->partitions,
+		GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#688: FILE: drivers/mtd/maps/vmu_flash.c:626:
+	card->parts = kmalloc(sizeof(struct vmupart) * card->partitions,
+		GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*card->mtd)...) over kzalloc(sizeof(struct mtd_info)...)
#694: FILE: drivers/mtd/maps/vmu_flash.c:632:
+	card->mtd = kzalloc(sizeof(struct mtd_info) * card->partitions,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#695: FILE: drivers/mtd/maps/vmu_flash.c:633:
+	card->mtd = kzalloc(sizeof(struct mtd_info) * card->partitions,
+		GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#719: FILE: drivers/mtd/maps/vmu_flash.c:657:
+	maple_getcond_callback(mdev, vmu_queryblocks, 0,
+		MAPLE_FUNC_MEMCARD);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around mdev->mq->mutex
#721: FILE: drivers/mtd/maps/vmu_flash.c:659:
+	locking = mutex_lock_interruptible(&(mdev->mq->mutex));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#745: FILE: drivers/mtd/maps/vmu_flash.c:683:
+		printk(KERN_INFO "Maple: Could not disconnect VMU device at:"

WARNING:SPLIT_STRING: quoted string split across lines
#746: FILE: drivers/mtd/maps/vmu_flash.c:684:
+		printk(KERN_INFO "Maple: Could not disconnect VMU device at:"
+			"(%d, %d)\n", mdev->port, mdev->unit);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#760: FILE: drivers/mtd/maps/vmu_flash.c:698:
+
+}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mdev->driver == &vmu_flash_driver'
#801: FILE: drivers/mtd/maps/vmu_flash.c:739:
+	if ((mdev->function & MAPLE_FUNC_MEMCARD)
+		&& (mdev->driver == &vmu_flash_driver))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#802: FILE: drivers/mtd/maps/vmu_flash.c:740:
+	if ((mdev->function & MAPLE_FUNC_MEMCARD)
+		&& (mdev->driver == &vmu_flash_driver))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000304644.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 25 warnings, 36 checks, 763 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000304644.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
