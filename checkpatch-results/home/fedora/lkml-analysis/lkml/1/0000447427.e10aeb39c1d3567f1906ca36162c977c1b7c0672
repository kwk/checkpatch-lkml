ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: fs/sysfs/dir.c:240:
+                bin_attr = sd->s_elem.bin_attr.bin_attr;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: fs/sysfs/dir.c:240:
+                bin_attr = sd->s_elem.bin_attr.bin_attr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#184: FILE: fs/sysfs/dir.c:243:
+                attr = sd->s_elem.attr.attr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: fs/sysfs/dir.c:243:
+                attr = sd->s_elem.attr.attr;$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#359: FILE: fs/sysfs/symlink.c:53:
+	sd = sysfs_new_dirent(name, S_IFLNK|S_IRWXUGO, SYSFS_KOBJ_LINK);
 	                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#359: FILE: fs/sysfs/symlink.c:53:
+	sd = sysfs_new_dirent(name, S_IFLNK|S_IRWXUGO, SYSFS_KOBJ_LINK);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#383: FILE: fs/sysfs/sysfs.h:1:
+struct sysfs_elem_dir {

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:POINTER_LOCATION: "foo		* bar" should be "foo		*bar"
#384: FILE: fs/sysfs/sysfs.h:2:
+	struct kobject		* kobj;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo		* bar" should be "foo		*bar"
#388: FILE: fs/sysfs/sysfs.h:6:
+	struct kobject		* target_kobj;

ERROR:POINTER_LOCATION: "foo	* bar" should be "foo	*bar"
#392: FILE: fs/sysfs/sysfs.h:10:
+	struct attribute	* attr;

ERROR:POINTER_LOCATION: "foo	* bar" should be "foo	*bar"
#396: FILE: fs/sysfs/sysfs.h:14:
+	struct bin_attribute	* bin_attr;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#423: FILE: fs/sysfs/sysfs.h:47:
+extern struct sysfs_dirent *sysfs_new_dirent(const char *name, umode_t mode,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000447427.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 4 warnings, 2 checks, 357 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000447427.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
