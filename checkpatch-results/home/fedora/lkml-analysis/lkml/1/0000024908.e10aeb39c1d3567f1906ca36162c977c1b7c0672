WARNING:MISPLACED_INIT: __initdata should be placed after treat_disabled_cpus_as_hotplug
#64: FILE: arch/x86/kernel/smpboot.c:1184:
+static __initdata int treat_disabled_cpus_as_hotplug;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

ERROR:CODE_INDENT: code indent should use tabs where possible
#67: FILE: arch/x86/kernel/smpboot.c:1187:
+        printk(KERN_NOTICE "%s detected: treat disabled cpus as hotplug ones\n", d->ident);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: arch/x86/kernel/smpboot.c:1187:
+        printk(KERN_NOTICE "%s detected: treat disabled cpus as hotplug ones\n", d->ident);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#67: FILE: arch/x86/kernel/smpboot.c:1187:
+        printk(KERN_NOTICE "%s detected: treat disabled cpus as hotplug ones\n", d->ident);

ERROR:CODE_INDENT: code indent should use tabs where possible
#68: FILE: arch/x86/kernel/smpboot.c:1188:
+        treat_disabled_cpus_as_hotplug = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: arch/x86/kernel/smpboot.c:1188:
+        treat_disabled_cpus_as_hotplug = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#70: FILE: arch/x86/kernel/smpboot.c:1190:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: arch/x86/kernel/smpboot.c:1190:
+        return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#74: FILE: arch/x86/kernel/smpboot.c:1194:
+        { hotplug_cpus_check, "WHICH VENDOR WHAT SYSTEM",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: arch/x86/kernel/smpboot.c:1194:
+        { hotplug_cpus_check, "WHICH VENDOR WHAT SYSTEM",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#75: FILE: arch/x86/kernel/smpboot.c:1195:
+                {       DMI_MATCH(DMI_BIOS_VENDOR, "WHAT VENDOR"),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: arch/x86/kernel/smpboot.c:1195:
+                {       DMI_MATCH(DMI_BIOS_VENDOR, "WHAT VENDOR"),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#76: FILE: arch/x86/kernel/smpboot.c:1196:
+                        DMI_MATCH(DMI_BIOS_VERSION, "WHAT VER"),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: arch/x86/kernel/smpboot.c:1196:
+                        DMI_MATCH(DMI_BIOS_VERSION, "WHAT VER"),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#77: FILE: arch/x86/kernel/smpboot.c:1197:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: arch/x86/kernel/smpboot.c:1197:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: arch/x86/kernel/smpboot.c:1198:
+        },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: arch/x86/kernel/smpboot.c:1198:
+        },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: arch/x86/kernel/smpboot.c:1199:
+        { } /* NULL entry stops DMI scanning */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: arch/x86/kernel/smpboot.c:1199:
+        { } /* NULL entry stops DMI scanning */$

CHECK:BRACES: braces {} should be used on all arms of this statement
#91: FILE: arch/x86/kernel/smpboot.c:1228:
+	if (setup_possible_cpus == -1) {
[...]
 	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000024908.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 11 warnings, 1 checks, 57 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000024908.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
