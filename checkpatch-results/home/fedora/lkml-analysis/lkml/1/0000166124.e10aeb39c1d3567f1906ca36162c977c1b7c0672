ERROR:SPACING: space required after that ',' (ctx:VxV)
#180: FILE: arch/alpha/include/asm/system.h:320:
+#define xchg_local(ptr,x)						\
                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#180: FILE: arch/alpha/include/asm/system.h:320:
+#define xchg_local(ptr,x)						\
+  ({									\
+     __typeof__(*(ptr)) _x_ = (x);					\
+     (__typeof__(*(ptr))) __xchg_local((ptr), (unsigned long)_x_,	\
+				       sizeof(*(ptr)));			\
   })

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: arch/alpha/include/asm/system.h:321:
+  ({^I^I^I^I^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: arch/alpha/include/asm/system.h:322:
+     __typeof__(*(ptr)) _x_ = (x);^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: arch/alpha/include/asm/system.h:323:
+     (__typeof__(*(ptr))) __xchg_local((ptr), (unsigned long)_x_,^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#290: FILE: arch/alpha/include/asm/system.h:327:
+#define cmpxchg_local(ptr, o, n)					\
+  ({									\
+     __typeof__(*(ptr)) _o_ = (o);					\
+     __typeof__(*(ptr)) _n_ = (n);					\
+     (__typeof__(*(ptr))) __cmpxchg_local((ptr), (unsigned long)_o_,	\
+					  (unsigned long)_n_,		\
+					  sizeof(*(ptr)));		\
   })

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: arch/alpha/include/asm/system.h:328:
+  ({^I^I^I^I^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: arch/alpha/include/asm/system.h:329:
+     __typeof__(*(ptr)) _o_ = (o);^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: arch/alpha/include/asm/system.h:330:
+     __typeof__(*(ptr)) _n_ = (n);^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: arch/alpha/include/asm/system.h:331:
+     (__typeof__(*(ptr))) __cmpxchg_local((ptr), (unsigned long)_o_,^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#394: FILE: arch/alpha/include/asm/system.h:336:
+#define cmpxchg64_local(ptr, o, n)					\
+  ({									\
+	BUILD_BUG_ON(sizeof(*(ptr)) != 8);				\
+	cmpxchg_local((ptr), (o), (n));					\
+  })

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: arch/alpha/include/asm/system.h:337:
+  ({^I^I^I^I^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: arch/alpha/include/asm/system.h:340:
+  })$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#460: FILE: arch/alpha/include/asm/system.h:352:
+#define xchg(ptr,x)							\
                 ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#460: FILE: arch/alpha/include/asm/system.h:352:
+#define xchg(ptr,x)							\
+  ({									\
+     __typeof__(*(ptr)) _x_ = (x);					\
+     (__typeof__(*(ptr))) __xchg((ptr), (unsigned long)_x_,		\
+				 sizeof(*(ptr)));			\
   })

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: arch/alpha/include/asm/system.h:353:
+  ({^I^I^I^I^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: arch/alpha/include/asm/system.h:354:
+     __typeof__(*(ptr)) _x_ = (x);^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: arch/alpha/include/asm/system.h:355:
+     (__typeof__(*(ptr))) __xchg((ptr), (unsigned long)_x_,^I^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#592: FILE: arch/alpha/include/asm/system.h:359:
+#define cmpxchg(ptr, o, n)						\
+  ({									\
+     __typeof__(*(ptr)) _o_ = (o);					\
+     __typeof__(*(ptr)) _n_ = (n);					\
+     (__typeof__(*(ptr))) __cmpxchg((ptr), (unsigned long)_o_,		\
+				    (unsigned long)_n_,	sizeof(*(ptr)));\
   })

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#593: FILE: arch/alpha/include/asm/system.h:360:
+  ({^I^I^I^I^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#594: FILE: arch/alpha/include/asm/system.h:361:
+     __typeof__(*(ptr)) _o_ = (o);^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#595: FILE: arch/alpha/include/asm/system.h:362:
+     __typeof__(*(ptr)) _n_ = (n);^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#596: FILE: arch/alpha/include/asm/system.h:363:
+     (__typeof__(*(ptr))) __cmpxchg((ptr), (unsigned long)_o_,^I^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#604: FILE: arch/alpha/include/asm/system.h:367:
+#define cmpxchg64(ptr, o, n)						\
+  ({									\
+	BUILD_BUG_ON(sizeof(*(ptr)) != 8);				\
+	cmpxchg((ptr), (o), (n));					\
   })

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#605: FILE: arch/alpha/include/asm/system.h:368:
+  ({^I^I^I^I^I^I^I^I^I\$

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#618: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#623: FILE: arch/alpha/include/asm/xchg.h:1:
+#ifndef __ALPHA_SYSTEM_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#639: FILE: arch/alpha/include/asm/xchg.h:17:
+____xchg(_u8, volatile char *m, unsigned long val)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#643: FILE: arch/alpha/include/asm/xchg.h:21:
+	__asm__ __volatile__(

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#663: FILE: arch/alpha/include/asm/xchg.h:41:
+____xchg(_u16, volatile short *m, unsigned long val)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#667: FILE: arch/alpha/include/asm/xchg.h:45:
+	__asm__ __volatile__(

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#687: FILE: arch/alpha/include/asm/xchg.h:65:
+____xchg(_u32, volatile int *m, unsigned long val)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#691: FILE: arch/alpha/include/asm/xchg.h:69:
+	__asm__ __volatile__(

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#707: FILE: arch/alpha/include/asm/xchg.h:85:
+____xchg(_u64, volatile long *m, unsigned long val)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#711: FILE: arch/alpha/include/asm/xchg.h:89:
+	__asm__ __volatile__(

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#727: FILE: arch/alpha/include/asm/xchg.h:105:
+/* This function doesn't exist, so you'll get a linker error
+   if something tries to do an invalid xchg().  */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#727: FILE: arch/alpha/include/asm/xchg.h:105:
+   if something tries to do an invalid xchg().  */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#728: FILE: arch/alpha/include/asm/xchg.h:106:
+extern void __xchg_called_with_bad_pointer(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#731: FILE: arch/alpha/include/asm/xchg.h:109:
+____xchg(, volatile void *ptr, unsigned long x, int size)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#733: FILE: arch/alpha/include/asm/xchg.h:111:
+	switch (size) {
+		case 1:
[...]
+		case 2:
[...]
+		case 4:
[...]
+		case 8:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#759: FILE: arch/alpha/include/asm/xchg.h:137:
+____cmpxchg(_u8, volatile char *m, unsigned char old, unsigned char new)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#763: FILE: arch/alpha/include/asm/xchg.h:141:
+	__asm__ __volatile__(

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#786: FILE: arch/alpha/include/asm/xchg.h:164:
+____cmpxchg(_u16, volatile short *m, unsigned short old, unsigned short new)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#790: FILE: arch/alpha/include/asm/xchg.h:168:
+	__asm__ __volatile__(

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#813: FILE: arch/alpha/include/asm/xchg.h:191:
+____cmpxchg(_u32, volatile int *m, int old, int new)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#817: FILE: arch/alpha/include/asm/xchg.h:195:
+	__asm__ __volatile__(

CHECK:SPACING: No space is necessary after a cast
#830: FILE: arch/alpha/include/asm/xchg.h:208:
+	: "r"((long) old), "r"(new), "m"(*m) : "memory");

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#836: FILE: arch/alpha/include/asm/xchg.h:214:
+____cmpxchg(_u64, volatile long *m, unsigned long old, unsigned long new)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#840: FILE: arch/alpha/include/asm/xchg.h:218:
+	__asm__ __volatile__(

CHECK:SPACING: No space is necessary after a cast
#853: FILE: arch/alpha/include/asm/xchg.h:231:
+	: "r"((long) old), "r"(new), "m"(*m) : "memory");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#859: FILE: arch/alpha/include/asm/xchg.h:237:
+/* This function doesn't exist, so you'll get a linker error
+   if something tries to do an invalid cmpxchg().  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#859: FILE: arch/alpha/include/asm/xchg.h:237:
+   if something tries to do an invalid cmpxchg().  */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#860: FILE: arch/alpha/include/asm/xchg.h:238:
+extern void __cmpxchg_called_with_bad_pointer(void);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#863: FILE: arch/alpha/include/asm/xchg.h:241:
+____cmpxchg(, volatile void *ptr, unsigned long old, unsigned long new,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#864: FILE: arch/alpha/include/asm/xchg.h:242:
+____cmpxchg(, volatile void *ptr, unsigned long old, unsigned long new,
+	      int size)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#866: FILE: arch/alpha/include/asm/xchg.h:244:
+	switch (size) {
+		case 1:
[...]
+		case 2:
[...]
+		case 4:
[...]
+		case 8:

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000166124.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 33 warnings, 19 checks, 826 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000166124.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
