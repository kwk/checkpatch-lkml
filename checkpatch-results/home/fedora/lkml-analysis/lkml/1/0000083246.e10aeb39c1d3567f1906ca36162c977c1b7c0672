ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: fs/direct-io.c:932:
+direct_io_worker(struct kiocb *iocb, struct inode *inode, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#105: FILE: fs/direct-io.c:933:
+direct_io_worker(struct kiocb *iocb, struct inode *inode, 
+	struct dio_args *args, unsigned blkbits, get_block_t get_block,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#105: FILE: fs/direct-io.c:933:
+	struct dio_args *args, unsigned blkbits, get_block_t get_block,

CHECK:SPACING: No space is necessary after a cast
#133: FILE: fs/direct-io.c:969:
+		user_addr = (unsigned long) iov[seg].iov_base;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#162: FILE: fs/direct-io.c:1110:
+__blockdev_direct_IO(struct kiocb *iocb, struct inode *inode,
+	struct block_device *bdev, struct dio_args *args, get_block_t get_block,

CHECK:SPACING: No space is necessary after a cast
#199: FILE: fs/direct-io.c:1142:
+		addr = (unsigned long) args->iov[seg].iov_base;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#220: FILE: fs/direct-io.c:1181:
+			retval = filemap_write_and_wait_range(mapping,
+							args->offset, end - 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#231: FILE: fs/direct-io.c:1208:
+	retval = direct_io_worker(iocb, inode, args, blkbits, get_block, end_io,
+					dio);

CHECK:SPACING: No space is necessary after a cast
#541: FILE: fs/nfs/direct.c:117:
+			(long long) args->offset, args->nr_segs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#653: FILE: fs/xfs/linux-2.6/xfs_aops.c:1548:
+		ret = blockdev_direct_IO_own_locking(iocb, inode, bdev, args,
+				xfs_get_blocks_direct, xfs_end_io_direct);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#661: FILE: fs/xfs/linux-2.6/xfs_aops.c:1552:
+		ret = blockdev_direct_IO_no_locking(iocb, inode,
+			bdev, args, xfs_get_blocks_direct, xfs_end_io_direct);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#683: FILE: include/linux/fs.h:589:
+	ssize_t (*direct_IO)(struct kiocb *, struct dio_args *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dio_args *' should also have an identifier name
#683: FILE: include/linux/fs.h:589:
+	ssize_t (*direct_IO)(struct kiocb *, struct dio_args *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#708: FILE: include/linux/fs.h:2257:
+ssize_t __blockdev_direct_IO(struct kiocb *iocb, struct inode *inode,
+	struct block_device *bdev, struct dio_args *args, get_block_t get_block,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#711: FILE: include/linux/fs.h:2260:
+ssize_t generic_file_direct_IO(int, struct address_space *, struct kiocb *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct address_space *' should also have an identifier name
#711: FILE: include/linux/fs.h:2260:
+ssize_t generic_file_direct_IO(int, struct address_space *, struct kiocb *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#711: FILE: include/linux/fs.h:2260:
+ssize_t generic_file_direct_IO(int, struct address_space *, struct kiocb *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#711: FILE: include/linux/fs.h:2260:
+ssize_t generic_file_direct_IO(int, struct address_space *, struct kiocb *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#711: FILE: include/linux/fs.h:2260:
+ssize_t generic_file_direct_IO(int, struct address_space *, struct kiocb *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#711: FILE: include/linux/fs.h:2260:
+ssize_t generic_file_direct_IO(int, struct address_space *, struct kiocb *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#712: FILE: include/linux/fs.h:2261:
+ssize_t generic_file_direct_IO(int, struct address_space *, struct kiocb *,
+				const struct iovec *, loff_t, unsigned long);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#725: FILE: include/linux/fs.h:2270:
+static inline ssize_t blockdev_direct_IO(struct kiocb *iocb,
+	struct inode *inode, struct block_device *bdev, struct dio_args *args,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#739: FILE: include/linux/fs.h:2278:
+static inline ssize_t blockdev_direct_IO_no_locking(struct kiocb *iocb,
+	struct inode *inode, struct block_device *bdev, struct dio_args *args,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#753: FILE: include/linux/fs.h:2286:
+static inline ssize_t blockdev_direct_IO_own_locking(struct kiocb *iocb,
+	struct inode *inode, struct block_device *bdev, struct dio_args *args,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#773: FILE: include/linux/nfs_fs.h:411:
+extern ssize_t nfs_direct_IO(struct kiocb *, struct dio_args *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#773: FILE: include/linux/nfs_fs.h:411:
+extern ssize_t nfs_direct_IO(struct kiocb *, struct dio_args *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dio_args *' should also have an identifier name
#773: FILE: include/linux/nfs_fs.h:411:
+extern ssize_t nfs_direct_IO(struct kiocb *, struct dio_args *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#799: FILE: mm/filemap.c:2149:
+	written = generic_file_direct_IO(WRITE, mapping, iocb, iov, pos,
+						*nr_segs);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000083246.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 11 warnings, 16 checks, 628 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000083246.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
