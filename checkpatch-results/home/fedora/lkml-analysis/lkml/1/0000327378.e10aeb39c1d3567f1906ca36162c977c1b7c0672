WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
> request arrived, in this experiment  the IO submission gets migrated to the

WARNING:TYPO_SPELLING: 'aswell' may be misspelled - perhaps 'as well'?
#51: 
> load aswell.
       ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACING: Unnecessary space before function pointer arguments
#93: FILE: arch/x86/kernel/smp_64.c:326:
+	void (*func) (void *info);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#99: FILE: arch/x86/kernel/smp_64.c:332:
+	spinlock_t lock;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#102: FILE: arch/x86/kernel/smp_64.c:335:
+};
+static DEFINE_PER_CPU(struct call_single_queue, call_single_queue);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#121: FILE: arch/x86/kernel/smp_64.c:354:
+int smp_call_function_fast(int cpu, void (*func)(void *), void *info,
+				    int wait)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*data)...) over kmalloc(sizeof(struct call_single_data)...)
#128: FILE: arch/x86/kernel/smp_64.c:361:
+	data = kmalloc(sizeof(struct call_single_data), GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:MEMORY_BARRIER: memory barrier without comment
#174: FILE: arch/x86/kernel/smp_64.c:407:
+			smp_mb();

CHECK:BRACES: braces {} should be used on all arms of this statement
#210: FILE: block/blk-core.c:1632:
+		if (rq->submission_cpu != smp_processor_id()) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#216: FILE: block/blk-core.c:1638:
+			smp_call_function_fast(rq->submission_cpu,
+						blk_done_softirq_other, rq, 0);

CHECK:BRACES: Unbalanced braces around else statement
#217: FILE: block/blk-core.c:1639:
+		} else

ERROR:SPACING: space required after that ',' (ctx:VxV)
#328: FILE: include/asm-x86/mach-default/entry_arch.h:16:
+BUILD_INTERRUPT(call_function_fast_interrupt,CALL_FUNCTION_SINGLE_VECTOR)
                                             ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000327378.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 4 warnings, 7 checks, 201 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000327378.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
