CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#132: FILE: arch/s390/kernel/time.c:279:
+		delta = ticks = clock - old;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#133: FILE: arch/s390/kernel/time.c:280:
+		delta = ticks = (delta < delay) ? 0 : delta - delay;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#138: FILE: arch/s390/kernel/time.c:285:
+		delta = ticks = old - clock;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#145: FILE: arch/s390/kernel/time.c:292:
+		printk(KERN_NOTICE "etr: time adjusted by %li micro-seconds\n",

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#183: FILE: arch/s390/kernel/time.c:330:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:LINE_SPACING: Missing a blank line after declarations
#214: FILE: arch/s390/kernel/time.c:361:
+	atomic_t *sw_ptr = &__get_cpu_var(clock_sync_word);
+	atomic_set_mask(0x80000000, sw_ptr);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#330: FILE: arch/s390/kernel/time.c:444:
+		printk(KERN_WARNING "Running on non ETR capable "

WARNING:SPLIT_STRING: quoted string split across lines
#331: FILE: arch/s390/kernel/time.c:445:
+		printk(KERN_WARNING "Running on non ETR capable "
+		       "machine, only local mode available.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#332: FILE: arch/s390/kernel/time.c:446:
+		etr_port0_online = etr_port1_online = 0;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#659: FILE: arch/s390/kernel/time.c:1333:
+}
+early_param("stp", early_parse_stp);

CHECK:BRACES: braces {} should be used on all arms of this statement
#670: FILE: arch/s390/kernel/time.c:1344:
+	if (rc == 1)
[...]
+	else if (stp_online) {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#673: FILE: arch/s390/kernel/time.c:1347:
+		printk(KERN_WARNING "Running on non STP capable machine.\n");

CHECK:SPACING: No space is necessary after a cast
#674: FILE: arch/s390/kernel/time.c:1348:
+		free_bootmem((unsigned long) stp_page, PAGE_SIZE);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#784: FILE: arch/s390/kernel/time.c:1458:
+	if (rc) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#790: FILE: arch/s390/kernel/time.c:1464:
+	} else

CHECK:SPACING: No space is necessary after a cast
#810: FILE: arch/s390/kernel/time.c:1484:
+		       *(unsigned long long *) stp_info.ctnid);

CHECK:SPACING: No space is necessary after a cast
#828: FILE: arch/s390/kernel/time.c:1502:
+	return sprintf(buf, "%i\n", (int)(s16) stp_info.dsto);

CHECK:SPACING: No space is necessary after a cast
#837: FILE: arch/s390/kernel/time.c:1511:
+	return sprintf(buf, "%i\n", (int)(s16) stp_info.leaps);

CHECK:SPACING: No space is necessary after a cast
#846: FILE: arch/s390/kernel/time.c:1520:
+	return sprintf(buf, "%i\n", (int)(s16) stp_info.stratum);

CHECK:SPACING: No space is necessary after a cast
#855: FILE: arch/s390/kernel/time.c:1529:
+	return sprintf(buf, "%i\n", (int) stp_info.tto);

CHECK:SPACING: No space is necessary after a cast
#864: FILE: arch/s390/kernel/time.c:1538:
+	return sprintf(buf, "%i\n", (int)(s16) stp_info.tzo);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#898: FILE: arch/s390/kernel/time.c:1572:
+	value = simple_strtoul(buf, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#975: FILE: drivers/s390/cio/chsc.c:889:
+	} __attribute__ ((packed)) *rr;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#998: FILE: drivers/s390/cio/chsc.c:912:
+	} __attribute__ ((packed)) *rr;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1070: FILE: include/asm-s390/etr.h:226:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1096: FILE: include/asm-s390/etr.h:252:
+} __attribute__ ((packed));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000272031.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 11 warnings, 15 checks, 1009 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000272031.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
