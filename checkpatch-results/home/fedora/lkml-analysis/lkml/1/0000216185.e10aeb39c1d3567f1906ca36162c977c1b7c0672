WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#67: FILE: checkpoint/checkpoint.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#138: FILE: checkpoint/checkpoint.c:72:
+	hh->major = (LINUX_VERSION_CODE >> 16) & 0xff;

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#139: FILE: checkpoint/checkpoint.c:73:
+	hh->minor = (LINUX_VERSION_CODE >> 8) & 0xff;

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#140: FILE: checkpoint/checkpoint.c:74:
+	hh->patch = (LINUX_VERSION_CODE) & 0xff;

WARNING:SPACING: space prohibited before semicolon
#206: FILE: checkpoint/checkpoint.c:140:
+	int ret ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#254: FILE: checkpoint/restart.c:1:
+/*

WARNING:REPEATED_WORD: Possible repeated word: 'buffer'
#325: FILE: checkpoint/restart.c:72:
+ * @len: buffer buffer length

CHECK:BRACES: braces {} should be used on all arms of this statement
#339: FILE: checkpoint/restart.c:86:
+	if (parent < 0) {
[...]
+	} else if (parent != 0)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#346: FILE: checkpoint/restart.c:93:
+	    hh->major != ((LINUX_VERSION_CODE >> 16) & 0xff) ||

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#347: FILE: checkpoint/restart.c:94:
+	    hh->minor != ((LINUX_VERSION_CODE >> 8) & 0xff) ||

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#348: FILE: checkpoint/restart.c:95:
+	    hh->patch != ((LINUX_VERSION_CODE) & 0xff))

CHECK:BRACES: braces {} should be used on all arms of this statement
#371: FILE: checkpoint/restart.c:118:
+	if (parent < 0) {
[...]
+	} else if (parent != 0)
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#395: FILE: checkpoint/restart.c:142:
+	if (parent < 0) {
[...]
+	} else if (parent != 0)
[...]

CHECK:SPACING: No space is necessary after a cast
#481: FILE: checkpoint/sys.c:36:
+		nwrite = vfs_write(file, (char __user *) buf, nleft, &pos);

WARNING:LINE_SPACING: Missing a blank line after declarations
#481: FILE: checkpoint/sys.c:36:
+		loff_t pos = file_pos_read(file);
+		nwrite = vfs_write(file, (char __user *) buf, nleft, &pos);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#517: FILE: checkpoint/sys.c:72:
+		nread = vfs_read(file, (char __user *) buf, nleft, &pos);

WARNING:LINE_SPACING: Missing a blank line after declarations
#517: FILE: checkpoint/sys.c:72:
+		loff_t pos = file_pos_read(file);
+		nread = vfs_read(file, (char __user *) buf, nleft, &pos);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#577: FILE: checkpoint/sys.c:132:
+	BUG_ON(ctx->hpos + n > CR_HBUF_TOTAL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#590: FILE: checkpoint/sys.c:145:
+	BUG_ON(ctx->hpos < n);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#715: FILE: include/linux/checkpoint.h:1:
+#ifndef _CHECKPOINT_CKPT_H_

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#747: FILE: include/linux/checkpoint.h:33:
+extern int cr_uwrite(struct cr_ctx *ctx, void *buf, int count);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#748: FILE: include/linux/checkpoint.h:34:
+extern int cr_kwrite(struct cr_ctx *ctx, void *buf, int count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#749: FILE: include/linux/checkpoint.h:35:
+extern int cr_uread(struct cr_ctx *ctx, void *buf, int count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#750: FILE: include/linux/checkpoint.h:36:
+extern int cr_kread(struct cr_ctx *ctx, void *buf, int count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#752: FILE: include/linux/checkpoint.h:38:
+extern void *cr_hbuf_get(struct cr_ctx *ctx, int n);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#753: FILE: include/linux/checkpoint.h:39:
+extern void cr_hbuf_put(struct cr_ctx *ctx, int n);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#757: FILE: include/linux/checkpoint.h:43:
+extern int cr_write_obj(struct cr_ctx *ctx, struct cr_hdr *h, void *buf);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#758: FILE: include/linux/checkpoint.h:44:
+extern int cr_write_string(struct cr_ctx *ctx, char *str, int len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#760: FILE: include/linux/checkpoint.h:46:
+extern int cr_read_obj(struct cr_ctx *ctx, struct cr_hdr *h, void *buf, int n);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#761: FILE: include/linux/checkpoint.h:47:
+extern int cr_read_obj_type(struct cr_ctx *ctx, void *buf, int n, int type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#762: FILE: include/linux/checkpoint.h:48:
+extern int cr_read_string(struct cr_ctx *ctx, void *str, int len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#764: FILE: include/linux/checkpoint.h:50:
+extern int do_checkpoint(struct cr_ctx *ctx);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#765: FILE: include/linux/checkpoint.h:51:
+extern int do_restart(struct cr_ctx *ctx);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#768: FILE: include/linux/checkpoint.h:54:
+extern loff_t file_pos_read(struct file *file);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#769: FILE: include/linux/checkpoint.h:55:
+extern void file_pos_write(struct file *file, loff_t pos);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#779: FILE: include/linux/checkpoint_hdr.h:1:
+#ifndef _CHECKPOINT_CKPT_HDR_H_

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#797: FILE: include/linux/checkpoint_hdr.h:19:
+ * __attribute__ ((aligned (8))) for the entire structure.

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#838: FILE: include/linux/checkpoint_hdr.h:60:
+} __attribute__((aligned(8)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#842: FILE: include/linux/checkpoint_hdr.h:64:
+} __attribute__((aligned(8)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#851: FILE: include/linux/checkpoint_hdr.h:73:
+} __attribute__((aligned(8)));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000216185.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 20 warnings, 20 checks, 776 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000216185.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
