WARNING:TYPO_SPELLING: 'succesfull' may be misspelled - perhaps 'successful'?
#36: 
The tracer only logs succesfull calls, as those are the only ones we
                     ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#59: FILE: fs/open.c:1043:
flags, int mode)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:CODE_INDENT: code indent should use tabs where possible
#63: FILE: fs/open.c:1047:
+                       trace_do_sys_open(f, flags, mode, fd);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#63: FILE: fs/open.c:1047:
+                       trace_do_sys_open(f, flags, mode, fd);$

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#68: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#73: FILE: include/trace/fs.h:1:
+#ifndef _TRACE_FS_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#80: FILE: include/trace/fs.h:8:
+       TPPROTO(struct file *filp, int flags, int mode, long fd),
                             ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#80: FILE: include/trace/fs.h:8:
+DECLARE_TRACE(do_sys_open,
+       TPPROTO(struct file *filp, int flags, int mode, long fd),

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: include/trace/fs.h:8:
+       TPPROTO(struct file *filp, int flags, int mode, long fd),$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#81: FILE: include/trace/fs.h:9:
+               TPARGS(filp, flags, mode, fd));
                       ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: include/trace/fs.h:9:
+               TPARGS(filp, flags, mode, fd));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: include/trace/fs.h:9:
+               TPARGS(filp, flags, mode, fd));$

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#92: FILE: kernel/trace/Kconfig:152:
+config OPEN_CLOSE_TRACER
+       bool "Trace open() calls"
+       depends on DEBUG_KERNEL
+       select TRACING
+       select MARKERS
+       help
+         This tracer records open() syscalls. These calls are made when
+         files are accessed on disk.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: kernel/trace/trace.h:33:
+       TRACE_OPEN,$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#134: FILE: kernel/trace/trace_open_close.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#153: FILE: kernel/trace/trace_open_close.c:20:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo __read_mostly       bar" should be "foo __read_mostly bar"
#155: FILE: kernel/trace/trace_open_close.c:22:
+static int __read_mostly       open_trace_enabled;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#158: FILE: kernel/trace/trace_open_close.c:25:
+static void probe_do_sys_open(struct file *filp, int flags, int mode, long fd)
                                            ^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: kernel/trace/trace_open_close.c:27:
+       char *buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: kernel/trace/trace_open_close.c:28:
+       char *fname;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: kernel/trace/trace_open_close.c:30:
+       if (!atomic_read(&open_ref))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#163: FILE: kernel/trace/trace_open_close.c:30:
+       if (!atomic_read(&open_ref))
+               return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: kernel/trace/trace_open_close.c:31:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: kernel/trace/trace_open_close.c:31:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: kernel/trace/trace_open_close.c:33:
+       if (!open_trace_enabled)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#166: FILE: kernel/trace/trace_open_close.c:33:
+       if (!open_trace_enabled)
+               return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: kernel/trace/trace_open_close.c:34:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: kernel/trace/trace_open_close.c:34:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: kernel/trace/trace_open_close.c:36:
+       buf = kzalloc(PAGE_SIZE, GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: kernel/trace/trace_open_close.c:37:
+       if (!buf)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#170: FILE: kernel/trace/trace_open_close.c:37:
+       if (!buf)
+               return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: kernel/trace/trace_open_close.c:38:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: kernel/trace/trace_open_close.c:38:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: kernel/trace/trace_open_close.c:39:
+       fname = d_path(&filp->f_path, buf, PAGE_SIZE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: kernel/trace/trace_open_close.c:41:
+       if (IS_ERR(fname))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#174: FILE: kernel/trace/trace_open_close.c:41:
+       if (IS_ERR(fname))
+               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: kernel/trace/trace_open_close.c:42:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: kernel/trace/trace_open_close.c:42:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: kernel/trace/trace_open_close.c:44:
+       ftrace_printk("%s: open(\"%s\", %d, %d) = %ld\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: kernel/trace/trace_open_close.c:45:
+               current->comm, fname, flags, mode, fd);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#178: FILE: kernel/trace/trace_open_close.c:45:
+       ftrace_printk("%s: open(\"%s\", %d, %d) = %ld\n",
+               current->comm, fname, flags, mode, fd);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: kernel/trace/trace_open_close.c:45:
+               current->comm, fname, flags, mode, fd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: kernel/trace/trace_open_close.c:47:
+       kfree(buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: kernel/trace/trace_open_close.c:52:
+       tr->time_start = ftrace_now(tr->cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: kernel/trace/trace_open_close.c:53:
+       tracing_reset_online_cpus(tr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: kernel/trace/trace_open_close.c:58:
+       int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: kernel/trace/trace_open_close.c:60:
+       ret = register_trace_do_sys_open(probe_do_sys_open);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: kernel/trace/trace_open_close.c:61:
+       if (ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#194: FILE: kernel/trace/trace_open_close.c:61:
+       if (ret) {
+               pr_info("open trace: Could not activate tracepoint"

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: kernel/trace/trace_open_close.c:62:
+               pr_info("open trace: Could not activate tracepoint"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: kernel/trace/trace_open_close.c:62:
+               pr_info("open trace: Could not activate tracepoint"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#196: FILE: kernel/trace/trace_open_close.c:63:
+                       " probe to do_open\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: kernel/trace/trace_open_close.c:63:
+                       " probe to do_open\n");$

WARNING:SPLIT_STRING: quoted string split across lines
#196: FILE: kernel/trace/trace_open_close.c:63:
+               pr_info("open trace: Could not activate tracepoint"
+                       " probe to do_open\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: kernel/trace/trace_open_close.c:64:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: kernel/trace/trace_open_close.c:66:
+       return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: kernel/trace/trace_open_close.c:71:
+       unregister_trace_do_sys_open(probe_do_sys_open);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: kernel/trace/trace_open_close.c:76:
+       long ref;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: kernel/trace/trace_open_close.c:78:
+       ref = atomic_inc_return(&open_ref);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: kernel/trace/trace_open_close.c:79:
+       if (ref == 1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#212: FILE: kernel/trace/trace_open_close.c:79:
+       if (ref == 1)
+               open_trace_register();

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: kernel/trace/trace_open_close.c:80:
+               open_trace_register();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: kernel/trace/trace_open_close.c:80:
+               open_trace_register();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: kernel/trace/trace_open_close.c:85:
+       long ref;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: kernel/trace/trace_open_close.c:87:
+       ref = atomic_dec_and_test(&open_ref);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: kernel/trace/trace_open_close.c:88:
+       if (ref)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#221: FILE: kernel/trace/trace_open_close.c:88:
+       if (ref)
+               open_trace_unregister();

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: kernel/trace/trace_open_close.c:89:
+               open_trace_unregister();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: kernel/trace/trace_open_close.c:89:
+               open_trace_unregister();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: kernel/trace/trace_open_close.c:94:
+       open_trace_start();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: kernel/trace/trace_open_close.c:99:
+       open_trace_stop();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: kernel/trace/trace_open_close.c:104:
+       open_trace_reset(tr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: kernel/trace/trace_open_close.c:105:
+       open_trace_start_cmdline_record();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: kernel/trace/trace_open_close.c:106:
+       open_trace_enabled = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: kernel/trace/trace_open_close.c:111:
+       open_trace_enabled = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: kernel/trace/trace_open_close.c:112:
+       open_trace_stop_cmdline_record();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: kernel/trace/trace_open_close.c:117:
+       ctx_trace = tr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: kernel/trace/trace_open_close.c:119:
+       open_start_trace(tr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: kernel/trace/trace_open_close.c:120:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: kernel/trace/trace_open_close.c:125:
+       open_stop_trace(tr);$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#262: FILE: kernel/trace/trace_open_close.c:129:
+static struct tracer open_trace __read_mostly =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: kernel/trace/trace_open_close.c:130:
+       .name           = "open",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: kernel/trace/trace_open_close.c:131:
+       .init           = open_trace_init,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: kernel/trace/trace_open_close.c:132:
+       .reset          = reset_open_trace,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: kernel/trace/trace_open_close.c:137:
+       int ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: kernel/trace/trace_open_close.c:139:
+       if (atomic_read(&open_ref))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#272: FILE: kernel/trace/trace_open_close.c:139:
+       if (atomic_read(&open_ref))
+               ret = open_trace_register();

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: kernel/trace/trace_open_close.c:140:
+               ret = open_trace_register();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: kernel/trace/trace_open_close.c:140:
+               ret = open_trace_register();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: kernel/trace/trace_open_close.c:141:
+       if (ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#274: FILE: kernel/trace/trace_open_close.c:141:
+       if (ret) {
+               pr_info("error registering open trace\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#275: FILE: kernel/trace/trace_open_close.c:142:
+               pr_info("error registering open trace\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: kernel/trace/trace_open_close.c:142:
+               pr_info("error registering open trace\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#276: FILE: kernel/trace/trace_open_close.c:143:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: kernel/trace/trace_open_close.c:143:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: kernel/trace/trace_open_close.c:144:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: kernel/trace/trace_open_close.c:145:
+       return register_tracer(&open_trace);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000175493.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 17 errors, 77 warnings, 3 checks, 206 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000175493.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
