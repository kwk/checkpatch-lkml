WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(PAGE_SIZE) over __attribute__((aligned(PAGE_SIZE)))
#71: FILE: include/linux/perf_counter.h:141:
+	char	data[0] __attribute__((aligned(PAGE_SIZE)));

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#106: FILE: include/linux/perf_counter.h:215:
+^Iu8 ^I^I^I^I*data_pages[0];$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#410: FILE: kernel/perf_counter.c:1233:
+		if ((unsigned)nr > data->nr_pages)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#606: FILE: kernel/perf_counter.c:1408:
+		offset = head = atomic_read(&data->head);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: braces {} should be used on all arms of this statement
#634: FILE: kernel/perf_counter.c:1434:
+		if (nmi) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#637: FILE: kernel/perf_counter.c:1437:
+		} else

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000151979.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 3 checks, 632 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000151979.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
