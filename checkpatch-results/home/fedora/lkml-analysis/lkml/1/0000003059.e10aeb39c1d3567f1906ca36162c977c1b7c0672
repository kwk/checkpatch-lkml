WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
Before applying this patch, cpuset updates task->mems_allowed by setting all

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'p' may be better as '(p)' to avoid precedence issues
#82: FILE: include/linux/cpuset.h:99:
+#define task_mems_lock_irqsave(p, flags)			\
+	do {							\
+		spin_lock_irqsave(&p->mems_lock, flags);	\
+	} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#82: FILE: include/linux/cpuset.h:99:
+#define task_mems_lock_irqsave(p, flags)			\
+	do {							\
+		spin_lock_irqsave(&p->mems_lock, flags);	\
+	} while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'p' may be better as '(p)' to avoid precedence issues
#87: FILE: include/linux/cpuset.h:104:
+#define task_mems_unlock_irqrestore(p, flags)			\
+	do {							\
+		spin_unlock_irqrestore(&p->mems_lock, flags);	\
+	} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#87: FILE: include/linux/cpuset.h:104:
+#define task_mems_unlock_irqrestore(p, flags)			\
+	do {							\
+		spin_unlock_irqrestore(&p->mems_lock, flags);	\
+	} while (0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: include/linux/cpuset.h:118:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#128: FILE: include/linux/cpuset.h:238:
+#define task_mems_lock_irqsave(p, flags)	do { (void)(flags); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#130: FILE: include/linux/cpuset.h:240:
+#define task_mems_unlock_irqrestore(p, flags)	do { (void)(flags); } while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'tsk' - possible side-effects?
#143: FILE: include/linux/init_task.h:106:
+# define INIT_PERF_EVENTS(tsk)						\
 	.perf_event_mutex = 						\
 		 __MUTEX_INITIALIZER(tsk.perf_event_mutex),		\
 	.perf_event_list = LIST_HEAD_INIT(tsk.perf_event_list),

WARNING:TYPO_SPELLING: 'everytime' may be misspelled - perhaps 'every time'?
#218: FILE: include/linux/sched.h:1442:
+	 * Increment this integer everytime ->mems_allowed_for_update is
 	                          ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#557: FILE: mm/mempolicy.c:1682:
+	pol= get_vma_policy(current, vma, addr);
 	   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000003059.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 6 warnings, 3 checks, 476 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000003059.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
