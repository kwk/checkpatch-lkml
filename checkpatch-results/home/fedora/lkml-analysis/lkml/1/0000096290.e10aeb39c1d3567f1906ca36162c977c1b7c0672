WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#52: 
--- linux-2.6.31-rc2.orig/drivers/mtd/devices/block2mtd.c	2009-07-11 22:22:34.318636261 +0200

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#77: FILE: drivers/mtd/devices/block2mtd.c:388:
+	printk(KERN_WARNING "block2mtd: spawned kernel thread for async waiting on '%s'\n", params->name);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#77: FILE: drivers/mtd/devices/block2mtd.c:388:
+	printk(KERN_WARNING "block2mtd: spawned kernel thread for async waiting on '%s'\n", params->name);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#78: FILE: drivers/mtd/devices/block2mtd.c:389:
+	for (i=0; i<20; i++) {
 	      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#78: FILE: drivers/mtd/devices/block2mtd.c:389:
+	for (i=0; i<20; i++) {
 	           ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "add_device"
#81: FILE: drivers/mtd/devices/block2mtd.c:392:
+		if (add_device(params->name, params->erase_size) != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "add_device"
#108: FILE: drivers/mtd/devices/block2mtd.c:437:
+	if (add_device(name, erase_size) != NULL)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*params)...) over kzalloc(sizeof(struct block2mtd_setupasync_params)...)
#111: FILE: drivers/mtd/devices/block2mtd.c:440:
+	params = kzalloc(sizeof(struct block2mtd_setupasync_params), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#115: FILE: drivers/mtd/devices/block2mtd.c:444:
+	params->name = kmalloc(strlen(name)+1, GFP_KERNEL);
 	                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#122: FILE: drivers/mtd/devices/block2mtd.c:451:
+	memcpy(params->name, name, strlen(name)+1);
 	                                       ^

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#180: FILE: drivers/mtd/ubi/build.c:1147:
+	printk(KERN_WARNING "ubi_init_attach_mtd(%s): waiting async for device to appear\n", p->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#180: FILE: drivers/mtd/ubi/build.c:1147:
+	printk(KERN_WARNING "ubi_init_attach_mtd(%s): waiting async for device to appear\n", p->name);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ubi_init_attach_mtd', this function's name, in a string
#180: FILE: drivers/mtd/ubi/build.c:1147:
+	printk(KERN_WARNING "ubi_init_attach_mtd(%s): waiting async for device to appear\n", p->name);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000096290.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 6 warnings, 5 checks, 174 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000096290.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
