CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#58: FILE: drivers/video/cfbcopyarea.c:48:
+bitcpy(struct fb_info *p, unsigned long __iomem *dst, int dst_idx,
+		const unsigned long __iomem *src, int src_idx, int bits,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#59: FILE: drivers/video/cfbcopyarea.c:49:
+		unsigned n, u32 bswapmask)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#68: FILE: drivers/video/cfbcopyarea.c:56:
+	last = ~fb_shifted_pixels_mask_long(p, (dst_idx+n) % bits, bswapmask);
 	                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#79: FILE: drivers/video/cfbcopyarea.c:207:
+bitcpy_rev(struct fb_info *p, unsigned long __iomem *dst, int dst_idx,
+		const unsigned long __iomem *src, int src_idx, int bits,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#80: FILE: drivers/video/cfbcopyarea.c:208:
+		unsigned n, u32 bswapmask)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#91: FILE: drivers/video/cfbcopyarea.c:227:
+	last = ~fb_shifted_pixels_mask_long(p, bits - 1 - ((dst_idx-n) % bits),
 	                                                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#102: FILE: drivers/video/cfbcopyarea.c:411:
+			bitcpy_rev(p, dst, dst_idx, src, src_idx, bits,
 				width*p->var.bits_per_pixel, bswapmask);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#111: FILE: drivers/video/cfbcopyarea.c:420:
+			bitcpy(p, dst, dst_idx, src, src_idx, bits,
 				width*p->var.bits_per_pixel, bswapmask);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#125: FILE: drivers/video/cfbfillrect.c:40:
+		unsigned long pat, unsigned n, int bits, u32 bswapmask)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#135: FILE: drivers/video/cfbfillrect.c:48:
+	last = ~fb_shifted_pixels_mask_long(p, (dst_idx+n) % bits, bswapmask);
 	                                               ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#146: FILE: drivers/video/cfbfillrect.c:97:
+		  unsigned long pat, int left, int right, unsigned n, int bits)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#156: FILE: drivers/video/cfbfillrect.c:105:
+	last = ~(FB_SHIFT_HIGH(p, ~0UL, (dst_idx+n) % bits));
 	                                        ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#167: FILE: drivers/video/cfbfillrect.c:151:
+		    int dst_idx, unsigned long pat, unsigned n, int bits,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#179: FILE: drivers/video/cfbfillrect.c:161:
+	last = ~fb_shifted_pixels_mask_long(p, (dst_idx+n) % bits, bswapmask);
 	                                               ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#191: FILE: drivers/video/cfbfillrect.c:223:
+		      unsigned n, int bits)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#201: FILE: drivers/video/cfbfillrect.c:231:
+	last = ~(FB_SHIFT_HIGH(p, ~0UL, (dst_idx+n) % bits));
 	                                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#220: FILE: drivers/video/cfbfillrect.c:331:
+			fill_op32(p, dst, dst_idx, pat, width*bpp, bits,
 			                                     ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#233: FILE: drivers/video/cfbfillrect.c:341:
+				int right, unsigned n, int bits) = NULL;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#498: FILE: drivers/video/syscopyarea.c:30:
+bitcpy(struct fb_info *p, unsigned long *dst, int dst_idx,
+		const unsigned long *src, int src_idx, int bits, unsigned n)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#498: FILE: drivers/video/syscopyarea.c:30:
+		const unsigned long *src, int src_idx, int bits, unsigned n)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#507: FILE: drivers/video/syscopyarea.c:37:
+	last = ~(FB_SHIFT_HIGH(p, ~0UL, (dst_idx+n) % bits));
 	                                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#518: FILE: drivers/video/syscopyarea.c:171:
+bitcpy_rev(struct fb_info *p, unsigned long *dst, int dst_idx,
+		const unsigned long *src, int src_idx, int bits, unsigned n)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#518: FILE: drivers/video/syscopyarea.c:171:
+		const unsigned long *src, int src_idx, int bits, unsigned n)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#529: FILE: drivers/video/syscopyarea.c:190:
+	last = ~(FB_SHIFT_LOW(p, ~0UL, bits - 1 - ((dst_idx-n) % bits)));
 	                                                   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#539: FILE: drivers/video/syscopyarea.c:357:
+			bitcpy_rev(p, dst, dst_idx, src, src_idx, bits,
 				width*p->var.bits_per_pixel);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#548: FILE: drivers/video/syscopyarea.c:366:
+			bitcpy(p, dst, dst_idx, src, src_idx, bits,
 				width*p->var.bits_per_pixel);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#562: FILE: drivers/video/sysfillrect.c:26:
+		unsigned long pat, unsigned n, int bits)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#572: FILE: drivers/video/sysfillrect.c:34:
+	last = ~(FB_SHIFT_HIGH(p, ~0UL, (dst_idx+n) % bits));
 	                                        ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#583: FILE: drivers/video/sysfillrect.c:82:
+		  unsigned long pat, int left, int right, unsigned n, int bits)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#593: FILE: drivers/video/sysfillrect.c:90:
+	last = ~(FB_SHIFT_HIGH(p, ~0UL, (dst_idx+n) % bits));
 	                                        ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#604: FILE: drivers/video/sysfillrect.c:136:
+		    unsigned long pat, unsigned n, int bits)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#615: FILE: drivers/video/sysfillrect.c:145:
+	last = ~(FB_SHIFT_HIGH(p, ~0UL, (dst_idx+n) % bits));
 	                                        ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#626: FILE: drivers/video/sysfillrect.c:192:
+		      unsigned long pat, int left, int right, unsigned n,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#637: FILE: drivers/video/sysfillrect.c:201:
+	last = ~(FB_SHIFT_HIGH(p, ~0UL, (dst_idx+n) % bits));
 	                                        ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#649: FILE: drivers/video/sysfillrect.c:272:
+				  int dst_idx, unsigned long pat, unsigned n,

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#659: FILE: drivers/video/sysfillrect.c:291:
+			fill_op32(p, dst, dst_idx, pat, width*bpp, bits);
 			                                     ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#671: FILE: drivers/video/sysfillrect.c:300:
+				int right, unsigned n, int bits) = NULL;

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'bpp' may be better as '(bpp)' to avoid precedence issues
#855: FILE: include/linux/fb.h:913:
+#define FB_LEFT_POS(p, bpp)          (fb_be_math(p) ? (32 - bpp) : 0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#856: FILE: include/linux/fb.h:914:
+#define FB_SHIFT_HIGH(p, val, bits)  (fb_be_math(p) ? (val) >> (bits) : \
+						      (val) << (bits))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'bits' - possible side-effects?
#856: FILE: include/linux/fb.h:914:
+#define FB_SHIFT_HIGH(p, val, bits)  (fb_be_math(p) ? (val) >> (bits) : \
+						      (val) << (bits))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#858: FILE: include/linux/fb.h:916:
+#define FB_SHIFT_LOW(p, val, bits)   (fb_be_math(p) ? (val) << (bits) : \
+						      (val) >> (bits))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'bits' - possible side-effects?
#858: FILE: include/linux/fb.h:916:
+#define FB_SHIFT_LOW(p, val, bits)   (fb_be_math(p) ? (val) << (bits) : \
+						      (val) >> (bits))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000326490.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 15 warnings, 27 checks, 743 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000326490.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
