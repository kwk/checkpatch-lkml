WARNING:TYPO_SPELLING: 'incomming' may be misspelled - perhaps 'incoming'?
#34: 
 - skb reserves are used for incomming packets,
                             ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#85: FILE: include/net/sock.h:431:
+#define TX_RESERVE_PAGES DIV_ROUND_UP(2*65536, PAGE_SIZE)
                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#94: FILE: include/net/sock.h:440:
+extern int rx_emergency_get(int bytes);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#95: FILE: include/net/sock.h:441:
+extern int rx_emergency_get_overcommit(int bytes);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#96: FILE: include/net/sock.h:442:
+extern void rx_emergency_put(int bytes);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#107: FILE: include/net/sock.h:453:
+extern void sk_adjust_memalloc(int socks, int tx_reserve_pages);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#108: FILE: include/net/sock.h:454:
+extern void skb_reserve_memory(int skb_reserve_bytes);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#109: FILE: include/net/sock.h:455:
+extern void aux_reserve_memory(int aux_reserve_pages);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#110: FILE: include/net/sock.h:456:
+extern int sk_set_vmio(struct sock *sk);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#111: FILE: include/net/sock.h:457:
+extern int sk_clear_vmio(struct sock *sk);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#147: FILE: net/core/sock.c:213:
+/*
+ * is there room for another emergency packet?

WARNING:LINE_SPACING: Missing a blank line after declarations
#155: FILE: net/core/sock.c:221:
+	int thresh = 2 * skb_reserve_bytes;
+	if (nr < thresh || overcommit)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#175: FILE: net/core/sock.c:241:
+	int size = roundup_pow_of_two(bytes);
+	return atomic_sub(size, &rx_emergency_bytes);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#198: FILE: net/core/sock.c:264:
+	BUG_ON(nr_socks < 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LINE_SPACING: Missing a blank line after declarations
#204: FILE: net/core/sock.c:270:
+		int rx_pages = 2 * skb_reserve_pages + aux_reserve_pages;
+		reserve += rx_pages - rx_net_reserve;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#218: FILE: net/core/sock.c:284:
+/*
+ * tiny helper functions to track the memory reserves

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#246: FILE: net/core/sock.c:312:
+	BUG();

WARNING:LINE_SPACING: Missing a blank line after declarations
#260: FILE: net/core/sock.c:326:
+	int set = sock_flag(sk, SOCK_VMIO);
+	if (set) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000436019.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 9 checks, 225 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000436019.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
