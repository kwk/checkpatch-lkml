WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
master.kernel.org:/pub/scm/linux/kernel/git/jgarzik/netdev-2.6.git upstream-davem

CHECK:BIT_MACRO: Prefer using the BIT macro
#319: FILE: drivers/net/e1000e/e1000.h:329:
+#define FLAG_MSI_TEST_FAILED              (1 << 31)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:MEMORY_BARRIER: memory barrier without comment
#421: FILE: drivers/net/e1000e/netdev.c:2622:
+		wmb();

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#447: FILE: drivers/net/e1000e/netdev.c:2648:
+	 * MSI irq handler will unset this flag */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:MEMORY_BARRIER: memory barrier without comment
#461: FILE: drivers/net/e1000e/netdev.c:2662:
+	wmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#472: FILE: drivers/net/e1000e/netdev.c:2673:
+	rmb();

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#544: FILE: drivers/net/e1000e/netdev.c:2795:
+	/*
+	 * Work around PCIe errata with MSI interrupts causing some chipsets to

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'max_frame > MAX_JUMBO_FRAME_SIZE'
#573: FILE: drivers/net/e1000e/netdev.c:3879:
+	if ((new_mtu < ETH_ZLEN + ETH_FCS_LEN + VLAN_HLEN) ||
 	    (max_frame > MAX_JUMBO_FRAME_SIZE)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'adapter->itr == 3'
#595: FILE: drivers/net/e1000e/param.c:331:
+				if (e1000_validate_option(&adapter->itr, &opt,
+							  adapter) &&
+				    (adapter->itr == 3)) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#599: FILE: drivers/net/e1000e/param.c:335:
+					/*
+					 * In case of invalid user value,

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#606: FILE: drivers/net/e1000e/param.c:342:
+					/*
+					 * Clear the lower two bits because

CHECK:BRACES: braces {} should be used on all arms of this statement
#741: FILE: drivers/net/myri10ge/myri10ge.c:3551:
+	if (myri10ge_fw_name != NULL) {
[...]
+	} else if (old_fw == myri10ge_fw_aligned)
[...]
 	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "myri10ge_fw_name"
#741: FILE: drivers/net/myri10ge/myri10ge.c:3551:
+	if (myri10ge_fw_name != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#767: FILE: drivers/net/ne.c:145:
+   defined(CONFIG_MACH_TX49XX)$

CHECK:SPACING: No space is necessary after a cast
#808: FILE: drivers/net/netxen/netxen_nic_hw.c:738:
+	__le32 *pmac = (__le32 *) mac;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#825: FILE: drivers/net/netxen/netxen_nic_hw.c:749:
 	if (*mac == cpu_to_le64(~0ULL)) {
+

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#847: FILE: drivers/net/netxen/netxen_nic_hw.c:766:
+	uint32_t crbaddr, mac_hi, mac_lo;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#851: FILE: drivers/net/netxen/netxen_nic_hw.c:770:
+		(4 * ((pci_func/2) * 3)) + (4 * (pci_func & 1));
 		               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#854: FILE: drivers/net/netxen/netxen_nic_hw.c:773:
+	adapter->hw_read_wx(adapter, crbaddr+4, &mac_hi, 4);
 	                                    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#878: FILE: drivers/net/netxen/netxen_nic_hw.c:2211:
+		printk(KERN_INFO "NetXen %s Board S/N %s  Chip rev 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#879: FILE: drivers/net/netxen/netxen_nic_hw.c:2212:
+		printk(KERN_INFO "NetXen %s Board S/N %s  Chip rev 0x%x\n",
+				brd_name, serial_num, adapter->ahw.revision_id);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#880: FILE: drivers/net/netxen/netxen_nic_hw.c:2213:
+		printk(KERN_INFO "NetXen Firmware version %d.%d.%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#881: FILE: drivers/net/netxen/netxen_nic_hw.c:2214:
+		printk(KERN_INFO "NetXen Firmware version %d.%d.%d\n",
+				fw_major, fw_minor, fw_build);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#923: FILE: drivers/net/netxen/netxen_nic_init.c:1099:
+		pci_free_consistent(adapter->pdev,
+			    NETXEN_HOST_DUMMY_DMA_SIZE,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#928: FILE: drivers/net/netxen/netxen_nic_init.c:1104:
+		printk(KERN_ERR "%s: dma_watchdog_shutdown failed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#929: FILE: drivers/net/netxen/netxen_nic_init.c:1105:
+		printk(KERN_ERR "%s: dma_watchdog_shutdown failed\n",
+				adapter->netdev->name);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1053: FILE: drivers/net/netxen/netxen_nic_main.c:475:
+	if (!is_valid_ether_addr(netdev->perm_addr)) {
[...]
+	} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1055: FILE: drivers/net/netxen/netxen_nic_main.c:477:
+		dev_warn(&pdev->dev, "Bad MAC address %s.\n",
+				print_mac(mac, netdev->dev_addr));

CHECK:BRACES: Unbalanced braces around else statement
#1056: FILE: drivers/net/netxen/netxen_nic_main.c:478:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1081: FILE: drivers/net/netxen/netxen_nic_main.c:527:
+		printk(KERN_WARNING "NetXen chip revisions between 0x%x-0x%x"

WARNING:SPLIT_STRING: quoted string split across lines
#1082: FILE: drivers/net/netxen/netxen_nic_main.c:528:
+		printk(KERN_WARNING "NetXen chip revisions between 0x%x-0x%x"
+				"will not be enabled.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:MISSING_SPACE: break quoted strings at a space character
#1082: FILE: drivers/net/netxen/netxen_nic_main.c:528:
+		printk(KERN_WARNING "NetXen chip revisions between 0x%x-0x%x"
+				"will not be enabled.\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'adapter->msi_mode != MSI_MODE_MULTIFUNC'
#1140: FILE: drivers/net/netxen/netxen_nic_main.c:1038:
+		if ((adapter->msi_mode != MSI_MODE_MULTIFUNC) ||
+			(adapter->intr_scheme != INTR_SCHEME_PERPORT)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'adapter->intr_scheme != INTR_SCHEME_PERPORT'
#1140: FILE: drivers/net/netxen/netxen_nic_main.c:1038:
+		if ((adapter->msi_mode != MSI_MODE_MULTIFUNC) ||
+			(adapter->intr_scheme != INTR_SCHEME_PERPORT)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1141: FILE: drivers/net/netxen/netxen_nic_main.c:1039:
+		if ((adapter->msi_mode != MSI_MODE_MULTIFUNC) ||
+			(adapter->intr_scheme != INTR_SCHEME_PERPORT)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1142: FILE: drivers/net/netxen/netxen_nic_main.c:1040:
+			printk(KERN_ERR "%s: Firmware interrupt scheme is "

WARNING:SPLIT_STRING: quoted string split across lines
#1143: FILE: drivers/net/netxen/netxen_nic_main.c:1041:
+			printk(KERN_ERR "%s: Firmware interrupt scheme is "
+					"incompatible with driver\n",

CHECK:CAMELCASE: Avoid CamelCase: <pciDev>
#1406: FILE: drivers/net/tlan.c:2024:
+			list->buffer[0].address = pci_map_single(priv->pciDev,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000240335.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 17 warnings, 21 checks, 1228 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000240335.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
