CHECK:BRACES: Unbalanced braces around else statement
#107: FILE: arch/ia64/hp/sim/simscsi.c:247:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#110: FILE: arch/ia64/hp/sim/simscsi.c:250:
+			unsigned thislen;

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#218: FILE: drivers/scsi/3w-9xxx.c:1897:
+					command_packet->sg_list[i].address = TW_CPU_TO_SGL(sg_dma_address(sg));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#219: FILE: drivers/scsi/3w-9xxx.c:1898:
+					command_packet->sg_list[i].length = cpu_to_le32(sg_dma_len(sg));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#274: FILE: drivers/scsi/53c700.c:1906:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <SCp>
#275: FILE: drivers/scsi/53c700.c:1907:
+		sgl = SCp->request_buffer;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <vPtr>
#278: FILE: drivers/scsi/53c700.c:1910:
+				vPtr = sg_dma_address(sg);

CHECK:CAMELCASE: Avoid CamelCase: <ScatterList>
#302: FILE: drivers/scsi/BusLogic.c:2876:
+		for_each_sg(ScatterList, sg, Count, Segment) {

CHECK:CAMELCASE: Avoid CamelCase: <Count>
#302: FILE: drivers/scsi/BusLogic.c:2876:
+		for_each_sg(ScatterList, sg, Count, Segment) {

CHECK:CAMELCASE: Avoid CamelCase: <Segment>
#302: FILE: drivers/scsi/BusLogic.c:2876:
+		for_each_sg(ScatterList, sg, Count, Segment) {

CHECK:CAMELCASE: Avoid CamelCase: <ScatterGatherList>
#303: FILE: drivers/scsi/BusLogic.c:2877:
+			CCB->ScatterGatherList[Segment].SegmentByteCount = sg_dma_len(sg);

CHECK:CAMELCASE: Avoid CamelCase: <SegmentByteCount>
#303: FILE: drivers/scsi/BusLogic.c:2877:
+			CCB->ScatterGatherList[Segment].SegmentByteCount = sg_dma_len(sg);

CHECK:CAMELCASE: Avoid CamelCase: <SegmentDataPointer>
#304: FILE: drivers/scsi/BusLogic.c:2878:
+			CCB->ScatterGatherList[Segment].SegmentDataPointer = sg_dma_address(sg);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#318: FILE: drivers/scsi/NCR53c406a.c:880:
+^I^I^I^I$

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#326: FILE: drivers/scsi/NCR53c406a.c:884:
+					NCR53c406a_pio_write(page_address(sg->page) + sg->offset, sg->length);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#344: FILE: drivers/scsi/NCR53c406a.c:912:
+					NCR53c406a_pio_read(page_address(sg->page) + sg->offset, sg->length);

CHECK:CAMELCASE: Avoid CamelCase: <pSrbSG>
#357: FILE: drivers/scsi/a100u2w.c:799:
+	struct scatterlist *pSrbSG, *sg;

CHECK:CAMELCASE: Avoid CamelCase: <pSG>
#369: FILE: drivers/scsi/a100u2w.c:824:
+				pSG->SG_Ptr = (U32) sg_dma_address(sg);

CHECK:CAMELCASE: Avoid CamelCase: <SG_Ptr>
#369: FILE: drivers/scsi/a100u2w.c:824:
+				pSG->SG_Ptr = (U32) sg_dma_address(sg);

CHECK:CAMELCASE: Avoid CamelCase: <SG_Len>
#370: FILE: drivers/scsi/a100u2w.c:825:
+				pSG->SG_Len = (U32) sg_dma_len(sg);

WARNING:LINE_SPACING: Missing a blank line after declarations
#422: FILE: drivers/scsi/aacraid/aachba.c:2416:
+			int count = sg_dma_len(s);
+			addr = sg_dma_address(s);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#470: FILE: drivers/scsi/advansys.c:6471:
+        struct scatterlist      *slp, *sg;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: drivers/scsi/advansys.c:6471:
+        struct scatterlist      *slp, *sg;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#482: FILE: drivers/scsi/advansys.c:6505:
+	for_each_sg(slp, sg, use_sg, sgcnt) {
+	    asc_sg_head.sg_list[sgcnt].addr = cpu_to_le32(sg_dma_address(sg));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: drivers/scsi/advansys.c:6703:
+    struct scatterlist  *slp, *sg;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#503: FILE: drivers/scsi/advansys.c:6781:
+	for_each_sg(slp, sg, NO_OF_SG_PER_BLOCK, i)
         {

CHECK:CAMELCASE: Avoid CamelCase: <SCpnt>
#542: FILE: drivers/scsi/aha1542.c:709:
+		for_each_sg(sgpnt, sg, SCpnt->use_sg, i) {

CHECK:SPACING: No space is necessary after a cast
#544: FILE: drivers/scsi/aha1542.c:711:
+			    (((int) sg->offset) & 1) || (sg->length & 1)) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#581: FILE: drivers/scsi/aha1740.c:428:
+		struct scatterlist * sgpnt, * sg;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#581: FILE: drivers/scsi/aha1740.c:428:
+		struct scatterlist * sgpnt, * sg;
 		                            ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#593: FILE: drivers/scsi/aha1740.c:440:
+			cptr[i].datalen = sg_dma_len (sg);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#594: FILE: drivers/scsi/aha1740.c:441:
+			cptr[i].dataptr = sg_dma_address (sg);

CHECK:CAMELCASE: Avoid CamelCase: <pHba>
#761: FILE: drivers/scsi/dpt_i2o.c:2146:
+		int sg_count = pci_map_sg(pHba->pDev, sgl, cmd->use_sg,

CHECK:CAMELCASE: Avoid CamelCase: <pDev>
#761: FILE: drivers/scsi/dpt_i2o.c:2146:
+		int sg_count = pci_map_sg(pHba->pDev, sgl, cmd->use_sg,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#774: FILE: drivers/scsi/dpt_i2o.c:2157:
+				mptr[-2] = direction|0xD0000000|sg_dma_len(sg);
 				                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#774: FILE: drivers/scsi/dpt_i2o.c:2157:
+				mptr[-2] = direction|0xD0000000|sg_dma_len(sg);
 				                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#839: FILE: drivers/scsi/gdth.c:2659:
+    struct scatterlist *sl, *sg;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#849: FILE: drivers/scsi/gdth.c:2669:
+	for_each_sg(sl, sg, scp->use_sg, i) {
             unsigned long flags;

ERROR:CODE_INDENT: code indent should use tabs where possible
#852: FILE: drivers/scsi/gdth.c:2671:
+            cpnow = (ushort)sg->length;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#852: FILE: drivers/scsi/gdth.c:2671:
+            cpnow = (ushort)sg->length;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#859: FILE: drivers/scsi/gdth.c:2677:
+            if (!sg->page) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#859: FILE: drivers/scsi/gdth.c:2677:
+            if (!sg->page) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#867: FILE: drivers/scsi/gdth.c:2684:
+            address = kmap_atomic(sg->page, KM_BIO_SRC_IRQ) + sg->offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#867: FILE: drivers/scsi/gdth.c:2684:
+            address = kmap_atomic(sg->page, KM_BIO_SRC_IRQ) + sg->offset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#870: FILE: drivers/scsi/gdth.c:2686:
+            flush_dcache_page(sg->page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#870: FILE: drivers/scsi/gdth.c:2686:
+            flush_dcache_page(sg->page);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#874: FILE: drivers/scsi/gdth.c:2689:
+            address = kmap_atomic(sg->page, KM_BH_IRQ) + sg->offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#874: FILE: drivers/scsi/gdth.c:2689:
+            address = kmap_atomic(sg->page, KM_BH_IRQ) + sg->offset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#877: FILE: drivers/scsi/gdth.c:2691:
+            flush_dcache_page(sg->page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#877: FILE: drivers/scsi/gdth.c:2691:
+            flush_dcache_page(sg->page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#886: FILE: drivers/scsi/gdth.c:2811:
+    struct scatterlist *sl, *sg;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#896: FILE: drivers/scsi/gdth.c:2917:
+		for_each_sg(sl, sg, sgcnt, i) {
+                    cmdp->u.cache64.sg_lst[i].sg_ptr = sg_dma_address(sg);

ERROR:CODE_INDENT: code indent should use tabs where possible
#897: FILE: drivers/scsi/gdth.c:2918:
+                    cmdp->u.cache64.sg_lst[i].sg_ptr = sg_dma_address(sg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#897: FILE: drivers/scsi/gdth.c:2918:
+                    cmdp->u.cache64.sg_lst[i].sg_ptr = sg_dma_address(sg);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#905: FILE: drivers/scsi/gdth.c:2925:
+                    cmdp->u.cache64.sg_lst[i].sg_len = sg_dma_len(sg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#905: FILE: drivers/scsi/gdth.c:2925:
+                    cmdp->u.cache64.sg_lst[i].sg_len = sg_dma_len(sg);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#912: FILE: drivers/scsi/gdth.c:2930:
+		for_each_sg(sl, sg, sgcnt, i) {
+                    cmdp->u.cache.sg_lst[i].sg_ptr = sg_dma_address(sg);

ERROR:CODE_INDENT: code indent should use tabs where possible
#913: FILE: drivers/scsi/gdth.c:2931:
+                    cmdp->u.cache.sg_lst[i].sg_ptr = sg_dma_address(sg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#913: FILE: drivers/scsi/gdth.c:2931:
+                    cmdp->u.cache.sg_lst[i].sg_ptr = sg_dma_address(sg);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#918: FILE: drivers/scsi/gdth.c:2935:
+                    cmdp->u.cache.sg_lst[i].sg_len = sg_dma_len(sg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#918: FILE: drivers/scsi/gdth.c:2935:
+                    cmdp->u.cache.sg_lst[i].sg_len = sg_dma_len(sg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#927: FILE: drivers/scsi/gdth.c:3021:
+    struct scatterlist *sl, *sg;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#937: FILE: drivers/scsi/gdth.c:3124:
+		for_each_sg(sl, sg, sgcnt, i) {
+                    cmdp->u.raw64.sg_lst[i].sg_ptr = sg_dma_address(sg);

ERROR:CODE_INDENT: code indent should use tabs where possible
#938: FILE: drivers/scsi/gdth.c:3125:
+                    cmdp->u.raw64.sg_lst[i].sg_ptr = sg_dma_address(sg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#938: FILE: drivers/scsi/gdth.c:3125:
+                    cmdp->u.raw64.sg_lst[i].sg_ptr = sg_dma_address(sg);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#946: FILE: drivers/scsi/gdth.c:3132:
+                    cmdp->u.raw64.sg_lst[i].sg_len = sg_dma_len(sg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#946: FILE: drivers/scsi/gdth.c:3132:
+                    cmdp->u.raw64.sg_lst[i].sg_len = sg_dma_len(sg);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#953: FILE: drivers/scsi/gdth.c:3137:
+		for_each_sg(sl, sg, sgcnt, i) {
+                    cmdp->u.raw.sg_lst[i].sg_ptr = sg_dma_address(sg);

ERROR:CODE_INDENT: code indent should use tabs where possible
#954: FILE: drivers/scsi/gdth.c:3138:
+                    cmdp->u.raw.sg_lst[i].sg_ptr = sg_dma_address(sg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#954: FILE: drivers/scsi/gdth.c:3138:
+                    cmdp->u.raw.sg_lst[i].sg_ptr = sg_dma_address(sg);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#959: FILE: drivers/scsi/gdth.c:3142:
+                    cmdp->u.raw.sg_lst[i].sg_len = sg_dma_len(sg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#959: FILE: drivers/scsi/gdth.c:3142:
+                    cmdp->u.raw.sg_lst[i].sg_len = sg_dma_len(sg);$

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#1015: FILE: drivers/scsi/ibmmca.c:1945:
+			ld(host_index)[ldn].sge[i].address = (void *) (isa_page_to_bus(sg->page) + sg->offset);

CHECK:SPACING: No space is necessary after a cast
#1015: FILE: drivers/scsi/ibmmca.c:1945:
+			ld(host_index)[ldn].sge[i].address = (void *) (isa_page_to_bus(sg->page) + sg->offset);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1074: FILE: drivers/scsi/ide-scsi.c:205:
+		printk (KERN_ERR "ide-scsi: scatter gather table too small, discarding data\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1074: FILE: drivers/scsi/ide-scsi.c:205:
+		printk (KERN_ERR "ide-scsi: scatter gather table too small, discarding data\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1075: FILE: drivers/scsi/ide-scsi.c:206:
+		idescsi_discard_data (drive, bcount);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1105: FILE: drivers/scsi/ide-scsi.c:242:
+		printk (KERN_ERR "ide-scsi: scatter gather table too small, padding with zeros\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1105: FILE: drivers/scsi/ide-scsi.c:242:
+		printk (KERN_ERR "ide-scsi: scatter gather table too small, padding with zeros\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1106: FILE: drivers/scsi/ide-scsi.c:243:
+		idescsi_output_zeros (drive, bcount);

CHECK:CAMELCASE: Avoid CamelCase: <pSCB>
#1144: FILE: drivers/scsi/initio.c:2929:
+		pSG = &pSCB->SCB_SGList[0];

CHECK:CAMELCASE: Avoid CamelCase: <SCB_SGList>
#1144: FILE: drivers/scsi/initio.c:2929:
+		pSG = &pSCB->SCB_SGList[0];

CHECK:CAMELCASE: Avoid CamelCase: <TotalLen>
#1145: FILE: drivers/scsi/initio.c:2930:
+		TotalLen = 0;

CHECK:CAMELCASE: Avoid CamelCase: <SCB_SGLen>
#1146: FILE: drivers/scsi/initio.c:2931:
+		for_each_sg(pSrbSG, sg, pSCB->SCB_SGLen, i) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1416: FILE: drivers/scsi/iscsi_tcp.c:773:
+							 sg->length-rc);
 							           ^

CHECK:SPACING: No space is necessary after a cast
#1462: FILE: drivers/scsi/jazz_esp.c:244:
+    struct scatterlist *sgl = (struct scatterlist *) sp->SCp.buffer;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1462: FILE: drivers/scsi/jazz_esp.c:244:
+    struct scatterlist *sgl = (struct scatterlist *) sp->SCp.buffer;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1463: FILE: drivers/scsi/jazz_esp.c:245:
+    struct scatterlist *sg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1464: FILE: drivers/scsi/jazz_esp.c:246:
+    int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1466: FILE: drivers/scsi/jazz_esp.c:248:
+    for_each_sg(sgl, sg, sz, i)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1483: FILE: drivers/scsi/jazz_esp.c:261:
+    struct scatterlist *sgl = (struct scatterlist *)sp->request_buffer;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1484: FILE: drivers/scsi/jazz_esp.c:262:
+    struct scatterlist *sg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1485: FILE: drivers/scsi/jazz_esp.c:263:
+    int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1487: FILE: drivers/scsi/jazz_esp.c:265:
+    for_each_sg(sgl, sg, sp->use_sg, i)$

CHECK:CAMELCASE: Avoid CamelCase: <bdeSize>
#1516: FILE: drivers/scsi/lpfc/lpfc_scsi.c:221:
+			bpl->tus.f.bdeSize = sg_dma_len(sg);

WARNING:LONG_LINE: line length of 130 exceeds 100 columns
#1777: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:451:
+					SYM53C500_pio_write(fast_pio, port_base, page_address(sg->page) + sg->offset, sg->length);

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#1795: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:473:
+					SYM53C500_pio_read(fast_pio, port_base, page_address(sg->page) + sg->offset, sg->length);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2107: FILE: drivers/scsi/scsi_debug.c:604:
+	struct scatterlist * sgpnt, * sg;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#2107: FILE: drivers/scsi/scsi_debug.c:604:
+	struct scatterlist * sgpnt, * sg;
 	                            ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2116: FILE: drivers/scsi/scsi_debug.c:625:
+	req_len = act_len = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#2163: FILE: drivers/scsi/sym53c416.c:441:
+						tot_trans += sym53c416_write(base, SG_ADDRESS(sg), sg->length);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2201: FILE: drivers/scsi/u14-34f.c:1114:
+   struct scatterlist *sgpnt, *sg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2213: FILE: drivers/scsi/u14-34f.c:1143:
+   for_each_sg(sgpnt, sg, count, k) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 6)
#2213: FILE: drivers/scsi/u14-34f.c:1143:
+   for_each_sg(sgpnt, sg, count, k) {
+      cpp->sglist[k].address = H2DEV(sg_dma_address(sg));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2214: FILE: drivers/scsi/u14-34f.c:1144:
+      cpp->sglist[k].address = H2DEV(sg_dma_address(sg));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2215: FILE: drivers/scsi/u14-34f.c:1145:
+      cpp->sglist[k].num_bytes = H2DEV(sg_dma_len(sg));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2216: FILE: drivers/scsi/u14-34f.c:1146:
+      data_len += sg->length;$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000433205.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 21 errors, 58 warnings, 28 checks, 1850 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000433205.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
