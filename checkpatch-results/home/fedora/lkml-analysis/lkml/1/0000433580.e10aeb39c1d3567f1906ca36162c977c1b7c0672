WARNING:TYPO_SPELLING: 'machanism' may be misspelled - perhaps 'mechanism'?
#27: 
In preparation for reducing stack size, add a machanism to see how
                                              ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space required before the open parenthesis '('
#76: FILE: arch/um/kernel/process.c:437:
+	if(stack == NULL)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!stack"
#76: FILE: arch/um/kernel/process.c:437:
+	if(stack == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#88: FILE: arch/um/kernel/process.c:449:
+	stack = (unsigned int *) (s + 1);

CHECK:SPACING: No space is necessary after a cast
#89: FILE: arch/um/kernel/process.c:450:
+	end = (unsigned int *) ((unsigned long) stack + THREAD_SIZE);

ERROR:SPACING: space required before the open brace '{'
#90: FILE: arch/um/kernel/process.c:451:
+	for(p = stack; p < end; p++){

ERROR:SPACING: space required before the open parenthesis '('
#90: FILE: arch/um/kernel/process.c:451:
+	for(p = stack; p < end; p++){

ERROR:SPACING: space required before the open brace '{'
#91: FILE: arch/um/kernel/process.c:452:
+		if(*p != 0x6b6b6b6b){

ERROR:SPACING: space required before the open parenthesis '('
#91: FILE: arch/um/kernel/process.c:452:
+		if(*p != 0x6b6b6b6b){

ERROR:SPACING: space required before the open brace '{'
#93: FILE: arch/um/kernel/process.c:454:
+			if(left < lowest_to_date){

ERROR:SPACING: space required before the open parenthesis '('
#93: FILE: arch/um/kernel/process.c:454:
+			if(left < lowest_to_date){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#94: FILE: arch/um/kernel/process.c:455:
+				printk("Greatest stack depth - %d bytes left\n",

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#114: FILE: include/asm-um/thread_info.h:57:
+extern void mark_stack(struct thread_info *stack);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#115: FILE: include/asm-um/thread_info.h:58:
+extern void check_stack_usage(struct thread_info *stack);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ti' - possible side-effects?
#122: FILE: include/asm-um/thread_info.h:65:
+#define free_thread_info(ti) ({ check_stack_usage(ti) ; kfree(ti); })

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000433580.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 2 warnings, 6 checks, 82 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000433580.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
