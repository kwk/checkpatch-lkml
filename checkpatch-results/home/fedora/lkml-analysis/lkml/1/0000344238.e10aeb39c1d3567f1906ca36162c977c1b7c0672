WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#51: FILE: arch/powerpc/Kconfig:530:
+config RAPIDIO
+	bool "RapidIO support" if FSL_RAPIDIO
+	help
+	  If you say Y here, the kernel will include drivers and
+	  infrastructure code to support RapidIO interconnect devices.
+

Kconfig symbols should have a help text which fully describes
it.

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'm' may be better as '(m)' to avoid precedence issues
#138: FILE: arch/powerpc/sysdev/fsl_rio.c:38:
+#define IRQ_RIO_BELL(m)		(((struct rio_priv *)(m->priv))->bellirq)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'm' may be better as '(m)' to avoid precedence issues
#139: FILE: arch/powerpc/sysdev/fsl_rio.c:39:
+#define IRQ_RIO_TX(m)		(((struct rio_priv *)(m->priv))->txirq)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'm' may be better as '(m)' to avoid precedence issues
#140: FILE: arch/powerpc/sysdev/fsl_rio.c:40:
+#define IRQ_RIO_RX(m)		(((struct rio_priv *)(m->priv))->rxirq)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#143: FILE: arch/powerpc/sysdev/fsl_rio.c:43:
+	printk(KERN_ERR "RIO %s: " fmt, __FUNCTION__, ## arg)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#143: FILE: arch/powerpc/sysdev/fsl_rio.c:43:
+	printk(KERN_ERR "RIO %s: " fmt, __FUNCTION__, ## arg)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#144: FILE: arch/powerpc/sysdev/fsl_rio.c:44:
+#define INFO(fmt...) printk(KERN_INFO "RIO: " fmt)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#183: FILE: arch/powerpc/sysdev/fsl_rio.c:95:
+#define DBELL_SID(x)		(*(u16 *)(x + DOORBELL_SID_OFFSET))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#184: FILE: arch/powerpc/sysdev/fsl_rio.c:96:
+#define DBELL_TID(x)		(*(u16 *)(x + DOORBELL_TID_OFFSET))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#269: FILE: arch/powerpc/sysdev/fsl_rio.c:194:
+	volatile void __iomem *regs_win;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#270: FILE: arch/powerpc/sysdev/fsl_rio.c:195:
+	volatile struct rio_atmu_regs __iomem *atmu_regs;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#271: FILE: arch/powerpc/sysdev/fsl_rio.c:196:
+	volatile struct rio_atmu_regs __iomem *maint_atmu_regs;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#272: FILE: arch/powerpc/sysdev/fsl_rio.c:197:
+	volatile struct rio_atmu_regs __iomem *dbell_atmu_regs;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#273: FILE: arch/powerpc/sysdev/fsl_rio.c:198:
+	volatile void __iomem *dbell_win;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#274: FILE: arch/powerpc/sysdev/fsl_rio.c:199:
+	volatile void __iomem *maint_win;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#275: FILE: arch/powerpc/sysdev/fsl_rio.c:200:
+	volatile struct rio_msg_regs __iomem *msg_regs;

WARNING:LINE_SPACING: Missing a blank line after declarations
#303: FILE: arch/powerpc/sysdev/fsl_rio.c:221:
+	struct rio_priv *priv = mport->priv;
+	pr_debug("fsl_doorbell_send: index %d destid 0x%04x data 0x%04x\n",

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#304: FILE: arch/powerpc/sysdev/fsl_rio.c:222:
+	pr_debug("fsl_doorbell_send: index %d destid 0x%04x data 0x%04x\n",
+			index, destid, data);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#314: FILE: arch/powerpc/sysdev/fsl_rio.c:232:
+		out_be32(&priv->msg_regs->oddatr,data );
 		                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#314: FILE: arch/powerpc/sysdev/fsl_rio.c:232:
+		out_be32(&priv->msg_regs->oddatr,data );

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#339: FILE: arch/powerpc/sysdev/fsl_rio.c:254:
+static int fsl_local_config_read(struct rio_mport *mport, int index, u32 offset, int len, u32 * data)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#339: FILE: arch/powerpc/sysdev/fsl_rio.c:254:
+static int fsl_local_config_read(struct rio_mport *mport, int index, u32 offset, int len, u32 * data)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#345: FILE: arch/powerpc/sysdev/fsl_rio.c:257:
+	struct rio_priv *priv = mport->priv;
+	pr_debug("fsl_local_config_read: index %d offset 0x%08x\n", index,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'fsl_local_config_read', this function's name, in a string
#345: FILE: arch/powerpc/sysdev/fsl_rio.c:257:
+	pr_debug("fsl_local_config_read: index %d offset 0x%08x\n", index,

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#346: FILE: arch/powerpc/sysdev/fsl_rio.c:258:
+	pr_debug("fsl_local_config_read: index %d offset 0x%08x\n", index,
+			offset);

WARNING:LINE_SPACING: Missing a blank line after declarations
#372: FILE: arch/powerpc/sysdev/fsl_rio.c:277:
+	struct rio_priv *priv = mport->priv;
+	pr_debug("fsl_local_config_write: index %d offset 0x%08x data 0x%08x\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'fsl_local_config_write', this function's name, in a string
#372: FILE: arch/powerpc/sysdev/fsl_rio.c:277:
+	pr_debug("fsl_local_config_write: index %d offset 0x%08x data 0x%08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#373: FILE: arch/powerpc/sysdev/fsl_rio.c:278:
+	pr_debug("fsl_local_config_write: index %d offset 0x%08x data 0x%08x\n",
+			index, offset, data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#397: FILE: arch/powerpc/sysdev/fsl_rio.c:297:
+static int fsl_rio_config_read(struct rio_mport *mport, int index, u16 destid,
+		u8 hopcount, u32 offset, int len, u32 * val)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#397: FILE: arch/powerpc/sysdev/fsl_rio.c:297:
+		u8 hopcount, u32 offset, int len, u32 * val)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#408: FILE: arch/powerpc/sysdev/fsl_rio.c:299:
+	volatile void __iomem *data;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'fsl_rio_config_read', this function's name, in a string
#411: FILE: arch/powerpc/sysdev/fsl_rio.c:302:
+	pr_debug("fsl_rio_config_read: index %d destid %d hopcount %d "

WARNING:SPLIT_STRING: quoted string split across lines
#412: FILE: arch/powerpc/sysdev/fsl_rio.c:303:
+	pr_debug("fsl_rio_config_read: index %d destid %d hopcount %d "
+			"offset 0x%08x len %d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#456: FILE: arch/powerpc/sysdev/fsl_rio.c:339:
+static int fsl_rio_config_write(struct rio_mport *mport, int index, u16 destid,
+		u8 hopcount, u32 offset, int len, u32 val)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#466: FILE: arch/powerpc/sysdev/fsl_rio.c:341:
+	volatile void __iomem *data;

WARNING:LINE_SPACING: Missing a blank line after declarations
#468: FILE: arch/powerpc/sysdev/fsl_rio.c:343:
+	struct rio_priv *priv = mport->priv;
+	pr_debug("fsl_rio_config_write: index %d destid %d hopcount %d"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'fsl_rio_config_write', this function's name, in a string
#468: FILE: arch/powerpc/sysdev/fsl_rio.c:343:
+	pr_debug("fsl_rio_config_write: index %d destid %d hopcount %d"

WARNING:SPLIT_STRING: quoted string split across lines
#469: FILE: arch/powerpc/sysdev/fsl_rio.c:344:
+	pr_debug("fsl_rio_config_write: index %d destid %d hopcount %d"
+			"offset 0x%08x len %d val 0x%08x\n",

WARNING:MISSING_SPACE: break quoted strings at a space character
#469: FILE: arch/powerpc/sysdev/fsl_rio.c:344:
+	pr_debug("fsl_rio_config_write: index %d destid %d hopcount %d"
+			"offset 0x%08x len %d val 0x%08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#509: FILE: arch/powerpc/sysdev/fsl_rio.c:380:
+static int fsl_rio_map_inb_mem(struct rio_mport *mport, resource_size_t lstart,
+		resource_size_t rstart,	resource_size_t size,

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#514: FILE: arch/powerpc/sysdev/fsl_rio.c:385:
+	volatile struct rio_inb_atmu_regs __iomem *inbatmu =

CHECK:BRACES: braces {} should be used on all arms of this statement
#526: FILE: arch/powerpc/sysdev/fsl_rio.c:397:
+	if ((lstart + size) > (_ALIGN_DOWN(lstart, align) + align)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#530: FILE: arch/powerpc/sysdev/fsl_rio.c:401:
+	} else

WARNING:SPLIT_STRING: quoted string split across lines
#535: FILE: arch/powerpc/sysdev/fsl_rio.c:406:
+		ERR("The local address 0x%x can not be aligned to the same size"
+			" 0x%x with the RapidIO space address 0x%x!\n", lstart,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#574: FILE: arch/powerpc/sysdev/fsl_rio.c:445:
+static int fsl_rio_map_outb_mem(struct rio_mport *mport, resource_size_t lstart,
+		resource_size_t rstart,	resource_size_t size,

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#579: FILE: arch/powerpc/sysdev/fsl_rio.c:450:
+	volatile struct rio_atmu_regs __iomem *outbatmu =

CHECK:BRACES: braces {} should be used on all arms of this statement
#591: FILE: arch/powerpc/sysdev/fsl_rio.c:462:
+	if ((lstart + size) > (_ALIGN_DOWN(lstart, align) + align)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#595: FILE: arch/powerpc/sysdev/fsl_rio.c:466:
+	} else

WARNING:SPLIT_STRING: quoted string split across lines
#600: FILE: arch/powerpc/sysdev/fsl_rio.c:471:
+		ERR("The local address 0x%x can not be aligned to the same size"
+			" 0x%x with the RapidIO space address 0x%x!\n", lstart,

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#637: FILE: arch/powerpc/sysdev/fsl_rio.c:508:
+	volatile struct rio_inb_atmu_regs __iomem *inbatmu = (struct rio_inb_atmu_regs *)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#659: FILE: arch/powerpc/sysdev/fsl_rio.c:530:
+	volatile struct rio_atmu_regs __iomem *outbatmu = (struct rio_atmu_regs *)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#689: FILE: arch/powerpc/sysdev/fsl_rio.c:556:
+int rio_hw_add_outb_message(struct rio_mport *mport, struct rio_dev *rdev,
+		int mbox, void *buffer, size_t len)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rio_hw_add_outb_message', this function's name, in a string
#701: FILE: arch/powerpc/sysdev/fsl_rio.c:563:
+	pr_debug("RIO: rio_hw_add_outb_message(): "

WARNING:SPLIT_STRING: quoted string split across lines
#702: FILE: arch/powerpc/sysdev/fsl_rio.c:564:
+	pr_debug("RIO: rio_hw_add_outb_message(): "
+			"destid 0x%04x mbox %d buffer %p len 0x%08x\n",

ERROR:SPACING: space required before the open parenthesis '('
#722: FILE: arch/powerpc/sysdev/fsl_rio.c:578:
+	switch(mport->phy_type) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#725: FILE: arch/powerpc/sysdev/fsl_rio.c:581:
+		desc->dport = (rdev->destid << 16) | ( mbox & 0x3);

WARNING:TYPO_SPELLING: 'occurence' may be misspelled - perhaps 'occurrence'?
#772: FILE: arch/powerpc/sysdev/fsl_rio.c:620:
+ * mailbox event handler and acks the interrupt occurence.
                                                 ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#807: FILE: arch/powerpc/sysdev/fsl_rio.c:645:
+		int slot = (dqp - priv->msg_tx_ring.phys) >> 5;
+		port->outb_msg[0].mcback(port, priv->msg_tx_ring.dev_id, -1, slot);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#906: FILE: arch/powerpc/sysdev/fsl_rio.c:724:
+	rc = request_irq(IRQ_RIO_TX(mport), fsl_rio_tx_handler, 0, "msg_tx",
+			mport);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#922: FILE: arch/powerpc/sysdev/fsl_rio.c:739:
+	setbits32(&priv->msg_regs->omr,
 		 ((get_bitmask_order(entries) - 2) << 12));

WARNING:TYPO_SPELLING: 'occurence' may be misspelled - perhaps 'occurrence'?
#983: FILE: arch/powerpc/sysdev/fsl_rio.c:788:
+ * mailbox event handler and acks the interrupt occurence.
                                                 ^^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#1067: FILE: arch/powerpc/sysdev/fsl_rio.c:863:
+	out_be32(&priv->msg_regs->ifqdpar, (u32) priv->msg_rx_ring.phys);

CHECK:SPACING: No space is necessary after a cast
#1068: FILE: arch/powerpc/sysdev/fsl_rio.c:864:
+	out_be32(&priv->msg_regs->ifqepar, (u32) priv->msg_rx_ring.phys);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1101: FILE: arch/powerpc/sysdev/fsl_rio.c:890:
+	setbits32(&priv->msg_regs->imr,
+			((get_bitmask_order(entries) - 2) << 12));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1163: FILE: arch/powerpc/sysdev/fsl_rio.c:940:
+		ERR("error adding inbound buffer %d, buffer exists\n",
+		       priv->msg_rx_ring.rx_slot);

CHECK:SPACING: No space is necessary after a cast
#1279: FILE: arch/powerpc/sysdev/fsl_rio.c:1032:
+		    (u32) priv->dbell_ring.virt +

WARNING:SPLIT_STRING: quoted string split across lines
#1288: FILE: arch/powerpc/sysdev/fsl_rio.c:1038:
+		pr_debug("RIO: processing doorbell, sid 0x%02x tid 0x%02x "
+				"info 0x%04x\n", DBELL_SID(dmsg),

WARNING:SPLIT_STRING: quoted string split across lines
#1301: FILE: arch/powerpc/sysdev/fsl_rio.c:1053:
+			pr_debug("RIO: spurious doorbell, sid 0x%02x "
+					"tid 0x%02x info %4.4x\n",

CHECK:SPACING: No space is necessary after a cast
#1365: FILE: arch/powerpc/sysdev/fsl_rio.c:1099:
+	out_be32(&priv->msg_regs->dqdpar, (u32) priv->dbell_ring.phys);

CHECK:SPACING: No space is necessary after a cast
#1366: FILE: arch/powerpc/sysdev/fsl_rio.c:1100:
+	out_be32(&priv->msg_regs->dqepar, (u32) priv->dbell_ring.phys);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1406: FILE: arch/powerpc/sysdev/fsl_rio.c:1131:
+
+}

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#1429: FILE: arch/powerpc/sysdev/fsl_rio.c:1153:
+__setup("riohdid=", fsl_rio_get_cmdline);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1445: FILE: arch/powerpc/sysdev/fsl_rio.c:1169:
+			printk("1\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1448: FILE: arch/powerpc/sysdev/fsl_rio.c:1172:
+			printk("4\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1451: FILE: arch/powerpc/sysdev/fsl_rio.c:1175:
+			printk("Unknown\n");

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#1452: FILE: arch/powerpc/sysdev/fsl_rio.c:1176:
+			break;;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1458: FILE: arch/powerpc/sysdev/fsl_rio.c:1182:
+			printk("Single-lane 0\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1461: FILE: arch/powerpc/sysdev/fsl_rio.c:1185:
+			printk("Single-lane 2\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1464: FILE: arch/powerpc/sysdev/fsl_rio.c:1188:
+			printk("Four-lane\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1467: FILE: arch/powerpc/sysdev/fsl_rio.c:1191:
+			printk("Unknown\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1477: FILE: arch/powerpc/sysdev/fsl_rio.c:1201:
+
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#1482: FILE: arch/powerpc/sysdev/fsl_rio.c:1206:
+	u8 pw = ccsr >> 30;
+	switch (pw) {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1533: FILE: arch/powerpc/sysdev/fsl_rio.c:1250:
+	volatile void __iomem *regs_win = NULL;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1573: FILE: arch/powerpc/sysdev/fsl_rio.c:1283:
+	INFO("LAW start 0x%016llx, size 0x%016llx.\n", (u64)law_start,
+						(u64)law_size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1575: FILE: arch/powerpc/sysdev/fsl_rio.c:1285:
+	INFO("Regs start 0x%08x size 0x%08x\n",	regs.start,
+						regs.end - regs.start + 1);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1593: FILE: arch/powerpc/sysdev/fsl_rio.c:1303:
+		printk("serial\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1596: FILE: arch/powerpc/sysdev/fsl_rio.c:1306:
+		printk("parallel");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1599: FILE: arch/powerpc/sysdev/fsl_rio.c:1309:
+		printk("Unknown type %d\n", phy_type);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1605: FILE: arch/powerpc/sysdev/fsl_rio.c:1315:
+
+

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ops)...) over kzalloc(sizeof(struct rio_ops)...)
#1635: FILE: arch/powerpc/sysdev/fsl_rio.c:1345:
+	ops = kzalloc(sizeof(struct rio_ops), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*port)...) over kzalloc(sizeof(struct rio_mport)...)
#1642: FILE: arch/powerpc/sysdev/fsl_rio.c:1352:
+	port = kzalloc(sizeof(struct rio_mport), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1654: FILE: arch/powerpc/sysdev/fsl_rio.c:1364:
+	INFO("RapidIO Common Transport System size: %d\n",
+			port->sys_size ? 65536 : 256);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*priv)...) over kzalloc(sizeof(struct rio_priv)...)
#1658: FILE: arch/powerpc/sysdev/fsl_rio.c:1368:
+	priv = kzalloc(sizeof(struct rio_priv), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1676: FILE: arch/powerpc/sysdev/fsl_rio.c:1386:
+	INFO("bellirq: %d, txirq: %d, rxirq %d\n", priv->bellirq,
+				priv->txirq, priv->rxirq);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1713: FILE: arch/powerpc/sysdev/fsl_rio.c:1415:
+	if (!rio_request_io_region(port, NULL, law_start, RIO_MAINT_WIN_SIZE,
+				"maint_win", RIO_RESOURCE_MAINT, NULL)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1719: FILE: arch/powerpc/sysdev/fsl_rio.c:1421:
+	out_be32(&priv->maint_atmu_regs->rowbar,
+				(law_start >> 12) & 0xffffff);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1731: FILE: arch/powerpc/sysdev/fsl_rio.c:1429:
+	if (!rio_request_io_region(port, NULL, law_start + RIO_MAINT_WIN_SIZE,
+			RIO_DBELL_WIN_SIZE,

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1751: FILE: arch/powerpc/sysdev/fsl_rio.c:1449:
+	if (ops)
+		kfree(ops);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1753: FILE: arch/powerpc/sysdev/fsl_rio.c:1451:
+	if (port)
+		kfree(port);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1755: FILE: arch/powerpc/sysdev/fsl_rio.c:1453:
+	if (priv)
+		kfree(priv);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1761: FILE: arch/powerpc/sysdev/fsl_rio.c:1459:
+static int __devinit fsl_of_rio_rpn_probe(struct of_device *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1762: FILE: arch/powerpc/sysdev/fsl_rio.c:1460:
+static int __devinit fsl_of_rio_rpn_probe(struct of_device *dev,
+				     const struct of_device_id *match)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1765: FILE: arch/powerpc/sysdev/fsl_rio.c:1463:
+	int rc;
+	printk(KERN_INFO "Setting up RapidIO peer-to-peer network %s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1765: FILE: arch/powerpc/sysdev/fsl_rio.c:1463:
+	printk(KERN_INFO "Setting up RapidIO peer-to-peer network %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1766: FILE: arch/powerpc/sysdev/fsl_rio.c:1464:
+	printk(KERN_INFO "Setting up RapidIO peer-to-peer network %s\n",
+			dev->node->full_name);

WARNING:CONST_STRUCT: struct of_device_id should normally be const
#1778: FILE: arch/powerpc/sysdev/fsl_rio.c:1476:
+static struct of_device_id fsl_of_rio_rpn_ids[] = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:UNDOCUMENTED_DT_STRING: DT compatible string "fsl,rapidio-delta" appears un-documented -- check /home/fedora/lkml-analysis/linux/Documentation/devicetree/bindings/
#1780: FILE: arch/powerpc/sysdev/fsl_rio.c:1478:
+		.compatible = "fsl,rapidio-delta",

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000344238.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 59 warnings, 42 checks, 1703 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000344238.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
