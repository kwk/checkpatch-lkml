CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#44: FILE: drivers/scsi/sd.c:915:
+static int sd_prepare_discard(struct request_queue *q, struct request *rq,
+		struct bio *bio)

CHECK:SPACING: No space is necessary after a cast
#57: FILE: drivers/scsi/sd.c:928:
+			(unsigned char) (bio->bi_sector >> 56) & 0xff : 0;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#59: FILE: drivers/scsi/sd.c:930:
+			(unsigned char) (bio->bi_sector >> 48) & 0xff : 0;

CHECK:SPACING: No space is necessary after a cast
#61: FILE: drivers/scsi/sd.c:932:
+			(unsigned char) (bio->bi_sector >> 40) & 0xff : 0;

CHECK:SPACING: No space is necessary after a cast
#63: FILE: drivers/scsi/sd.c:934:
+			(unsigned char) (bio->bi_sector >> 32) & 0xff : 0;

CHECK:SPACING: No space is necessary after a cast
#64: FILE: drivers/scsi/sd.c:935:
+	rq->cmd[6] = (unsigned char) (bio->bi_sector >> 24) & 0xff;

CHECK:SPACING: No space is necessary after a cast
#65: FILE: drivers/scsi/sd.c:936:
+	rq->cmd[7] = (unsigned char) (bio->bi_sector >> 16) & 0xff;

CHECK:SPACING: No space is necessary after a cast
#66: FILE: drivers/scsi/sd.c:937:
+	rq->cmd[8] = (unsigned char) (bio->bi_sector >> 8) & 0xff;

CHECK:SPACING: No space is necessary after a cast
#67: FILE: drivers/scsi/sd.c:938:
+	rq->cmd[9] = (unsigned char) bio->bi_sector & 0xff;

CHECK:SPACING: No space is necessary after a cast
#68: FILE: drivers/scsi/sd.c:939:
+	rq->cmd[10] = (unsigned char) (bio_sectors(bio) >> 24) & 0xff;

CHECK:SPACING: No space is necessary after a cast
#69: FILE: drivers/scsi/sd.c:940:
+	rq->cmd[11] = (unsigned char) (bio_sectors(bio) >> 16) & 0xff;

CHECK:SPACING: No space is necessary after a cast
#70: FILE: drivers/scsi/sd.c:941:
+	rq->cmd[12] = (unsigned char) (bio_sectors(bio) >> 8) & 0xff;

CHECK:SPACING: No space is necessary after a cast
#71: FILE: drivers/scsi/sd.c:942:
+	rq->cmd[13] = (unsigned char) bio_sectors(bio) & 0xff;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#76: FILE: drivers/scsi/sd.c:947:
+	printk(KERN_INFO "umap, lba = 0x%lld, len = %d\n",

ERROR:PRINTF_0XDECIMAL: Prefixing 0x with decimal output is defective
#76: FILE: drivers/scsi/sd.c:947:
+	printk(KERN_INFO "umap, lba = 0x%lld, len = %d\n",

Prefixing 0x with decimal output is defective and should be corrected.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078307.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 1 warnings, 13 checks, 82 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078307.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
