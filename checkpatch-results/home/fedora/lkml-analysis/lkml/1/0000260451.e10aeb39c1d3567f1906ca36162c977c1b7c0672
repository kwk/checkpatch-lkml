WARNING:TYPO_SPELLING: 'seperation' may be misspelled - perhaps 'separation'?
#30: 
- seperation of thin interrupt code
  ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#54: FILE: drivers/s390/cio/qdio_main.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#55: FILE: drivers/s390/cio/qdio_main.c:2:
+ * linux/drivers/s390/cio/qdio_main.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#69: FILE: drivers/s390/cio/qdio_main.c:16:
+#include <asm/atomic.h>

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#80: FILE: drivers/s390/cio/qdio_main.c:27:
+MODULE_AUTHOR("Utz Bacher <utz.bacher@de.ibm.com>,"\

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#94: FILE: drivers/s390/cio/qdio_main.c:41:
+	asm volatile(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#110: FILE: drivers/s390/cio/qdio_main.c:57:
+	asm volatile(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#137: FILE: drivers/s390/cio/qdio_main.c:84:
+	asm volatile(

CHECK:SPACING: No space is necessary after a cast
#145: FILE: drivers/s390/cio/qdio_main.c:92:
+	(*bb) = ((unsigned int) __fc) >> 31;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'successfull' may be misspelled - perhaps 'successful'?
#172: FILE: drivers/s390/cio/qdio_main.c:119:
+ * Returns the number of successfull extracted equal buffer states.
                          ^^^^^^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ccq == 96'
#193: FILE: drivers/s390/cio/qdio_main.c:140:
+	if ((ccq == 96) && (count != tmp_count))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'count != tmp_count'
#193: FILE: drivers/s390/cio/qdio_main.c:140:
+	if ((ccq == 96) && (count != tmp_count))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#264: FILE: drivers/s390/cio/qdio_main.c:211:
+	BUG_ON(bufnr > QDIO_MAX_BUFFERS_MASK);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#265: FILE: drivers/s390/cio/qdio_main.c:212:
+	BUG_ON(count > QDIO_MAX_BUFFERS_PER_Q);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#293: FILE: drivers/s390/cio/qdio_main.c:240:
+	BUG_ON(bufnr > QDIO_MAX_BUFFERS_MASK);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#294: FILE: drivers/s390/cio/qdio_main.c:241:
+	BUG_ON(count > QDIO_MAX_BUFFERS_PER_Q);

CHECK:BRACES: braces {} should be used on all arms of this statement
#365: FILE: drivers/s390/cio/qdio_main.c:312:
+	if (!is_qebsm(q))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#367: FILE: drivers/s390/cio/qdio_main.c:314:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#418: FILE: drivers/s390/cio/qdio_main.c:365:
+	if (pci_out_supported(q)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#423: FILE: drivers/s390/cio/qdio_main.c:370:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#503: FILE: drivers/s390/cio/qdio_main.c:450:
+		if (atomic_read(&q->u.in.polling))
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#505: FILE: drivers/s390/cio/qdio_main.c:452:
+		else {

WARNING:TYPO_SPELLING: 'loosing' may be misspelled - perhaps 'losing'?
#513: FILE: drivers/s390/cio/qdio_main.c:460:
+		 * we're loosing initiative in the thinint code.
 		         ^^^^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#539: FILE: drivers/s390/cio/qdio_main.c:486:
+		BUG();

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bufnr != q->last_move_ftc'
#552: FILE: drivers/s390/cio/qdio_main.c:499:
+	if ((bufnr != q->last_move_ftc) || q->qdio_error) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#559: FILE: drivers/s390/cio/qdio_main.c:506:
+		return 1;
+	} else {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#603: FILE: drivers/s390/cio/qdio_main.c:550:
+		return 1;
+	} else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#672: FILE: drivers/s390/cio/qdio_main.c:619:
+	struct qdio_q *q = (struct qdio_q *)data;
+	__qdio_inbound_processing(q);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#731: FILE: drivers/s390/cio/qdio_main.c:678:
+		BUG();

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bufnr != q->last_move_ftc'
#748: FILE: drivers/s390/cio/qdio_main.c:695:
+	if ((bufnr != q->last_move_ftc) || q->qdio_error) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#753: FILE: drivers/s390/cio/qdio_main.c:700:
+		return 1;
+	} else {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#884: FILE: drivers/s390/cio/qdio_main.c:831:
+	BUG_ON(atomic_read(&q->nr_buf_used) < 0);

CHECK:BRACES: braces {} should be used on all arms of this statement
#907: FILE: drivers/s390/cio/qdio_main.c:854:
+	if (qdio_outbound_q_done(q))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#909: FILE: drivers/s390/cio/qdio_main.c:856:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#921: FILE: drivers/s390/cio/qdio_main.c:868:
+	struct qdio_q *q = (struct qdio_q *)data;
+	__qdio_outbound_processing(q);

WARNING:LINE_SPACING: Missing a blank line after declarations
#927: FILE: drivers/s390/cio/qdio_main.c:874:
+	struct qdio_q *q = (struct qdio_q *)data;
+	tasklet_schedule(&q->tasklet);

WARNING:MEMORY_BARRIER: memory barrier without comment
#956: FILE: drivers/s390/cio/qdio_main.c:903:
+	mb();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#997: FILE: drivers/s390/cio/qdio_main.c:944:
+static void qdio_handle_activate_check(struct ccw_device *cdev,
+				unsigned long intparm, int cstat, int dstat)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1061: FILE: drivers/s390/cio/qdio_main.c:1008:
+static int qdio_establish_check_errors(struct ccw_device *cdev, int cstat,
+					   int dstat)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1298: FILE: drivers/s390/cio/qdio_main.c:1245:
+	wait_event_interruptible_timeout(cdev->private->wait_q,
+		irq_ptr->state == QDIO_IRQ_STATE_INACTIVE ||

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'init_data->no_input_qs > QDIO_MAX_QUEUES_PER_IRQ'
#1393: FILE: drivers/s390/cio/qdio_main.c:1340:
+	if ((init_data->no_input_qs > QDIO_MAX_QUEUES_PER_IRQ) ||
+	    (init_data->no_output_qs > QDIO_MAX_QUEUES_PER_IRQ))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'init_data->no_output_qs > QDIO_MAX_QUEUES_PER_IRQ'
#1393: FILE: drivers/s390/cio/qdio_main.c:1340:
+	if ((init_data->no_input_qs > QDIO_MAX_QUEUES_PER_IRQ) ||
+	    (init_data->no_output_qs > QDIO_MAX_QUEUES_PER_IRQ))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!init_data->input_sbal_addr_array'
#1397: FILE: drivers/s390/cio/qdio_main.c:1344:
+	if ((!init_data->input_sbal_addr_array) ||
+	    (!init_data->output_sbal_addr_array))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!init_data->output_sbal_addr_array'
#1397: FILE: drivers/s390/cio/qdio_main.c:1344:
+	if ((!init_data->input_sbal_addr_array) ||
+	    (!init_data->output_sbal_addr_array))

CHECK:SPACING: No space is necessary after a cast
#1403: FILE: drivers/s390/cio/qdio_main.c:1350:
+	irq_ptr = (void *) get_zeroed_page(GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*irq_ptr->qdr)...) over kzalloc(sizeof(struct qdr)...)
#1421: FILE: drivers/s390/cio/qdio_main.c:1368:
+	irq_ptr->qdr = kzalloc(sizeof(struct qdr), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1501: FILE: drivers/s390/cio/qdio_main.c:1448:
+	wait_event_interruptible_timeout(cdev->private->wait_q,
+		irq_ptr->state == QDIO_IRQ_STATE_ESTABLISHED ||

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1575: FILE: drivers/s390/cio/qdio_main.c:1522:
+	msleep(5);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bufnr < end'
#1605: FILE: drivers/s390/cio/qdio_main.c:1552:
+	if ((bufnr >= start && bufnr <= QDIO_MAX_BUFFERS_PER_Q) ||
+	    (bufnr < end))

WARNING:TYPO_SPELLING: 'programm' may be misspelled - perhaps 'program'?
#1627: FILE: drivers/s390/cio/qdio_main.c:1574:
+	 * upper-layer programm could empty the ACK'ed buffer here.
 	               ^^^^^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1641: FILE: drivers/s390/cio/qdio_main.c:1588:
+	BUG_ON(used + count > QDIO_MAX_BUFFERS_PER_Q);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1671: FILE: drivers/s390/cio/qdio_main.c:1618:
+	BUG_ON(used > QDIO_MAX_BUFFERS_PER_Q);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1698: FILE: drivers/s390/cio/qdio_main.c:1645:
+	if (state != SLSB_CU_OUTPUT_PRIMED)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1700: FILE: drivers/s390/cio/qdio_main.c:1647:
+	else {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bufnr > QDIO_MAX_BUFFERS_PER_Q'
#1728: FILE: drivers/s390/cio/qdio_main.c:1675:
+	if ((bufnr > QDIO_MAX_BUFFERS_PER_Q) ||
+	    (count > QDIO_MAX_BUFFERS_PER_Q) ||
+	    (q_nr > QDIO_MAX_QUEUES_PER_IRQ))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'count > QDIO_MAX_BUFFERS_PER_Q'
#1728: FILE: drivers/s390/cio/qdio_main.c:1675:
+	if ((bufnr > QDIO_MAX_BUFFERS_PER_Q) ||
+	    (count > QDIO_MAX_BUFFERS_PER_Q) ||
+	    (q_nr > QDIO_MAX_QUEUES_PER_IRQ))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'q_nr > QDIO_MAX_QUEUES_PER_IRQ'
#1728: FILE: drivers/s390/cio/qdio_main.c:1675:
+	if ((bufnr > QDIO_MAX_BUFFERS_PER_Q) ||
+	    (count > QDIO_MAX_BUFFERS_PER_Q) ||
+	    (q_nr > QDIO_MAX_QUEUES_PER_IRQ))

CHECK:BRACES: Unbalanced braces around else statement
#1763: FILE: drivers/s390/cio/qdio_main.c:1710:
+	else {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000260451.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 25 warnings, 33 checks, 1760 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000260451.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
