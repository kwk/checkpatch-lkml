WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pnp_dev *' should also have an identifier name
#130: FILE: drivers/pnp/pnpacpi/pnpacpi.h:9:
+acpi_status pnpacpi_parse_resource_option_data(struct pnp_dev *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pnp_dev *' should also have an identifier name
#131: FILE: drivers/pnp/pnpacpi/pnpacpi.h:10:
+int pnpacpi_encode_resources(struct pnp_dev *, struct acpi_buffer *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct acpi_buffer *' should also have an identifier name
#131: FILE: drivers/pnp/pnpacpi/pnpacpi.h:10:
+int pnpacpi_encode_resources(struct pnp_dev *, struct acpi_buffer *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: drivers/pnp/pnpacpi/rsparser.c:274:
+		pnpacpi_parse_allocated_memresource(dev,
 			p->minimum, p->address_length,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#208: FILE: drivers/pnp/pnpacpi/rsparser.c:278:
+		pnpacpi_parse_allocated_ioresource(dev,
 			p->minimum, p->address_length,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#226: FILE: drivers/pnp/pnpacpi/rsparser.c:306:
+			pnpacpi_parse_allocated_irqresource(dev,
 				irq->interrupts[i],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#235: FILE: drivers/pnp/pnpacpi/rsparser.c:317:
+			pnpacpi_parse_allocated_dmaresource(dev,
 				dma->channels[0],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#244: FILE: drivers/pnp/pnpacpi/rsparser.c:325:
+		pnpacpi_parse_allocated_ioresource(dev,
 			io->minimum,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#253: FILE: drivers/pnp/pnpacpi/rsparser.c:337:
+		pnpacpi_parse_allocated_ioresource(dev,
 			fixed_io->address,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#262: FILE: drivers/pnp/pnpacpi/rsparser.c:351:
+		pnpacpi_parse_allocated_memresource(dev,
 			memory24->minimum,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#270: FILE: drivers/pnp/pnpacpi/rsparser.c:358:
+		pnpacpi_parse_allocated_memresource(dev,
 			memory32->minimum,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#278: FILE: drivers/pnp/pnpacpi/rsparser.c:365:
+		pnpacpi_parse_allocated_memresource(dev,
 			fixed_memory32->address,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#296: FILE: drivers/pnp/pnpacpi/rsparser.c:387:
+			pnpacpi_parse_allocated_irqresource(dev,
 				extended_irq->interrupts[i],

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#375: FILE: drivers/pnp/pnpbios/pnpbios.h:31:
+extern int pnpbios_read_resources_from_node(struct pnp_dev *dev, struct pnp_bios_node *node);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#376: FILE: drivers/pnp/pnpbios/pnpbios.h:32:
+extern int pnpbios_write_resources_to_node(struct pnp_dev *dev, struct pnp_bios_node *node);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000300704.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 12 checks, 455 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000300704.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
