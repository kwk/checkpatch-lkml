WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#62: 
group are TE allow rules which make up 29 of the remaining lines, the
          ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#116: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 2
#184: FILE: scripts/selinux/install_policy.sh:2:
+if [ `id -u` -ne 0 ]; then

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#281: FILE: scripts/selinux/mdp/mdp.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#299: FILE: scripts/selinux/mdp/mdp.c:19:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#300: FILE: scripts/selinux/mdp/mdp.c:20:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'usage', this function's name, in a string
#316: FILE: scripts/selinux/mdp/mdp.c:36:
+	printf("usage: %s [-m] policy_file context_file\n", name);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#323: FILE: scripts/selinux/mdp/mdp.c:43:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#324: FILE: scripts/selinux/mdp/mdp.c:44:
+	start = strchr(cname, '_')+1;
 	                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#326: FILE: scripts/selinux/mdp/mdp.c:46:
+	if (!start || !end || start-cname > len || end-start > len) {
 	                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#326: FILE: scripts/selinux/mdp/mdp.c:46:
+	if (!start || !end || start-cname > len || end-start > len) {
 	                                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#330: FILE: scripts/selinux/mdp/mdp.c:50:
+	strncpy(dest, start, end-start);
 	                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#331: FILE: scripts/selinux/mdp/mdp.c:51:
+	dest[end-start] = '\0';
 	        ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#339: FILE: scripts/selinux/mdp/mdp.c:59:
+};
+#undef S_

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#343: FILE: scripts/selinux/mdp/mdp.c:63:
+#define TB_(x) char *x[] = {

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#344: FILE: scripts/selinux/mdp/mdp.c:64:
+#define TE_(x) NULL };

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#344: FILE: scripts/selinux/mdp/mdp.c:64:
+#define TE_(x) NULL };

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#355: FILE: scripts/selinux/mdp/mdp.c:75:
+};
+struct common common[] = {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#357: FILE: scripts/selinux/mdp/mdp.c:77:
+#define S_(x) $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#370: FILE: scripts/selinux/mdp/mdp.c:90:
+};
+struct av_inherit av_inherit[] = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#373: FILE: scripts/selinux/mdp/mdp.c:93:
+};
+#undef S_

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#382: FILE: scripts/selinux/mdp/mdp.c:102:
+};
+struct av_perms av_perms[] = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#385: FILE: scripts/selinux/mdp/mdp.c:105:
+};
+#undef S_

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#396: FILE: scripts/selinux/mdp/mdp.c:116:
+	arg = argv+1;
 	          ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#397: FILE: scripts/selinux/mdp/mdp.c:117:
+	if (argc==4 && strcmp(argv[1], "-m") == 0) {
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#412: FILE: scripts/selinux/mdp/mdp.c:132:
+	for (i=1; i < classlist_len; i++) {
 	      ^

ERROR:SPACING: space required before the open parenthesis '('
#413: FILE: scripts/selinux/mdp/mdp.c:133:
+		if(classlist[i])

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#420: FILE: scripts/selinux/mdp/mdp.c:140:
+	initial_sid_to_string_len = sizeof(initial_sid_to_string) / sizeof (char *);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#422: FILE: scripts/selinux/mdp/mdp.c:142:
+^Ifor (i=1; i < initial_sid_to_string_len; i++) $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#422: FILE: scripts/selinux/mdp/mdp.c:142:
+	for (i=1; i < initial_sid_to_string_len; i++) 
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#427: FILE: scripts/selinux/mdp/mdp.c:147:
+	for (i=0; i< sizeof(common)/sizeof(struct common); i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxW)
#427: FILE: scripts/selinux/mdp/mdp.c:147:
+	for (i=0; i< sizeof(common)/sizeof(struct common); i++) {
 	           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#427: FILE: scripts/selinux/mdp/mdp.c:147:
+	for (i=0; i< sizeof(common)/sizeof(struct common); i++) {
 	                           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#429: FILE: scripts/selinux/mdp/mdp.c:149:
+		char cname[101];
+		find_common_name(common[i].cname, cname, 100);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#432: FILE: scripts/selinux/mdp/mdp.c:152:
+		for (j=0; common[i].perms[j]; j++)
 		      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#439: FILE: scripts/selinux/mdp/mdp.c:159:
+	for (i=1; i < classlist_len; i++) {
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#445: FILE: scripts/selinux/mdp/mdp.c:165:
+			for (j=0; j < sizeof(av_inherit)/sizeof(struct av_inherit); j++)
 			      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#445: FILE: scripts/selinux/mdp/mdp.c:165:
+			for (j=0; j < sizeof(av_inherit)/sizeof(struct av_inherit); j++)
 			                                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#449: FILE: scripts/selinux/mdp/mdp.c:169:
+			for (j=0; j < sizeof(av_perms)/sizeof(struct av_perms); j++) {
 			      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#449: FILE: scripts/selinux/mdp/mdp.c:169:
+			for (j=0; j < sizeof(av_perms)/sizeof(struct av_perms); j++) {
 			                              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#463: FILE: scripts/selinux/mdp/mdp.c:183:
+			for (j=0; j < numperms; j++) {
 			      ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#463: FILE: scripts/selinux/mdp/mdp.c:183:
+			for (j=0; j < numperms; j++) {
+				fprintf(fout, "\t%s\n", av_perms[firstperm+j].perm_s);
+			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#464: FILE: scripts/selinux/mdp/mdp.c:184:
+				fprintf(fout, "\t%s\n", av_perms[firstperm+j].perm_s);
 				                                          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#480: FILE: scripts/selinux/mdp/mdp.c:200:
+	for (i=1; i < classlist_len; i++) {
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#490: FILE: scripts/selinux/mdp/mdp.c:210:
+	for (i=1; i < initial_sid_to_string_len; i++)
 	      ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#494: FILE: scripts/selinux/mdp/mdp.c:214:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000235151.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 19 errors, 9 warnings, 18 checks, 361 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000235151.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
