WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
If you have an older controller that you wish to test we have added a module

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#80: FILE: drivers/scsi/hpsa.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#95: FILE: drivers/scsi/hpsa.c:16:
+ *    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#96: FILE: drivers/scsi/hpsa.c:17:
+ *    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#128: FILE: drivers/scsi/hpsa.c:49:
+#include <asm/atomic.h>

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#132: FILE: drivers/scsi/hpsa.c:53:
+#define HPSA_DRIVER_VERSION(maj, min, submin) ((maj<<16)|(min<<8)|(submin))
                                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#132: FILE: drivers/scsi/hpsa.c:53:
+#define HPSA_DRIVER_VERSION(maj, min, submin) ((maj<<16)|(min<<8)|(submin))
                                                         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#132: FILE: drivers/scsi/hpsa.c:53:
+#define HPSA_DRIVER_VERSION(maj, min, submin) ((maj<<16)|(min<<8)|(submin))
                                                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#132: FILE: drivers/scsi/hpsa.c:53:
+#define HPSA_DRIVER_VERSION(maj, min, submin) ((maj<<16)|(min<<8)|(submin))
                                                                  ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'maj' may be better as '(maj)' to avoid precedence issues
#132: FILE: drivers/scsi/hpsa.c:53:
+#define HPSA_DRIVER_VERSION(maj, min, submin) ((maj<<16)|(min<<8)|(submin))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'min' may be better as '(min)' to avoid precedence issues
#132: FILE: drivers/scsi/hpsa.c:53:
+#define HPSA_DRIVER_VERSION(maj, min, submin) ((maj<<16)|(min<<8)|(submin))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#152: FILE: drivers/scsi/hpsa.c:73:
+module_param(allow_unknown_smartarray, int, S_IRUGO|S_IWUSR);
                                                    ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#152: FILE: drivers/scsi/hpsa.c:73:
+module_param(allow_unknown_smartarray, int, S_IRUGO|S_IWUSR);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#154: FILE: drivers/scsi/hpsa.c:75:
+MODULE_PARM_DESC(allow_unknown_smartarray,
+		"Allow driver to load on unknown HP Smart Array hardware");

CHECK:CAMELCASE: Avoid CamelCase: <CommandList_struct>
#204: FILE: drivers/scsi/hpsa.c:125:
+static void cmd_free(struct ctlr_info *h, struct CommandList_struct *c);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#209: FILE: drivers/scsi/hpsa.c:130:
+static int hpsa_scsi_proc_info(

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#210: FILE: drivers/scsi/hpsa.c:131:
+		struct Scsi_Host *sh,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#212: FILE: drivers/scsi/hpsa.c:133:
+^I^Ichar **start, ^I   /* where data in buffer starts */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#214: FILE: drivers/scsi/hpsa.c:135:
+^I^Iint length, ^I   /* length of data in buffer */$

WARNING:LINE_SPACING: Missing a blank line after declarations
#215: FILE: drivers/scsi/hpsa.c:136:
+		int length, 	   /* length of data in buffer */
+		int func);	   /* 0 == read, 1 == write */

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#218: FILE: drivers/scsi/hpsa.c:139:
+static int hpsa_scsi_queue_command(struct scsi_cmnd *cmd,
+		void (*done)(struct scsi_cmnd *));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scsi_cmnd *' should also have an identifier name
#218: FILE: drivers/scsi/hpsa.c:139:
+		void (*done)(struct scsi_cmnd *));

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: drivers/scsi/hpsa.c:196:
+static int hpsa_find_bus_target_lun(struct ctlr_info *h,
+	unsigned char scsi3addr[], int *bus, int *target, int *lun)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#302: FILE: drivers/scsi/hpsa.c:223:
+static int hpsa_scsi_add_entry(struct ctlr_info *h, int hostno,
+		struct hpsa_scsi_dev_t *device,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#312: FILE: drivers/scsi/hpsa.c:233:
+		printk(KERN_ERR "hpsa%d: Too many devices, "

WARNING:SPLIT_STRING: quoted string split across lines
#313: FILE: drivers/scsi/hpsa.c:234:
+		printk(KERN_ERR "hpsa%d: Too many devices, "
+			"some will be inaccessible.\n", h->ctlr);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'otherise' may be misspelled - perhaps 'otherwise'?
#324: FILE: drivers/scsi/hpsa.c:245:
+	/* unit no, zero otherise. */
 	                 ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#328: FILE: drivers/scsi/hpsa.c:249:
+		if (hpsa_find_bus_target_lun(h, device->scsi3addr,
+			&device->bus, &device->target, &device->lun) != 0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#353: FILE: drivers/scsi/hpsa.c:274:
+		printk(KERN_WARNING "hpsa%d: Physical device with no LUN=0, "

WARNING:SPLIT_STRING: quoted string split across lines
#354: FILE: drivers/scsi/hpsa.c:275:
+		printk(KERN_WARNING "hpsa%d: Physical device with no LUN=0, "
+			"suspect firmware bug or unsupported hardware "

WARNING:SPLIT_STRING: quoted string split across lines
#355: FILE: drivers/scsi/hpsa.c:276:
+			"suspect firmware bug or unsupported hardware "
+			"configuration.\n", h->ctlr);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#370: FILE: drivers/scsi/hpsa.c:291:
+	/* initially, (before registering with scsi layer) we don't
+	   know our hostno and we don't want to print anything first

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#371: FILE: drivers/scsi/hpsa.c:292:
+	   time anyway (the scsi layer's inquiries will show that info) */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#373: FILE: drivers/scsi/hpsa.c:294:
+		printk("hpsa%d: %s device c%db%dt%dl%d added.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#374: FILE: drivers/scsi/hpsa.c:295:
+		printk("hpsa%d: %s device c%db%dt%dl%d added.\n",
+			h->ctlr, scsi_device_type(device->devtype), hostno,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#381: FILE: drivers/scsi/hpsa.c:302:
+static void hpsa_scsi_remove_entry(struct ctlr_info *h, int hostno, int entry,
+	struct scsi2map *removed, int *nremoved)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#396: FILE: drivers/scsi/hpsa.c:317:
+	for (i = entry; i < h->ndevices-1; i++)
 	                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#397: FILE: drivers/scsi/hpsa.c:318:
+		h->dev[i] = h->dev[i+1];
 		                    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#399: FILE: drivers/scsi/hpsa.c:320:
+	printk(KERN_INFO "hpsa%d: %s device c%db%dt%dl%d removed.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#400: FILE: drivers/scsi/hpsa.c:321:
+	printk(KERN_INFO "hpsa%d: %s device c%db%dt%dl%d removed.\n",
+		h->ctlr, scsi_device_type(sd.devtype), hostno,

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#404: FILE: drivers/scsi/hpsa.c:325:
+#define SCSI3ADDR_EQ(a, b) ( \
+	(a)[7] == (b)[7] && \
+	(a)[6] == (b)[6] && \
+	(a)[5] == (b)[5] && \
+	(a)[4] == (b)[4] && \
+	(a)[3] == (b)[3] && \
+	(a)[2] == (b)[2] && \
+	(a)[1] == (b)[1] && \
+	(a)[0] == (b)[0])

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#404: FILE: drivers/scsi/hpsa.c:325:
+#define SCSI3ADDR_EQ(a, b) ( \
+	(a)[7] == (b)[7] && \
+	(a)[6] == (b)[6] && \
+	(a)[5] == (b)[5] && \
+	(a)[4] == (b)[4] && \
+	(a)[3] == (b)[3] && \
+	(a)[2] == (b)[2] && \
+	(a)[1] == (b)[1] && \
+	(a)[0] == (b)[0])

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#424: FILE: drivers/scsi/hpsa.c:345:
+			for (j = i; j < h->ndevices-1; j++)
 			                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#425: FILE: drivers/scsi/hpsa.c:346:
+				h->dev[j] = h->dev[j+1];
 				                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#434: FILE: drivers/scsi/hpsa.c:355:
+static inline int device_is_the_same(struct hpsa_scsi_dev_t *dev1,
+	struct hpsa_scsi_dev_t *dev2)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#437: FILE: drivers/scsi/hpsa.c:358:
+	if (is_logical_dev_addr_mode(dev1->scsi3addr) ||
+		(dev1->lun != -1 && dev2->lun != -1))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#441: FILE: drivers/scsi/hpsa.c:362:
+	/* we compare everything except lun and target as these
+	   are not yet assigned.  Compare parts likely

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#442: FILE: drivers/scsi/hpsa.c:363:
+	   to differ first */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#444: FILE: drivers/scsi/hpsa.c:365:
+	if (memcmp(dev1->scsi3addr, dev2->scsi3addr,
+		sizeof(dev1->scsi3addr)) != 0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#447: FILE: drivers/scsi/hpsa.c:368:
+	if (memcmp(dev1->device_id, dev2->device_id,
+		sizeof(dev1->device_id)) != 0)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#465: FILE: drivers/scsi/hpsa.c:386:
+/* Find needle in haystack.  If exact match found, return DEVICE_SAME,
+   and return needle location in *index.  If scsi3addr matches, but not

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#467: FILE: drivers/scsi/hpsa.c:388:
+   location in *index.  If needle not found, return DEVICE_NOT_FOUND. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#469: FILE: drivers/scsi/hpsa.c:390:
+static int hpsa_scsi_find_entry(struct hpsa_scsi_dev_t *needle,
+	struct hpsa_scsi_dev_t haystack[], int haystack_size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#490: FILE: drivers/scsi/hpsa.c:411:
+static int adjust_hpsa_scsi_table(struct ctlr_info *h, int hostno,
+	struct hpsa_scsi_dev_t sd[], int nsds)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#504: FILE: drivers/scsi/hpsa.c:425:
+	added = kzalloc(sizeof(*added) * HPSA_MAX_SCSI_DEVS_PER_HBA,
+		GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#506: FILE: drivers/scsi/hpsa.c:427:
+	removed = kzalloc(sizeof(*removed) * HPSA_MAX_SCSI_DEVS_PER_HBA,
+		GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#509: FILE: drivers/scsi/hpsa.c:430:
+		printk(KERN_WARNING "hpsa%d: Out of memory in "

WARNING:SPLIT_STRING: quoted string split across lines
#510: FILE: drivers/scsi/hpsa.c:431:
+		printk(KERN_WARNING "hpsa%d: Out of memory in "
+		"adjust_hpsa_scsi_table\n", h->ctlr);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'adjust_hpsa_scsi_table', this function's name, in a string
#510: FILE: drivers/scsi/hpsa.c:431:
+		"adjust_hpsa_scsi_table\n", h->ctlr);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#517: FILE: drivers/scsi/hpsa.c:438:
+	/* find any devices in h->dev[] that are not in
+	   sd[] and remove them from h->dev[], and for any

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#519: FILE: drivers/scsi/hpsa.c:440:
+	   info and add the new device info. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#530: FILE: drivers/scsi/hpsa.c:451:
+			hpsa_scsi_remove_entry(h, hostno, i,
+				removed, &nremoved);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#535: FILE: drivers/scsi/hpsa.c:456:
+			hpsa_scsi_remove_entry(h, hostno, i,
+				removed, &nremoved);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#537: FILE: drivers/scsi/hpsa.c:458:
+			if (hpsa_scsi_add_entry(h, hostno, &sd[entry],
+				added, &nadded) != 0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#539: FILE: drivers/scsi/hpsa.c:460:
+				BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#545: FILE: drivers/scsi/hpsa.c:466:
+	/* Now, make sure every device listed in sd[] is also
+	listed in h->dev[], adding them if they aren't found */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#545: FILE: drivers/scsi/hpsa.c:466:
+	listed in h->dev[], adding them if they aren't found */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#549: FILE: drivers/scsi/hpsa.c:470:
+		device_change = hpsa_scsi_find_entry(&sd[i], h->dev,
+					h->ndevices, &entry);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#553: FILE: drivers/scsi/hpsa.c:474:
+			if (hpsa_scsi_add_entry(h, hostno, &sd[i],
+				added, &nadded) != 0)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#558: FILE: drivers/scsi/hpsa.c:479:
+			printk("hpsa%d: device unexpectedly changed.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#559: FILE: drivers/scsi/hpsa.c:480:
+			printk("hpsa%d: device unexpectedly changed.\n",
+				h->ctlr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#576: FILE: drivers/scsi/hpsa.c:497:
+			scsi_device_lookup(sh, removed[i].bus,
+				removed[i].target, removed[i].lun);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sdev"
#577: FILE: drivers/scsi/hpsa.c:498:
+		if (sdev != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#584: FILE: drivers/scsi/hpsa.c:505:
+			printk(KERN_WARNING "hpsa%d: didn't find "

WARNING:SPLIT_STRING: quoted string split across lines
#585: FILE: drivers/scsi/hpsa.c:506:
+			printk(KERN_WARNING "hpsa%d: didn't find "
+				"c%db%dt%dl%d\n for removal.",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#594: FILE: drivers/scsi/hpsa.c:515:
+		if (scsi_add_device(sh, added[i].bus,
+			added[i].target, added[i].lun) == 0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#596: FILE: drivers/scsi/hpsa.c:517:
+		printk(KERN_WARNING "hpsa%d: scsi_add_device "

WARNING:SPLIT_STRING: quoted string split across lines
#597: FILE: drivers/scsi/hpsa.c:518:
+		printk(KERN_WARNING "hpsa%d: scsi_add_device "
+			"c%db%dt%dl%d failed, device not added.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#612: FILE: drivers/scsi/hpsa.c:533:
+static int lookup_scsi3addr(struct ctlr_info *h, int bus, int target, int lun,
+	char *scsi3addr)

WARNING:RETURN_VOID: void function return statements are not generally useful
#638: FILE: drivers/scsi/hpsa.c:559:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#641: FILE: drivers/scsi/hpsa.c:562:
+static void complete_scsi_command(struct CommandList_struct *cp,
+	int timeout, __u32 tag)

CHECK:CAMELCASE: Avoid CamelCase: <ErrorInfo_struct>
#645: FILE: drivers/scsi/hpsa.c:566:
+	struct ErrorInfo_struct *ei;

CHECK:CAMELCASE: Avoid CamelCase: <Request>
#654: FILE: drivers/scsi/hpsa.c:575:
+	if (cp->Request.Type.Type == TYPE_MSG)  {

CHECK:CAMELCASE: Avoid CamelCase: <Type>
#654: FILE: drivers/scsi/hpsa.c:575:
+	if (cp->Request.Type.Type == TYPE_MSG)  {

CHECK:SPACING: No space is necessary after a cast
#659: FILE: drivers/scsi/hpsa.c:580:
+	cmd = (struct scsi_cmnd *) cp->scsi_cmd;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#664: FILE: drivers/scsi/hpsa.c:585:
+^Icmd->result = (DID_OK << 16); ^I^I/* host byte */$

CHECK:CAMELCASE: Avoid CamelCase: <ScsiStatus>
#666: FILE: drivers/scsi/hpsa.c:587:
+	cmd->result |= (ei->ScsiStatus);

CHECK:CAMELCASE: Avoid CamelCase: <SenseInfo>
#669: FILE: drivers/scsi/hpsa.c:590:
+	memcpy(cmd->sense_buffer, ei->SenseInfo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#670: FILE: drivers/scsi/hpsa.c:591:
+	memcpy(cmd->sense_buffer, ei->SenseInfo,
+		ei->SenseLen > SCSI_SENSE_BUFFERSIZE ?

CHECK:CAMELCASE: Avoid CamelCase: <SenseLen>
#670: FILE: drivers/scsi/hpsa.c:591:
+		ei->SenseLen > SCSI_SENSE_BUFFERSIZE ?

CHECK:CAMELCASE: Avoid CamelCase: <ResidualCnt>
#673: FILE: drivers/scsi/hpsa.c:594:
+	scsi_set_resid(cmd, ei->ResidualCnt);

CHECK:CAMELCASE: Avoid CamelCase: <CommandStatus>
#675: FILE: drivers/scsi/hpsa.c:596:
+	if (ei->CommandStatus == 0) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#683: FILE: drivers/scsi/hpsa.c:604:
+	switch (ei->CommandStatus) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#695: FILE: drivers/scsi/hpsa.c:616:
+		if (ei->ScsiStatus == SAM_STAT_CHECK_CONDITION) {
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'asc == 0x25'
#700: FILE: drivers/scsi/hpsa.c:621:
+				if ((asc == 0x25) && (ascq == 0x0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ascq == 0x0'
#700: FILE: drivers/scsi/hpsa.c:621:
+				if ((asc == 0x25) && (ascq == 0x0)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#701: FILE: drivers/scsi/hpsa.c:622:
+					printk(KERN_WARNING "hpsa: cp %p "

WARNING:SPLIT_STRING: quoted string split across lines
#702: FILE: drivers/scsi/hpsa.c:623:
+					printk(KERN_WARNING "hpsa: cp %p "
+						"has check condition\n", cp);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'asc == 0x04'
#712: FILE: drivers/scsi/hpsa.c:633:
+				if ((asc == 0x04) && (ascq == 0x03)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ascq == 0x03'
#712: FILE: drivers/scsi/hpsa.c:633:
+				if ((asc == 0x04) && (ascq == 0x03)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#714: FILE: drivers/scsi/hpsa.c:635:
+					printk(KERN_WARNING "hpsa: cp %p "

WARNING:SPLIT_STRING: quoted string split across lines
#715: FILE: drivers/scsi/hpsa.c:636:
+					printk(KERN_WARNING "hpsa: cp %p "
+						"has check condition: unit "

WARNING:SPLIT_STRING: quoted string split across lines
#716: FILE: drivers/scsi/hpsa.c:637:
+						"has check condition: unit "
+						"not ready, manual "

WARNING:SPLIT_STRING: quoted string split across lines
#717: FILE: drivers/scsi/hpsa.c:638:
+						"not ready, manual "
+						"intervention required\n", cp);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#722: FILE: drivers/scsi/hpsa.c:643:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#725: FILE: drivers/scsi/hpsa.c:646:
+			printk(KERN_WARNING "hpsa: cp %p has check condition: "

WARNING:SPLIT_STRING: quoted string split across lines
#726: FILE: drivers/scsi/hpsa.c:647:
+			printk(KERN_WARNING "hpsa: cp %p has check condition: "
+					"unknown type: "

WARNING:SPLIT_STRING: quoted string split across lines
#727: FILE: drivers/scsi/hpsa.c:648:
+					"unknown type: "
+					"Sense: 0x%x, ASC: 0x%x, ASCQ: 0x%x, "

WARNING:SPLIT_STRING: quoted string split across lines
#728: FILE: drivers/scsi/hpsa.c:649:
+					"Sense: 0x%x, ASC: 0x%x, ASCQ: 0x%x, "
+					"Returning result: 0x%x, "

WARNING:SPLIT_STRING: quoted string split across lines
#729: FILE: drivers/scsi/hpsa.c:650:
+					"Returning result: 0x%x, "
+					"cmd=[%02x %02x %02x %02x %02x "

WARNING:SPLIT_STRING: quoted string split across lines
#730: FILE: drivers/scsi/hpsa.c:651:
+					"cmd=[%02x %02x %02x %02x %02x "
+					"%02x %02x %02x %02x %02x]\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#741: FILE: drivers/scsi/hpsa.c:662:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#745: FILE: drivers/scsi/hpsa.c:666:
+		if (ei->ScsiStatus) {
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#747: FILE: drivers/scsi/hpsa.c:668:
+			printk(KERN_WARNING "hpsa: cp %p has status 0x%x "

WARNING:SPLIT_STRING: quoted string split across lines
#748: FILE: drivers/scsi/hpsa.c:669:
+			printk(KERN_WARNING "hpsa: cp %p has status 0x%x "
+				"Sense: 0x%x, ASC: 0x%x, ASCQ: 0x%x, "

WARNING:SPLIT_STRING: quoted string split across lines
#749: FILE: drivers/scsi/hpsa.c:670:
+				"Sense: 0x%x, ASC: 0x%x, ASCQ: 0x%x, "
+				"Returning result: 0x%x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#754: FILE: drivers/scsi/hpsa.c:675:
+			printk(KERN_WARNING "hpsa: cp %p SCSI status was 0. "

WARNING:SPLIT_STRING: quoted string split across lines
#755: FILE: drivers/scsi/hpsa.c:676:
+			printk(KERN_WARNING "hpsa: cp %p SCSI status was 0. "
+				"Returning no connection.\n", cp),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#776: FILE: drivers/scsi/hpsa.c:697:
+		printk(KERN_WARNING "hpsa: cp %p has"

WARNING:SPLIT_STRING: quoted string split across lines
#777: FILE: drivers/scsi/hpsa.c:698:
+		printk(KERN_WARNING "hpsa: cp %p has"
+			" completed with data overrun "

WARNING:SPLIT_STRING: quoted string split across lines
#778: FILE: drivers/scsi/hpsa.c:699:
+			" completed with data overrun "
+			"reported\n", cp);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#782: FILE: drivers/scsi/hpsa.c:703:
+		/* print_bytes(cp, sizeof(*cp), 1, 0);
+		print_cmd(cp); */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#782: FILE: drivers/scsi/hpsa.c:703:
+		print_cmd(cp); */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#788: FILE: drivers/scsi/hpsa.c:709:
+		 * missing target. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#793: FILE: drivers/scsi/hpsa.c:714:
+		printk(KERN_WARNING "hpsa: cp %p has "

WARNING:SPLIT_STRING: quoted string split across lines
#794: FILE: drivers/scsi/hpsa.c:715:
+		printk(KERN_WARNING "hpsa: cp %p has "
+			"protocol error \n", cp);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#794: FILE: drivers/scsi/hpsa.c:715:
+			"protocol error \n", cp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#798: FILE: drivers/scsi/hpsa.c:719:
+		printk(KERN_WARNING "hpsa: cp %p had "

WARNING:SPLIT_STRING: quoted string split across lines
#799: FILE: drivers/scsi/hpsa.c:720:
+		printk(KERN_WARNING "hpsa: cp %p had "
+			" hardware error\n", cp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#803: FILE: drivers/scsi/hpsa.c:724:
+		printk(KERN_WARNING "hpsa: cp %p had "

WARNING:SPLIT_STRING: quoted string split across lines
#804: FILE: drivers/scsi/hpsa.c:725:
+		printk(KERN_WARNING "hpsa: cp %p had "
+				"connection lost\n", cp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#808: FILE: drivers/scsi/hpsa.c:729:
+		printk(KERN_WARNING "hpsa: cp %p was "

WARNING:SPLIT_STRING: quoted string split across lines
#809: FILE: drivers/scsi/hpsa.c:730:
+		printk(KERN_WARNING "hpsa: cp %p was "
+				"aborted with status 0x%x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#814: FILE: drivers/scsi/hpsa.c:735:
+		printk(KERN_WARNING "hpsa: cp %p reports "

WARNING:SPLIT_STRING: quoted string split across lines
#815: FILE: drivers/scsi/hpsa.c:736:
+		printk(KERN_WARNING "hpsa: cp %p reports "
+			"abort failed\n", cp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#819: FILE: drivers/scsi/hpsa.c:740:
+		printk(KERN_WARNING "hpsa: cp %p aborted "

WARNING:SPLIT_STRING: quoted string split across lines
#820: FILE: drivers/scsi/hpsa.c:741:
+		printk(KERN_WARNING "hpsa: cp %p aborted "
+			"do to an unsolicited abort\n", cp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#824: FILE: drivers/scsi/hpsa.c:745:
+		printk(KERN_WARNING "hpsa: cp %p timedout\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#825: FILE: drivers/scsi/hpsa.c:746:
+		printk(KERN_WARNING "hpsa: cp %p timedout\n",
+			cp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#829: FILE: drivers/scsi/hpsa.c:750:
+		printk(KERN_WARNING "hpsa: cp %p returned "

WARNING:SPLIT_STRING: quoted string split across lines
#830: FILE: drivers/scsi/hpsa.c:751:
+		printk(KERN_WARNING "hpsa: cp %p returned "
+			"unknown status %x\n", cp,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sh"
#843: FILE: drivers/scsi/hpsa.c:764:
+	if (sh == NULL)

CHECK:SPACING: No space is necessary after a cast
#854: FILE: drivers/scsi/hpsa.c:775:
+	sh->hostdata[0] = (unsigned long) h;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#864: FILE: drivers/scsi/hpsa.c:785:
+	printk(KERN_ERR "hpsa_scsi_detect: scsi_add_host"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hpsa_scsi_detect', this function's name, in a string
#864: FILE: drivers/scsi/hpsa.c:785:
+	printk(KERN_ERR "hpsa_scsi_detect: scsi_add_host"

WARNING:SPLIT_STRING: quoted string split across lines
#865: FILE: drivers/scsi/hpsa.c:786:
+	printk(KERN_ERR "hpsa_scsi_detect: scsi_add_host"
+		" failed for controller %d\n", h->ctlr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#869: FILE: drivers/scsi/hpsa.c:790:
+	printk(KERN_ERR "hpsa_scsi_detect: scsi_host_alloc"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hpsa_scsi_detect', this function's name, in a string
#869: FILE: drivers/scsi/hpsa.c:790:
+	printk(KERN_ERR "hpsa_scsi_detect: scsi_host_alloc"

WARNING:SPLIT_STRING: quoted string split across lines
#870: FILE: drivers/scsi/hpsa.c:791:
+	printk(KERN_ERR "hpsa_scsi_detect: scsi_host_alloc"
+		" failed for controller %d\n", h->ctlr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#875: FILE: drivers/scsi/hpsa.c:796:
+static void hpsa_unmap_one(struct pci_dev *pdev,
+		struct CommandList_struct *cp,

CHECK:CAMELCASE: Avoid CamelCase: <Addr>
#881: FILE: drivers/scsi/hpsa.c:802:
+	addr64.val32.lower = cp->SG[0].Addr.lower;

CHECK:SPACING: No space is necessary after a cast
#883: FILE: drivers/scsi/hpsa.c:804:
+	pci_unmap_single(pdev, (dma_addr_t) addr64.val,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#884: FILE: drivers/scsi/hpsa.c:805:
+	pci_unmap_single(pdev, (dma_addr_t) addr64.val,
+		buflen, data_direction);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#888: FILE: drivers/scsi/hpsa.c:809:
+static void hpsa_map_one(struct pci_dev *pdev,
+		struct CommandList_struct *cp,

CHECK:SPACING: No space is necessary after a cast
#895: FILE: drivers/scsi/hpsa.c:816:
+	addr64 = (__u64) pci_map_single(pdev, buf, buflen, data_direction);

CHECK:SPACING: No space is necessary after a cast
#897: FILE: drivers/scsi/hpsa.c:818:
+	  (__u32) (addr64 & (__u64) 0x00000000FFFFFFFF);

CHECK:SPACING: No space is necessary after a cast
#899: FILE: drivers/scsi/hpsa.c:820:
+	  (__u32) ((addr64 >> 32) & (__u64) 0x00000000FFFFFFFF);

CHECK:CAMELCASE: Avoid CamelCase: <Len>
#900: FILE: drivers/scsi/hpsa.c:821:
+	cp->SG[0].Len = buflen;

CHECK:SPACING: No space is necessary after a cast
#901: FILE: drivers/scsi/hpsa.c:822:
+	cp->Header.SGList = (__u8) 1;   /* no. SGs contig in this cmd */

CHECK:CAMELCASE: Avoid CamelCase: <Header>
#901: FILE: drivers/scsi/hpsa.c:822:
+	cp->Header.SGList = (__u8) 1;   /* no. SGs contig in this cmd */

CHECK:CAMELCASE: Avoid CamelCase: <SGList>
#901: FILE: drivers/scsi/hpsa.c:822:
+	cp->Header.SGList = (__u8) 1;   /* no. SGs contig in this cmd */

CHECK:SPACING: No space is necessary after a cast
#902: FILE: drivers/scsi/hpsa.c:823:
+	cp->Header.SGTotal = (__u16) 1; /* total sgs in this cmd list */

CHECK:CAMELCASE: Avoid CamelCase: <SGTotal>
#902: FILE: drivers/scsi/hpsa.c:823:
+	cp->Header.SGTotal = (__u16) 1; /* total sgs in this cmd list */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#906: FILE: drivers/scsi/hpsa.c:827:
+static int hpsa_scsi_do_simple_cmd(struct ctlr_info *c,
+			struct CommandList_struct *cp,

CHECK:CAMELCASE: Avoid CamelCase: <ReplyQueue>
#918: FILE: drivers/scsi/hpsa.c:839:
+	cp->Header.ReplyQueue = 0;  /* unused in simple mode */

CHECK:CAMELCASE: Avoid CamelCase: <Tag>
#920: FILE: drivers/scsi/hpsa.c:841:
+	cp->Header.Tag.lower = cp->busaddr;  /* Use k. address of cmd as tag */

CHECK:CAMELCASE: Avoid CamelCase: <Timeout>
#925: FILE: drivers/scsi/hpsa.c:846:
+	cp->Request.Timeout = 0;

CHECK:CAMELCASE: Avoid CamelCase: <CDBLen>
#926: FILE: drivers/scsi/hpsa.c:847:
+	cp->Request.CDBLen = cdblen;

CHECK:CAMELCASE: Avoid CamelCase: <Attribute>
#928: FILE: drivers/scsi/hpsa.c:849:
+	cp->Request.Type.Attribute = ATTR_SIMPLE;

CHECK:CAMELCASE: Avoid CamelCase: <Direction>
#929: FILE: drivers/scsi/hpsa.c:850:
+	cp->Request.Type.Direction = direction;

CHECK:SPACING: No space is necessary after a cast
#932: FILE: drivers/scsi/hpsa.c:853:
+	hpsa_map_one(c->pdev, cp, (unsigned char *) buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#933: FILE: drivers/scsi/hpsa.c:854:
+	hpsa_map_one(c->pdev, cp, (unsigned char *) buf,
+			bufsize, DMA_FROM_DEVICE);

CHECK:CAMELCASE: Avoid CamelCase: <reqQ>
#939: FILE: drivers/scsi/hpsa.c:860:
+	addQ(&c->reqQ, cp);

CHECK:CAMELCASE: Avoid CamelCase: <Qdepth>
#940: FILE: drivers/scsi/hpsa.c:861:
+	c->Qdepth++;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#958: FILE: drivers/scsi/hpsa.c:879:
+		printk(KERN_WARNING "hpsa: cmd %p has "

WARNING:SPLIT_STRING: quoted string split across lines
#959: FILE: drivers/scsi/hpsa.c:880:
+		printk(KERN_WARNING "hpsa: cmd %p has "
+			"completed with errors\n", cp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#960: FILE: drivers/scsi/hpsa.c:881:
+		printk(KERN_WARNING "hpsa: cmd %p "

WARNING:SPLIT_STRING: quoted string split across lines
#961: FILE: drivers/scsi/hpsa.c:882:
+		printk(KERN_WARNING "hpsa: cmd %p "
+			"has SCSI Status = %x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#965: FILE: drivers/scsi/hpsa.c:886:
+			printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#967: FILE: drivers/scsi/hpsa.c:888:
+			"hpsa:SCSI status is abnormally zero.  "
+			"(probably indicates selection timeout "

WARNING:SPLIT_STRING: quoted string split across lines
#968: FILE: drivers/scsi/hpsa.c:889:
+			"(probably indicates selection timeout "
+			"reported incorrectly due to a known "

WARNING:SPLIT_STRING: quoted string split across lines
#969: FILE: drivers/scsi/hpsa.c:890:
+			"reported incorrectly due to a known "
+			"firmware bug, circa July, 2001.)\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#972: FILE: drivers/scsi/hpsa.c:893:
+			printk("UNDERRUN\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#975: FILE: drivers/scsi/hpsa.c:896:
+		printk(KERN_WARNING "hpsa: cp %p has"

WARNING:SPLIT_STRING: quoted string split across lines
#976: FILE: drivers/scsi/hpsa.c:897:
+		printk(KERN_WARNING "hpsa: cp %p has"
+			" completed with data overrun "

WARNING:SPLIT_STRING: quoted string split across lines
#977: FILE: drivers/scsi/hpsa.c:898:
+			" completed with data overrun "
+			"reported\n", cp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#982: FILE: drivers/scsi/hpsa.c:903:
+		printk(KERN_WARNING "hpsa: cp %p is "

WARNING:SPLIT_STRING: quoted string split across lines
#983: FILE: drivers/scsi/hpsa.c:904:
+		printk(KERN_WARNING "hpsa: cp %p is "
+			"reported invalid (probably means "

WARNING:SPLIT_STRING: quoted string split across lines
#984: FILE: drivers/scsi/hpsa.c:905:
+			"reported invalid (probably means "
+			"target device no longer present)\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#987: FILE: drivers/scsi/hpsa.c:908:
+		/* print_bytes((unsigned char *) cp, sizeof(*cp), 1, 0);
+		print_cmd(cp);  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#987: FILE: drivers/scsi/hpsa.c:908:
+		print_cmd(cp);  */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#991: FILE: drivers/scsi/hpsa.c:912:
+		printk(KERN_WARNING "hpsa: cp %p has "

WARNING:SPLIT_STRING: quoted string split across lines
#992: FILE: drivers/scsi/hpsa.c:913:
+		printk(KERN_WARNING "hpsa: cp %p has "
+			"protocol error \n", cp);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#992: FILE: drivers/scsi/hpsa.c:913:
+			"protocol error \n", cp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#996: FILE: drivers/scsi/hpsa.c:917:
+		printk(KERN_WARNING "hpsa: cp %p had "

WARNING:SPLIT_STRING: quoted string split across lines
#997: FILE: drivers/scsi/hpsa.c:918:
+		printk(KERN_WARNING "hpsa: cp %p had "
+			" hardware error\n", cp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1000: FILE: drivers/scsi/hpsa.c:921:
+		printk(KERN_WARNING "hpsa: cp %p had "

WARNING:SPLIT_STRING: quoted string split across lines
#1001: FILE: drivers/scsi/hpsa.c:922:
+		printk(KERN_WARNING "hpsa: cp %p had "
+			"connection lost\n", cp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1004: FILE: drivers/scsi/hpsa.c:925:
+		printk(KERN_WARNING "hpsa: cp %p was "

WARNING:SPLIT_STRING: quoted string split across lines
#1005: FILE: drivers/scsi/hpsa.c:926:
+		printk(KERN_WARNING "hpsa: cp %p was "
+			"aborted\n", cp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1008: FILE: drivers/scsi/hpsa.c:929:
+		printk(KERN_WARNING "hpsa: cp %p reports "

WARNING:SPLIT_STRING: quoted string split across lines
#1009: FILE: drivers/scsi/hpsa.c:930:
+		printk(KERN_WARNING "hpsa: cp %p reports "
+			"abort failed\n", cp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1012: FILE: drivers/scsi/hpsa.c:933:
+		printk(KERN_WARNING "hpsa: cp %p aborted "

WARNING:SPLIT_STRING: quoted string split across lines
#1013: FILE: drivers/scsi/hpsa.c:934:
+		printk(KERN_WARNING "hpsa: cp %p aborted "
+			"do to an unsolicited abort\n", cp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1016: FILE: drivers/scsi/hpsa.c:937:
+		printk(KERN_WARNING "hpsa: cp %p timedout\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1017: FILE: drivers/scsi/hpsa.c:938:
+		printk(KERN_WARNING "hpsa: cp %p timedout\n",
+			cp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1020: FILE: drivers/scsi/hpsa.c:941:
+		printk(KERN_WARNING "hpsa: cp %p returned "

WARNING:SPLIT_STRING: quoted string split across lines
#1021: FILE: drivers/scsi/hpsa.c:942:
+		printk(KERN_WARNING "hpsa: cp %p returned "
+			"unknown status %x\n", cp,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1027: FILE: drivers/scsi/hpsa.c:948:
+static int hpsa_scsi_do_inquiry(struct ctlr_info *c, unsigned char *scsi3addr,
+			unsigned char page, unsigned char *buf,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cp"
#1037: FILE: drivers/scsi/hpsa.c:958:
+	if (cp == NULL) {			/* trouble... */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1038: FILE: drivers/scsi/hpsa.c:959:
+		printk(KERN_WARNING "hpsa: cmd_special_alloc returned NULL!\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1051: FILE: drivers/scsi/hpsa.c:972:
+	rc = hpsa_scsi_do_simple_cmd(c, cp, scsi3addr, cdb,
+				6, buf, bufsize, XFER_READ);

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#1066: FILE: drivers/scsi/hpsa.c:987:
+static const char *raid_label[] = { "0", "4", "1(1+0)", "5", "5+1", "ADG",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1071: FILE: drivers/scsi/hpsa.c:992:
+static void hpsa_get_raid_level(struct ctlr_info *h,
+	unsigned char *scsi3addr, unsigned char *raid_level)

WARNING:RETURN_VOID: void function return statements are not generally useful
#1087: FILE: drivers/scsi/hpsa.c:1008:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1091: FILE: drivers/scsi/hpsa.c:1012:
+static int hpsa_get_device_id(struct ctlr_info *h, unsigned char *scsi3addr,
+	unsigned char *device_id, int buflen)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1109: FILE: drivers/scsi/hpsa.c:1030:
+static int hpsa_scsi_do_report_luns(struct ctlr_info *c, int logical,
+		struct ReportLUNdata_struct *buf, int bufsize,

CHECK:CAMELCASE: Avoid CamelCase: <ReportLUNdata_struct>
#1109: FILE: drivers/scsi/hpsa.c:1030:
+		struct ReportLUNdata_struct *buf, int bufsize,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cp"
#1119: FILE: drivers/scsi/hpsa.c:1040:
+	if (cp == NULL) {			/* trouble... */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1120: FILE: drivers/scsi/hpsa.c:1041:
+		printk(KERN_ERR "cmd_special_alloc returned NULL!\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1142: FILE: drivers/scsi/hpsa.c:1063:
+	rc = hpsa_scsi_do_simple_cmd(c, cp, scsi3addr,
+				cdb, 12,

CHECK:SPACING: No space is necessary after a cast
#1143: FILE: drivers/scsi/hpsa.c:1064:
+				(unsigned char *) buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1160: FILE: drivers/scsi/hpsa.c:1081:
+static inline int hpsa_scsi_do_report_phys_luns(struct ctlr_info *c,
+		struct ReportLUNdata_struct *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1167: FILE: drivers/scsi/hpsa.c:1088:
+static inline int hpsa_scsi_do_report_log_luns(struct ctlr_info *c,
+		struct ReportLUNdata_struct *buf, int bufsize)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1173: FILE: drivers/scsi/hpsa.c:1094:
+static int hpsa_update_device_info(struct ctlr_info *h,
+	unsigned char scsi3addr[], int bus, int target, int lun,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1186: FILE: drivers/scsi/hpsa.c:1107:
+	if (hpsa_scsi_do_inquiry(h, scsi3addr, 0, inq_buff,
+		(unsigned char) OBDR_TAPE_INQ_SIZE) != 0) {

CHECK:SPACING: No space is necessary after a cast
#1186: FILE: drivers/scsi/hpsa.c:1107:
+		(unsigned char) OBDR_TAPE_INQ_SIZE) != 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1188: FILE: drivers/scsi/hpsa.c:1109:
+		printk(KERN_ERR "hpsa_update_device_info: inquiry failed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hpsa_update_device_info', this function's name, in a string
#1188: FILE: drivers/scsi/hpsa.c:1109:
+		printk(KERN_ERR "hpsa_update_device_info: inquiry failed\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1203: FILE: drivers/scsi/hpsa.c:1124:
+	memcpy(this_device->vendor, &inq_buff[8],
+		sizeof(this_device->vendor));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1205: FILE: drivers/scsi/hpsa.c:1126:
+	memcpy(this_device->model, &inq_buff[16],
+		sizeof(this_device->model));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1207: FILE: drivers/scsi/hpsa.c:1128:
+	memcpy(this_device->revision, &inq_buff[32],
+		sizeof(this_device->revision));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1209: FILE: drivers/scsi/hpsa.c:1130:
+	memset(this_device->device_id, 0,
+		sizeof(this_device->device_id));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1211: FILE: drivers/scsi/hpsa.c:1132:
+	hpsa_get_device_id(h, scsi3addr, this_device->device_id,
+		sizeof(this_device->device_id));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1214: FILE: drivers/scsi/hpsa.c:1135:
+	if (this_device->devtype == TYPE_DISK &&
+		is_logical_dev_addr_mode(scsi3addr))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1230: FILE: drivers/scsi/hpsa.c:1151:
+	/* the idea here is we could get notified
+	   that some devices have changed, so we do a report

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1254: FILE: drivers/scsi/hpsa.c:1175:
+	currentsd = kmalloc(sizeof(*currentsd) * HPSA_MAX_SCSI_DEVS_PER_HBA,
+		GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1261: FILE: drivers/scsi/hpsa.c:1182:
+	if (!currentsd || !physdev_list || !logdev_list || !inq_buff ||
+		!lunzerobits) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1262: FILE: drivers/scsi/hpsa.c:1183:
+		printk(KERN_ERR "hpsa: out of memory\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1268: FILE: drivers/scsi/hpsa.c:1189:
+		printk(KERN_ERR  "hpsa: Report physical LUNs failed.\n");

CHECK:CAMELCASE: Avoid CamelCase: <LUNListLength>
#1271: FILE: drivers/scsi/hpsa.c:1192:
+	memcpy(&nphysicals, &physdev_list->LUNListLength[0],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1272: FILE: drivers/scsi/hpsa.c:1193:
+	memcpy(&nphysicals, &physdev_list->LUNListLength[0],
+		sizeof(nphysicals));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1275: FILE: drivers/scsi/hpsa.c:1196:
+	printk(KERN_INFO "hpsa: number of physical luns is %d\n", nphysicals);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1278: FILE: drivers/scsi/hpsa.c:1199:
+		printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#1280: FILE: drivers/scsi/hpsa.c:1201:
+			"hpsa: Maximum physical LUNs (%d) exceeded.  "
+			"%d LUNs ignored.\n", HPSA_MAX_PHYS_LUN,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1287: FILE: drivers/scsi/hpsa.c:1208:
+		printk(KERN_ERR "hpsa: Report logical LUNs failed.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1294: FILE: drivers/scsi/hpsa.c:1215:
+	printk(KERN_INFO "hpsa: number of logical luns is %d\n", nlogicals);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1299: FILE: drivers/scsi/hpsa.c:1220:
+		printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#1301: FILE: drivers/scsi/hpsa.c:1222:
+			"hpsa: Maximum logical LUNs (%d) exceeded.  "
+			"%d LUNs ignored.\n", HPSA_MAX_LUN,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1307: FILE: drivers/scsi/hpsa.c:1228:
+		printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#1309: FILE: drivers/scsi/hpsa.c:1230:
+			"hpsa: Maximum logical + physical LUNs (%d) exceeded. "
+			"%d LUNs ignored.\n", HPSA_MAX_PHYS_LUN,

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1327: FILE: drivers/scsi/hpsa.c:1248:
+					&logdev_list->LUN[i-nphysicals][0];
 					                   ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1334: FILE: drivers/scsi/hpsa.c:1255:
+			printk(KERN_INFO "hpsa: device found, LUN ID:"

WARNING:SPLIT_STRING: quoted string split across lines
#1335: FILE: drivers/scsi/hpsa.c:1256:
+			printk(KERN_INFO "hpsa: device found, LUN ID:"
+				" 0x%02x%02x%02x%02x%02x%02x%02x%02x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1374: FILE: drivers/scsi/hpsa.c:1295:
+		if (!bit_is_set(lunzerobits, target) &&
+			is_logical_dev_addr_mode(lunaddrbytes)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1375: FILE: drivers/scsi/hpsa.c:1296:
+			is_logical_dev_addr_mode(lunaddrbytes)) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1387: FILE: drivers/scsi/hpsa.c:1308:
+				hpsa_update_device_info(h, scsi3addr,
+					bus, target, 0, this_device);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1397: FILE: drivers/scsi/hpsa.c:1318:
+		if (hpsa_update_device_info(h, scsi3addr,
+			bus, target, lun, this_device) != 0)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1403: FILE: drivers/scsi/hpsa.c:1324:
+			{
+

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1420: FILE: drivers/scsi/hpsa.c:1341:
+			/* fall through . . . */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1427: FILE: drivers/scsi/hpsa.c:1348:
+			/* Fall through. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1432: FILE: drivers/scsi/hpsa.c:1353:
+				printk(KERN_INFO "hpsa%d: %s ignored, "

WARNING:SPLIT_STRING: quoted string split across lines
#1433: FILE: drivers/scsi/hpsa.c:1354:
+				printk(KERN_INFO "hpsa%d: %s ignored, "
+					"too many devices.\n", h->ctlr,

WARNING:RETURN_VOID: void function return statements are not generally useful
#1454: FILE: drivers/scsi/hpsa.c:1375:
+	return;
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#1459: FILE: drivers/scsi/hpsa.c:1380:
+	int verb_len = strlen(verb);
+	if (len >= verb_len && !memcmp(verb, ptr, verb_len))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1466: FILE: drivers/scsi/hpsa.c:1387:
+static int hpsa_scsi_user_command(struct ctlr_info *h, int hostno,
+	char *buffer, int length)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1479: FILE: drivers/scsi/hpsa.c:1400:
+static int hpsa_scsi_proc_info(struct Scsi_Host *sh,
+		char *buffer, /* data buffer */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1480: FILE: drivers/scsi/hpsa.c:1401:
+^I^Ichar **start, ^I   /* where data in buffer starts */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1482: FILE: drivers/scsi/hpsa.c:1403:
+^I^Iint length, ^I   /* length of data in buffer */$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1483: FILE: drivers/scsi/hpsa.c:1404:
+		int length, 	   /* length of data in buffer */
+		int func)	   /* 0 == read, 1 == write */

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1485: FILE: drivers/scsi/hpsa.c:1406:
+{
+

CHECK:SPACING: No space is necessary after a cast
#1490: FILE: drivers/scsi/hpsa.c:1411:
+	h = (struct ctlr_info *) sh->hostdata[0];

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!h"
#1491: FILE: drivers/scsi/hpsa.c:1412:
+	if (h == NULL)  /* This really shouldn't ever happen. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1495: FILE: drivers/scsi/hpsa.c:1416:
+		buflen = sprintf(buffer, "hpsa%d: SCSI host: %d\n",
+				h->ctlr, sh->host_no);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1500: FILE: drivers/scsi/hpsa.c:1421:
+			struct hpsa_scsi_dev_t *sd = &h->dev[i];
+			buflen += sprintf(&buffer[buflen], "c%db%dt%dl%d %02d "

WARNING:SPLIT_STRING: quoted string split across lines
#1501: FILE: drivers/scsi/hpsa.c:1422:
+			buflen += sprintf(&buffer[buflen], "c%db%dt%dl%d %02d "
+				"0x%02x%02x%02x%02x%02x%02x%02x%02x\n",

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1511: FILE: drivers/scsi/hpsa.c:1432:
+^I^Iif (datalen < 0) { ^I/* they're reading past EOF. */$

CHECK:BRACES: braces {} should be used on all arms of this statement
#1511: FILE: drivers/scsi/hpsa.c:1432:
+		if (datalen < 0) { 	/* they're reading past EOF. */
[...]
+		} else
[...]

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1513: FILE: drivers/scsi/hpsa.c:1434:
+			*start = buffer+buflen;
 			               ^

CHECK:BRACES: Unbalanced braces around else statement
#1514: FILE: drivers/scsi/hpsa.c:1435:
+		} else

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1517: FILE: drivers/scsi/hpsa.c:1438:
+^I} else ^I/* User is writing to /proc/scsi/hpsa*?/?*  ... */$

CHECK:BRACES: Unbalanced braces around else statement
#1517: FILE: drivers/scsi/hpsa.c:1438:
+	} else 	/* User is writing to /proc/scsi/hpsa*?/?*  ... */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1522: FILE: drivers/scsi/hpsa.c:1443:
+/* hpsa_scatter_gather takes a struct scsi_cmnd, (cmd), and does the pci
+   dma mapping  and fills in the scatter gather entries of the

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1523: FILE: drivers/scsi/hpsa.c:1444:
+   hpsa command, cp. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1526: FILE: drivers/scsi/hpsa.c:1447:
+static void hpsa_scatter_gather(struct pci_dev *pdev,
+		struct CommandList_struct *cp,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1534: FILE: drivers/scsi/hpsa.c:1455:
+	BUG_ON(scsi_sg_count(cmd) > MAXSGENTRIES);

CHECK:SPACING: No space is necessary after a cast
#1541: FILE: drivers/scsi/hpsa.c:1462:
+		addr64 = (__u64) sg_dma_address(sg);

CHECK:SPACING: No space is necessary after a cast
#1544: FILE: drivers/scsi/hpsa.c:1465:
+			(__u32) (addr64 & (__u64) 0x00000000FFFFFFFF);

CHECK:SPACING: No space is necessary after a cast
#1546: FILE: drivers/scsi/hpsa.c:1467:
+			(__u32) ((addr64 >> 32) & (__u64) 0x00000000FFFFFFFF);

CHECK:CAMELCASE: Avoid CamelCase: <Ext>
#1548: FILE: drivers/scsi/hpsa.c:1469:
+		cp->SG[i].Ext = 0;  /* we are not chaining */

CHECK:SPACING: No space is necessary after a cast
#1553: FILE: drivers/scsi/hpsa.c:1474:
+	cp->Header.SGList = (__u8) use_sg;   /* no. SGs contig in this cmd */

CHECK:SPACING: No space is necessary after a cast
#1554: FILE: drivers/scsi/hpsa.c:1475:
+	cp->Header.SGTotal = (__u16) use_sg; /* total sgs in this cmd list */

WARNING:RETURN_VOID: void function return statements are not generally useful
#1556: FILE: drivers/scsi/hpsa.c:1477:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1558: FILE: drivers/scsi/hpsa.c:1479:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1560: FILE: drivers/scsi/hpsa.c:1481:
+static int hpsa_scsi_queue_command(struct scsi_cmnd *cmd,
+	void (*done)(struct scsi_cmnd *))

CHECK:SPACING: No space is necessary after a cast
#1569: FILE: drivers/scsi/hpsa.c:1490:
+	h = (struct ctlr_info *) cmd->device->host->hostdata[0];

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1572: FILE: drivers/scsi/hpsa.c:1493:
+	rc = lookup_scsi3addr(h, cmd->device->channel, cmd->device->id,
+			cmd->device->lun, scsi3addr);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1579: FILE: drivers/scsi/hpsa.c:1500:
+		/* we might want to think about registering controller itself
+		   as a processor device on the bus so sg binds to it. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1579: FILE: drivers/scsi/hpsa.c:1500:
+		   as a processor device on the bus so sg binds to it. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1584: FILE: drivers/scsi/hpsa.c:1505:
+	/* Ok, we have a reasonable scsi nexus, so send the cmd down, and
+	   see what the device thinks of it. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1584: FILE: drivers/scsi/hpsa.c:1505:
+	   see what the device thinks of it. */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cp"
#1590: FILE: drivers/scsi/hpsa.c:1511:
+	if (cp == NULL) {			/* trouble... */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1591: FILE: drivers/scsi/hpsa.c:1512:
+		printk(KERN_ERR "hpsa: cmd_alloc returned NULL!\n");

CHECK:SPACING: No space is necessary after a cast
#1602: FILE: drivers/scsi/hpsa.c:1523:
+	cmd->host_scribble = (unsigned char *) cp;

CHECK:CAMELCASE: Avoid CamelCase: <LunAddrBytes>
#1607: FILE: drivers/scsi/hpsa.c:1528:
+	memcpy(&cp->Header.LUN.LunAddrBytes[0], &scsi3addr[0], 8);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1614: FILE: drivers/scsi/hpsa.c:1535:
+	BUG_ON(cmd->cmd_len > sizeof(cp->Request.CDB));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1647: FILE: drivers/scsi/hpsa.c:1568:
+		printk(KERN_ERR "hpsa: unknown data direction: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1648: FILE: drivers/scsi/hpsa.c:1569:
+		printk(KERN_ERR "hpsa: unknown data direction: %d\n",
+			cmd->sc_data_direction);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1649: FILE: drivers/scsi/hpsa.c:1570:
+		BUG();

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1685: FILE: drivers/scsi/hpsa.c:1606:
+		printk(KERN_ERR "hpsa: hpsa_register_scsi: failed"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hpsa_register_scsi', this function's name, in a string
#1685: FILE: drivers/scsi/hpsa.c:1606:
+		printk(KERN_ERR "hpsa: hpsa_register_scsi: failed"

WARNING:SPLIT_STRING: quoted string split across lines
#1686: FILE: drivers/scsi/hpsa.c:1607:
+		printk(KERN_ERR "hpsa: hpsa_register_scsi: failed"
+			" hpsa_scsi_detect(), rc is %d\n", rc);

CHECK:SPACING: No space is necessary after a cast
#1701: FILE: drivers/scsi/hpsa.c:1622:
+	h = (struct ctlr_info *) scsicmd->device->host->hostdata[0];

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!h"
#1702: FILE: drivers/scsi/hpsa.c:1623:
+	if (h == NULL) /* paranoia */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1704: FILE: drivers/scsi/hpsa.c:1625:
+	printk(KERN_WARNING "hpsa%d: resetting drive\n", h->ctlr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1707: FILE: drivers/scsi/hpsa.c:1628:
+	rc = lookup_scsi3addr(h, scsicmd->device->channel,
+		scsicmd->device->id, scsicmd->device->lun, scsi3addr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1709: FILE: drivers/scsi/hpsa.c:1630:
+		printk(KERN_ERR "hpsa_eh_device_reset_handler: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hpsa_eh_device_reset_handler', this function's name, in a string
#1709: FILE: drivers/scsi/hpsa.c:1630:
+		printk(KERN_ERR "hpsa_eh_device_reset_handler: "

WARNING:SPLIT_STRING: quoted string split across lines
#1710: FILE: drivers/scsi/hpsa.c:1631:
+		printk(KERN_ERR "hpsa_eh_device_reset_handler: "
+			"lookup_scsi3addr failed.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1722: FILE: drivers/scsi/hpsa.c:1643:
+	printk(KERN_WARNING "hpsa%d: resetting device failed.\n", h->ctlr);

CHECK:CAMELCASE: Avoid CamelCase: <maxQsinceinit>
#1753: FILE: drivers/scsi/hpsa.c:1674:
+		h->maxQsinceinit, h->max_outstanding, h->maxSG);

CHECK:CAMELCASE: Avoid CamelCase: <maxSG>
#1753: FILE: drivers/scsi/hpsa.c:1674:
+		h->maxQsinceinit, h->max_outstanding, h->maxSG);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1775: FILE: drivers/scsi/hpsa.c:1696:
+	if (dev->devtype == TYPE_DISK &&
+		!is_logical_dev_addr_mode(dev->scsi3addr))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1777: FILE: drivers/scsi/hpsa.c:1698:
+		seq_printf(seq, "c%db%dt%dl%d:\tRAID %s\n",
+			h->scsi_host->host_no, dev->bus, dev->target,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1781: FILE: drivers/scsi/hpsa.c:1702:
+		seq_printf(seq, "c%db%dt%dl%d:\t%s\n",
+			h->scsi_host->host_no, dev->bus, dev->target, dev->lun,

WARNING:RETURN_VOID: void function return statements are not generally useful
#1799: FILE: drivers/scsi/hpsa.c:1720:
+	return;
+}

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1827: FILE: drivers/scsi/hpsa.c:1748:
+ * Create /proc/hpsa if it doesn't exist yet.  */

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1828: FILE: drivers/scsi/hpsa.c:1749:
+static void __devinit hpsa_procinit(struct ctlr_info *h)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!proc_hpsa"
#1832: FILE: drivers/scsi/hpsa.c:1753:
+	if (proc_hpsa == NULL)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IRGRP | S_IROTH' are not preferred. Consider using octal permissions '0444'.
#1836: FILE: drivers/scsi/hpsa.c:1757:
+	pde = proc_create_data(h->devname, S_IRUSR | S_IRGRP | S_IROTH,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1837: FILE: drivers/scsi/hpsa.c:1758:
+	pde = proc_create_data(h->devname, S_IRUSR | S_IRGRP | S_IROTH,
+				     proc_hpsa, &hpsa_proc_fops, h);

CHECK:SPACING: No space is necessary after a cast
#1874: FILE: drivers/scsi/hpsa.c:1795:
+	c->busaddr = (__u32) cmd_dma_handle;

CHECK:SPACING: No space is necessary after a cast
#1875: FILE: drivers/scsi/hpsa.c:1796:
+	temp64.val = (__u64) err_dma_handle;

CHECK:CAMELCASE: Avoid CamelCase: <ErrDesc>
#1876: FILE: drivers/scsi/hpsa.c:1797:
+	c->ErrDesc.Addr.lower = temp64.val32.lower;

CHECK:SPACING: No space is necessary after a cast
#1894: FILE: drivers/scsi/hpsa.c:1815:
+	c = (struct CommandList_struct *) pci_alloc_consistent(h->pdev,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c"
#1896: FILE: drivers/scsi/hpsa.c:1817:
+	if (c == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1904: FILE: drivers/scsi/hpsa.c:1825:
+	    pci_alloc_consistent(h->pdev, sizeof(struct ErrorInfo_struct),
+		    &err_dma_handle);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c->err_info"
#1906: FILE: drivers/scsi/hpsa.c:1827:
+	if (c->err_info == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1908: FILE: drivers/scsi/hpsa.c:1829:
+		pci_free_consistent(h->pdev,
+			sizeof(struct CommandList_struct), c, cmd_dma_handle);

CHECK:SPACING: No space is necessary after a cast
#1914: FILE: drivers/scsi/hpsa.c:1835:
+	c->busaddr = (__u32) cmd_dma_handle;

CHECK:SPACING: No space is necessary after a cast
#1915: FILE: drivers/scsi/hpsa.c:1836:
+	temp64.val = (__u64) err_dma_handle;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1924: FILE: drivers/scsi/hpsa.c:1845:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1929: FILE: drivers/scsi/hpsa.c:1850:
+	int i;
+	i = c - h->cmd_pool;

CHECK:SPACING: No space is necessary after a cast
#1943: FILE: drivers/scsi/hpsa.c:1864:
+			    c->err_info, (dma_addr_t) temp64.val);

CHECK:SPACING: No space is necessary after a cast
#1945: FILE: drivers/scsi/hpsa.c:1866:
+			    c, (dma_addr_t) c->busaddr);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1953: FILE: drivers/scsi/hpsa.c:1874:
+	int ret;
+	lock_kernel();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1961: FILE: drivers/scsi/hpsa.c:1882:
+static int hpsa_ioctl32_big_passthru(struct scsi_device *dev,
+	int cmd, void *arg);

CHECK:CAMELCASE: Avoid CamelCase: <IOCTL32_Command_struct>
#1995: FILE: drivers/scsi/hpsa.c:1916:
+	IOCTL32_Command_struct __user *arg32 =

CHECK:SPACING: No space is necessary after a cast
#1996: FILE: drivers/scsi/hpsa.c:1917:
+	    (IOCTL32_Command_struct __user *) arg;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2028: FILE: drivers/scsi/hpsa.c:1949:
+static int hpsa_ioctl32_big_passthru(struct scsi_device *dev,
+	int cmd, void *arg)

CHECK:CAMELCASE: Avoid CamelCase: <BIG_IOCTL32_Command_struct>
#2030: FILE: drivers/scsi/hpsa.c:1951:
+	BIG_IOCTL32_Command_struct __user *arg32 =

CHECK:SPACING: No space is necessary after a cast
#2031: FILE: drivers/scsi/hpsa.c:1952:
+	    (BIG_IOCTL32_Command_struct __user *) arg;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2070: FILE: drivers/scsi/hpsa.c:1991:
+{
+

CHECK:SPACING: No space is necessary after a cast
#2074: FILE: drivers/scsi/hpsa.c:1995:
+	h = (struct ctlr_info *) dev->host->hostdata[0];

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!h"
#2075: FILE: drivers/scsi/hpsa.c:1996:
+	if (h == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2076: FILE: drivers/scsi/hpsa.c:1997:
+		printk(KERN_INFO "hpsa_ioctl hostdata is NULL for "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hpsa_ioctl', this function's name, in a string
#2076: FILE: drivers/scsi/hpsa.c:1997:
+		printk(KERN_INFO "hpsa_ioctl hostdata is NULL for "

WARNING:SPLIT_STRING: quoted string split across lines
#2077: FILE: drivers/scsi/hpsa.c:1998:
+		printk(KERN_INFO "hpsa_ioctl hostdata is NULL for "
+			"host %d.\n", dev->host->host_no);

CHECK:CAMELCASE: Avoid CamelCase: <DriverVer_type>
#2102: FILE: drivers/scsi/hpsa.c:2023:
+			DriverVer_type DriverVer = DRIVER_VERSION;

CHECK:CAMELCASE: Avoid CamelCase: <DriverVer>
#2102: FILE: drivers/scsi/hpsa.c:2023:
+			DriverVer_type DriverVer = DRIVER_VERSION;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2108: FILE: drivers/scsi/hpsa.c:2029:
+			if (copy_to_user(argp, &DriverVer,
+				sizeof(DriverVer_type)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iocommand.buf_size < 1'
#2130: FILE: drivers/scsi/hpsa.c:2051:
+			if ((iocommand.buf_size < 1) &&
+			    (iocommand.Request.Type.Direction != XFER_NONE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iocommand.Request.Type.Direction != XFER_NONE'
#2130: FILE: drivers/scsi/hpsa.c:2051:
+			if ((iocommand.buf_size < 1) &&
+			    (iocommand.Request.Type.Direction != XFER_NONE)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buff"
#2136: FILE: drivers/scsi/hpsa.c:2057:
+				if (buff == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c"
#2150: FILE: drivers/scsi/hpsa.c:2071:
+			if (c == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2166: FILE: drivers/scsi/hpsa.c:2087:
+			memcpy(&c->Header.LUN, &iocommand.LUN_info,
+				sizeof(c->Header.LUN));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2172: FILE: drivers/scsi/hpsa.c:2093:
+			memcpy(&c->Request, &iocommand.Request,
+				sizeof(c->Request));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2177: FILE: drivers/scsi/hpsa.c:2098:
+				temp64.val = pci_map_single(h->pdev, buff,
+					iocommand.buf_size,

CHECK:SPACING: No space is necessary after a cast
#2198: FILE: drivers/scsi/hpsa.c:2119:
+			pci_unmap_single(h->pdev, (dma_addr_t) temp64.val,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2204: FILE: drivers/scsi/hpsa.c:2125:
+			memcpy(&iocommand.error_info, c->err_info,
+				sizeof(iocommand.error_info));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ioc->buf_size < 1'
#2254: FILE: drivers/scsi/hpsa.c:2175:
+			if ((ioc->buf_size < 1) &&
+			    (ioc->Request.Type.Direction != XFER_NONE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ioc->Request.Type.Direction != XFER_NONE'
#2254: FILE: drivers/scsi/hpsa.c:2175:
+			if ((ioc->buf_size < 1) &&
+			    (ioc->Request.Type.Direction != XFER_NONE)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2275: FILE: drivers/scsi/hpsa.c:2196:
+			buff_size = kmalloc(MAXSGENTRIES * sizeof(int),
+						   GFP_KERNEL);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'ioc->malloc_size'
#2285: FILE: drivers/scsi/hpsa.c:2206:
+				      ioc->malloc_size) ? ioc->
+				    malloc_size : left;

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buff[sg_used]"
#2288: FILE: drivers/scsi/hpsa.c:2209:
+				if (buff[sg_used] == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c"
#2306: FILE: drivers/scsi/hpsa.c:2227:
+			if (c == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2321: FILE: drivers/scsi/hpsa.c:2242:
+			memcpy(&c->Header.LUN, &ioc->LUN_info,
+				sizeof(c->Header.LUN));

WARNING:LINE_SPACING: Missing a blank line after declarations
#2327: FILE: drivers/scsi/hpsa.c:2248:
+				int i;
+				for (i = 0; i < sg_used; i++) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2330: FILE: drivers/scsi/hpsa.c:2251:
+					    pci_map_single(h->pdev, buff[i],
+						    buff_size[i],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2354: FILE: drivers/scsi/hpsa.c:2275:
+				pci_unmap_single(h->pdev,
+					(dma_addr_t) temp64.val, buff_size[i],

CHECK:SPACING: No space is necessary after a cast
#2354: FILE: drivers/scsi/hpsa.c:2275:
+					(dma_addr_t) temp64.val, buff_size[i],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2359: FILE: drivers/scsi/hpsa.c:2280:
+			memcpy(&ioc->error_info, c->err_info,
+				sizeof(ioc->error_info));

WARNING:LINE_SPACING: Missing a blank line after declarations
#2368: FILE: drivers/scsi/hpsa.c:2289:
+				BYTE __user *ptr = ioc->buf;
+				for (i = 0; i < sg_used; i++) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2396: FILE: drivers/scsi/hpsa.c:2317:
+static int fill_cmd(struct CommandList_struct *c, __u8 cmd, struct ctlr_info *h,
+	void *buff, size_t size, __u8 page_code, unsigned char *scsi3addr,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "buff"
#2404: FILE: drivers/scsi/hpsa.c:2325:
+	if (buff != NULL && size > 0) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2433: FILE: drivers/scsi/hpsa.c:2354:
+			/* Talking to controller so It's a physical command
+			   mode = 00 target = 0.  Nothing to write.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2462: FILE: drivers/scsi/hpsa.c:2383:
+			printk(KERN_WARNING

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2468: FILE: drivers/scsi/hpsa.c:2389:
+		switch (cmd) {
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2486: FILE: drivers/scsi/hpsa.c:2407:
+			printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2492: FILE: drivers/scsi/hpsa.c:2413:
+		printk(KERN_WARNING

CHECK:SPACING: No space is necessary after a cast
#2499: FILE: drivers/scsi/hpsa.c:2420:
+			(__u64) pci_map_single(h->pdev, buff, size,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2509: FILE: drivers/scsi/hpsa.c:2430:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2530: FILE: drivers/scsi/hpsa.c:2451:
+	printk(KERN_WARNING "hpsa: pollcomplete(): returning 1\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pollcomplete', this function's name, in a string
#2530: FILE: drivers/scsi/hpsa.c:2451:
+	printk(KERN_WARNING "hpsa: pollcomplete(): returning 1\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2535: FILE: drivers/scsi/hpsa.c:2456:
+static int add_sendcmd_reject(__u8 cmd, struct ctlr_info *h,
+	unsigned long complete)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2538: FILE: drivers/scsi/hpsa.c:2459:
+	/* We get in here if sendcmd() is polling for completions
+	   and gets some command back that it wasn't expecting --

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2555: FILE: drivers/scsi/hpsa.c:2476:
+	if (cmd != HPSA_DEVICE_RESET_MSG &&
+		cmd != HPSA_REPORT_PHYS &&

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2558: FILE: drivers/scsi/hpsa.c:2479:
+		printk(KERN_WARNING "hpsa hpsa%d: SendCmd "

WARNING:SPLIT_STRING: quoted string split across lines
#2559: FILE: drivers/scsi/hpsa.c:2480:
+		printk(KERN_WARNING "hpsa hpsa%d: SendCmd "
+		       "Invalid command type, invalid list "

WARNING:SPLIT_STRING: quoted string split across lines
#2560: FILE: drivers/scsi/hpsa.c:2481:
+		       "Invalid command type, invalid list "
+			"address returned! (%lx)\n", h->ctlr, complete);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2566: FILE: drivers/scsi/hpsa.c:2487:
+	/* We've sent down an abort or reset, but something else
+	   has completed */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2566: FILE: drivers/scsi/hpsa.c:2487:
+	   has completed */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2569: FILE: drivers/scsi/hpsa.c:2490:
+		printk(KERN_WARNING "hpsa%d: Sendcmd: Invalid command addr, "

WARNING:SPLIT_STRING: quoted string split across lines
#2570: FILE: drivers/scsi/hpsa.c:2491:
+		printk(KERN_WARNING "hpsa%d: Sendcmd: Invalid command addr, "
+		       "reject list overflow, command lost!\n", h->ctlr);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c"
#2593: FILE: drivers/scsi/hpsa.c:2514:
+	if (c == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2594: FILE: drivers/scsi/hpsa.c:2515:
+		printk(KERN_WARNING "hpsa: unable to get memory");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2598: FILE: drivers/scsi/hpsa.c:2519:
+	status = fill_cmd(c, cmd, h, buff, size, page_code,
+		scsi3addr, cmd_type);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#2617: FILE: drivers/scsi/hpsa.c:2538:
+		udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2618: FILE: drivers/scsi/hpsa.c:2539:
+		printk(KERN_WARNING "hpsa hpsa%d: SendCmd FIFO full,"

WARNING:SPLIT_STRING: quoted string split across lines
#2619: FILE: drivers/scsi/hpsa.c:2540:
+		printk(KERN_WARNING "hpsa hpsa%d: SendCmd FIFO full,"
+		       " waiting!\n", h->ctlr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2630: FILE: drivers/scsi/hpsa.c:2551:
+			printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#2632: FILE: drivers/scsi/hpsa.c:2553:
+			       "hpsa hpsa%d: SendCmd Timeout out, "
+			       "No command list address returned!\n", h->ctlr);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2640: FILE: drivers/scsi/hpsa.c:2561:
+		if ((complete & HPSA_ERROR_BIT)
+		    && (complete & ~HPSA_ERROR_BIT) == c->busaddr) {

WARNING:TYPO_SPELLING: 'underun' may be misspelled - perhaps 'underrun'?
#2641: FILE: drivers/scsi/hpsa.c:2562:
+			/* if data overrun or underun on Report command
 			                      ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2642: FILE: drivers/scsi/hpsa.c:2563:
+			/* if data overrun or underun on Report command
+			   ignore it

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->Request.CDB[0] == HPSA_REPORT_LOG'
#2644: FILE: drivers/scsi/hpsa.c:2565:
+			if (((c->Request.CDB[0] == HPSA_REPORT_LOG) ||
+			     (c->Request.CDB[0] == HPSA_REPORT_PHYS) ||
+			     (c->Request.CDB[0] == HPSA_INQUIRY)) &&
+			    ((c->err_info->CommandStatus ==
+			      CMD_DATA_OVERRUN) ||
+			     (c->err_info->CommandStatus == CMD_DATA_UNDERRUN)
+			    )) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->Request.CDB[0] == HPSA_REPORT_PHYS'
#2644: FILE: drivers/scsi/hpsa.c:2565:
+			if (((c->Request.CDB[0] == HPSA_REPORT_LOG) ||
+			     (c->Request.CDB[0] == HPSA_REPORT_PHYS) ||
+			     (c->Request.CDB[0] == HPSA_INQUIRY)) &&
+			    ((c->err_info->CommandStatus ==
+			      CMD_DATA_OVERRUN) ||
+			     (c->err_info->CommandStatus == CMD_DATA_UNDERRUN)
+			    )) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->Request.CDB[0] == HPSA_INQUIRY'
#2644: FILE: drivers/scsi/hpsa.c:2565:
+			if (((c->Request.CDB[0] == HPSA_REPORT_LOG) ||
+			     (c->Request.CDB[0] == HPSA_REPORT_PHYS) ||
+			     (c->Request.CDB[0] == HPSA_INQUIRY)) &&
+			    ((c->err_info->CommandStatus ==
+			      CMD_DATA_OVERRUN) ||
+			     (c->err_info->CommandStatus == CMD_DATA_UNDERRUN)
+			    )) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->err_info->CommandStatus ==
 			      CMD_DATA_OVERRUN'
#2644: FILE: drivers/scsi/hpsa.c:2565:
+			if (((c->Request.CDB[0] == HPSA_REPORT_LOG) ||
+			     (c->Request.CDB[0] == HPSA_REPORT_PHYS) ||
+			     (c->Request.CDB[0] == HPSA_INQUIRY)) &&
+			    ((c->err_info->CommandStatus ==
+			      CMD_DATA_OVERRUN) ||
+			     (c->err_info->CommandStatus == CMD_DATA_UNDERRUN)
+			    )) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->err_info->CommandStatus == CMD_DATA_UNDERRUN'
#2644: FILE: drivers/scsi/hpsa.c:2565:
+			if (((c->Request.CDB[0] == HPSA_REPORT_LOG) ||
+			     (c->Request.CDB[0] == HPSA_REPORT_PHYS) ||
+			     (c->Request.CDB[0] == HPSA_INQUIRY)) &&
+			    ((c->err_info->CommandStatus ==
+			      CMD_DATA_OVERRUN) ||
+			     (c->err_info->CommandStatus == CMD_DATA_UNDERRUN)
+			    )) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2655: FILE: drivers/scsi/hpsa.c:2576:
+					printk(KERN_WARNING "hpsa%d: "

WARNING:SPLIT_STRING: quoted string split across lines
#2656: FILE: drivers/scsi/hpsa.c:2577:
+					printk(KERN_WARNING "hpsa%d: "
+					       "unsolicited abort %p\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2659: FILE: drivers/scsi/hpsa.c:2580:
+						printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2669: FILE: drivers/scsi/hpsa.c:2590:
+						printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#2671: FILE: drivers/scsi/hpsa.c:2592:
+							"hpsa%d: retried %p "
+							"too many times\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2678: FILE: drivers/scsi/hpsa.c:2599:
+					printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#2680: FILE: drivers/scsi/hpsa.c:2601:
+					       "hpsa%d: command could not "
+						"be aborted.\n", h->ctlr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2684: FILE: drivers/scsi/hpsa.c:2605:
+				printk(KERN_WARNING "hpsa%d: sendcmd"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sendcmd', this function's name, in a string
#2684: FILE: drivers/scsi/hpsa.c:2605:
+				printk(KERN_WARNING "hpsa%d: sendcmd"

WARNING:SPLIT_STRING: quoted string split across lines
#2685: FILE: drivers/scsi/hpsa.c:2606:
+				printk(KERN_WARNING "hpsa%d: sendcmd"
+				       " Error %x \n", h->ctlr,

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2685: FILE: drivers/scsi/hpsa.c:2606:
+				       " Error %x \n", h->ctlr,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2687: FILE: drivers/scsi/hpsa.c:2608:
+				printk(KERN_WARNING "hpsa%d: sendcmd"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sendcmd', this function's name, in a string
#2687: FILE: drivers/scsi/hpsa.c:2608:
+				printk(KERN_WARNING "hpsa%d: sendcmd"

WARNING:SPLIT_STRING: quoted string split across lines
#2688: FILE: drivers/scsi/hpsa.c:2609:
+				printk(KERN_WARNING "hpsa%d: sendcmd"
+				       " offensive info\n"

CHECK:CAMELCASE: Avoid CamelCase: <MoreErrInfo>
#2691: FILE: drivers/scsi/hpsa.c:2612:
+				       c->err_info->MoreErrInfo.Invalid_Cmd.

CHECK:CAMELCASE: Avoid CamelCase: <Invalid_Cmd>
#2691: FILE: drivers/scsi/hpsa.c:2612:
+				       c->err_info->MoreErrInfo.Invalid_Cmd.

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'c->err_info->MoreErrInfo.Invalid_Cmd.offense_size'
#2692: FILE: drivers/scsi/hpsa.c:2613:
+				       c->err_info->MoreErrInfo.Invalid_Cmd.
+				       offense_size,

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'c->err_info->MoreErrInfo.Invalid_Cmd.offense_num'
#2694: FILE: drivers/scsi/hpsa.c:2615:
+				       c->err_info->MoreErrInfo.Invalid_Cmd.
+				       offense_num,

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'c->err_info->MoreErrInfo.Invalid_Cmd.offense_value'
#2696: FILE: drivers/scsi/hpsa.c:2617:
+				       c->err_info->MoreErrInfo.Invalid_Cmd.
+				       offense_value);

CHECK:BRACES: braces {} should be used on all arms of this statement
#2702: FILE: drivers/scsi/hpsa.c:2623:
+		if (complete != c->busaddr) {
[...]
+		} else
[...]

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2704: FILE: drivers/scsi/hpsa.c:2625:
+				BUG();	/* pretty much hosed if we get here. */

CHECK:BRACES: Unbalanced braces around else statement
#2706: FILE: drivers/scsi/hpsa.c:2627:
+		} else

CHECK:SPACING: No space is necessary after a cast
#2714: FILE: drivers/scsi/hpsa.c:2635:
+	pci_unmap_single(h->pdev, (dma_addr_t) buff_dma_handle.val,

CHECK:SPACING: No space is necessary after a cast
#2728: FILE: drivers/scsi/hpsa.c:2649:
+	ulong page_base = ((ulong) base) & PAGE_MASK;

CHECK:SPACING: No space is necessary after a cast
#2729: FILE: drivers/scsi/hpsa.c:2650:
+	ulong page_offs = ((ulong) base) - page_base;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2747: FILE: drivers/scsi/hpsa.c:2668:
+			printk(KERN_WARNING "hpsa: fifo full\n");

CHECK:CAMELCASE: Avoid CamelCase: <cmpQ>
#2759: FILE: drivers/scsi/hpsa.c:2680:
+		addQ(&h->cmpQ, c);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2767: FILE: drivers/scsi/hpsa.c:2688:
+static inline void resend_hpsa_cmd(struct ctlr_info *h,
+	struct CommandList_struct *c)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around h->reqQ
#2773: FILE: drivers/scsi/hpsa.c:2694:
+	addQ(&(h->reqQ), c);

CHECK:BRACES: braces {} should be used on all arms of this statement
#2784: FILE: drivers/scsi/hpsa.c:2705:
+	if (h->scsi_rejects.ncompletions == 0)
[...]
+	else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#2786: FILE: drivers/scsi/hpsa.c:2707:
+		return h->access.command_completed(h);
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#2786: FILE: drivers/scsi/hpsa.c:2707:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#2789: FILE: drivers/scsi/hpsa.c:2710:
+		int n;
+		srl = &h->scsi_rejects;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2798: FILE: drivers/scsi/hpsa.c:2719:
+	return (h->access.intr_pending(h)
+		|| (h->scsi_rejects.ncompletions > 0));

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2805: FILE: drivers/scsi/hpsa.c:2726:
+		 (h->interrupts_enabled == 0))
+		&& (h->scsi_rejects.ncompletions == 0));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2828: FILE: drivers/scsi/hpsa.c:2749:
+					printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#2830: FILE: drivers/scsi/hpsa.c:2751:
+					       "hpsa: controller hpsa%d "
+						"failed, stopping.\n",

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2868: FILE: drivers/scsi/hpsa.c:2789:
+static __devinit int hpsa_message(struct pci_dev *pdev, unsigned char opcode,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2869: FILE: drivers/scsi/hpsa.c:2790:
+static __devinit int hpsa_message(struct pci_dev *pdev, unsigned char opcode,
+						unsigned char type)

CHECK:CAMELCASE: Avoid CamelCase: <Command>
#2871: FILE: drivers/scsi/hpsa.c:2792:
+	struct Command {

CHECK:CAMELCASE: Avoid CamelCase: <CommandListHeader_struct>
#2872: FILE: drivers/scsi/hpsa.c:2793:
+		struct CommandListHeader_struct CommandHeader;

CHECK:CAMELCASE: Avoid CamelCase: <CommandHeader>
#2872: FILE: drivers/scsi/hpsa.c:2793:
+		struct CommandListHeader_struct CommandHeader;

CHECK:CAMELCASE: Avoid CamelCase: <RequestBlock_struct>
#2873: FILE: drivers/scsi/hpsa.c:2794:
+		struct RequestBlock_struct Request;

CHECK:CAMELCASE: Avoid CamelCase: <ErrDescriptor_struct>
#2874: FILE: drivers/scsi/hpsa.c:2795:
+		struct ErrDescriptor_struct ErrorDescriptor;

CHECK:CAMELCASE: Avoid CamelCase: <ErrorDescriptor>
#2874: FILE: drivers/scsi/hpsa.c:2795:
+		struct ErrDescriptor_struct ErrorDescriptor;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2880: FILE: drivers/scsi/hpsa.c:2801:
+	uint32_t paddr32, tag;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2885: FILE: drivers/scsi/hpsa.c:2806:
+	vaddr = ioremap_nocache(pci_resource_start(pdev, 0),
+					pci_resource_len(pdev, 0));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vaddr"
#2886: FILE: drivers/scsi/hpsa.c:2807:
+	if (vaddr == NULL)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2890: FILE: drivers/scsi/hpsa.c:2811:
+	/* The Inbound Post Queue only accepts 32-bit physical addresses for the
+	   CCISS commands, so they must be allocated from the lower 4GiB of

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2891: FILE: drivers/scsi/hpsa.c:2812:
+	   memory. */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cmd"
#2899: FILE: drivers/scsi/hpsa.c:2820:
+	if (cmd == NULL) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2905: FILE: drivers/scsi/hpsa.c:2826:
+	/* This must fit, because of the 32-bit consistent DMA mask.  Also,
+	   although there's no guarantee, we assume that the address is at

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2906: FILE: drivers/scsi/hpsa.c:2827:
+	   least 4-byte aligned (most likely, it's page-aligned). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2940: FILE: drivers/scsi/hpsa.c:2861:
+	/* we leak the DMA buffer here ... no choice since the controller could
+	   still complete the command. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2940: FILE: drivers/scsi/hpsa.c:2861:
+	   still complete the command. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2942: FILE: drivers/scsi/hpsa.c:2863:
+		printk(KERN_ERR "hpsa: controller message %02x:%02x timed out\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2943: FILE: drivers/scsi/hpsa.c:2864:
+		printk(KERN_ERR "hpsa: controller message %02x:%02x timed out\n",
+			opcode, type);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2950: FILE: drivers/scsi/hpsa.c:2871:
+		printk(KERN_ERR "hpsa: controller message %02x:%02x failed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2951: FILE: drivers/scsi/hpsa.c:2872:
+		printk(KERN_ERR "hpsa: controller message %02x:%02x failed\n",
+			opcode, type);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2955: FILE: drivers/scsi/hpsa.c:2876:
+	printk(KERN_INFO "hpsa: controller message %02x:%02x succeeded\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2956: FILE: drivers/scsi/hpsa.c:2877:
+	printk(KERN_INFO "hpsa: controller message %02x:%02x succeeded\n",
+		opcode, type);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2963: FILE: drivers/scsi/hpsa.c:2884:
+static __devinit int hpsa_reset_msi(struct pci_dev *pdev)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#2966: FILE: drivers/scsi/hpsa.c:2887:
+#define msi_control_reg(base)		(base + PCI_MSI_FLAGS)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2967: FILE: drivers/scsi/hpsa.c:2888:
+#define PCI_MSIX_FLAGS_ENABLE		(1 << 15)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2976: FILE: drivers/scsi/hpsa.c:2897:
+			printk(KERN_INFO "hpsa: resetting MSI\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2978: FILE: drivers/scsi/hpsa.c:2899:
+			pci_write_config_word(pdev, msi_control_reg(pos),
+					control & ~PCI_MSI_FLAGS_ENABLE);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2986: FILE: drivers/scsi/hpsa.c:2907:
+			printk(KERN_INFO "hpsa: resetting MSI-X\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2988: FILE: drivers/scsi/hpsa.c:2909:
+			pci_write_config_word(pdev, msi_control_reg(pos),
+					control & ~PCI_MSIX_FLAGS_ENABLE);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2996: FILE: drivers/scsi/hpsa.c:2917:
+ * states. */

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2997: FILE: drivers/scsi/hpsa.c:2918:
+static __devinit int hpsa_hard_reset_controller(struct pci_dev *pdev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3002: FILE: drivers/scsi/hpsa.c:2923:
+	printk(KERN_INFO "hpsa: using PCI PM to reset controller\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3005: FILE: drivers/scsi/hpsa.c:2926:
+	/* This is very nearly the same thing as
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3017: FILE: drivers/scsi/hpsa.c:2938:
+	   comment below).  So we roll our own .... */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3020: FILE: drivers/scsi/hpsa.c:2941:
+		pci_read_config_word(pdev, 2*i, &saved_config_space[i]);
 		                            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3024: FILE: drivers/scsi/hpsa.c:2945:
+		printk(KERN_ERR "hpsa_reset_controller: PCI PM not supported\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3034: FILE: drivers/scsi/hpsa.c:2955:
+	 * controller." */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3058: FILE: drivers/scsi/hpsa.c:2979:
+	 * 16-bits at offset 06h."  Note that the offset is 2*i. */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3062: FILE: drivers/scsi/hpsa.c:2983:
+		pci_write_config_word(pdev, 2*i, saved_config_space[i]);
 		                             ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#3064: FILE: drivers/scsi/hpsa.c:2985:
+	wmb();

CHECK:CAMELCASE: Avoid CamelCase: <CfgTable_struct>
#3076: FILE: drivers/scsi/hpsa.c:2997:
+static void print_cfg_table(struct CfgTable_struct *tb)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3081: FILE: drivers/scsi/hpsa.c:3002:
+	printk(KERN_INFO "Controller Configuration information\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3082: FILE: drivers/scsi/hpsa.c:3003:
+	printk(KERN_INFO "------------------------------------\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tb->Signature[i]
#3084: FILE: drivers/scsi/hpsa.c:3005:
+		temp_name[i] = readb(&(tb->Signature[i]));

CHECK:CAMELCASE: Avoid CamelCase: <Signature>
#3084: FILE: drivers/scsi/hpsa.c:3005:
+		temp_name[i] = readb(&(tb->Signature[i]));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3086: FILE: drivers/scsi/hpsa.c:3007:
+	printk(KERN_INFO "   Signature = %s\n", temp_name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3087: FILE: drivers/scsi/hpsa.c:3008:
+	printk(KERN_INFO "   Spec Number = %d\n", readl(&(tb->SpecValence)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tb->SpecValence
#3087: FILE: drivers/scsi/hpsa.c:3008:
+	printk(KERN_INFO "   Spec Number = %d\n", readl(&(tb->SpecValence)));

CHECK:CAMELCASE: Avoid CamelCase: <SpecValence>
#3087: FILE: drivers/scsi/hpsa.c:3008:
+	printk(KERN_INFO "   Spec Number = %d\n", readl(&(tb->SpecValence)));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3088: FILE: drivers/scsi/hpsa.c:3009:
+	printk(KERN_INFO "   Transport methods supported = 0x%x\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tb->TransportSupport
#3089: FILE: drivers/scsi/hpsa.c:3010:
+	       readl(&(tb->TransportSupport)));

CHECK:CAMELCASE: Avoid CamelCase: <TransportSupport>
#3089: FILE: drivers/scsi/hpsa.c:3010:
+	       readl(&(tb->TransportSupport)));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3090: FILE: drivers/scsi/hpsa.c:3011:
+	printk(KERN_INFO "   Transport methods active = 0x%x\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tb->TransportActive
#3091: FILE: drivers/scsi/hpsa.c:3012:
+	       readl(&(tb->TransportActive)));

CHECK:CAMELCASE: Avoid CamelCase: <TransportActive>
#3091: FILE: drivers/scsi/hpsa.c:3012:
+	       readl(&(tb->TransportActive)));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3092: FILE: drivers/scsi/hpsa.c:3013:
+	printk(KERN_INFO "   Requested transport Method = 0x%x\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tb->HostWrite.TransportRequest
#3093: FILE: drivers/scsi/hpsa.c:3014:
+	       readl(&(tb->HostWrite.TransportRequest)));

CHECK:CAMELCASE: Avoid CamelCase: <HostWrite>
#3093: FILE: drivers/scsi/hpsa.c:3014:
+	       readl(&(tb->HostWrite.TransportRequest)));

CHECK:CAMELCASE: Avoid CamelCase: <TransportRequest>
#3093: FILE: drivers/scsi/hpsa.c:3014:
+	       readl(&(tb->HostWrite.TransportRequest)));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3094: FILE: drivers/scsi/hpsa.c:3015:
+	printk(KERN_INFO "   Coalesce Interrupt Delay = 0x%x\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tb->HostWrite.CoalIntDelay
#3095: FILE: drivers/scsi/hpsa.c:3016:
+	       readl(&(tb->HostWrite.CoalIntDelay)));

CHECK:CAMELCASE: Avoid CamelCase: <CoalIntDelay>
#3095: FILE: drivers/scsi/hpsa.c:3016:
+	       readl(&(tb->HostWrite.CoalIntDelay)));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3096: FILE: drivers/scsi/hpsa.c:3017:
+	printk(KERN_INFO "   Coalesce Interrupt Count = 0x%x\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tb->HostWrite.CoalIntCount
#3097: FILE: drivers/scsi/hpsa.c:3018:
+	       readl(&(tb->HostWrite.CoalIntCount)));

CHECK:CAMELCASE: Avoid CamelCase: <CoalIntCount>
#3097: FILE: drivers/scsi/hpsa.c:3018:
+	       readl(&(tb->HostWrite.CoalIntCount)));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3098: FILE: drivers/scsi/hpsa.c:3019:
+	printk(KERN_INFO "   Max outstanding commands = 0x%d\n",

ERROR:PRINTF_0XDECIMAL: Prefixing 0x with decimal output is defective
#3098: FILE: drivers/scsi/hpsa.c:3019:
+	printk(KERN_INFO "   Max outstanding commands = 0x%d\n",

Prefixing 0x with decimal output is defective and should be corrected.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tb->CmdsOutMax
#3099: FILE: drivers/scsi/hpsa.c:3020:
+	       readl(&(tb->CmdsOutMax)));

CHECK:CAMELCASE: Avoid CamelCase: <CmdsOutMax>
#3099: FILE: drivers/scsi/hpsa.c:3020:
+	       readl(&(tb->CmdsOutMax)));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3100: FILE: drivers/scsi/hpsa.c:3021:
+	printk(KERN_INFO "   Bus Types = 0x%x\n", readl(&(tb->BusTypes)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tb->BusTypes
#3100: FILE: drivers/scsi/hpsa.c:3021:
+	printk(KERN_INFO "   Bus Types = 0x%x\n", readl(&(tb->BusTypes)));

CHECK:CAMELCASE: Avoid CamelCase: <BusTypes>
#3100: FILE: drivers/scsi/hpsa.c:3021:
+	printk(KERN_INFO "   Bus Types = 0x%x\n", readl(&(tb->BusTypes)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tb->ServerName[i]
#3102: FILE: drivers/scsi/hpsa.c:3023:
+		temp_name[i] = readb(&(tb->ServerName[i]));

CHECK:CAMELCASE: Avoid CamelCase: <ServerName>
#3102: FILE: drivers/scsi/hpsa.c:3023:
+		temp_name[i] = readb(&(tb->ServerName[i]));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3104: FILE: drivers/scsi/hpsa.c:3025:
+	printk(KERN_INFO "   Server Name = %s\n", temp_name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3105: FILE: drivers/scsi/hpsa.c:3026:
+	printk(KERN_INFO "   Heartbeat Counter = 0x%x\n\n\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3106: FILE: drivers/scsi/hpsa.c:3027:
+	printk(KERN_INFO "   Heartbeat Counter = 0x%x\n\n\n",
+		readl(&(tb->HeartBeat)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tb->HeartBeat
#3106: FILE: drivers/scsi/hpsa.c:3027:
+		readl(&(tb->HeartBeat)));

CHECK:CAMELCASE: Avoid CamelCase: <HeartBeat>
#3106: FILE: drivers/scsi/hpsa.c:3027:
+		readl(&(tb->HeartBeat)));

WARNING:LINE_SPACING: Missing a blank line after declarations
#3113: FILE: drivers/scsi/hpsa.c:3034:
+	int i, offset, mem_type, bar_type;
+	if (pci_bar_addr == PCI_BASE_ADDRESS_0)	/* looking for BAR zero? */

CHECK:BRACES: braces {} should be used on all arms of this statement
#3118: FILE: drivers/scsi/hpsa.c:3039:
+		if (bar_type == PCI_BASE_ADDRESS_SPACE_IO)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3120: FILE: drivers/scsi/hpsa.c:3041:
+		else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3132: FILE: drivers/scsi/hpsa.c:3053:
+				printk(KERN_WARNING

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#3135: FILE: drivers/scsi/hpsa.c:3056:
+				return -1;
+				break;

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#3148: FILE: drivers/scsi/hpsa.c:3069:
+static void __devinit hpsa_interrupt_mode(struct ctlr_info *c,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3149: FILE: drivers/scsi/hpsa.c:3070:
+static void __devinit hpsa_interrupt_mode(struct ctlr_info *c,
+					   struct pci_dev *pdev, __u32 board_id)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'board_id == 0x40700E11'
#3158: FILE: drivers/scsi/hpsa.c:3079:
+	if ((board_id == 0x40700E11) ||
+	    (board_id == 0x40800E11) ||
+	    (board_id == 0x40820E11) || (board_id == 0x40830E11))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'board_id == 0x40800E11'
#3158: FILE: drivers/scsi/hpsa.c:3079:
+	if ((board_id == 0x40700E11) ||
+	    (board_id == 0x40800E11) ||
+	    (board_id == 0x40820E11) || (board_id == 0x40830E11))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'board_id == 0x40820E11'
#3158: FILE: drivers/scsi/hpsa.c:3079:
+	if ((board_id == 0x40700E11) ||
+	    (board_id == 0x40800E11) ||
+	    (board_id == 0x40820E11) || (board_id == 0x40830E11))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'board_id == 0x40830E11'
#3158: FILE: drivers/scsi/hpsa.c:3079:
+	if ((board_id == 0x40700E11) ||
+	    (board_id == 0x40800E11) ||
+	    (board_id == 0x40820E11) || (board_id == 0x40830E11))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3163: FILE: drivers/scsi/hpsa.c:3084:
+		printk(KERN_WARNING "hpsa: MSIX\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3174: FILE: drivers/scsi/hpsa.c:3095:
+			printk(KERN_WARNING "hpsa: only %d MSI-X vectors "

WARNING:SPLIT_STRING: quoted string split across lines
#3175: FILE: drivers/scsi/hpsa.c:3096:
+			printk(KERN_WARNING "hpsa: only %d MSI-X vectors "
+			       "available\n", err);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3178: FILE: drivers/scsi/hpsa.c:3099:
+			printk(KERN_WARNING "hpsa: MSI-X init failed %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3184: FILE: drivers/scsi/hpsa.c:3105:
+		printk(KERN_WARNING "hpsa: MSI\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3188: FILE: drivers/scsi/hpsa.c:3109:
+			printk(KERN_WARNING "hpsa: MSI init failed\n");

WARNING:RETURN_VOID: void function return statements are not generally useful
#3195: FILE: drivers/scsi/hpsa.c:3116:
+	return;
+}

CHECK:SPACING: No space is necessary after a cast
#3208: FILE: drivers/scsi/hpsa.c:3129:
+	board_id = (((__u32) (subsystem_device_id << 16) & 0xffff0000) |

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3220: FILE: drivers/scsi/hpsa.c:3141:
+		if (subsystem_vendor_id == !PCI_VENDOR_ID_HP ||
+				!allow_unknown_smartarray) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3221: FILE: drivers/scsi/hpsa.c:3142:
+			printk(KERN_WARNING "hpsa: Sorry, I don't "

WARNING:SPLIT_STRING: quoted string split across lines
#3222: FILE: drivers/scsi/hpsa.c:3143:
+			printk(KERN_WARNING "hpsa: Sorry, I don't "
+				"know how to access the Smart "

WARNING:SPLIT_STRING: quoted string split across lines
#3223: FILE: drivers/scsi/hpsa.c:3144:
+				"know how to access the Smart "
+				"Array controller %08lx\n",

CHECK:SPACING: No space is necessary after a cast
#3224: FILE: drivers/scsi/hpsa.c:3145:
+				(unsigned long) board_id);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3232: FILE: drivers/scsi/hpsa.c:3153:
+		printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3239: FILE: drivers/scsi/hpsa.c:3160:
+		printk(KERN_ERR "hpsa: Unable to Enable PCI device\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3245: FILE: drivers/scsi/hpsa.c:3166:
+		printk(KERN_ERR "hpsa: Cannot obtain PCI resources, "

WARNING:SPLIT_STRING: quoted string split across lines
#3246: FILE: drivers/scsi/hpsa.c:3167:
+		printk(KERN_ERR "hpsa: Cannot obtain PCI resources, "
+		       "aborting\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3265: FILE: drivers/scsi/hpsa.c:3186:
+	 * We poll for up to 120 secs, once per 100ms. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3274: FILE: drivers/scsi/hpsa.c:3195:
+		printk(KERN_WARNING "hpsa: Board not ready.  Timed out.\n");

CHECK:SPACING: No space is necessary after a cast
#3281: FILE: drivers/scsi/hpsa.c:3202:
+	cfg_base_addr &= (__u32) 0x0000ffff;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3284: FILE: drivers/scsi/hpsa.c:3205:
+		printk(KERN_WARNING "hpsa: Cannot find cfg_base_addr_index\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3291: FILE: drivers/scsi/hpsa.c:3212:
+	c->cfgtable = remap_pci_mem(pci_resource_start(pdev,
+			       cfg_base_addr_index) + cfg_offset,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around c->cfgtable->CmdsOutMax
#3296: FILE: drivers/scsi/hpsa.c:3217:
+	c->max_commands = readl(&(c->cfgtable->CmdsOutMax));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around products[prod_index].access
#3299: FILE: drivers/scsi/hpsa.c:3220:
+	c->access = *(products[prod_index].access);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3307: FILE: drivers/scsi/hpsa.c:3228:
+		printk(KERN_WARNING "cciss: not a valid CISS config table\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#3315: FILE: drivers/scsi/hpsa.c:3236:
+		__u32 prefetch;
+		prefetch = readl(&(c->cfgtable->SCSI_Prefetch));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around c->cfgtable->SCSI_Prefetch
#3315: FILE: drivers/scsi/hpsa.c:3236:
+		prefetch = readl(&(c->cfgtable->SCSI_Prefetch));

CHECK:CAMELCASE: Avoid CamelCase: <SCSI_Prefetch>
#3315: FILE: drivers/scsi/hpsa.c:3236:
+		prefetch = readl(&(c->cfgtable->SCSI_Prefetch));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around c->cfgtable->SCSI_Prefetch
#3317: FILE: drivers/scsi/hpsa.c:3238:
+		writel(prefetch, &(c->cfgtable->SCSI_Prefetch));

WARNING:LINE_SPACING: Missing a blank line after declarations
#3327: FILE: drivers/scsi/hpsa.c:3248:
+		__u32 dma_prefetch;
+		dma_prefetch = readl(c->vaddr + I2O_DMA1_CFG);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around c->cfgtable->CmdsOutMax
#3332: FILE: drivers/scsi/hpsa.c:3253:
+	c->max_commands = readl(&(c->cfgtable->CmdsOutMax));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around c->cfgtable->HostWrite.TransportRequest
#3334: FILE: drivers/scsi/hpsa.c:3255:
+	writel(CFGTBL_Trans_Simple, &(c->cfgtable->HostWrite.TransportRequest));

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3339: FILE: drivers/scsi/hpsa.c:3260:
+	 * as we enter this code.) */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around c->cfgtable->TransportActive
#3352: FILE: drivers/scsi/hpsa.c:3273:
+	if (!(readl(&(c->cfgtable->TransportActive)) & CFGTBL_Trans_Simple)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3353: FILE: drivers/scsi/hpsa.c:3274:
+		printk(KERN_WARNING "hpsa: unable to get board into"

WARNING:SPLIT_STRING: quoted string split across lines
#3354: FILE: drivers/scsi/hpsa.c:3275:
+		printk(KERN_WARNING "hpsa: unable to get board into"
+		       " simple mode\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#3378: FILE: drivers/scsi/hpsa.c:3299:
+			struct ctlr_info *p;
+			p = kzalloc(sizeof(struct ctlr_info), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*p)...) over kzalloc(sizeof(struct ctlr_info)...)
#3378: FILE: drivers/scsi/hpsa.c:3299:
+			p = kzalloc(sizeof(struct ctlr_info), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:CAMELCASE: Avoid CamelCase: <Enomem>
#3380: FILE: drivers/scsi/hpsa.c:3301:
+				goto Enomem;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3385: FILE: drivers/scsi/hpsa.c:3306:
+	printk(KERN_WARNING "hpsa: This driver supports a maximum"

WARNING:SPLIT_STRING: quoted string split across lines
#3386: FILE: drivers/scsi/hpsa.c:3307:
+	printk(KERN_WARNING "hpsa: This driver supports a maximum"
+	       " of %d controllers.\n", MAX_CTLR);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3389: FILE: drivers/scsi/hpsa.c:3310:
+	printk(KERN_ERR "hpsa: out of memory.\n");

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#3407: FILE: drivers/scsi/hpsa.c:3328:
+static int __devinit hpsa_init_one(struct pci_dev *pdev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3408: FILE: drivers/scsi/hpsa.c:3329:
+static int __devinit hpsa_init_one(struct pci_dev *pdev,
+				    const struct pci_device_id *ent)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3420: FILE: drivers/scsi/hpsa.c:3341:
+		/* Some devices (notably the HP Smart Array 5i Controller)
+		   need a little pause here */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3420: FILE: drivers/scsi/hpsa.c:3341:
+		   need a little pause here */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3421: FILE: drivers/scsi/hpsa.c:3342:
+		schedule_timeout_uninterruptible(30*HZ);
 		                                   ^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#3427: FILE: drivers/scsi/hpsa.c:3348:
+				break;
+			else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3428: FILE: drivers/scsi/hpsa.c:3349:
+				printk(KERN_WARNING "hpsa: no-op failed%s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3429: FILE: drivers/scsi/hpsa.c:3350:
+				printk(KERN_WARNING "hpsa: no-op failed%s\n",
+						(i < 11 ? "; re-trying" : ""));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3439: FILE: drivers/scsi/hpsa.c:3360:
+
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#3450: FILE: drivers/scsi/hpsa.c:3371:
+	if (!pci_set_dma_mask(pdev, DMA_64BIT_MASK))
[...]
+	else if (!pci_set_dma_mask(pdev, DMA_32BIT_MASK))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3454: FILE: drivers/scsi/hpsa.c:3375:
+	else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3455: FILE: drivers/scsi/hpsa.c:3376:
+		printk(KERN_ERR "hpsa: no suitable DMA available\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3469: FILE: drivers/scsi/hpsa.c:3390:
+		printk(KERN_ERR "hpsa: Unable to get irq %d for %s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3474: FILE: drivers/scsi/hpsa.c:3395:
+	printk(KERN_INFO "%s: <0x%x> at PCI %s IRQ %d%s using DAC\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3483: FILE: drivers/scsi/hpsa.c:3404:
+	    pci_alloc_consistent(h->pdev,
+		    h->nr_cmds * sizeof(struct CommandList_struct),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around h->cmd_pool_dhandle
#3484: FILE: drivers/scsi/hpsa.c:3405:
+		    &(h->cmd_pool_dhandle));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3487: FILE: drivers/scsi/hpsa.c:3408:
+	    pci_alloc_consistent(h->pdev,
+		    h->nr_cmds * sizeof(struct ErrorInfo_struct),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around h->errinfo_pool_dhandle
#3488: FILE: drivers/scsi/hpsa.c:3409:
+		    &(h->errinfo_pool_dhandle));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'h->cmd_pool_bits == NULL'
#3489: FILE: drivers/scsi/hpsa.c:3410:
+	if ((h->cmd_pool_bits == NULL)
+	    || (h->cmd_pool == NULL)
+	    || (h->errinfo_pool == NULL)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'h->cmd_pool == NULL'
#3489: FILE: drivers/scsi/hpsa.c:3410:
+	if ((h->cmd_pool_bits == NULL)
+	    || (h->cmd_pool == NULL)
+	    || (h->errinfo_pool == NULL)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'h->errinfo_pool == NULL'
#3489: FILE: drivers/scsi/hpsa.c:3410:
+	if ((h->cmd_pool_bits == NULL)
+	    || (h->cmd_pool == NULL)
+	    || (h->errinfo_pool == NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!h->cmd_pool_bits"
#3489: FILE: drivers/scsi/hpsa.c:3410:
+	if ((h->cmd_pool_bits == NULL)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#3490: FILE: drivers/scsi/hpsa.c:3411:
+	if ((h->cmd_pool_bits == NULL)
+	    || (h->cmd_pool == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!h->cmd_pool"
#3490: FILE: drivers/scsi/hpsa.c:3411:
+	    || (h->cmd_pool == NULL)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#3491: FILE: drivers/scsi/hpsa.c:3412:
+	    || (h->cmd_pool == NULL)
+	    || (h->errinfo_pool == NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!h->errinfo_pool"
#3491: FILE: drivers/scsi/hpsa.c:3412:
+	    || (h->errinfo_pool == NULL)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3492: FILE: drivers/scsi/hpsa.c:3413:
+		printk(KERN_ERR "hpsa: out of memory");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!h->scsi_rejects.complete"
#3498: FILE: drivers/scsi/hpsa.c:3419:
+	if (h->scsi_rejects.complete == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3499: FILE: drivers/scsi/hpsa.c:3420:
+		printk(KERN_ERR "hpsa: out of memory");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3505: FILE: drivers/scsi/hpsa.c:3426:
+	/* Initialize the pdev driver private data.
+	   have it point to h.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3505: FILE: drivers/scsi/hpsa.c:3426:
+	   have it point to h.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3508: FILE: drivers/scsi/hpsa.c:3429:
+	/* command and error info recs zeroed out before
+	   they are used */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3508: FILE: drivers/scsi/hpsa.c:3429:
+	   they are used */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3528: FILE: drivers/scsi/hpsa.c:3449:
+		pci_free_consistent(h->pdev,
+			    h->nr_cmds * sizeof(struct CommandList_struct),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3532: FILE: drivers/scsi/hpsa.c:3453:
+		pci_free_consistent(h->pdev,
+			    h->nr_cmds * sizeof(struct ErrorInfo_struct),

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!h"
#3550: FILE: drivers/scsi/hpsa.c:3471:
+	if (h == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3551: FILE: drivers/scsi/hpsa.c:3472:
+		printk(KERN_ERR "hpsa: Unable to shutdown device \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#3551: FILE: drivers/scsi/hpsa.c:3472:
+		printk(KERN_ERR "hpsa: Unable to shutdown device \n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hba[i]"
#3555: FILE: drivers/scsi/hpsa.c:3476:
+	if (hba[i] == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3556: FILE: drivers/scsi/hpsa.c:3477:
+		printk(KERN_ERR "hpsa: device appears to "

WARNING:SPLIT_STRING: quoted string split across lines
#3557: FILE: drivers/scsi/hpsa.c:3478:
+		printk(KERN_ERR "hpsa: device appears to "
+		       "already be removed \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#3557: FILE: drivers/scsi/hpsa.c:3478:
+		       "already be removed \n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3562: FILE: drivers/scsi/hpsa.c:3483:
+	 * To write all data in the battery backed cache to disks */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3565: FILE: drivers/scsi/hpsa.c:3486:
+	return_code = sendcmd(HPSA_CACHE_FLUSH, h, flush_buf, 4, 0,
+				RAID_CTLR_LUNID, TYPE_CMD);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3567: FILE: drivers/scsi/hpsa.c:3488:
+		printk(KERN_WARNING "Error Flushing cache on controller %d\n",

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#3579: FILE: drivers/scsi/hpsa.c:3500:
+static void __devexit hpsa_remove_one(struct pci_dev *pdev)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pci_get_drvdata"
#3584: FILE: drivers/scsi/hpsa.c:3505:
+	if (pci_get_drvdata(pdev) == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3585: FILE: drivers/scsi/hpsa.c:3506:
+		printk(KERN_ERR "hpsa: Unable to remove device \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#3585: FILE: drivers/scsi/hpsa.c:3506:
+		printk(KERN_ERR "hpsa: Unable to remove device \n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hba[i]"
#3590: FILE: drivers/scsi/hpsa.c:3511:
+	if (hba[i] == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3591: FILE: drivers/scsi/hpsa.c:3512:
+		printk(KERN_ERR "hpsa: device appears to "

WARNING:SPLIT_STRING: quoted string split across lines
#3592: FILE: drivers/scsi/hpsa.c:3513:
+		printk(KERN_ERR "hpsa: device appears to "
+		       "already be removed \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#3592: FILE: drivers/scsi/hpsa.c:3513:
+		       "already be removed \n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3604: FILE: drivers/scsi/hpsa.c:3525:
+	pci_free_consistent(h->pdev,
+		h->nr_cmds * sizeof(struct CommandList_struct),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3607: FILE: drivers/scsi/hpsa.c:3528:
+	pci_free_consistent(h->pdev,
+		h->nr_cmds * sizeof(struct ErrorInfo_struct),

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#3620: FILE: drivers/scsi/hpsa.c:3541:
+static int hpsa_suspend(__attribute__((unused)) struct pci_dev *pdev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3621: FILE: drivers/scsi/hpsa.c:3542:
+static int hpsa_suspend(__attribute__((unused)) struct pci_dev *pdev,
+	__attribute__((unused)) pm_message_t state)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#3621: FILE: drivers/scsi/hpsa.c:3542:
+	__attribute__((unused)) pm_message_t state)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#3623: FILE: drivers/scsi/hpsa.c:3544:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#3626: FILE: drivers/scsi/hpsa.c:3547:
+static int hpsa_resume(__attribute__((unused)) struct pci_dev *pdev)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#3628: FILE: drivers/scsi/hpsa.c:3549:
+	return -ENOSYS;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3647: FILE: drivers/scsi/hpsa.c:3568:
+	printk(KERN_INFO DRIVER_NAME "hpsa\n");

WARNING:TYPO_SPELLING: 'entrys' may be misspelled - perhaps 'entries'?
#3657: FILE: drivers/scsi/hpsa.c:3578:
+	/* double check that all controller entrys have been removed */
 	                                    ^^^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "hba[i]"
#3659: FILE: drivers/scsi/hpsa.c:3580:
+		if (hba[i] != NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3660: FILE: drivers/scsi/hpsa.c:3581:
+			printk(KERN_WARNING "hpsa: had to remove"

WARNING:SPLIT_STRING: quoted string split across lines
#3661: FILE: drivers/scsi/hpsa.c:3582:
+			printk(KERN_WARNING "hpsa: had to remove"
+			       " controller %d\n", i);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3674: FILE: drivers/scsi/hpsa_cmd.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#3689: FILE: drivers/scsi/hpsa_cmd.h:16:
+ *    along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#3690: FILE: drivers/scsi/hpsa_cmd.h:17:
+ *    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:TYPO_SPELLING: 'defintions' may be misspelled - perhaps 'definitions'?
#3700: FILE: drivers/scsi/hpsa_cmd.h:27:
+/* general boundary defintions */
                     ^^^^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <InquiryData_struct>
#3781: FILE: drivers/scsi/hpsa_cmd.h:108:
+struct InquiryData_struct {

CHECK:CAMELCASE: Avoid CamelCase: <ReportExtendedLUNdata_struct>
#3793: FILE: drivers/scsi/hpsa_cmd.h:120:
+struct ReportExtendedLUNdata_struct {

CHECK:CAMELCASE: Avoid CamelCase: <SenseSubsystem_info_struct>
#3800: FILE: drivers/scsi/hpsa_cmd.h:127:
+struct SenseSubsystem_info_struct {

CHECK:CAMELCASE: Avoid CamelCase: <ReadCapdata_struct>
#3807: FILE: drivers/scsi/hpsa_cmd.h:134:
+struct ReadCapdata_struct {

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#3812: FILE: drivers/scsi/hpsa_cmd.h:139:
+#if 0

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3814: FILE: drivers/scsi/hpsa_cmd.h:141:
+#define HPSA_READ ^I0xa8$

CHECK:CAMELCASE: Avoid CamelCase: <SCSI3Addr_union>
#3828: FILE: drivers/scsi/hpsa_cmd.h:155:
+union SCSI3Addr_union {

CHECK:CAMELCASE: Avoid CamelCase: <Dev>
#3830: FILE: drivers/scsi/hpsa_cmd.h:157:
+		__u8 Dev;

CHECK:CAMELCASE: Avoid CamelCase: <Bus>
#3831: FILE: drivers/scsi/hpsa_cmd.h:158:
+		__u8 Bus:6;

CHECK:CAMELCASE: Avoid CamelCase: <Mode>
#3832: FILE: drivers/scsi/hpsa_cmd.h:159:
+		__u8 Mode:2;        /* b00 */

CHECK:CAMELCASE: Avoid CamelCase: <PeripDev>
#3833: FILE: drivers/scsi/hpsa_cmd.h:160:
+	} PeripDev;

CHECK:CAMELCASE: Avoid CamelCase: <DevLSB>
#3835: FILE: drivers/scsi/hpsa_cmd.h:162:
+		__u8 DevLSB;

CHECK:CAMELCASE: Avoid CamelCase: <DevMSB>
#3836: FILE: drivers/scsi/hpsa_cmd.h:163:
+		__u8 DevMSB:6;

CHECK:CAMELCASE: Avoid CamelCase: <LogDev>
#3838: FILE: drivers/scsi/hpsa_cmd.h:165:
+	} LogDev;

CHECK:CAMELCASE: Avoid CamelCase: <Targ>
#3842: FILE: drivers/scsi/hpsa_cmd.h:169:
+		__u8 Targ:6;

CHECK:CAMELCASE: Avoid CamelCase: <LogUnit>
#3844: FILE: drivers/scsi/hpsa_cmd.h:171:
+	} LogUnit;

CHECK:CAMELCASE: Avoid CamelCase: <PhysDevAddr_struct>
#3847: FILE: drivers/scsi/hpsa_cmd.h:174:
+struct PhysDevAddr_struct {

CHECK:CAMELCASE: Avoid CamelCase: <TargetId>
#3848: FILE: drivers/scsi/hpsa_cmd.h:175:
+	__u32             TargetId:24;

CHECK:CAMELCASE: Avoid CamelCase: <Target>
#3852: FILE: drivers/scsi/hpsa_cmd.h:179:
+	union SCSI3Addr_union  Target[2];

CHECK:CAMELCASE: Avoid CamelCase: <LogDevAddr_struct>
#3855: FILE: drivers/scsi/hpsa_cmd.h:182:
+struct LogDevAddr_struct {

CHECK:CAMELCASE: Avoid CamelCase: <VolId>
#3856: FILE: drivers/scsi/hpsa_cmd.h:183:
+	__u32            VolId:30;

CHECK:CAMELCASE: Avoid CamelCase: <LUNAddr_union>
#3861: FILE: drivers/scsi/hpsa_cmd.h:188:
+union LUNAddr_union {

CHECK:CAMELCASE: Avoid CamelCase: <SCSI3Lun>
#3863: FILE: drivers/scsi/hpsa_cmd.h:190:
+	union SCSI3Addr_union   SCSI3Lun[4];

CHECK:CAMELCASE: Avoid CamelCase: <PhysDev>
#3864: FILE: drivers/scsi/hpsa_cmd.h:191:
+	struct PhysDevAddr_struct PhysDev;

CHECK:CAMELCASE: Avoid CamelCase: <SGDescriptor_struct>
#3892: FILE: drivers/scsi/hpsa_cmd.h:219:
+struct SGDescriptor_struct {

WARNING:SPACING: missing space after union definition
#3898: FILE: drivers/scsi/hpsa_cmd.h:225:
+union MoreErrInfo_union{

CHECK:CAMELCASE: Avoid CamelCase: <MoreErrInfo_union>
#3898: FILE: drivers/scsi/hpsa_cmd.h:225:
+union MoreErrInfo_union{

CHECK:CAMELCASE: Avoid CamelCase: <Reserved>
#3900: FILE: drivers/scsi/hpsa_cmd.h:227:
+		__u8  Reserved[3];

CHECK:CAMELCASE: Avoid CamelCase: <ErrorInfo>
#3902: FILE: drivers/scsi/hpsa_cmd.h:229:
+		__u32 ErrorInfo;

CHECK:CAMELCASE: Avoid CamelCase: <Common_Info>
#3903: FILE: drivers/scsi/hpsa_cmd.h:230:
+	} Common_Info;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#3911: FILE: drivers/scsi/hpsa_cmd.h:238:
+};
+struct ErrorInfo_struct {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#3919: FILE: drivers/scsi/hpsa_cmd.h:246:
+};
+/* Command types */

CHECK:CAMELCASE: Avoid CamelCase: <HostWrite_struct>
#3951: FILE: drivers/scsi/hpsa_cmd.h:278:
+struct HostWrite_struct {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3985: FILE: drivers/scsi/hpsa.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#4000: FILE: drivers/scsi/hpsa.h:16:
+ *    along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#4001: FILE: drivers/scsi/hpsa.h:17:
+ *    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4018: FILE: drivers/scsi/hpsa.h:34:
+	void (*submit_command)(struct ctlr_info *h,
+		struct CommandList_struct *c);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4051: FILE: drivers/scsi/hpsa.h:67:
+^Iint ^Inr_cmds; /* Number of commands allowed on this controller */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4055: FILE: drivers/scsi/hpsa.h:71:
+^Iint ^Imax_commands;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4057: FILE: drivers/scsi/hpsa.h:73:
+^Iint ^Imax_outstanding; /* Debug */$

WARNING:REPEATED_WORD: Possible repeated word: 'all'
#4059: FILE: drivers/scsi/hpsa.h:75:
+	int	usage_count;  /* number of opens all all minor devices */

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#4075: FILE: drivers/scsi/hpsa.h:91:
+	spinlock_t lock;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4078: FILE: drivers/scsi/hpsa.h:94:
+^Istruct CommandList_struct ^I*cmd_pool;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4080: FILE: drivers/scsi/hpsa.h:96:
+^Istruct ErrorInfo_struct ^I*errinfo_pool;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4082: FILE: drivers/scsi/hpsa.h:98:
+^Iunsigned long  ^I^I*cmd_pool_bits;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4098: FILE: drivers/scsi/hpsa.h:114:
+};
+#define HPSA_ABORT_MSG 0

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4126: FILE: drivers/scsi/hpsa.h:142:
+#define HPSA_INTR_ON ^I1$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#4129: FILE: drivers/scsi/hpsa.h:145:
+/*
+	Send the command to the hardware

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4132: FILE: drivers/scsi/hpsa.h:148:
+static void SA5_submit_command(struct ctlr_info *h,
+	struct CommandList_struct *c)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#4135: FILE: drivers/scsi/hpsa.h:151:
+	 printk(KERN_WARNING "hpsa: Sending %x - down to controller\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4157: FILE: drivers/scsi/hpsa.h:173:
+		writel(SA5_INTR_OFF,
+			h->vaddr + SA5_REPLY_INTR_MASK_OFFSET);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4160: FILE: drivers/scsi/hpsa.h:176:
+}
+/*

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#4171: FILE: drivers/scsi/hpsa.h:187:
+
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4172: FILE: drivers/scsi/hpsa.h:188:
+}
+/*

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#4179: FILE: drivers/scsi/hpsa.h:195:
+	unsigned long register_value
+		= readl(h->vaddr + SA5_REPLY_PORT_OFFSET);

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#4186: FILE: drivers/scsi/hpsa.h:202:
+		printk(KERN_INFO "hpsa:  Read %lx back from board\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4187: FILE: drivers/scsi/hpsa.h:203:
+		printk(KERN_INFO "hpsa:  Read %lx back from board\n",
+			register_value);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#4189: FILE: drivers/scsi/hpsa.h:205:
+		printk(KERN_INFO "hpsa:  FIFO Empty read\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4194: FILE: drivers/scsi/hpsa.h:210:
+}
+/*

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#4202: FILE: drivers/scsi/hpsa.h:218:
+	printk(KERN_INFO "hpsa: intr_pending %lx\n", register_value);

WARNING:SPACING: space prohibited before semicolon
#4206: FILE: drivers/scsi/hpsa.h:222:
+	return 0 ;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4209: FILE: drivers/scsi/hpsa.h:225:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4224: FILE: drivers/scsi/hpsa.h:240:
+
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#4236: FILE: drivers/scsi/Kconfig:377:
+config SCSI_HPSA
+	tristate "HP Smart Array SCSI driver"
+	depends on PCI && SCSI
+	help
+	  This driver supports
+

Kconfig symbols should have a help text which fully describes
it.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000161284.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 347 warnings, 371 checks, 4160 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000161284.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
