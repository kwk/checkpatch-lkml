WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
 Change kfifo_put() into kfifo_put_locked() which requires an additional spinlock argument 

WARNING:TYPO_SPELLING: 'requieres' may be misspelled - perhaps 'requires'?
#36: 
 kfifo_init() and kfifo_alloc() requieres now a kfifo-pointer argument and does not 
                                ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#88: FILE: drivers/char/nozomi.c:688:
+			kfifo_alloc(&dc->port[i].fifo_ul,
+				FIFO_BUFFER_SIZE_UL, GFP_ATOMIC);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#180: FILE: drivers/char/sonypi.c:780:
+	while (kfifo_get_locked(&sonypi_device.input_fifo, (unsigned char *)&kp,
+			 sizeof(kp), &sonypi_device.input_fifo_lock)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#192: FILE: drivers/char/sonypi.c:831:
+		kfifo_put_locked(&sonypi_device.input_fifo,
+			(unsigned char *)&kp, sizeof(kp),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: drivers/char/sonypi.c:885:
+	kfifo_put_locked(&sonypi_device.fifo, (unsigned char *)&event,
+			sizeof(event), &sonypi_device.fifo_lock);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#271: FILE: drivers/char/sonypi.c:1399:
+		error = kfifo_alloc(&sonypi_device.input_fifo, SONYPI_BUF_SIZE,
+				GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#349: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:48:
+static int __cxio_init_resource_fifo(struct kfifo *fifo,
 				   spinlock_t *fifo_lock,

CHECK:SPACING: No space is necessary after a cast
#363: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:62:
+		__kfifo_put(fifo, (unsigned char *) &entry, sizeof(u32));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#373: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:75:
+			__kfifo_put(fifo,
 				(unsigned char *) &rarray[idx],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#381: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:82:
+			__kfifo_put(fifo,
 				(unsigned char *) &rarray[i],

CHECK:SPACING: No space is necessary after a cast
#386: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:86:
+			__kfifo_put(fifo, (unsigned char *) &i, sizeof(u32));

CHECK:SPACING: No space is necessary after a cast
#390: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:89:
+		kfifo_get_locked(fifo, (unsigned char *) &entry,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#391: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:90:
+		kfifo_get_locked(fifo, (unsigned char *) &entry,
+				sizeof(u32), fifo_lock);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#396: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:94:
+static int cxio_init_resource_fifo(struct kfifo *fifo, spinlock_t * fifo_lock,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#405: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:102:
+static int cxio_init_resource_fifo_random(struct kfifo *fifo,
 				   spinlock_t * fifo_lock,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#417: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:117:
+	if (kfifo_alloc(&rdev_p->rscp->qpid_fifo, T3_MAX_NUM_QP * sizeof(u32),
+					      GFP_KERNEL))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#456: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:180:
+static u32 cxio_hal_get_resource(struct kfifo *fifo, spinlock_t * lock)

CHECK:SPACING: No space is necessary after a cast
#460: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:183:
+	if (kfifo_get_locked(fifo, (unsigned char *) &entry, sizeof(u32), lock))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#467: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:189:
+static void cxio_hal_put_resource(struct kfifo *fifo, spinlock_t * lock,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#468: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:190:
+static void cxio_hal_put_resource(struct kfifo *fifo, spinlock_t * lock,
+		u32 entry)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#471: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:192:
+	BUG_ON(

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#471: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:192:
+	BUG_ON(

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: No space is necessary after a cast
#472: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:193:
+	kfifo_put_locked(fifo, (unsigned char *) &entry, sizeof(u32), lock)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#551: FILE: drivers/media/video/meye.c:803:
+		if (kfifo_get_locked(&meye.grabq, (unsigned char *)&reqnr,
+			      sizeof(int), &meye.grabq_lock) != sizeof(int)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#561: FILE: drivers/media/video/meye.c:814:
+		kfifo_put_locked(&meye.doneq, (unsigned char *)&reqnr,
+				sizeof(int), &meye.doneq_lock);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#572: FILE: drivers/media/video/meye.c:824:
+		if (kfifo_get_locked(&meye.grabq, (unsigned char *)&reqnr,
+			      sizeof(int), &meye.grabq_lock) != sizeof(int)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#582: FILE: drivers/media/video/meye.c:835:
+		kfifo_put_locked(&meye.doneq, (unsigned char *)&reqnr,
+				sizeof(int), &meye.doneq_lock);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#613: FILE: drivers/media/video/meye.c:971:
+		kfifo_get_locked(&meye.doneq, (unsigned char *)&unused,
+				sizeof(int), &meye.doneq_lock);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#623: FILE: drivers/media/video/meye.c:1459:
+	kfifo_put_locked(&meye.grabq, (unsigned char *)&buf->index,
+			sizeof(int), &meye.grabq_lock);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#647: FILE: drivers/media/video/meye.c:1486:
+	if (!kfifo_get_locked(&meye.doneq, (unsigned char *)&reqnr,
+		       sizeof(int), &meye.doneq_lock)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#679: FILE: drivers/media/video/meye.c:1754:
+	if (kfifo_alloc(&meye.grabq, sizeof(int) * MEYE_MAX_BUFNBRS,
+				GFP_KERNEL)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#688: FILE: drivers/media/video/meye.c:1760:
+	if (kfifo_alloc(&meye.doneq, sizeof(int) * MEYE_MAX_BUFNBRS,
+				GFP_KERNEL)) {

CHECK:SPACING: No space is necessary after a cast
#792: FILE: drivers/net/wireless/libertas/main.c:857:
+			__kfifo_get(&priv->event_fifo, (unsigned char *) &event,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#793: FILE: drivers/net/wireless/libertas/main.c:858:
+			__kfifo_get(&priv->event_fifo, (unsigned char *) &event,
 				sizeof(event));

CHECK:SPACING: No space is necessary after a cast
#824: FILE: drivers/net/wireless/libertas/main.c:1581:
+	__kfifo_put(&priv->event_fifo, (unsigned char *) &event, sizeof(u32));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#849: FILE: drivers/platform/x86/fujitsu-laptop.c:837:
+	error = kfifo_alloc(&fujitsu_hotkey->fifo, RINGBUFFERSIZE * sizeof(int),
+			GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#880: FILE: drivers/platform/x86/fujitsu-laptop.c:1011:
+				status = kfifo_put_locked(&fujitsu_hotkey->fifo,
 						   (unsigned char *)&keycode,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#896: FILE: drivers/platform/x86/fujitsu-laptop.c:1024:
+					kfifo_get_locked(

CHECK:SPACING: No space is necessary after a cast
#898: FILE: drivers/platform/x86/fujitsu-laptop.c:1026:
+					 (unsigned char *) &keycode_r,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#924: FILE: drivers/platform/x86/sony-laptop.c:304:
+	while (kfifo_get_locked(&sony_laptop_input.fifo, (unsigned char *)&kp,
+			sizeof(kp), &sony_laptop_input.fifo_lock)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#936: FILE: drivers/platform/x86/sony-laptop.c:367:
+		kfifo_put_locked(&sony_laptop_input.fifo,
+			  (unsigned char *)&kp, sizeof(kp),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1037: FILE: drivers/platform/x86/sony-laptop.c:2328:
+	kfifo_put_locked(&sonypi_compat.fifo, (unsigned char *)&event,
+			sizeof(event), &sonypi_compat.fifo_lock);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1082: FILE: drivers/scsi/libiscsi.c:431:
+	__kfifo_put(&session->cmdpool.queue, (void*)&task, sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1082: FILE: drivers/scsi/libiscsi.c:431:
+	__kfifo_put(&session->cmdpool.queue, (void*)&task, sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1114: FILE: drivers/scsi/libiscsi.c:2124:
+	kfifo_init(&q->queue, (void*)q->pool, max * sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1114: FILE: drivers/scsi/libiscsi.c:2124:
+	kfifo_init(&q->queue, (void*)q->pool, max * sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1123: FILE: drivers/scsi/libiscsi.c:2132:
+		__kfifo_put(&q->queue, (void*)&q->pool[i], sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1123: FILE: drivers/scsi/libiscsi.c:2132:
+		__kfifo_put(&q->queue, (void*)&q->pool[i], sizeof(void*));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1141: FILE: drivers/scsi/libiscsi.c:2480:
+	if (!__kfifo_get(&session->cmdpool.queue,
                          (void*)&conn->login_task,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1149: FILE: drivers/scsi/libiscsi.c:2499:
+	__kfifo_put(&session->cmdpool.queue, (void*)&conn->login_task,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1158: FILE: drivers/scsi/libiscsi.c:2562:
+	__kfifo_put(&session->cmdpool.queue, (void*)&conn->login_task,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1171: FILE: drivers/scsi/libiscsi_tcp.c:448:
+	while (__kfifo_get(&tcp_task->r2tqueue, (void*)&r2t, sizeof(void*))) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1171: FILE: drivers/scsi/libiscsi_tcp.c:448:
+	while (__kfifo_get(&tcp_task->r2tqueue, (void*)&r2t, sizeof(void*))) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1172: FILE: drivers/scsi/libiscsi_tcp.c:449:
+		__kfifo_put(&tcp_task->r2tpool.queue, (void*)&r2t,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1180: FILE: drivers/scsi/libiscsi_tcp.c:456:
+		__kfifo_put(&tcp_task->r2tpool.queue, (void*)&r2t,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1189: FILE: drivers/scsi/libiscsi_tcp.c:544:
+	rc = __kfifo_get(&tcp_task->r2tpool.queue, (void*)&r2t, sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1189: FILE: drivers/scsi/libiscsi_tcp.c:544:
+	rc = __kfifo_get(&tcp_task->r2tpool.queue, (void*)&r2t, sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1198: FILE: drivers/scsi/libiscsi_tcp.c:557:
+		__kfifo_put(&tcp_task->r2tpool.queue, (void*)&r2t,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1207: FILE: drivers/scsi/libiscsi_tcp.c:573:
+		__kfifo_put(&tcp_task->r2tpool.queue, (void*)&r2t,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1216: FILE: drivers/scsi/libiscsi_tcp.c:583:
+	__kfifo_put(&tcp_task->r2tqueue, (void*)&r2t, sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1216: FILE: drivers/scsi/libiscsi_tcp.c:583:
+	__kfifo_put(&tcp_task->r2tqueue, (void*)&r2t, sizeof(void*));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1225: FILE: drivers/scsi/libiscsi_tcp.c:954:
+	BUG_ON(__kfifo_len(&tcp_task->r2tqueue));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1255: FILE: drivers/scsi/libiscsi_tcp.c:1131:
+		if (kfifo_alloc(&tcp_task->r2tqueue,
+		      session->max_r2t * 4 * sizeof(void*), GFP_KERNEL)) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1255: FILE: drivers/scsi/libiscsi_tcp.c:1131:
+		      session->max_r2t * 4 * sizeof(void*), GFP_KERNEL)) {

CHECK:SPACING: No space is necessary after a cast
#1288: FILE: drivers/scsi/libsrp.c:61:
+	kfifo_init(&q->queue, (void *) q->pool, max * sizeof(void *));

CHECK:SPACING: No space is necessary after a cast
#1292: FILE: drivers/scsi/libsrp.c:64:
+		__kfifo_put(&q->queue, (void *) &iue, sizeof(void *));

CHECK:SPACING: No space is necessary after a cast
#1301: FILE: drivers/scsi/libsrp.c:166:
+	kfifo_get_locked(&target->iu_queue.queue, (void *) &iue,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1302: FILE: drivers/scsi/libsrp.c:167:
+	kfifo_get_locked(&target->iu_queue.queue, (void *) &iue,
+			sizeof(void *), &target->iu_queue.lock);

CHECK:SPACING: No space is necessary after a cast
#1311: FILE: drivers/scsi/libsrp.c:179:
+	kfifo_put_locked(&iue->target->iu_queue.queue, (void *) &iue,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1312: FILE: drivers/scsi/libsrp.c:180:
+	kfifo_put_locked(&iue->target->iu_queue.queue, (void *) &iue,
+			sizeof(void *), &iue->target->iu_queue.lock);

WARNING:TYPO_SPELLING: 'overun' may be misspelled - perhaps 'overrun'?
#1328: FILE: drivers/usb/host/fhci.h:428:
+	struct kfifo dummy_packets_Q;/* dummy packets for the CRC overun */
 	                                                          ^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1507: FILE: include/linux/kfifo.h:35:
+extern void kfifo_init(struct kfifo *fifo,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1508: FILE: include/linux/kfifo.h:36:
+extern void kfifo_init(struct kfifo *fifo,
+			unsigned char *buffer, unsigned int size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1509: FILE: include/linux/kfifo.h:37:
+extern __must_check int kfifo_alloc(struct kfifo *fifo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1510: FILE: include/linux/kfifo.h:38:
+extern __must_check int kfifo_alloc(struct kfifo *fifo,
+			unsigned int size, gfp_t gfp_mask);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1516: FILE: include/linux/kfifo.h:40:
+extern __must_check unsigned int __kfifo_put(struct kfifo *fifo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1517: FILE: include/linux/kfifo.h:41:
+extern __must_check unsigned int __kfifo_put(struct kfifo *fifo,
+				const unsigned char *from, unsigned int len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1518: FILE: include/linux/kfifo.h:42:
+extern __must_check unsigned int __kfifo_get(struct kfifo *fifo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1519: FILE: include/linux/kfifo.h:43:
+extern __must_check unsigned int __kfifo_get(struct kfifo *fifo,
+				unsigned char *to, unsigned int len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1565: FILE: include/linux/kfifo.h:88:
+static inline __must_check unsigned int kfifo_put_locked(struct kfifo *fifo,
+		const unsigned char *from, unsigned int n, spinlock_t *lock)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1598: FILE: include/linux/kfifo.h:113:
+static inline __must_check unsigned int kfifo_get_locked(struct kfifo *fifo,
+	unsigned char *to, unsigned int n, spinlock_t *lock)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1711: FILE: kernel/kfifo.c:31:
+static void _kfifo_init(struct kfifo *fifo, unsigned char *buffer,
+		unsigned int size)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000084508.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 22 errors, 5 warnings, 56 checks, 1685 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000084508.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
