WARNING:TYPO_SPELLING: 'accomodate' may be misspelled - perhaps 'accommodate'?
#32: 
to accomodate the differences between the architectures.
   ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#107: FILE: arch/x86/kernel/asm-offsets.c:1:
+#define DEFINE(sym, val) \

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#107: FILE: arch/x86/kernel/asm-offsets.c:1:
+#define DEFINE(sym, val) \
+        asm volatile("\n->" #sym " %0 " #val : : "i" (val))

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: arch/x86/kernel/asm-offsets.c:2:
+        asm volatile("\n->" #sym " %0 " #val : : "i" (val))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: arch/x86/kernel/asm-offsets.c:2:
+        asm volatile("\n->" #sym " %0 " #val : : "i" (val))$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#110: FILE: arch/x86/kernel/asm-offsets.c:4:
+#define BLANK() asm volatile("\n->" : : )

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#112: FILE: arch/x86/kernel/asm-offsets.c:6:
+#define OFFSET(sym, str, mem) \
+	DEFINE(sym, offsetof(struct str, mem));

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#178: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#183: FILE: arch/x86/kernel/paravirt.c:1:
+/*  Paravirtualization interfaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#184: FILE: arch/x86/kernel/paravirt.c:2:
+/*  Paravirtualization interfaces
+    Copyright (C) 2006 Rusty Russell IBM Corporation

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#197: FILE: arch/x86/kernel/paravirt.c:15:
+    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#198: FILE: arch/x86/kernel/paravirt.c:16:
+    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/bug.h> instead of <asm/bug.h>
#210: FILE: arch/x86/kernel/paravirt.c:28:
+#include <asm/bug.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/delay.h> instead of <asm/delay.h>
#217: FILE: arch/x86/kernel/paravirt.c:35:
+#include <asm/delay.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#222: FILE: arch/x86/kernel/paravirt.c:40:
+#include <asm/io.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#225: FILE: arch/x86/kernel/paravirt.c:43:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#233: FILE: arch/x86/kernel/paravirt.c:51:
+	printk(KERN_INFO "Booting paravirtualized kernel on %s\n",

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#242: FILE: arch/x86/kernel/paravirt.c:60:
+unsigned paravirt_patch_nop(void)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#247: FILE: arch/x86/kernel/paravirt.c:65:
+unsigned paravirt_patch_ignore(unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#247: FILE: arch/x86/kernel/paravirt.c:65:
+unsigned paravirt_patch_ignore(unsigned len)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#255: FILE: arch/x86/kernel/paravirt.c:73:
+} __attribute__((packed));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#257: FILE: arch/x86/kernel/paravirt.c:75:
+unsigned paravirt_patch_call(void *insnbuf,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#260: FILE: arch/x86/kernel/paravirt.c:78:
+			     unsigned len)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#263: FILE: arch/x86/kernel/paravirt.c:81:
+	unsigned long delta = (unsigned long)target - (addr+5);
 	                                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#277: FILE: arch/x86/kernel/paravirt.c:95:
+unsigned paravirt_patch_jmp(void *insnbuf, const void *target,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#278: FILE: arch/x86/kernel/paravirt.c:96:
+			    unsigned long addr, unsigned len)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#281: FILE: arch/x86/kernel/paravirt.c:99:
+	unsigned long delta = (unsigned long)target - (addr+5);
 	                                                   ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#296: FILE: arch/x86/kernel/paravirt.c:114:
+ * corresponding structure. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#310: FILE: arch/x86/kernel/paravirt.c:128:
+unsigned paravirt_patch_default(u8 type, u16 clobbers, void *insnbuf,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#311: FILE: arch/x86/kernel/paravirt.c:129:
+				unsigned long addr, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#314: FILE: arch/x86/kernel/paravirt.c:132:
+	unsigned ret;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!opfunc"
#316: FILE: arch/x86/kernel/paravirt.c:134:
+	if (opfunc == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#318: FILE: arch/x86/kernel/paravirt.c:136:
+		ret = paravirt_patch_insns(insnbuf, len, ud2a, ud2a+sizeof(ud2a));
 		                                                   ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#328: FILE: arch/x86/kernel/paravirt.c:146:
+		/* Otherwise call the function; assume target could
+		   clobber any caller-save reg */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#328: FILE: arch/x86/kernel/paravirt.c:146:
+		   clobber any caller-save reg */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#335: FILE: arch/x86/kernel/paravirt.c:153:
+unsigned paravirt_patch_insns(void *insnbuf, unsigned len,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#335: FILE: arch/x86/kernel/paravirt.c:153:
+unsigned paravirt_patch_insns(void *insnbuf, unsigned len,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#338: FILE: arch/x86/kernel/paravirt.c:156:
+	unsigned insn_len = end - start;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!start"
#340: FILE: arch/x86/kernel/paravirt.c:158:
+	if (insn_len > len || start == NULL)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#374: FILE: arch/x86/kernel/paravirt.c:192:
+extern void native_irq_enable_syscall_ret(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#422: FILE: arch/x86/kernel/paravirt.c:240:
+	BUG_ON(__get_cpu_var(paravirt_lazy_mode) != PARAVIRT_LAZY_NONE);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#423: FILE: arch/x86/kernel/paravirt.c:241:
+	BUG_ON(preemptible());

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#430: FILE: arch/x86/kernel/paravirt.c:248:
+	BUG_ON(__get_cpu_var(paravirt_lazy_mode) != mode);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#431: FILE: arch/x86/kernel/paravirt.c:249:
+	BUG_ON(preemptible());

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#622: FILE: arch/x86/kernel/paravirt.c:440:
+EXPORT_SYMBOL_GPL(pv_time_ops);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#623: FILE: arch/x86/kernel/paravirt.c:441:
+EXPORT_SYMBOL_GPL(pv_cpu_ops);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#624: FILE: arch/x86/kernel/paravirt.c:442:
+EXPORT_SYMBOL_GPL(pv_mmu_ops);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#625: FILE: arch/x86/kernel/paravirt.c:443:
+EXPORT_SYMBOL_GPL(pv_apic_ops);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#626: FILE: arch/x86/kernel/paravirt.c:444:
+EXPORT_SYMBOL_GPL(pv_info);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#627: FILE: arch/x86/kernel/paravirt.c:445:
+EXPORT_SYMBOL    (pv_irq_ops);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#627: FILE: arch/x86/kernel/paravirt.c:445:
+EXPORT_SYMBOL    (pv_irq_ops);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1112: FILE: arch/x86/kernel/paravirt_patch_32.c:1:
+#include <asm/paravirt.h>

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1129: FILE: arch/x86/kernel/paravirt_patch_32.c:18:
+unsigned native_patch(u8 type, u16 clobbers, void *ibuf,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1130: FILE: arch/x86/kernel/paravirt_patch_32.c:19:
+		      unsigned long addr, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1133: FILE: arch/x86/kernel/paravirt_patch_32.c:22:
+	unsigned ret;

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1135: FILE: arch/x86/kernel/paravirt_patch_32.c:24:
+#define PATCH_SITE(ops, x)					\
+		case PARAVIRT_PATCH(ops.x):			\
+			start = start_##ops##_##x;		\
+			end = end_##ops##_##x;			\
+			goto patch_site

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

ERROR:SPACING: space required before the open parenthesis '('
#1140: FILE: arch/x86/kernel/paravirt_patch_32.c:29:
+	switch(type) {

WARNING:INDENTED_LABEL: labels should not be indented
#1153: FILE: arch/x86/kernel/paravirt_patch_32.c:42:
+	patch_site:

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1170: FILE: arch/x86/kernel/paravirt_patch_64.c:1:
+#include <asm/paravirt.h>

WARNING:LONG_LINE_STRING: line length of 111 exceeds 100 columns
#1186: FILE: arch/x86/kernel/paravirt_patch_64.c:17:
+DEF_NATIVE(pv_cpu_ops, irq_enable_syscall_ret, "movq %gs:" __stringify(pda_oldrsp) ", %rsp; swapgs; sysretq;");

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1189: FILE: arch/x86/kernel/paravirt_patch_64.c:20:
+unsigned native_patch(u8 type, u16 clobbers, void *ibuf,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1190: FILE: arch/x86/kernel/paravirt_patch_64.c:21:
+		      unsigned long addr, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1193: FILE: arch/x86/kernel/paravirt_patch_64.c:24:
+	unsigned ret;

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1195: FILE: arch/x86/kernel/paravirt_patch_64.c:26:
+#define PATCH_SITE(ops, x)					\
+		case PARAVIRT_PATCH(ops.x):			\
+			start = start_##ops##_##x;		\
+			end = end_##ops##_##x;			\
+			goto patch_site

ERROR:SPACING: space required before the open parenthesis '('
#1200: FILE: arch/x86/kernel/paravirt_patch_64.c:31:
+	switch(type) {

WARNING:INDENTED_LABEL: labels should not be indented
#1215: FILE: arch/x86/kernel/paravirt_patch_64.c:46:
+	patch_site:

CHECK:BIT_MACRO: Prefer using the BIT macro
#1257: FILE: include/asm-x86/paravirt.h:11:
+#define CLBR_EAX  (1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#1258: FILE: include/asm-x86/paravirt.h:12:
+#define CLBR_ECX  (1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1259: FILE: include/asm-x86/paravirt.h:13:
+#define CLBR_EDX  (1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1262: FILE: include/asm-x86/paravirt.h:16:
+#define CLBR_RSI  (1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1263: FILE: include/asm-x86/paravirt.h:17:
+#define CLBR_RDI  (1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1264: FILE: include/asm-x86/paravirt.h:18:
+#define CLBR_R8   (1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1265: FILE: include/asm-x86/paravirt.h:19:
+#define CLBR_R9   (1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1266: FILE: include/asm-x86/paravirt.h:20:
+#define CLBR_R10  (1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1267: FILE: include/asm-x86/paravirt.h:21:
+#define CLBR_R11  (1 << 8)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1289: FILE: include/asm-x86/paravirt.h:42:
+typedef struct desc_ptr x86_descr_ptr;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1291: FILE: include/asm-x86/paravirt.h:44:
+typedef struct Xgt_desc_struct x86_descr_ptr;

CHECK:CAMELCASE: Avoid CamelCase: <Xgt_desc_struct>
#1291: FILE: include/asm-x86/paravirt.h:44:
+typedef struct Xgt_desc_struct x86_descr_ptr;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const x86_descr_ptr *' should also have an identifier name
#1312: FILE: include/asm-x86/paravirt.h:109:
+	void (*load_gdt)(const x86_descr_ptr *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const x86_descr_ptr *' should also have an identifier name
#1313: FILE: include/asm-x86/paravirt.h:110:
+	void (*load_idt)(const x86_descr_ptr *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'x86_descr_ptr *' should also have an identifier name
#1314: FILE: include/asm-x86/paravirt.h:111:
+	void (*store_gdt)(x86_descr_ptr *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'x86_descr_ptr *' should also have an identifier name
#1315: FILE: include/asm-x86/paravirt.h:112:
+	void (*store_idt)(x86_descr_ptr *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1327: FILE: include/asm-x86/paravirt.h:124:
+	void (*write_gdt_entry)(void *ptr, void *entry, unsigned type,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1328: FILE: include/asm-x86/paravirt.h:125:
+	void (*write_gdt_entry)(void *ptr, void *entry, unsigned type,
+					 unsigned size);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1328: FILE: include/asm-x86/paravirt.h:125:
+					 unsigned size);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pud_t' should also have an identifier name
#1388: FILE: include/asm-x86/paravirt.h:266:
+	unsigned long long (*pud_val)(pud_t);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1423: FILE: include/asm-x86/paravirt.h:340:
+#define DEF_NATIVE(ops, name, code) ^I^I^I^I^I\$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1434: FILE: include/asm-x86/paravirt.h:358:
+unsigned native_patch(u8 type, u16 clobbers, void *ibuf,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1435: FILE: include/asm-x86/paravirt.h:359:
+                      unsigned long addr, unsigned len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1435: FILE: include/asm-x86/paravirt.h:359:
+                      unsigned long addr, unsigned len);$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1435: FILE: include/asm-x86/paravirt.h:359:
+                      unsigned long addr, unsigned len);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1492: FILE: include/asm-x86/paravirt.h:436:
+#define PVOP_VCALL_ARGS			unsigned long __eax,__edx,__ecx
                        			                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1492: FILE: include/asm-x86/paravirt.h:436:
+#define PVOP_VCALL_ARGS			unsigned long __eax,__edx,__ecx
                        			                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1500: FILE: include/asm-x86/paravirt.h:444:
+#define PVOP_VCALL_ARGS		unsigned long __edi,__esi,__edx,__ecx
                        		                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1500: FILE: include/asm-x86/paravirt.h:444:
+#define PVOP_VCALL_ARGS		unsigned long __edi,__esi,__edx,__ecx
                        		                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1500: FILE: include/asm-x86/paravirt.h:444:
+#define PVOP_VCALL_ARGS		unsigned long __edi,__esi,__edx,__ecx
                        		                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1501: FILE: include/asm-x86/paravirt.h:445:
+#define PVOP_CALL_ARGS		PVOP_VCALL_ARGS, __eax

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1506: FILE: include/asm-x86/paravirt.h:450:
+#define PVOP_CALL_CLOBBERS	PVOP_VCALL_CLOBBERS, "=a" (__eax)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1508: FILE: include/asm-x86/paravirt.h:452:
+#define EXTRA_CLOBBERS	 , "r8", "r9", "r10", "r11"
                       	 ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1509: FILE: include/asm-x86/paravirt.h:453:
+#define VEXTRA_CLOBBERS	 , "rax", "r8", "r9", "r10", "r11"
                        	 ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1577: FILE: include/asm-x86/paravirt.h:509:
+^I__PVOP_CALL(rettype, op, "", "", "0" ((unsigned long)(arg1)), ^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1582: FILE: include/asm-x86/paravirt.h:513:
+^I__PVOP_VCALL(op, "", "", "0" ((unsigned long)(arg1)), ^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1655: FILE: include/asm-x86/paravirt.h:743:
+^Iunsigned long __aux; ^I^I^I^I\$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1665: FILE: include/asm-x86/paravirt.h:752:
 }
+static inline void load_gdt(const x86_descr_ptr *dtr)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1670: FILE: include/asm-x86/paravirt.h:756:
 }
+static inline void load_idt(const x86_descr_ptr *dtr)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1679: FILE: include/asm-x86/paravirt.h:764:
 }
+static inline void store_gdt(x86_descr_ptr *dtr)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1684: FILE: include/asm-x86/paravirt.h:768:
 }
+static inline void store_idt(x86_descr_ptr *dtr)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1703: FILE: include/asm-x86/paravirt.h:797:
+				   unsigned type, unsigned size)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1703: FILE: include/asm-x86/paravirt.h:797:
+				   unsigned type, unsigned size)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1764: FILE: include/asm-x86/paravirt.h:1052:
+	unsigned long long ret;
+	ret = PVOP_CALL1(unsigned long long, pv_mmu_ops.make_pte, val);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1771: FILE: include/asm-x86/paravirt.h:1059:
+	unsigned long long ret;
+	ret = PVOP_CALL1(unsigned long long, pv_mmu_ops.make_pmd, val);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1778: FILE: include/asm-x86/paravirt.h:1066:
+	unsigned long long ret;
+	ret = PVOP_CALL1(unsigned long long, pv_mmu_ops.make_pud, val);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1785: FILE: include/asm-x86/paravirt.h:1073:
+	unsigned long long ret;
+	ret = PVOP_CALL1(unsigned long long, pv_mmu_ops.make_pgd, val);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1867: FILE: include/asm-x86/paravirt.h:1253:
+#define PV_EXTRA_CLOBBERS $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1871: FILE: include/asm-x86/paravirt.h:1257:
+ * caller saved registers but the argument parameter */

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1874: FILE: include/asm-x86/paravirt.h:1260:
+#define PV_EXTRA_CLOBBERS EXTRA_CLOBBERS, "rcx" , "rdx"
                                                 ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1875: FILE: include/asm-x86/paravirt.h:1261:
+#define PV_VEXTRA_CLOBBERS EXTRA_CLOBBERS, "rdi", "rcx" , "rdx"
                                                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1905: FILE: include/asm-x86/paravirt.h:1285:
+		     : PV_FLAGS_ARG (f),

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1948: FILE: include/asm-x86/paravirt.h:1325:
+#define CLI_STI_CLOBBERS , "%eax"
                          ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1952: FILE: include/asm-x86/paravirt.h:1329:
+#define CLI_STI_CLOBBERS , "%rax", "%rdi", "%rsi", "%r8", "%r9", "%r10",\
                          ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1964: FILE: include/asm-x86/paravirt.h:1339:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1977: FILE: include/asm-x86/paravirt.h:1346:
 
+

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1978: FILE: include/asm-x86/paravirt.h:1347:
+#define CLI_STI_INPUT_ARGS						 \
+	,								 \
+	[paravirt_cli_type] "i" (PARAVIRT_PATCH(pv_irq_ops.irq_disable)),\
 	[paravirt_cli_opptr] "m" (pv_irq_ops.irq_disable),		\
+	[paravirt_sti_type] "i" (PARAVIRT_PATCH(pv_irq_ops.irq_enable)),\
 	[paravirt_sti_opptr] "m" (pv_irq_ops.irq_enable),		\
 	paravirt_clobber(CLBR_EAX)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1987: FILE: include/asm-x86/paravirt.h:1355:
 
+

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2018: FILE: include/asm-x86/paravirt.h:1389:
+#define PV_SAVE_REGS	pushq %rax; pushq %rdi; pushq %rcx; pushq %rdx
                     	      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2018: FILE: include/asm-x86/paravirt.h:1389:
+#define PV_SAVE_REGS	pushq %rax; pushq %rdi; pushq %rcx; pushq %rdx
                     	                  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2018: FILE: include/asm-x86/paravirt.h:1389:
+#define PV_SAVE_REGS	pushq %rax; pushq %rdi; pushq %rcx; pushq %rdx
                     	                              ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2018: FILE: include/asm-x86/paravirt.h:1389:
+#define PV_SAVE_REGS	pushq %rax; pushq %rdi; pushq %rcx; pushq %rdx
                     	                                          ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#2018: FILE: include/asm-x86/paravirt.h:1389:
+#define PV_SAVE_REGS	pushq %rax; pushq %rdi; pushq %rcx; pushq %rdx

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2019: FILE: include/asm-x86/paravirt.h:1390:
+#define PV_RESTORE_REGS popq %rdx; popq %rcx; popq %rdi; popq %rax
                              ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2019: FILE: include/asm-x86/paravirt.h:1390:
+#define PV_RESTORE_REGS popq %rdx; popq %rcx; popq %rdi; popq %rax
                                         ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2019: FILE: include/asm-x86/paravirt.h:1390:
+#define PV_RESTORE_REGS popq %rdx; popq %rcx; popq %rdi; popq %rax
                                                    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2019: FILE: include/asm-x86/paravirt.h:1390:
+#define PV_RESTORE_REGS popq %rdx; popq %rcx; popq %rdi; popq %rax
                                                               ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#2019: FILE: include/asm-x86/paravirt.h:1390:
+#define PV_RESTORE_REGS popq %rdx; popq %rcx; popq %rdi; popq %rax

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2023: FILE: include/asm-x86/paravirt.h:1394:
+#define PV_SAVE_REGS	pushl %eax; pushl %edi; pushl %ecx; pushl %edx
                     	      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2023: FILE: include/asm-x86/paravirt.h:1394:
+#define PV_SAVE_REGS	pushl %eax; pushl %edi; pushl %ecx; pushl %edx
                     	                  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2023: FILE: include/asm-x86/paravirt.h:1394:
+#define PV_SAVE_REGS	pushl %eax; pushl %edi; pushl %ecx; pushl %edx
                     	                              ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2023: FILE: include/asm-x86/paravirt.h:1394:
+#define PV_SAVE_REGS	pushl %eax; pushl %edi; pushl %ecx; pushl %edx
                     	                                          ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#2023: FILE: include/asm-x86/paravirt.h:1394:
+#define PV_SAVE_REGS	pushl %eax; pushl %edi; pushl %ecx; pushl %edx

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2024: FILE: include/asm-x86/paravirt.h:1395:
+#define PV_RESTORE_REGS popl %edx; popl %ecx; popl %edi; popl %eax
                              ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2024: FILE: include/asm-x86/paravirt.h:1395:
+#define PV_RESTORE_REGS popl %edx; popl %ecx; popl %edi; popl %eax
                                         ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2024: FILE: include/asm-x86/paravirt.h:1395:
+#define PV_RESTORE_REGS popl %edx; popl %ecx; popl %edi; popl %eax
                                                    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2024: FILE: include/asm-x86/paravirt.h:1395:
+#define PV_RESTORE_REGS popl %edx; popl %ecx; popl %edi; popl %eax
                                                               ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#2024: FILE: include/asm-x86/paravirt.h:1395:
+#define PV_RESTORE_REGS popl %edx; popl %ecx; popl %edi; popl %eax

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2064: FILE: include/asm-x86/paravirt.h:1431:
+		  pushq %rax; pushq %rdi; pushq %rcx; pushq %rdx;	\
 		        ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2064: FILE: include/asm-x86/paravirt.h:1431:
+		  pushq %rax; pushq %rdi; pushq %rcx; pushq %rdx;	\
 		                    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2064: FILE: include/asm-x86/paravirt.h:1431:
+		  pushq %rax; pushq %rdi; pushq %rcx; pushq %rdx;	\
 		                                ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2064: FILE: include/asm-x86/paravirt.h:1431:
+		  pushq %rax; pushq %rdi; pushq %rcx; pushq %rdx;	\
 		                                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#2065: FILE: include/asm-x86/paravirt.h:1432:
+		  call *pv_cpu_ops+PV_CPU_swapgs;			\
 		       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2065: FILE: include/asm-x86/paravirt.h:1432:
+		  call *pv_cpu_ops+PV_CPU_swapgs;			\
 		                  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2066: FILE: include/asm-x86/paravirt.h:1433:
+		  popq %rdx; popq %rcx; popq %rdi; popq %rax;		\
 		       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2066: FILE: include/asm-x86/paravirt.h:1433:
+		  popq %rdx; popq %rcx; popq %rdi; popq %rax;		\
 		                  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2066: FILE: include/asm-x86/paravirt.h:1433:
+		  popq %rdx; popq %rcx; popq %rdi; popq %rax;		\
 		                             ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2066: FILE: include/asm-x86/paravirt.h:1433:
+		  popq %rdx; popq %rcx; popq %rdi; popq %rax;		\
 		                                        ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#2069: FILE: include/asm-x86/paravirt.h:1436:
+#define GET_CR2_INTO_RCX					\
+	call *pv_mmu_ops+PV_MMU_read_cr2;			\
+	movq %rax, %rcx;					\
+	xorq %rax, %rax;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2069: FILE: include/asm-x86/paravirt.h:1436:
+#define GET_CR2_INTO_RCX					\
+	call *pv_mmu_ops+PV_MMU_read_cr2;			\
+	movq %rax, %rcx;					\
+	xorq %rax, %rax;

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#2070: FILE: include/asm-x86/paravirt.h:1437:
+	call *pv_mmu_ops+PV_MMU_read_cr2;			\
 	     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2070: FILE: include/asm-x86/paravirt.h:1437:
+	call *pv_mmu_ops+PV_MMU_read_cr2;			\
 	                ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2071: FILE: include/asm-x86/paravirt.h:1438:
+	movq %rax, %rcx;					\
 	     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2071: FILE: include/asm-x86/paravirt.h:1438:
+	movq %rax, %rcx;					\
 	           ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2072: FILE: include/asm-x86/paravirt.h:1439:
+	xorq %rax, %rax;
 	     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2072: FILE: include/asm-x86/paravirt.h:1439:
+	xorq %rax, %rax;
 	           ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000362472.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 30 errors, 73 warnings, 59 checks, 1465 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000362472.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
