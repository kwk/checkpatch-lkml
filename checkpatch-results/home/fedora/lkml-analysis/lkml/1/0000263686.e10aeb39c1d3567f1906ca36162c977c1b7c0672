CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#65: FILE: arch/x86/kernel/setup_32.c:231:
+	ramdisk_here = find_e820_area(0, end_of_lowmem, ramdisk_size,
+					 PAGE_SIZE);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#90: FILE: arch/x86/mm/init_32.c:60:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MISPLACED_INIT: __initdata should be placed after table_start
#91: FILE: arch/x86/mm/init_32.c:61:
+static unsigned long __initdata table_start;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:MISPLACED_INIT: __meminitdata should be placed after table_end
#92: FILE: arch/x86/mm/init_32.c:62:
+static unsigned long __meminitdata table_end;

WARNING:MISPLACED_INIT: __meminitdata should be placed after table_top
#93: FILE: arch/x86/mm/init_32.c:63:
+static unsigned long __meminitdata table_top;

WARNING:MISPLACED_INIT: __initdata should be placed after after_init_bootmem
#95: FILE: arch/x86/mm/init_32.c:65:
+static int __initdata after_init_bootmem;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'alloc_low_page', this function's name, in a string
#103: FILE: arch/x86/mm/init_32.c:73:
+		panic("alloc_low_page: ran out of memory");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:SPACING: No space is necessary after a cast
#136: FILE: arch/x86/mm/init_32.c:121:
+			page_table = (pte_t *) alloc_bootmem_pages(PAGE_SIZE);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#145: FILE: arch/x86/mm/init_32.c:128:
+			unsigned long phys;
+			page_table = (pte_t *)alloc_low_page(&phys);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#164: FILE: arch/x86/mm/init_32.c:196:
+	unsigned limit_pfn = end >> PAGE_SHIFT;

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#232: FILE: arch/x86/mm/init_32.c:761:
+	table_start = find_e820_area(start, max_pfn_mapped<<PAGE_SHIFT,
 	                                                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#233: FILE: arch/x86/mm/init_32.c:762:
+	table_start = find_e820_area(start, max_pfn_mapped<<PAGE_SHIFT,
+					tables, PAGE_SIZE);

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#239: FILE: arch/x86/mm/init_32.c:768:
+	table_top = table_start + (tables>>PAGE_SHIFT);
 	                                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#241: FILE: arch/x86/mm/init_32.c:770:
+	printk(KERN_DEBUG "kernel direct mapping tables up to %lx @ %lx-%lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#242: FILE: arch/x86/mm/init_32.c:771:
+	printk(KERN_DEBUG "kernel direct mapping tables up to %lx @ %lx-%lx\n",
+		end, table_start << PAGE_SHIFT,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#247: FILE: arch/x86/mm/init_32.c:776:
+unsigned long __init_refok init_memory_mapping(unsigned long start,
+						unsigned long end)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#260: FILE: arch/x86/mm/init_32.c:789:
+		printk(KERN_INFO "NX (Execute Disable) protection: active\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#282: FILE: arch/x86/mm/init_32.c:811:
+		reserve_early(table_start << PAGE_SHIFT,
+				 table_end << PAGE_SHIFT, "PGTABLE");

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#314: FILE: include/asm-x86/page_32.h:96:
+extern unsigned long init_memory_mapping(unsigned long start,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000263686.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 10 checks, 243 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000263686.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
