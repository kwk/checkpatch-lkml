WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
Implement the pioctl() system call.  This is used to support a number of AFS

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#232: FILE: fs/afs/internal.h:589:
+extern long afs_pioctl(struct dentry *, int, struct vice_ioctl *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#232: FILE: fs/afs/internal.h:589:
+extern long afs_pioctl(struct dentry *, int, struct vice_ioctl *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#232: FILE: fs/afs/internal.h:589:
+extern long afs_pioctl(struct dentry *, int, struct vice_ioctl *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vice_ioctl *' should also have an identifier name
#232: FILE: fs/afs/internal.h:589:
+extern long afs_pioctl(struct dentry *, int, struct vice_ioctl *);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#251: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#256: FILE: fs/afs/pioctl.c:1:
+/* Path-based I/O control

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#276: FILE: fs/afs/pioctl.c:21:
+		printk(KERN_DEBUG "AFS: Unsupported pioctl command %x\n", cmd);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#286: FILE: fs/compat_pioctl.c:1:
+/* Path-based I/O control, compatibility

CHECK:CAMELCASE: Avoid CamelCase: <compat_ViceIoctl>
#311: FILE: fs/compat_pioctl.c:26:
+		       struct compat_ViceIoctl __user *arg, int follow)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#392: FILE: fs/pioctl.c:1:
+/* Path-based I/O control

CHECK:CAMELCASE: Avoid CamelCase: <ViceIoctl>
#426: FILE: fs/pioctl.c:35:
+		struct ViceIoctl __user *, arg, int, follow)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#510: FILE: include/linux/compat.h:138:
+^Ishort ^I^Iin_size;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#511: FILE: include/linux/compat.h:139:
+^Ishort ^I^Iout_size;$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#543: FILE: include/linux/fs.h:1535:
+	long (*pioctl)(struct dentry *, int, struct vice_ioctl *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#543: FILE: include/linux/fs.h:1535:
+	long (*pioctl)(struct dentry *, int, struct vice_ioctl *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vice_ioctl *' should also have an identifier name
#543: FILE: include/linux/fs.h:1535:
+	long (*pioctl)(struct dentry *, int, struct vice_ioctl *);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#553: FILE: include/linux/pioctl.h:1:
+/* Path-based I/O control command listing

ERROR:POINTER_LOCATION: "foo __user	bar" should be "foo __user bar"
#578: FILE: include/linux/pioctl.h:26:
+	caddr_t __user	in;		/* input/argument buffer (or NULL) */

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo __user	bar" should be "foo __user bar"
#579: FILE: include/linux/pioctl.h:27:
+	caddr_t __user	out;		/* output/reply buffer (or NULL) */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#580: FILE: include/linux/pioctl.h:28:
+^Ishort ^I^Iin_size;^I/* size of input buffer (or 0) */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#581: FILE: include/linux/pioctl.h:29:
+^Ishort ^I^Iout_size;^I/* size of output buffer (or 0) */$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#594: FILE: include/linux/pioctl.h:42:
+extern long vfs_pioctl(struct dentry *, int, struct vice_ioctl *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#594: FILE: include/linux/pioctl.h:42:
+extern long vfs_pioctl(struct dentry *, int, struct vice_ioctl *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#594: FILE: include/linux/pioctl.h:42:
+extern long vfs_pioctl(struct dentry *, int, struct vice_ioctl *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vice_ioctl *' should also have an identifier name
#594: FILE: include/linux/pioctl.h:42:
+extern long vfs_pioctl(struct dentry *, int, struct vice_ioctl *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000108995.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 20 warnings, 4 checks, 453 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000108995.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
