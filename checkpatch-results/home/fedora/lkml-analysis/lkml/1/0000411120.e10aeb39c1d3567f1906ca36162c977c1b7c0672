CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#179: FILE: Documentation/pps/timepps.h:214:
+	ret = syscall(__NR_time_pps_fetch, handle, &__ppsinfobuf,
+			timeout ? &__timeout : NULL);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pps_source[i].params
#238: FILE: drivers/pps/kapi.c:90:
+	memset(&(pps_source[i].params), 0, sizeof(struct pps_kparams));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_WHITESPACE: trailing whitespace
#272: FILE: drivers/pps/kapi.c:188:
+^I^Ipps_dbg("capture assert seq #%u for source %d", $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#287: FILE: drivers/pps/kapi.c:200:
+^I^Ipps_dbg("capture clear seq #%u for source %d", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#338: FILE: drivers/pps/pps.c:285:
+asmlinkage long sys_time_pps_fetch(int source, struct pps_kinfo __user *info, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#339: FILE: drivers/pps/pps.c:286:
+asmlinkage long sys_time_pps_fetch(int source, struct pps_kinfo __user *info, 
+					const struct pps_ktime __user *timeout)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#445: FILE: include/linux/pps.h:54:
+^I__u32 clear_sequence; ^I^I/* seq. num. of clear event */$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#473: FILE: include/linux/pps.h:161:
+	volatile uint32_t assert_sequence;	/* PPS' assert event seq # */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#473: FILE: include/linux/pps.h:161:
+	volatile uint32_t assert_sequence;	/* PPS' assert event seq # */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#474: FILE: include/linux/pps.h:162:
+	volatile uint32_t clear_sequence;	/* PPS' clear event seq # */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#474: FILE: include/linux/pps.h:162:
+	volatile uint32_t clear_sequence;	/* PPS' clear event seq # */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#475: FILE: include/linux/pps.h:163:
+	volatile struct pps_ktime assert_tu;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#476: FILE: include/linux/pps.h:164:
+	volatile struct pps_ktime clear_tu;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#498: FILE: include/linux/syscalls.h:622:
+asmlinkage long sys_time_pps_fetch(int source, struct pps_kinfo __user *info,
+				       const struct pps_ktime __user *timeout);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000411120.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 5 warnings, 6 checks, 393 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000411120.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
