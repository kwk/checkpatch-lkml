WARNING:TYPO_SPELLING: 'analagous' may be misspelled - perhaps 'analogous'?
#85: 
Damn, this is complicated crap.  The analagous task in real life would
                                     ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#129: FILE: arch/x86/kvm/x86.c:3588:
+	struct cpu_tsc_vars *cv = &__get_cpu_var(cpu_tsc_vars);
+	WARN_ON(!irqs_disabled());

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#133: FILE: arch/x86/kvm/x86.c:3592:
+		struct cpufreq_freqs *freq = data;
+		cv->tsc_khz = freq->new;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#186: FILE: arch/x86/kvm/x86.c:3631:
+	cv->tsc_generation++; // XXX needed? */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TRAILING_SEMICOLON: trailing semicolon indicates no statements, indent implies otherwise
#208: FILE: arch/x86/kvm/x86.c:3648:
+	while (work_on_cpu(tsc_base_cpu, resync, NULL) != 0);
+		/* do nothing */

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#208: FILE: arch/x86/kvm/x86.c:3648:
+	while (work_on_cpu(tsc_base_cpu, resync, NULL) != 0);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000034471.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 5 warnings, 0 checks, 229 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000034471.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
