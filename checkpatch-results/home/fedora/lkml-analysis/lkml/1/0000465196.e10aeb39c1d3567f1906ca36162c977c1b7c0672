WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
Generalise the handling of MTD-specific superblocks so that JFFS2 and ROMFS can

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#33: 
Signed-Off-By: David Howells <dhowells@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#57: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#62: FILE: drivers/mtd/mtdsuper.c:1:
+/* MTD-based superblock management

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#186: FILE: drivers/mtd/mtdsuper.c:125:
+	struct nameidata nd;
 	                 ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#197: FILE: drivers/mtd/mtdsuper.c:136:
+	 * in the kernel. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#210: FILE: drivers/mtd/mtdsuper.c:149:
+						return get_sb_mtd_aux(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#219: FILE: drivers/mtd/mtdsuper.c:158:
+			printk(KERN_NOTICE "MTD:"

WARNING:SPLIT_STRING: quoted string split across lines
#220: FILE: drivers/mtd/mtdsuper.c:159:
+			printk(KERN_NOTICE "MTD:"
+			       " MTD device with name \"%s\" not found.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#227: FILE: drivers/mtd/mtdsuper.c:166:
+			mtdnr = simple_strtoul(dev_name + 3, &endptr, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#242: FILE: drivers/mtd/mtdsuper.c:181:
+	ret = path_lookup(dev_name, LOOKUP_FOLLOW, &nd);
 	                                            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#245: FILE: drivers/mtd/mtdsuper.c:184:
+	      ret, nd.dentry ? nd.dentry->d_inode : NULL);
 	           ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#245: FILE: drivers/mtd/mtdsuper.c:184:
+	      ret, nd.dentry ? nd.dentry->d_inode : NULL);
 	                       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#252: FILE: drivers/mtd/mtdsuper.c:191:
+	if (!S_ISBLK(nd.dentry->d_inode->i_mode))
 	             ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#255: FILE: drivers/mtd/mtdsuper.c:194:
+	if (nd.mnt->mnt_flags & MNT_NODEV) {
 	    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#260: FILE: drivers/mtd/mtdsuper.c:199:
+	if (imajor(nd.dentry->d_inode) != MTD_BLOCK_MAJOR)
 	           ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#263: FILE: drivers/mtd/mtdsuper.c:202:
+	mtdnr = iminor(nd.dentry->d_inode);
 	               ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#264: FILE: drivers/mtd/mtdsuper.c:203:
+	path_release(&nd);
 	              ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#271: FILE: drivers/mtd/mtdsuper.c:210:
+		printk(KERN_NOTICE

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#275: FILE: drivers/mtd/mtdsuper.c:214:
+	path_release(&nd);
 	              ^^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#278: FILE: drivers/mtd/mtdsuper.c:217:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#280: FILE: drivers/mtd/mtdsuper.c:219:
+EXPORT_SYMBOL_GPL(get_sb_mtd);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#292: FILE: drivers/mtd/mtdsuper.c:231:
+EXPORT_SYMBOL_GPL(kill_mtd_super);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#354: FILE: fs/jffs2/super.c:90:
+	D1(printk(KERN_DEBUG "jffs2_get_sb_mtd():"

WARNING:SPLIT_STRING: quoted string split across lines
#355: FILE: fs/jffs2/super.c:91:
+	D1(printk(KERN_DEBUG "jffs2_get_sb_mtd():"
+		  " New superblock for device %d (\"%s\")\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#385: FILE: fs/jffs2/super.c:103:
+	 * be done later */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#555: FILE: include/linux/mtd/super.h:1:
+/* MTD-based superblock handling

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#575: FILE: include/linux/mtd/super.h:21:
+extern int get_sb_mtd(struct file_system_type *fs_type, int flags,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#579: FILE: include/linux/mtd/super.h:25:
+extern void kill_mtd_super(struct super_block *sb);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#581: FILE: include/linux/mtd/super.h:27:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000465196.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 25 warnings, 5 checks, 512 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000465196.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
