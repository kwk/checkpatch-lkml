WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#155: FILE: fs/fcntl.c:183:
+		error = fasync_change(fd, filp, (arg & FASYNC) != 0);
 		                          ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#168: FILE: fs/fcntl.c:195:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#174: FILE: fs/fcntl.c:201:
+int fasync_change(int fd, struct file *filp, int on)
                                        ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!filp->f_op->fasync"
#179: FILE: fs/fcntl.c:206:
+	if (filp->f_op->fasync == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'on == 0'
#184: FILE: fs/fcntl.c:211:
+	if (((filp->f_flags & FASYNC) == 0) == (on == 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#193: FILE: fs/fcntl.c:220:
+	ret = filp->f_op->fasync(fd, filp, on);
 	                             ^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#198: FILE: fs/fcntl.c:225:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#200: FILE: fs/fcntl.c:227:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#240: FILE: fs/ioctl.c:405:
+		return fasync_change(fd, filp, on);
 		                         ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#303: FILE: include/linux/fs.h:872:
+extern int fasync_change(int fd, struct file *filp, int on);
                                               ^^^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#303: FILE: include/linux/fs.h:872:
+}
+extern int fasync_change(int fd, struct file *filp, int on);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#303: FILE: include/linux/fs.h:872:
+extern int fasync_change(int fd, struct file *filp, int on);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000183927.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 7 checks, 203 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000183927.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
