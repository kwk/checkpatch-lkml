WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
	struct map *map = map_groups__find_by_name(kmaps, MAP__VARIABLE, "[kernel.kallsyms]");

WARNING:TYPO_SPELLING: 'chello' may be misspelled - perhaps 'cello'?
#70: 
Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
                                 ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: braces {} should be used on all arms of this statement
#140: FILE: tools/perf/util/map.c:113:
+		if (self->dso->has_build_id) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#148: FILE: tools/perf/util/map.c:121:
+		} else

WARNING:SPLIT_STRING: quoted string split across lines
#160: FILE: tools/perf/util/map.c:133:
+			pr_warning("%.*s was updated, restart the long "
+				   "running apps that use it!\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#164: FILE: tools/perf/util/map.c:137:
+			pr_warning("no symbols found in %s, maybe install "
+				   "a debug package?\n", name);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#236: FILE: tools/perf/util/symbol.c:188:
+			self->symbols[i] = self->symbol_names[i] = RB_ROOT;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "p"
#261: FILE: tools/perf/util/symbol.c:282:
+	while (*p != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#275: FILE: tools/perf/util/symbol.c:296:
+	struct rb_node *nd;
 	                ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#277: FILE: tools/perf/util/symbol.c:298:
+	for (nd = rb_first(source); nd; nd = rb_next(nd)) {
 	     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#277: FILE: tools/perf/util/symbol.c:298:
+	for (nd = rb_first(source); nd; nd = rb_next(nd)) {
 	                            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#277: FILE: tools/perf/util/symbol.c:298:
+	for (nd = rb_first(source); nd; nd = rb_next(nd)) {
 	                                ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#277: FILE: tools/perf/util/symbol.c:298:
+	for (nd = rb_first(source); nd; nd = rb_next(nd)) {
 	                                             ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#278: FILE: tools/perf/util/symbol.c:299:
+		struct symbol *pos = rb_entry(nd, struct symbol, rb_node);
 		                              ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#279: FILE: tools/perf/util/symbol.c:300:
+		struct symbol *pos = rb_entry(nd, struct symbol, rb_node);
+		symbols__insert_by_name(self, pos);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!self"
#287: FILE: tools/perf/util/symbol.c:308:
+	if (self == NULL)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#361: FILE: tools/perf/util/symbol.c:1318:
+	for (nd = rb_first(&self->maps[type]); nd; nd = rb_next(nd)) {
 	     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#361: FILE: tools/perf/util/symbol.c:1318:
+	for (nd = rb_first(&self->maps[type]); nd; nd = rb_next(nd)) {
 	                                       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#361: FILE: tools/perf/util/symbol.c:1318:
+	for (nd = rb_first(&self->maps[type]); nd; nd = rb_next(nd)) {
 	                                           ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#361: FILE: tools/perf/util/symbol.c:1318:
+	for (nd = rb_first(&self->maps[type]); nd; nd = rb_next(nd)) {
 	                                                        ^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000035779.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 15 warnings, 5 checks, 327 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000035779.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
