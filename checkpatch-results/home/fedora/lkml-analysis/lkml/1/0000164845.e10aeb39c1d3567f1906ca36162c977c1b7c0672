ERROR:TRAILING_WHITESPACE: trailing whitespace
#85: FILE: block/blktrace.c:41:
+static void trace_note(struct blk_trace *bt, sector_t sector, pid_t pid, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#96: FILE: block/blktrace.c:53:
+			unsigned long *sequence = per_cpu_ptr(bt->sequence, cpu);
+			t->sequence = ++(*sequence);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Blktrace_running>
#165: FILE: block/blktrace.c:832:
+	if (unlikely(bt->trace_state != Blktrace_running))

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: space required before the open parenthesis '('
#246: FILE: fs/gfs2/glock.c:1698:
+	switch(state) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#274: FILE: fs/gfs2/glock.c:1726:
+	if (likely(test_bit(GLF_TRACE_INITIAL, &gl->gl_flags)))
+                        cur_state = glock_trace_state(gl->gl_state);

ERROR:CODE_INDENT: code indent should use tabs where possible
#275: FILE: fs/gfs2/glock.c:1727:
+                        cur_state = glock_trace_state(gl->gl_state);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: fs/gfs2/glock.c:1727:
+                        cur_state = glock_trace_state(gl->gl_state);$

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#338: FILE: fs/gfs2/glock.c:1797:
+	WARN_ON(rv && rv != -ENOSYS);

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#340: FILE: fs/gfs2/glock.c:1799:
+	WARN_ON(rv && rv != -ENOSYS);

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#342: FILE: fs/gfs2/glock.c:1801:
+	WARN_ON(rv && rv != -ENOSYS);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#394: FILE: include/linux/blktrace_api.h:126:
+^IBLK_GLS_NONE = 1, ^I/* i.e. invalid */$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#423: FILE: include/linux/blktrace_api.h:219:
+extern void blk_add_trace_glock(struct block_device *bdev, u32 gltype,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#439: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#444: FILE: include/trace/gfs2.h:1:
+#ifndef _TRACE_GFS2_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#452: FILE: include/trace/gfs2.h:9:
+DECLARE_TRACE(gfs2_glock_state_change,
+	TPPROTO(struct gfs2_glock *gl, unsigned int new_state),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#456: FILE: include/trace/gfs2.h:13:
+DECLARE_TRACE(gfs2_glock_put,
+	TPPROTO(struct gfs2_glock *gl),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#460: FILE: include/trace/gfs2.h:17:
+DECLARE_TRACE(gfs2_demote_rq,
+	TPPROTO(struct gfs2_glock *gl),

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000164845.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 9 warnings, 5 checks, 347 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000164845.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
