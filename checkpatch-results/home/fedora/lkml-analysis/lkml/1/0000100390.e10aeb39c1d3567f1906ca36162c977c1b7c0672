WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#58: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#70: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:1:
+/*****************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#71: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:2:
+/*****************************************************************************
+* Copyright 2003 - 2008 Broadcom Corporation.  All rights reserved.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#86: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:17:
+/**
+*  @file    tmrHw.c

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_ASSERT>
#104: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:35:
+#define tmrHw_ASSERT(a)                     if (!(a)) *(char *)0 = 0

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#104: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:35:
+#define tmrHw_ASSERT(a)                     if (!(a)) *(char *)0 = 0

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_MILLISEC_PER_SEC>
#105: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:36:
+#define tmrHw_MILLISEC_PER_SEC              (1000)

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_LOW_1_RESOLUTION_COUNT>
#107: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:38:
+#define tmrHw_LOW_1_RESOLUTION_COUNT        (tmrHw_LOW_RESOLUTION_CLOCK / tmrHw_MILLISEC_PER_SEC)

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_LOW_RESOLUTION_CLOCK>
#107: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:38:
+#define tmrHw_LOW_1_RESOLUTION_COUNT        (tmrHw_LOW_RESOLUTION_CLOCK / tmrHw_MILLISEC_PER_SEC)

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_LOW_1_MAX_MILLISEC>
#108: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:39:
+#define tmrHw_LOW_1_MAX_MILLISEC            (0xFFFFFFFF / tmrHw_LOW_1_RESOLUTION_COUNT)

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_LOW_16_RESOLUTION_COUNT>
#109: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:40:
+#define tmrHw_LOW_16_RESOLUTION_COUNT       (tmrHw_LOW_1_RESOLUTION_COUNT / 16)

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_LOW_16_MAX_MILLISEC>
#110: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:41:
+#define tmrHw_LOW_16_MAX_MILLISEC           (0xFFFFFFFF / tmrHw_LOW_16_RESOLUTION_COUNT)

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_LOW_256_RESOLUTION_COUNT>
#111: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:42:
+#define tmrHw_LOW_256_RESOLUTION_COUNT      (tmrHw_LOW_1_RESOLUTION_COUNT / 256)

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_LOW_256_MAX_MILLISEC>
#112: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:43:
+#define tmrHw_LOW_256_MAX_MILLISEC          (0xFFFFFFFF / tmrHw_LOW_256_RESOLUTION_COUNT)

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_HIGH_1_RESOLUTION_COUNT>
#114: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:45:
+#define tmrHw_HIGH_1_RESOLUTION_COUNT       (tmrHw_HIGH_RESOLUTION_CLOCK / tmrHw_MILLISEC_PER_SEC)

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_HIGH_RESOLUTION_CLOCK>
#114: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:45:
+#define tmrHw_HIGH_1_RESOLUTION_COUNT       (tmrHw_HIGH_RESOLUTION_CLOCK / tmrHw_MILLISEC_PER_SEC)

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_HIGH_1_MAX_MILLISEC>
#115: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:46:
+#define tmrHw_HIGH_1_MAX_MILLISEC           (0xFFFFFFFF / tmrHw_HIGH_1_RESOLUTION_COUNT)

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_HIGH_16_RESOLUTION_COUNT>
#116: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:47:
+#define tmrHw_HIGH_16_RESOLUTION_COUNT      (tmrHw_HIGH_1_RESOLUTION_COUNT / 16)

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_HIGH_16_MAX_MILLISEC>
#117: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:48:
+#define tmrHw_HIGH_16_MAX_MILLISEC          (0xFFFFFFFF / tmrHw_HIGH_16_RESOLUTION_COUNT)

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_HIGH_256_RESOLUTION_COUNT>
#118: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:49:
+#define tmrHw_HIGH_256_RESOLUTION_COUNT     (tmrHw_HIGH_1_RESOLUTION_COUNT / 256)

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_HIGH_256_MAX_MILLISEC>
#119: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:50:
+#define tmrHw_HIGH_256_MAX_MILLISEC         (0xFFFFFFFF / tmrHw_HIGH_256_RESOLUTION_COUNT)

CHECK:CAMELCASE: Avoid CamelCase: <ResetTimer>
#121: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:52:
+static void ResetTimer(tmrHw_ID_t timerId)

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_ID_t>
#121: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:52:
+static void ResetTimer(tmrHw_ID_t timerId)

CHECK:CAMELCASE: Avoid CamelCase: <timerId>
#121: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:52:
+static void ResetTimer(tmrHw_ID_t timerId)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:53:
+    __attribute__ ((section(".aramtext")));$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".aramtext") over __attribute__((section(".aramtext")))
#122: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:53:
+    __attribute__ ((section(".aramtext")));

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_divide>
#123: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:54:
+static int tmrHw_divide(int num, int denom)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:55:
+    __attribute__ ((section(".aramtext")));$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".aramtext") over __attribute__((section(".aramtext")))
#124: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:55:
+    __attribute__ ((section(".aramtext")));

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#128: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:59:
+/**
+*  @brief   Get timer capability

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_getTimerCapability>
#136: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:67:
+uint32_t tmrHw_getTimerCapability(tmrHw_ID_t timerId,  /*  [ IN ] Timer Id */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#136: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:67:
+uint32_t tmrHw_getTimerCapability(tmrHw_ID_t timerId,  /*  [ IN ] Timer Id */
+                                 tmrHw_CAPABILITY_e capability /*  [ IN ] Timer capability */
+) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:68:
+                                 tmrHw_CAPABILITY_e capability /*  [ IN ] Timer capability */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:68:
+                                 tmrHw_CAPABILITY_e capability /*  [ IN ] Timer capability */$

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_CAPABILITY_e>
#137: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:68:
+                                 tmrHw_CAPABILITY_e capability /*  [ IN ] Timer capability */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:70:
+       switch (capability) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:71:
+       case tmrHw_CAPABILITY_CLOCK:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:72:
+               return (timerId <=$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:72:
+               return (timerId <=$

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:73:
+                       1) ? tmrHw_LOW_RESOLUTION_CLOCK :$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:73:
+                       1) ? tmrHw_LOW_RESOLUTION_CLOCK :$

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:74:
+                   tmrHw_HIGH_RESOLUTION_CLOCK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:74:
+                   tmrHw_HIGH_RESOLUTION_CLOCK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:75:
+       case tmrHw_CAPABILITY_RESOLUTION:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:76:
+               return 32;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:76:
+               return 32;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:78:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:78:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:79:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:80:
+       return 0;$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#154: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:85:
+/**
+*  @brief   Resets a timer

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#162: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:93:
+static void ResetTimer(tmrHw_ID_t timerId      /*  [ IN ] Timer Id */
+) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:96:
+       pTmrHw[timerId].LoadValue = 0;$

CHECK:CAMELCASE: Avoid CamelCase: <pTmrHw>
#165: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:96:
+       pTmrHw[timerId].LoadValue = 0;

CHECK:CAMELCASE: Avoid CamelCase: <LoadValue>
#165: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:96:
+       pTmrHw[timerId].LoadValue = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:97:
+       pTmrHw[timerId].CurrentValue = 0xFFFFFFFF;$

CHECK:CAMELCASE: Avoid CamelCase: <CurrentValue>
#166: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:97:
+       pTmrHw[timerId].CurrentValue = 0xFFFFFFFF;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:98:
+       pTmrHw[timerId].Control = 0;$

CHECK:CAMELCASE: Avoid CamelCase: <Control>
#167: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:98:
+       pTmrHw[timerId].Control = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:99:
+       pTmrHw[timerId].BackgroundLoad = 0;$

CHECK:CAMELCASE: Avoid CamelCase: <BackgroundLoad>
#168: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:99:
+       pTmrHw[timerId].BackgroundLoad = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:101:
+       pTmrHw[timerId].Control |= tmrHw_CONTROL_32BIT;$

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_CONTROL_32BIT>
#170: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:101:
+       pTmrHw[timerId].Control |= tmrHw_CONTROL_32BIT;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:103:
+       if (pTmrHw[timerId].RawInterruptStatus) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#172: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:103:
+       if (pTmrHw[timerId].RawInterruptStatus) {
+               pTmrHw[timerId].InterruptClear = 0xFFFFFFFF;

CHECK:CAMELCASE: Avoid CamelCase: <RawInterruptStatus>
#172: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:103:
+       if (pTmrHw[timerId].RawInterruptStatus) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#172: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:103:
+       if (pTmrHw[timerId].RawInterruptStatus) {
+               pTmrHw[timerId].InterruptClear = 0xFFFFFFFF;
+       }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:104:
+               pTmrHw[timerId].InterruptClear = 0xFFFFFFFF;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:104:
+               pTmrHw[timerId].InterruptClear = 0xFFFFFFFF;$

CHECK:CAMELCASE: Avoid CamelCase: <InterruptClear>
#173: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:104:
+               pTmrHw[timerId].InterruptClear = 0xFFFFFFFF;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:105:
+       }$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#179: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:110:
+/**
+*  @brief   Sets counter value for an interval in ms

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_INTERVAL_t>
#186: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:117:
+static tmrHw_INTERVAL_t SetTimerPeriod(tmrHw_ID_t timerId,     /*  [ IN ] Timer Id */

CHECK:CAMELCASE: Avoid CamelCase: <SetTimerPeriod>
#186: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:117:
+static tmrHw_INTERVAL_t SetTimerPeriod(tmrHw_ID_t timerId,     /*  [ IN ] Timer Id */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#186: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:117:
+static tmrHw_INTERVAL_t SetTimerPeriod(tmrHw_ID_t timerId,     /*  [ IN ] Timer Id */
+                                      tmrHw_INTERVAL_t msec    /*  [ IN ] Interval in milli-second */
+) {

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#187: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:118:
+                                      tmrHw_INTERVAL_t msec    /*  [ IN ] Interval in milli-second */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:118:
+                                      tmrHw_INTERVAL_t msec    /*  [ IN ] Interval in milli-second */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:118:
+                                      tmrHw_INTERVAL_t msec    /*  [ IN ] Interval in milli-second */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:120:
+       uint32_t scale = 0;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#189: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:120:
+       uint32_t scale = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:121:
+       uint32_t count = 0;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#190: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:121:
+       uint32_t count = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:123:
+       if (timerId == 0 || timerId == 1) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#192: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:123:
+       if (timerId == 0 || timerId == 1) {
+               if (msec <= tmrHw_LOW_1_MAX_MILLISEC) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:124:
+               if (msec <= tmrHw_LOW_1_MAX_MILLISEC) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:124:
+               if (msec <= tmrHw_LOW_1_MAX_MILLISEC) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#193: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:124:
+               if (msec <= tmrHw_LOW_1_MAX_MILLISEC) {
+                       pTmrHw[timerId].Control |= tmrHw_CONTROL_PRESCALE_1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:125:
+                       pTmrHw[timerId].Control |= tmrHw_CONTROL_PRESCALE_1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:125:
+                       pTmrHw[timerId].Control |= tmrHw_CONTROL_PRESCALE_1;$

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_CONTROL_PRESCALE_1>
#194: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:125:
+                       pTmrHw[timerId].Control |= tmrHw_CONTROL_PRESCALE_1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:126:
+                       scale = tmrHw_LOW_1_RESOLUTION_COUNT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:126:
+                       scale = tmrHw_LOW_1_RESOLUTION_COUNT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#196: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:127:
+               } else if (msec <= tmrHw_LOW_16_MAX_MILLISEC) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:127:
+               } else if (msec <= tmrHw_LOW_16_MAX_MILLISEC) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#196: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:127:
+               } else if (msec <= tmrHw_LOW_16_MAX_MILLISEC) {
+                       pTmrHw[timerId].Control |= tmrHw_CONTROL_PRESCALE_16;

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:128:
+                       pTmrHw[timerId].Control |= tmrHw_CONTROL_PRESCALE_16;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:128:
+                       pTmrHw[timerId].Control |= tmrHw_CONTROL_PRESCALE_16;$

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_CONTROL_PRESCALE_16>
#197: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:128:
+                       pTmrHw[timerId].Control |= tmrHw_CONTROL_PRESCALE_16;

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:129:
+                       scale = tmrHw_LOW_16_RESOLUTION_COUNT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:129:
+                       scale = tmrHw_LOW_16_RESOLUTION_COUNT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:130:
+               } else if (msec <= tmrHw_LOW_256_MAX_MILLISEC) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:130:
+               } else if (msec <= tmrHw_LOW_256_MAX_MILLISEC) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#199: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:130:
+               } else if (msec <= tmrHw_LOW_256_MAX_MILLISEC) {
+                       pTmrHw[timerId].Control |= tmrHw_CONTROL_PRESCALE_256;

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:131:
+                       pTmrHw[timerId].Control |= tmrHw_CONTROL_PRESCALE_256;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:131:
+                       pTmrHw[timerId].Control |= tmrHw_CONTROL_PRESCALE_256;$

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_CONTROL_PRESCALE_256>
#200: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:131:
+                       pTmrHw[timerId].Control |= tmrHw_CONTROL_PRESCALE_256;

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:132:
+                       scale = tmrHw_LOW_256_RESOLUTION_COUNT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:132:
+                       scale = tmrHw_LOW_256_RESOLUTION_COUNT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:133:
+               } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:133:
+               } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#202: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:133:
+               } else {
+                       return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:134:
+                       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:134:
+                       return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:135:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:135:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:137:
+               count = msec * scale;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:137:
+               count = msec * scale;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:138:
+               /* Set counter value */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:139:
+               pTmrHw[timerId].LoadValue = count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:139:
+               pTmrHw[timerId].LoadValue = count;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:140:
+               pTmrHw[timerId].BackgroundLoad = count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:140:
+               pTmrHw[timerId].BackgroundLoad = count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:142:
+       } else if (timerId == 2 || timerId == 3) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#211: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:142:
+       } else if (timerId == 2 || timerId == 3) {
+               if (msec <= tmrHw_HIGH_1_MAX_MILLISEC) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:143:
+               if (msec <= tmrHw_HIGH_1_MAX_MILLISEC) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:143:
+               if (msec <= tmrHw_HIGH_1_MAX_MILLISEC) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#212: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:143:
+               if (msec <= tmrHw_HIGH_1_MAX_MILLISEC) {
+                       pTmrHw[timerId].Control |= tmrHw_CONTROL_PRESCALE_1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:144:
+                       pTmrHw[timerId].Control |= tmrHw_CONTROL_PRESCALE_1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:144:
+                       pTmrHw[timerId].Control |= tmrHw_CONTROL_PRESCALE_1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:145:
+                       scale = tmrHw_HIGH_1_RESOLUTION_COUNT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:145:
+                       scale = tmrHw_HIGH_1_RESOLUTION_COUNT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:146:
+               } else if (msec <= tmrHw_HIGH_16_MAX_MILLISEC) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:146:
+               } else if (msec <= tmrHw_HIGH_16_MAX_MILLISEC) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#215: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:146:
+               } else if (msec <= tmrHw_HIGH_16_MAX_MILLISEC) {
+                       pTmrHw[timerId].Control |= tmrHw_CONTROL_PRESCALE_16;

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:147:
+                       pTmrHw[timerId].Control |= tmrHw_CONTROL_PRESCALE_16;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:147:
+                       pTmrHw[timerId].Control |= tmrHw_CONTROL_PRESCALE_16;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:148:
+                       scale = tmrHw_HIGH_16_RESOLUTION_COUNT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:148:
+                       scale = tmrHw_HIGH_16_RESOLUTION_COUNT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:149:
+               } else if (msec <= tmrHw_HIGH_256_MAX_MILLISEC) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:149:
+               } else if (msec <= tmrHw_HIGH_256_MAX_MILLISEC) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#218: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:149:
+               } else if (msec <= tmrHw_HIGH_256_MAX_MILLISEC) {
+                       pTmrHw[timerId].Control |= tmrHw_CONTROL_PRESCALE_256;

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:150:
+                       pTmrHw[timerId].Control |= tmrHw_CONTROL_PRESCALE_256;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:150:
+                       pTmrHw[timerId].Control |= tmrHw_CONTROL_PRESCALE_256;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:151:
+                       scale = tmrHw_HIGH_256_RESOLUTION_COUNT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:151:
+                       scale = tmrHw_HIGH_256_RESOLUTION_COUNT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:152:
+               } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:152:
+               } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#221: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:152:
+               } else {
+                       return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:153:
+                       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:153:
+                       return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:154:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:154:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:156:
+               count = msec * scale;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:156:
+               count = msec * scale;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:157:
+               /* Set counter value */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:158:
+               pTmrHw[timerId].LoadValue = count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:158:
+               pTmrHw[timerId].LoadValue = count;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#228: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:159:
+               pTmrHw[timerId].BackgroundLoad = count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:159:
+               pTmrHw[timerId].BackgroundLoad = count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:160:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:161:
+       return count / scale;$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#235: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:166:
+/**
+*  @brief   Configures a periodic timer in terms of timer interrupt rate

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_RATE_t>
#245: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:176:
+tmrHw_RATE_t tmrHw_setPeriodicTimerRate(tmrHw_ID_t timerId,    /*  [ IN ] Timer Id */

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_setPeriodicTimerRate>
#245: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:176:
+tmrHw_RATE_t tmrHw_setPeriodicTimerRate(tmrHw_ID_t timerId,    /*  [ IN ] Timer Id */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#245: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:176:
+tmrHw_RATE_t tmrHw_setPeriodicTimerRate(tmrHw_ID_t timerId,    /*  [ IN ] Timer Id */
+                                       tmrHw_RATE_t rate       /*  [ IN ] Number of timer interrupt per second */
+) {

WARNING:LONG_LINE_COMMENT: line length of 113 exceeds 100 columns
#246: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:177:
+                                       tmrHw_RATE_t rate       /*  [ IN ] Number of timer interrupt per second */

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:177:
+                                       tmrHw_RATE_t rate       /*  [ IN ] Number of timer interrupt per second */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:177:
+                                       tmrHw_RATE_t rate       /*  [ IN ] Number of timer interrupt per second */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:179:
+       uint32_t resolution = 0;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#248: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:179:
+       uint32_t resolution = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:180:
+       uint32_t count = 0;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#249: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:180:
+       uint32_t count = 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#250: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:181:
+       uint32_t count = 0;
+       ResetTimer(timerId);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:181:
+       ResetTimer(timerId);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:184:
+       pTmrHw[timerId].Control |= tmrHw_CONTROL_PERIODIC;$

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_CONTROL_PERIODIC>
#253: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:184:
+       pTmrHw[timerId].Control |= tmrHw_CONTROL_PERIODIC;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:185:
+       pTmrHw[timerId].Control &= ~tmrHw_CONTROL_ONESHOT;$

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_CONTROL_ONESHOT>
#254: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:185:
+       pTmrHw[timerId].Control &= ~tmrHw_CONTROL_ONESHOT;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:187:
+       pTmrHw[timerId].Control |= tmrHw_CONTROL_PRESCALE_1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:189:
+       if (rate && (timerId == 0 || timerId == 1)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#258: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:189:
+       if (rate && (timerId == 0 || timerId == 1)) {
+               if (rate > tmrHw_LOW_RESOLUTION_CLOCK) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:190:
+               if (rate > tmrHw_LOW_RESOLUTION_CLOCK) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:190:
+               if (rate > tmrHw_LOW_RESOLUTION_CLOCK) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#259: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:190:
+               if (rate > tmrHw_LOW_RESOLUTION_CLOCK) {
+                       return 0;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#259: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:190:
+               if (rate > tmrHw_LOW_RESOLUTION_CLOCK) {
+                       return 0;
+               }

ERROR:CODE_INDENT: code indent should use tabs where possible
#260: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:191:
+                       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:191:
+                       return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#261: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:192:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:192:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#262: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:193:
+               resolution = tmrHw_LOW_RESOLUTION_CLOCK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:193:
+               resolution = tmrHw_LOW_RESOLUTION_CLOCK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:194:
+       } else if (rate && (timerId == 2 || timerId == 3)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#263: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:194:
+       } else if (rate && (timerId == 2 || timerId == 3)) {
+               if (rate > tmrHw_HIGH_RESOLUTION_CLOCK) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#264: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:195:
+               if (rate > tmrHw_HIGH_RESOLUTION_CLOCK) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:195:
+               if (rate > tmrHw_HIGH_RESOLUTION_CLOCK) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#264: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:195:
+               if (rate > tmrHw_HIGH_RESOLUTION_CLOCK) {
+                       return 0;

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#264: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:195:
+               if (rate > tmrHw_HIGH_RESOLUTION_CLOCK) {
[...]
+               } else {
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#265: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:196:
+                       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:196:
+                       return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#266: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:197:
+               } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:197:
+               } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#266: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:197:
+               } else {
+                       resolution = tmrHw_HIGH_RESOLUTION_CLOCK;

ERROR:CODE_INDENT: code indent should use tabs where possible
#267: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:198:
+                       resolution = tmrHw_HIGH_RESOLUTION_CLOCK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:198:
+                       resolution = tmrHw_HIGH_RESOLUTION_CLOCK;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:199:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:199:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:200:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#269: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:200:
+       } else {
+               return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:201:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:201:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:202:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:204:
+       count = resolution / rate;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:206:
+       pTmrHw[timerId].LoadValue = count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:207:
+       pTmrHw[timerId].BackgroundLoad = count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:209:
+       return resolution / count;$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#283: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:214:
+/**
+*  @brief   Configures a periodic timer to generate timer interrupt after

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_setPeriodicTimerInterval>
#294: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:225:
+tmrHw_INTERVAL_t tmrHw_setPeriodicTimerInterval(tmrHw_ID_t timerId,    /*  [ IN ] Timer Id */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#294: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:225:
+tmrHw_INTERVAL_t tmrHw_setPeriodicTimerInterval(tmrHw_ID_t timerId,    /*  [ IN ] Timer Id */
+                                               tmrHw_INTERVAL_t msec   /*  [ IN ] Interval in milli-second */
+) {

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#295: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:226:
+                                               tmrHw_INTERVAL_t msec   /*  [ IN ] Interval in milli-second */

ERROR:CODE_INDENT: code indent should use tabs where possible
#295: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:226:
+                                               tmrHw_INTERVAL_t msec   /*  [ IN ] Interval in milli-second */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:226:
+                                               tmrHw_INTERVAL_t msec   /*  [ IN ] Interval in milli-second */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:228:
+       ResetTimer(timerId);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:231:
+       pTmrHw[timerId].Control |= tmrHw_CONTROL_PERIODIC;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:232:
+       pTmrHw[timerId].Control &= ~tmrHw_CONTROL_ONESHOT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:234:
+       return SetTimerPeriod(timerId, msec);$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#308: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:239:
+/**
+*  @brief   Configures a periodic timer to generate timer interrupt just once

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_setOneshotTimerInterval>
#319: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:250:
+tmrHw_INTERVAL_t tmrHw_setOneshotTimerInterval(tmrHw_ID_t timerId,     /*  [ IN ] Timer Id */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#319: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:250:
+tmrHw_INTERVAL_t tmrHw_setOneshotTimerInterval(tmrHw_ID_t timerId,     /*  [ IN ] Timer Id */
+                                              tmrHw_INTERVAL_t msec    /*  [ IN ] Interval in milli-second */
+) {

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#320: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:251:
+                                              tmrHw_INTERVAL_t msec    /*  [ IN ] Interval in milli-second */

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:251:
+                                              tmrHw_INTERVAL_t msec    /*  [ IN ] Interval in milli-second */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:251:
+                                              tmrHw_INTERVAL_t msec    /*  [ IN ] Interval in milli-second */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:253:
+       ResetTimer(timerId);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:256:
+       pTmrHw[timerId].Control |= tmrHw_CONTROL_PERIODIC;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:257:
+       pTmrHw[timerId].Control |= tmrHw_CONTROL_ONESHOT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:259:
+       return SetTimerPeriod(timerId, msec);$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#333: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:264:
+/**
+*  @brief   Configures a timer to run as a free running timer

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_setFreeRunningTimer>
#341: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:272:
+tmrHw_RATE_t tmrHw_setFreeRunningTimer(tmrHw_ID_t timerId,     /*  [ IN ] Timer Id */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#341: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:272:
+tmrHw_RATE_t tmrHw_setFreeRunningTimer(tmrHw_ID_t timerId,     /*  [ IN ] Timer Id */
+                                      uint32_t divider /*  [ IN ] Dividing the clock frequency */
+) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#342: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:273:
+                                      uint32_t divider /*  [ IN ] Dividing the clock frequency */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:273:
+                                      uint32_t divider /*  [ IN ] Dividing the clock frequency */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:275:
+       uint32_t scale = 0;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#344: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:275:
+       uint32_t scale = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:277:
+       ResetTimer(timerId);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:279:
+       pTmrHw[timerId].Control &= ~tmrHw_CONTROL_PERIODIC;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:280:
+       pTmrHw[timerId].Control &= ~tmrHw_CONTROL_ONESHOT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:282:
+       if (divider >= 64) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#351: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:282:
+       if (divider >= 64) {
+               pTmrHw[timerId].Control |= tmrHw_CONTROL_PRESCALE_256;

ERROR:CODE_INDENT: code indent should use tabs where possible
#352: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:283:
+               pTmrHw[timerId].Control |= tmrHw_CONTROL_PRESCALE_256;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:283:
+               pTmrHw[timerId].Control |= tmrHw_CONTROL_PRESCALE_256;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#353: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:284:
+               scale = 256;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:284:
+               scale = 256;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:285:
+       } else if (divider >= 8) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#354: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:285:
+       } else if (divider >= 8) {
+               pTmrHw[timerId].Control |= tmrHw_CONTROL_PRESCALE_16;

ERROR:CODE_INDENT: code indent should use tabs where possible
#355: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:286:
+               pTmrHw[timerId].Control |= tmrHw_CONTROL_PRESCALE_16;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:286:
+               pTmrHw[timerId].Control |= tmrHw_CONTROL_PRESCALE_16;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#356: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:287:
+               scale = 16;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:287:
+               scale = 16;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#357: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:288:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#357: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:288:
+       } else {
+               pTmrHw[timerId].Control |= tmrHw_CONTROL_PRESCALE_1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#358: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:289:
+               pTmrHw[timerId].Control |= tmrHw_CONTROL_PRESCALE_1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:289:
+               pTmrHw[timerId].Control |= tmrHw_CONTROL_PRESCALE_1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#359: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:290:
+               scale = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:290:
+               scale = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:291:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:293:
+       if (timerId == 0 || timerId == 1) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#362: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:293:
+       if (timerId == 0 || timerId == 1) {
+               return tmrHw_divide(tmrHw_LOW_RESOLUTION_CLOCK, scale);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#362: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:293:
+       if (timerId == 0 || timerId == 1) {
[...]
+       } else if (timerId == 2 || timerId == 3) {
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#363: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:294:
+               return tmrHw_divide(tmrHw_LOW_RESOLUTION_CLOCK, scale);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:294:
+               return tmrHw_divide(tmrHw_LOW_RESOLUTION_CLOCK, scale);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:295:
+       } else if (timerId == 2 || timerId == 3) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#364: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:295:
+       } else if (timerId == 2 || timerId == 3) {
+               return tmrHw_divide(tmrHw_HIGH_RESOLUTION_CLOCK, scale);

ERROR:CODE_INDENT: code indent should use tabs where possible
#365: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:296:
+               return tmrHw_divide(tmrHw_HIGH_RESOLUTION_CLOCK, scale);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:296:
+               return tmrHw_divide(tmrHw_HIGH_RESOLUTION_CLOCK, scale);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:297:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:299:
+       return 0;$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#373: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:304:
+/**
+*  @brief   Starts a timer

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_startTimer>
#382: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:313:
+int tmrHw_startTimer(tmrHw_ID_t timerId        /*  [ IN ] Timer id */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#382: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:313:
+int tmrHw_startTimer(tmrHw_ID_t timerId        /*  [ IN ] Timer id */
+) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:315:
+       pTmrHw[timerId].Control |= tmrHw_CONTROL_TIMER_ENABLE;$

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_CONTROL_TIMER_ENABLE>
#384: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:315:
+       pTmrHw[timerId].Control |= tmrHw_CONTROL_TIMER_ENABLE;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:316:
+       return 0;$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#390: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:321:
+/**
+*  @brief   Stops a timer

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_stopTimer>
#399: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:330:
+int tmrHw_stopTimer(tmrHw_ID_t timerId /*  [ IN ] Timer id */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#399: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:330:
+int tmrHw_stopTimer(tmrHw_ID_t timerId /*  [ IN ] Timer id */
+) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:332:
+       pTmrHw[timerId].Control &= ~tmrHw_CONTROL_TIMER_ENABLE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:333:
+       return 0;$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#407: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:338:
+/**
+*  @brief   Gets current timer count

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_GetCurrentCount>
#415: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:346:
+uint32_t tmrHw_GetCurrentCount(tmrHw_ID_t timerId      /*  [ IN ] Timer id */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#415: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:346:
+uint32_t tmrHw_GetCurrentCount(tmrHw_ID_t timerId      /*  [ IN ] Timer id */
+) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:349:
+       switch (pTmrHw[timerId].Control & tmrHw_CONTROL_MODE_MASK) {$

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_CONTROL_MODE_MASK>
#418: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:349:
+       switch (pTmrHw[timerId].Control & tmrHw_CONTROL_MODE_MASK) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:350:
+       case tmrHw_CONTROL_FREE_RUNNING:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#420: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:351:
+               if (pTmrHw[timerId].CurrentValue) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#420: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:351:
+               if (pTmrHw[timerId].CurrentValue) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#420: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:351:
+               if (pTmrHw[timerId].CurrentValue) {
+                       return tmrHw_MAX_COUNT - pTmrHw[timerId].CurrentValue;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#420: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:351:
+               if (pTmrHw[timerId].CurrentValue) {
+                       return tmrHw_MAX_COUNT - pTmrHw[timerId].CurrentValue;
+               }

ERROR:CODE_INDENT: code indent should use tabs where possible
#421: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:352:
+                       return tmrHw_MAX_COUNT - pTmrHw[timerId].CurrentValue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:352:
+                       return tmrHw_MAX_COUNT - pTmrHw[timerId].CurrentValue;$

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_MAX_COUNT>
#421: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:352:
+                       return tmrHw_MAX_COUNT - pTmrHw[timerId].CurrentValue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#422: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:353:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:353:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#423: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:354:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:354:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:355:
+       case tmrHw_CONTROL_PERIODIC:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:356:
+       case tmrHw_CONTROL_ONESHOT:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#426: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:357:
+               return pTmrHw[timerId].BackgroundLoad -$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:357:
+               return pTmrHw[timerId].BackgroundLoad -$

ERROR:CODE_INDENT: code indent should use tabs where possible
#427: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:358:
+                   pTmrHw[timerId].CurrentValue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#427: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:358:
+                   pTmrHw[timerId].CurrentValue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:359:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#429: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:360:
+       return 0;$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#434: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:365:
+/**
+*  @brief   Gets timer count rate

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_getCountRate>
#442: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:373:
+tmrHw_RATE_t tmrHw_getCountRate(tmrHw_ID_t timerId     /*  [ IN ] Timer id */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#442: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:373:
+tmrHw_RATE_t tmrHw_getCountRate(tmrHw_ID_t timerId     /*  [ IN ] Timer id */
+) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#444: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:375:
+       uint32_t divider = 0;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#444: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:375:
+       uint32_t divider = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#446: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:377:
+       switch (pTmrHw[timerId].Control & tmrHw_CONTROL_PRESCALE_MASK) {$

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_CONTROL_PRESCALE_MASK>
#446: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:377:
+       switch (pTmrHw[timerId].Control & tmrHw_CONTROL_PRESCALE_MASK) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#447: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:378:
+       case tmrHw_CONTROL_PRESCALE_1:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#448: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:379:
+               divider = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#448: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:379:
+               divider = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#449: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:380:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:380:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:381:
+       case tmrHw_CONTROL_PRESCALE_16:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#451: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:382:
+               divider = 16;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#451: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:382:
+               divider = 16;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#452: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:383:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:383:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#453: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:384:
+       case tmrHw_CONTROL_PRESCALE_256:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#454: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:385:
+               divider = 256;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#454: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:385:
+               divider = 256;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#455: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:386:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#455: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:386:
+               break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#457: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:388:
+               tmrHw_ASSERT(0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#457: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:388:
+               tmrHw_ASSERT(0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#458: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:389:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:391:
+       if (timerId == 0 || timerId == 1) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#460: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:391:
+       if (timerId == 0 || timerId == 1) {
+               return tmrHw_divide(tmrHw_LOW_RESOLUTION_CLOCK, divider);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#460: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:391:
+       if (timerId == 0 || timerId == 1) {
[...]
+       } else {
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#461: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:392:
+               return tmrHw_divide(tmrHw_LOW_RESOLUTION_CLOCK, divider);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:392:
+               return tmrHw_divide(tmrHw_LOW_RESOLUTION_CLOCK, divider);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:393:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#462: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:393:
+       } else {
+               return tmrHw_divide(tmrHw_HIGH_RESOLUTION_CLOCK, divider);

ERROR:CODE_INDENT: code indent should use tabs where possible
#463: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:394:
+               return tmrHw_divide(tmrHw_HIGH_RESOLUTION_CLOCK, divider);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:394:
+               return tmrHw_divide(tmrHw_HIGH_RESOLUTION_CLOCK, divider);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:395:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#465: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:396:
+       return 0;$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#470: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:401:
+/**
+*  @brief   Enables timer interrupt

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_enableInterrupt>
#478: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:409:
+void tmrHw_enableInterrupt(tmrHw_ID_t timerId  /*  [ IN ] Timer id */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#478: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:409:
+void tmrHw_enableInterrupt(tmrHw_ID_t timerId  /*  [ IN ] Timer id */
+) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#480: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:411:
+       pTmrHw[timerId].Control |= tmrHw_CONTROL_INTERRUPT_ENABLE;$

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_CONTROL_INTERRUPT_ENABLE>
#480: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:411:
+       pTmrHw[timerId].Control |= tmrHw_CONTROL_INTERRUPT_ENABLE;

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#485: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:416:
+/**
+*  @brief   Disables timer interrupt

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_disableInterrupt>
#493: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:424:
+void tmrHw_disableInterrupt(tmrHw_ID_t timerId /*  [ IN ] Timer id */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#493: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:424:
+void tmrHw_disableInterrupt(tmrHw_ID_t timerId /*  [ IN ] Timer id */
+) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#495: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:426:
+       pTmrHw[timerId].Control &= ~tmrHw_CONTROL_INTERRUPT_ENABLE;$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#500: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:431:
+/**
+*  @brief   Clears the interrupt

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_clearInterrupt>
#510: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:441:
+void tmrHw_clearInterrupt(tmrHw_ID_t timerId   /*  [ IN ] Timer id */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#510: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:441:
+void tmrHw_clearInterrupt(tmrHw_ID_t timerId   /*  [ IN ] Timer id */
+) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#512: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:443:
+       pTmrHw[timerId].InterruptClear = 0x1;$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#517: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:448:
+/**
+*  @brief   Gets the interrupt status

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_INTERRUPT_STATUS_e>
#524: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:455:
+tmrHw_INTERRUPT_STATUS_e tmrHw_getInterruptStatus(tmrHw_ID_t timerId   /*  [ IN ] Timer id */

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_getInterruptStatus>
#524: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:455:
+tmrHw_INTERRUPT_STATUS_e tmrHw_getInterruptStatus(tmrHw_ID_t timerId   /*  [ IN ] Timer id */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#524: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:455:
+tmrHw_INTERRUPT_STATUS_e tmrHw_getInterruptStatus(tmrHw_ID_t timerId   /*  [ IN ] Timer id */
+) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:457:
+       if (pTmrHw[timerId].InterruptStatus) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#526: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:457:
+       if (pTmrHw[timerId].InterruptStatus) {
+               return tmrHw_INTERRUPT_STATUS_SET;

CHECK:CAMELCASE: Avoid CamelCase: <InterruptStatus>
#526: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:457:
+       if (pTmrHw[timerId].InterruptStatus) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#526: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:457:
+       if (pTmrHw[timerId].InterruptStatus) {
[...]
+       } else {
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#527: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:458:
+               return tmrHw_INTERRUPT_STATUS_SET;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#527: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:458:
+               return tmrHw_INTERRUPT_STATUS_SET;$

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_INTERRUPT_STATUS_SET>
#527: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:458:
+               return tmrHw_INTERRUPT_STATUS_SET;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#528: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:459:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#528: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:459:
+       } else {
+               return tmrHw_INTERRUPT_STATUS_UNSET;

ERROR:CODE_INDENT: code indent should use tabs where possible
#529: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:460:
+               return tmrHw_INTERRUPT_STATUS_UNSET;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#529: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:460:
+               return tmrHw_INTERRUPT_STATUS_UNSET;$

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_INTERRUPT_STATUS_UNSET>
#529: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:460:
+               return tmrHw_INTERRUPT_STATUS_UNSET;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#530: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:461:
+       }$

WARNING:TYPO_SPELLING: 'Indentifies' may be misspelled - perhaps 'Identifies'?
#535: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:466:
+*  @brief   Indentifies a timer causing interrupt
             ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#535: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:466:
+/**
+*  @brief   Indentifies a timer causing interrupt

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_getInterruptSource>
#545: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:476:
+tmrHw_ID_t tmrHw_getInterruptSource(void       /*  void */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#545: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:476:
+tmrHw_ID_t tmrHw_getInterruptSource(void       /*  void */
+) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#547: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:478:
+       int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#549: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:480:
+       for (i = 0; i < tmrHw_TIMER_NUM_COUNT; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#549: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:480:
+       for (i = 0; i < tmrHw_TIMER_NUM_COUNT; i++) {
+               if (pTmrHw[i].InterruptStatus) {

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_TIMER_NUM_COUNT>
#549: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:480:
+       for (i = 0; i < tmrHw_TIMER_NUM_COUNT; i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#550: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:481:
+               if (pTmrHw[i].InterruptStatus) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#550: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:481:
+               if (pTmrHw[i].InterruptStatus) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#550: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:481:
+               if (pTmrHw[i].InterruptStatus) {
+                       return i;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#550: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:481:
+               if (pTmrHw[i].InterruptStatus) {
+                       return i;
+               }

ERROR:CODE_INDENT: code indent should use tabs where possible
#551: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:482:
+                       return i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#551: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:482:
+                       return i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#552: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:483:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#552: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:483:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#553: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:484:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:486:
+       return 0xFFFFFFFF;$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#560: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:491:
+/**
+*  @brief   Displays specific timer registers

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_printDebugInfo>
#567: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:498:
+void tmrHw_printDebugInfo(tmrHw_ID_t timerId,  /*  [ IN ] Timer id */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#567: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:498:
+void tmrHw_printDebugInfo(tmrHw_ID_t timerId,  /*  [ IN ] Timer id */
+                         int (*fpPrint) (const char *, ...)    /*  [ IN ] Print callback function */
+) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#568: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:499:
+                         int (*fpPrint) (const char *, ...)    /*  [ IN ] Print callback function */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#568: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:499:
+                         int (*fpPrint) (const char *, ...)    /*  [ IN ] Print callback function */$

WARNING:SPACING: Unnecessary space before function pointer arguments
#568: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:499:
+                         int (*fpPrint) (const char *, ...)    /*  [ IN ] Print callback function */

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <fpPrint>
#568: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:499:
+                         int (*fpPrint) (const char *, ...)    /*  [ IN ] Print callback function */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#570: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:501:
+       (*fpPrint) ("Displaying register contents \n\n");$

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#570: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:501:
+       (*fpPrint) ("Displaying register contents \n\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#571: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:502:
+       (*fpPrint) ("Timer %d: Load value              0x%X\n", timerId,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#572: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:503:
+                   pTmrHw[timerId].LoadValue);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#572: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:503:
+                   pTmrHw[timerId].LoadValue);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#573: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:504:
+       (*fpPrint) ("Timer %d: Background load value   0x%X\n", timerId,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#574: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:505:
+                   pTmrHw[timerId].BackgroundLoad);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#574: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:505:
+                   pTmrHw[timerId].BackgroundLoad);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#575: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:506:
+       (*fpPrint) ("Timer %d: Control                 0x%X\n", timerId,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#576: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:507:
+                   pTmrHw[timerId].Control);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#576: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:507:
+                   pTmrHw[timerId].Control);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:508:
+       (*fpPrint) ("Timer %d: Interrupt clear         0x%X\n", timerId,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#578: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:509:
+                   pTmrHw[timerId].InterruptClear);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#578: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:509:
+                   pTmrHw[timerId].InterruptClear);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#579: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:510:
+       (*fpPrint) ("Timer %d: Interrupt raw interrupt 0x%X\n", timerId,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#580: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:511:
+                   pTmrHw[timerId].RawInterruptStatus);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#580: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:511:
+                   pTmrHw[timerId].RawInterruptStatus);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:512:
+       (*fpPrint) ("Timer %d: Interrupt status        0x%X\n", timerId,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#582: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:513:
+                   pTmrHw[timerId].InterruptStatus);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#582: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:513:
+                   pTmrHw[timerId].InterruptStatus);$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#587: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:518:
+/**
+*  @brief   Use a timer to perform a busy wait delay for a number of usecs.

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_udelay>
#592: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:523:
+void tmrHw_udelay(tmrHw_ID_t timerId,  /*  [ IN ] Timer id */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#592: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:523:
+void tmrHw_udelay(tmrHw_ID_t timerId,  /*  [ IN ] Timer id */
+                 unsigned long usecs /*  [ IN ] usec to delay */
+) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#593: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:524:
+                 unsigned long usecs /*  [ IN ] usec to delay */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#593: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:524:
+                 unsigned long usecs /*  [ IN ] usec to delay */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#595: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:526:
+       tmrHw_RATE_t usec_tick_rate;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#596: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:527:
+       tmrHw_COUNT_t start_time;$

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_COUNT_t>
#596: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:527:
+       tmrHw_COUNT_t start_time;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#597: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:528:
+       tmrHw_COUNT_t delta_time;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#599: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:530:
+       start_time = tmrHw_GetCurrentCount(timerId);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#600: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:531:
+       usec_tick_rate = tmrHw_divide(tmrHw_getCountRate(timerId), 1000000);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#601: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:532:
+       delta_time = usecs * usec_tick_rate;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#604: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:535:
+       while (delta_time > (tmrHw_GetCurrentCount(timerId) - start_time))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#604: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:535:
+       while (delta_time > (tmrHw_GetCurrentCount(timerId) - start_time))
+               ;

ERROR:CODE_INDENT: code indent should use tabs where possible
#605: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:536:
+               ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#605: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:536:
+               ;$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#610: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:541:
+/**
+*  @brief   Local Divide function

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#620: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:551:
+       int r;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#621: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:552:
+       int t = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#625: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:556:
+       while ((denom & 0x40000000) == 0) {     /* fails if denom=0 */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#625: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:556:
+       while ((denom & 0x40000000) == 0) {     /* fails if denom=0 */
+               denom = denom << 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#626: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:557:
+               denom = denom << 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#626: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:557:
+               denom = denom << 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#627: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:558:
+               t = t << 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#627: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:558:
+               t = t << 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#628: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:559:
+       }$

WARNING:TYPO_SPELLING: 'Intialize' may be misspelled - perhaps 'Initialize'?
#630: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:561:
+       /* Intialize the result */
           ^^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#631: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:562:
+       r = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#633: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:564:
+       do {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#633: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:564:
+       do {
[...]
+               if ((num - denom) >= 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#634: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:565:
+               /* Determine if there exists a positive remainder */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#635: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:566:
+               if ((num - denom) >= 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#635: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:566:
+               if ((num - denom) >= 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#635: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:566:
+               if ((num - denom) >= 0) {
[...]
+                       num = num - denom;

WARNING:TYPO_SPELLING: 'Accumlate' may be misspelled - perhaps 'Accumulate'?
#636: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:567:
+                       /* Accumlate t to the result and calculate a new remainder */
                           ^^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#636: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:567:
+                       /* Accumlate t to the result and calculate a new remainder */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#637: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:568:
+                       num = num - denom;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#637: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:568:
+                       num = num - denom;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#638: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:569:
+                       r = r + t;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#638: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:569:
+                       r = r + t;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#639: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:570:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#639: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:570:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#640: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:571:
+               /* Continue to shift denom and shift t down to 0 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#641: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:572:
+               denom = denom >> 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#641: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:572:
+               denom = denom >> 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#642: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:573:
+               t = t >> 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#642: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:573:
+               t = t >> 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#643: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:574:
+       } while (t != 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#644: FILE: arch/arm/mach-bcmring/csp/tmr/tmrHw.c:575:
+       return r;$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000100390.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 121 errors, 279 warnings, 71 checks, 577 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000100390.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
