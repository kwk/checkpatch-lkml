WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
Latest BIOS ACPI PNP device resource descriptions may have (especially on the

WARNING:TYPO_SPELLING: 'modifyable' may be misspelled - perhaps 'modifiable'?
#64: 
should have been unregistered should be modifyable) it is potential
                                        ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#136: FILE: include/linux/pnp.h:34:
+#define pnp_port_ok(dev,bar)	((dev)->res.allocated_ports > (bar))
                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#142: FILE: include/linux/pnp.h:40:
+	(pnp_port_ok((dev),(bar)) && \
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#153: FILE: include/linux/pnp.h:51:
+#define pnp_mem_ok(dev,bar)	((dev)->res.allocated_mems > (bar))
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#158: FILE: include/linux/pnp.h:56:
+	(pnp_mem_ok((dev),(bar)) && \
 	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#169: FILE: include/linux/pnp.h:67:
+#define pnp_irq_ok(dev,bar)	((dev)->res.allocated_irqs > (bar))
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#173: FILE: include/linux/pnp.h:71:
+	(pnp_irq_ok((dev),(bar)) && \
 	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#178: FILE: include/linux/pnp.h:75:
+#define pnp_dma_ok(dev,bar)	((dev)->res.allocated_dmas > (bar))
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#182: FILE: include/linux/pnp.h:79:
+	(pnp_dma_ok((dev),(bar)) && \
 	                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#238: FILE: include/linux/pnp.h:484:
+#define pnp_dbg(format, arg...) printk(KERN_INFO "pnp: " format "\n" , ## arg)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#238: FILE: include/linux/pnp.h:484:
+#define pnp_dbg(format, arg...) printk(KERN_INFO "pnp: " format "\n" , ## arg)
                                                                      ^

WARNING:SPLIT_STRING: quoted string split across lines
#293: FILE: drivers/pnp/interface.c:387:
+					pnp_err("Cannot manually set port"
+						"resource %d for device %s",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:MISSING_SPACE: break quoted strings at a space character
#293: FILE: drivers/pnp/interface.c:387:
+					pnp_err("Cannot manually set port"
+						"resource %d for device %s",

WARNING:SPLIT_STRING: quoted string split across lines
#315: FILE: drivers/pnp/interface.c:416:
+					pnp_err("Cannot manually set mem "
+						"resource %d for device %s",

WARNING:SPLIT_STRING: quoted string split across lines
#337: FILE: drivers/pnp/interface.c:445:
+					pnp_err("Cannot manually set irq "
+						"resource %d for device %s",

WARNING:SPLIT_STRING: quoted string split across lines
#358: FILE: drivers/pnp/interface.c:464:
+					pnp_err("Cannot manually set dma "
+						"resource %d for device %s",

WARNING:TYPO_SPELLING: 'alloced' may be misspelled - perhaps 'allocated'?
#381: FILE: drivers/pnp/manager.c:17:
+/* Defines the amount of struct resources that will get (re-)alloced
                                                              ^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#395: FILE: drivers/pnp/manager.c:31:
+	int i;
+	pnp_dbg("Resource table dump:");

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'Allocted' may be misspelled - perhaps 'Allocated'?
#396: FILE: drivers/pnp/manager.c:32:
+	pnp_dbg("Allocted: ports: %d [%p - %p]",
 	         ^^^^^^^^

WARNING:TYPO_SPELLING: 'Allocted' may be misspelled - perhaps 'Allocated'?
#406: FILE: drivers/pnp/manager.c:42:
+	pnp_dbg("Allocted: mems: %d [%p - %p]",
 	         ^^^^^^^^

WARNING:TYPO_SPELLING: 'Allocted' may be misspelled - perhaps 'Allocated'?
#416: FILE: drivers/pnp/manager.c:52:
+	pnp_dbg("Allocted: irqs: %d [%p - %p]",
 	         ^^^^^^^^

WARNING:TYPO_SPELLING: 'Allocted' may be misspelled - perhaps 'Allocated'?
#425: FILE: drivers/pnp/manager.c:61:
+	pnp_dbg("Allocted: dmas: %d [%p - %p]",
 	         ^^^^^^^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#444: FILE: drivers/pnp/manager.c:80:
+}
+static void pnp_init_mem(struct resource *res)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#451: FILE: drivers/pnp/manager.c:87:
+}
+static void pnp_init_irq(struct resource *res)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#458: FILE: drivers/pnp/manager.c:94:
+}
+static void pnp_init_dma(struct resource *res)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#485: FILE: drivers/pnp/manager.c:121:
+	ret = krealloc(res->port_resource,
+	       (sizeof(struct resource) * res->allocated_ports)

WARNING:SPLIT_STRING: quoted string split across lines
#499: FILE: drivers/pnp/manager.c:135:
+	pnp_dbg("Port allocate: %p - %p; Allocated: %lu bytes, size of"
+		"struct: %lu - allocated ports: %d",

WARNING:MISSING_SPACE: break quoted strings at a space character
#499: FILE: drivers/pnp/manager.c:135:
+	pnp_dbg("Port allocate: %p - %p; Allocated: %lu bytes, size of"
+		"struct: %lu - allocated ports: %d",

CHECK:SPACING: No space is necessary after a cast
#506: FILE: drivers/pnp/manager.c:142:
+		(unsigned long) sizeof(struct resource),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#518: FILE: drivers/pnp/manager.c:154:
+	ret = krealloc(res->mem_resource,
+	       (sizeof(struct resource) * res->allocated_mems)

WARNING:SPLIT_STRING: quoted string split across lines
#533: FILE: drivers/pnp/manager.c:169:
+	pnp_dbg("Mem allocate: %p - %p; Allocated: %lu bytes, size of"
+		"struct: %lu - allocated mems: %d",

WARNING:MISSING_SPACE: break quoted strings at a space character
#533: FILE: drivers/pnp/manager.c:169:
+	pnp_dbg("Mem allocate: %p - %p; Allocated: %lu bytes, size of"
+		"struct: %lu - allocated mems: %d",

CHECK:SPACING: No space is necessary after a cast
#540: FILE: drivers/pnp/manager.c:176:
+		(unsigned long) sizeof(struct resource),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#552: FILE: drivers/pnp/manager.c:188:
+	ret = krealloc(res->irq_resource,
+	       (sizeof(struct resource) * res->allocated_irqs)

WARNING:SPLIT_STRING: quoted string split across lines
#566: FILE: drivers/pnp/manager.c:202:
+	pnp_dbg("Irq allocate: %p - %p; Allocated: %lu bytes, size of"
+		"struct: %lu - allocated irqs: %d",

WARNING:MISSING_SPACE: break quoted strings at a space character
#566: FILE: drivers/pnp/manager.c:202:
+	pnp_dbg("Irq allocate: %p - %p; Allocated: %lu bytes, size of"
+		"struct: %lu - allocated irqs: %d",

CHECK:SPACING: No space is necessary after a cast
#573: FILE: drivers/pnp/manager.c:209:
+		(unsigned long) sizeof(struct resource),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#584: FILE: drivers/pnp/manager.c:220:
+	ret = krealloc(res->dma_resource,
+	       (sizeof(struct resource) * res->allocated_dmas)

WARNING:SPLIT_STRING: quoted string split across lines
#598: FILE: drivers/pnp/manager.c:234:
+	pnp_dbg("Dma allocate: %p - %p; Allocated: %lu bytes, size of"
+		"struct: %lu - allocated dmas: %d",

WARNING:MISSING_SPACE: break quoted strings at a space character
#598: FILE: drivers/pnp/manager.c:234:
+	pnp_dbg("Dma allocate: %p - %p; Allocated: %lu bytes, size of"
+		"struct: %lu - allocated dmas: %d",

CHECK:SPACING: No space is necessary after a cast
#605: FILE: drivers/pnp/manager.c:241:
+		(unsigned long) sizeof(struct resource),

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#613: FILE: drivers/pnp/manager.c:249:
+		" - alloc: %d", type, val, __FUNCTION__, x)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#615: FILE: drivers/pnp/manager.c:251:
+
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#628: FILE: drivers/pnp/manager.c:264:
+	if (res->flags & IORESOURCE_IO) {
[...]
+	} else 	if (res->flags & IORESOURCE_MEM) {
[...]
+	} else if (res->flags & IORESOURCE_IRQ) {
[...]
+	} else	if (res->flags & IORESOURCE_DMA) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#646: FILE: drivers/pnp/manager.c:282:
+^I} else ^Iif (res->flags & IORESOURCE_MEM) {$

CHECK:BRACES: Unbalanced braces around else statement
#694: FILE: drivers/pnp/manager.c:330:
+	} else

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#700: FILE: drivers/pnp/manager.c:336:
+#define pnp_print_assign_err(type, val)					\
+	pnp_dbg("%s resource %d not allocated, cannot assign value",	\
+		type, val);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#704: FILE: drivers/pnp/manager.c:340:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#861: FILE: drivers/pnp/manager.c:711:
+	/* We must never end up here, these functions are poisson for dynamic
+	   allocation via pointer array.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#863: FILE: drivers/pnp/manager.c:713:
+	BUG_ON(1);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#925: FILE: drivers/pnp/pnpacpi/rsparser.c:107:
+		/* <trenn> Check: Do we need to allocate and assign
+		   this resource at all? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#925: FILE: drivers/pnp/pnpacpi/rsparser.c:107:
+		   this resource at all? */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#928: FILE: drivers/pnp/pnpacpi/rsparser.c:110:
+			pnp_err("Bug in %s", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#943: FILE: drivers/pnp/pnpacpi/rsparser.c:122:
+		pnp_err("Bug in %s", __FUNCTION__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#979: FILE: drivers/pnp/pnpacpi/rsparser.c:179:
+		/* <trenn> Check: Do we need to allocate and assign
+		   this resource at all? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#979: FILE: drivers/pnp/pnpacpi/rsparser.c:179:
+		   this resource at all? */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#982: FILE: drivers/pnp/pnpacpi/rsparser.c:182:
+			pnp_err("Bug in %s", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#988: FILE: drivers/pnp/pnpacpi/rsparser.c:188:
+		pnp_err("Bug in %s", __FUNCTION__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1023: FILE: drivers/pnp/pnpacpi/rsparser.c:202:
+		/* <trenn> Check: Do we need to allocate and assign
+		   this resource at all? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1023: FILE: drivers/pnp/pnpacpi/rsparser.c:202:
+		   this resource at all? */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1026: FILE: drivers/pnp/pnpacpi/rsparser.c:205:
+			pnp_err("Bug in %s", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1032: FILE: drivers/pnp/pnpacpi/rsparser.c:211:
+		pnp_err("Bug in %s", __FUNCTION__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1067: FILE: drivers/pnp/pnpacpi/rsparser.c:224:
+		/* <trenn> Check: Do we need to allocate and assign
+		   this resource at all? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1067: FILE: drivers/pnp/pnpacpi/rsparser.c:224:
+		   this resource at all? */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1070: FILE: drivers/pnp/pnpacpi/rsparser.c:227:
+			pnp_err("Bug in %s", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1079: FILE: drivers/pnp/pnpacpi/rsparser.c:236:
+		pnp_err("Bug in %s", __FUNCTION__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1111: FILE: drivers/pnp/pnpbios/rsparser.c:65:
+		/* <trenn> Check: Do we need to allocate and assign
+		   this resource at all? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1111: FILE: drivers/pnp/pnpbios/rsparser.c:65:
+		   this resource at all? */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1114: FILE: drivers/pnp/pnpbios/rsparser.c:68:
+			pnp_err("Bug in %s", __FUNCTION__);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1117: FILE: drivers/pnp/pnpbios/rsparser.c:71:
+	new_res.start = new_res.end = (unsigned long)irq;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1120: FILE: drivers/pnp/pnpbios/rsparser.c:74:
+		pnp_err("Bug in %s", __FUNCTION__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1145: FILE: drivers/pnp/pnpbios/rsparser.c:86:
+		/* <trenn> Check: Do we need to allocate and assign
+		   this resource at all? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1145: FILE: drivers/pnp/pnpbios/rsparser.c:86:
+		   this resource at all? */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1148: FILE: drivers/pnp/pnpbios/rsparser.c:89:
+			pnp_err("Bug in %s", __FUNCTION__);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1151: FILE: drivers/pnp/pnpbios/rsparser.c:92:
+	new_res.start = new_res.end = (unsigned long)dma;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1153: FILE: drivers/pnp/pnpbios/rsparser.c:94:
+		pnp_err("Bug in %s", __FUNCTION__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1178: FILE: drivers/pnp/pnpbios/rsparser.c:106:
+		/* <trenn> Check: Do we need to allocate and assign
+		   this resource at all? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1178: FILE: drivers/pnp/pnpbios/rsparser.c:106:
+		   this resource at all? */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1181: FILE: drivers/pnp/pnpbios/rsparser.c:109:
+			pnp_err("Bug in %s", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1187: FILE: drivers/pnp/pnpbios/rsparser.c:115:
+		pnp_err("Bug in %s", __FUNCTION__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1212: FILE: drivers/pnp/pnpbios/rsparser.c:127:
+		/* <trenn> Check: Do we need to allocate and assign
+		   this resource at all? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1212: FILE: drivers/pnp/pnpbios/rsparser.c:127:
+		   this resource at all? */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1215: FILE: drivers/pnp/pnpbios/rsparser.c:130:
+			pnp_err("Bug in %s", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1221: FILE: drivers/pnp/pnpbios/rsparser.c:136:
+		pnp_err("Bug in %s", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1287: FILE: drivers/pnp/isapnp/core.c:963:
+				pnp_err("Bug in %s", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1299: FILE: drivers/pnp/isapnp/core.c:973:
+				pnp_err("Bug in %s", __FUNCTION__);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1310: FILE: drivers/pnp/isapnp/core.c:981:
+			new_res.start = new_res.end = ret;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1313: FILE: drivers/pnp/isapnp/core.c:984:
+				pnp_err("Bug in %s", __FUNCTION__);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1322: FILE: drivers/pnp/isapnp/core.c:991:
+			new_res.start = new_res.end = ret;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1325: FILE: drivers/pnp/isapnp/core.c:994:
+				pnp_err("Bug in %s", __FUNCTION__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1415: FILE: drivers/pnp/support.c:19:
+/* <trenn> This interface is only used by pnpbios and one driver:
+   sound/isa/sscape.c

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000332755.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 64 warnings, 19 checks, 1255 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000332755.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
