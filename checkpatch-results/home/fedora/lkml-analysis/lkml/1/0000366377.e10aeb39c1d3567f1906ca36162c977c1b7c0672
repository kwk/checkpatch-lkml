WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
1. PME and HP share an interrupt, VC hasn't interrupt and only root port and event collector has interrupt for AER.

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#66: FILE: drivers/pci/pcie/portdrv_core.c:146:
+	if (mask & (PCIE_PORT_SERVICE_PME|PCIE_PORT_SERVICE_HP))
 	                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#67: FILE: drivers/pci/pcie/portdrv_core.c:147:
+		nvec ++;
 		     ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#69: FILE: drivers/pci/pcie/portdrv_core.c:149:
+	if ((mask & PCIE_PORT_SERVICE_AER)
[...]
+			nvec ++;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#70: FILE: drivers/pci/pcie/portdrv_core.c:150:
+	if ((mask & PCIE_PORT_SERVICE_AER)
+		 && ((reg >> 4) & PORT_TYPE_MASK) == PCIE_RC_PORT)

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#71: FILE: drivers/pci/pcie/portdrv_core.c:151:
+			nvec ++;
 			     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#80: FILE: drivers/pci/pcie/portdrv_core.c:160:
+		if (mask & (PCIE_PORT_SERVICE_PME|PCIE_PORT_SERVICE_HP)) {
 		                                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#84: FILE: drivers/pci/pcie/portdrv_core.c:164:
+			pci_read_config_word(dev,
+				pos + PCIE_CAPABILITIES_REG, &reg16);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#86: FILE: drivers/pci/pcie/portdrv_core.c:166:
+			BUG_ON(reg16 >= nvec);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#88: FILE: drivers/pci/pcie/portdrv_core.c:168:
+			printk("Capability %d uses %d MSI-X entry\n", i, reg16);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#91: FILE: drivers/pci/pcie/portdrv_core.c:171:
+		if ((mask & PCIE_PORT_SERVICE_AER)
+		   && ((reg >> 4) & PORT_TYPE_MASK) == PCIE_RC_PORT) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#97: FILE: drivers/pci/pcie/portdrv_core.c:177:
+			pci_read_config_dword(dev,
+				aer_pos + PCI_ERR_ROOT_STATUS, &reg32);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#99: FILE: drivers/pci/pcie/portdrv_core.c:179:
+			BUG_ON(reg32 >= nvec);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#101: FILE: drivers/pci/pcie/portdrv_core.c:181:
+			printk("Capability %d uses %d MSI-X entry\n", i, reg32);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000366377.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 6 warnings, 6 checks, 84 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000366377.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
