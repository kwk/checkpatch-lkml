WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#50: 
> > > AMD systems, so messages like this can never be removed at compile time.

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '22223c9b417be5fd0ab2cf9ad17eb7bd1e19f7b9', maybe rebased or not pulled?
#54: 
> > > Commit 22223c9b417be5fd0ab2cf9ad17eb7bd1e19f7b9

WARNING:TYPO_SPELLING: 'overriden' may be misspelled - perhaps 'overridden'?
#104: 
   here, it should be a proper callback. A weak alias will be overriden
                                                              ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'isnt' may be misspelled - perhaps 'isn't'?
#108: 
   quick glance suggests that decoding of earlier models isnt supported?
                                                         ^^^^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#159: FILE: arch/x86/kernel/cpu/mcheck/mce.c:99:
+EXPORT_SYMBOL(x86_decode_mce_callback);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#176: FILE: arch/x86/kernel/cpu/mcheck/mce.c:182:
+	pr_emerg("CPU %d: Machine Check Exception: %16Lx Bank %d: %016Lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#177: FILE: arch/x86/kernel/cpu/mcheck/mce.c:183:
+	pr_emerg("CPU %d: Machine Check Exception: %16Lx Bank %d: %016Lx\n",
 	       m->extcpu, m->mcgstatus, m->bank, m->status);

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#181: FILE: arch/x86/kernel/cpu/mcheck/mce.c:186:
+		pr_emerg("RIP%s %02x:<%016Lx> ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#182: FILE: arch/x86/kernel/cpu/mcheck/mce.c:187:
+		pr_emerg("RIP%s %02x:<%016Lx> ",
 		       !(m->mcgstatus & MCG_STATUS_EIPV) ? " !INEXACT!" : "",

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#188: FILE: arch/x86/kernel/cpu/mcheck/mce.c:192:
+		pr_cont("\n");

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#195: FILE: arch/x86/kernel/cpu/mcheck/mce.c:197:
+		pr_cont("ADDR %llx ", m->addr);

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#200: FILE: arch/x86/kernel/cpu/mcheck/mce.c:199:
+		pr_cont("MISC %llx ", m->misc);

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#202: FILE: arch/x86/kernel/cpu/mcheck/mce.c:201:
+	pr_cont("\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#204: FILE: arch/x86/kernel/cpu/mcheck/mce.c:203:
+	pr_emerg("PROCESSOR %u:%x TIME %llu SOCKET %u APIC %x\n",
 			m->cpuvendor, m->cpuid, m->time, m->socketid,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'boot_cpu_data.x86_vendor == X86_VENDOR_AMD'
#252: FILE: drivers/edac/edac_mce_amd.c:429:
+	if ((boot_cpu_data.x86_vendor == X86_VENDOR_AMD) && (boot_cpu_data.x86 >= 0x10))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'boot_cpu_data.x86 >= 0x10'
#252: FILE: drivers/edac/edac_mce_amd.c:429:
+	if ((boot_cpu_data.x86_vendor == X86_VENDOR_AMD) && (boot_cpu_data.x86 >= 0x10))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000065895.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 11 warnings, 5 checks, 114 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000065895.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
