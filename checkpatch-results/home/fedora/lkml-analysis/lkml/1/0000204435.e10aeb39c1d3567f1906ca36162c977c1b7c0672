WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#50: FILE: Makefile:4:
+EXTRAVERSION = .6
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#71: FILE: arch/arm/mach-pxa/include/mach/reset.h:19:
+extern int init_gpio_reset(int gpio, int output);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#98: FILE: arch/arm/mach-pxa/reset.c:38:
+		printk(KERN_ERR "Can't configure reset_gpio\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#191: FILE: arch/x86/kernel/setup.c:583:
+	printk(KERN_NOTICE

WARNING:MISPLACED_INIT: __initdata should be placed after bad_bios_dmi_table[]
#202: FILE: arch/x86/kernel/setup.c:594:
+static struct dmi_system_id __initdata bad_bios_dmi_table[] = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#250: FILE: arch/x86/kernel/setup.c:924:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#291: FILE: drivers/acpi/dock.c:612:
+		if (!dock_in_progress(ds) && acpi_bus_get_device(ds->handle,
+		   &tmp)) {

WARNING:TYPO_SPELLING: 'attemp' may be misspelled - perhaps 'attempt'?
#322: FILE: drivers/ata/libata-eh.c:2209:
+	/* make sure each reset attemp is at least COOL_DOWN apart */
 	                        ^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <InquiryData_struct>
#402: FILE: drivers/block/cciss.c:3412:
+	InquiryData_struct *inq_buff = NULL;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!inq_buff"
#412: FILE: drivers/block/cciss.c:3520:
+	if (inq_buff == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#413: FILE: drivers/block/cciss.c:3521:
+		printk(KERN_ERR "cciss: out of memory\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#413: FILE: drivers/block/cciss.c:3521:
+	if (inq_buff == NULL) {
+		printk(KERN_ERR "cciss: out of memory\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#418: FILE: drivers/block/cciss.c:3526:
+	return_code = sendcmd_withirq(CISS_INQUIRY, i, inq_buff,
+		sizeof(InquiryData_struct), 0, 0 , 0, TYPE_CMD);

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#418: FILE: drivers/block/cciss.c:3526:
+		sizeof(InquiryData_struct), 0, 0 , 0, TYPE_CMD);
 		                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#425: FILE: drivers/block/cciss.c:3533:
+		printk(KERN_WARNING "cciss: unable to determine firmware"

WARNING:SPLIT_STRING: quoted string split across lines
#426: FILE: drivers/block/cciss.c:3534:
+		printk(KERN_WARNING "cciss: unable to determine firmware"
+			" version of controller\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:BRACES: braces {} should be used on all arms of this statement
#449: FILE: drivers/block/cpqarray.c:570:
+	if (num_cntlrs_reg)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#451: FILE: drivers/block/cpqarray.c:572:
+		return 0;
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#451: FILE: drivers/block/cpqarray.c:572:
+	else {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#665: FILE: drivers/mtd/chips/jedec_probe.c:1811:
+		uint32_t ofs = cfi_build_cmd_addr(0 + (bank << 8), map, cfi);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct net_device *' should also have an identifier name
#710: FILE: drivers/net/r8169.c:410:
+	int (*get_settings)(struct net_device *, struct ethtool_cmd *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ethtool_cmd *' should also have an identifier name
#710: FILE: drivers/net/r8169.c:410:
+	int (*get_settings)(struct net_device *, struct ethtool_cmd *);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tp->mac_version == RTL_GIGA_MAC_VER_11'
#753: FILE: drivers/net/r8169.c:743:
+	if ((tp->mac_version == RTL_GIGA_MAC_VER_11) ||
+	    (tp->mac_version == RTL_GIGA_MAC_VER_12) ||
+	    (tp->mac_version >= RTL_GIGA_MAC_VER_17)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tp->mac_version == RTL_GIGA_MAC_VER_12'
#753: FILE: drivers/net/r8169.c:743:
+	if ((tp->mac_version == RTL_GIGA_MAC_VER_11) ||
+	    (tp->mac_version == RTL_GIGA_MAC_VER_12) ||
+	    (tp->mac_version >= RTL_GIGA_MAC_VER_17)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tp->mac_version >= RTL_GIGA_MAC_VER_17'
#753: FILE: drivers/net/r8169.c:743:
+	if ((tp->mac_version == RTL_GIGA_MAC_VER_11) ||
+	    (tp->mac_version == RTL_GIGA_MAC_VER_12) ||
+	    (tp->mac_version >= RTL_GIGA_MAC_VER_17)) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#757: FILE: drivers/net/r8169.c:747:
+		/*
+		 * Wake up the PHY.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#851: FILE: drivers/net/r8169.c:1504:
+	unsigned features;

CHECK:CAMELCASE: Avoid CamelCase: <RxMissed>
#943: FILE: drivers/net/r8169.c:2925:
+	dev->stats.rx_missed_errors += (RTL_R32(RxMissed) & 0xffffff);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1065: FILE: drivers/net/wireless/iwlwifi/iwl-5000.c:479:
+	 * index. We sort them here */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'frome' may be misspelled - perhaps 'from'?
#1205: FILE: drivers/net/wireless/iwlwifi/iwl-agn.c:3560:
+		 * frome during assiciation period if it can not hear
 		   ^^^^^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#1209: FILE: drivers/net/wireless/iwlwifi/iwl-agn.c:3564:
+		if (priv->hw->conf.channel->flags & (IEEE80211_CHAN_PASSIVE_SCAN |
[...]
+				iwl_power_disable_management(priv, 3000);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1262: FILE: drivers/net/wireless/iwlwifi/iwl-calib.c:73:
+ int iwl_send_calib_results(struct iwl_priv *priv)$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!res->buf"
#1294: FILE: drivers/net/wireless/iwlwifi/iwl-calib.c:105:
+	if (unlikely(res->buf == NULL))

WARNING:TYPO_SPELLING: 'managment' may be misspelled - perhaps 'management'?
#1490: FILE: drivers/net/wireless/iwlwifi/iwl-power.c:451:
+	/* on starting association we disable power managment
 	                                            ^^^^^^^^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1499: FILE: drivers/net/wireless/iwlwifi/iwl-power.c:460:
+}
+void iwl_setup_power_deferred_work(struct iwl_priv *priv)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1636: FILE: fs/hfs/catalog.c:194:
+		printk(KERN_ERR "hfs: bad catalog namelength\n");

CHECK:BRACES: Unbalanced braces around else statement
#1661: FILE: fs/jffs2/background.c:94:
+		} else

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1729: FILE: include/linux/mtd/cfi.h:284:
+static inline uint32_t cfi_build_cmd_addr(uint32_t cmd_ofs,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1730: FILE: include/linux/mtd/cfi.h:285:
+static inline uint32_t cfi_build_cmd_addr(uint32_t cmd_ofs,
+				struct map_info *map, struct cfi_private *cfi)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1733: FILE: include/linux/mtd/cfi.h:287:
+	unsigned bankwidth = map_bankwidth(map);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1734: FILE: include/linux/mtd/cfi.h:288:
+	unsigned interleave = cfi_interleave(cfi);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1735: FILE: include/linux/mtd/cfi.h:289:
+	unsigned type = cfi->device_type;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1736: FILE: include/linux/mtd/cfi.h:290:
+	uint32_t addr;

WARNING:TYPO_SPELLING: 'compatiblity' may be misspelled - perhaps 'compatibility'?
#1740: FILE: include/linux/mtd/cfi.h:294:
+	/* Modify the unlock address if we are in compatiblity mode.
 	                                          ^^^^^^^^^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1746: FILE: include/linux/mtd/cfi.h:300:
+		addr |= (type >> 1)*interleave;
 		                   ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1757: FILE: include/linux/mtd/cfi.h:448:
+	uint32_t addr = base + cfi_build_cmd_addr(cmd_addr, map, cfi);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1794: FILE: mm/hugetlb.c:357:
+static void clear_gigantic_page(struct page *page,
+			unsigned long addr, unsigned long sz)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1800: FILE: mm/hugetlb.c:363:
+	for (i = 0; i < sz/PAGE_SIZE; i++, p = mem_map_next(p, page, i)) {
 	                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1821: FILE: mm/hugetlb.c:384:
+static void copy_gigantic_page(struct page *dst, struct page *src,
+			   unsigned long addr, struct vm_area_struct *vma)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1827: FILE: mm/hugetlb.c:390:
+	struct page *src_base = src;
+	might_sleep();

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1830: FILE: mm/hugetlb.c:393:
+		copy_user_highpage(dst, src, addr + i*PAGE_SIZE, vma);
 		                                     ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1899: FILE: mm/internal.h:20:
+extern void prep_compound_gigantic_page(struct page *page, unsigned long order);

WARNING:TYPO_SPELLING: 'withing' may be misspelled - perhaps 'within'?
#1919: FILE: mm/internal.h:69:
+ * Iterator over all subpages withing the maximally aligned gigantic
                               ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1923: FILE: mm/internal.h:73:
+static inline struct page *mem_map_next(struct page *iter,
+						struct page *base, int offset)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1927: FILE: mm/internal.h:77:
+		unsigned long pfn = page_to_pfn(base) + offset;
+		if (!pfn_valid(pfn))

CHECK:CAMELCASE: Avoid CamelCase: <__SetPageHead>
#1949: FILE: mm/page_alloc.c:274:
+	__SetPageHead(page);

CHECK:CAMELCASE: Avoid CamelCase: <__SetPageTail>
#1953: FILE: mm/page_alloc.c:278:
+		__SetPageTail(p);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2012: FILE: net/unix/af_unix.c:1308:
+	/*
+	 * Need to duplicate file references for the sake of garbage

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2072: FILE: net/unix/garbage.c:192:
+					/*
+					 * Ignore non-candidates, they could

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2169: FILE: security/keys/internal.h:110:
+extern int install_user_keyrings(struct task_struct *tsk);

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#2245: FILE: sound/pci/hda/patch_sigmatel.c:3566:
+		/* fallthru */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000204435.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 31 warnings, 30 checks, 1883 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000204435.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
