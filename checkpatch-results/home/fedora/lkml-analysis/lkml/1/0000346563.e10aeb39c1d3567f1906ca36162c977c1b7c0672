WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#57: 
things up a bit but yes, out of line who cares. Do you think this version is 

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id 'a17ccb1964b53fd4ab00d501b7f229a9a6cf91d1', maybe rebased or not pulled?
#105: 
commit a17ccb1964b53fd4ab00d501b7f229a9a6cf91d1

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#158: 
    Signed-off-by: Rene Herman <rene.herman@gmail.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#173: FILE: arch/x86/boot/compressed/misc_32.c:280:
+	outb(0xff & (pos >> 9), vidport+1);
 	                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#175: FILE: arch/x86/boot/compressed/misc_32.c:282:
+	outb(0xff & (pos >> 1), vidport+1);
 	                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#192: FILE: arch/x86/boot/compressed/misc_64.c:273:
+	outb(0xff & (pos >> 9), vidport+1);
 	                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#194: FILE: arch/x86/boot/compressed/misc_64.c:275:
+	outb(0xff & (pos >> 1), vidport+1);
 	                               ^

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#225: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#230: FILE: arch/x86/kernel/io_delay.c:1:
+#include <linux/kernel.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#233: FILE: arch/x86/kernel/io_delay.c:4:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#250: FILE: arch/x86/kernel/io_delay.c:21:
+void slow_down_io(void) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#262: FILE: arch/x86/kernel/io_delay.c:33:
+	printk(KERN_NOTICE "%s: using alternate I/O delay port\n", id->ident);

WARNING:MISPLACED_INIT: __initdata should be placed after alternate_io_delay_port_dmi_table[]
#267: FILE: arch/x86/kernel/io_delay.c:38:
+static struct dmi_system_id __initdata alternate_io_delay_port_dmi_table[] = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#292: FILE: arch/x86/kernel/setup_32.c:651:
+	io_delay_init();;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#322: FILE: include/asm-x86/io_32.h:253:
+extern void io_delay_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#323: FILE: include/asm-x86/io_32.h:254:
+extern void native_io_delay(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#338: FILE: include/asm-x86/io_32.h:259:
+extern void slow_down_io(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#357: FILE: include/asm-x86/io_64.h:38:
+extern void io_delay_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#358: FILE: include/asm-x86/io_64.h:39:
+extern void slow_down_io(void);

WARNING:TYPO_SPELLING: 'Nd' may be misspelled - perhaps 'And'?
#367: FILE: include/asm-x86/io_64.h:48:
+__asm__ __volatile__ ("out" #s " %" s1 "0,%" s2 "1" : : "a" (value), "Nd" (port))
                                                                       ^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#372: FILE: include/asm-x86/io_64.h:51:
+__OUT1(s,x) __OUT2(s,s1,"w"); } \
         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#372: FILE: include/asm-x86/io_64.h:51:
+__OUT1(s,x) __OUT2(s,s1,"w"); } \
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#372: FILE: include/asm-x86/io_64.h:51:
+__OUT1(s,x) __OUT2(s,s1,"w"); } \
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#373: FILE: include/asm-x86/io_64.h:52:
+__OUT1(s##_p,x) __OUT2(s,s1,"w"); slow_down_io(); }
             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#373: FILE: include/asm-x86/io_64.h:52:
+__OUT1(s##_p,x) __OUT2(s,s1,"w"); slow_down_io(); }
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#373: FILE: include/asm-x86/io_64.h:52:
+__OUT1(s##_p,x) __OUT2(s,s1,"w"); slow_down_io(); }
                            ^

WARNING:TYPO_SPELLING: 'Nd' may be misspelled - perhaps 'And'?
#380: FILE: include/asm-x86/io_64.h:58:
+__asm__ __volatile__ ("in" #s " %" s2 "1,%" s1 "0" : "=a" (_v) : "Nd" (port))
                                                                   ^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#385: FILE: include/asm-x86/io_64.h:60:
+#define __IN(s,s1) \
               ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#385: FILE: include/asm-x86/io_64.h:60:
+#define __IN(s,s1) \
+__IN1(s) __IN2(s,s1,"w"); return _v; } \
+__IN1(s##_p) __IN2(s,s1,"w"); slow_down_io(); return _v; }

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's' - possible side-effects?
#385: FILE: include/asm-x86/io_64.h:60:
+#define __IN(s,s1) \
+__IN1(s) __IN2(s,s1,"w"); return _v; } \
+__IN1(s##_p) __IN2(s,s1,"w"); slow_down_io(); return _v; }

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's1' - possible side-effects?
#385: FILE: include/asm-x86/io_64.h:60:
+#define __IN(s,s1) \
+__IN1(s) __IN2(s,s1,"w"); return _v; } \
+__IN1(s##_p) __IN2(s,s1,"w"); slow_down_io(); return _v; }

ERROR:SPACING: space required after that ',' (ctx:VxV)
#386: FILE: include/asm-x86/io_64.h:61:
+__IN1(s) __IN2(s,s1,"w"); return _v; } \
                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#386: FILE: include/asm-x86/io_64.h:61:
+__IN1(s) __IN2(s,s1,"w"); return _v; } \
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#387: FILE: include/asm-x86/io_64.h:62:
+__IN1(s##_p) __IN2(s,s1,"w"); slow_down_io(); return _v; }
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#387: FILE: include/asm-x86/io_64.h:62:
+__IN1(s##_p) __IN2(s,s1,"w"); slow_down_io(); return _v; }
                        ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000346563.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 13 errors, 10 warnings, 12 checks, 184 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000346563.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
