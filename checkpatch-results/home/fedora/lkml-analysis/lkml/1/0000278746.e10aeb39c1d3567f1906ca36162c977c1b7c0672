CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#98: FILE: drivers/char/cyclades.c:3406:
+		if (new_serial.close_delay != info->port.close_delay ||
 				new_serial.baud_base != info->baud ||

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'newinfo.close_delay != port->port.close_delay'
#188: FILE: drivers/char/isicom.c:1257:
+		if ((newinfo.close_delay != port->port.close_delay) ||
+				(newinfo.closing_wait != port->port.closing_wait) ||
 				((newinfo.flags & ~ASYNC_USR_MASK) !=
 				(port->port.flags & ~ASYNC_USR_MASK))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'newinfo.closing_wait != port->port.closing_wait'
#188: FILE: drivers/char/isicom.c:1257:
+		if ((newinfo.close_delay != port->port.close_delay) ||
+				(newinfo.closing_wait != port->port.closing_wait) ||
 				((newinfo.flags & ~ASYNC_USR_MASK) !=
 				(port->port.flags & ~ASYNC_USR_MASK))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#189: FILE: drivers/char/isicom.c:1258:
+		if ((newinfo.close_delay != port->port.close_delay) ||
+				(newinfo.closing_wait != port->port.closing_wait) ||

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#225: FILE: drivers/char/isicom.c:1801:
+			port->port.close_delay = 50 * HZ/100;
 			                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#226: FILE: drivers/char/isicom.c:1802:
+			port->port.closing_wait = 3000 * HZ/100;
 			                                   ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp.close_delay != port->port.close_delay'
#406: FILE: drivers/char/riscom8.c:1298:
+		if ((tmp.close_delay != port->port.close_delay) ||
+		    (tmp.closing_wait != port->port.closing_wait) ||
 		    ((tmp.flags & ~ASYNC_USR_MASK) !=
 		     (port->port.flags & ~ASYNC_USR_MASK)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp.closing_wait != port->port.closing_wait'
#406: FILE: drivers/char/riscom8.c:1298:
+		if ((tmp.close_delay != port->port.close_delay) ||
+		    (tmp.closing_wait != port->port.closing_wait) ||
 		    ((tmp.flags & ~ASYNC_USR_MASK) !=
 		     (port->port.flags & ~ASYNC_USR_MASK)))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#428: FILE: drivers/char/riscom8.c:1334:
+	tmp.close_delay = port->port.close_delay * HZ/100;
 	                                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#429: FILE: drivers/char/riscom8.c:1335:
+	tmp.closing_wait = port->port.closing_wait * HZ/100;
 	                                               ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#513: FILE: drivers/char/rocket.c:1172:
+		if (info->port.close_delay) {
+			msleep_interruptible(jiffies_to_msecs(info->port.close_delay));
 		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 149 exceeds 100 columns
#577: FILE: drivers/char/specialix.c:611:
+		dprintk (SX_DEBUG_CHAN, "port: %d %p flags: 0x%lx\n",board_No(bp) * SX_NPORT + channel,  port, port->port.flags & ASYNC_INITIALIZED);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#577: FILE: drivers/char/specialix.c:611:
+		dprintk (SX_DEBUG_CHAN, "port: %d %p flags: 0x%lx\n",board_No(bp) * SX_NPORT + channel,  port, port->port.flags & ASYNC_INITIALIZED);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#577: FILE: drivers/char/specialix.c:611:
+		dprintk (SX_DEBUG_CHAN, "port: %d %p flags: 0x%lx\n",board_No(bp) * SX_NPORT + channel,  port, port->port.flags & ASYNC_INITIALIZED);
 		                                                    ^

CHECK:CAMELCASE: Avoid CamelCase: <board_No>
#577: FILE: drivers/char/specialix.c:611:
+		dprintk (SX_DEBUG_CHAN, "port: %d %p flags: 0x%lx\n",board_No(bp) * SX_NPORT + channel,  port, port->port.flags & ASYNC_INITIALIZED);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#643: FILE: drivers/char/specialix.c:1033:
+	if (!(tty = port->port.tty) || !tty->termios) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#698: FILE: drivers/char/specialix.c:1318:
+	if (!(tty = port->port.tty) || C_HUPCL(tty)) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#718: FILE: drivers/char/specialix.c:1357:
+	if (tty_hung_up_p(filp) || port->port.flags & ASYNC_CLOSING) {
 	                  ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tty->count == 1'
#810: FILE: drivers/char/specialix.c:1550:
+	if ((tty->count == 1) && (port->port.count != 1)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'port->port.count != 1'
#810: FILE: drivers/char/specialix.c:1550:
+	if ((tty->count == 1) && (port->port.count != 1)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#841: FILE: drivers/char/specialix.c:1574:
+	if (port->port.closing_wait != ASYNC_CLOSING_WAIT_NONE) {
+		tty_wait_until_sent(tty, port->port.closing_wait);
 	}

CHECK:CAMELCASE: Avoid CamelCase: <port_No>
#864: FILE: drivers/char/specialix.c:1616:
+		       board_No(bp), port_No(port), port->port.count);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#880: FILE: drivers/char/specialix.c:1628:
+		if (port->port.close_delay) {
+			msleep_interruptible(jiffies_to_msecs(port->port.close_delay));
 		}

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#888: FILE: drivers/char/specialix.c:1633:
+	port->port.flags &= ~(ASYNC_NORMAL_ACTIVE|ASYNC_CLOSING);
 	                                         ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp.close_delay != port->port.close_delay'
#932: FILE: drivers/char/specialix.c:1937:
+		if ((tmp.close_delay != port->port.close_delay) ||
+		    (tmp.closing_wait != port->port.closing_wait) ||
 		    ((tmp.flags & ~ASYNC_USR_MASK) !=
+		     (port->port.flags & ~ASYNC_USR_MASK))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp.closing_wait != port->port.closing_wait'
#932: FILE: drivers/char/specialix.c:1937:
+		if ((tmp.close_delay != port->port.close_delay) ||
+		    (tmp.closing_wait != port->port.closing_wait) ||
 		    ((tmp.flags & ~ASYNC_USR_MASK) !=
+		     (port->port.flags & ~ASYNC_USR_MASK))) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#965: FILE: drivers/char/specialix.c:1980:
+	tmp.close_delay = port->port.close_delay * HZ/100;
 	                                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#966: FILE: drivers/char/specialix.c:1981:
+	tmp.closing_wait = port->port.closing_wait * HZ/100;
 	                                               ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1098: FILE: drivers/char/synclink.c:3163:
+		if (info->port.close_delay) {
+			msleep_interruptible(jiffies_to_msecs(info->port.close_delay));
 		}

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1114: FILE: drivers/char/synclink.c:4331:
+		info->port.close_delay = 5*HZ/10;
 		                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1114: FILE: drivers/char/synclink.c:4331:
+		info->port.close_delay = 5*HZ/10;
 		                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1115: FILE: drivers/char/synclink.c:4332:
+		info->port.closing_wait = 30*HZ;
 		                            ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1150: FILE: drivers/char/synclink_gt.c:775:
+		if (info->port.close_delay) {
+			msleep_interruptible(jiffies_to_msecs(info->port.close_delay));
 		}

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1167: FILE: drivers/char/synclink_gt.c:3454:
+		info->port.close_delay = 5*HZ/10;
 		                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1167: FILE: drivers/char/synclink_gt.c:3454:
+		info->port.close_delay = 5*HZ/10;
 		                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1168: FILE: drivers/char/synclink_gt.c:3455:
+		info->port.closing_wait = 30*HZ;
 		                            ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1196: FILE: drivers/char/synclinkmp.c:869:
+		if (info->port.close_delay) {
+			msleep_interruptible(jiffies_to_msecs(info->port.close_delay));
 		}

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1212: FILE: drivers/char/synclinkmp.c:3809:
+		info->port.close_delay = 5*HZ/10;
 		                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1212: FILE: drivers/char/synclinkmp.c:3809:
+		info->port.close_delay = 5*HZ/10;
 		                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1213: FILE: drivers/char/synclinkmp.c:3810:
+		info->port.closing_wait = 30*HZ;
 		                            ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000278746.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 9 warnings, 28 checks, 1046 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000278746.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
