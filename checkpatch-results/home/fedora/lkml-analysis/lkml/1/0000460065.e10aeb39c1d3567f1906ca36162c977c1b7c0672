WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
master.kernel.org:/pub/scm/linux/kernel/git/jgarzik/netdev-2.6.git upstream-linus

WARNING:TYPO_SPELLING: 'architecutres' may be misspelled - perhaps 'architectures'?
#62: 
      pcnet32: Fix PCnet32 performance bug on non-coherent architecutres
                                                           ^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#245: FILE: drivers/net/3c59x.c:832:
+			printk(KERN_WARNING "%s: Could not enable device \n",

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#245: FILE: drivers/net/3c59x.c:832:
+			printk(KERN_WARNING "%s: Could not enable device \n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: drivers/net/3c59x.c:833:
+			printk(KERN_WARNING "%s: Could not enable device \n",
+				dev->name);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#268: FILE: drivers/net/bonding/bond_main.c:865:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#270: FILE: drivers/net/bonding/bond_main.c:867:
+/*
+ * Retrieve the list of registered multicast addresses for the bonding

WARNING:BRACES: braces {} are not necessary for single statement blocks
#282: FILE: drivers/net/bonding/bond_main.c:879:
+		for (im = in_dev->mc_list; im; im = im->next) {
+			ip_mc_rejoin_group(im);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#297: FILE: drivers/net/bonding/bond_main.c:900:
+        bond->mc_list = NULL;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: drivers/net/bonding/bond_main.c:900:
+        bond->mc_list = NULL;$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pd"
#416: FILE: drivers/net/mv643xx_eth.c:1323:
+	if (pd == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#417: FILE: drivers/net/mv643xx_eth.c:1324:
+		printk(KERN_ERR "No mv643xx_eth_platform_data\n");

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#559: FILE: drivers/net/natsemi.c:2407:
+	/*
+	 * A real interrupt might have already reached us at this point

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#638: FILE: drivers/net/tulip/de2104x.c:1688:
+static void __devinit de21040_get_mac_address (struct de_private *de)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#638: FILE: drivers/net/tulip/de2104x.c:1688:
+static void __devinit de21040_get_mac_address (struct de_private *de)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#647: FILE: drivers/net/tulip/de2104x.c:1706:
+static void __devinit de21040_get_media_info(struct de_private *de)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#656: FILE: drivers/net/tulip/de2104x.c:1768:
+static void __devinit de21041_get_srom_info (struct de_private *de)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#656: FILE: drivers/net/tulip/de2104x.c:1768:
+static void __devinit de21041_get_srom_info (struct de_private *de)

ERROR:CODE_INDENT: code indent should use tabs where possible
#671: FILE: drivers/net/tulip/dmfe.c:148:
+ ^I^Iif (dmfe_debug || (dbug_now)) \$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#671: FILE: drivers/net/tulip/dmfe.c:148:
+ ^I^Iif (dmfe_debug || (dbug_now)) \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#671: FILE: drivers/net/tulip/dmfe.c:148:
+ ^I^Iif (dmfe_debug || (dbug_now)) \$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#672: FILE: drivers/net/tulip/dmfe.c:149:
+			printk(KERN_ERR DRV_NAME ": %s %lx\n",\

ERROR:CODE_INDENT: code indent should use tabs where possible
#673: FILE: drivers/net/tulip/dmfe.c:150:
+ ^I^I^I^I(msg), (long) (value)); \$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#673: FILE: drivers/net/tulip/dmfe.c:150:
+ ^I^I^I^I(msg), (long) (value)); \$

CHECK:SPACING: No space is necessary after a cast
#673: FILE: drivers/net/tulip/dmfe.c:150:
+ 				(msg), (long) (value)); \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#673: FILE: drivers/net/tulip/dmfe.c:150:
+ ^I^I^I^I(msg), (long) (value)); \$

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#677: FILE: drivers/net/tulip/dmfe.c:153:
+#define SHOW_MEDIA_TYPE(mode) \
+	printk (KERN_INFO DRV_NAME ": Change Speed to %sMhz %s duplex\n" , \
+		(mode & 1) ? "100":"10", (mode & 4) ? "full":"half");

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'mode' - possible side-effects?
#677: FILE: drivers/net/tulip/dmfe.c:153:
+#define SHOW_MEDIA_TYPE(mode) \
+	printk (KERN_INFO DRV_NAME ": Change Speed to %sMhz %s duplex\n" , \
+		(mode & 1) ? "100":"10", (mode & 4) ? "full":"half");

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'mode' may be better as '(mode)' to avoid precedence issues
#677: FILE: drivers/net/tulip/dmfe.c:153:
+#define SHOW_MEDIA_TYPE(mode) \
+	printk (KERN_INFO DRV_NAME ": Change Speed to %sMhz %s duplex\n" , \
+		(mode & 1) ? "100":"10", (mode & 4) ? "full":"half");

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#677: FILE: drivers/net/tulip/dmfe.c:153:
+#define SHOW_MEDIA_TYPE(mode) \
+	printk (KERN_INFO DRV_NAME ": Change Speed to %sMhz %s duplex\n" , \
+		(mode & 1) ? "100":"10", (mode & 4) ? "full":"half");

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#678: FILE: drivers/net/tulip/dmfe.c:154:
+	printk (KERN_INFO DRV_NAME ": Change Speed to %sMhz %s duplex\n" , \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#678: FILE: drivers/net/tulip/dmfe.c:154:
+	printk (KERN_INFO DRV_NAME ": Change Speed to %sMhz %s duplex\n" , \

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#678: FILE: drivers/net/tulip/dmfe.c:154:
+	printk (KERN_INFO DRV_NAME ": Change Speed to %sMhz %s duplex\n" , \
 	                                                                 ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#679: FILE: drivers/net/tulip/dmfe.c:155:
+		(mode & 1) ? "100":"10", (mode & 4) ? "full":"half");
 		                  ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#679: FILE: drivers/net/tulip/dmfe.c:155:
+		(mode & 1) ? "100":"10", (mode & 4) ? "full":"half");
 		                                            ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#688: FILE: drivers/net/tulip/dmfe.c:173:
+#define SROM_CLK_WRITE(data, ioaddr) \
+	outl(data|CR9_SROM_READ|CR9_SRCS,ioaddr); \
+	udelay(5); \
+	outl(data|CR9_SROM_READ|CR9_SRCS|CR9_SRCLK,ioaddr); \
+	udelay(5); \
+	outl(data|CR9_SROM_READ|CR9_SRCS,ioaddr); \
+	udelay(5);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'data' - possible side-effects?
#688: FILE: drivers/net/tulip/dmfe.c:173:
+#define SROM_CLK_WRITE(data, ioaddr) \
+	outl(data|CR9_SROM_READ|CR9_SRCS,ioaddr); \
+	udelay(5); \
+	outl(data|CR9_SROM_READ|CR9_SRCS|CR9_SRCLK,ioaddr); \
+	udelay(5); \
+	outl(data|CR9_SROM_READ|CR9_SRCS,ioaddr); \
+	udelay(5);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'data' may be better as '(data)' to avoid precedence issues
#688: FILE: drivers/net/tulip/dmfe.c:173:
+#define SROM_CLK_WRITE(data, ioaddr) \
+	outl(data|CR9_SROM_READ|CR9_SRCS,ioaddr); \
+	udelay(5); \
+	outl(data|CR9_SROM_READ|CR9_SRCS|CR9_SRCLK,ioaddr); \
+	udelay(5); \
+	outl(data|CR9_SROM_READ|CR9_SRCS,ioaddr); \
+	udelay(5);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ioaddr' - possible side-effects?
#688: FILE: drivers/net/tulip/dmfe.c:173:
+#define SROM_CLK_WRITE(data, ioaddr) \
+	outl(data|CR9_SROM_READ|CR9_SRCS,ioaddr); \
+	udelay(5); \
+	outl(data|CR9_SROM_READ|CR9_SRCS|CR9_SRCLK,ioaddr); \
+	udelay(5); \
+	outl(data|CR9_SROM_READ|CR9_SRCS,ioaddr); \
+	udelay(5);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#688: FILE: drivers/net/tulip/dmfe.c:173:
+#define SROM_CLK_WRITE(data, ioaddr) \
+	outl(data|CR9_SROM_READ|CR9_SRCS,ioaddr); \
+	udelay(5); \
+	outl(data|CR9_SROM_READ|CR9_SRCS|CR9_SRCLK,ioaddr); \
+	udelay(5); \
+	outl(data|CR9_SROM_READ|CR9_SRCS,ioaddr); \
+	udelay(5);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#689: FILE: drivers/net/tulip/dmfe.c:174:
+	outl(data|CR9_SROM_READ|CR9_SRCS,ioaddr); \
 	         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#689: FILE: drivers/net/tulip/dmfe.c:174:
+	outl(data|CR9_SROM_READ|CR9_SRCS,ioaddr); \
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#689: FILE: drivers/net/tulip/dmfe.c:174:
+	outl(data|CR9_SROM_READ|CR9_SRCS,ioaddr); \
 	                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#691: FILE: drivers/net/tulip/dmfe.c:176:
+	outl(data|CR9_SROM_READ|CR9_SRCS|CR9_SRCLK,ioaddr); \
 	         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#691: FILE: drivers/net/tulip/dmfe.c:176:
+	outl(data|CR9_SROM_READ|CR9_SRCS|CR9_SRCLK,ioaddr); \
 	                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#691: FILE: drivers/net/tulip/dmfe.c:176:
+	outl(data|CR9_SROM_READ|CR9_SRCS|CR9_SRCLK,ioaddr); \
 	                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#691: FILE: drivers/net/tulip/dmfe.c:176:
+	outl(data|CR9_SROM_READ|CR9_SRCS|CR9_SRCLK,ioaddr); \
 	                                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#693: FILE: drivers/net/tulip/dmfe.c:178:
+	outl(data|CR9_SROM_READ|CR9_SRCS,ioaddr); \
 	         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#693: FILE: drivers/net/tulip/dmfe.c:178:
+	outl(data|CR9_SROM_READ|CR9_SRCS,ioaddr); \
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#693: FILE: drivers/net/tulip/dmfe.c:178:
+	outl(data|CR9_SROM_READ|CR9_SRCS,ioaddr); \
 	                                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#697: FILE: drivers/net/tulip/dmfe.c:182:
+ (( ((pci_id)==PCI_DM9132_ID) || ((dev_rev) >= 0x02000030) ) ? \$

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#697: FILE: drivers/net/tulip/dmfe.c:182:
+ (( ((pci_id)==PCI_DM9132_ID) || ((dev_rev) >= 0x02000030) ) ? \
              ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#697: FILE: drivers/net/tulip/dmfe.c:182:
+ (( ((pci_id)==PCI_DM9132_ID) || ((dev_rev) >= 0x02000030) ) ? \

ERROR:SPACING: space prohibited before that close parenthesis ')'
#697: FILE: drivers/net/tulip/dmfe.c:182:
+ (( ((pci_id)==PCI_DM9132_ID) || ((dev_rev) >= 0x02000030) ) ? \

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#698: FILE: drivers/net/tulip/dmfe.c:183:
+	DM9102A_IO_SIZE: DM9102_IO_SIZE)
 	               ^

WARNING:INDENTED_LABEL: labels should not be indented
#698: FILE: drivers/net/tulip/dmfe.c:183:
+	DM9102A_IO_SIZE: DM9102_IO_SIZE)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pci_dev' - possible side-effects?
#702: FILE: drivers/net/tulip/dmfe.c:185:
+#define CHK_IO_SIZE(pci_dev, dev_rev) \
+	(__CHK_IO_SIZE(((pci_dev)->device << 16) | (pci_dev)->vendor, dev_rev))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#738: FILE: drivers/net/tulip/dmfe.c:375:
+		printk(KERN_WARNING DRV_NAME

CHECK:SPACING: No space is necessary after a cast
#774: FILE: drivers/net/tulip/dmfe.c:461:
+		((u16 *) db->srom)[i] =

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#783: FILE: drivers/net/tulip/dmfe.c:504:
  	if (dev) {
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#821: FILE: drivers/net/tulip/dmfe.c:675:
+		printk(KERN_ERR DRV_NAME ": No Tx resource %ld\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#831: FILE: drivers/net/tulip/dmfe.c:748:
+	printk(DRV_NAME ": FU:%lx EC:%lx LC:%lx NC:%lx"

WARNING:SPLIT_STRING: quoted string split across lines
#832: FILE: drivers/net/tulip/dmfe.c:749:
+	printk(DRV_NAME ": FU:%lx EC:%lx LC:%lx NC:%lx"
+		" LOC:%lx TXJT:%lx RESET:%lx RCR8:%lx FAL:%lx TT:%lx\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rxlen < RX_COPY_SIZE'
#863: FILE: drivers/net/tulip/dmfe.c:985:
+					if ((rxlen < RX_COPY_SIZE) &&
+						((newskb = dev_alloc_skb(rxlen + 2))
+						!= NULL)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#863: FILE: drivers/net/tulip/dmfe.c:985:
+					if ((rxlen < RX_COPY_SIZE) &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#864: FILE: drivers/net/tulip/dmfe.c:986:
+					if ((rxlen < RX_COPY_SIZE) &&
+						((newskb = dev_alloc_skb(rxlen + 2))

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#866: FILE: drivers/net/tulip/dmfe.c:988:
+						!= NULL)) {
+

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#900: FILE: drivers/net/tulip/dmfe.c:1177:
 	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#902: FILE: drivers/net/tulip/dmfe.c:1179:
+		/*0x43 is used instead of 0x3 because bit 6 should represent
+			link status of external PHY */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#902: FILE: drivers/net/tulip/dmfe.c:1179:
+			link status of external PHY */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#905: FILE: drivers/net/tulip/dmfe.c:1182:
+
+

WARNING:TYPO_SPELLING: 'conected' may be misspelled - perhaps 'connected'?
#907: FILE: drivers/net/tulip/dmfe.c:1184:
+		PHY link status pin is not conected correctly to chip
 		                           ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#907: FILE: drivers/net/tulip/dmfe.c:1184:
+	/* If chip reports that link is failed it could be because external
+		PHY link status pin is not conected correctly to chip

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#912: FILE: drivers/net/tulip/dmfe.c:1189:
+	phy_read (db->ioaddr, db->phy_addr, 1, db->chip_id);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#913: FILE: drivers/net/tulip/dmfe.c:1190:
+	link_ok_phy = (phy_read (db->ioaddr,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#918: FILE: drivers/net/tulip/dmfe.c:1194:
+		DMFE_DBUG (0, "PHY and chip report different link status", 0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#920: FILE: drivers/net/tulip/dmfe.c:1196:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#920: FILE: drivers/net/tulip/dmfe.c:1196:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#920: FILE: drivers/net/tulip/dmfe.c:1196:
+ ^I}$

ERROR:SPACING: space prohibited after that open parenthesis '('
#922: FILE: drivers/net/tulip/dmfe.c:1198:
+	if ( !link_ok && netif_carrier_ok(dev)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#956: FILE: drivers/net/tulip/dmfe.c:1217:
+	} else if (!netif_carrier_ok(dev)) {
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#960: FILE: drivers/net/tulip/dmfe.c:1221:
+		if ( !(db->media_mode & DMFE_AUTO) || !dmfe_sense_speed(db)) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#985: FILE: drivers/net/tulip/dmfe.c:1311:
+		rxptr->rdes2 = cpu_to_le32( pci_map_single(db->pdev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#986: FILE: drivers/net/tulip/dmfe.c:1312:
+		rxptr->rdes2 = cpu_to_le32( pci_map_single(db->pdev,
+			    skb->data, RX_ALLOC_SIZE, PCI_DMA_FROMDEVICE) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#986: FILE: drivers/net/tulip/dmfe.c:1312:
+			    skb->data, RX_ALLOC_SIZE, PCI_DMA_FROMDEVICE) );

ERROR:SPACING: space prohibited after that open parenthesis '('
#1009: FILE: drivers/net/tulip/dmfe.c:1526:
+		rxptr->rdes2 = cpu_to_le32( pci_map_single(db->pdev, skb->data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1010: FILE: drivers/net/tulip/dmfe.c:1527:
+		rxptr->rdes2 = cpu_to_le32( pci_map_single(db->pdev, skb->data,
+				    RX_ALLOC_SIZE, PCI_DMA_FROMDEVICE) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1010: FILE: drivers/net/tulip/dmfe.c:1527:
+				    RX_ALLOC_SIZE, PCI_DMA_FROMDEVICE) );

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1030: FILE: drivers/net/tulip/dmfe.c:1596:
+			phy_mode = phy_read(db->ioaddr,
+				    db->phy_addr, 7, db->chip_id) & 0xf000;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1034: FILE: drivers/net/tulip/dmfe.c:1599:
+			phy_mode = phy_read(db->ioaddr,
+				    db->phy_addr, 17, db->chip_id) & 0xf000;

WARNING:SPLIT_STRING: quoted string split across lines
#1136: FILE: drivers/net/tulip/dmfe.c:2076:
+MODULE_PARM_DESC(mode, "Davicom DM9xxx: "
+		"Bit 0: 10/100Mbps, bit 2: duplex, bit 8: HomePNA");

WARNING:SPLIT_STRING: quoted string split across lines
#1139: FILE: drivers/net/tulip/dmfe.c:2079:
+MODULE_PARM_DESC(SF_mode, "Davicom DM9xxx special function "
+		"(bit 0: VLAN, bit 1 Flow Control, bit 2: TX pause packet)");

CHECK:CAMELCASE: Avoid CamelCase: <txQ>
#1155: FILE: drivers/net/ucc_geth.c:3603:
+		bd = ugeth->p_tx_bd_ring[txQ];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <txBd>
#1165: FILE: drivers/net/ucc_geth.c:3613:
+	ugeth->txBd[txQ] = bd;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bd == ugeth->txBd[txQ]'
#1184: FILE: drivers/net/ucc_geth.c:3728:
+		if ((bd == ugeth->txBd[txQ]) && (netif_queue_stopped(dev) == 0))

CHECK:CAMELCASE: Avoid CamelCase: <confBd>
#1199: FILE: drivers/net/ucc_geth.c:3752:
+	ugeth->confBd[txQ] = bd;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1211: FILE: include/linux/igmp.h:221:
+extern void ip_mc_rejoin_group(struct ip_mc_list *im);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000460065.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 22 errors, 40 warnings, 35 checks, 1032 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000460065.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
