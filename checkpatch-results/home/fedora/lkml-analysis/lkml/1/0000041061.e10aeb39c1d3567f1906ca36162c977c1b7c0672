WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#104: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#109: FILE: arch/microblaze/kernel/ftrace.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#122: FILE: arch/microblaze/kernel/ftrace.c:14:
+#include <asm/cacheflush.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#131: FILE: arch/microblaze/kernel/ftrace.c:23:
+	__asm__ __volatile__("	1:	swi	%2, %1, 0;		\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#140: FILE: arch/microblaze/kernel/ftrace.c:32:
+					.previous;"			\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#140: FILE: arch/microblaze/kernel/ftrace.c:32:
+					.previous;"			\

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#165: FILE: arch/microblaze/kernel/ftrace.c:57:
+int ftrace_make_nop(struct module *mod,
+			struct dyn_ftrace *rec, unsigned long addr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#210: FILE: arch/microblaze/kernel/ftrace.c:102:
+	int ret;
+	ret_addr = addr; /* saving where the barrier jump is */

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#212: FILE: arch/microblaze/kernel/ftrace.c:104:
+	pr_debug("%s: addr:0x%x, rec->ip: 0x%x, imm:0x%x\n",
+		__func__, (unsigned int)addr, (unsigned int)rec->ip, imm);

WARNING:TYPO_SPELLING: 'retured' may be misspelled - perhaps 'returned'?
#223: FILE: arch/microblaze/kernel/ftrace.c:115:
+	/* The return code is retured via data */
 	                      ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#241: FILE: arch/microblaze/kernel/ftrace.c:133:
+	pr_debug("%s: func=0x%x, ip=0x%x, upper=0x%x, lower=0x%x\n",
+		__func__, (unsigned int)func, (unsigned int)ip, upper, lower);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#248: FILE: arch/microblaze/kernel/ftrace.c:140:
+	BUG_ON(!ret_addr);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000041061.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 4 checks, 222 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000041061.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
