WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#53: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#58: FILE: arch/microblaze/kernel/exceptions.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#86: FILE: arch/microblaze/kernel/exceptions.c:29:
+static void handle_unexpected_exception(unsigned int esr,
+				unsigned int kernel_mode, unsigned int addr)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#88: FILE: arch/microblaze/kernel/exceptions.c:31:
+	printk(KERN_WARNING "Unexpected exception %02x in %s mode, PC=%08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#89: FILE: arch/microblaze/kernel/exceptions.c:32:
+	printk(KERN_WARNING "Unexpected exception %02x in %s mode, PC=%08x\n",
+		esr, kernel_mode ? "kernel" : "user", addr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#93: FILE: arch/microblaze/kernel/exceptions.c:36:
+static void handle_exception(const char *message, int signal,
+				unsigned int kernel_mode, unsigned int addr)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#106: FILE: arch/microblaze/kernel/exceptions.c:49:
+	switch (esr) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#109: FILE: arch/microblaze/kernel/exceptions.c:52:
+		handle_exception("Illegal instruction", SIGILL,
+						kernel_mode, addr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: arch/microblaze/kernel/exceptions.c:57:
+		handle_exception("Instruction bus error", SIGBUS,
+						kernel_mode, addr);

WARNING:RETURN_VOID: void function return statements are not generally useful
#134: FILE: arch/microblaze/kernel/exceptions.c:77:
+	return;
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#141: FILE: arch/microblaze/kernel/hw_exception_handler.S:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#538: FILE: include/asm-microblaze/exceptions.h:1:
+/*

CHECK:BIT_MACRO: Prefer using the BIT macro
#558: FILE: include/asm-microblaze/exceptions.h:21:
+#define HWEX_MSR_BIT (1 << 8)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#561: FILE: include/asm-microblaze/exceptions.h:24:
+#define __enable_hw_exceptions()					\
+	__asm__ __volatile__ ("	msrset	r0, %0;				\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#562: FILE: include/asm-microblaze/exceptions.h:25:
+	__asm__ __volatile__ ("	msrset	r0, %0;				\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#563: FILE: include/asm-microblaze/exceptions.h:26:
+				nop; "					\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#563: FILE: include/asm-microblaze/exceptions.h:26:
+				nop; "					\

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#568: FILE: include/asm-microblaze/exceptions.h:31:
+#define __disable_hw_exceptions()					\
+	__asm__ __volatile__ ("	msrclr r0, %0;				\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#569: FILE: include/asm-microblaze/exceptions.h:32:
+	__asm__ __volatile__ ("	msrclr r0, %0;				\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#570: FILE: include/asm-microblaze/exceptions.h:33:
+				nop; "					\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#570: FILE: include/asm-microblaze/exceptions.h:33:
+				nop; "					\

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#575: FILE: include/asm-microblaze/exceptions.h:38:
+#define __enable_hw_exceptions()					\
+	__asm__ __volatile__ ("						\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#576: FILE: include/asm-microblaze/exceptions.h:39:
+	__asm__ __volatile__ ("						\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#580: FILE: include/asm-microblaze/exceptions.h:43:
+				nop; "					\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#580: FILE: include/asm-microblaze/exceptions.h:43:
+				nop; "					\

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#585: FILE: include/asm-microblaze/exceptions.h:48:
+#define __disable_hw_exceptions()					\
+	__asm__ __volatile__ ("						\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#586: FILE: include/asm-microblaze/exceptions.h:49:
+	__asm__ __volatile__ ("						\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#590: FILE: include/asm-microblaze/exceptions.h:53:
+				nop; "					\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#590: FILE: include/asm-microblaze/exceptions.h:53:
+				nop; "					\

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000257582.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 18 warnings, 7 checks, 529 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000257582.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
