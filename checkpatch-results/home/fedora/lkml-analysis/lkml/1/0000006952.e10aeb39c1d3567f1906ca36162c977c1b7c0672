WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
         :              return (state & TASK_INTERRUPTIBLE) || __fatal_signal_pending(p);

WARNING:TYPO_SPELLING: 'chello' may be misspelled - perhaps 'cello'?
#154: 
Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
                                 ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "self"
#180: FILE: tools/perf/builtin-annotate.c:158:
+	if (self != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#248: FILE: tools/perf/builtin-annotate.c:230:
+		u64 start = map__rip_2objdump(he->map, sym->start);
+		offset = line_ip - start;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!objdump_line"
#252: FILE: tools/perf/builtin-annotate.c:234:
+	if (objdump_line == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!next"
#281: FILE: tools/perf/builtin-annotate.c:263:
+		       (next == NULL || offset < next->offset)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#282: FILE: tools/perf/builtin-annotate.c:264:
+			if (sym_ext) {
[...]
+			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!path"
#283: FILE: tools/perf/builtin-annotate.c:265:
+				if (path == NULL)

CHECK:BRACES: Unbalanced braces around else statement
#286: FILE: tools/perf/builtin-annotate.c:268:
+			} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sym_ext"
#300: FILE: tools/perf/builtin-annotate.c:274:
+		if (sym_ext == NULL && h->sum)

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#333: FILE: tools/perf/builtin-annotate.c:435:
+			printf("%*Lx: %Lu\n", BITS_PER_LONG / 2,

WARNING:PRINTF_L: %Lu is non-standard C, use %llu
#335: FILE: tools/perf/builtin-annotate.c:437:
+	printf("%*s: %Lu\n", BITS_PER_LONG / 2, "h->sum", h->sum);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000006952.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 7 checks, 200 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000006952.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
