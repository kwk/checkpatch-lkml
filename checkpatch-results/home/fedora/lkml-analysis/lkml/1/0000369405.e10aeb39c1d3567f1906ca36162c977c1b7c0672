WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '78bdc3106a877cfa50439fa66b52acbc4e7868df', maybe rebased or not pulled?
#26: 
Commit 78bdc3106a877cfa50439fa66b52acbc4e7868df PPC: sg chaining support

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#47: FILE: include/asm-powerpc/dma-mapping.h:16:
+#include <asm/io.h>

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#59: FILE: include/asm-powerpc/dma-mapping.h:28:
+extern void *__dma_alloc_coherent(size_t size, dma_addr_t *handle, gfp_t gfp);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#60: FILE: include/asm-powerpc/dma-mapping.h:29:
+extern void __dma_free_coherent(size_t size, void *vaddr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#61: FILE: include/asm-powerpc/dma-mapping.h:30:
+extern void __dma_sync(void *vaddr, size_t size, int direction);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#62: FILE: include/asm-powerpc/dma-mapping.h:31:
+extern void __dma_sync_page(struct page *page, unsigned long offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#63: FILE: include/asm-powerpc/dma-mapping.h:32:
+extern void __dma_sync_page(struct page *page, unsigned long offset,
+				 size_t size, int direction);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#83: FILE: include/asm-powerpc/dma-mapping.h:52:
+	void *		(*alloc_coherent)(struct device *dev, size_t size,
+				dma_addr_t *dma_handle, gfp_t flag);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#85: FILE: include/asm-powerpc/dma-mapping.h:54:
+	void		(*free_coherent)(struct device *dev, size_t size,
+				void *vaddr, dma_addr_t dma_handle);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#87: FILE: include/asm-powerpc/dma-mapping.h:56:
+	dma_addr_t	(*map_single)(struct device *dev, void *ptr,
+				size_t size, enum dma_data_direction direction);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#89: FILE: include/asm-powerpc/dma-mapping.h:58:
+	void		(*unmap_single)(struct device *dev, dma_addr_t dma_addr,
+				size_t size, enum dma_data_direction direction);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#91: FILE: include/asm-powerpc/dma-mapping.h:60:
+	int		(*map_sg)(struct device *dev, struct scatterlist *sg,
+				int nents, enum dma_data_direction direction);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#93: FILE: include/asm-powerpc/dma-mapping.h:62:
+	void		(*unmap_sg)(struct device *dev, struct scatterlist *sg,
+				int nents, enum dma_data_direction direction);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#105: FILE: include/asm-powerpc/dma-mapping.h:74:
+	if (unlikely(dev == NULL || dev->archdata.dma_ops == NULL))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->archdata.dma_ops"
#105: FILE: include/asm-powerpc/dma-mapping.h:74:
+	if (unlikely(dev == NULL || dev->archdata.dma_ops == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dma_ops"
#114: FILE: include/asm-powerpc/dma-mapping.h:83:
+	if (unlikely(dma_ops == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dma_ops->dma_supported"
#116: FILE: include/asm-powerpc/dma-mapping.h:85:
+	if (dma_ops->dma_supported == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dma_ops"
#125: FILE: include/asm-powerpc/dma-mapping.h:94:
+	if (unlikely(dma_ops == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dma_ops->set_dma_mask"
#127: FILE: include/asm-powerpc/dma-mapping.h:96:
+	if (dma_ops->set_dma_mask != NULL)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#140: FILE: include/asm-powerpc/dma-mapping.h:109:
+	BUG_ON(!dma_ops);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#149: FILE: include/asm-powerpc/dma-mapping.h:118:
+	BUG_ON(!dma_ops);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#159: FILE: include/asm-powerpc/dma-mapping.h:128:
+	BUG_ON(!dma_ops);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#169: FILE: include/asm-powerpc/dma-mapping.h:138:
+	BUG_ON(!dma_ops);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#179: FILE: include/asm-powerpc/dma-mapping.h:148:
+	BUG_ON(!dma_ops);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000369405.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 17 checks, 149 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000369405.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
