WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#68: FILE: arch/x86/kernel/io_apic.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#113: FILE: arch/x86/kernel/io_apic.c:46:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/smp.h> instead of <asm/smp.h>
#114: FILE: arch/x86/kernel/io_apic.c:47:
+#include <asm/smp.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/acpi.h> instead of <asm/acpi.h>
#117: FILE: arch/x86/kernel/io_apic.c:50:
+#include <asm/acpi.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/nmi.h> instead of <asm/nmi.h>
#121: FILE: arch/x86/kernel/io_apic.c:54:
+#include <asm/nmi.h>

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#131: FILE: arch/x86/kernel/io_apic.c:64:
+#define __apicdebuginit(type) static type __init

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#164: FILE: arch/x86/kernel/io_apic.c:97:
+#if defined (CONFIG_MCA) || defined (CONFIG_EISA)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#164: FILE: arch/x86/kernel/io_apic.c:97:
+#if defined (CONFIG_MCA) || defined (CONFIG_EISA)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#178: FILE: arch/x86/kernel/io_apic.c:111:
+}
+early_param("noapic", parse_noapic);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#188: FILE: arch/x86/kernel/io_apic.c:121:
+	unsigned move_cleanup_count;

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#220: FILE: arch/x86/kernel/io_apic.c:153:
+		nr_irq_cfg = simple_strtoul(arg, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(irq_cfg_legacy)
#247: FILE: arch/x86/kernel/io_apic.c:180:
+	legacy_count = sizeof(irq_cfg_legacy)/sizeof(irq_cfg_legacy[0]);

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#247: FILE: arch/x86/kernel/io_apic.c:180:
+	legacy_count = sizeof(irq_cfg_legacy)/sizeof(irq_cfg_legacy[0]);
 	                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#252: FILE: arch/x86/kernel/io_apic.c:185:
+		cfg[i-1].next = &cfg[i];
 		     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cfg' - possible side-effects?
#258: FILE: arch/x86/kernel/io_apic.c:191:
+#define for_each_irq_cfg(cfg)		\
+	for (cfg = irq_cfgx; cfg; cfg = cfg->next)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#284: FILE: arch/x86/kernel/io_apic.c:217:
+	cfg_pri = cfg = irq_cfgx;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#300: FILE: arch/x86/kernel/io_apic.c:233:
+		printk(KERN_DEBUG "try to get more irq_cfg %d\n", nr_irq_cfg);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#312: FILE: arch/x86/kernel/io_apic.c:245:
+		printk(KERN_DEBUG "irq_irq ==> [%#lx - %#lx]\n", phys, phys + total_bytes);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#318: FILE: arch/x86/kernel/io_apic.c:251:
+			cfg[i-1].next = &cfg[i];
 			     ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#331: FILE: arch/x86/kernel/io_apic.c:264:
+	printk(KERN_DEBUG "found new irq_cfg for irq %d\n", cfg->irq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#339: FILE: arch/x86/kernel/io_apic.c:272:
+		printk(KERN_DEBUG "=========================== %d\n", irq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#340: FILE: arch/x86/kernel/io_apic.c:273:
+		printk(KERN_DEBUG "irq_cfg dump after get that for %d\n", irq);

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#343: FILE: arch/x86/kernel/io_apic.c:276:
+			printk(KERN_DEBUG "irq_cfg %d ==> [%#lx - %#lx]\n", cfg->irq, phys, phys + bytes);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#343: FILE: arch/x86/kernel/io_apic.c:276:
+			printk(KERN_DEBUG "irq_cfg %d ==> [%#lx - %#lx]\n", cfg->irq, phys, phys + bytes);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#345: FILE: arch/x86/kernel/io_apic.c:278:
+		printk(KERN_DEBUG "===========================\n");

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#376: FILE: arch/x86/kernel/io_apic.c:309:
+		pin[i-1].next = &pin[i];
 		     ^

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#380: FILE: arch/x86/kernel/io_apic.c:313:
+DEFINE_DYN_ARRAY(irq_2_pin_head, sizeof(struct irq_pin_list), nr_irq_2_pin, PAGE_SIZE, irq_2_pin_init_work);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#380: FILE: arch/x86/kernel/io_apic.c:313:
+}
+DEFINE_DYN_ARRAY(irq_2_pin_head, sizeof(struct irq_pin_list), nr_irq_2_pin, PAGE_SIZE, irq_2_pin_init_work);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#398: FILE: arch/x86/kernel/io_apic.c:331:
+	printk(KERN_DEBUG "try to get more irq_2_pin %d\n", nr_irq_2_pin);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#401: FILE: arch/x86/kernel/io_apic.c:334:
+		pin = kzalloc(sizeof(struct irq_pin_list)*nr_irq_2_pin,
 		                                         ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*pin)...) over kzalloc(sizeof(struct irq_pin_list)...)
#401: FILE: arch/x86/kernel/io_apic.c:334:
+		pin = kzalloc(sizeof(struct irq_pin_list)*nr_irq_2_pin,

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#402: FILE: arch/x86/kernel/io_apic.c:335:
+		pin = kzalloc(sizeof(struct irq_pin_list)*nr_irq_2_pin,
+				 GFP_ATOMIC);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#411: FILE: arch/x86/kernel/io_apic.c:344:
+		pin[i-1].next = &pin[i];
 		     ^

CHECK:SPACING: No space is necessary after a cast
#427: FILE: arch/x86/kernel/io_apic.c:360:
+	return (void __iomem *) __fix_to_virt(FIX_IO_APIC_BASE_0 + idx)

WARNING:LINE_SPACING: Missing a blank line after declarations
#434: FILE: arch/x86/kernel/io_apic.c:367:
+	struct io_apic __iomem *io_apic = io_apic_base(apic);
+	writel(reg, &io_apic->index);

WARNING:LINE_SPACING: Missing a blank line after declarations
#441: FILE: arch/x86/kernel/io_apic.c:374:
+	struct io_apic __iomem *io_apic = io_apic_base(apic);
+	writel(reg, &io_apic->index);

ERROR:CODE_INDENT: code indent should use tabs where possible
#454: FILE: arch/x86/kernel/io_apic.c:387:
+        if (sis_apic_bug)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#454: FILE: arch/x86/kernel/io_apic.c:387:
+        if (sis_apic_bug)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#455: FILE: arch/x86/kernel/io_apic.c:388:
+                writel(reg, &io_apic->index);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#455: FILE: arch/x86/kernel/io_apic.c:388:
+                writel(reg, &io_apic->index);$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#475: FILE: arch/x86/kernel/io_apic.c:408:
+		reg = io_apic_read(entry->apic, 0x10 + pin*2);
 		                                          ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#500: FILE: arch/x86/kernel/io_apic.c:433:
+	unsigned long flags;
+	spin_lock_irqsave(&ioapic_lock, flags);

WARNING:LINE_SPACING: Missing a blank line after declarations
#517: FILE: arch/x86/kernel/io_apic.c:450:
+	union entry_union eu;
+	eu.entry = e;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#518: FILE: arch/x86/kernel/io_apic.c:451:
+	io_apic_write(apic, 0x11 + 2*pin, eu.w2);
 	                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#519: FILE: arch/x86/kernel/io_apic.c:452:
+	io_apic_write(apic, 0x10 + 2*pin, eu.w1);
 	                            ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#525: FILE: arch/x86/kernel/io_apic.c:458:
+	unsigned long flags;
+	spin_lock_irqsave(&ioapic_lock, flags);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#541: FILE: arch/x86/kernel/io_apic.c:474:
+	io_apic_write(apic, 0x10 + 2*pin, eu.w1);
 	                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#542: FILE: arch/x86/kernel/io_apic.c:475:
+	io_apic_write(apic, 0x11 + 2*pin, eu.w2);
 	                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#569: FILE: arch/x86/kernel/io_apic.c:502:
+			io_apic_write(apic, 0x11 + pin*2, dest);
 			                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#571: FILE: arch/x86/kernel/io_apic.c:504:
+		io_apic_write(apic, 0x11 + pin*2, dest);
 		                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#573: FILE: arch/x86/kernel/io_apic.c:506:
+		reg = io_apic_read(apic, 0x10 + pin*2);
 		                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#576: FILE: arch/x86/kernel/io_apic.c:509:
+		io_apic_modify(apic, 0x10 + pin*2, reg);
 		                               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#632: FILE: arch/x86/kernel/io_apic.c:565:
+		printk(KERN_DEBUG " 0 add_pin_to_irq: irq %d --> apic %d pin %d\n", irq, apic, pin);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'add_pin_to_irq', this function's name, in a string
#632: FILE: arch/x86/kernel/io_apic.c:565:
+		printk(KERN_DEBUG " 0 add_pin_to_irq: irq %d --> apic %d pin %d\n", irq, apic, pin);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#648: FILE: arch/x86/kernel/io_apic.c:581:
+	printk(KERN_DEBUG " x add_pin_to_irq: irq %d --> apic %d pin %d\n", irq, apic, pin);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'add_pin_to_irq', this function's name, in a string
#648: FILE: arch/x86/kernel/io_apic.c:581:
+	printk(KERN_DEBUG " x add_pin_to_irq: irq %d --> apic %d pin %d\n", irq, apic, pin);

WARNING:LINE_SPACING: Missing a blank line after declarations
#686: FILE: arch/x86/kernel/io_apic.c:619:
+	struct io_apic __iomem *io_apic = io_apic_base(apic);
+	readl(&io_apic->data);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'R' - possible side-effects?
#689: FILE: arch/x86/kernel/io_apic.c:622:
+#define __DO_ACTION(R, ACTION, FINAL)					\
+									\
+{									\
+	int pin;							\
+	struct irq_cfg *cfg;						\
+	struct irq_pin_list *entry;					\
+									\
+	cfg = irq_cfg(irq);						\
+	entry = cfg->irq_2_pin;						\
+	for (;;) {							\
+		unsigned int reg;					\
+		if (!entry)						\
+			break;						\
+		pin = entry->pin;					\
+		reg = io_apic_read(entry->apic, 0x10 + R + pin*2);	\
+		reg ACTION;						\
+		io_apic_modify(entry->apic, 0x10 + R + pin*2, reg);	\
+		FINAL;							\
+		if (!entry->next)					\
+			break;						\
+		entry = entry->next;					\
+	}								\
+}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'R' may be better as '(R)' to avoid precedence issues
#689: FILE: arch/x86/kernel/io_apic.c:622:
+#define __DO_ACTION(R, ACTION, FINAL)					\
+									\
+{									\
+	int pin;							\
+	struct irq_cfg *cfg;						\
+	struct irq_pin_list *entry;					\
+									\
+	cfg = irq_cfg(irq);						\
+	entry = cfg->irq_2_pin;						\
+	for (;;) {							\
+		unsigned int reg;					\
+		if (!entry)						\
+			break;						\
+		pin = entry->pin;					\
+		reg = io_apic_read(entry->apic, 0x10 + R + pin*2);	\
+		reg ACTION;						\
+		io_apic_modify(entry->apic, 0x10 + R + pin*2, reg);	\
+		FINAL;							\
+		if (!entry->next)					\
+			break;						\
+		entry = entry->next;					\
+	}								\
+}

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#703: FILE: arch/x86/kernel/io_apic.c:636:
+		reg = io_apic_read(entry->apic, 0x10 + R + pin*2);	\
 		                                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#705: FILE: arch/x86/kernel/io_apic.c:638:
+		io_apic_modify(entry->apic, 0x10 + R + pin*2, reg);	\
 		                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#713: FILE: arch/x86/kernel/io_apic.c:646:
+#define DO_ACTION(name,R,ACTION, FINAL)					\
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#713: FILE: arch/x86/kernel/io_apic.c:646:
+#define DO_ACTION(name,R,ACTION, FINAL)					\
                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#715: FILE: arch/x86/kernel/io_apic.c:648:
+	static void name##_IO_APIC_irq (unsigned int irq)		\

ERROR:SPACING: space prohibited before that close parenthesis ')'
#722: FILE: arch/x86/kernel/io_apic.c:655:
+DO_ACTION(__unmask,	0, &= ~IO_APIC_REDIR_MASKED, )

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#738: FILE: arch/x86/kernel/io_apic.c:671:
+		reg = io_apic_read(entry->apic, 0x10 + pin*2);
 		                                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#741: FILE: arch/x86/kernel/io_apic.c:674:
+		io_apic_modify(entry->apic, 0x10 + pin*2, reg);
 		                                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#764: FILE: arch/x86/kernel/io_apic.c:697:
+	__modify_IO_APIC_irq(irq, IO_APIC_REDIR_MASKED,
+				IO_APIC_REDIR_LEVEL_TRIGGER);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#771: FILE: arch/x86/kernel/io_apic.c:704:
+	__modify_IO_APIC_irq(irq, IO_APIC_REDIR_LEVEL_TRIGGER,
+				IO_APIC_REDIR_MASKED);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#776: FILE: arch/x86/kernel/io_apic.c:709:
+static void mask_IO_APIC_irq (unsigned int irq)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#785: FILE: arch/x86/kernel/io_apic.c:718:
+static void unmask_IO_APIC_irq (unsigned int irq)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#808: FILE: arch/x86/kernel/io_apic.c:741:
+static void clear_IO_APIC (void)

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#841: FILE: arch/x86/kernel/io_apic.c:774:
+static int pirq_entries [MAX_PIRQS];

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#847: FILE: arch/x86/kernel/io_apic.c:780:
+	int ints[MAX_PIRQS+1];
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#863: FILE: arch/x86/kernel/io_apic.c:796:
+				"... PIRQ%d -> IRQ %d\n", i, ints[i+1]);
 				                                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#867: FILE: arch/x86/kernel/io_apic.c:800:
+		pirq_entries[MAX_PIRQS-i-1] = ints[i+1];
 		                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#867: FILE: arch/x86/kernel/io_apic.c:800:
+		pirq_entries[MAX_PIRQS-i-1] = ints[i+1];
 		                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#867: FILE: arch/x86/kernel/io_apic.c:800:
+		pirq_entries[MAX_PIRQS-i-1] = ints[i+1];
 		                                    ^

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#872: FILE: arch/x86/kernel/io_apic.c:805:
+__setup("pirq=", ioapic_pirq_setup);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#895: FILE: arch/x86/kernel/io_apic.c:828:
+		nr_ioapic_registers[apic] = reg_01.bits.entries+1;
 		                                               ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#899: FILE: arch/x86/kernel/io_apic.c:832:
+		early_ioapic_entries[apic] =
+			kzalloc(sizeof(struct IO_APIC_route_entry) *
+				nr_ioapic_registers[apic], GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#910: FILE: arch/x86/kernel/io_apic.c:843:
+			entry = early_ioapic_entries[apic][pin] =

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mp_irqs[i].mp_irqtype == type'
#970: FILE: arch/x86/kernel/io_apic.c:903:
+		if (test_bit(lbus, mp_bus_not_pci) &&
+		    (mp_irqs[i].mp_irqtype == type) &&
+		    (mp_irqs[i].mp_srcbusirq == irq))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mp_irqs[i].mp_srcbusirq == irq'
#970: FILE: arch/x86/kernel/io_apic.c:903:
+		if (test_bit(lbus, mp_bus_not_pci) &&
+		    (mp_irqs[i].mp_irqtype == type) &&
+		    (mp_irqs[i].mp_srcbusirq == irq))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mp_irqs[i].mp_irqtype == type'
#986: FILE: arch/x86/kernel/io_apic.c:919:
+		if (test_bit(lbus, mp_bus_not_pci) &&
+		    (mp_irqs[i].mp_irqtype == type) &&
+		    (mp_irqs[i].mp_srcbusirq == irq))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mp_irqs[i].mp_srcbusirq == irq'
#986: FILE: arch/x86/kernel/io_apic.c:919:
+		if (test_bit(lbus, mp_bus_not_pci) &&
+		    (mp_irqs[i].mp_irqtype == type) &&
+		    (mp_irqs[i].mp_srcbusirq == irq))

WARNING:LINE_SPACING: Missing a blank line after declarations
#993: FILE: arch/x86/kernel/io_apic.c:926:
+		int apic;
+		for(apic = 0; apic < nr_ioapics; apic++) {

ERROR:SPACING: space required before the open parenthesis '('
#993: FILE: arch/x86/kernel/io_apic.c:926:
+		for(apic = 0; apic < nr_ioapics; apic++) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1013: FILE: arch/x86/kernel/io_apic.c:946:
+	apic_printk(APIC_DEBUG, "querying PCI -> IRQ mapping bus:%d, slot:%d, pin:%d.\n",
+		bus, slot, pin);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bus == lbus'
#1026: FILE: arch/x86/kernel/io_apic.c:959:
+		if (!test_bit(lbus, mp_bus_not_pci) &&
+		    !mp_irqs[i].mp_irqtype &&
+		    (bus == lbus) &&
+		    (slot == ((mp_irqs[i].mp_srcbusirq >> 2) & 0x1f))) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1030: FILE: arch/x86/kernel/io_apic.c:963:
+			int irq = pin_2_irq(i,apic,mp_irqs[i].mp_dstirq);
 			                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1030: FILE: arch/x86/kernel/io_apic.c:963:
+			int irq = pin_2_irq(i,apic,mp_irqs[i].mp_dstirq);
 			                          ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1048: FILE: arch/x86/kernel/io_apic.c:981:
+EXPORT_SYMBOL(IO_APIC_get_PCI_irq_vector);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:LINE_SPACING: Missing a blank line after declarations
#1058: FILE: arch/x86/kernel/io_apic.c:991:
+		unsigned int port = 0x4d0 + (irq >> 3);
+		return (inb(port) >> (irq & 7)) & 1;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1068: FILE: arch/x86/kernel/io_apic.c:1001:
+ * when listed as conforming in the MP table. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1076: FILE: arch/x86/kernel/io_apic.c:1009:
+ * be read in from the ELCR */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1082: FILE: arch/x86/kernel/io_apic.c:1015:
+ * when listed as conforming in the MP table. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1090: FILE: arch/x86/kernel/io_apic.c:1023:
+ * be read in from the ELCR */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1095: FILE: arch/x86/kernel/io_apic.c:1028:
+
+

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1104: FILE: arch/x86/kernel/io_apic.c:1037:
+	switch (mp_irqs[idx].mp_irqflag & 3)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1119: FILE: arch/x86/kernel/io_apic.c:1052:
+			printk(KERN_WARNING "broken BIOS!!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1130: FILE: arch/x86/kernel/io_apic.c:1063:
+			printk(KERN_WARNING "broken BIOS!!\n");

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1146: FILE: arch/x86/kernel/io_apic.c:1079:
+	switch ((mp_irqs[idx].mp_irqflag>>2) & 3)
+	{

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1146: FILE: arch/x86/kernel/io_apic.c:1079:
+	switch ((mp_irqs[idx].mp_irqflag>>2) & 3)
 	                                ^

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1154: FILE: arch/x86/kernel/io_apic.c:1087:
+			switch (mp_bus_id_to_type[bus]) {
+				case MP_BUS_ISA: /* ISA pin */
[...]
+				case MP_BUS_EISA: /* EISA pin */
[...]
+				case MP_BUS_PCI: /* PCI pin */
[...]
+				case MP_BUS_MCA: /* MCA pin */
[...]
+				default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1177: FILE: arch/x86/kernel/io_apic.c:1110:
+					printk(KERN_WARNING "broken BIOS!!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1191: FILE: arch/x86/kernel/io_apic.c:1124:
+			printk(KERN_WARNING "broken BIOS!!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1202: FILE: arch/x86/kernel/io_apic.c:1135:
+			printk(KERN_WARNING "broken BIOS!!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1230: FILE: arch/x86/kernel/io_apic.c:1163:
+		printk(KERN_ERR "broken BIOS or MPTABLE parser, ayiee!!\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1238: FILE: arch/x86/kernel/io_apic.c:1171:
+		i = irq = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1242: FILE: arch/x86/kernel/io_apic.c:1175:
+                /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1243: FILE: arch/x86/kernel/io_apic.c:1176:
+                 * For MPS mode, so far only needed by ES7000 platform$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1244: FILE: arch/x86/kernel/io_apic.c:1177:
+                 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1245: FILE: arch/x86/kernel/io_apic.c:1178:
+                if (ioapic_renumber_irq)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1245: FILE: arch/x86/kernel/io_apic.c:1178:
+                if (ioapic_renumber_irq)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1246: FILE: arch/x86/kernel/io_apic.c:1179:
+                        irq = ioapic_renumber_irq(apic, irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1246: FILE: arch/x86/kernel/io_apic.c:1179:
+                        irq = ioapic_renumber_irq(apic, irq);$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pin >= 16'
#1253: FILE: arch/x86/kernel/io_apic.c:1186:
+	if ((pin >= 16) && (pin <= 23)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pin <= 23'
#1253: FILE: arch/x86/kernel/io_apic.c:1186:
+	if ((pin >= 16) && (pin <= 23)) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1254: FILE: arch/x86/kernel/io_apic.c:1187:
+		if (pirq_entries[pin-16] != -1) {
 		                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1255: FILE: arch/x86/kernel/io_apic.c:1188:
+			if (!pirq_entries[pin-16]) {
 			                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1257: FILE: arch/x86/kernel/io_apic.c:1190:
+						"disabling PIRQ%d\n", pin-16);
 						                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1259: FILE: arch/x86/kernel/io_apic.c:1192:
+				irq = pirq_entries[pin-16];
 				                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1262: FILE: arch/x86/kernel/io_apic.c:1195:
+						pin-16, irq);
 						   ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1297: FILE: arch/x86/kernel/io_apic.c:1230:
+	static int current_vector = FIRST_DEVICE_VECTOR, current_offset = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cfg->move_in_progress'
#1307: FILE: arch/x86/kernel/io_apic.c:1240:
+	if ((cfg->move_in_progress) || cfg->move_cleanup_count)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1313: FILE: arch/x86/kernel/io_apic.c:1246:
+		cpumask_t tmp;
+		cpus_and(tmp, cfg->domain, mask);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1381: FILE: arch/x86/kernel/io_apic.c:1314:
+	BUG_ON(!cfg->vector);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:CODE_INDENT: code indent should use tabs where possible
#1431: FILE: arch/x86/kernel/io_apic.c:1364:
+        int apic, idx, pin;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1431: FILE: arch/x86/kernel/io_apic.c:1364:
+        int apic, idx, pin;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1433: FILE: arch/x86/kernel/io_apic.c:1366:
+        for (apic = 0; apic < nr_ioapics; apic++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1433: FILE: arch/x86/kernel/io_apic.c:1366:
+        for (apic = 0; apic < nr_ioapics; apic++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1434: FILE: arch/x86/kernel/io_apic.c:1367:
+                for (pin = 0; pin < nr_ioapic_registers[apic]; pin++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1434: FILE: arch/x86/kernel/io_apic.c:1367:
+                for (pin = 0; pin < nr_ioapic_registers[apic]; pin++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1435: FILE: arch/x86/kernel/io_apic.c:1368:
+                        idx = find_irq_entry(apic, pin, mp_INT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1435: FILE: arch/x86/kernel/io_apic.c:1368:
+                        idx = find_irq_entry(apic, pin, mp_INT);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1436: FILE: arch/x86/kernel/io_apic.c:1369:
+                        if ((idx != -1) && (irq == pin_2_irq(idx, apic, pin)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1436: FILE: arch/x86/kernel/io_apic.c:1369:
+                        if ((idx != -1) && (irq == pin_2_irq(idx, apic, pin)))$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'irq == pin_2_irq(idx, apic, pin)'
#1436: FILE: arch/x86/kernel/io_apic.c:1369:
+                        if ((idx != -1) && (irq == pin_2_irq(idx, apic, pin)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#1437: FILE: arch/x86/kernel/io_apic.c:1370:
+                                return irq_trigger(idx);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1437: FILE: arch/x86/kernel/io_apic.c:1370:
+                                return irq_trigger(idx);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1438: FILE: arch/x86/kernel/io_apic.c:1371:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1438: FILE: arch/x86/kernel/io_apic.c:1371:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1439: FILE: arch/x86/kernel/io_apic.c:1372:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1439: FILE: arch/x86/kernel/io_apic.c:1372:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1440: FILE: arch/x86/kernel/io_apic.c:1373:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1441: FILE: arch/x86/kernel/io_apic.c:1374:
+         * nonexistent IRQs are edge default$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1442: FILE: arch/x86/kernel/io_apic.c:1375:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1443: FILE: arch/x86/kernel/io_apic.c:1376:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1443: FILE: arch/x86/kernel/io_apic.c:1376:
+        return 0;$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1499: FILE: arch/x86/kernel/io_apic.c:1432:
+	memset(entry,0,sizeof(*entry));
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1499: FILE: arch/x86/kernel/io_apic.c:1432:
+	memset(entry,0,sizeof(*entry));
 	              ^

CHECK:SPACING: No space is necessary after a cast
#1506: FILE: arch/x86/kernel/io_apic.c:1439:
+			(struct IR_IO_APIC_route_entry *) entry;

CHECK:BRACES: Unbalanced braces around else statement
#1531: FILE: arch/x86/kernel/io_apic.c:1464:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1570: FILE: arch/x86/kernel/io_apic.c:1503:
+	apic_printk(APIC_VERBOSE,KERN_DEBUG
 	                        ^

WARNING:SPLIT_STRING: quoted string split across lines
#1572: FILE: arch/x86/kernel/io_apic.c:1505:
+		    "IOAPIC[%d]: Set routing entry (%d-%d -> 0x%x -> "
+		    "IRQ %d Mode:%i Active:%i)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1576: FILE: arch/x86/kernel/io_apic.c:1509:
+
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1580: FILE: arch/x86/kernel/io_apic.c:1513:
+		printk("Failed to setup ioapic entry for ioapic  %d, pin %d\n",

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#1599: FILE: arch/x86/kernel/io_apic.c:1532:
+	for (apic = 0; apic < nr_ioapics; apic++) {
+	for (pin = 0; pin < nr_ioapic_registers[apic]; pin++) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1601: FILE: arch/x86/kernel/io_apic.c:1534:
+	for (pin = 0; pin < nr_ioapic_registers[apic]; pin++) {
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1602: FILE: arch/x86/kernel/io_apic.c:1535:
+		idx = find_irq_entry(apic,pin,mp_INT);
 		                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1602: FILE: arch/x86/kernel/io_apic.c:1535:
+		idx = find_irq_entry(apic,pin,mp_INT);
 		                             ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1604: FILE: arch/x86/kernel/io_apic.c:1537:
+			if (first_notcon) {
[...]
+			} else
[...]

WARNING:LONG_LINE: line length of 133 exceeds 100 columns
#1605: FILE: arch/x86/kernel/io_apic.c:1538:
+				apic_printk(APIC_VERBOSE, KERN_DEBUG " IO-APIC (apicid-pin) %d-%d", mp_ioapics[apic].mp_apicid, pin);

CHECK:BRACES: Unbalanced braces around else statement
#1607: FILE: arch/x86/kernel/io_apic.c:1540:
+			} else

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1608: FILE: arch/x86/kernel/io_apic.c:1541:
+				apic_printk(APIC_VERBOSE, ", %d-%d", mp_ioapics[apic].mp_apicid, pin);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1618: FILE: arch/x86/kernel/io_apic.c:1551:
+                if (multi_timer_check(apic, irq))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1618: FILE: arch/x86/kernel/io_apic.c:1551:
+                if (multi_timer_check(apic, irq))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1619: FILE: arch/x86/kernel/io_apic.c:1552:
+                        continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1619: FILE: arch/x86/kernel/io_apic.c:1552:
+                        continue;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1671: FILE: arch/x86/kernel/io_apic.c:1604:
+
+

CHECK:SPACING: No space is necessary after a cast
#1672: FILE: arch/x86/kernel/io_apic.c:1605:
+__apicdebuginit(void) print_IO_APIC(void)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1685: FILE: arch/x86/kernel/io_apic.c:1618:
+	printk(KERN_DEBUG "number of MP IRQ sources: %d.\n", mp_irq_entries);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1687: FILE: arch/x86/kernel/io_apic.c:1620:
+		printk(KERN_DEBUG "number of IO-APIC #%d registers: %d.\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1694: FILE: arch/x86/kernel/io_apic.c:1627:
+	printk(KERN_INFO "testing the IO APIC.......................\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#1696: FILE: arch/x86/kernel/io_apic.c:1629:
+	for (apic = 0; apic < nr_ioapics; apic++) {
[...]
+	spin_lock_irqsave(&ioapic_lock, flags);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1697: FILE: arch/x86/kernel/io_apic.c:1630:
+	for (apic = 0; apic < nr_ioapics; apic++) {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1703: FILE: arch/x86/kernel/io_apic.c:1636:
+        if (reg_01.bits.version >= 0x20)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1703: FILE: arch/x86/kernel/io_apic.c:1636:
+        if (reg_01.bits.version >= 0x20)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1704: FILE: arch/x86/kernel/io_apic.c:1637:
+                reg_03.raw = io_apic_read(apic, 3);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1704: FILE: arch/x86/kernel/io_apic.c:1637:
+                reg_03.raw = io_apic_read(apic, 3);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1707: FILE: arch/x86/kernel/io_apic.c:1640:
+	printk("\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1708: FILE: arch/x86/kernel/io_apic.c:1641:
+	printk(KERN_DEBUG "IO APIC #%d......\n", mp_ioapics[apic].mp_apicid);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1709: FILE: arch/x86/kernel/io_apic.c:1642:
+	printk(KERN_DEBUG ".... register #00: %08X\n", reg_00.raw);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1710: FILE: arch/x86/kernel/io_apic.c:1643:
+	printk(KERN_DEBUG ".......    : physical APIC id: %02X\n", reg_00.bits.ID);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1711: FILE: arch/x86/kernel/io_apic.c:1644:
+	printk(KERN_DEBUG ".......    : Delivery Type: %X\n", reg_00.bits.delivery_type);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1712: FILE: arch/x86/kernel/io_apic.c:1645:
+	printk(KERN_DEBUG ".......    : LTS          : %X\n", reg_00.bits.LTS);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1714: FILE: arch/x86/kernel/io_apic.c:1647:
+	printk(KERN_DEBUG ".... register #01: %08X\n", *(int *)&reg_01);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1715: FILE: arch/x86/kernel/io_apic.c:1648:
+	printk(KERN_DEBUG ".......     : max redirection entries: %04X\n", reg_01.bits.entries);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1717: FILE: arch/x86/kernel/io_apic.c:1650:
+	printk(KERN_DEBUG ".......     : PRQ implemented: %X\n", reg_01.bits.PRQ);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1718: FILE: arch/x86/kernel/io_apic.c:1651:
+	printk(KERN_DEBUG ".......     : IO APIC version: %04X\n", reg_01.bits.version);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1726: FILE: arch/x86/kernel/io_apic.c:1659:
+		printk(KERN_DEBUG ".... register #02: %08X\n", reg_02.raw);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1727: FILE: arch/x86/kernel/io_apic.c:1660:
+		printk(KERN_DEBUG ".......     : arbitration: %02X\n", reg_02.bits.arbitration);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1737: FILE: arch/x86/kernel/io_apic.c:1670:
+		printk(KERN_DEBUG ".... register #03: %08X\n", reg_03.raw);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1738: FILE: arch/x86/kernel/io_apic.c:1671:
+		printk(KERN_DEBUG ".......     : Boot DT    : %X\n", reg_03.bits.boot_DT);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1741: FILE: arch/x86/kernel/io_apic.c:1674:
+	printk(KERN_DEBUG ".... IRQ redirection table:\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1743: FILE: arch/x86/kernel/io_apic.c:1676:
+	printk(KERN_DEBUG " NR Dst Mask Trig IRR Pol"

WARNING:SPLIT_STRING: quoted string split across lines
#1744: FILE: arch/x86/kernel/io_apic.c:1677:
+	printk(KERN_DEBUG " NR Dst Mask Trig IRR Pol"
+			  " Stat Dmod Deli Vect:   \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1744: FILE: arch/x86/kernel/io_apic.c:1677:
+			  " Stat Dmod Deli Vect:   \n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1751: FILE: arch/x86/kernel/io_apic.c:1684:
+		printk(KERN_DEBUG " %02x %03X ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1752: FILE: arch/x86/kernel/io_apic.c:1685:
+		printk(KERN_DEBUG " %02x %03X ",
+			i,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1756: FILE: arch/x86/kernel/io_apic.c:1689:
+		printk("%1d    %1d    %1d   %1d   %1d    %1d    %1d    %02X\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1757: FILE: arch/x86/kernel/io_apic.c:1690:
+		printk("%1d    %1d    %1d   %1d   %1d    %1d    %1d    %02X\n",
+			entry.mask,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1768: FILE: arch/x86/kernel/io_apic.c:1701:
+	printk(KERN_DEBUG "IRQ to pin mappings:\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#1771: FILE: arch/x86/kernel/io_apic.c:1704:
+		struct irq_pin_list *entry = cfg->irq_2_pin;
+		if (!entry)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1773: FILE: arch/x86/kernel/io_apic.c:1706:
+		printk(KERN_DEBUG "IRQ%d ", cfg->irq);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1775: FILE: arch/x86/kernel/io_apic.c:1708:
+			printk("-> %d:%d", entry->apic, entry->pin);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1780: FILE: arch/x86/kernel/io_apic.c:1713:
+		printk("\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1783: FILE: arch/x86/kernel/io_apic.c:1716:
+	printk(KERN_INFO ".................................... done.\n");

WARNING:RETURN_VOID: void function return statements are not generally useful
#1786: FILE: arch/x86/kernel/io_apic.c:1719:
+	return;
+}

CHECK:SPACING: No space is necessary after a cast
#1788: FILE: arch/x86/kernel/io_apic.c:1721:
+__apicdebuginit(void) print_APIC_bitfield(int base)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1796: FILE: arch/x86/kernel/io_apic.c:1729:
+	printk(KERN_DEBUG "0123456789abcdef0123456789abcdef\n" KERN_DEBUG);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1798: FILE: arch/x86/kernel/io_apic.c:1731:
+		v = apic_read(base + i*0x10);
 		                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1800: FILE: arch/x86/kernel/io_apic.c:1733:
+			if (v & (1<<j))
 			          ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1801: FILE: arch/x86/kernel/io_apic.c:1734:
+				printk("1");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1803: FILE: arch/x86/kernel/io_apic.c:1736:
+				printk("0");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1805: FILE: arch/x86/kernel/io_apic.c:1738:
+		printk("\n");

CHECK:SPACING: No space is necessary after a cast
#1809: FILE: arch/x86/kernel/io_apic.c:1742:
+__apicdebuginit(void) print_local_APIC(void *dummy)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1817: FILE: arch/x86/kernel/io_apic.c:1750:
+	printk("\n" KERN_DEBUG "printing local APIC contents on CPU#%d/%d:\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1818: FILE: arch/x86/kernel/io_apic.c:1751:
+	printk("\n" KERN_DEBUG "printing local APIC contents on CPU#%d/%d:\n",
+		smp_processor_id(), hard_smp_processor_id());

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1820: FILE: arch/x86/kernel/io_apic.c:1753:
+	printk(KERN_INFO "... APIC ID:      %08x (%01x)\n", v, read_apic_id());

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1822: FILE: arch/x86/kernel/io_apic.c:1755:
+	printk(KERN_INFO "... APIC VERSION: %08x\n", v);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1827: FILE: arch/x86/kernel/io_apic.c:1760:
+	printk(KERN_DEBUG "... APIC TASKPRI: %08x (%02x)\n", v, v & APIC_TPRI_MASK);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1831: FILE: arch/x86/kernel/io_apic.c:1764:
+		printk(KERN_DEBUG "... APIC ARBPRI: %08x (%02x)\n", v,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1832: FILE: arch/x86/kernel/io_apic.c:1765:
+		printk(KERN_DEBUG "... APIC ARBPRI: %08x (%02x)\n", v,
+			v & APIC_ARBPRI_MASK);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1834: FILE: arch/x86/kernel/io_apic.c:1767:
+		printk(KERN_DEBUG "... APIC PROCPRI: %08x\n", v);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1838: FILE: arch/x86/kernel/io_apic.c:1771:
+	printk(KERN_DEBUG "... APIC EOI: %08x\n", v);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1840: FILE: arch/x86/kernel/io_apic.c:1773:
+	printk(KERN_DEBUG "... APIC RRR: %08x\n", v);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1842: FILE: arch/x86/kernel/io_apic.c:1775:
+	printk(KERN_DEBUG "... APIC LDR: %08x\n", v);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1844: FILE: arch/x86/kernel/io_apic.c:1777:
+	printk(KERN_DEBUG "... APIC DFR: %08x\n", v);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1846: FILE: arch/x86/kernel/io_apic.c:1779:
+	printk(KERN_DEBUG "... APIC SPIV: %08x\n", v);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1848: FILE: arch/x86/kernel/io_apic.c:1781:
+	printk(KERN_DEBUG "... APIC ISR field:\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1850: FILE: arch/x86/kernel/io_apic.c:1783:
+	printk(KERN_DEBUG "... APIC TMR field:\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1852: FILE: arch/x86/kernel/io_apic.c:1785:
+	printk(KERN_DEBUG "... APIC IRR field:\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1860: FILE: arch/x86/kernel/io_apic.c:1793:
+		printk(KERN_DEBUG "... APIC ESR: %08x\n", v);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1864: FILE: arch/x86/kernel/io_apic.c:1797:
+	printk(KERN_DEBUG "... APIC ICR: %08x\n", icr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1865: FILE: arch/x86/kernel/io_apic.c:1798:
+	printk(KERN_DEBUG "... APIC ICR2: %08x\n", icr >> 32);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1868: FILE: arch/x86/kernel/io_apic.c:1801:
+	printk(KERN_DEBUG "... APIC LVTT: %08x\n", v);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1872: FILE: arch/x86/kernel/io_apic.c:1805:
+		printk(KERN_DEBUG "... APIC LVTPC: %08x\n", v);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1875: FILE: arch/x86/kernel/io_apic.c:1808:
+	printk(KERN_DEBUG "... APIC LVT0: %08x\n", v);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1877: FILE: arch/x86/kernel/io_apic.c:1810:
+	printk(KERN_DEBUG "... APIC LVT1: %08x\n", v);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1881: FILE: arch/x86/kernel/io_apic.c:1814:
+		printk(KERN_DEBUG "... APIC LVTERR: %08x\n", v);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1885: FILE: arch/x86/kernel/io_apic.c:1818:
+	printk(KERN_DEBUG "... APIC TMICT: %08x\n", v);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1887: FILE: arch/x86/kernel/io_apic.c:1820:
+	printk(KERN_DEBUG "... APIC TMCCT: %08x\n", v);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1889: FILE: arch/x86/kernel/io_apic.c:1822:
+	printk(KERN_DEBUG "... APIC TDCR: %08x\n", v);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1890: FILE: arch/x86/kernel/io_apic.c:1823:
+	printk("\n");

CHECK:SPACING: No space is necessary after a cast
#1893: FILE: arch/x86/kernel/io_apic.c:1826:
+__apicdebuginit(void) print_all_local_APICs(void)

CHECK:CAMELCASE: Avoid CamelCase: <print_all_local_APICs>
#1893: FILE: arch/x86/kernel/io_apic.c:1826:
+__apicdebuginit(void) print_all_local_APICs(void)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: No space is necessary after a cast
#1898: FILE: arch/x86/kernel/io_apic.c:1831:
+__apicdebuginit(void) print_PIC(void)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1906: FILE: arch/x86/kernel/io_apic.c:1839:
+	printk(KERN_DEBUG "\nprinting PIC contents\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1911: FILE: arch/x86/kernel/io_apic.c:1844:
+	printk(KERN_DEBUG "... PIC  IMR: %04x\n", v);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1914: FILE: arch/x86/kernel/io_apic.c:1847:
+	printk(KERN_DEBUG "... PIC  IRR: %04x\n", v);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1916: FILE: arch/x86/kernel/io_apic.c:1849:
+	outb(0x0b,0xa0);
 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1917: FILE: arch/x86/kernel/io_apic.c:1850:
+	outb(0x0b,0x20);
 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1919: FILE: arch/x86/kernel/io_apic.c:1852:
+	outb(0x0a,0xa0);
 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1920: FILE: arch/x86/kernel/io_apic.c:1853:
+	outb(0x0a,0x20);
 	         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1924: FILE: arch/x86/kernel/io_apic.c:1857:
+	printk(KERN_DEBUG "... PIC  ISR: %04x\n", v);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1927: FILE: arch/x86/kernel/io_apic.c:1860:
+	printk(KERN_DEBUG "... PIC ELCR: %04x\n", v);

CHECK:SPACING: No space is necessary after a cast
#1930: FILE: arch/x86/kernel/io_apic.c:1863:
+__apicdebuginit(int) print_all_ICs(void)

CHECK:CAMELCASE: Avoid CamelCase: <print_all_ICs>
#1930: FILE: arch/x86/kernel/io_apic.c:1863:
+__apicdebuginit(int) print_all_ICs(void)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1941: FILE: arch/x86/kernel/io_apic.c:1874:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1954: FILE: arch/x86/kernel/io_apic.c:1887:
+	int i;
+	if (!pirqs_enabled)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1966: FILE: arch/x86/kernel/io_apic.c:1899:
+		nr_ioapic_registers[apic] = reg_01.bits.entries+1;
 		                                               ^

ERROR:SPACING: space required before the open parenthesis '('
#1968: FILE: arch/x86/kernel/io_apic.c:1901:
+	for(apic = 0; apic < nr_ioapics; apic++) {

WARNING:TYPO_SPELLING: 'ExtINT' may be misspelled - perhaps 'Extinct'?
#1970: FILE: arch/x86/kernel/io_apic.c:1903:
+		/* See if any of the pins is in ExtINT mode */
 		                                ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#1973: FILE: arch/x86/kernel/io_apic.c:1906:
+			struct IO_APIC_route_entry entry;
+			entry = ioapic_read_entry(apic, pin);

WARNING:TYPO_SPELLING: 'ExtInt' may be misspelled - perhaps 'Extinct'?
#1975: FILE: arch/x86/kernel/io_apic.c:1908:
+			/* If the interrupt line is enabled and in ExtInt mode
 			                                           ^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'entry.mask == 0'
#1978: FILE: arch/x86/kernel/io_apic.c:1911:
+			if ((entry.mask == 0) && (entry.delivery_mode == dest_ExtINT)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'entry.delivery_mode == dest_ExtINT'
#1978: FILE: arch/x86/kernel/io_apic.c:1911:
+			if ((entry.mask == 0) && (entry.delivery_mode == dest_ExtINT)) {

CHECK:CAMELCASE: Avoid CamelCase: <dest_ExtINT>
#1978: FILE: arch/x86/kernel/io_apic.c:1911:
+			if ((entry.mask == 0) && (entry.delivery_mode == dest_ExtINT)) {

WARNING:TYPO_SPELLING: 'ExtINT' may be misspelled - perhaps 'Extinct'?
#1986: FILE: arch/x86/kernel/io_apic.c:1919:
+	/* Look to see what if the MP table has reported the ExtINT */
 	                                                     ^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <mp_ExtINT>
#1991: FILE: arch/x86/kernel/io_apic.c:1924:
+	i8259_pin  = find_isa_irq_pin(0, mp_ExtINT);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i8259_pin >= 0'
#1994: FILE: arch/x86/kernel/io_apic.c:1927:
+	if ((ioapic_i8259.pin == -1) && (i8259_pin >= 0)) {

WARNING:TYPO_SPELLING: 'ExtINT' may be misspelled - perhaps 'Extinct'?
#1995: FILE: arch/x86/kernel/io_apic.c:1928:
+		printk(KERN_WARNING "ExtINT not setup in hardware but reported by MP table\n");
 		                     ^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1995: FILE: arch/x86/kernel/io_apic.c:1928:
+		printk(KERN_WARNING "ExtINT not setup in hardware but reported by MP table\n");

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2000: FILE: arch/x86/kernel/io_apic.c:1933:
+	if (((ioapic_i8259.apic != i8259_apic) || (ioapic_i8259.pin != i8259_pin)) &&
+		(i8259_pin >= 0) && (ioapic_i8259.pin >= 0))
+	{

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ioapic_i8259.apic != i8259_apic'
#2000: FILE: arch/x86/kernel/io_apic.c:1933:
+	if (((ioapic_i8259.apic != i8259_apic) || (ioapic_i8259.pin != i8259_pin)) &&
+		(i8259_pin >= 0) && (ioapic_i8259.pin >= 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ioapic_i8259.pin != i8259_pin'
#2000: FILE: arch/x86/kernel/io_apic.c:1933:
+	if (((ioapic_i8259.apic != i8259_apic) || (ioapic_i8259.pin != i8259_pin)) &&
+		(i8259_pin >= 0) && (ioapic_i8259.pin >= 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i8259_pin >= 0'
#2000: FILE: arch/x86/kernel/io_apic.c:1933:
+	if (((ioapic_i8259.apic != i8259_apic) || (ioapic_i8259.pin != i8259_pin)) &&
+		(i8259_pin >= 0) && (ioapic_i8259.pin >= 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ioapic_i8259.pin >= 0'
#2000: FILE: arch/x86/kernel/io_apic.c:1933:
+	if (((ioapic_i8259.apic != i8259_apic) || (ioapic_i8259.pin != i8259_pin)) &&
+		(i8259_pin >= 0) && (ioapic_i8259.pin >= 0))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2001: FILE: arch/x86/kernel/io_apic.c:1934:
+	if (((ioapic_i8259.apic != i8259_apic) || (ioapic_i8259.pin != i8259_pin)) &&
+		(i8259_pin >= 0) && (ioapic_i8259.pin >= 0))

WARNING:TYPO_SPELLING: 'ExtINT' may be misspelled - perhaps 'Extinct'?
#2003: FILE: arch/x86/kernel/io_apic.c:1936:
+		printk(KERN_WARNING "ExtINT in hardware and MP table differ\n");
 		                     ^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2003: FILE: arch/x86/kernel/io_apic.c:1936:
+		printk(KERN_WARNING "ExtINT in hardware and MP table differ\n");

WARNING:TYPO_SPELLING: 'ExtInt' may be misspelled - perhaps 'Extinct'?
#2037: FILE: arch/x86/kernel/io_apic.c:1970:
+		entry.delivery_mode   = dest_ExtINT; /* ExtInt */
 		                                        ^^^^^^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2075: FILE: arch/x86/kernel/io_apic.c:2008:
+	if (!(boot_cpu_data.x86_vendor == X86_VENDOR_INTEL)
+		|| APIC_XAPIC(apic_version[boot_cpu_physical_apicid]))

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2087: FILE: arch/x86/kernel/io_apic.c:2020:
+	for (apic = 0; apic < nr_ioapics; apic++) {
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2096: FILE: arch/x86/kernel/io_apic.c:2029:
+			printk(KERN_ERR "BIOS bug, IO-APIC#%d ID is %d in the MPC table!...\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2097: FILE: arch/x86/kernel/io_apic.c:2030:
+			printk(KERN_ERR "BIOS bug, IO-APIC#%d ID is %d in the MPC table!...\n",
+				apic, mp_ioapics[apic].mp_apicid);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2098: FILE: arch/x86/kernel/io_apic.c:2031:
+			printk(KERN_ERR "... fixing up to %d. (tell your hw vendor)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2099: FILE: arch/x86/kernel/io_apic.c:2032:
+			printk(KERN_ERR "... fixing up to %d. (tell your hw vendor)\n",
+				reg_00.bits.ID);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2109: FILE: arch/x86/kernel/io_apic.c:2042:
+		if (check_apicid_used(phys_id_present_map,
+					mp_ioapics[apic].mp_apicid)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2110: FILE: arch/x86/kernel/io_apic.c:2043:
+			printk(KERN_ERR "BIOS bug, IO-APIC#%d ID %d is already used!...\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2111: FILE: arch/x86/kernel/io_apic.c:2044:
+			printk(KERN_ERR "BIOS bug, IO-APIC#%d ID %d is already used!...\n",
+				apic, mp_ioapics[apic].mp_apicid);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2117: FILE: arch/x86/kernel/io_apic.c:2050:
+			printk(KERN_ERR "... fixing up to %d. (tell your hw vendor)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2118: FILE: arch/x86/kernel/io_apic.c:2051:
+			printk(KERN_ERR "... fixing up to %d. (tell your hw vendor)\n",
+				i);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2123: FILE: arch/x86/kernel/io_apic.c:2056:
+			physid_mask_t tmp;
+			tmp = apicid_to_cpu_present(mp_ioapics[apic].mp_apicid);

WARNING:SPLIT_STRING: quoted string split across lines
#2125: FILE: arch/x86/kernel/io_apic.c:2058:
+			apic_printk(APIC_VERBOSE, "Setting %d in the "
+					"phys_id_present_map\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2130: FILE: arch/x86/kernel/io_apic.c:2063:
+
+

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#2139: FILE: arch/x86/kernel/io_apic.c:2072:
+					mp_irqs[i].mp_dstapic
+						= mp_ioapics[apic].mp_apicid;

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2159: FILE: arch/x86/kernel/io_apic.c:2092:
+			printk("could not set ID!\n");

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#2173: FILE: arch/x86/kernel/io_apic.c:2106:
+__setup("no_timer_check", notimercheck);

WARNING:TYPO_SPELLING: 'ExtINT' may be misspelled - perhaps 'Extinct'?
#2201: FILE: arch/x86/kernel/io_apic.c:2134:
+	 * might have cached one ExtINT interrupt.  Finally, at
 	                         ^^^^^^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2254: FILE: arch/x86/kernel/io_apic.c:2187:
+{
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#2267: FILE: arch/x86/kernel/io_apic.c:2200:
+        send_IPI_self(irq_cfg(irq)->vector);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2267: FILE: arch/x86/kernel/io_apic.c:2200:
+        send_IPI_self(irq_cfg(irq)->vector);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2269: FILE: arch/x86/kernel/io_apic.c:2202:
+        return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2269: FILE: arch/x86/kernel/io_apic.c:2202:
+        return 1;$

WARNING:TYPO_SPELLING: 'aswell' may be misspelled - perhaps 'as well'?
#2295: FILE: arch/x86/kernel/io_apic.c:2228:
+ * For level triggered, we need to modify the io-apic RTE aswell with the update
                                                           ^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2367: FILE: arch/x86/kernel/io_apic.c:2300:
+^I ^I * Interrupt in progress. Migrating irq now will change the$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2367: FILE: arch/x86/kernel/io_apic.c:2300:
+^I ^I * Interrupt in progress. Migrating irq now will change the$

WARNING:TYPO_SPELLING: 'everthing' may be misspelled - perhaps 'everything'?
#2376: FILE: arch/x86/kernel/io_apic.c:2309:
+	/* everthing is clear. we have right of way */
 	   ^^^^^^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2429: FILE: arch/x86/kernel/io_apic.c:2362:
+	unsigned vector, me;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2430: FILE: arch/x86/kernel/io_apic.c:2363:
+	unsigned vector, me;
+	ack_APIC_irq();

WARNING:LINE_SPACING: Missing a blank line after declarations
#2441: FILE: arch/x86/kernel/io_apic.c:2374:
+		struct irq_cfg *cfg;
+		irq = __get_cpu_var(vector_irq)[vector];

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vector == cfg->vector'
#2452: FILE: arch/x86/kernel/io_apic.c:2385:
+		if ((vector == cfg->vector) && cpu_isset(me, cfg->domain))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2467: FILE: arch/x86/kernel/io_apic.c:2400:
+	unsigned vector, me;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vector == cfg->vector'
#2474: FILE: arch/x86/kernel/io_apic.c:2407:
+	if ((vector == cfg->vector) && cpu_isset(me, cfg->domain)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2568: FILE: arch/x86/kernel/io_apic.c:2501:
+	/*
+	* It appears there is an erratum which affects at least version 0x11

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2603: FILE: arch/x86/kernel/io_apic.c:2536:
+^I.name ^I^I= "IO-APIC",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2604: FILE: arch/x86/kernel/io_apic.c:2537:
+^I.startup ^I= startup_ioapic_irq,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2605: FILE: arch/x86/kernel/io_apic.c:2538:
+^I.mask^I ^I= mask_IO_APIC_irq,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2606: FILE: arch/x86/kernel/io_apic.c:2539:
+^I.unmask^I ^I= unmask_IO_APIC_irq,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2607: FILE: arch/x86/kernel/io_apic.c:2540:
+^I.ack ^I^I= ack_apic_edge,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2608: FILE: arch/x86/kernel/io_apic.c:2541:
+^I.eoi ^I^I= ack_apic_level,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2610: FILE: arch/x86/kernel/io_apic.c:2543:
+^I.set_affinity ^I= set_ioapic_affinity_irq,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2617: FILE: arch/x86/kernel/io_apic.c:2550:
+^I.name ^I^I= "IR-IO-APIC",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2618: FILE: arch/x86/kernel/io_apic.c:2551:
+^I.startup ^I= startup_ioapic_irq,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2619: FILE: arch/x86/kernel/io_apic.c:2552:
+^I.mask^I ^I= mask_IO_APIC_irq,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2620: FILE: arch/x86/kernel/io_apic.c:2553:
+^I.unmask^I ^I= unmask_IO_APIC_irq,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2621: FILE: arch/x86/kernel/io_apic.c:2554:
+^I.ack ^I^I= ack_x2apic_edge,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2622: FILE: arch/x86/kernel/io_apic.c:2555:
+^I.eoi ^I^I= ack_x2apic_level,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2624: FILE: arch/x86/kernel/io_apic.c:2557:
+^I.set_affinity ^I= set_ir_ioapic_affinity_irq,$

CHECK:BRACES: braces {} should be used on all arms of this statement
#2655: FILE: arch/x86/kernel/io_apic.c:2588:
+			if (irq < 16)
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2657: FILE: arch/x86/kernel/io_apic.c:2590:
+			else {

WARNING:TYPO_SPELLING: 'ExtINT' may be misspelled - perhaps 'Extinct'?
#2729: FILE: arch/x86/kernel/io_apic.c:2662:
+ * not support the ExtINT mode, unfortunately.  We need to send these
                    ^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <unlock_ExtINT_logic>
#2733: FILE: arch/x86/kernel/io_apic.c:2666:
+static inline void __init unlock_ExtINT_logic(void)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2792: FILE: arch/x86/kernel/io_apic.c:2725:
+}
+early_param("disable_timer_pin_1", disable_timer_pin_setup);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2814: FILE: arch/x86/kernel/io_apic.c:2747:
+        ver = apic_read(APIC_LVR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2814: FILE: arch/x86/kernel/io_apic.c:2747:
+        ver = apic_read(APIC_LVR);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2815: FILE: arch/x86/kernel/io_apic.c:2748:
+        ver = GET_APIC_VERSION(ver);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2815: FILE: arch/x86/kernel/io_apic.c:2748:
+        ver = GET_APIC_VERSION(ver);$

WARNING:SPLIT_STRING: quoted string split across lines
#2844: FILE: arch/x86/kernel/io_apic.c:2777:
+	apic_printk(APIC_QUIET, KERN_INFO "..TIMER: vector=0x%02X "
+		    "apic1=%d pin1=%d apic2=%d pin2=%d\n",

WARNING:SPLIT_STRING: quoted string split across lines
#2892: FILE: arch/x86/kernel/io_apic.c:2825:
+			apic_printk(APIC_QUIET, KERN_ERR "..MP-BIOS bug: "
+				    "8254 timer not connected to IO-APIC\n");

WARNING:SPLIT_STRING: quoted string split across lines
#2895: FILE: arch/x86/kernel/io_apic.c:2828:
+		apic_printk(APIC_QUIET, KERN_INFO "...trying to set up timer "
+			    "(IRQ0) through the 8259A ...\n");

WARNING:SPLIT_STRING: quoted string split across lines
#2925: FILE: arch/x86/kernel/io_apic.c:2858:
+		apic_printk(APIC_QUIET, KERN_WARNING "timer doesn't work "
+			    "through the IO-APIC - disabling NMI Watchdog!\n");

WARNING:TYPO_SPELLING: 'ExtINT' may be misspelled - perhaps 'Extinct'?
#2948: FILE: arch/x86/kernel/io_apic.c:2881:
+		    "...trying to set up timer as ExtINT IRQ...\n");
 		                                  ^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#2962: FILE: arch/x86/kernel/io_apic.c:2895:
+	panic("IO-APIC + timer doesn't work!  Boot with apic=debug and send a "
+		"report.  Then try booting with the 'noapic' option.\n");

WARNING:TYPO_SPELLING: 'ExtINT' may be misspelled - perhaps 'Extinct'?
#2971: FILE: arch/x86/kernel/io_apic.c:2904:
+ * typically it will be reused as an ExtINT cascade interrupt for
                                      ^^^^^^

WARNING:TYPO_SPELLING: 'ExtINT' may be misspelled - perhaps 'Extinct'?
#2973: FILE: arch/x86/kernel/io_apic.c:2906:
+ * reported as an ExtINT interrupt in the MP table.  With ACPI
                   ^^^^^^

WARNING:TYPO_SPELLING: 'ExtINT' may be misspelled - perhaps 'Extinct'?
#2974: FILE: arch/x86/kernel/io_apic.c:2907:
+ * there is no provision for ExtINT interrupts, and in the absence
                              ^^^^^^

WARNING:TYPO_SPELLING: 'ExtINT' may be misspelled - perhaps 'Extinct'?
#2979: FILE: arch/x86/kernel/io_apic.c:2912:
+ * the same ExtINT cascade interrupt to drive the local APIC of the
             ^^^^^^

CHECK:BIT_MACRO: Prefer using the BIT macro
#2984: FILE: arch/x86/kernel/io_apic.c:2917:
+#define PIC_IRQS	(1 << PIC_CASCADE_IR)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2988: FILE: arch/x86/kernel/io_apic.c:2921:
+{
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#3000: FILE: arch/x86/kernel/io_apic.c:2933:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3001: FILE: arch/x86/kernel/io_apic.c:2934:
+         * Set up IO-APIC IRQ routing.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3002: FILE: arch/x86/kernel/io_apic.c:2935:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3004: FILE: arch/x86/kernel/io_apic.c:2937:
+        if (!acpi_ioapic)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3004: FILE: arch/x86/kernel/io_apic.c:2937:
+        if (!acpi_ioapic)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3005: FILE: arch/x86/kernel/io_apic.c:2938:
+                setup_ioapic_ids_from_mpc();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3005: FILE: arch/x86/kernel/io_apic.c:2938:
+                setup_ioapic_ids_from_mpc();$

CHECK:CAMELCASE: Avoid CamelCase: <sync_Arb_IDs>
#3007: FILE: arch/x86/kernel/io_apic.c:2940:
+	sync_Arb_IDs();

WARNING:TYPO_SPELLING: 'didnt' may be misspelled - perhaps 'didn't'?
#3014: FILE: arch/x86/kernel/io_apic.c:2947:
+ *      Called after all the initialization is done. If we didnt find any
                                                            ^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#3020: FILE: arch/x86/kernel/io_apic.c:2953:
+        if (sis_apic_bug == -1)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3020: FILE: arch/x86/kernel/io_apic.c:2953:
+        if (sis_apic_bug == -1)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3021: FILE: arch/x86/kernel/io_apic.c:2954:
+                sis_apic_bug = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3021: FILE: arch/x86/kernel/io_apic.c:2954:
+                sis_apic_bug = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3022: FILE: arch/x86/kernel/io_apic.c:2955:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3022: FILE: arch/x86/kernel/io_apic.c:2955:
+        return 0;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#3031: FILE: arch/x86/kernel/io_apic.c:2964:
+};
+static struct sysfs_ioapic_data * mp_ioapic_data[MAX_IO_APICS];

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#3031: FILE: arch/x86/kernel/io_apic.c:2964:
+static struct sysfs_ioapic_data * mp_ioapic_data[MAX_IO_APICS];

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required one side of that '++' (ctx:WxW)
#3041: FILE: arch/x86/kernel/io_apic.c:2974:
+	for (i = 0; i < nr_ioapic_registers[dev->id]; i ++, entry ++ )
 	                                                          ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3041: FILE: arch/x86/kernel/io_apic.c:2974:
+	for (i = 0; i < nr_ioapic_registers[dev->id]; i ++, entry ++ )

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#3079: FILE: arch/x86/kernel/io_apic.c:3012:
+	struct sys_device * dev;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3086: FILE: arch/x86/kernel/io_apic.c:3019:
+	for (i = 0; i < nr_ioapics; i++ ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3091: FILE: arch/x86/kernel/io_apic.c:3024:
+			printk(KERN_ERR "Can't suspend/resume IOAPIC %d\n", i);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3101: FILE: arch/x86/kernel/io_apic.c:3034:
+			printk(KERN_ERR "Can't suspend/resume IOAPIC %d\n", i);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#3143: FILE: arch/x86/kernel/io_apic.c:3076:
+	if (irq > 0) {
+		dynamic_irq_init(irq);
+	}

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3171: FILE: arch/x86/kernel/io_apic.c:3104:
+	unsigned dest;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3190: FILE: arch/x86/kernel/io_apic.c:3123:
+		BUG_ON(ir_index == -1);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3192: FILE: arch/x86/kernel/io_apic.c:3125:
+		memset (&irte, 0, sizeof(irte));

CHECK:BRACES: Unbalanced braces around else statement
#3209: FILE: arch/x86/kernel/io_apic.c:3142:
+	} else

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#3216: FILE: arch/x86/kernel/io_apic.c:3149:
+				MSI_ADDR_DEST_MODE_PHYSICAL:
 				                           ^

WARNING:INDENTED_LABEL: labels should not be indented
#3216: FILE: arch/x86/kernel/io_apic.c:3149:
+				MSI_ADDR_DEST_MODE_PHYSICAL:

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3218: FILE: arch/x86/kernel/io_apic.c:3151:
+			((INT_DELIVERY_MODE != dest_LowestPrio) ?

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:CAMELCASE: Avoid CamelCase: <dest_LowestPrio>
#3218: FILE: arch/x86/kernel/io_apic.c:3151:
+			((INT_DELIVERY_MODE != dest_LowestPrio) ?

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#3219: FILE: arch/x86/kernel/io_apic.c:3152:
+				MSI_ADDR_REDIRECTION_CPU:
 				                        ^

WARNING:INDENTED_LABEL: labels should not be indented
#3219: FILE: arch/x86/kernel/io_apic.c:3152:
+				MSI_ADDR_REDIRECTION_CPU:

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3226: FILE: arch/x86/kernel/io_apic.c:3159:
+			((INT_DELIVERY_MODE != dest_LowestPrio) ?

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#3227: FILE: arch/x86/kernel/io_apic.c:3160:
+				MSI_DATA_DELIVERY_FIXED:
 				                       ^

WARNING:INDENTED_LABEL: labels should not be indented
#3227: FILE: arch/x86/kernel/io_apic.c:3160:
+				MSI_DATA_DELIVERY_FIXED:

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3354: FILE: arch/x86/kernel/io_apic.c:3287:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3361: FILE: arch/x86/kernel/io_apic.c:3294:
+		printk(KERN_ERR

ERROR:CODE_INDENT: code indent should use tabs where possible
#3363: FILE: arch/x86/kernel/io_apic.c:3296:
+^I^I        pci_name(dev));$

CHECK:BRACES: Unbalanced braces around else statement
#3390: FILE: arch/x86/kernel/io_apic.c:3323:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3561: FILE: arch/x86/kernel/io_apic.c:3494:
+	set_irq_chip_and_handler_name(irq, &dmar_msi_type, handle_edge_irq,
+		"edge");

WARNING:LINE_SPACING: Missing a blank line after declarations
#3577: FILE: arch/x86/kernel/io_apic.c:3510:
+	struct ht_irq_msg msg;
+	fetch_ht_irq_msg(irq, &msg);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3631: FILE: arch/x86/kernel/io_apic.c:3564:
+		unsigned dest;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3647: FILE: arch/x86/kernel/io_apic.c:3580:
+			((INT_DELIVERY_MODE != dest_LowestPrio) ?

ERROR:CODE_INDENT: code indent should use tabs where possible
#3662: FILE: arch/x86/kernel/io_apic.c:3595:
+                          ACPI-based IOAPIC Configuration$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3662: FILE: arch/x86/kernel/io_apic.c:3595:
+/* --------------------------------------------------------------------------
+                          ACPI-based IOAPIC Configuration

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3663: FILE: arch/x86/kernel/io_apic.c:3596:
+   -------------------------------------------------------------------------- */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3693: FILE: arch/x86/kernel/io_apic.c:3626:
+		printk(KERN_WARNING "IOAPIC[%d]: Invalid apic_id %d, trying "

WARNING:SPLIT_STRING: quoted string split across lines
#3694: FILE: arch/x86/kernel/io_apic.c:3627:
+		printk(KERN_WARNING "IOAPIC[%d]: Invalid apic_id %d, trying "
+			"%d\n", ioapic, apic_id, reg_00.bits.ID);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#3703: FILE: arch/x86/kernel/io_apic.c:3636:
+	if (check_apicid_used(apic_id_map, apic_id)) {
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3712: FILE: arch/x86/kernel/io_apic.c:3645:
+		printk(KERN_WARNING "IOAPIC[%d]: apic_id %d already used, "

WARNING:SPLIT_STRING: quoted string split across lines
#3713: FILE: arch/x86/kernel/io_apic.c:3646:
+		printk(KERN_WARNING "IOAPIC[%d]: apic_id %d already used, "
+			"trying %d\n", ioapic, apic_id, i);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3731: FILE: arch/x86/kernel/io_apic.c:3664:
+			printk("IOAPIC[%d]: Unable to change apic_id!\n", ioapic);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3755: FILE: arch/x86/kernel/io_apic.c:3688:
+int __init io_apic_get_redir_entries (int ioapic)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3767: FILE: arch/x86/kernel/io_apic.c:3700:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3768: FILE: arch/x86/kernel/io_apic.c:3701:
+int io_apic_set_pci_routing (int ioapic, int pin, int irq, int triggering, int polarity)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3771: FILE: arch/x86/kernel/io_apic.c:3704:
+		apic_printk(APIC_QUIET,KERN_ERR "IOAPIC[%d]: Invalid reference to IRQ 0\n",
 		                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3772: FILE: arch/x86/kernel/io_apic.c:3705:
+		apic_printk(APIC_QUIET,KERN_ERR "IOAPIC[%d]: Invalid reference to IRQ 0\n",
+			ioapic);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3787: FILE: arch/x86/kernel/io_apic.c:3720:
+
+

CHECK:BRACES: Unbalanced braces around else statement
#3846: FILE: arch/x86/kernel/io_apic.c:3779:
+			else {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "mem"
#3876: FILE: arch/x86/kernel/io_apic.c:3809:
+	if (mem != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#3906: FILE: arch/x86/kernel/io_apic.c:3839:
+                        if (!ioapic_phys) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3906: FILE: arch/x86/kernel/io_apic.c:3839:
+                        if (!ioapic_phys) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3907: FILE: arch/x86/kernel/io_apic.c:3840:
+                                printk(KERN_ERR$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3907: FILE: arch/x86/kernel/io_apic.c:3840:
+                                printk(KERN_ERR$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3907: FILE: arch/x86/kernel/io_apic.c:3840:
+                                printk(KERN_ERR

ERROR:CODE_INDENT: code indent should use tabs where possible
#3908: FILE: arch/x86/kernel/io_apic.c:3841:
+                                       "WARNING: bogus zero IO-APIC "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3908: FILE: arch/x86/kernel/io_apic.c:3841:
+                                       "WARNING: bogus zero IO-APIC "$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3909: FILE: arch/x86/kernel/io_apic.c:3842:
+                                       "address found in MPTABLE, "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3909: FILE: arch/x86/kernel/io_apic.c:3842:
+                                       "address found in MPTABLE, "$

WARNING:SPLIT_STRING: quoted string split across lines
#3909: FILE: arch/x86/kernel/io_apic.c:3842:
+                                       "WARNING: bogus zero IO-APIC "
+                                       "address found in MPTABLE, "

ERROR:CODE_INDENT: code indent should use tabs where possible
#3910: FILE: arch/x86/kernel/io_apic.c:3843:
+                                       "disabling IO/APIC support!\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3910: FILE: arch/x86/kernel/io_apic.c:3843:
+                                       "disabling IO/APIC support!\n");$

WARNING:SPLIT_STRING: quoted string split across lines
#3910: FILE: arch/x86/kernel/io_apic.c:3843:
+                                       "address found in MPTABLE, "
+                                       "disabling IO/APIC support!\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#3911: FILE: arch/x86/kernel/io_apic.c:3844:
+                                smp_found_config = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3911: FILE: arch/x86/kernel/io_apic.c:3844:
+                                smp_found_config = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3912: FILE: arch/x86/kernel/io_apic.c:3845:
+                                skip_ioapic_setup = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3912: FILE: arch/x86/kernel/io_apic.c:3845:
+                                skip_ioapic_setup = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3913: FILE: arch/x86/kernel/io_apic.c:3846:
+                                goto fake_ioapic_page;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3913: FILE: arch/x86/kernel/io_apic.c:3846:
+                                goto fake_ioapic_page;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3914: FILE: arch/x86/kernel/io_apic.c:3847:
+                        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3914: FILE: arch/x86/kernel/io_apic.c:3847:
+                        }$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ioapic_res"
#3931: FILE: arch/x86/kernel/io_apic.c:3864:
+		if (ioapic_res != NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3947: FILE: arch/x86/kernel/io_apic.c:3880:
+		printk(KERN_ERR

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#3960: FILE: arch/x86/kernel/io_apic.c:3893:
+/* Insert the IO APIC resources after PCI initialization has occured to handle
                                                              ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3961: FILE: arch/x86/kernel/io_apic.c:3894:
+ * IO APICS that are mapped in on a BAR in PCI space. */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000239578.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 79 errors, 236 warnings, 126 checks, 3904 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000239578.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
