WARNING:CONST_STRUCT: struct acpi_dock_ops should normally be const
#55: FILE: drivers/acpi/dock.c:78:
+	struct acpi_dock_ops *ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct acpi_dock_ops should normally be const
#108: FILE: drivers/acpi/dock.c:607:
+register_hotplug_dock_device(acpi_handle handle, struct acpi_dock_ops *ops,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#130: FILE: drivers/ata/libata-acpi.c:213:
+static void ata_acpi_uevent(struct ata_port *ap, struct ata_device *dev,
+	u32 event)

WARNING:STATIC_CONST_CHAR_ARRAY: char * array declaration might be better as static const
#134: FILE: drivers/ata/libata-acpi.c:217:
+	char *envp[] = { event_string, NULL };

CHECK:BRACES: braces {} should be used on all arms of this statement
#136: FILE: drivers/ata/libata-acpi.c:219:
+	if (dev) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#139: FILE: drivers/ata/libata-acpi.c:222:
+	} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#156: FILE: drivers/ata/libata-acpi.c:239:
+	struct ata_device *dev = data;
+	ata_acpi_uevent(dev->link->ap, dev, event);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct acpi_dock_ops should normally be const
#159: FILE: drivers/ata/libata-acpi.c:242:
+static struct acpi_dock_ops ata_acpi_dev_dock_ops = {

WARNING:CONST_STRUCT: struct acpi_dock_ops should normally be const
#164: FILE: drivers/ata/libata-acpi.c:247:
+static struct acpi_dock_ops ata_acpi_ap_dock_ops = {

WARNING:CONST_STRUCT: struct acpi_dock_ops should normally be const
#199: FILE: drivers/pci/hotplug/acpiphp_glue.c:172:
+static struct acpi_dock_ops acpiphp_dock_ops = {

WARNING:CONST_STRUCT: struct acpi_dock_ops should normally be const
#233: FILE: include/acpi/acpi_drivers.h:128:
+					struct acpi_dock_ops *ops,

WARNING:CONST_STRUCT: struct acpi_dock_ops should normally be const
#242: FILE: include/acpi/acpi_drivers.h:144:
+					       struct acpi_dock_ops *ops,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000218261.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 3 checks, 170 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000218261.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
