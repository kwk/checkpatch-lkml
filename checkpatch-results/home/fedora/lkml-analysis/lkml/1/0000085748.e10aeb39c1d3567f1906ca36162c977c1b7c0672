CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#56: FILE: drivers/char/nozomi.c:801:
+	size = kfifo_out(&port->fifo_ul, dc->send_buf,
 			   ul_size < SEND_BUF_MAX ? ul_size : SEND_BUF_MAX);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#77: FILE: drivers/char/sonypi.c:780:
+	while (kfifo_out_locked(&sonypi_device.input_fifo, (unsigned char *)&kp,
 			 sizeof(kp), &sonypi_device.input_fifo_lock)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#86: FILE: drivers/char/sonypi.c:831:
+		kfifo_in_locked(&sonypi_device.input_fifo,
 			(unsigned char *)&kp, sizeof(kp),

CHECK:SPACING: No space is necessary after a cast
#115: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:62:
+		kfifo_in(fifo, (unsigned char *) &entry, sizeof(u32));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#125: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:75:
+			kfifo_in(fifo,
 				(unsigned char *) &rarray[idx],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#133: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:82:
+			kfifo_in(fifo,
 				(unsigned char *) &rarray[i],

CHECK:SPACING: No space is necessary after a cast
#138: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:86:
+			kfifo_in(fifo, (unsigned char *) &i, sizeof(u32));

CHECK:SPACING: No space is necessary after a cast
#142: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:89:
+		kfifo_out_locked(fifo, (unsigned char *) &entry,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#143: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:90:
+		kfifo_out_locked(fifo, (unsigned char *) &entry,
 				sizeof(u32), fifo_lock);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#152: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:123:
+			kfifo_in(&rdev_p->rscp->qpid_fifo,
 				    (unsigned char *) &i, sizeof(u32));

CHECK:SPACING: No space is necessary after a cast
#160: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:183:
+	if (kfifo_out_locked(fifo, (unsigned char *) &entry, sizeof(u32), lock))

CHECK:SPACING: No space is necessary after a cast
#169: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:193:
+	kfifo_in_locked(fifo, (unsigned char *) &entry, sizeof(u32), lock)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#182: FILE: drivers/media/video/meye.c:803:
+		if (kfifo_out_locked(&meye.grabq, (unsigned char *)&reqnr,
 			      sizeof(int), &meye.grabq_lock) != sizeof(int)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#200: FILE: drivers/media/video/meye.c:824:
+		if (kfifo_out_locked(&meye.grabq, (unsigned char *)&reqnr,
 			      sizeof(int), &meye.grabq_lock) != sizeof(int)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#218: FILE: drivers/media/video/meye.c:938:
+	kfifo_in_locked(&meye.grabq, (unsigned char *)nb, sizeof(int),
 			 &meye.grabq_lock);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#227: FILE: drivers/media/video/meye.c:971:
+		kfifo_out_locked(&meye.doneq, (unsigned char *)&unused,
 				sizeof(int), &meye.doneq_lock);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: drivers/media/video/meye.c:1486:
+	if (!kfifo_out_locked(&meye.doneq, (unsigned char *)&reqnr,
 		       sizeof(int), &meye.doneq_lock)) {

CHECK:SPACING: No space is necessary after a cast
#256: FILE: drivers/net/wireless/libertas/main.c:857:
+			kfifo_out(&priv->event_fifo, (unsigned char *) &event,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#257: FILE: drivers/net/wireless/libertas/main.c:858:
+			kfifo_out(&priv->event_fifo, (unsigned char *) &event,
 				sizeof(event));

CHECK:SPACING: No space is necessary after a cast
#265: FILE: drivers/net/wireless/libertas/main.c:1581:
+	kfifo_in(&priv->event_fifo, (unsigned char *) &event, sizeof(u32));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#278: FILE: drivers/platform/x86/fujitsu-laptop.c:1011:
+				status = kfifo_in_locked(&fujitsu_hotkey->fifo,
 						   (unsigned char *)&keycode,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#286: FILE: drivers/platform/x86/fujitsu-laptop.c:1024:
+					kfifo_out_locked(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#299: FILE: drivers/platform/x86/sony-laptop.c:304:
+	while (kfifo_out_locked(&sony_laptop_input.fifo, (unsigned char *)&kp,
 			sizeof(kp), &sony_laptop_input.fifo_lock)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#308: FILE: drivers/platform/x86/sony-laptop.c:367:
+		kfifo_in_locked(&sony_laptop_input.fifo,
 			  (unsigned char *)&kp, sizeof(kp),

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#337: FILE: drivers/scsi/libiscsi.c:431:
+	kfifo_in(&session->cmdpool.queue, (void*)&task, sizeof(void*));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#337: FILE: drivers/scsi/libiscsi.c:431:
+	kfifo_in(&session->cmdpool.queue, (void*)&task, sizeof(void*));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#347: FILE: drivers/scsi/libiscsi.c:618:
+		if (!kfifo_out(&session->cmdpool.queue,
 				 (void*)&task, sizeof(void*)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#356: FILE: drivers/scsi/libiscsi.c:1380:
+	if (!kfifo_out(&conn->session->cmdpool.queue,
 			 (void *) &task, sizeof(void *)))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#364: FILE: drivers/scsi/libiscsi.c:2132:
+		kfifo_in(&q->queue, (void*)&q->pool[i], sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#364: FILE: drivers/scsi/libiscsi.c:2132:
+		kfifo_in(&q->queue, (void*)&q->pool[i], sizeof(void*));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#374: FILE: drivers/scsi/libiscsi.c:2480:
+	if (!kfifo_out(&session->cmdpool.queue,
                          (void*)&conn->login_task,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#382: FILE: drivers/scsi/libiscsi.c:2499:
+	kfifo_in(&session->cmdpool.queue, (void*)&conn->login_task,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#383: FILE: drivers/scsi/libiscsi.c:2500:
+	kfifo_in(&session->cmdpool.queue, (void*)&conn->login_task,
 		    sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#391: FILE: drivers/scsi/libiscsi.c:2562:
+	kfifo_in(&session->cmdpool.queue, (void*)&conn->login_task,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#392: FILE: drivers/scsi/libiscsi.c:2563:
+	kfifo_in(&session->cmdpool.queue, (void*)&conn->login_task,
 		    sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#404: FILE: drivers/scsi/libiscsi_tcp.c:448:
+	while (kfifo_out(&tcp_task->r2tqueue, (void*)&r2t, sizeof(void*))) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#404: FILE: drivers/scsi/libiscsi_tcp.c:448:
+	while (kfifo_out(&tcp_task->r2tqueue, (void*)&r2t, sizeof(void*))) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#405: FILE: drivers/scsi/libiscsi_tcp.c:449:
+		kfifo_in(&tcp_task->r2tpool.queue, (void*)&r2t,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#406: FILE: drivers/scsi/libiscsi_tcp.c:450:
+		kfifo_in(&tcp_task->r2tpool.queue, (void*)&r2t,
 			    sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#413: FILE: drivers/scsi/libiscsi_tcp.c:456:
+		kfifo_in(&tcp_task->r2tpool.queue, (void*)&r2t,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#414: FILE: drivers/scsi/libiscsi_tcp.c:457:
+		kfifo_in(&tcp_task->r2tpool.queue, (void*)&r2t,
 			    sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#422: FILE: drivers/scsi/libiscsi_tcp.c:544:
+	rc = kfifo_out(&tcp_task->r2tpool.queue, (void*)&r2t, sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#422: FILE: drivers/scsi/libiscsi_tcp.c:544:
+	rc = kfifo_out(&tcp_task->r2tpool.queue, (void*)&r2t, sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#431: FILE: drivers/scsi/libiscsi_tcp.c:557:
+		kfifo_in(&tcp_task->r2tpool.queue, (void*)&r2t,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#432: FILE: drivers/scsi/libiscsi_tcp.c:558:
+		kfifo_in(&tcp_task->r2tpool.queue, (void*)&r2t,
 			    sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#440: FILE: drivers/scsi/libiscsi_tcp.c:573:
+		kfifo_in(&tcp_task->r2tpool.queue, (void*)&r2t,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#441: FILE: drivers/scsi/libiscsi_tcp.c:574:
+		kfifo_in(&tcp_task->r2tpool.queue, (void*)&r2t,
 			    sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#449: FILE: drivers/scsi/libiscsi_tcp.c:583:
+	kfifo_in(&tcp_task->r2tqueue, (void*)&r2t, sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#449: FILE: drivers/scsi/libiscsi_tcp.c:583:
+	kfifo_in(&tcp_task->r2tqueue, (void*)&r2t, sizeof(void*));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#459: FILE: drivers/scsi/libiscsi_tcp.c:986:
+				kfifo_in(&tcp_task->r2tpool.queue,
 					    (void *)&tcp_task->r2t,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#468: FILE: drivers/scsi/libiscsi_tcp.c:994:
+			kfifo_out(&tcp_task->r2tqueue,
 				    (void *)&tcp_task->r2t, sizeof(void *));

CHECK:SPACING: No space is necessary after a cast
#479: FILE: drivers/scsi/libsrp.c:64:
+		kfifo_in(&q->queue, (void *) &iue, sizeof(void *));

CHECK:SPACING: No space is necessary after a cast
#488: FILE: drivers/scsi/libsrp.c:166:
+	kfifo_out_locked(&target->iu_queue.queue, (void *) &iue,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#489: FILE: drivers/scsi/libsrp.c:167:
+	kfifo_out_locked(&target->iu_queue.queue, (void *) &iue,
 			sizeof(void *), &target->iu_queue.lock);

CHECK:SPACING: No space is necessary after a cast
#497: FILE: drivers/scsi/libsrp.c:179:
+	kfifo_in_locked(&iue->target->iu_queue.queue, (void *) &iue,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#529: FILE: include/linux/kfifo.h:40:
+extern __must_check unsigned int kfifo_in(struct kfifo *fifo,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#530: FILE: include/linux/kfifo.h:41:
+extern __must_check unsigned int kfifo_in(struct kfifo *fifo,
 				const unsigned char *buffer, unsigned int len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#532: FILE: include/linux/kfifo.h:42:
+extern __must_check unsigned int kfifo_out(struct kfifo *fifo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#533: FILE: include/linux/kfifo.h:43:
+extern __must_check unsigned int kfifo_out(struct kfifo *fifo,
 				unsigned char *buffer, unsigned int len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#551: FILE: include/linux/kfifo.h:66:
+static inline __must_check unsigned int kfifo_in_locked(struct kfifo *fifo,
 		const unsigned char *from, unsigned int n, spinlock_t *lock)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#578: FILE: include/linux/kfifo.h:91:
+static inline __must_check unsigned int kfifo_out_locked(struct kfifo *fifo,
 	unsigned char *to, unsigned int n, spinlock_t *lock)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#608: FILE: kernel/kfifo.c:115:
+unsigned int kfifo_in(struct kfifo *fifo,
 			const unsigned char *buffer, unsigned int len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#630: FILE: kernel/kfifo.c:161:
+unsigned int kfifo_out(struct kfifo *fifo,
 			 unsigned char *buffer, unsigned int len)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000085748.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 16 errors, 0 warnings, 47 checks, 512 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000085748.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
