WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#101: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#106: FILE: drivers/net/irda/omap-ir.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#137: FILE: drivers/net/irda/omap-ir.c:32:
+ *  675 Mass Ave, Cambridge, MA 02139, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

CHECK:BIT_MACRO: Prefer using the BIT macro
#171: FILE: drivers/net/irda/omap-ir.c:66:
+#define UART3_EFR_EN			(1 << 4)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#172: FILE: drivers/net/irda/omap-ir.c:67:
+#define UART3_MCR_EN_TCR_TLR		(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#175: FILE: drivers/net/irda/omap-ir.c:70:
+#define UART3_LCR_SP2			(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#176: FILE: drivers/net/irda/omap-ir.c:71:
+#define UART3_LCR_DIVEN			(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#178: FILE: drivers/net/irda/omap-ir.c:73:
+#define UART3_FCR_FIFO_EN		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#179: FILE: drivers/net/irda/omap-ir.c:74:
+#define UART3_FCR_FIFO_RX		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#180: FILE: drivers/net/irda/omap-ir.c:75:
+#define UART3_FCR_FIFO_TX		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#181: FILE: drivers/net/irda/omap-ir.c:76:
+#define UART3_FCR_FIFO_DMA1		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#182: FILE: drivers/net/irda/omap-ir.c:77:
+#define UART3_FCR_FIFO_TX_TRIG16	(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#183: FILE: drivers/net/irda/omap-ir.c:78:
+#define UART3_FCR_FIFO_RX_TRIG16	(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#190: FILE: drivers/net/irda/omap-ir.c:85:
+#define UART3_SCR_TX_TRIG1		(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#191: FILE: drivers/net/irda/omap-ir.c:86:
+#define UART3_SCR_RX_TRIG1		(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#194: FILE: drivers/net/irda/omap-ir.c:89:
+#define UART3_MDR1_SIR			(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#197: FILE: drivers/net/irda/omap-ir.c:92:
+#define UART3_MDR1_SIP_AUTO		(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#200: FILE: drivers/net/irda/omap-ir.c:95:
+#define UART3_MDR2_IRTX_UNDERRUN	(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#202: FILE: drivers/net/irda/omap-ir.c:97:
+#define UART3_ACERG_TX_UNDERRUN_DIS	(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#203: FILE: drivers/net/irda/omap-ir.c:98:
+#define UART3_ACERG_SD_MODE_LOW		(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#204: FILE: drivers/net/irda/omap-ir.c:99:
+#define UART3_ACERG_DIS_IR_RX		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#206: FILE: drivers/net/irda/omap-ir.c:101:
+#define UART3_IER_EOF			(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#207: FILE: drivers/net/irda/omap-ir.c:102:
+#define UART3_IER_CTS			(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#209: FILE: drivers/net/irda/omap-ir.c:104:
+#define UART3_IIR_TX_STATUS		(1 << 5)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#260: FILE: drivers/net/irda/omap-ir.c:155:
+	omap_set_dma_dest_params(omap_ir->rx_dma_channel, 0x0, 0x1,
+				omap_ir->rx_buf_dma_phys,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#264: FILE: drivers/net/irda/omap-ir.c:159:
+	omap_set_dma_transfer_params(omap_ir->rx_dma_channel, 0x0,
+				IRDA_SKB_MAX_MTU, 0x1,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: drivers/net/irda/omap-ir.c:169:
+	omap_set_dma_dest_params(omap_ir->tx_dma_channel, 0x03, 0x0,
+				omap_ir->pdata->dest_start, 0, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#283: FILE: drivers/net/irda/omap-ir.c:178:
+	omap_set_dma_transfer_params(omap_ir->tx_dma_channel, 0x0, size, 0x1,
+				0x0, omap_ir->pdata->tx_trigger, 0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#297: FILE: drivers/net/irda/omap-ir.c:192:
+	printk(KERN_ERR "RX Transfer error or very big frame\n");

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#321: FILE: drivers/net/irda/omap-ir.c:216:
+/*
+ * Set the IrDA communications speed.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#332: FILE: drivers/net/irda/omap-ir.c:227:
+		omap_writel(omap_readl(MOD_CONF_CTRL_0) | (1 << 31) | (1 << 15),
+				MOD_CONF_CTRL_0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#339: FILE: drivers/net/irda/omap-ir.c:234:
+		omap_writel(omap_readl(FUNC_MUX_CTRL_A) | 7,
+					FUNC_MUX_CTRL_A);

WARNING:LINE_SPACING: Missing a blank line after declarations
#439: FILE: drivers/net/irda/omap-ir.c:334:
+		u8 mdr2 = uart_reg_in(UART3_MDR2);
+		if (mdr2 & UART3_MDR2_IRTX_UNDERRUN)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#440: FILE: drivers/net/irda/omap-ir.c:335:
+			printk(KERN_ERR "IrDA Buffer underrun error\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#467: FILE: drivers/net/irda/omap-ir.c:362:
+			printk(KERN_ERR "omap_sir: out of memory for RX SKB\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#467: FILE: drivers/net/irda/omap-ir.c:362:
+		if (!skb) {
+			printk(KERN_ERR "omap_sir: out of memory for RX SKB\n");

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#471: FILE: drivers/net/irda/omap-ir.c:366:
+		/*
+		 * Align any IP headers that may be contained

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#483: FILE: drivers/net/irda/omap-ir.c:378:
+			memcpy(skb_put(skb, w - 2), omap_ir->rx_buf_dma_virt,
+					w - 2);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#487: FILE: drivers/net/irda/omap-ir.c:382:
+			memcpy(skb_put(skb, w - 4), omap_ir->rx_buf_dma_virt,
+					w - 4);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#512: FILE: drivers/net/irda/omap-ir.c:407:
+
+

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#514: FILE: drivers/net/irda/omap-ir.c:409:
+	/*
+	 * Does this packet contain a request to change the interface

WARNING:TYPO_SPELLING: 'addtional' may be misspelled - perhaps 'additional'?
#521: FILE: drivers/net/irda/omap-ir.c:416:
+	if (xbofs) /* Set number of addtional BOFS */
 	                            ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#525: FILE: drivers/net/irda/omap-ir.c:420:
+	/*
+	 * If this is an empty frame, we can bypass a lot.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#571: FILE: drivers/net/irda/omap-ir.c:466:
+
+

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#576: FILE: drivers/net/irda/omap-ir.c:471:
+			/*
+			 * We are unable to set the speed if the

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#581: FILE: drivers/net/irda/omap-ir.c:476:
+				ret = omap_irda_set_speed(dev,
+						rq->ifr_baudrate);

CHECK:BRACES: Unbalanced braces around else statement
#582: FILE: drivers/net/irda/omap-ir.c:477:
+			else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#583: FILE: drivers/net/irda/omap-ir.c:478:
+				printk(KERN_ERR "omap_ir: SIOCSBANDWIDTH:"

WARNING:SPLIT_STRING: quoted string split across lines
#584: FILE: drivers/net/irda/omap-ir.c:479:
+				printk(KERN_ERR "omap_ir: SIOCSBANDWIDTH:"
+						" !netif_running\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LINE_SPACING: Missing a blank line after declarations
#612: FILE: drivers/net/irda/omap-ir.c:507:
+	struct omap_irda *omap_ir = netdev_priv(dev);
+	return &omap_ir->stats;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#627: FILE: drivers/net/irda/omap-ir.c:522:
+	/*
+	 * The interrupt must remain disabled for now.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#633: FILE: drivers/net/irda/omap-ir.c:528:
+	if (omap_request_dma(omap_ir->pdata->rx_channel, "IrDA Rx DMA",
+			(void *)omap_irda_rx_dma_callback,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around omap_ir->rx_dma_channel
#634: FILE: drivers/net/irda/omap-ir.c:529:
+			dev, &(omap_ir->rx_dma_channel))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#635: FILE: drivers/net/irda/omap-ir.c:530:
+		printk(KERN_ERR "Failed to request IrDA Rx DMA\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#640: FILE: drivers/net/irda/omap-ir.c:535:
+	if (omap_request_dma(omap_ir->pdata->tx_channel, "IrDA Tx DMA",
+			(void *)omap_irda_tx_dma_callback,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around omap_ir->tx_dma_channel
#641: FILE: drivers/net/irda/omap-ir.c:536:
+			dev, &(omap_ir->tx_dma_channel))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#642: FILE: drivers/net/irda/omap-ir.c:537:
+		printk(KERN_ERR "Failed to request IrDA Tx DMA\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#649: FILE: drivers/net/irda/omap-ir.c:544:
+		dma_alloc_coherent(NULL, IRDA_SKB_MAX_MTU,
+				&(omap_ir->rx_buf_dma_phys),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around omap_ir->rx_buf_dma_phys
#649: FILE: drivers/net/irda/omap-ir.c:544:
+				&(omap_ir->rx_buf_dma_phys),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#653: FILE: drivers/net/irda/omap-ir.c:548:
+		printk(KERN_ERR "Unable to allocate memory for rx_buf_dma\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#659: FILE: drivers/net/irda/omap-ir.c:554:
+		dma_alloc_coherent(NULL, IRDA_SIR_MAX_FRAME,
+				&(omap_ir->tx_buf_dma_phys),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around omap_ir->tx_buf_dma_phys
#659: FILE: drivers/net/irda/omap-ir.c:554:
+				&(omap_ir->tx_buf_dma_phys),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#663: FILE: drivers/net/irda/omap-ir.c:558:
+		printk(KERN_ERR "Unable to allocate memory for tx_buf_dma\n");

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#668: FILE: drivers/net/irda/omap-ir.c:563:
+	/*
+	 * Setup the serial port for the specified config.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#681: FILE: drivers/net/irda/omap-ir.c:576:
+	/*
+	 * Open a new IrLAP layer instance.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#705: FILE: drivers/net/irda/omap-ir.c:600:
+	dma_free_coherent(NULL, IRDA_SIR_MAX_FRAME,
+			omap_ir->tx_buf_dma_virt, omap_ir->tx_buf_dma_phys);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#708: FILE: drivers/net/irda/omap-ir.c:603:
+	dma_free_coherent(NULL, IRDA_SKB_MAX_MTU,
+			omap_ir->rx_buf_dma_virt, omap_ir->rx_buf_dma_phys);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#727: FILE: drivers/net/irda/omap-ir.c:622:
+		dma_free_coherent(NULL, IRDA_SKB_MAX_MTU,
+				omap_ir->rx_buf_dma_virt,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#731: FILE: drivers/net/irda/omap-ir.c:626:
+		dma_free_coherent(NULL, IRDA_SIR_MAX_FRAME,
+				omap_ir->tx_buf_dma_virt,

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#745: FILE: drivers/net/irda/omap-ir.c:640:
+	/*
+	 * Free resources

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#760: FILE: drivers/net/irda/omap-ir.c:655:
+	if (speed <= 115200) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#783: FILE: drivers/net/irda/omap-ir.c:678:
+	} else if (speed <= 1152000) {
+

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#825: FILE: drivers/net/irda/omap-ir.c:720:
+/*
+ * Suspend the IrDA interface.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#837: FILE: drivers/net/irda/omap-ir.c:732:
+		/*
+		 * Stop the transmit queue

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#847: FILE: drivers/net/irda/omap-ir.c:742:
+/*
+ * Resume the IrDA interface.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#859: FILE: drivers/net/irda/omap-ir.c:754:
+		/*
+		 * If we missed a speed change, initialise at the new speed

WARNING:TYPO_SPELLING: 'desireable' may be misspelled - perhaps 'desirable'?
#862: FILE: drivers/net/irda/omap-ir.c:757:
+		 * we left off it is desireable.  The converse argument is
 		                     ^^^^^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#875: FILE: drivers/net/irda/omap-ir.c:770:
+		/*
+		 * This automatically wakes up the queue

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#897: FILE: drivers/net/irda/omap-ir.c:792:
+		printk(KERN_ERR "IrDA Platform data not supplied\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#902: FILE: drivers/net/irda/omap-ir.c:797:
+		printk(KERN_ERR "IrDA invalid rx/tx channel value\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#908: FILE: drivers/net/irda/omap-ir.c:803:
+		printk(KERN_WARNING "no irq for IrDA\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#916: FILE: drivers/net/irda/omap-ir.c:811:
+
+

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#932: FILE: drivers/net/irda/omap-ir.c:827:
+		baudrate_mask |= IR_9600|IR_19200|IR_38400|IR_57600|IR_115200;
 		                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#932: FILE: drivers/net/irda/omap-ir.c:827:
+		baudrate_mask |= IR_9600|IR_19200|IR_38400|IR_57600|IR_115200;
 		                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#932: FILE: drivers/net/irda/omap-ir.c:827:
+		baudrate_mask |= IR_9600|IR_19200|IR_38400|IR_57600|IR_115200;
 		                                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#932: FILE: drivers/net/irda/omap-ir.c:827:
+		baudrate_mask |= IR_9600|IR_19200|IR_38400|IR_57600|IR_115200;
 		                                                   ^

WARNING:MISPLACED_INIT: __initdata should be placed after banner[]
#979: FILE: drivers/net/irda/omap-ir.c:874:
+static char __initdata banner[] = KERN_INFO "OMAP IrDA driver initializing\n";

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#983: FILE: drivers/net/irda/omap-ir.c:878:
+	printk(banner);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000195777.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 35 warnings, 52 checks, 914 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000195777.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
