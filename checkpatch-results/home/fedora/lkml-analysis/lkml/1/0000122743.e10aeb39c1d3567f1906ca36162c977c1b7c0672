CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#44: FILE: arch/x86/kvm/x86_emulate.c:62:
+#define SrcImmUByte (8<<4)      /* 8-bit unsigned immediate operand. */
                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <SrcImmUByte>
#44: FILE: arch/x86/kvm/x86_emulate.c:62:
+#define SrcImmUByte (8<<4)      /* 8-bit unsigned immediate operand. */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#45: FILE: arch/x86/kvm/x86_emulate.c:63:
+#define SrcMask     (0xf<<4)
                         ^

CHECK:CAMELCASE: Avoid CamelCase: <SrcMask>
#45: FILE: arch/x86/kvm/x86_emulate.c:63:
+#define SrcMask     (0xf<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#48: FILE: arch/x86/kvm/x86_emulate.c:65:
+#define ModRM       (1<<8)
                       ^

CHECK:CAMELCASE: Avoid CamelCase: <ModRM>
#48: FILE: arch/x86/kvm/x86_emulate.c:65:
+#define ModRM       (1<<8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#48: FILE: arch/x86/kvm/x86_emulate.c:65:
+#define ModRM       (1<<8)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#53: FILE: arch/x86/kvm/x86_emulate.c:67:
+#define Mov         (1<<9)
                       ^

CHECK:CAMELCASE: Avoid CamelCase: <Mov>
#53: FILE: arch/x86/kvm/x86_emulate.c:67:
+#define Mov         (1<<9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#53: FILE: arch/x86/kvm/x86_emulate.c:67:
+#define Mov         (1<<9)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#54: FILE: arch/x86/kvm/x86_emulate.c:68:
+#define BitOp       (1<<10)
                       ^

CHECK:CAMELCASE: Avoid CamelCase: <BitOp>
#54: FILE: arch/x86/kvm/x86_emulate.c:68:
+#define BitOp       (1<<10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#54: FILE: arch/x86/kvm/x86_emulate.c:68:
+#define BitOp       (1<<10)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#55: FILE: arch/x86/kvm/x86_emulate.c:69:
+#define MemAbs      (1<<11)      /* Memory operand is absolute displacement */
                       ^

CHECK:CAMELCASE: Avoid CamelCase: <MemAbs>
#55: FILE: arch/x86/kvm/x86_emulate.c:69:
+#define MemAbs      (1<<11)      /* Memory operand is absolute displacement */

CHECK:BIT_MACRO: Prefer using the BIT macro
#55: FILE: arch/x86/kvm/x86_emulate.c:69:
+#define MemAbs      (1<<11)      /* Memory operand is absolute displacement */

CHECK:CAMELCASE: Avoid CamelCase: <SrcImmByte>
#68: FILE: arch/x86/kvm/x86_emulate.c:1052:
+		if ((c->d & SrcMask) == SrcImmByte)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000122743.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 0 warnings, 17 checks, 34 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000122743.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
