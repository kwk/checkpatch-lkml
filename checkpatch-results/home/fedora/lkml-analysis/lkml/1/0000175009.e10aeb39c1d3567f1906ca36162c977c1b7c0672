CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#585: FILE: arch/arm/mach-omap2/clock24xx.h:36:
+static void omap2_dpllcore_recalc(struct clk *clk, unsigned long parent_rate,
+				 u8 rate_storage);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#692: FILE: arch/arm/mach-omap2/clock34xx.h:33:
+static void omap3_clkoutx2_recalc(struct clk *clk, unsigned long parent_rate,
+			      u8 rate_storage);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct clk *' should also have an identifier name
#886: FILE: arch/arm/plat-omap/include/mach/clock.h:76:
+	void			(*recalc)(struct clk *, unsigned long, u8);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#886: FILE: arch/arm/plat-omap/include/mach/clock.h:76:
+	void			(*recalc)(struct clk *, unsigned long, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#886: FILE: arch/arm/plat-omap/include/mach/clock.h:76:
+	void			(*recalc)(struct clk *, unsigned long, u8);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#895: FILE: arch/arm/plat-omap/include/mach/clock.h:124:
+extern void propagate_rate(struct clk *clk, u8 rate_storage);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#898: FILE: arch/arm/plat-omap/include/mach/clock.h:126:
+extern void followparent_recalc(struct clk *clk, unsigned long parent_rate,

CHECK:BIT_MACRO: Prefer using the BIT macro
#908: FILE: arch/arm/plat-omap/include/mach/clock.h:151:
+#define RECALC_ON_ENABLE	(1 << 14)	/* recalc/prop on ena/disa */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000175009.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 5 checks, 773 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000175009.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
