WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#71: FILE: drivers/staging/me4000/me4000.c:40:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#73: FILE: drivers/staging/me4000/me4000.c:42:
+#include <asm/uaccess.h>

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#186: FILE: drivers/staging/me4000/me4000.c:144:
+static int me4000_ao_simultaneous_update(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#206: FILE: drivers/staging/me4000/me4000.c:161:
+static int me4000_ai_single(struct me4000_ai_single *,
+				struct me4000_ai_context *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#235: FILE: drivers/staging/me4000/me4000.c:177:
+static int me4000_ai_config(struct me4000_ai_config *,
+				struct me4000_ai_context *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#281: FILE: drivers/staging/me4000/me4000.c:210:
+static int me4000_dio_config(struct me4000_dio_config *,
+				struct me4000_dio_context *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#283: FILE: drivers/staging/me4000/me4000.c:212:
+static int me4000_dio_get_byte(struct me4000_dio_byte *,
+				struct me4000_dio_context *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#285: FILE: drivers/staging/me4000/me4000.c:214:
+static int me4000_dio_set_byte(struct me4000_dio_byte *,
+				struct me4000_dio_context *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#298: FILE: drivers/staging/me4000/me4000.c:223:
+static int me4000_cnt_config(struct me4000_cnt_config *,
+				struct me4000_cnt_context *);

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#333: FILE: drivers/staging/me4000/me4000.c:250:
+static int inline me4000_buf_count(struct me4000_circ_buf buf, int size)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#339: FILE: drivers/staging/me4000/me4000.c:255:
+static int inline me4000_buf_space(struct me4000_circ_buf buf, int size)

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#345: FILE: drivers/staging/me4000/me4000.c:260:
+static int inline me4000_values_to_end(struct me4000_circ_buf buf, int size)

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#354: FILE: drivers/staging/me4000/me4000.c:269:
+static int inline me4000_space_to_end(struct me4000_circ_buf buf, int size)

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#363: FILE: drivers/staging/me4000/me4000.c:279:
+static void inline me4000_outb(unsigned char value, unsigned long port)

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#370: FILE: drivers/staging/me4000/me4000.c:285:
+static void inline me4000_outl(unsigned long value, unsigned long port)

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#377: FILE: drivers/staging/me4000/me4000.c:291:
+static unsigned long inline me4000_inl(unsigned long port)

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#386: FILE: drivers/staging/me4000/me4000.c:299:
+static unsigned char inline me4000_inb(unsigned long port)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: drivers/staging/me4000/me4000.c:314:
+      .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: drivers/staging/me4000/me4000.c:315:
+      .write = me4000_ao_write_sing,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: drivers/staging/me4000/me4000.c:316:
+      .ioctl = me4000_ao_ioctl_sing,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: drivers/staging/me4000/me4000.c:317:
+      .open = me4000_open,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: drivers/staging/me4000/me4000.c:318:
+      .release = me4000_release,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#420: FILE: drivers/staging/me4000/me4000.c:322:
+      .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: drivers/staging/me4000/me4000.c:323:
+      .write = me4000_ao_write_wrap,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: drivers/staging/me4000/me4000.c:324:
+      .ioctl = me4000_ao_ioctl_wrap,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: drivers/staging/me4000/me4000.c:325:
+      .open = me4000_open,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: drivers/staging/me4000/me4000.c:326:
+      .release = me4000_release,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: drivers/staging/me4000/me4000.c:330:
+      .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: drivers/staging/me4000/me4000.c:331:
+      .write = me4000_ao_write_cont,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#437: FILE: drivers/staging/me4000/me4000.c:332:
+      .poll = me4000_ao_poll_cont,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: drivers/staging/me4000/me4000.c:333:
+      .ioctl = me4000_ao_ioctl_cont,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#439: FILE: drivers/staging/me4000/me4000.c:334:
+      .open = me4000_open,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#440: FILE: drivers/staging/me4000/me4000.c:335:
+      .release = me4000_release,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: drivers/staging/me4000/me4000.c:336:
+      .fsync = me4000_ao_fsync_cont,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: drivers/staging/me4000/me4000.c:340:
+      .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: drivers/staging/me4000/me4000.c:341:
+      .ioctl = me4000_ai_ioctl_sing,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#451: FILE: drivers/staging/me4000/me4000.c:342:
+      .open = me4000_open,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: drivers/staging/me4000/me4000.c:343:
+      .release = me4000_release,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: drivers/staging/me4000/me4000.c:347:
+      .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: drivers/staging/me4000/me4000.c:348:
+      .read = me4000_ai_read,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#465: FILE: drivers/staging/me4000/me4000.c:349:
+      .poll = me4000_ai_poll,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#466: FILE: drivers/staging/me4000/me4000.c:350:
+      .ioctl = me4000_ai_ioctl_sw,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: drivers/staging/me4000/me4000.c:351:
+      .open = me4000_open,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: drivers/staging/me4000/me4000.c:352:
+      .release = me4000_release,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#469: FILE: drivers/staging/me4000/me4000.c:353:
+      .fasync = me4000_ai_fasync,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#479: FILE: drivers/staging/me4000/me4000.c:357:
+      .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#480: FILE: drivers/staging/me4000/me4000.c:358:
+      .read = me4000_ai_read,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: drivers/staging/me4000/me4000.c:359:
+      .poll = me4000_ai_poll,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#482: FILE: drivers/staging/me4000/me4000.c:360:
+      .ioctl = me4000_ai_ioctl_ext,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: drivers/staging/me4000/me4000.c:361:
+      .open = me4000_open,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: drivers/staging/me4000/me4000.c:362:
+      .release = me4000_release,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: drivers/staging/me4000/me4000.c:366:
+      .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#495: FILE: drivers/staging/me4000/me4000.c:367:
+      .read = me4000_ai_read,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: drivers/staging/me4000/me4000.c:368:
+      .poll = me4000_ai_poll,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: drivers/staging/me4000/me4000.c:369:
+      .ioctl = me4000_ai_ioctl_ext,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: drivers/staging/me4000/me4000.c:370:
+      .open = me4000_open,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#499: FILE: drivers/staging/me4000/me4000.c:371:
+      .release = me4000_release,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#509: FILE: drivers/staging/me4000/me4000.c:375:
+      .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: drivers/staging/me4000/me4000.c:376:
+      .read = me4000_ai_read,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#511: FILE: drivers/staging/me4000/me4000.c:377:
+      .poll = me4000_ai_poll,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#512: FILE: drivers/staging/me4000/me4000.c:378:
+      .ioctl = me4000_ai_ioctl_ext,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#513: FILE: drivers/staging/me4000/me4000.c:379:
+      .open = me4000_open,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#514: FILE: drivers/staging/me4000/me4000.c:380:
+      .release = me4000_release,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: drivers/staging/me4000/me4000.c:384:
+      .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#523: FILE: drivers/staging/me4000/me4000.c:385:
+      .ioctl = me4000_dio_ioctl,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#524: FILE: drivers/staging/me4000/me4000.c:386:
+      .open = me4000_open,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: drivers/staging/me4000/me4000.c:387:
+      .release = me4000_release,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: drivers/staging/me4000/me4000.c:391:
+      .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#534: FILE: drivers/staging/me4000/me4000.c:392:
+      .ioctl = me4000_cnt_ioctl,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#535: FILE: drivers/staging/me4000/me4000.c:393:
+      .open = me4000_open,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#536: FILE: drivers/staging/me4000/me4000.c:394:
+      .release = me4000_release,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#545: FILE: drivers/staging/me4000/me4000.c:398:
+      .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#546: FILE: drivers/staging/me4000/me4000.c:399:
+      .ioctl = me4000_ext_int_ioctl,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#547: FILE: drivers/staging/me4000/me4000.c:400:
+      .open = me4000_open,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#548: FILE: drivers/staging/me4000/me4000.c:401:
+      .release = me4000_release,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#549: FILE: drivers/staging/me4000/me4000.c:402:
+      .fasync = me4000_ext_int_fasync,$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ao_context)...) over kzalloc(sizeof(struct me4000_ao_context)...)
#677: FILE: drivers/staging/me4000/me4000.c:742:
+		ao_context = kzalloc(sizeof(struct me4000_ao_context),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#678: FILE: drivers/staging/me4000/me4000.c:743:
+		ao_context = kzalloc(sizeof(struct me4000_ao_context),
+								GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ai_context)...) over kzalloc(sizeof(struct me4000_ai_context)...)
#751: FILE: drivers/staging/me4000/me4000.c:886:
+		ai_context = kzalloc(sizeof(struct me4000_ai_context),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#752: FILE: drivers/staging/me4000/me4000.c:887:
+		ai_context = kzalloc(sizeof(struct me4000_ai_context),
+								GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dio_context)...) over kzalloc(sizeof(struct me4000_dio_context)...)
#774: FILE: drivers/staging/me4000/me4000.c:939:
+		dio_context = kzalloc(sizeof(struct me4000_dio_context),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#775: FILE: drivers/staging/me4000/me4000.c:940:
+		dio_context = kzalloc(sizeof(struct me4000_dio_context),
+								GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*cnt_context)...) over kzalloc(sizeof(struct me4000_cnt_context)...)
#797: FILE: drivers/staging/me4000/me4000.c:976:
+		cnt_context = kzalloc(sizeof(struct me4000_cnt_context),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#798: FILE: drivers/staging/me4000/me4000.c:977:
+		cnt_context = kzalloc(sizeof(struct me4000_cnt_context),
+								GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*board_info)...) over kzalloc(sizeof(struct me4000_info)...)
#842: FILE: drivers/staging/me4000/me4000.c:1040:
+	board_info = kzalloc(sizeof(struct me4000_info), GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#858: FILE: drivers/staging/me4000/me4000.c:1054:
+		printk(KERN_ERR "%s:Cannot get registers\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#866: FILE: drivers/staging/me4000/me4000.c:1061:
+		printk(KERN_ERR "%s:Cannot enable PCI device\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#874: FILE: drivers/staging/me4000/me4000.c:1068:
+		printk(KERN_ERR "%s:Cannot request I/O regions\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#882: FILE: drivers/staging/me4000/me4000.c:1075:
+		printk(KERN_ERR "%s:Cannot init baord info\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#890: FILE: drivers/staging/me4000/me4000.c:1082:
+		printk(KERN_ERR "%s:Can't download firmware\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#898: FILE: drivers/staging/me4000/me4000.c:1089:
+		printk(KERN_ERR "%s :Can't reset board\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#906: FILE: drivers/staging/me4000/me4000.c:1096:
+		printk(KERN_ERR "%s:Cannot allocate ao contexts\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#914: FILE: drivers/staging/me4000/me4000.c:1103:
+		printk(KERN_ERR "%s:Cannot allocate ai context\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#922: FILE: drivers/staging/me4000/me4000.c:1110:
+		printk(KERN_ERR "%s:Cannot allocate dio context\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#930: FILE: drivers/staging/me4000/me4000.c:1117:
+		printk(KERN_ERR "%s:Cannot allocate cnt context\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#985: FILE: drivers/staging/me4000/me4000.c:1185:
+		printk(KERN_ERR "%s:Can't init Xilinx\n", __func__);

WARNING:TYPO_SPELLING: 'succesful' may be misspelled - perhaps 'successful'?
#1006: FILE: drivers/staging/me4000/me4000.c:1222:
+		       "ME4000:%s:Download not succesful\n", __func__);
 		                               ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1053: FILE: drivers/staging/me4000/me4000.c:1326:
+			ao_context = list_entry(ptr, struct me4000_ao_context,
+									list);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1136: FILE: drivers/staging/me4000/me4000.c:1753:
+		wait_event_timeout(queue,
+			(inl(ao_context->status_reg) &

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1150: FILE: drivers/staging/me4000/me4000.c:1789:
+		wait_event_timeout(queue,
+			(inl(ao_context->status_reg) &

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1259: FILE: drivers/staging/me4000/me4000.c:2165:
+			wait_event_interruptible_timeout(queue,
+			!(inl(ao_context->status_reg) & ME4000_AO_STATUS_BIT_FSM),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1300: FILE: drivers/staging/me4000/me4000.c:2220:
+		    me4000_ao_simultaneous_update(

ERROR:CODE_INDENT: code indent should use tabs where possible
#1301: FILE: drivers/staging/me4000/me4000.c:2221:
+^I^I    ^I^I(struct me4000_ao_channel_list *)arg,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1301: FILE: drivers/staging/me4000/me4000.c:2221:
+^I^I    ^I^I(struct me4000_ao_channel_list *)arg,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1457: FILE: drivers/staging/me4000/me4000.c:2689:
+^I^I^I      ^I^I^I^I^I      + 16)))) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1457: FILE: drivers/staging/me4000/me4000.c:2689:
+^I^I^I      ^I^I^I^I^I      + 16)))) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1462: FILE: drivers/staging/me4000/me4000.c:2693:
+^I^I^I^I      ^I^I^I^I^Iindex));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1462: FILE: drivers/staging/me4000/me4000.c:2693:
+^I^I^I^I      ^I^I^I^I^Iindex));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1486: FILE: drivers/staging/me4000/me4000.c:2715:
+	err = copy_from_user(&channels, arg,
+			sizeof(struct me4000_ao_channel_list));

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1789: FILE: drivers/staging/me4000/me4000.c:3401:
+		       "%s:Invalid service number %d\n", __func__ , service);
 		                                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#2521: FILE: drivers/staging/me4000/me4000.h:435:
+	resource_size_t program_regbase;	// Base address to set the program pin for the xilinx

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2807: FILE: drivers/staging/me4000/me4000.h:889:
+#define ME4000_GET_USER_INFO          _IOR (ME4000_MAGIC, 0, \

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2807: FILE: drivers/staging/me4000/me4000.h:889:
+#define ME4000_GET_USER_INFO          _IOR (ME4000_MAGIC, 0, \
+					    struct me4000_user_info)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2817: FILE: drivers/staging/me4000/me4000.h:906:
+#define ME4000_AI_SINGLE              _IOR (ME4000_MAGIC, 14, \

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2817: FILE: drivers/staging/me4000/me4000.h:906:
+#define ME4000_AI_SINGLE              _IOR (ME4000_MAGIC, 14, \
+					    struct me4000_ai_single)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2827: FILE: drivers/staging/me4000/me4000.h:913:
+#define ME4000_AI_EX_TRIG_SETUP       _IOW (ME4000_MAGIC, 20, \

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2827: FILE: drivers/staging/me4000/me4000.h:913:
+#define ME4000_AI_EX_TRIG_SETUP       _IOW (ME4000_MAGIC, 20, \
+					    struct me4000_ai_trigger)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2829: FILE: drivers/staging/me4000/me4000.h:915:
+#define ME4000_AI_CONFIG              _IOW (ME4000_MAGIC, 21, \

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2829: FILE: drivers/staging/me4000/me4000.h:915:
+#define ME4000_AI_CONFIG              _IOW (ME4000_MAGIC, 21, \
+					    struct me4000_ai_config)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2831: FILE: drivers/staging/me4000/me4000.h:917:
+#define ME4000_AI_SC_SETUP            _IOW (ME4000_MAGIC, 22, \

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2831: FILE: drivers/staging/me4000/me4000.h:917:
+#define ME4000_AI_SC_SETUP            _IOW (ME4000_MAGIC, 22, \
+					    struct me4000_ai_sc)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2838: FILE: drivers/staging/me4000/me4000.h:921:
+#define ME4000_DIO_CONFIG             _IOW (ME4000_MAGIC, 24, \

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2838: FILE: drivers/staging/me4000/me4000.h:921:
+#define ME4000_DIO_CONFIG             _IOW (ME4000_MAGIC, 24, \
+					    struct me4000_dio_config)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2840: FILE: drivers/staging/me4000/me4000.h:923:
+#define ME4000_DIO_GET_BYTE           _IOR (ME4000_MAGIC, 25, \

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2840: FILE: drivers/staging/me4000/me4000.h:923:
+#define ME4000_DIO_GET_BYTE           _IOR (ME4000_MAGIC, 25, \
+					    struct me4000_dio_byte)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2842: FILE: drivers/staging/me4000/me4000.h:925:
+#define ME4000_DIO_SET_BYTE           _IOW (ME4000_MAGIC, 26, \

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2842: FILE: drivers/staging/me4000/me4000.h:925:
+#define ME4000_DIO_SET_BYTE           _IOW (ME4000_MAGIC, 26, \
+					    struct me4000_dio_byte)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2849: FILE: drivers/staging/me4000/me4000.h:929:
+#define ME4000_CNT_READ               _IOR (ME4000_MAGIC, 28, \

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2849: FILE: drivers/staging/me4000/me4000.h:929:
+#define ME4000_CNT_READ               _IOR (ME4000_MAGIC, 28, \
+					    struct me4000_cnt)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2851: FILE: drivers/staging/me4000/me4000.h:931:
+#define ME4000_CNT_WRITE              _IOW (ME4000_MAGIC, 29, \

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2851: FILE: drivers/staging/me4000/me4000.h:931:
+#define ME4000_CNT_WRITE              _IOW (ME4000_MAGIC, 29, \
+					    struct me4000_cnt)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2853: FILE: drivers/staging/me4000/me4000.h:933:
+#define ME4000_CNT_CONFIG             _IOW (ME4000_MAGIC, 30, \

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2853: FILE: drivers/staging/me4000/me4000.h:933:
+#define ME4000_CNT_CONFIG             _IOW (ME4000_MAGIC, 30, \
+					    struct me4000_cnt_config)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2864: FILE: drivers/staging/me4000/me4000.h:946:
+#define ME4000_AI_EEPROM_READ         _IOR (ME4000_MAGIC, 39, \

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2864: FILE: drivers/staging/me4000/me4000.h:946:
+#define ME4000_AI_EEPROM_READ         _IOR (ME4000_MAGIC, 39, \
+					    struct me4000_eeprom)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2866: FILE: drivers/staging/me4000/me4000.h:948:
+#define ME4000_AI_EEPROM_WRITE        _IOW (ME4000_MAGIC, 40, \

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2866: FILE: drivers/staging/me4000/me4000.h:948:
+#define ME4000_AI_EEPROM_WRITE        _IOW (ME4000_MAGIC, 40, \
+					    struct me4000_eeprom)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2873: FILE: drivers/staging/me4000/me4000.h:954:
+#define ME4000_AO_SIMULTANEOUS_UPDATE  _IOW (ME4000_MAGIC, 44, \

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2873: FILE: drivers/staging/me4000/me4000.h:954:
+#define ME4000_AO_SIMULTANEOUS_UPDATE  _IOW (ME4000_MAGIC, 44, \
+					     struct me4000_ao_channel_list)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000213737.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 26 errors, 91 warnings, 22 checks, 2663 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000213737.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
